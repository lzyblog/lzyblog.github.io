<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>小李博客</title>
  
  
  <link href="http://xiaoliblog.cn/atom.xml" rel="self"/>
  
  <link href="http://xiaoliblog.cn/"/>
  <updated>2021-01-16T10:35:36.303Z</updated>
  <id>http://xiaoliblog.cn/</id>
  
  <author>
    <name>小李博客</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>SQLServer📦数据查询</title>
    <link href="http://xiaoliblog.cn/2021/01/16/%E5%90%8E%E7%AB%AF/SQLServer%E6%95%B0%E6%8D%AE%E5%BA%93/SQLServer_%E6%95%B0%E6%8D%AE%E6%9F%A5%E8%AF%A2/"/>
    <id>http://xiaoliblog.cn/2021/01/16/%E5%90%8E%E7%AB%AF/SQLServer%E6%95%B0%E6%8D%AE%E5%BA%93/SQLServer_%E6%95%B0%E6%8D%AE%E6%9F%A5%E8%AF%A2/</id>
    <published>2021-01-16T10:34:28.351Z</published>
    <updated>2021-01-16T10:35:36.303Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Select查询语句"><a href="#Select查询语句" class="headerlink" title="Select查询语句"></a>Select查询语句</h1><h1 id="ANSI连接查询"><a href="#ANSI连接查询" class="headerlink" title="ANSI连接查询"></a>ANSI连接查询</h1>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Select查询语句&quot;&gt;&lt;a href=&quot;#Select查询语句&quot; class=&quot;headerlink&quot; title=&quot;Select查询语句&quot;&gt;&lt;/a&gt;Select查询语句&lt;/h1&gt;&lt;h1 id=&quot;ANSI连接查询&quot;&gt;&lt;a href=&quot;#ANSI连接查询&quot; cla</summary>
      
    
    
    
    <category term="Java后端" scheme="http://xiaoliblog.cn/categories/Java%E5%90%8E%E7%AB%AF/"/>
    
    <category term="SQLServer" scheme="http://xiaoliblog.cn/categories/Java%E5%90%8E%E7%AB%AF/SQLServer/"/>
    
    
    <category term="SQLServer" scheme="http://xiaoliblog.cn/tags/SQLServer/"/>
    
  </entry>
  
  <entry>
    <title>SQLServer📦表的创建与管理</title>
    <link href="http://xiaoliblog.cn/2021/01/15/%E5%90%8E%E7%AB%AF/SQLServer%E6%95%B0%E6%8D%AE%E5%BA%93/SQLServer_%E8%A1%A8%E7%9A%84%E5%88%9B%E5%BB%BA%E4%B8%8E%E7%AE%A1%E7%90%86/"/>
    <id>http://xiaoliblog.cn/2021/01/15/%E5%90%8E%E7%AB%AF/SQLServer%E6%95%B0%E6%8D%AE%E5%BA%93/SQLServer_%E8%A1%A8%E7%9A%84%E5%88%9B%E5%BB%BA%E4%B8%8E%E7%AE%A1%E7%90%86/</id>
    <published>2021-01-15T09:21:43.515Z</published>
    <updated>2021-01-16T10:31:33.650Z</updated>
    
    <content type="html"><![CDATA[<h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><div class="note success flat"><p>表是数据库对象，用于存储 <code>实体</code>和<code> 实体间的联系</code></p></div><ul><li><p><strong>表的构成</strong><br>  列：每一列用来保存对象的属性，也称为<code>字段</code><br>  行：每一行用来保存对象的元组，也称为 <code>数据行</code> 或<code> 记录</code></p></li><li><p><strong>表的完整性约束</strong></p></li></ul><div class="tabs" id="test2"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test2-1">实体完整性约束</button></li><li class="tab"><button type="button" data-href="#test2-2">域完整性约束</button></li><li class="tab"><button type="button" data-href="#test2-3">参照完整性</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test2-1"><ul><li>主键：Primary Key</li><li>唯一键：Unique</li><li>标识列：Identity Column</li><li>唯一索引：Unique Index</li><li>非空：NOT NULL</li></ul><div class="note success flat"><p>保证表的正确性</p></div><button type="button" class="tab-to-top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test2-2"><ul><li>数据类型：Data Type</li><li>默认值：Default</li><li>检查：Check</li><li>外键：Foreign Key</li><li>空或非空：UNLL/NOT NULL</li></ul><div class="note success flat"><p>保证表的每列数据正确性(在特定允许范围内)</p></div><button type="button" class="tab-to-top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test2-3"><ul><li>外键：Foreign Key</li></ul><div class="note success flat"><p>保证表之间的数据一致性</p></div><button type="button" class="tab-to-top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="T-SQL数据类型"><a href="#T-SQL数据类型" class="headerlink" title="T-SQL数据类型"></a>T-SQL数据类型</h1><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@96600b72213d606bd80eb00e6cf9e9cc0b3715b4/2021/01/16/dc7e16d4d86d2d587dd96c280581fac7.png"></p><h1 id="T-SQL创建表"><a href="#T-SQL创建表" class="headerlink" title="T-SQL创建表"></a>T-SQL创建表</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> 表名 </span><br><span class="line">(</span><br><span class="line">列名<span class="number">1</span>  数据类型 列级完整性约束,</span><br><span class="line"> 列名<span class="number">2</span>  数据类型 列级完整性约束,</span><br><span class="line">… …</span><br><span class="line">列名n  数据类型 列级完整性约束,</span><br><span class="line">表级完整性约束<span class="number">1</span>,</span><br><span class="line">… …</span><br><span class="line">表级完整性约束n</span><br><span class="line">)</span><br></pre></td></tr></table></figure><div class="tabs" id="test3"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test3-1">列级完整性约束</button></li><li class="tab"><button type="button" data-href="#test3-2">表级完整性约束</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test3-1"><ul><li>DEFAULT 常量表达式：默认值约束 </li><li>NULL / NOT NULL ：空值/非空值约束 </li><li>UNIQUE：唯一键约束 </li><li>PRIMARY KEY：主键约束（等价非空和单值约束）</li><li>REFERENCES 父表名（主键）：外键约束 </li><li>CHECK( 逻辑表达式)：检查约束</li><li>IDENTITY：标识列 </li></ul><button type="button" class="tab-to-top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test3-2"><ul><li>UNIQUE( 列名1,  列名2, …,  列名n)： <code>多个列名</code>唯一键约束。</li><li>PRIMARY KEY( 列名1,  列名2, …,  列名n)： <code>多个列名</code> 组合主键约束。</li><li>FOREIGN KEY( 外键) REFERENCES  主键表( 主键)：<code>多个列名 </code>组合外键约束。</li><li>CHECK( 逻辑表达式）：含有<code>多个列名</code>逻辑表达式的检查约束</li></ul><button type="button" class="tab-to-top"><i class="fas fa-arrow-up"></i></button></div></div></div><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">USE</span> <span class="keyword">Library</span></span><br><span class="line"><span class="keyword">GO</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> ReaderType   <span class="comment">--创建读者类型表&quot;ReaderType&quot;</span></span><br><span class="line">(TypeID <span class="built_in">int</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> PRIMARY <span class="keyword">KEY</span>,<span class="comment">-- 读者类型编号，主键</span></span><br><span class="line">Typename <span class="built_in">char</span>(<span class="number">8</span>) <span class="literal">NULL</span>,  <span class="comment">-- 读者类型名称</span></span><br><span class="line">LimitNum <span class="built_in">int</span> <span class="literal">NULL</span>, <span class="comment">-- 限借数量</span></span><br><span class="line">LimitDays <span class="built_in">int</span> <span class="literal">NULL</span>  <span class="comment">-- 限借天数</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> Reader  <span class="comment">--创建读者表&quot;Reader&quot;</span></span><br><span class="line">(</span><br><span class="line"><span class="comment">/************* 列级定义和约束 *************/</span> </span><br><span class="line">RID <span class="built_in">char</span>(<span class="number">10</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> PRIMARY <span class="keyword">KEY</span>, <span class="comment">-- 读者编号，主键</span></span><br><span class="line">Rname <span class="built_in">char</span>(<span class="number">8</span>) <span class="literal">NULL</span>,  <span class="comment">-- 读者姓名</span></span><br><span class="line">TypeID <span class="built_in">int</span> <span class="literal">NULL</span>, <span class="comment">-- 读者类型</span></span><br><span class="line">Lendnum <span class="built_in">int</span> <span class="literal">NULL</span>,  <span class="comment">-- 已借数量</span></span><br><span class="line"><span class="comment">/************* 表级定义和约束 *************/</span> /</span><br><span class="line"><span class="keyword">FOREIGN</span> <span class="keyword">KEY</span>(TypeID) <span class="keyword">REFERENCES</span></span><br><span class="line">ReaderType(TypeID) <span class="keyword">ON</span> <span class="keyword">DELETE</span> <span class="keyword">NO</span> <span class="keyword">ACTION</span> <span class="comment">-- 外键，不级联删除</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> Book  <span class="comment">--创建图书表&quot;Book&quot;</span></span><br><span class="line">(BID <span class="built_in">char</span>(<span class="number">13</span>) PRIMARY <span class="keyword">KEY</span>,  <span class="comment">-- 图书编号，主键</span></span><br><span class="line">Bname <span class="built_in">varchar</span>(<span class="number">42</span>) <span class="literal">NULL</span>, <span class="comment">-- 书名</span></span><br><span class="line">Author <span class="built_in">varchar</span>(<span class="number">20</span>) <span class="literal">NULL</span>, <span class="comment">-- 作者</span></span><br><span class="line">Publisher <span class="built_in">varchar</span>(<span class="number">28</span>) <span class="literal">NULL</span>, <span class="comment">-- 出版社</span></span><br><span class="line">Price <span class="built_in">decimal</span>(<span class="number">7</span>,<span class="number">2</span>) <span class="literal">NULL</span> <span class="keyword">CHECK</span> (Price&gt;<span class="number">0</span>) , <span class="comment">-- 定价，检查约束</span></span><br><span class="line">LentOut <span class="built_in">bit</span>    <span class="comment">--是否借出</span></span><br></pre></td></tr></table></figure><h1 id="T-SQL修改表"><a href="#T-SQL修改表" class="headerlink" title="T-SQL修改表"></a>T-SQL修改表</h1><ul><li>修改 列属性或约束</li><li>添加 列或约束</li><li>删除 列或约束</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 表名</span><br><span class="line">(<span class="keyword">ALTER</span> <span class="keyword">COLUMN</span>  列名 列定义 <span class="comment">--修改列定义或约束 </span></span><br><span class="line">|<span class="keyword">ADD</span> &#123;列名 数据类型 约束|<span class="keyword">CONSTRAINT</span>  约束名&#125;[,...n]</span><br><span class="line"><span class="comment">--增加新的列或约束 </span></span><br><span class="line">|<span class="keyword">DROP</span>&#123;<span class="keyword">COLUMN</span> 列名|<span class="keyword">CONSTRAINT</span>  约束名&#125;[,...n]</span><br><span class="line"><span class="comment">--删除已有的列或约束 </span></span><br><span class="line">…  …</span><br><span class="line">)</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*表Book中“Publisher ”的类型“varchar(28)”改为“varchar(30)”，且不能为空*/</span></span><br><span class="line"><span class="keyword">USE</span> <span class="keyword">Library</span></span><br><span class="line"><span class="keyword">GO</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> Book</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">COLUMN</span> Publisher <span class="built_in">varchar</span>(<span class="number">30</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>  <span class="comment">--修改列定义</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*为表“Reader”添加邮件地址列和约束。*/</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> Reader</span><br><span class="line"><span class="keyword">ADD</span> Email <span class="built_in">varchar</span>(<span class="number">20</span>) <span class="literal">NULL</span> <span class="comment">-- 添加列</span></span><br><span class="line"><span class="keyword">GO</span></span><br><span class="line"><span class="comment">/* 此处的GO 必不可少，必须上一句添加列完成之后，才能在下句中为其添加CHECK 约束*/</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> Reader</span><br><span class="line"><span class="keyword">ADD</span> <span class="keyword">CONSTRAINT</span> Price_check <span class="keyword">CHECK</span>(Price&gt;<span class="number">30</span> <span class="keyword">and</span> Price&lt;<span class="number">90</span>)  <span class="comment">--添加约束</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*删除“Reader ”中的“Email”的约束和列*/</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> Reader</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">CONSTRAINT</span> Price_check , <span class="keyword">COLUMN</span> Email  <span class="comment">--删除约束和列</span></span><br></pre></td></tr></table></figure><h1 id="T-SQL删除表"><a href="#T-SQL删除表" class="headerlink" title="T-SQL删除表"></a>T-SQL删除表</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> 表名</span><br></pre></td></tr></table></figure><h1 id="T-SQL操作表数据"><a href="#T-SQL操作表数据" class="headerlink" title="T-SQL操作表数据"></a>T-SQL操作表数据</h1><h2 id="添加数据行"><a href="#添加数据行" class="headerlink" title="添加数据行"></a>添加数据行</h2><ul><li><strong>INSERT…VALUES</strong><br>每次添加一行</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> [<span class="keyword">INTO</span>] 表名 [( 列名表)] <span class="keyword">VALUES</span>(常量表)</span><br></pre></td></tr></table></figure><p>列名表用于指定该数据表的列名 ，可以指定一列或多列 ， 顺序可以与表的列顺序不同 。 在数据表中未被指定的列必须支持空值或者默认值 ， 如果默认值存在 ， 该列使用默认值 ，否则 SQLServer会尝试为该列补上一个空值 。<br>常量表用于提供向表中插入的值 ， 常量表中提供的数据与列名表指定的列名个数 、 数据类型和顺序必须一致 。<br>当常量表中提供的数据与表定义的列在个数和顺序上完全一致时 ， 列名表可以省略 </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*为表“ 为表“ReaderType ”添加数据行*/</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> ReaderType <span class="keyword">VALUES</span>(<span class="number">1</span>, <span class="string">&#x27; 教师&#x27;</span>, <span class="number">6</span>, <span class="number">90</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> ReaderType <span class="keyword">VALUES</span>(<span class="number">2</span>, <span class="string">&#x27; 职员&#x27;</span>, <span class="number">4</span>, <span class="number">60</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> ReaderType <span class="keyword">VALUES</span>(<span class="number">3</span>, <span class="string">&#x27; 学生&#x27;</span>, <span class="number">3</span>, <span class="number">30</span>);</span><br></pre></td></tr></table></figure><ul><li><strong>INSERT..SELECT</strong><br>每次添加若干行</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> 表名  <span class="keyword">SELECT</span> 子查询</span><br></pre></td></tr></table></figure><p>SELECT查询子句用于指定输入表的值 ，通过SELECT查询生成结果集 ,并将其添加到INSERT后指定表中 。<br>此语句可以将其他数据源的行添加到现有的表中 。 必须保证接收新值的表中列的数据类型与源表中相应列的数据类型一致 。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*将图书表“ 将图书表“Book”中人民邮电出版社出版的图书添加到新建的表“BookPostTel”中。*/</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> BookPostTel</span><br><span class="line">(BID <span class="built_in">char</span>(<span class="number">13</span>) PRIMARY <span class="keyword">KEY</span>, <span class="comment">--图书编号，主键</span></span><br><span class="line">Bname <span class="built_in">varchar</span>(<span class="number">42</span>) <span class="literal">NULL</span>, <span class="comment">--书名</span></span><br><span class="line">Author <span class="built_in">varchar</span>(<span class="number">20</span>) <span class="literal">NULL</span>, <span class="comment">--作者 </span></span><br><span class="line">Publisher <span class="built_in">varchar</span>(<span class="number">28</span>) <span class="literal">NULL</span>,  <span class="comment">--出版社 </span></span><br><span class="line">Price <span class="built_in">decimal</span>(<span class="number">7</span>,<span class="number">2</span>) <span class="literal">NULL</span> <span class="keyword">CHECK</span> (Price&gt;<span class="number">0</span>)) <span class="comment">-- 定价,检查约束 </span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">/*） 将图书表“Book”中“人民邮电出版社”出版的图书添加到新建的“ BookPostTel”表*/</span></span><br><span class="line"><span class="keyword">INSERT</span> BookPostTel</span><br><span class="line"><span class="keyword">SELECT</span> BID, Bname, Author, Publisher, Price</span><br><span class="line"><span class="keyword">FROM</span> Book</span><br><span class="line"><span class="keyword">WHERE</span> Publisher = <span class="string">&#x27;人民邮电出版社`</span></span><br></pre></td></tr></table></figure><h2 id="更新数据"><a href="#更新数据" class="headerlink" title="更新数据"></a>更新数据</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> 表名 </span><br><span class="line"><span class="keyword">SET</span> 列名<span class="number">1</span> ＝表达式<span class="number">1</span>, … , 列名n ＝表达式n</span><br><span class="line">[<span class="keyword">WHERE</span> 逻辑表达式]</span><br></pre></td></tr></table></figure><p> 对于UPDATE所指定的表  ，当满足WHERE子句后的条件 （ 逻辑表达式为真 ） 时 ，SET子句为指定的列名赋上 “=” 号后表达式的值 </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*将读者类型表“ReaderType ”中,学生的原限借数 “3 ”增加2 本，原限借天数“30 ”增加5天*/</span></span><br><span class="line"><span class="keyword">USE</span> <span class="keyword">Library</span></span><br><span class="line"><span class="keyword">GO</span></span><br><span class="line"><span class="keyword">UPDATE</span> ReaderType</span><br><span class="line"><span class="keyword">SET</span> LimitNum = LimitNum + <span class="number">2</span>, LimitDays = LimitDays + <span class="number">5</span></span><br><span class="line"><span class="keyword">WHERE</span> Typename = <span class="string">&#x27; 学生&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="删除数据"><a href="#删除数据" class="headerlink" title="删除数据"></a>删除数据</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DELETE</span> 表名 </span><br><span class="line">[ <span class="keyword">WHERE</span> 逻辑表达式 ]</span><br></pre></td></tr></table></figure><p>删除表中符合WHERE子句指定条件的数据行 。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 删除表“BookPostTel”中作者周慧的图书信息*/</span></span><br><span class="line"><span class="keyword">USE</span> <span class="keyword">Library</span></span><br><span class="line"><span class="keyword">DELETE</span> BookPostTel</span><br><span class="line"><span class="keyword">WHERE</span> Author = <span class="string">&#x27;周慧&#x27;</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*删除表“BookPostTel”中所有图书信息*/</span></span><br><span class="line"><span class="keyword">USE</span> <span class="keyword">Library</span></span><br><span class="line"><span class="keyword">DELETE</span> BookPostTel</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h1&gt;&lt;div class=&quot;note success flat&quot;&gt;&lt;p&gt;表是数据库对象，用于存储 &lt;code&gt;实体&lt;/code&gt;和&lt;code&gt; 实体间</summary>
      
    
    
    
    <category term="Java后端" scheme="http://xiaoliblog.cn/categories/Java%E5%90%8E%E7%AB%AF/"/>
    
    <category term="SQLServer" scheme="http://xiaoliblog.cn/categories/Java%E5%90%8E%E7%AB%AF/SQLServer/"/>
    
    
    <category term="SQLServer" scheme="http://xiaoliblog.cn/tags/SQLServer/"/>
    
  </entry>
  
  <entry>
    <title>SQLServer📦数据库创建与管理</title>
    <link href="http://xiaoliblog.cn/2021/01/15/%E5%90%8E%E7%AB%AF/SQLServer%E6%95%B0%E6%8D%AE%E5%BA%93/SQLServer_%E6%95%B0%E6%8D%AE%E5%BA%93%E5%88%9B%E5%BB%BA%E4%B8%8E%E7%AE%A1%E7%90%86/"/>
    <id>http://xiaoliblog.cn/2021/01/15/%E5%90%8E%E7%AB%AF/SQLServer%E6%95%B0%E6%8D%AE%E5%BA%93/SQLServer_%E6%95%B0%E6%8D%AE%E5%BA%93%E5%88%9B%E5%BB%BA%E4%B8%8E%E7%AE%A1%E7%90%86/</id>
    <published>2021-01-15T08:25:10.759Z</published>
    <updated>2021-01-15T09:21:20.275Z</updated>
    
    <content type="html"><![CDATA[<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><div class="note success flat"><p>👉👉👉<a href="https://www.liaoxuefeng.com/wiki/1177760294764384">SQL教程</a>||<a href="https://www.vxzsk.com/1393.html">MySql教程</a>||<a href="https://mooc1-1.chaoxing.com/mycourse/studentcourse?courseId=208834778&clazzid=17896696&enc=c000d7dfede85a60c5e4532781b84728&cpi=70838077&vc=1">数据库课程设计</a></p></div><h1 id="数据库概述"><a href="#数据库概述" class="headerlink" title="数据库概述"></a>数据库概述</h1><ul><li><p><strong>数据库（DataBase ，DB ）</strong></p><ol><li>数据的“仓库”<br>数据库可以<code> 存储</code> 数据，数据库是 <code>数据库对象</code> 的容器 ；<br>数据库 以<code> 操作系统文件的形式</code> 存储在磁盘上；</li><li>数据库能够使数据<code> 存储和检索</code> 以安全可靠的方式进行</li></ol></li><li><p><strong>数据库的分类</strong></p><ol><li>系统数据库</li><li>示例数据库</li><li>用户数据库</li></ol></li><li><p><strong>数据库文件</strong><br>  数据库文件与普通的磁盘文件没有什么不同一个数据库会拥有<code>至少 2 个 </code>数据库文件： 一个是为了<code>存放数据</code> ， 另一个 是为了<code>存放日志</code> 。</p></li></ul><div class="tabs" id="t1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#t1-1">主要数据文件</button></li><li class="tab"><button type="button" data-href="#t1-2">次要数据文件</button></li><li class="tab"><button type="button" data-href="#t1-3">事务日志文件</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="t1-1"><p>包含数据库的启动信息 、 数据库中其他文件的指针 、数据库级别的一些关键记录 关键记录(如：访问账 如：访问账户；权限设定；数据库共有多少个数据文件、日志文件、存放路径 日志文件、存放路径) 等 </p><div class="note warning flat"><p>每个数据库 <code>有且仅有一个 主数据文件</code><br>扩展名为<code>mdf</code>（Primary Database File）</p></div><button type="button" class="tab-to-top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="t1-2"><p>辅助数据文件，存储主要数据文件未存储的其他数据和对象</p><div class="note warning flat"><p>可以没有，也可以有多个<br>为 扩展名为 <code>ndf</code> （Secondary Database Files ）</p></div><button type="button" class="tab-to-top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="t1-3"><p>保存日志信息，以便用于恢复和跟踪数据库日志文件用于记录所有事务以及每个事务对数据库所做的修改。当数据库出现问题后，管理人员可以使用日志文件恢复数据库。</p><ul><li>每个数据库至少有一个日志文件，也可以有多个</li><li>最小为1MB （SQLServer2005 是512M） ）</li><li><code>建议放在与数据文件不同的存储器上</code></li><li>扩展名为<code>ldf </code>（ Log Database Files ） </li></ul><button type="button" class="tab-to-top"><i class="fas fa-arrow-up"></i></button></div></div></div><ul><li><p><strong>数据库文件组</strong><br>为了便于分配和管理，SQL Server 允许将多个 允许将多个数据库文件 （不同的磁盘）划分为一个文件集合，并用一个名称表示这一文件集合，即<code> 文件组</code><br>与数据库文件一样，文件组也分为 主要文件组 （Primary File Group）  和 次要文件组 （Secondary File Group）<br><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@5901ab03e3556d2744d52ee74226ee9b2a725621/2021/01/15/8ecb54b4ad0632bc92b852ccf6daf8f6.png"></p></li><li><p><strong>数据库对象</strong><br>数据库中所有被 存储、管理和使用 的 数据的不同结构形式</p></li><li><p>主要数据库对象： 数据库、关系图 、 表 、 键 、 约束 、 索引 、 视图 、 存储过程 、 触发器 、用户定义函数 、 用户和角色</p></li><li><p>组织结构： 节点构成树形逻辑结构</p></li><li><p><strong>数据库对象的命名</strong></p><ul><li>规则标识符（不带界定符）<br>字母、数字、下划线、 字母、数字、下划线、@ 、＃和美元符号组成<br>首字符不能为 <code>数字</code>和 <code>美元符号 </code><br>标识符不允许是T-SQL的保留字<br>标识符内不允许有 <code> 空格</code> 和 <code>特殊字符</code><br>长度小于128<br>例如： 例如：book_num </li><li>界定标识符<br>标识符中包含了SQL Server关键字或者包含了内嵌的空格和其他不是规则规定的字符，则要使用界定符<br>界定符号 [  和 ]<br>界定符号 “ 和 “<br>例如： “ book num ” 、 [1班刘德华]  、[select]</li></ul></li></ul><h1 id="T-SQL操作数据库"><a href="#T-SQL操作数据库" class="headerlink" title="T-SQL操作数据库"></a>T-SQL操作数据库</h1><ul><li>SQL （Structured Query Language）<br>结构化查询语言，是目前最为广泛使用的 结构化查询语言，是目前最为广泛使用的<code> 关系数据库标准</code>语言</li></ul><h2 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> <span class="keyword">Library</span> <span class="comment">-- 数据库名称</span></span><br><span class="line"><span class="keyword">ON</span> PRIMARY <span class="comment">-- 在主要文件组中建立主要数据文件</span></span><br><span class="line">(<span class="keyword">NAME</span>=<span class="keyword">Library</span>,  <span class="comment">-- 逻辑文件名</span></span><br><span class="line">FILENAME=<span class="string">&#x27;D:\ 图书管理数据\Library.mdf&#x27;</span>, <span class="comment">-- 物理文件路径和名字</span></span><br><span class="line"><span class="keyword">SIZE</span>=<span class="number">3</span>,  <span class="comment">-- 初始大小3MB</span></span><br><span class="line"><span class="keyword">MAXSIZE</span>=<span class="number">20</span>GB, <span class="comment">-- 最大容量为20GB</span></span><br><span class="line">FILEGROWTH = <span class="number">10</span>% <span class="comment">-- 增长速度为10%</span></span><br><span class="line">)</span><br><span class="line"><span class="keyword">LOG</span> <span class="keyword">ON</span> <span class="comment">-- 创建事务日志文件</span></span><br><span class="line">(<span class="keyword">NAME</span>=Library_log,  <span class="comment">-- 逻辑文件名</span></span><br><span class="line">FILENAME=<span class="string">&#x27;E:\ 图书管理日志\Library_log.ldf&#x27;</span>,<span class="comment">-- 物理文件路径和名字</span></span><br><span class="line"><span class="keyword">SIZE</span>=<span class="number">1</span>,  <span class="comment">-- 初始大小1MB</span></span><br><span class="line"><span class="keyword">MAXSIZE</span>=<span class="number">300</span>,  <span class="comment">-- 最大容量为600MB</span></span><br><span class="line">FILEGROWTH=<span class="number">10</span>%  <span class="comment">-- 增长速度为10%</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><ul><li><code>数据库名</code>： 在SQL Server中创建数据库的名称</li><li><code>ON</code>： 指明主要数据文件、次要数据文件和文件组的明确定义。</li><li><code>PRIMARY</code>： 该参数用于指定在其后的主要数据文件（默认第一个文件）和次要数据文件创建在主要文件组中。</li><li><code>FILEGROUP</code>： 该参数用于指明要创建的次要文件组，并在其后指定要创建在其中的次要数据文件。</li><li><code>LOG ON</code>：  指明事务日志文件的明确定义。如果没有此定义，系统会自动创建一个为所有数据文件总和 25% 大小或512KB大小的事务日志文件。</li></ul><h2 id="修改数据库"><a href="#修改数据库" class="headerlink" title="修改数据库"></a>修改数据库</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">DATABASE</span> &lt; 数据库名&gt;</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">ADD</span> <span class="keyword">FILE</span> &lt; 数据文件&gt; [, . . .,n] [<span class="keyword">TO</span> FILEGROUP  文件组名]</span><br><span class="line">|<span class="keyword">ADD</span> <span class="keyword">LOG</span> <span class="keyword">FILE</span> &lt; 事务日志文件&gt; [, . . .,n]</span><br><span class="line">|<span class="keyword">ADD</span> FILEGROUP 文件组名</span><br><span class="line"></span><br><span class="line">|REMOVE <span class="keyword">FILE</span> 逻辑文件名</span><br><span class="line">|REMOVE FILEGROUP 文件组名</span><br><span class="line"></span><br><span class="line">|<span class="keyword">MODIFY</span> <span class="keyword">FILE</span> &lt; 数据文件&gt; <span class="comment">--- 修改数据库文件属性</span></span><br><span class="line">|<span class="keyword">MODIFY</span> FILEGROUP 文件组名 <span class="comment">--- 修改文件组属性</span></span><br><span class="line">&#123;<span class="keyword">name</span>=new_filegroup_name | filegroup_property&#125;</span><br><span class="line">| <span class="keyword">MODIFY</span> <span class="keyword">NAME</span> =  新数据库名 <span class="comment">--- 修改数据库文件名</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>ADD FILE&lt; 数据文件&gt; [, . . .,n] [TO FILEGROUP  文件组名]：添加 ：添加数据文件到文件组。</li><li>ADD LOG FILE &lt; 事务日志文件&gt; [, . . . ,n]：添加事务日志文件。 </li><li>ADD FILEGROUP 文件组名：添加文件组。 </li><li>REMOVE FILE 逻辑文件名：删除逻辑文件（次要数据文件）。 </li><li>REMOVE FILEGROUP 文件组名：删除文件组（次要文件组）。 </li><li>MODIFY FILE &lt; 数据文件&gt;：修改数据库文件属性。</li><li>MODIFY NAME = 新数据文件名：修改数据库文件名。</li><li>MODIFY FILEGROUP 文件组名：修改文件组属性。</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--添加文件组“Library_Group”</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">DATABASE</span> <span class="keyword">Library</span></span><br><span class="line"><span class="keyword">ADD</span> FILEGROUP Library_Group</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--将一个新的数据文件&quot;Library_data2&quot; 添加到&quot;Library_Group&quot;</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">DATABASE</span> <span class="keyword">Library</span></span><br><span class="line"><span class="keyword">ADD</span> <span class="keyword">FILE</span>        <span class="comment">--添加次要数据文件</span></span><br><span class="line">(<span class="keyword">NAME</span>=Library_data2,</span><br><span class="line">FILENAME=<span class="string">&quot;D:\图书管理数据\Library_data2.ndf&quot;</span>,</span><br><span class="line"><span class="keyword">SIZE</span>=<span class="number">1</span>MB,</span><br><span class="line"><span class="keyword">MAXSIZE</span>=<span class="keyword">UNLIMITED</span>,</span><br><span class="line">FILEGROWTH=<span class="number">1</span>MB)</span><br><span class="line"><span class="keyword">TO</span> FILEGROUP Library_Group</span><br><span class="line"><span class="comment">--添加到次要文件组Library_GROUP</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 将次要数据文件&quot;Library_data2&quot;和次要文件组&quot;Library_Group&quot;从Library数据库中删除</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">DATABASE</span> <span class="keyword">Library</span></span><br><span class="line">REMOVE <span class="keyword">FILE</span> Library_data2   <span class="comment">--删除次要数据文件</span></span><br><span class="line"><span class="keyword">GO</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">DATABASE</span> <span class="keyword">Library</span></span><br><span class="line">REMOVE FILEGROUP Library_Group  <span class="comment">--删除次要文件组</span></span><br></pre></td></tr></table></figure><h2 id="删除数据库"><a href="#删除数据库" class="headerlink" title="删除数据库"></a>删除数据库</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">DATABASE</span> &lt;数据库名&gt;</span><br></pre></td></tr></table></figure><h1 id="分离和附加数据库"><a href="#分离和附加数据库" class="headerlink" title="分离和附加数据库"></a>分离和附加数据库</h1><ul><li><p><strong>附加和分离数据库</strong>：<br>可以切断数据库的使用 (比如当数据库日志很大占用了空间时，可以用分离数据库的方法来切断数据库，从而删除以前的数据库日志，来节省空间）。</p></li><li><p><strong>分离数据库</strong><br>分离数据库就是将某个数据库（如student_Mis）从SQL Server数据库列表中删除，使其不再被SQL Server管理和使用，但该数据库的文件（.MDF）和对应的日志文件（.LDF）完好无损。分离成功<br>后，我们就可以把该数据库文件（.MDF）和对应的日志文件（.LDF）拷贝到其它磁盘中作为备份保存</p></li></ul><div class="note warning flat"><p>只有分离了的数据库文件才能进行操作系统下的物理转移、复制、删除</p></div><ul><li><strong>附加数据库</strong><br>附加数据库就是将一个备份磁盘中的数据库文件（.MDF）和对应的日志文件（.LDF）拷贝到需要的计算机，并将其添加到某个SQLServer数据库服务器中，由该服务器来管理和使用这个数据库</li></ul><h2 id="分离数据库"><a href="#分离数据库" class="headerlink" title="分离数据库"></a>分离数据库</h2><ul><li><p>确保没有任何用户登录到数据库中</p></li><li><p>在 【 对象资源管理器 】 窗口中，展开 “ 数据库 ” 节点，右键需要分离的数据库，快捷菜单 “ 任务” —“分离“<br><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@f8cf5b482599c7a36360c5c5dc72add19084d76c/2021/01/15/d8d54a72450770c92f955edd7463862d.png"></p></li><li><p>打开的 【 分离数据库 】 对话框的 “ 数据库名称 ” 栏中显示了所选数据库的名称<br><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@9378b92e2e61b024a2cc71453a81e26cbb280a3d/2021/01/15/f45c660eceff38a639652a86b19fea0f.png"></p></li></ul><h2 id="附加数据库"><a href="#附加数据库" class="headerlink" title="附加数据库"></a>附加数据库</h2><ul><li><p>在 【 对象资源管理器 】 窗口中，用右键单击“数据库”节点，快捷菜单中选择“附加”命令<br><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@41362028dfcdfb689b8eebc38bd71ab46dcb41a0/2021/01/15/cf26066092559dfa39c9ad38ba0faf60.png"></p></li><li><p>在打开的 【 附加数据库 】 窗口中，单击“添加”按钮，会弹出 【 定位数据库文件 】 窗口，选择数据库所在的磁盘驱动器并展开目录树定位到数据库的 据库的.mdf  文件，如D:\ 教务管理数据文件\EDUC.mdf<br><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@c5f4b355da3ab2bf680e3e7fb04e0c0f6fbbcb27/2021/01/15/6b2f90cddf988765c73e5193a861d618.png"></p></li><li><p>单击 【 定位数据库文件 】 对话框的“确定”按钮，回到 【 附加数据库 】 窗口。可以为附加的数据库指定不同的名称和物理位置等<br><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@85fdf3a0f53236a66993c7a8696654bcc34810e8/2021/01/15/0426095803490dda4a015998d8b3ca87.png"></p></li><li><p>设置完毕后，单击“确定”按钮。数据库引擎将执行附加数据库任务。如果附加成功，在 【 对象资源管理器 】 中将会出现被附加的数据库。<br><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@c45f3fc9bc66d0c8e1500fb9c240238b57738389/2021/01/15/99ac5ffb5d30ef273a6f861714199ddd.png"></p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;参考&quot;&gt;&lt;a href=&quot;#参考&quot; class=&quot;headerlink&quot; title=&quot;参考&quot;&gt;&lt;/a&gt;参考&lt;/h1&gt;&lt;div class=&quot;note success flat&quot;&gt;&lt;p&gt;👉👉👉&lt;a href=&quot;https://www.liaoxuefeng.</summary>
      
    
    
    
    <category term="Java后端" scheme="http://xiaoliblog.cn/categories/Java%E5%90%8E%E7%AB%AF/"/>
    
    <category term="SQLServer" scheme="http://xiaoliblog.cn/categories/Java%E5%90%8E%E7%AB%AF/SQLServer/"/>
    
    
    <category term="SQLServer" scheme="http://xiaoliblog.cn/tags/SQLServer/"/>
    
  </entry>
  
  <entry>
    <title>操作系统⚡I/O管理</title>
    <link href="http://xiaoliblog.cn/2021/01/15/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F_IO%E7%AE%A1%E7%90%86/"/>
    <id>http://xiaoliblog.cn/2021/01/15/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F_IO%E7%AE%A1%E7%90%86/</id>
    <published>2021-01-15T05:20:22.922Z</published>
    <updated>2021-01-15T05:21:01.431Z</updated>
    
    <content type="html"><![CDATA[<h1 id="I-O管理"><a href="#I-O管理" class="headerlink" title="I/O管理"></a>I/O管理</h1><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/841fa902a42c4e677331af7912ad4fde.png"></p><h2 id="I-O设备分类"><a href="#I-O设备分类" class="headerlink" title="I/O设备分类"></a>I/O设备分类</h2><ul><li><p>按使用特性分类</p><ol><li>人机交互类外设<br>鼠标、键盘、打印机等等，传输速度慢</li><li>存储类<br>移动硬盘、光盘等，传输速度块</li><li>物理通信设备<br>调制解调器等，速度一般</li></ol></li><li><p>按传输速度分类</p><ol><li>低速设备<br>鼠标、键盘等，每秒几百字节</li><li>中速设备<br>激光打印机等，每秒数千到上万字节</li><li>高速设备<br>磁盘等，每秒数千至千兆字节</li></ol></li><li><p>按信息交换的单位</p><ol><li>块设备<br>如磁盘等，传输数据块，可寻址（随机读写）</li><li>字符设备<br>鼠标键盘，传输字符，不可寻址，输入输出采用中断驱动方式</li></ol></li></ul><h2 id="I-O控制器"><a href="#I-O控制器" class="headerlink" title="I/O控制器"></a>I/O控制器</h2><ul><li><p><strong>机械部件</strong><br>执行具体的I/O操作，比如鼠标键盘的按钮，显示器的屏幕，移动硬盘的磁臂</p></li><li><p><strong>电子部件</strong><br>  CPU和机械部件的中介，通常是插入主板的电路板<br>  又叫I/O控制器，设备控制器</p><ol><li><strong>接受和识别CPU的命令</strong><br>控制寄存器保存命令和参数</li><li><strong>向CPU报告设备状态</strong><br>状态寄存器记录设备状态，如：1表示空闲，0表示忙碌</li><li><strong>数据交换</strong><br>数据寄存器用于双方数据交换的缓冲区</li><li><strong>地址识别</strong><br>通过CPU提供的地址判断读写哪个寄存器</li></ol></li><li><p><strong>组成</strong></p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/212f3c6c9cf226974950b81c08da30d4.png"></p><ul><li><strong>内存映像I/O 和 寄存器独立编址</strong><br>统一编址/独立编址</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/369f9a725ef40b92687193a32d81504e.png"></p><h2 id="I-O控制方式"><a href="#I-O控制方式" class="headerlink" title="I/O控制方式"></a>I/O控制方式</h2><ul><li><strong>程序直接控制</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/c8207bb3ce99d3f28812105daa163e65.png"></p><ul><li><strong>中断驱动方式</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/4de1d22c12ae1af7c5a51dd2372aba92.png"></p><ul><li><strong>直接存储器存取(DMA)方式</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/e82bebeab44dfc1375309c774b8ab8cd.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/5fb3a4d8e66831b9a01b5a333cd44336.png"></p><ul><li><strong>通道控制方式</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/378f1ea022a8162db2dc88dab6cbb2c8.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/b465db97c2c140914517931a72fc01de.png"></p><ul><li><strong>对比</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/f9b61bfe6d6533744162e109d4db4b29.png"></p><h2 id="I-O软件层次结构"><a href="#I-O软件层次结构" class="headerlink" title="I/O软件层次结构"></a>I/O软件层次结构</h2><ul><li><strong>用户层软件</strong><br>提供易用的库函数</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/26e762ed21e497fc84190d106516923e.png"></p><ul><li><strong>设备独立性软件</strong><br>提供调用接口(read/write系统调用)<br>设备保护<br>差错处理<br>设备分配与回收<br>数据缓冲区管理<br>建立逻辑设备名到物理设备名的映射关系<br>根据设备类型调用相应的驱动程序</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/2a03874beb3992f636423569dbceb5b4.png"></p><ul><li><strong>设备驱动程序</strong><br>设置设备的寄存器<br>检测设备状态</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/61e39c3eaed5fcf1f08fc77e7b7551c0.png"></p><ul><li><strong>中断处理程序</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/95ce891b6852f81a2cb3120f8e0ffd61.png"></p><h2 id="I-O核心子系统"><a href="#I-O核心子系统" class="headerlink" title="I/O核心子系统"></a>I/O核心子系统</h2><p>由设备独立性软件、设备驱动程序、中断处理程序组成，<br>属于操作系统内核部分，即I/O系统</p><h3 id="假脱机技术-SPOOLing"><a href="#假脱机技术-SPOOLing" class="headerlink" title="假脱机技术(SPOOLing)"></a>假脱机技术(SPOOLing)</h3><p>在用户层软件实现，但是408大纲将其归入I/O核心子系统</p><ul><li><p> <strong>脱机技术</strong><br>脱机技术指的是脱离主机的控制进行输入输出操作<br>很久以前是纸带输入，速度太慢，于是通过外围控制机将纸带数据输入到磁带，再输入主机，输出同理<br>缓解CPU与慢速I/O设备的速度矛盾</p></li><li><p><strong>假脱机技术实现原理</strong></p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/294494befcdb3cef54c51186ac1d7eec.png"></p><ul><li><strong>共享打印机原理分析</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/d51701e8bf1fbb9d0630f32d079cac26.png"></p><h3 id="设备分配与回收"><a href="#设备分配与回收" class="headerlink" title="设备分配与回收"></a>设备分配与回收</h3><ul><li><p>设备分配应该考虑的因素</p><ol><li>设备的固有属性<br>独占设备、共享设备、虚拟设备(SPOOLing技术将独占设备改造成虚拟的共享设备)</li><li>设备分配算法<br>先来先服务、优先级高者优先、短任务优先等等</li><li>设备分配的安全性<br>安全分配方式：串行使用设备，为进程分配一个设备后将进程阻塞，I/O完成再唤醒。不会产生死锁<br>不安全分配方式：进程请求I/O，操作系统负责分配设备，进程可以继续执行或者请求新的I/O，直到某个I/O无法满足才阻塞进程。可能产生死锁</li></ol></li><li><p>静态分配和动态分配<br>  进程运行前分配全部资源/运行时动态分配，见死锁那章</p></li><li><p>数据结构<br>  一个通道控制多个设备控制器，一个设备控制器控制多个设备</p></li><li><p>分配过程</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/2799b9f792d0c4b37f05bed3e5d01870.png"></p><ul><li>分配过程改进</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/7402da3e85d0454564595bcb4eea6bc7.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/b685ebaa2793533d4851c732b59421a3.png"></p><h3 id="缓冲区管理"><a href="#缓冲区管理" class="headerlink" title="缓冲区管理"></a>缓冲区管理</h3><ul><li><p>缓冲区的作用</p><ol><li>缓冲区可以使用专门的硬件寄存器实现，成本高容量小，更多时候使用内存做缓冲区</li><li>缓和CPU与I/O的速度矛盾</li><li>减少对CPU的中断频率，放宽对CPU中断的时间限制（中断驱动的字符型设备）</li><li>解决数据粒度不匹配的问题（字符型/块型）</li><li>提高CPU与I/O的并行性</li></ol></li><li><p><strong>单缓冲</strong></p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/6ec49ee53ac77d8ac79f5a3d0a667f8a.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/3e7298c4ccbc0d42abb56c651dbad863.png"></p><ul><li><strong>双缓冲</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/36e52d2b73e0353f30cf5fb6d5637e36.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/36a14ebcdb5bafdecd043eaa936e6ece.png"></p><ul><li><strong>循环缓冲</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/2125e12c4ca05881880fee2526d95275.png"></p><ul><li><strong>缓冲池</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/9438f9747cbace132ec876cde0751043.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;I-O管理&quot;&gt;&lt;a href=&quot;#I-O管理&quot; class=&quot;headerlink&quot; title=&quot;I/O管理&quot;&gt;&lt;/a&gt;I/O管理&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/lzyblog/image@main/2</summary>
      
    
    
    
    <category term="计算机基础" scheme="http://xiaoliblog.cn/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/"/>
    
    <category term="操作系统" scheme="http://xiaoliblog.cn/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
    
    <category term="操作系统" scheme="http://xiaoliblog.cn/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>操作系统⚡文件管理</title>
    <link href="http://xiaoliblog.cn/2021/01/15/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F_%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86/"/>
    <id>http://xiaoliblog.cn/2021/01/15/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F_%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86/</id>
    <published>2021-01-15T05:18:45.901Z</published>
    <updated>2021-01-15T05:19:50.687Z</updated>
    
    <content type="html"><![CDATA[<h1 id="文件管理"><a href="#文件管理" class="headerlink" title="文件管理"></a>文件管理</h1><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/8cb3890c5cfca0ce03f7e5c3893cd027.png"></p><ul><li>文件的属性<ol><li>文件名<br>主要是给用户看，同一个目录下不允许重名文件</li><li>标识符<br>一个系统内各文件标识符唯一，对用户毫无可读性，给操作系统看的</li><li>类型<br>文件扩展名</li><li>位置<br>文件存放路径，给用户看的，在外存中的地址用户是看不到的</li><li>大小</li><li>创建时间</li><li>上次修改/访问时间</li><li>所有者信息</li><li>保护信息</li></ol></li></ul><h1 id="文件的逻辑结构"><a href="#文件的逻辑结构" class="headerlink" title="文件的逻辑结构"></a>文件的逻辑结构</h1><ul><li>什么是逻辑结构</li></ul><p><strong>逻辑结构</strong>：在用户看来，文件内部的数据是如何组织起来<br><strong>物理结构</strong>：操作系统看来，文件的数据如何存放在外存中</p><ul><li><strong>无结构文件</strong><br>又叫流式文件，比如txt，由一些二进制或者字符流组成</li></ul><h2 id="有结构文件"><a href="#有结构文件" class="headerlink" title="有结构文件"></a>有结构文件</h2><ul><li><p>又叫记录式文件，比如数据库表，由一组相似的记录组成</p></li><li><p>记录是一组相关数据线的集合，每条记录有一个数据项可作为关键字</p></li><li><p>根据记录的长度是否相等，分为：定长记录，可变长记录</p></li><li><p><strong>顺序文件</strong></p><ul><li><strong>链式存储</strong><br>逻辑上相邻的记录，在物理上离散存储。<br>无论是定长/可变长记录，都无法实现随机存取，只能从链头开始遍历</li><li><strong>顺序存储</strong><br>逻辑上相邻的记录，在物理上也相邻。<br>没有说明的情况下，顺序文件指采用顺序存储的顺序文件</li></ul><ol><li><strong>可变长记录</strong><br>无法实现随机存取</li><li><strong>定长记录</strong><br>可以实现随机存储。如果采用串结构(记录顺序与关键字无关)，无法快速找到某个关键字对应的记录，如果采用顺序结构(记录按关键字排序的)，可以使用折半查找快速找到记录</li></ol></li><li><p><strong>索引文件</strong></p><ul><li>索引表本身是定长记录的顺序文件，索引表项包含索引号，长度，指针，真正的记录可以在物理上离散存储。</li><li>索引号可以是关键字，这样就能折半查找加快检索速度，用于对信息处理及时性要求高的场合，解决了顺序文件增删不便的问题</li><li>可以用不同的数据项建立多个索引表</li></ul></li><li><p><strong>索引顺序文件</strong></p><ul><li>将记录分组，每一个组对应一个索引表项</li><li>检索记录时先检索索引表，找到分组，再顺序查找分组</li><li>记录过多时，可以建立多级索引表</li><li>记录N的表，平均查找次数是N/2</li></ul></li></ul><h1 id="文件目录"><a href="#文件目录" class="headerlink" title="文件目录"></a>文件目录</h1><ul><li><p><strong>文件控制块(FCB)</strong><br>一个FCB 对应一个文件，一个FCB就是一个目录项，FCB的有序集合叫“文件目录”<br>FCB包含了文件的基本信息，存取控制信息，使用信息等等，最重要的是文件名、文件存放的物理地址<br>对目录的操作:搜索、创建文件、删除文件、显示文件、修改文件</p></li><li><p><strong>单级目录结构</strong></p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/8a0b4efcd29db4cced9e2cb247b09f15.png"></p><ul><li><strong>两级目录结构</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/3cf10a2b20534a4d42023945fdc63f72.png"></p><ul><li><strong>多级(树形)目录结构</strong><br>共享不方便</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/aef4051a93db04e86ca7c72c2c2fbd2f.png"></p><ul><li><strong>无环图目录结构</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/f6590892b721e118e6ec125c451395f5.png"></p><ul><li><strong>索引节点(FCB改进）</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/458da625bb3ef4b7d0550f5824fd4e60.png"></p><h1 id="文件的物理结构"><a href="#文件的物理结构" class="headerlink" title="文件的物理结构"></a>文件的物理结构</h1><ul><li><strong>文件块、物理块</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/9e0536d5a5a087ba0172451339110976.png"></p><h2 id="连续分配"><a href="#连续分配" class="headerlink" title="连续分配"></a>连续分配</h2><ul><li>优点：支持随机访问；顺序访问时速度最快（移动磁头所需的时间短）</li><li>缺点：不方便文件扩展，每次扩展都得迁移到一段连续的空间，代价大；存储空间利用率低，产生磁盘碎片</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/9cf825dd079e0bc8c633914c5f798618.png"></p><h2 id="链接分配"><a href="#链接分配" class="headerlink" title="链接分配"></a>链接分配</h2><ul><li><strong>隐式链接</strong><br>方便拓展，磁盘利用率高<br>不支持随机访问，查找效率低</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/c933ccf03e736d7999a3246d65c5e030.png"></p><ul><li><strong>显式链接</strong><br>逻辑块号转物理块号不需要访问磁盘，因此支持随机访问；扩展方便且不会有磁盘碎片<br>缺点是FAT要占用一定的存储空间</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/ea24291a7c921ad7b56dd5101f5cf6a2.png"></p><h2 id="索引分配"><a href="#索引分配" class="headerlink" title="索引分配"></a>索引分配</h2><p>每一个文件建立一张索引表，其中记录文件的逻辑块对应的物理块。存放索引表的磁盘块叫索引块，存放文件数据的磁盘块叫数据块。</p><ul><li><strong>链接方案</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/7b06a91634ab0108bc54fd9820475128.png"></p><ul><li><strong>多层索引</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/2583fd053336ff2a32b63f4b24fdb46f.png"></p><ul><li><strong>混合索引</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/c4fdb3f9861d1a37e234bf73cebb3290.png"></p><ul><li><strong>对比</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/2387e02852ddb16f92beea74b851a9e5.png"></p><h2 id="对比"><a href="#对比" class="headerlink" title="对比"></a>对比</h2><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/8e0caa75cbdb07a6acf1bcd1acc047fa.png"></p><h1 id="文件存储空间管理"><a href="#文件存储空间管理" class="headerlink" title="文件存储空间管理"></a>文件存储空间管理</h1><ul><li><strong>存储空间划分与初始化</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/0960e40a11a50610a063a89c9291b238.png"></p><h2 id="管理方法"><a href="#管理方法" class="headerlink" title="管理方法"></a>管理方法</h2><ul><li><strong>空闲表法</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/9f93c30bbc2e803a2bd12fabcc9ebcbc.png"></p><ul><li><p><strong>空闲链表法</strong></p><ol><li>空闲盘块链<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/e80227bfee4ddd88ea0543e0db25ca0d.png"></li><li>空闲盘区链<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/4960ca076e0d2fc5de879058a70715a1.png"></li></ol></li><li><p><strong>位示图法</strong></p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2021/01/08/9b107b740bff30f726cd647060d78529.png"></p><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/9e8ea8088ae40d789f6d8cf260f36f43.png"></p><ul><li><strong>成组链接法</strong><br>适用于大型文件系统，文件卷的目录区中，专门用一个磁盘块作为超级块，系统启动时读入内存，并且保持内外存超级块数据同步<br>比较复杂，看视频：<a href="https://www.bilibili.com/video/BV1YE411D7nH?p=52">https://www.bilibili.com/video/BV1YE411D7nH?p=52</a></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/d3d0b43a9930c6674bc7cb467cc2a4ec.png"></p><h1 id="文件的基本操作"><a href="#文件的基本操作" class="headerlink" title="文件的基本操作"></a>文件的基本操作</h1><ul><li>创建文件(creat)<ol><li>在外存中找到文件所需的空间</li><li>根据文件路径找到对应目录，创建文件对应的目录项​</li></ol></li><li>删除文件(delete)<ol><li>根据路径找到目录文件，找到文件名对应的目录项</li><li>回收文件占用的磁盘块</li><li>.删除目录项​​</li></ol></li><li>打开文件(open)<ol><li>根据路径找到目录文件，找到文件名对应的目录项，检测用户权限</li><li>将目录项复制到该进程在内存中的打开文件表中，返回表目编号​(索引号/文件描述符) </li></ol></li><li>关闭文件(close)<ol><li>删除进程的打开文件表中对应项</li><li>回收分配给该文件的内存空间等资源</li><li>系统打开文件表的打开计数器count-=1(归零时删除该项)​​</li></ol></li><li>读文件(read)<br>  需提供进程打开文件表中的索引号，读入的数据量，数据在内存中存放的位置<br>  从读指针​指向的外存位置读取指定大小的数据到指定的内存区域</li><li>写文件(write)<br>  需要提供打开文件表中的索引号，写出的数据量，写回外存的数据位置(写指针指向)</li></ul><h1 id="文件共享"><a href="#文件共享" class="headerlink" title="文件共享"></a>文件共享</h1><ul><li><strong>基于索引结点的共享(硬链接)</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/3c9338371fa86c7786b4ccb44689caed.png"></p><ul><li><strong>基于符号链的共享(软链接)</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/ae84e44309b34cfd622f053f47190759.png"></p><h1 id="文件保护"><a href="#文件保护" class="headerlink" title="文件保护"></a>文件保护</h1><ul><li>口令保护<br>  FCB中保存口令，访问时与用户提供的口令对比<br>  开销小，但是不够安全</li><li>加密保护<br>  用密码对文件数据流加密，访问时用密码解密，比如异或加密<br>  保密性强，不需要存储密码，但是加密/解密要花费一定的时间</li><li>访问控制<br>  每一个文件FCB中增加一个访问控制表(ACL)，控制各用户的访问权限<br>  精简的访问列表，以组为单位，标记其访问权限，比如Linux里面分：所有者，所属组，其他人</li></ul><h1 id="文件系统的层次结构"><a href="#文件系统的层次结构" class="headerlink" title="文件系统的层次结构"></a>文件系统的层次结构</h1><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/9703c1be05bce180167e6fa59878359c.png"></p><h1 id="磁盘管理"><a href="#磁盘管理" class="headerlink" title="磁盘管理"></a>磁盘管理</h1><h2 id="磁盘的结构"><a href="#磁盘的结构" class="headerlink" title="磁盘的结构"></a>磁盘的结构</h2><ul><li><strong>磁盘/磁道/扇区</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/e2fd159374ac453b5c36d9e943ad7cf1.png"></p><ul><li><strong>如何在磁盘中读写数据</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/fb1c99d8be588db49c4ac54666d26e99.png"></p><ul><li><strong>盘面/柱面/物理地址</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/897ccf51aaaff4967dc66f561ac62f80.png"></p><ul><li><strong>磁盘分类</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/f8d0cbc3ad9baf31d441fc3c5062c63e.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/ebbceb79d6505750496e61cf6fe1bc1b.png"></p><h2 id="磁盘调度算法"><a href="#磁盘调度算法" class="headerlink" title="磁盘调度算法"></a>磁盘调度算法</h2><ul><li><strong>读写时间</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/ab37e3ed8e17a95235ae54100ea8f8db.png"></p><ul><li><strong>调度算法</strong><ol><li><strong>先来先服务(FCFS)</strong><br>根据进程请求访问磁盘的先后顺序调度<br>公平；如果大量进程访问的磁道很分散，虚拟会很差​</li><li><strong>最短寻道时间优先(SSTF)</strong><br>优先处理当前磁头最近的磁道，保证寻道时间最短（眼前最优，未必整体最优）<br>性能较好，但是可能产生饥饿现象</li><li><strong>扫描算法(SCAN)</strong><br>又叫电梯算法，在SSTF算法的基础上，规定磁头只有移动到磁道尽头（最外侧或者最内侧）才能往回移动<br>性能较好，不会饥饿；但是只能扫描到最边上的磁道才能改变磁头方向，越外侧的的磁道，响应频率越高</li><li><strong>LOOK调度算法</strong><br>改进SCAN算法，磁头边移动边观察(LOOK)，如果移动方向没有请求了，就不必继续扫描，直接调头</li><li><strong>循环扫描算法(C-SCAN)</strong><br>只有磁头朝着某个方向移动（比如磁道号增大方向）时才处理访问请求，移动到最边上后直接返回到另一边（0号磁道），返回途中不处理请求</li><li><strong>相比SACN算法</strong><br>各个位置的磁道响应频率很平均​</li><li><strong>C-LOOK算法</strong><br>改进C-SCAN算法，磁头移动方向上如果没有请求了，就直接返回到最靠近边缘的请求磁道即可</li></ol></li></ul><h2 id="减少磁盘延时"><a href="#减少磁盘延时" class="headerlink" title="减少磁盘延时"></a>减少磁盘延时</h2><ul><li><p><strong>交替编号</strong><br>一个盘面上，让逻辑相邻的扇区在物理上有一定间隔，使读取连续逻辑扇区所需的延迟时间更小<br>​（如果没有间隔，读入N号扇区时数据时需要一些时间处理，导致错过N+1号扇区，磁盘需要再转一圈才能读到N+1）</p></li><li><p><strong>磁盘物理地址设计</strong></p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/2ddce19efb6ffb45e550e494c2674ca5.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/96815efaafe28326e1cf29720642d2f2.png"></p><ul><li><strong>错位命名</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/346b8e84564845047ac77b7a84733f2d.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/5842e0c4e82f9a00c9df4f1718b63d71.png"></p><h2 id="磁盘管理-1"><a href="#磁盘管理-1" class="headerlink" title="磁盘管理"></a>磁盘管理</h2><ul><li><strong>磁盘初始化</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/4042a22e2a51b1943d413286e53f2c9d.png"></p><ul><li><strong>引导快</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/f407760fd3c9f41870514841b10bec42.png"></p><ul><li><strong>坏块管理</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/62341e5c566ea63d0ee9af4e96922f1d.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;文件管理&quot;&gt;&lt;a href=&quot;#文件管理&quot; class=&quot;headerlink&quot; title=&quot;文件管理&quot;&gt;&lt;/a&gt;文件管理&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/</summary>
      
    
    
    
    <category term="计算机基础" scheme="http://xiaoliblog.cn/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/"/>
    
    <category term="操作系统" scheme="http://xiaoliblog.cn/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
    
    <category term="操作系统" scheme="http://xiaoliblog.cn/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>操作系统⚡内存管理</title>
    <link href="http://xiaoliblog.cn/2021/01/15/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F_%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/"/>
    <id>http://xiaoliblog.cn/2021/01/15/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F_%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/</id>
    <published>2021-01-15T05:16:33.486Z</published>
    <updated>2021-01-15T05:17:16.013Z</updated>
    
    <content type="html"><![CDATA[<h1 id="内存管理"><a href="#内存管理" class="headerlink" title="内存管理"></a>内存管理</h1><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/339f84440daad4b17a82464ae8c6d840.png"></p><h2 id="内存基础"><a href="#内存基础" class="headerlink" title="内存基础"></a>内存基础</h2><ul><li><p>什么是内存<br>  内存是用于存放数据的硬件，<strong>程序执行前需要先放到内存中才能被CPU处理</strong></p><ul><li><strong>储存单元</strong><br>按<strong>字节</strong>编址：一个存储单元1字节，8个二进制位，1字节对应一个地址<br>按<strong>字长</strong>编址：一个存储单元1个字长，字长16位的计算机一个存储单元16个二进制位<br>2^10=1K           2^20=1M               2^30=1G<br>4G内存的地址长度: 4*2^30=2^32  ，所以需要32个二进制位(32位操作系统最大支持4GB内存，指针大小4字节)</li><li><strong>内存地址</strong><br>内存从0开始，每一个地址对应一个<strong>存储单元</strong></li></ul></li><li><p>进程运行的基本原理</p><ul><li><strong>指令的工作原理</strong><br>CPU按照程序段的指令去内存某个位置存取数据，一条 指令由操作码+若干参数组成<br>编译生成的指令中一般使用逻辑地址</li><li><strong>逻辑地址/物理地址</strong><br>逻辑地址（相对地址）<br>物理地址（绝对地址）</li></ul></li><li><p>从写程序到程序运行</p><ol><li><strong>编辑源文件</strong></li><li><strong>编译</strong><br>源代码文件(.c)生成目标模块(.o)，将高级语言翻译为机器语言<br>每一个目标模块都具有独立的逻辑地址 0-xxx</li><li><strong>链接</strong><br>目标模块生成装入模块(可执行文件,如.exe)，链接完成使得各模块形成整体的链接地址</li><li><strong>装入(载)</strong><br>将装入模块装入内存运行，装入后形成物理地址</li></ol></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/8e00f6dbac6c69dbfeb08565f887d6a6.png"></p><ul><li><p>三种链接方式</p><ol><li><strong>静态链接</strong><br>装入前链接成一个完整模块</li><li><strong>装入时动态链接</strong><br>运行前边装入边链接</li><li><strong>运行时动态链接</strong><br>运行时需要什么模块才装入并链接</li></ol></li><li><p>三种装入方式</p><ol><li><strong>绝对装入</strong><br>编译时产生绝对地址，只适用于单道程序环境(那时候还没有操作系统，编译器负责实现)</li><li><strong>可重定位装入(静态重定位)</strong><br>编译链接后的装入模块地址是逻辑地址，装入时进行重定位，将指令中逻辑地址+装入的起始物理地址得到真实的物理地址<br>一个作业装入内存时，<strong>必需分配其要求的全部内存空间</strong>，内存不够就不能装入<br>作业一旦进入内存，<strong>运行期间就不能再移动，也不能再申请内存空间，因为地址都写死了</strong><br>早期多道批处理操作系统使用</li><li><strong>动态运行时装入(动态重定位)</strong><br>运行时才将逻辑地址转换为物理地址，需要设置**重定位寄存器(或者叫基址寄存器)**允许程序在内存中发生移动，而且程序可以分配到不连续的储存区，也支持动态申请内存<br>只需装入部分代码即可投入运行，可以向用户提供一个比存储空间大得多的地址空间<br>现代操作系统使用</li></ol></li></ul><h1 id="内存空间分配与回收"><a href="#内存空间分配与回收" class="headerlink" title="内存空间分配与回收"></a>内存空间分配与回收</h1><h2 id="连续分配管理方式"><a href="#连续分配管理方式" class="headerlink" title="连续分配管理方式"></a>连续分配管理方式</h2><p>为用户进程分配的内存必须是一个连续的内存空间</p><ul><li><strong>单一连续分配</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/0081a0e4a2e83c34175718736ba82557.png"></p><ul><li><strong>固定分区分配</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/5058bbf39550bd01e121ff658145bcd0.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/67c30dbd1599bee950756f950ef917ca.png"></p><ul><li><strong>动态分区分配</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/08767bf29ec2c778d70e77b5f4b1ab02.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/9d28c7547a80d70088163e835a6a5b0d.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/dfd3883c7a984ac035dcfbbe0394ce49.png"></p><blockquote><p>回收内存时，回收区前后的空闲分区应该合并</p></blockquote><ul><li><strong>动态分区分配算法</strong><ol><li><strong>首次适应(First Fit)</strong><br>空闲分区按地址递增顺序排列，每次分配内存时查找空闲分区链(表)，找到第一个满足要求的分区即可<br>每次从低地址部分查找，高地址的大分区更有可能被保存下来<br>效果最佳</li><li><strong>最佳适应(Best Fit)</strong><br>空闲分区按容量递增顺序链接，每次分配内存时按顺序查找内存分区链(表)，找到第一个可以满足的空闲分区<br>优先使用最小连续内存区，尽可能多的留下大块空闲区，满足大进程需求，但是会留下非常多难以利用的外部碎片</li><li><strong>最坏适应(Worst Fit)</strong><br>有叫最大适应算法(Largest Fit)<br>空闲分区按容量递减顺序排序，每次分配找到能满足要求的第一个空闲分区<br>优先使用最大的连续空闲区，使得分配后的剩余空闲区不会太少，方便使用，但是如果后面需要大内存区间就没办法了</li><li><strong>邻近适应(Next Fit)</strong><br>又叫循环首次适应算法<br>空闲分区按地址递增顺序构成循环链表，每次内存分配时从刚才查找结束位置开始，找到第一个能满足要求的空闲分区<br>无论是低地址还是高地址的空闲分区，都有相同的概率被使用，导致最后无大分区可用​</li><li><strong>对比</strong></li></ol></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/50d2425ddf6b7419c25b81048e422055.png"></p><h2 id="非连续分配管理方式"><a href="#非连续分配管理方式" class="headerlink" title="非连续分配管理方式"></a>非连续分配管理方式</h2><p>为用户进程分配的内存可以是一个分散的内存空间<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/28aefd8d61408a8fc73fa4de0eb88cb9.png"></p><h3 id="基本分页存储管理"><a href="#基本分页存储管理" class="headerlink" title="基本分页存储管理"></a>基本分页存储管理</h3><h4 id="分页管理"><a href="#分页管理" class="headerlink" title="分页管理"></a>分页管理</h4><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/9aa76ab94a1dbfae0f77f253568a809a.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/b95575785e694b93bba47d918ef7ed94.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/09faeccfa419d0484cda4eeaea7080f3.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/0fec9bc2dfe05653f27ef07bccbcf388.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/a3133228d3b4efc94a2469d17d0b5203.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/36b98f7da4ecbc6b1e226b84d7135526.png"></p><blockquote><p>基本分页存储管理的思想：把内存分成一个个相等的小分区，在按分区大小把进程拆分成一个个小部分 (x)</p></blockquote><h4 id="基本地址变换机构"><a href="#基本地址变换机构" class="headerlink" title="基本地址变换机构"></a>基本地址变换机构</h4><ul><li><p>页表寄存器(PTR)<br>  保存页表在内存中的起始地址F和页表长度M<br>  进程未执行的时候，F和M放在PCB中，进程被调度时，操作系统内核将其放到PTR中</p></li><li><p>地址转换过程</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/2eb2b028d5cd785c98260d6fbc118c24.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/b8eaa75727fb2d37f95172d5dcd91c50.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/c12017d76287105807bebd09920d3783.png"></p><ul><li>对页表项目的探讨</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/2154b9952fc29517e016662477ea7b1b.png"></p><h4 id="快表地址变换机构"><a href="#快表地址变换机构" class="headerlink" title="快表地址变换机构"></a>快表地址变换机构</h4><ul><li><p>局部性原理</p><ol><li>时间局部性:如果执行了程序中的某条指令,那么不久后这条指令很有可能再次执行;如果某个数据被访问过,不久之后该数据很可能再次被访问。(因为程序中存在大量的循环)</li><li>空间局部性:一旦程序访问了某个存储单元,在不久之后,其附近的存储单元也很有可能被访问。(因为很多数据在内存中都是连续存放的）</li></ol></li><li><p>什么是快表(TLB)<br>  又称联想寄存器(TLB) ,是一种访问速度比内存快很多的高速缓冲存储器,用来存放当前访问的若干页表项,以加速地址变换的过程。与此对应,内存中的页表常称为慢表。</p></li><li><p>地址变换过程</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/ec475874aa13a75c6efae864ad8089bb.png"></p><h4 id="两级页表"><a href="#两级页表" class="headerlink" title="两级页表"></a>两级页表</h4><ul><li><p>单级页表的问题<br>Q1：所有的页表项都要连续存放，页表很大时，需要占用很多很多个连续的页框。<br>比如32位逻辑地址分页储存，页面大小4K，则页表最多2^20项，一项占4B，一共需要1024个连续的页框才能放得下<br>Q2：没有必要让整个页表常驻内存，进程在一段时间可能只访问某几个特定的页面</p></li><li><p>两级页表原理</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/76d6a57cd465b8976246e5e9196edc2e.png"></p><ul><li>如何实现地址变换</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/657bc76d734af9c9af1d0a9464585fc3.png"></p><ul><li>注意事项</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/dec992c358e87fa5e9f4fd8b36c3ea51.png"></p><h3 id="基本分段存储管理"><a href="#基本分段存储管理" class="headerlink" title="基本分段存储管理"></a>基本分段存储管理</h3><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/16e9a89e972005edfe77c27ae941e8f2.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/7996687da1d81625eb2e670b73bf4631.png"></p><ul><li><strong>什么是段表</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/04c6fd47091dcdf52e5a5bed77b9ff8a.png"></p><ul><li><strong>如何实现地址变换</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/263cf986df0af5c56a30be57805b6bcf.png"></p><ul><li><strong>分段VS分页</strong>-</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/7158352d0aca697027068159d02d8cd8.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/8ab1305deb6e4491afc4e182ac4b9d0b.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/83f024c57174873268a1e390b80a2e68.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/242d7ee1fa0e36a0309c03ec7eb7a326.png"></p><h3 id="段页式存储管理"><a href="#段页式存储管理" class="headerlink" title="段页式存储管理"></a>段页式存储管理</h3><ul><li>分段分页的优缺点</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/391b4cf087b6c14ebbb1766382492a23.png"></p><ul><li><strong>段页式管理</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/137833abba4059c0befbb3b083a488a1.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/203f30c57ff875d37631b93836ab3cec.png"></p><ul><li><strong>段表、页表</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/efc6d68c9181d25b30b1f1d2dd93bfad.png"></p><ul><li><strong>如何实现地址变换</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/cc29b1687f721912dec313f5802eeb7f.png"></p><h1 id="内存空间的扩充"><a href="#内存空间的扩充" class="headerlink" title="内存空间的扩充"></a>内存空间的扩充</h1><h2 id="覆盖技术"><a href="#覆盖技术" class="headerlink" title="覆盖技术"></a>覆盖技术</h2><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/b8d088c6d7e777d60267200f96df9531.png"></p><h2 id="交换-对换-技术"><a href="#交换-对换-技术" class="headerlink" title="交换(对换)技术"></a>交换(对换)技术</h2><p>内存紧张时，把进程暂时换出到外存（例：进程的中级调度(内存调度)，挂起态，七状态模型）<br>磁盘分为对换区(swap)和文件区，前者连续分配追求I/O速度，后者离散分配追求存储空间利用率<br>优先换出阻塞进程、低优先级进程（可能导致饥饿）、还要考虑进程在内存的驻留时间，PCB不会换出</p><h2 id="虚拟储存技术"><a href="#虚拟储存技术" class="headerlink" title="虚拟储存技术"></a>虚拟储存技术</h2><ul><li>传统存储方式的缺点<br>  连续分配/非连续分配<ol><li>一次性<br>作业必须一次性全部装入内存后才能开始运行。大作业无法运行,多道程序并发度下降。</li><li>驻留性<br>作业在运行期间一直驻留在内存，内存中驻留大量的暂时用不到的数据，浪费了宝贵的内存资源。</li></ol></li><li>局部性原理    <ol><li>时间局部性<br>现在访问的指令、数据在不久后很可能再次访问</li><li>空间局部性<br>现在访问的内存单元周围的内存空间很可能在不久之后访问</li><li>高速缓存<br>频繁访问的数据放到更高速的储存器中</li></ol></li><li>虚拟内存的定义和特征<br>  程序不需要全部装入内存即可运行，运行时根据需要动态调入数据，内存不够时，换出一些数据到外存<ol><li>多次性<br>作业无需在运行时一次装入内存，而是允许分多次调用</li><li>对换性<br>作业无需在运行时常驻内存，允许作业换入、换出</li><li>虚拟性<br>从逻辑上扩充了内存容量，用户看到的容量，远大于实际容量</li></ol></li></ul><div class="note warning flat"><p>虚拟内存的<strong>最大容量</strong>是由计算机的地址结构（CPU寻址范围）确定的<br>虚拟内存的<strong>实际容量</strong>=min（内存和外存容量之和，CPU寻找范围）</p></div><h1 id="如何实现虚拟内存"><a href="#如何实现虚拟内存" class="headerlink" title="如何实现虚拟内存"></a>如何实现虚拟内存</h1><h2 id="请求调页"><a href="#请求调页" class="headerlink" title="请求调页"></a>请求调页</h2><p>访问的信息不存在时，操作系统负责将需要的信息从外存调入内存</p><h2 id="页面置换"><a href="#页面置换" class="headerlink" title="页面置换"></a>页面置换</h2><p>内存空间不足时，将内存中暂时不用的信息换到外存<br>页面的换入换出需要磁盘I/O，时间开销是很大的，缺页率越小越好</p><h3 id="最佳置换算法OPT"><a href="#最佳置换算法OPT" class="headerlink" title="最佳置换算法OPT"></a>最佳置换算法OPT</h3><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/a31e68c46d08157aff900e68175fcdb7.png"></p><h3 id="先进先出置换算法FIFO"><a href="#先进先出置换算法FIFO" class="headerlink" title="先进先出置换算法FIFO"></a>先进先出置换算法FIFO</h3><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/8fbfe8dec801c9679911f48024b89abe.png"></p><h3 id="最近最久未使用算法LRU"><a href="#最近最久未使用算法LRU" class="headerlink" title="最近最久未使用算法LRU"></a>最近最久未使用算法LRU</h3><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/12db53c5ecacba69329f1a320fd0f6ec.png"></p><h3 id="时钟置换算法CLOCK"><a href="#时钟置换算法CLOCK" class="headerlink" title="时钟置换算法CLOCK"></a>时钟置换算法CLOCK</h3><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/3fbda0061a096757ee0b6d7975e53ed3.png"></p><ul><li><strong>改进型时钟置换算法</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/fbc5786e66054fa21ae3e66f4636370e.png"></p><h3 id="对比"><a href="#对比" class="headerlink" title="对比"></a>对比</h3><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/6367b523aa247845d9ad05bbde1f773c.png"></p><h2 id="虚拟内存的实现"><a href="#虚拟内存的实现" class="headerlink" title="虚拟内存的实现"></a>虚拟内存的实现</h2><h3 id="请求分页存储管理"><a href="#请求分页存储管理" class="headerlink" title="请求分页存储管理"></a>请求分页存储管理</h3><ul><li><strong>页表机制</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/87530d9abd6297d27c42da9d19b5e2e3.png"></p><ul><li><p><strong>缺页中断机构</strong></p><ul><li>访问的页面不存在时，产生缺页中断(属于内中断的故障 fault)，操作系统缺页中断处理程序中断，进程放到阻塞队列，待调页完成后将进程唤醒，放到就绪队列</li><li>如果内存有空闲块，则为进程分配一个空闲块，将缺页装入其中，并修改页表相应页表项</li><li>如果内存没有空闲块，由页面置换算法选择一个页面淘汰(若该页面在内存期间被修改过，则需要先将其写回外存)，腾出一个空间再装入缺页​​</li><li>一条指令执行期间，可能产生多次缺页中断</li></ul></li><li><p><strong>地址变换机构</strong></p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/0e3537ef13a2ea5aca18407cb91af5ab.png"></p><h2 id="请求分段存储管理"><a href="#请求分段存储管理" class="headerlink" title="请求分段存储管理"></a>请求分段存储管理</h2><h2 id="请求段页式存储管理"><a href="#请求段页式存储管理" class="headerlink" title="请求段页式存储管理"></a>请求段页式存储管理</h2><h1 id="内存保护"><a href="#内存保护" class="headerlink" title="内存保护"></a>内存保护</h1><p>进程1只能访问进程1的内存，不能越界访问其它进程或者操作系统的内存区<br>方法一：在CPU中设置上限/下限寄存器，保存进程可访问的物理地址的上下限<br>方法二：重定位寄存器(基址寄存器)+界地址寄存器(限长寄存器)<br>重定位寄存器中保存了进程的起始物理地址P1，界地址寄存器保存了进程的最大逻辑地址P2, 进程可以访问的物理内存位置是P1~P1+P2</p><h1 id="页面分配策略"><a href="#页面分配策略" class="headerlink" title="页面分配策略"></a>页面分配策略</h1><ul><li><strong>相关概念</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/e5e89721b565c0911c692b8012b2892e.png"></p><ul><li><p><strong>固定分配局部置换</strong>)</p><ul><li>系统为每个进程分配一定数量的物理块,在整个运行期间都不改变。</li><li>若进程在运行中发生缺页,则只能从该进程在内存中的页面中选出一页换出,然后再调入需要的页面。</li><li>缺点:很难在刚开始就确定应为每个进程分配多少个物理块才算合理。(采用这种策略的系统可以根据进程大小、优先级、或是根据程序员给出的参数来确定为一个进程分配的内存块数)</li></ul></li><li><p><strong>可变分配全局置换</strong></p><ul><li>刚开始会为每个进程分配一定数量的物理块。操作系统会保持一个空闲物理块队列。</li><li>当某进程发生缺页时,从空闲物理块中取出一块分配给该进程;若已无空闲物理块,则可选择一个未锁定的页面换出外存,再将该物理块分配给缺页的进程。</li><li>只要某进程缺页,都将获得新的物理块,仅当空闲物理块用完时,系统才选择一个未锁定的页面调出。</li><li>被选择调出的页可能是系统中任何一个进程中的页,因此这个被选中的进程拥有的物理块会减少,缺页率会增加。</li></ul></li><li><p><strong>可变分配局部置换</strong></p><ul><li>刚开始会为每个进程分配一定数量的物理块。当某进程发生缺页时,只允许从该进程自己的物理块中选出一个进行换出外存。</li><li>如果进程在运行中频繁地缺页,系统会为该进程多分配几个物理块,直至该进程缺页率趋势适当程度;</li><li>反之,如果进程在运行中缺页率特别低,则可适当减少分配给该进程的物理块。</li></ul></li><li><p><strong>调入页面的时机</strong></p><ul><li><strong>预调页策略</strong><br>  运行前调入，根据空间局部性原理,一次调入若干个相邻的页面可能比一次调入一个页面更高效。但如果提前调入的页面中大多数都没被访问过,则又是低效的。<br>  因此可以预测不久之后可能访问到的页面,将它们预先调入内存,但目前预测成功率只有50%左右。故这种策略主要用于进程的首次调入,由程序员指定应该调入的部分。</li><li><strong>请求调页策略</strong><br>运行时调入，进程在运行期间发现缺页时才将所缺页面调入内存。由这种策略调入的页面一定会被访问到,但由于每次只能调入一页,而每次调页都要磁盘I/O操作,因此I/O开销较大。</li></ul></li><li><p><strong>从何处调页</strong></p><ul><li><strong>对换区空间足够</strong><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/cf3dd8df63ee90c85d95c7c43987561e.png"></li><li><strong>对换区空间不够</strong><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/258a8a5c20df486e189abb531c735fa3.png"></li><li><strong>Unix方式</strong><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/2d352762246646b4e081b7b4e4f8e2e7.png"></li></ul></li><li><p><strong>抖动(颠簸)现象</strong><br>给进程分配的物理块太少，刚刚换出的页面马上又要换入内存,刚刚换入的页面马上又要换出外存，这种频繁的页面调度行为称为抖动或颠簸。</p></li><li><p><strong>工作集</strong></p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/c3e0c087bb7b935766cc5956a55a248b.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;内存管理&quot;&gt;&lt;a href=&quot;#内存管理&quot; class=&quot;headerlink&quot; title=&quot;内存管理&quot;&gt;&lt;/a&gt;内存管理&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/</summary>
      
    
    
    
    <category term="计算机基础" scheme="http://xiaoliblog.cn/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/"/>
    
    <category term="操作系统" scheme="http://xiaoliblog.cn/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
    
    <category term="操作系统" scheme="http://xiaoliblog.cn/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>操作系统⚡进程管理</title>
    <link href="http://xiaoliblog.cn/2021/01/15/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F_%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86/"/>
    <id>http://xiaoliblog.cn/2021/01/15/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F_%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86/</id>
    <published>2021-01-15T05:14:40.515Z</published>
    <updated>2021-01-15T05:15:49.539Z</updated>
    
    <content type="html"><![CDATA[<h1 id="进程管理"><a href="#进程管理" class="headerlink" title="进程管理"></a>进程管理</h1><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/01/02066158f4beb9f2c557383fcf86ec8a.png"></p><h2 id="进程的定义"><a href="#进程的定义" class="headerlink" title="进程的定义"></a>进程的定义</h2><ul><li>进程的定义：<strong>程序段、数据段、PCB</strong>三部分组成了<strong>进程实体(进程映像)</strong> </li><li>一般情况下,我们把进程实体就简称为进程,例如,所谓创建进程,实质上是创建进程实体中的PCB;而撤销进程,实质上是撤销进程实体中的PCB</li></ul><blockquote><p>注意: PCB是进程存在的唯一标志!</p></blockquote><p>从不同的角度,进程可以有不同的定义,比较传统典型的定义有:</p><ol><li>进程是程序的一次<strong>执行过程</strong>。</li><li>进程是一个程序及其数据在处理机上顺序执行时所<strong>发生的活动</strong>。</li><li>进程是具有独立功能的程序在数据集合上<strong>运行的过程</strong>，它是系统进行资源分配和调度的一个独立单位（强调“动态性”）</li><li>引入进程实体的概念后，可把进程定义为:进程是进程实体的运行过程，是系统进行<strong>资源分配</strong>和<strong>调度</strong>的一个独立单位。</li></ol><blockquote><p>注：严格来说，进程实体和进程并不一样,进程实体是<code>静态的</code>，进程则是<code>动态的</code>。不过,除非题目专门考察二者区别，否则可以认为进程实体就是进程。因此我们也可以说“进程由程序段、数据段、PCB三部分组成</p></blockquote><h2 id="进程的组成"><a href="#进程的组成" class="headerlink" title="进程的组成"></a>进程的组成</h2><ul><li><p>程序段<br>存放程序代码本身</p></li><li><p>数据段<br>存放程序运行过程中处理的各种数据（如全局变量、局部变量、宏定义的常量等）</p></li><li><p>PCB</p></li></ul><p><strong>进程管理所需的数据</strong>都放在这里，PCB是进程存在的唯一标志，操作系统通过PCB来管理进程<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/27/ce7872a1bfbd5dafc1453de9322ff949.png"></p><h2 id="进程的组织"><a href="#进程的组织" class="headerlink" title="进程的组织"></a>进程的组织</h2><p>系统里面通常有数千个PCB，为了更有效地管理，需要用适当的方式把他们组织起来</p><ul><li><p>链接方式<br>按照进程状态将PCB分为多个队列<br>操作系统持有指向各个队列的指针<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/27/6c73d88223c3f0bbb779a74d23ea0828.png"></p></li><li><p>索引方式<br>根据进程状态不同，建立几张索引表<br>操作系统持有指向各索引表的指针<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/27/7884d54769251ab2cf4a7907c1903ab7.png"></p></li></ul><h2 id="进程的特征"><a href="#进程的特征" class="headerlink" title="进程的特征"></a>进程的特征</h2><p>进程和程序是两个截然不同的概念，相比于程序，进程拥有以下特征：</p><ul><li><p><strong>动态性</strong><br>最基本特征。进程是程序的一次执行过程，是动态地产生、变化和消亡的</p></li><li><p><strong>并发性</strong><br>内存中有多个进程实体，各进程可以并行执行</p></li><li><p><strong>独立性</strong><br>进程是能独立运行、获得资源、接受调度的基本单位</p></li><li><p><strong>异步性</strong><br>各进程按各自独立的、不可预测的速度向前推进，异步性会导致并发程序执行结果的不确定性，操作系统要提供“进程同步机制”来解决异步问题</p></li><li><p><strong>结构性</strong><br>每一个进程都会配置PCB，结构上看，进程由程序段、数据段、PCB组成</p></li></ul><h2 id="进程的状态"><a href="#进程的状态" class="headerlink" title="进程的状态"></a>进程的状态</h2><p>基本状态：运行态、就绪态、阻塞态/等待态</p><ul><li><p><strong>运行态(Running)</strong><br>占有CPU，并在CPU上运行<br>单核处理器一个时刻只有一个进程处于运行态，双核两个</p></li><li><p><strong>就绪态(Ready)</strong><br>进程已经具备一切运行条件，除了没有空闲CPU，导致暂时不能运行<br>万事俱备，只差CPU</p></li><li><p><strong>阻塞态(Waiting/Blocked)</strong><br>等待某一事件而暂时不能运行，比如等待操作系统分配打印机、等待磁盘读写<br>为了提高CPU利用效率，进程需要先准备好其它所需资源，才能得到CPU的服务</p></li><li><p><strong>创建状态(New)</strong><br>操作系统为该进程分配所需内存等系统资源，为其创建、初始化PCB(分配PID等等)</p></li><li><p><strong>终止状态(Terminated)</strong><br>进程运行结束，或者出现Bug导致无法继续执行，操作系统需要撤销进程<br>完成资源回收，撤销PCB</p></li></ul><h2 id="进程间转换"><a href="#进程间转换" class="headerlink" title="进程间转换"></a>进程间转换</h2><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/27/9eb8a430b7220f00df5ca847dca45b51.png"></p><h2 id="进程控制"><a href="#进程控制" class="headerlink" title="进程控制"></a>进程控制</h2><ul><li>什么是进程控制？<br>进程控制的主要功能是对系统中的所有进程实施有效的管理,它具有创建新进程、撤销已有进程、实现进程状态转换等功能。简而言之就是<strong>实现进程状态切换</strong>。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/27/29d4cd4920843ffc47a4b3733fec4c4b.png"><br>某一个进程，把它的PCB从一个队列放到另一个队列，但是并没有把PCB当中的状态标志改成相应的新的状态，为防止这个问题，引入了原语操作。</p><ul><li><p>如何实现进程控制？<br>当关中断指令接收到外部中断信号时，会被忽略掉，暂时不会处理，这就保证了原语执行不被中断。直到执行到开中断指令，接收到外部中断信号才会开始处理。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/27/157f417dd8079f5c82c6d3a5c22eeea6.png"></p></li><li><p>进程控制相关原语<br>进程控制会导致进程状态的转换。无论哪个原语,要做的无非三类事情:</p><ol><li>更新PCB中的信息(如修改进程状态标志、将运行环境保存到PCB、从PCB恢复运行环境)<br>a.  所有的进程控制原语一定都会修改进程状态标志<br>b.  剥夺当前运行进程的CPU使用权必然需要保存其运行环境<br>c. 某进程开始运行前必然要恢复期运行环境</li><li>将PCB插入合适的队列</li><li>分配/回收资源</li></ol></li></ul><h2 id="进程通信"><a href="#进程通信" class="headerlink" title="进程通信"></a>进程通信</h2><ul><li>进程通信就是进程之间的信息交换。</li><li>进程是分配系统资源的单位（包括内存地址空间），因此<strong>各进程</strong>拥有各自的<strong>内存地址空间</strong>，它们<strong>相互独立</strong>。</li><li>为了保证安全，一个进程不能直接访问另一个进程的地址空间</li></ul><p>但是进程之间的信息交换又是必须实现的，为了保证进程间的安全通信，操作系统提供了一些方法实现。</p><ul><li><p><strong>共享存储</strong><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/27/08d60258f07e088ecebb337c84671d64.png"></p></li><li><p><strong>管道通信</strong><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/27/3dc4f522b8dbc5abb2d6e4862e7bd5c2.png"></p></li><li><p><strong>消息传递</strong><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/27/0fb02f609238179957d8dcfeb780e78c.png"></p></li></ul><h1 id="线程"><a href="#线程" class="headerlink" title="线程"></a>线程</h1><h2 id="线程的引入"><a href="#线程的引入" class="headerlink" title="线程的引入"></a>线程的引入</h2><p>在没引入进程之前，系统中各个程序只能串行执行<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/27/297ecbbc8b3077873cfda1029ba5344a.png"></p><ul><li><p>资源分配、调度<br>传统进程机制中，进程是资源分配、调度的基本单位<br>引入线程后，进程是<code>资源分配</code>的基本单位，线程是<code>调度</code>的基本单位</p></li><li><p>并发性<br>传统进程机制，只能进程间并发<br>现在<code>各线程之间</code>也能并发</p></li><li><p>系统开销<br>传统进程并发，需要切换进程的运行环境，系统开销大<br>同一个进程内的线程间并发，不需要切换环境，开销小</p></li></ul><h2 id="线程的属性"><a href="#线程的属性" class="headerlink" title="线程的属性"></a>线程的属性</h2><ul><li>线程是处理机调度的单位</li><li>多CPU计算机中，各个线程可占用不同的CPU</li><li>每个线程都有一个线程ID、线程控制块（TCP）</li><li>线程也有就绪、阻塞、运行三种基本状态</li><li>线程几乎不拥有系统资源，资源分配给进程</li><li>同一进程的不同线程间共享进程的资源</li><li>由于共享内存地址空间，同一进程中的线程间通信甚至无需系统干预</li><li>同一进程中的线程切换，不会引起进程切换</li><li>不同进程中的线程切换，会引起进程切换</li><li>切换进程内的线程，系统开销很小</li><li>切换进程，系统开销较大</li></ul><h2 id="线程的实现方式"><a href="#线程的实现方式" class="headerlink" title="线程的实现方式"></a>线程的实现方式</h2><ul><li><p><strong>用户级线程</strong><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/27/b8c3889fbf0a66a4dcd10cf684baf310.png"></p></li><li><p><strong>内核级线程</strong><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/27/b614794c5a841e7d52093be2763cd3cc.png"></p></li><li><p><strong>组合方式</strong><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/27/c390886b3e93a3c770ccee727878775e.png"></p></li></ul><h2 id="多线程模型"><a href="#多线程模型" class="headerlink" title="多线程模型"></a>多线程模型</h2><ul><li><p><strong>多对一模型</strong><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/27/37604f2c714399daf4da29dba2868864.png"></p></li><li><p><strong>一对一模型</strong><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/27/b3e90c5a7ae02d68a824870fdaed90e4.png"></p></li><li><p><strong>多对多模型</strong><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/27/fbf8215e4d8ed0bdedea85a035f45908.png"></p></li></ul><h1 id="处理机调度"><a href="#处理机调度" class="headerlink" title="处理机调度"></a>处理机调度</h1><ul><li><p>基本概念<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/28/9158e9abe09a10247f33e3f357527e6a.png"></p></li><li><p>调度的三个层次</p><ol><li><strong>高级调度（作业调度）</strong><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/28/40eff0049b00c052639b18441bc4bc18.png"></li><li><strong>中级调度（内存调度）</strong><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/28/89750f6f38ab70cda27a00a136c7b32d.png"></li><li><strong>低级调度（进程调度）</strong><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/28/3459e6ca2806ec06e91c00b4820d5a2a.png"></li><li><strong>区别</strong><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/28/3b55461b8822dd42ed0fdbaf4cd9d8e7.png"></li></ol></li><li><p>补充：<strong>七状态模型</strong><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/28/a66c794973c8f59af02ed109a637ba42.png"></p></li></ul><h2 id="调度的时机和方式"><a href="#调度的时机和方式" class="headerlink" title="调度的时机和方式"></a>调度的时机和方式</h2><ul><li><p>什么适合需要进程调度？</p><ol><li><strong>进程自动放弃处理机</strong><br> 进程正常终止<br> 运行过程中发生异常终止<br> 进程主动请求阻塞（等待I/O）</li><li><strong>进程被动放弃处理机</strong><br> 时间片用完<br> 更紧急的事情需要处理（I/O中断）<br> 更高优先级的进程进入就绪队列</li></ol></li><li><p>不能进行进程调度与切换的情况</p><ol><li><strong>在处理中断的过程中</strong>（中断处理过程很复杂，很难做到同时完成进程切换）</li><li><strong>在原子操作的过程中（原语）</strong>。原子操作不可中断，要一气呵成</li><li><strong>进程在操作系统内核程序临界区中</strong>。</li></ol></li><li><p><strong>临界资源</strong>是指：进程需要互斥访问的资源，<strong>临界区</strong>：访问临界资源的代码</p></li><li><p><strong>内核程序临界区</strong>：访问内核数据结构的代码，比如进程的就绪队列（就绪进程PCB组成）。</p></li><li><p>进程访问就绪队列时会加锁，还没退出临界区（临界资源没解锁）的期间，是无法进行调度和切换的。<strong>内核临界区</strong>访问临界资源应该尽快完成，否则会影响内核其它管理功能。</p></li><li><p><strong>普通临界区</strong>访问临界资源不会直接影响操作系统内核管理工作，这个时候可以调度和切换。比如打印机完成打印之前，进程不允许调度就会导致CPU一直空闲。</p></li></ul><blockquote><p>进程在操作系统<strong>内核程序临界区</strong>中不能进行调度与切换  （√）<br>进程处于<strong>临界区</strong>时不能进行处理机调度    （×）</p></blockquote><ul><li><p>进程调度的方式</p><ol><li><strong>非剥夺(非抢占)式</strong><br>只允许进程主动放弃处理机。在运行过程中即便有更紧迫的任务到达，当前进程依然会继续使用处理机，直到该进程终止或主动要求进入阻塞态。实现简单，开销小，但是无法实时处理紧急任务，适合早期批处理系统。</li><li><strong>剥夺(抢占)式</strong><br>如果有更重要更紧急的进程需要使用处理机，直接剥夺当前进程资源。适合分时操作系统、实时操作系统。</li></ol></li><li><p>进程的切换与过程</p><ol><li>“狭义的进程调度”与“进程切换”的区别<br>狭义调度指：从就绪队列中选择一个要运行的进程，这个进程可能是刚刚暂停的，也可能是另一个进程，后一种情况就需要进程切换<br>进程切换：一个进程让出处理机，由另一个进程占用处理机的过程<br>广义进程调度：包含了选择一个进程和进程切换两个步骤</li><li>进程切换的过程<br>保存原进程的数据<br>恢复新进程的数据（数据包括：程序计数器，程序状态字，各种数据寄存器等现场信息）</li></ol></li></ul><blockquote><p>进程切换是有代价的，过于频繁的调度、切换会导致效率低下，使系统大部分时间都花在了进程切换上，而真正用于执行进程的时间减少</p></blockquote><h2 id="调度算法的评价指标"><a href="#调度算法的评价指标" class="headerlink" title="调度算法的评价指标"></a>调度算法的评价指标</h2><ul><li><p><strong>CPU利用率</strong>：指CPU“忙碌”的时间占总时间的比例<br>  CPU忙碌时间(+IO时间)/总时间</p></li><li><p><strong>系统吞吐量</strong>：单位时间内完成作业的数量<br>  总共完成的作业数/总时间</p></li><li><p><strong>周转时间</strong>：是指从作业被提交给系统开始，到作业完成为止的这段时间间隔，作业被提交给系统开始到作业完成的时间，包括高级调度、低级调度的时间、进程在CPU执行的时间、等待I/O的时间</p><ol><li><strong>周转时间</strong>=作业完成时间-作业提交时间</li><li><strong>平均周转时间</strong>=各作业周转时间之和/作业数</li><li><strong>带权周转时间</strong>= 作业周转时间 / 作业实际运行时间 = （作业完成时间 - 作业提交时间）/ 作业实际运行时间<br>周转时间相同的情况下，作业运行时间长的，用户体验更好（浪费的时间少，带权周转时间一定大于 1，越小越好</li><li><strong>平均带权周转时间</strong>=各作业带权周总时间之和/作业数</li></ol></li><li><p><strong>等待时间</strong>：指进程/作业处于等待处理机状态时间之和，等待时间越长，用户满意度越低</p><ol><li>等待时间=进程/作业处于等待处理机状态时间之和</li><li>对于进程：等待时间是进程建立之后，等待被服务的时间之和（等待I/O的时间不计入）</li><li>对于作业：作业在外存后备队列等待被调度的时间 + 建立进程之后的等待时间</li></ol></li><li><p><strong>响应时间</strong>：用户提交请求到首次产生响应所用的时间</p></li></ul><h2 id="调度算法-早期系统"><a href="#调度算法-早期系统" class="headerlink" title="调度算法(早期系统)"></a>调度算法(早期系统)</h2><h3 id="先来先服务FCFS"><a href="#先来先服务FCFS" class="headerlink" title="先来先服务FCFS"></a>先来先服务FCFS</h3><ul><li><strong>先来先服务</strong>（FCFS：First Come First Service）<ol><li>公平角度考虑，作业/进程谁先到后备/就绪队列的谁先得到服务，非抢占式算法</li><li>优点：公平，算法简单</li><li>缺点：对<strong>长作业（进程）有利，对短作业不利</strong>（带权周转时间很大）比如下面例题中P3的带权周转时间为8</li><li>不会导致饥饿</li></ol></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/28/dceb6edebf04cf607997876d58907fd5.png"></p><h3 id="作业优先SJF"><a href="#作业优先SJF" class="headerlink" title="作业优先SJF"></a>作业优先SJF</h3><ul><li><strong>短作业优先</strong>（SJF：Shortest Job First）<ol><li>算法思想：追求最少的平均等待时间，最少平均周转时间，最少平均带权周转时间</li><li>算法规则：<strong>需要服务时间最短的作业。进程先得到服务</strong></li><li>可以调度作业和进程（短进程优先算法SPF: Shortest Process First）</li><li>SJF和SPF是<strong>非抢占式</strong>算法，抢占式版本：<strong>最短剩余时间优先算法</strong>(SRTN,Shortest Remaining Time Next)</li><li>优点：“最短的”平均等待时间、平均周转时间，最短剩余时间优先算法更短</li><li>缺点：不公平，短作业有利，长作业不利。    </li><li>可能导致饥饿，如果有源源不断的短作业到来，长作业可能一直得不到服务（饿死）</li></ol></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/28/cd4050ae0953e51e7519dd5603430bed.png"></p><h3 id="最短剩余时间优先SRTN"><a href="#最短剩余时间优先SRTN" class="headerlink" title="最短剩余时间优先SRTN"></a>最短剩余时间优先SRTN</h3><ul><li><strong>最短剩余时间优先算法</strong>(SRTN,Shortest Remaining Time Next)<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/28/8e127ff4f943a6e48afc4fe1687d2083.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/28/2302f774fa71363932727c7e4b575f55.png"></li></ul><h3 id="高响应比优先HRRN"><a href="#高响应比优先HRRN" class="headerlink" title="高响应比优先HRRN"></a>高响应比优先HRRN</h3><ul><li><strong>高响应比优先</strong>（HRRN：Highest Response Ratio Next）<ol><li>算法思想：综合考虑作业/进程的等待时间和服务时间</li><li>算法规则：每次调度时选择<strong>响应比最高</strong>的作业/进程。<strong>响应比=(等待时间+要求服务时间)/要求服务时间</strong>（响应比&gt;=1）</li><li>非抢占式，除非当前作业/进程主动放弃处理机，才需要调度</li><li>优点：综合考虑了<strong>等待时间和运行时间</strong>，等待时间相同时，要求服务时间短的优先(SJF的优点)，要求服务时间相同时，等待时间长的优先(FCFS的优点)</li><li>对于长作业来说，随着等待时间越来越久，其响应比也会越来越大，从而避免了长作业饥饿的问题</li></ol></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/28/b7428d46a12c3b8cbeb07fb9a2dc2e25.png"></p><h3 id="对比"><a href="#对比" class="headerlink" title="对比"></a>对比</h3><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/28/6f9fb03aed74db90e1eb9a5f9de21bc2.png"></p><h2 id="调度算法（交互式系统）"><a href="#调度算法（交互式系统）" class="headerlink" title="调度算法（交互式系统）"></a>调度算法（交互式系统）</h2><h3 id="时间片轮转RR"><a href="#时间片轮转RR" class="headerlink" title="时间片轮转RR"></a>时间片轮转RR</h3><ul><li><strong>时间片轮转</strong>（RR：Round-Robin)<ol><li>常用于分时操作系统，注重响应时间，而非周转时间</li><li>算法思想：公平、轮流地为各个进程服务，让每个进程在一定时间间隔内都可以得到响应</li><li>算法规则：按照各进程到达就绪队列的顺序,轮流让各个进程执行一个时间片(如100ms) </li><li>若进程未在一个时间片内执行完,则剥夺处理机,将进程重新放到就绪队列队尾重新排队。</li><li>用于进度调度（作业在放入内存并建立进程后才能被分配处理机时间片）</li><li>抢占式算法，由时钟中断通知CPU时间片已到，不会饥饿</li><li>缺点：高频率进程切换，有一定的开销，不区分任务的紧急程度</li><li>优点：公平；响应快，适用于分时操作系统</li></ol></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/28/5032c3cd79a2b114c0fd32e44967e576.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/28/d54338fb3b4bc407ef4d7351130b235f.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/28/9ee3f45cddc0a8de9b8fc91e5134d7b2.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/28/0c7efc1ec90a7dc093c9643b1309ae10.png"></p><h3 id="优先级调度算法"><a href="#优先级调度算法" class="headerlink" title="优先级调度算法"></a>优先级调度算法</h3><ul><li><strong>优先级调度算法</strong><ol><li>调度时选择<strong>优先级高</strong>的进程，可以作业调度和进程调度以及I/O调度</li><li>适用于实时操作系统，可能发生饥饿</li></ol></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/28/e5c391c62f67a9b137493df6f145b5fa.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/28/037e8caec9acb4e01465e29df0365a24.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/28/0d7a887e9e40726b2837f8f634c457d8.png"></p><h3 id="多级反馈队列调度算法"><a href="#多级反馈队列调度算法" class="headerlink" title="多级反馈队列调度算法"></a>多级反馈队列调度算法</h3><ul><li>对其他算法权衡折中，抢占式，可能导致饥饿</li><li>算法规则<ol><li>设置多级就绪队列，各级队列优先级从高到低，时间片从小到大</li><li>新进程到达时先进入第1级队列，按FCFS原则排队等待被分配时间片，若用完时间片进程还未结束，则进程进入下一级队列队尾。如果此时已经是在最下级的队列，则重新放回该队列队尾</li><li>只有第k级队列为空时，才会为k+1级队头的进程分配时间片</li><li><a href="https://www.bilibili.com/video/BV1YE411D7nH?p=17">动画演示</a></li></ol></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/bb186770ed9559f785aa6812cdabd2cc.png"></p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/dd10ab244dd7d5cc396a45cd05cb0ddc.png"></p><h1 id="进程同步与互斥"><a href="#进程同步与互斥" class="headerlink" title="进程同步与互斥"></a>进程同步与互斥</h1><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/f86ad32bfaea48db1e57a2a8becbd20d.png"></p><ul><li><p><strong>进程同步</strong></p><ol><li>进程具有异步性，各并发执行的进程以各自独立、不可预测的速度向前推进。</li><li>有时需要保证不同的进程按照特地的次序推进，比如管道读、写数据两个操作必需按照“写数据-&gt;读数据”的顺序执行，所以引入进程同步的问题</li><li>进程同步又叫进程的“直接制约关系”，它是指为了完成某种任务而建立两个或多个进程</li><li>这些进程因为需要在某些位置上协调工作次序而产生制约关系。</li></ol></li><li><p><strong>进程互斥</strong></p><ol><li><p>临界资源：一个时间段内只允许一个进程使用的资源（比如一些物理设备，变量数据，内存缓冲区）</p></li><li><p>对临界资源的访问必需互斥地进行，互斥又叫“间接制约关系”</p></li><li><p>进程互斥指一个进程访问某些临界资源时，另一个想要访问该临界资源的进程必需等待，直到资源被释放。</p></li><li><p>对临界资源的互斥访问，可以在逻辑上分为如下四个部分</p><pre><code> do&#123;     entry section;  //进入区 &#123;上锁&#125;     critical section;  //临界区  &#123; 访问临界资源的那段代码&#125;     exit section;     //退出区   &#123;解锁&#125;     remainder section; //剩余区 &#123;做其他处理&#125; &#125;</code></pre></li></ol></li><li><p>为了实现对临界资源的互斥访问，需要遵循以下原则</p><ol><li><strong>空间让进</strong><br>临界区空闲时，可以允许一个请求进入临界区的进程立即进入临界区</li><li><strong>忙则等待</strong><br>当已有进程进入临界区时，其他试图进入临界区的进程必须等待</li><li><strong>有限等待</strong><br>对请求访问的进程，应保证能在有限时间内进入临界区(保证不会饥饿)</li><li><strong>让权等待</strong><br>当进程不能进入临界区时，应立即释放处理机，防止进程忙等待</li></ol></li></ul><h2 id="进程互斥软件实现"><a href="#进程互斥软件实现" class="headerlink" title="进程互斥软件实现"></a>进程互斥软件实现</h2><ul><li><strong>单标志法</strong><br>算法思想：两个进程在<strong>访问完临界区后</strong>会把使用临界区的权限转交给另一个进程。也就是说<strong>每个进程进入临界区的权限只能被另一个进程赋予</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/731b6f044ab528989f2fa1062396c447.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/237f9e041fdfd0123289a1d09713d5f5.png"></p><ul><li><strong>双标志先检查法</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/51e07e90ddadfa31dc0ff035d3c891cb.png"></p><ul><li><strong>双标志后检查法</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/275bd64a2e8d4613edd4a404aa3c59fc.png"></p><ul><li><strong>Peterson算法</strong><br>Perterson算法用软件方法解决了进程互斥问题，<strong>遵循了空闲让进、忙则等待、有限等待三个原则</strong>，但是依然<strong>未遵循让权等待</strong>的原则</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/6f567cdad0d1515a8d8a9d30abc7f3a8.png"></p><h2 id="进程互斥硬件实现"><a href="#进程互斥硬件实现" class="headerlink" title="进程互斥硬件实现"></a>进程互斥硬件实现</h2><ul><li><strong>中断屏蔽方法</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/09f753f261223ebfb6d88b1e6a373acc.png"></p><ul><li><strong>TestAndSet指令</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/2933780d4e37df6a0c7fb0c40ba8c764.png"></p><ul><li><strong>Swap指令</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/a5fe75ea3d34489db4e19d09fc58d1f8.png"></p><h2 id="信号量机制"><a href="#信号量机制" class="headerlink" title="信号量机制"></a>信号量机制</h2><p>针对以上两种实现方法无法实现的问题，1965年，荷兰学者<strong>Dijkstra</strong>提出了一种卓有成效的实现进程互斥、同步的方法——<strong>信号量机制</strong></p><ul><li>用户进程可以通过使用操作系统提供的<strong>一对原语</strong>来对<strong>信号量</strong>进行操作,从而很方便的实现了进程互斥、进程同步。</li><li>信号量其实就是一个变量(可以是 个整数,也可以是更复杂的记录型变量),可以用一个信号量来<strong>表示系统中某种资源的数量</strong>,比如:系统中只有一台打印机,就可以设置一个初值为1的信号量</li><li><strong>原语</strong>是一种特殊的程序段,其<strong>执行只能一气呵成,不可被中断</strong>。原语是由<strong>关中断/开中断指令</strong>实现的。</li><li>软件解决方案的主要问题是由“进入区的各种操作无法一气呵成” ,因此如果能把进入区、退出区的操作都用“原语”实现,使这些操作能“一气呵成”就能避免问题。</li><li><strong>一对原语</strong>：<code>wait(S)</code>原语和<code>signal(S)</code>原语,可以理解为函数,函数名分别为wait和signal,括号里的<code>信号量S</code>就是参数。</li><li>wait, signal原语常<code>简称为P,V操作</code>(来自荷兰语proberen和verhogen) 。因此,做题的时候常把wait(S).signal(S)两个操作分别写为<code>P(S)</code>、<code>V(S)</code></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/f28cd6bd7144dacbc922b8a94f7010e1.png"></p><ul><li><strong>整型信号量</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/550c20f518820ecebbf51f460d359efe.png"></p><ul><li><strong>记录型信号量</strong><br><a href="https://www.bilibili.com/video/BV1YE411D7nH?p=21">动画演示</a></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/bd4a1a080acd5ddc975d40729772c320.png"></p><ul><li><strong>信号量机制实现进程互斥</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/f1d372d4dc89e34140a6f575b0835a82.png"></p><ul><li><strong>信号量机制实现进程同步</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/9725eea0587c84eecbf0439147dab141.png"></p><ul><li><strong>信号量机制实现前驱关系</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/7e90239a4e0b457ceb54070e5c1667d1.png"></p><ul><li><strong>总结</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/787e8c3e0180caba244bdbfcbfd19b9e.png"></p><h2 id="生产者消费者问题"><a href="#生产者消费者问题" class="headerlink" title="生产者消费者问题"></a>生产者消费者问题</h2><ul><li><strong>问题分析</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/11365e55cebc6b74328eb9f4e2b7633c.png"></p><ul><li><strong>如何实现</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/5938225a1587db4475d9a3ac114b64b3.png"></p><p><strong>能否改变相邻P、V操作的顺序？</strong><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/922cca5307bc0561a31645071261302d.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/d533b343f32b290106ec998a784adc7d.png"></p><h2 id="多生产者消费者问题"><a href="#多生产者消费者问题" class="headerlink" title="多生产者消费者问题"></a>多生产者消费者问题</h2><ul><li><strong>问题分析</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/c11ccc721e66cd7735a5dbebad46145c.png"></p><ul><li><strong>如何实现</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/e69f38723527235f89f85c6134974161.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/2d71cc4b72391d7dc071d3cc1d397ec9.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/229c421bee513c9d5ba5a00a83ef767f.png"></p><h2 id="吸烟者问题"><a href="#吸烟者问题" class="headerlink" title="吸烟者问题"></a>吸烟者问题</h2><ul><li><strong>问题分析</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/111a2f89ec29d6f0627531314054fddf.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/2769a0617e764e289a3a302b1eadf690.png"></p><ul><li><strong>如何实现</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/47fd14ae737b5dbd33fbc82bb9be63f4.png"></p><h2 id="读写者问题"><a href="#读写者问题" class="headerlink" title="读写者问题"></a>读写者问题</h2><ul><li><strong>问题分析</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/a7723d8eda3906f698501c25a2e2992a.png"></p><ul><li><strong>如何实现</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/79fa92ea5478be4a56028b3ab0097124.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/7770a31fe3df6639fa87b04344ddd074.png"></p><h2 id="哲学家就餐问题"><a href="#哲学家就餐问题" class="headerlink" title="哲学家就餐问题"></a>哲学家就餐问题</h2><ul><li><strong>问题分析</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/2c373a09712c045b2d8c9cef8e5ce06b.png"></p><ul><li><strong>如何解决</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/741802daff0d4ff4b9ea60c5a7ba550d.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/9003fdffc57851ace8a5a64ac4bf5cc8.png"></p><h2 id="管程"><a href="#管程" class="headerlink" title="管程"></a>管程</h2><ul><li><p>为什么引入管程<br>信号量机制编写程序困难，PV顺序错误可能导致死锁</p></li><li><p><strong>管程的定义</strong><br>  管程是一种高级的同步机制，是一种特殊的软件模块，包括：</p><ol><li>局部于管程的共享数据结构说明</li><li>对数据结构进行操作的一组过程（函数）</li><li>对共享数据初始化的语句</li><li>管程有一个名字（就是OOP里面的封装思想）</li></ol></li><li><p><strong>管程的基本特征</strong></p><ol><li>管程中的共享数据结构只能被管程内部的过程（函数）访问</li><li>一个进程只能通过调用管程内的过程（函数）才能访问管程内的数据</li><li>每次仅允许一个进程在管程内执行某个内部过程（这个特性是编译器实现的）</li></ol></li><li><p><strong>用管程解决生产者消费者问题</strong></p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/4b9be5f3242e839af4169b37c902d306.png"></p><ul><li><strong>Java</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/cc2559b64af379f7a31b797ea898dfd7.png"></p><h1 id="死锁"><a href="#死锁" class="headerlink" title="死锁"></a>死锁</h1><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/dbc130be6a2f1a4bfc16d762c4695f46.png"></p><ul><li><p>什么是死锁<br>并发环境下，各进程因为竞争资源造成的：互相等待对方手里的资源，导致各进程都阻塞，无法向前推进的现象</p></li><li><p>死锁、饥饿、死循环</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/da6e2ff9f6d44e4670622ea6c2d9e0e8.png"></p><ul><li><p>死锁产生的条件<br>  对不可剥夺资源分配不合理可能导致死锁</p><ol><li><strong>互斥条件</strong><br>争抢互斥资源</li><li><strong>不剥夺条件</strong><br>进程获得的资源未使用完成，其它进程不能强行夺走，只能等待主动释放</li><li><strong>请求和保持条件</strong><br>进程已经保持了至少一个资源，但是又提出新的资源请求，同时该资源被其它进程占有，此时请求进程被阻塞，但是对自己拥有资源又保持不放</li><li><strong>循环等待条件</strong><br>死锁时存在循环等待链，但是存在循环等待链不一定出现死锁（同类资源大于1，可能链条外的某个进程释放了资源）</li></ol></li><li><p>死锁的处理策略</p><ol><li><strong>预防死锁</strong><br>破坏产生死锁的条件</li><li><strong>避免死锁</strong><br>避免系统进入不安全状态（银行家算法）</li><li><strong>检测和解除</strong><br>允许死锁发生，操作系统负责检测死锁并解除</li></ol></li></ul><h2 id="死锁的处理"><a href="#死锁的处理" class="headerlink" title="死锁的处理"></a>死锁的处理</h2><h3 id="不允许死锁发生"><a href="#不允许死锁发生" class="headerlink" title="不允许死锁发生"></a>不允许死锁发生</h3><ul><li><strong>静态策略：预防死锁</strong><ol><li><strong>破坏互斥条件</strong><br>将物理互斥的资源改造为逻辑共享设备，SPOOLing技术将打印机改造成共享设备</li><li><strong>破坏不剥夺条件</strong><br>方案一：某个进程所需的资源得不到满足时，主动释放自己保持的资源，以后再重新申请<br>方案二：操作系统协助，将资源剥夺给优先级高的资源<br>实现复杂，可能造成获得资源前一阶段的工作白做，而且反复申请资源增加系统开销，可能导致进程饥饿</li><li><strong>破坏请求和保持条件</strong><br>静态分配法：进程分配好需要的资源再投入运行，运行时不再申请<br>实现简单，但是资源利用率极低，可能导致某些进程饥饿​</li><li><strong>破坏循环等待条件</strong><br>顺序资源分配法：首先给系统资源编号，每一个进程必需按照进程递增的顺序请求资源（大编号无法请求小编号资源，也就不能线程循环等待的情况）<br>按编号申请资源，编程很麻烦不方便添加新设备，需要重新分配编号；进程实际使用资源的顺序可能和编号顺序不一致，导致需要提前申请不必要的资源导致浪费​</li></ol></li><li><strong>动态策略：避免死锁</strong><ol><li>什么是安全序列<br>系统按照这种序列分配资源，能让每个进程都顺利完成</li><li>什么是系统的不安全状态<br>只要存在一个安全序列，系统就是安全状态<br>找不到安全序列，系统就是不安全状态，意味着可能所有进程都无法顺利执行下去（如果有进程提前归还资源，那系统也有可能可以回到安全状态）<br>不安全状态可能发生死锁（不一定发生），安全状态一定不会死锁</li><li>银行家算法</li></ol></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/6b8c8a1fc9771cbf256a401f7cfa6d14.png"></p><h3 id="允许死锁发生"><a href="#允许死锁发生" class="headerlink" title="允许死锁发生"></a>允许死锁发生</h3><ul><li><strong>死锁检测</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/bb14c3d0b17ec907154b4e26ca70deff.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/72761f62025d9ab2c856d77967fb88a9.png"></p><ul><li><strong>死锁解除</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/499e642ccb42f3b8792987a11109a31f.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;进程管理&quot;&gt;&lt;a href=&quot;#进程管理&quot; class=&quot;headerlink&quot; title=&quot;进程管理&quot;&gt;&lt;/a&gt;进程管理&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/</summary>
      
    
    
    
    <category term="计算机基础" scheme="http://xiaoliblog.cn/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/"/>
    
    <category term="操作系统" scheme="http://xiaoliblog.cn/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
    
    <category term="操作系统" scheme="http://xiaoliblog.cn/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>操作系统⚡概述</title>
    <link href="http://xiaoliblog.cn/2021/01/15/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F_%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%BF%B0/"/>
    <id>http://xiaoliblog.cn/2021/01/15/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F_%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%BF%B0/</id>
    <published>2021-01-15T05:03:02.800Z</published>
    <updated>2021-01-15T05:13:43.509Z</updated>
    
    <content type="html"><![CDATA[<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><div class="note success flat"><p>👉👉👉<a href="https://blog.csdn.net/gl620321/article/details/107128661?utm_source=app">思维导图来源</a>||<a href="https://mubu.com/doc/Cd-Y4YOfkh#">操作系统王道幕布笔记—ZaxTyson</a>||<a href="https://www.bilibili.com/video/BV1YE411D7nH?p=1">操作系统王道学习视频</a></p></div><h1 id="操作系统引论及概述"><a href="#操作系统引论及概述" class="headerlink" title="操作系统引论及概述"></a>操作系统引论及概述</h1><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/04/41a83c1d8dace273dc87b961c251a70f.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/01/24b735899f12b5416d21e4c0ebb4c288.png"></p><h2 id="OS功能和目标"><a href="#OS功能和目标" class="headerlink" title="OS功能和目标"></a>OS功能和目标</h2><p><code>操作系统</code>(Operating System，OS)是计算机系统中最重要的系统软件，它管理整个计算机系统的软件资源和硬件资源，是用户与计算机硬件的桥梁，是其它软件和程序的运行基础。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/01/c2d24416e4d4d5732a88766f3d7817f2.png"><br>（1）<code>作为系统资源的管理者</code></p><ul><li><code>处理机</code>管理<br>计算机系统中最重要的资源是中央处理机（简称CPU），任何计算都必须在CPU上进行。<br>在处理机管理中，最核心的问题是CPU时间的分配问题，这涉及分配的策略和方法。</li><li><code>存储器</code>管理<br>存储管理的主要工作是对内存储器进行合理分配、有效保护和扩充。<br>内存是现代计算机系统的中心，是可以被CPU和I/O设备共同访问的数据仓库。<br>内存通常是CPU直接寻址和访问的、唯一的大容量存储器。</li><li><code>设备</code>管理<br>设备管理是操作系统中最庞杂、琐碎的部分，其原因是：<br>①设备管理涉及很多实际的物理设备，这些设备品种繁多、用法各异。<br>②各种外部设备都能和主机并行工作，而且，有些设备可被多个进程所共享。<br>③主机和外部设备，以及各类外部设备之间的速度极不匹配，极差很大。</li><li><code>文件</code>管理<br>以上三种管理都是针对计算机的硬件资源的管理。<br>文件系统管理则是对软件资源的管理。为了管理庞大的系统软件资源及用户提供的程序和数据，操作系统将它们组织成文件的形式，操作系统对软件的管理实际上是对文件系统的管理。</li><li><code>作业</code>管理<br>作业指用户在一次计算过程中或者事务处理过程中，要求计算机所作工作的集合。<br>作业由程序、数据和作业说明书组成。在批处理系统中，作业是占据内存的基本单位。<br>作业管理是通过管理让这些作业按照自己所想要的方式来进行工作。</li></ul><p>（2）<code>作为用户和计算机硬件之间的接口</code></p><ul><li>命令接口<br>命令接口<code>允许用户直接使用</code>，命令接口又分<code>联机命令接口</code>和<code>脱机命令接口</code>。<br>联机命令接口：用户说一句，系统做一句（<code>交互式命令接口</code>）。<br>脱机命令接口：用户说一堆，系统做一堆（批<code>处理命令接口</code>）。</li><li>程序接口<br>用户程序<code>间接使用</code></li><li>GUI（图像用户界面）</li></ul><h2 id="OS特征"><a href="#OS特征" class="headerlink" title="OS特征"></a>OS特征</h2><p>OS四大特征：<code>并发</code>、<code>共享</code>、<code>虚拟</code>、<code>异步</code>。</p><ul><li><p>并发<br><code>并发</code>: 指两个或多个事件在同一<code>时间间隔内</code>发生。宏观上是同时发生的,但微观上是交替发生的。<br><code>并行</code>: 指两个或多个事件在同一<code>时刻同时</code>发生。<br>并发和共享是操作系统的两个最基本特征。<br>操作系统并发性指计算机系统中同时存在着多个运行着的程序。</p><blockquote><p>例如：8-9点一号执行，9-10点二号执行，10-11点三号执行，为并发情况。而在8点一二号一起执行为并行情况。</p></blockquote></li><li><p>共享<br>资源共享指系统中的资源可供内存中多个并发执行的进程共同调用。<br><code>互斥共享</code><br>｜ 同一个时间段只允许一个进程访问资源(摄像头/麦克风)<br><code>同时共享</code><br>｜ 允许一个时间段多个进程“同时”(宏观上)访问某些资源（微观上是分时共享），比如硬盘读写<br>并发和共享互为存在条件。</p></li><li><p>虚拟<br>虚拟是指把一个物理上的实体变为若干个逻辑上的对应物。物理实体(前者)是实际存在的,而逻辑上对应物(后者)是用户感受到的。</p></li><li><p>异步<br>异步是指,在多道程序环境下,允许多个程序并发执行,但由于资源有限,进程的执行不是一贯到底的,是<code>走走停停</code>（等待资源进程阻塞）,以不可预知的速度向前推。</p></li></ul><h2 id="OS发展与分类"><a href="#OS发展与分类" class="headerlink" title="OS发展与分类"></a>OS发展与分类</h2><ul><li><p>手工操作阶段<br>纸带机（用户独占全机，人机速度矛盾，资源利用率极低）。</p></li><li><p>单道批处理系统<br>引入了脱机输入/输出技术（磁带），通过<code>监督程序</code>（操作系统雏形）控制作业输入输出。<br>外围机负责把输入纸带录入磁带。<br>缓解了人机速度矛盾，提高了资源利用率，但是CPU是串行的，大量CPU时间浪费在I/O等待上。</p></li><li><p>多道批处理系统<br>磁带往内存输入多道程序，并发执行，输入、计算、输出互不干扰<br>操作系统诞生，引入了中断技术，资源利用率大幅上升，但是缺少人机交互功能，用户响应时间长（用户提交作业之后只能等待作业完成）。</p></li><li><p>分时操作系统<br>分时操作系统：计算机以<code>时间片</code>为单位<code>轮流</code>为各个用户/作业服务,各个用户可通过终端与计算机进行交互。<br>主要优点:用户请求可以被即时响应,解决了人机交互问题。允许多个用户同时使用一台计算机,并且用户对计算机的操作相互独立,感受不到别人的存在。<br>主要缺点:不能优先处理一些紧急任务。操作系统对各个用户/作业都是完全公平的,循环地为每个用户/作业服务一个时间片,不区分任务的紧急性。</p></li><li><p>实时操作系统<br><code>硬实时系统</code>：必须在绝对严格的规定时间内完成处理。<br><code>软实时系统</code>：能接受偶尔违法时间规定。<br>主要优点:能够优先响应一些紧急任务,某些紧急任务不需时间片排队。在实时操作系统的控制下,计算机系统接收到外部信号后及时进行处理,并且要在严格的时限内处理完事件。实时操作系统的主要特点是及时性和可靠性。</p></li><li><p>网络操作系统<br>网络操作系统:是伴随着计算机网络的发展而诞生的,能把网络中各个计算机有机地结合起来,实现数据传送等功能,实现网络中各种资源的共享(如文件共享)和各台计算机之间的通信。(如: Windows NT就是一种典型的网络操作系统,网站服务器就可以使用)</p></li><li><p>分布式操作系统<br>分布式操作系统:主要特点是分布性和并行性。系统中的各台计算机地位相同,任何工作都可以分布在这些计算机上,由它们并行、协同完成这个任务。</p></li></ul><h1 id="OS运行机制-体系结构"><a href="#OS运行机制-体系结构" class="headerlink" title="OS运行机制/体系结构"></a>OS运行机制/体系结构</h1><h2 id="运行机制"><a href="#运行机制" class="headerlink" title="运行机制"></a>运行机制</h2><ul><li><p>指令<br>指令就是处理器(CPU)能识别、处理的最基本命令。<br><code>特权指令</code>：如内存清零指令。（不允许用户程序使用）<br><code>非特权指令</code>：如普通的运算指令。</p></li><li><p>处理机状态<br><code>用户态</code>：此时CPU只能执行非特权指令。<br><code>核心态</code>：特权命令、非特权命令都可执行。</p><blockquote><p>处理机状态用程序状态寄存器(PSW)中的某标志位来标识当前处理器处于什么状态。如0为用户态，1为核心态。</p></blockquote></li><li><p>程序<br><code>内核程序</code>：系统的管理者，可以执行特权和非特权指令，运行在核心态。<br><code>应用程序</code>：只能执行非特权指令，运行在用户态。</p></li></ul><h2 id="OS内核"><a href="#OS内核" class="headerlink" title="OS内核"></a>OS内核</h2><p>计算机最底层的软件，是操作系统最核心的部分。实现操作系统<code>内核功能</code>的程序才是<code>内核程序</code>。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/01/222957e356925c52dca1823b5730791a.png"></p><ul><li><code>时钟管理</code><br>实现计时功能。</li><li><code>中断处理</code><br>负责实现中断机制。</li><li><code>原语</code><br>是一种特殊的程序，处于操作系统最底层，是最接近硬件的部分。<br>运行时间短，调用频繁，具有<code>原子性</code>——运行只能一气呵成，不可中断。</li><li><code>系统资源管理</code><br>进程管理、存储管理、设备管理。<blockquote><p>有的操作系统不把这个作为“内核功能”（微内核)，不同操作系统，对内核功能的划分可能不一样。</p></blockquote></li></ul><h2 id="体系结构"><a href="#体系结构" class="headerlink" title="体系结构"></a>体系结构</h2><p>操作系统的体系结构：<code>大内核</code>和<code>微内核</code>。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/01/926936683836e9fe7e5cbf31a498d3c5.png"></p><ul><li><p>大内核<br>将操作系统的<code>主要功能模块</code>都作为系统内核，运行在核心态。<br>高性能，但是内核代码庞大难以维护。</p></li><li><p>微内核<br>只把<code>基本概念</code>保留在内核。<br>功能少，功能清晰方便维护，但是需要频繁的在核心态和用户态之间切换，性能低。</p></li></ul><blockquote><p>OS体系结构可以类比于企业的管理问题：<code>内核</code>就是企业的<code>管理层</code>，负责一些重要的工作。只有管理层才能执行<code>特权指令</code>，普通员工只能执行<code>非特权指令</code>。<code>用户态</code>、<code>核心态</code>之间的<code>切换</code>相当于普通员工和管理层之间的工作交流。<br><code>大内核</code>：企业初创时体量不大，管理层的人会负责大部分的事情。<br><code>微内核</code>：随着企业体力越来越大，管理层只负责最核心的一些工作。</p></blockquote><h1 id="中断和异常"><a href="#中断和异常" class="headerlink" title="中断和异常"></a>中断和异常</h1><p>中断机制的诞生：<br>早期计算机，各程序只能串行执行，系统资源利用率低。<br>为了解决上述问题，人们发明操作系统，引入中断机制，实现了多道程序并发执行。<br><code>本质：发生中断</code>就意味着<code>需要操作系统介入,开展管理工作</code>。</p><h2 id="中断的概念和作用"><a href="#中断的概念和作用" class="headerlink" title="中断的概念和作用"></a>中断的概念和作用</h2><p>中断信号可以使CPU从<code>用户态</code>切换为<code>核心态</code>,<code>使操作系统获得计算机的控制权</code>。有了中断才能实现多道程序并发执行。</p><blockquote><p>由于操作系统的管理工作(比如进程切换、分配I/O设备等)需要使用<code>特权指令</code>,因此CPU要从用户态转为核心态。</p></blockquote><p><code>中断</code>是CPU从用户态-&gt;核心态切换的<code>唯一途径</code>。<br>核心态-&gt;用户态切换只需要执行一个<code>特权指令</code>，将<code>PSW</code>设置为<code>0</code>。</p><h2 id="中断的分类"><a href="#中断的分类" class="headerlink" title="中断的分类"></a>中断的分类</h2><ul><li><p><code>内中断</code>(异常/例外/陷入)<br>信号来源CPU<code>内部</code>，<code>与当前执行的指令有关</code><br><code>自愿中断(指令中断) </code>：</p><pre><code>      系统调用时使用的访管指令(陷入指令/trap指令)</code></pre><p><code>强迫中断</code>：</p><pre><code>      1.硬件故障（缺页错误）2.软件中断（除0错误）</code></pre><p>陷阱、陷入(trap)</p><pre><code>      有意而为之的异常，系统调用</code></pre><p>故障(fault)</p><pre><code>      错误条件引起的，可能被故障处理程序修复的，如缺页</code></pre><p>终止(abort)</p><pre><code>      致命错误，无法修复，终止处理程序不再将控制返回给应用程序，如除0</code></pre></li><li><p><code>外中断</code>(狭义中断)<br>信号来源CPU<code>外部</code>，<code>与当前执行的指令无关</code><br><code>外设请求</code>：</p><pre><code>       外设(比如打印机)I/O操作完成发出中断信号       键盘输入一个字符​</code></pre><p><code>人工干预</code>：</p><pre><code>        用户强制终止一个进程</code></pre></li></ul><h1 id="系统调用"><a href="#系统调用" class="headerlink" title="系统调用"></a>系统调用</h1><p>操作系统作为用户和计算机硬件之间的接口，需要向上提供一些简单易用的服务。主要包括命令接口和程序接口。其中，程序接口由一组<code>系统调用</code>组成。<br>系统调用是操作系统提供给应用程序(程序员/编程人员)使用的接口,可以理解为一种可供应用程序调用的特殊函数,应用程序可以发出<code>系统调用请求</code>来获得操作系统的服务,操作系统会对各个请求进行<code>协调管理</code>。</p><blockquote><p>例如A和B共用打印机，A按下打印后，打印机工作，B接着又按下打印，打印机不会把A和B的打印内容混合在一起。</p></blockquote><p>应用程序通过<code>系统调用请求</code>操作系统的服务。<br>​系统中的各种共享资源都由操作系统统一掌管,因此在用户程序中,凡是与资源有关的操作(如存储分配、I/O操作、文件管理等) ,都必须通过系统调用的方式向操作系统提出服务请求,由操作系统代为完成。这样可以保证系统的稳定性和安全性,防止用户进行非法操作。<br>系统调用相关的处理需要在<code>核心态</code>下完成。</p><h2 id="系统调用与库函数的区别"><a href="#系统调用与库函数的区别" class="headerlink" title="系统调用与库函数的区别"></a>系统调用与库函数的区别</h2><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/01/e7ab8bab64bae5282f57c5f7297e7ec8.png"></p><ul><li>系统调用是操作系统向上提供的接口</li><li>有的库函数是对于系统调用的进一步封装</li><li>大多数高级语言提供的库函数间接进行系统调用</li></ul><h2 id="系统调用过程"><a href="#系统调用过程" class="headerlink" title="系统调用过程"></a>系统调用过程</h2><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/01/7f5ff4cb6568a412aaa0f91b3528db13.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;参考&quot;&gt;&lt;a href=&quot;#参考&quot; class=&quot;headerlink&quot; title=&quot;参考&quot;&gt;&lt;/a&gt;参考&lt;/h1&gt;&lt;div class=&quot;note success flat&quot;&gt;&lt;p&gt;👉👉👉&lt;a href=&quot;https://blog.csdn.net/gl</summary>
      
    
    
    
    <category term="计算机基础" scheme="http://xiaoliblog.cn/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/"/>
    
    <category term="操作系统" scheme="http://xiaoliblog.cn/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
    
    <category term="操作系统" scheme="http://xiaoliblog.cn/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript🌞Ajax</title>
    <link href="http://xiaoliblog.cn/2021/01/15/%E5%89%8D%E7%AB%AF/JavaScript/JavaScript_Ajax/"/>
    <id>http://xiaoliblog.cn/2021/01/15/%E5%89%8D%E7%AB%AF/JavaScript/JavaScript_Ajax/</id>
    <published>2021-01-15T04:25:39.723Z</published>
    <updated>2021-01-15T05:28:28.107Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Ajax"><a href="#Ajax" class="headerlink" title="Ajax"></a>Ajax</h1><ul><li>Ajax：Asynchronous JavaScript And XML，即<strong>异步JavaScript和XML技术</strong>。</li><li>描述：不是一门新的语言或技术，是由JavaScript、XML、DOM、CSS等多种已有技术组合而成的一种浏览器端技术。</li><li>功能：<strong>用于实现与服务器进行异步交互的功能</strong>。</li><li>传统Web工作流程<br>每当用户触发一个页面HTTP请求，就需要服务器返回一个新的页面<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/24/594e68fd5921f40c42a89634c094311c.png"></li><li>Ajax工作流程<br>页面通过Ajax对象与服务器进行通信，然后通过DOM操作将返回的结果更新到页面中，整个过程都是在同一个页面中进行的<br>Ajax技术的创新之处在于，改善了传统的“请求-等待-响应-刷新-返回数据”模式，在信息返回之前，用户可以继续自己的操作，当前页面不会因为请求而刷新。这样大大的提高了交互性。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/24/13af6098b6a7580165ed0f207fc830be.png"></p><ul><li>相较于传统页面，Ajax技术的优势具体有以下几个方面：<ol><li>减轻服务器的负担</li><li>节省带宽</li><li>用户体验更好</li></ol></li></ul><h1 id="PHP服务器"><a href="#PHP服务器" class="headerlink" title="PHP服务器"></a>PHP服务器</h1><ul><li>服务器：若需要网页能被互联网中的其它用户访问，就要将网页发布到服务器上，用户通过网址来访问。</li><li>常用服务器：PHP、Java、Node.js、ASP.NET等</li><li>PHP是一种运行于服务器端的嵌入式脚本编程语言，内置了一个Web服务器。</li><li>PHP开发环境搭建：<ol><li>下载PHP、vc运行库、补丁（可能）<br>进入官网<a href="http://php.net/">http://php.net</a>下载PHP7.3.11版本(可以下最新版本)，得到一个压缩包，并解压到指定目录<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/24/e9e630ef5310e3350faf7c040c6c23d1.png"></li><li>创建目录<br>创建”<code>D:\web\php7.3</code>“作为PHP的安装目录，创建”<code>D:\web\htdocs</code>“作为站点目录</li><li>启动内置服务器<br>压缩包解压到“D:\web\php7.1”目录下，启动cmd命令行工具，<strong>切换目录到该目录中</strong>，执行以下命令<pre><code>  php -S localhost:8081 -t &quot;D:\web\htdocs&quot;</code></pre>上述命令中，”-S”用于启动内置Web服务器（S为大写），后面接网络地址和端口号，”-t”用于指定站点目录，此处为”D:\web\htdocs”</li><li>常见错误<br>”php“不是内部或外部命令,也不是可运行的程序或批处理文件，这是因为没有配置php的path环境变量。找到php的安装路径(包括压缩包名称)复制新建到path中<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/24/5463e84058f29b072b863d4561c12f87.png"><br>在cmd命令中php安装目录下下执行<pre><code> php -version</code></pre>显示版本信息即成功，其他情况可能是8081端口号被占用所造成。</li></ol></li></ul><h1 id="Ajax向服务器发送请求"><a href="#Ajax向服务器发送请求" class="headerlink" title="Ajax向服务器发送请求"></a>Ajax向服务器发送请求</h1><p>使用Ajax需要通过XMLHttpRequest构造函数创建Ajax对象。</p><pre><code>    var xhr=new XMLHttpRequest();</code></pre><p>创建完成后就可以使用该对象提供的方法向服务器发送请求。</p><ol><li><p><strong>open()</strong><br>open()方法用于创建一个新的HTTP请求，并指定请求方式、请求URL等。</p><pre><code> open(&#39;method&#39;,&#39;URL&#39;[,asyncFlag[,&#39;username&#39;[,&#39;password&#39;]]]) method：用于指定请求方式，如GET、POST，不区分大小写。 URL：表示请求的地址。 asyncFlag：可选参数，用于指定请求方式，同步请求为false，默认为异步请求true。 userName和password：可选参数，表示HTTP认证的用户名和密码。</code></pre><blockquote><p>同步请求和异步请求的区别在于是否阻塞代码的执行，默认的异步方式是非阻塞的，浏览器端的JS程序不用等待Web服务器的响应，可以继续处理其他事情，而同步则等待Web服务器的响应。</p></blockquote></li><li><p><strong>send()</strong><br>send()方法用于发送请求到Web服务器并接收响应。</p><pre><code> send(content)</code></pre></li><li><p><strong>setRequestHeader()</strong><br>setRequestHeader()方法用于单独指定某个HTTP请求头。</p><pre><code> setRequestHeader(&#39;header&#39;,&#39;value&#39;);</code></pre></li></ol><h2 id="GET请求"><a href="#GET请求" class="headerlink" title="GET请求"></a>GET请求</h2><ul><li><p>Get方式适合从服务器获取数据<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/24/1b14211b511540f6ef19a042cb403f8c.png"><br>在PHP服务器的Web站点目录<code>D:\web\htdocs</code>中，创建demo.html文件，编码实现Ajax请求，具体如下</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"> <span class="keyword">var</span> xhr = <span class="keyword">new</span> XMLHttpRequest();        <span class="comment">//①创建Ajax对象</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//onreadystatechange：监听Ajax状态变化（Ajax状态发生改变时触发此函数）</span></span></span><br><span class="line"><span class="javascript"> xhr.onreadystatechange = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;  <span class="comment">//④监听</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//readyState属性：表示Ajax状态，如为XMLHttpRequst.DONE表示此次已完成响应。</span></span></span><br><span class="line"><span class="javascript"> <span class="function"><span class="title">if</span>(<span class="params">xhr.readyState==XMLHttpRequest.DONE</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"> <span class="function"><span class="title">if</span>(<span class="params">xhr.status==<span class="number">200</span></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"> <span class="built_in">document</span>.write(xhr.responseText);</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="javascript">xhr.open(<span class="string">&#x27;GET&#x27;</span>,<span class="string">&quot;test.php?a=1&amp;b=2&quot;</span>);  <span class="comment">//②打开，建立HTTP连接</span></span></span><br><span class="line"><span class="javascript">xhr.send();<span class="comment">//③发送请求</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>和html文件同目录下创建<code>test.php</code>文件，写入以下信息：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> json_encode($_GET);  <span class="comment">//将URL参数转换为JSON输出</span></span><br></pre></td></tr></table></figure><p>然后启动PHP服务器后，在浏览器输入<a href="http://localhost:8081/demo.html">http://localhost:8081/demo.html</a>,<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/24/0523753cebb4c82cdb09cfa7eaff7436.png"></p></li><li><p>监听Ajax状态</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/24/27b7857f2e02fc707559e9fe9d126617.png"></p><p><strong>处理服务器返回的信息</strong></p><ul><li><strong>readyState属性</strong><br>readyState属性用于获取Ajax的当前状态，状态值有5种形式。</li></ul><table><thead><tr><th align="center">状态值</th><th align="center">XMLHttpRequest静态属性名</th><th align="center">说明</th><th align="center">解释</th></tr></thead><tbody><tr><td align="center">0</td><td align="center">UNSET</td><td align="center">未发送</td><td align="center">对象已创建</td></tr><tr><td align="center">1</td><td align="center">OPENED</td><td align="center">已打开</td><td align="center">open()方法已调用</td></tr><tr><td align="center">2</td><td align="center">HEADERS_RECEIVED</td><td align="center">收到响应头</td><td align="center">send()方法已调用</td></tr><tr><td align="center">3</td><td align="center">LOADING</td><td align="center">数据传送中</td><td align="center">响应体部分正在被接收</td></tr><tr><td align="center">4</td><td align="center">DONE</td><td align="center">完成</td><td align="center">数据接收完</td></tr></tbody></table><ul><li><p><strong>onreadystatechange属性</strong></p><p>  onreadystatechange事件属性用于感知readyState属性状态的改变，当readyState状态发送改变时，就会调用此事件。</p></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">var</span> xhr=<span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line">xhr.onreadystatechange=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(xhr.readyState);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="built_in">console</span>.log(xhr.readyState);</span><br><span class="line">xhr.open(<span class="string">&#x27;GET&#x27;</span>,<span class="string">&#x27;test.php&#x27;</span>);</span><br><span class="line">xhr.send(); </span><br><span class="line">&lt;/script&gt;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">0</span></span><br><span class="line"><span class="comment">1</span></span><br><span class="line"><span class="comment">2</span></span><br><span class="line"><span class="comment">3</span></span><br><span class="line"><span class="comment">4</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><p>可以看到readyState属性值初始值为0，当调用open()和send()方法后，readyState属性的值会发生变化，每次变化都会触发onreadystatechange事件。</p><ul><li><strong>status属性</strong><br>status属性用于返回当前请求的HTTP状态码，值为数值类型</li></ul><table><thead><tr><th align="center">状态码</th><th align="center">含义</th><th align="center">状态码</th><th align="center">含义</th></tr></thead><tbody><tr><td align="center">200</td><td align="center">正常</td><td align="center">403</td><td align="center">禁止</td></tr><tr><td align="center">301</td><td align="center">永久移动</td><td align="center">404</td><td align="center">找不到</td></tr><tr><td align="center">302</td><td align="center">临时移动</td><td align="center">500</td><td align="center">内部服务器错误</td></tr><tr><td align="center">304</td><td align="center">未修改</td><td align="center">502</td><td align="center">无效网关</td></tr><tr><td align="center">401</td><td align="center">未经授权</td><td align="center">504</td><td align="center">网关超时</td></tr></tbody></table><ul><li><p><strong>获取响应信息的相关属性</strong></p><table><thead><tr><th align="center">属性名</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">responseText</td><td align="center">将响应信息作为字符串返回</td></tr><tr><td align="center">responseXML</td><td align="center">将响应信息格式为XML Document对象并返回(只读)</td></tr></tbody></table></li><li><p><strong>服务端代码简介</strong></p></li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> json_encode($_GET);  <span class="comment">//将URL参数转换为JSON输出</span></span><br></pre></td></tr></table></figure><ol><li>$_GET：GET方式提交到服务器端的数据(必须大写)</li><li>json_encode：将参数转换为json格式</li><li>echo：输出，返回给客户端</li></ol><h2 id="Post请求"><a href="#Post请求" class="headerlink" title="Post请求"></a>Post请求</h2><ul><li>Post方式适合向服务器发送数据</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/24/d29da1c5cf33939f7d3d2f50ef6f3e9f.png"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">       <span class="keyword">var</span> xhr = <span class="keyword">new</span> XMLHttpRequest();</span></span><br><span class="line"><span class="javascript">       xhr.onreadystatechange = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">           <span class="function"><span class="title">if</span>(<span class="params">xhr.readyState==XMLHttpRequest.DONE</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">               <span class="function"><span class="title">if</span>(<span class="params">xhr.status==<span class="number">200</span></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                   <span class="built_in">document</span>.write(xhr.responseText);</span></span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line"><span class="javascript">       xhr.open(<span class="string">&#x27;POST&#x27;</span>,<span class="string">&#x27;test.php&#x27;</span>);</span></span><br><span class="line"><span class="javascript">      <span class="comment">//在HTTP请求头中指定实体内容的编码格式</span></span></span><br><span class="line"><span class="javascript">       xhr.setRequestHeader(<span class="string">&#x27;Content-type&#x27;</span>,<span class="string">&#x27;application/x-www-form-urlencoded&#x27;</span>);</span></span><br><span class="line"><span class="javascript">       <span class="comment">// xhr.send(&#x27;name=Lily&amp;age=18&#x27;);</span></span></span><br><span class="line"><span class="javascript">       <span class="keyword">var</span> name = <span class="string">&#x27;Lily&#x27;</span>;</span></span><br><span class="line"><span class="javascript">       <span class="keyword">var</span> age = <span class="number">18</span>;</span></span><br><span class="line"><span class="javascript">       xhr.send(<span class="string">&#x27;name=&#x27;</span> + name + <span class="string">&#x27;&amp;age=&#x27;</span> + age);</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> json_encode($_POST);</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/24/4b86a86cd1d2681938bb6c9c9e575f8b.png"></p><ul><li><p>通过POST方式向服务器发送ajax请求须设置请求头字段，且在open方法后调用。</p><pre><code>  Content-Type：application/x-www-form-urlencoded</code></pre></li><li><p>拓展阅读<br><a href="https://www.cnblogs.com/qlhMeiMei/p/6846392.html">https://www.cnblogs.com/qlhMeiMei/p/6846392.html</a></p></li><li><p>如果需要传递特殊字符时，可以使用<code>encodeURIComponent()</code>进行URL编码</p><pre><code>  var url=&#39;http://xxx/test.php?name=&#39;+encodeURIComponent(&#39;A&amp;B C&#39;);;  console.log(url);//结果输出：http://xxx/test.php?name=A%26B%20C</code></pre></li></ul><p>在经过URL编码后，”&amp;”被转化为”%26”，空格被转换为”%20”，当服务器收到已编码的内容之后，会对其进行解码，从而正确识别。</p><pre><code>    var str=&#39;A%26B%20C&#39;;    console.log(encodeURIComponent(str)); //输出结果：A&amp;B C</code></pre><h1 id="数据交换格式"><a href="#数据交换格式" class="headerlink" title="数据交换格式"></a>数据交换格式</h1><ul><li>XML</li><li>JSON<br>JSON是一种轻量级的数据交换格式，它采用完全独立于语言的文本格式。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/24/7193183d914eb22d6ade0fab7baeda89.png"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> obj = &#123;<span class="attr">name</span>:<span class="string">&#x27;Tom&#x27;</span>,<span class="attr">age</span>:<span class="number">24</span>&#125;;</span></span><br><span class="line"><span class="javascript">        <span class="comment">//stringify：将对象转换为JSON字符串</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> json = <span class="built_in">JSON</span>.stringify(obj);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> xhr = <span class="keyword">new</span> XMLHttpRequest();</span></span><br><span class="line"><span class="javascript">        xhr.onreadystatechange = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">if</span>(<span class="params">xhr.readyState==XMLHttpRequest.DONE</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="function"><span class="title">if</span>(<span class="params">xhr.status==<span class="number">200</span></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="comment">// var json_res = xhr.responseText;</span></span></span><br><span class="line"><span class="javascript">                    <span class="comment">//JSON.parse：将JSON字符串转换成JS对象。</span></span></span><br><span class="line"><span class="javascript">                    <span class="comment">// var obj_res = JSON.parse(json_res);</span></span></span><br><span class="line"><span class="javascript">                    <span class="comment">//obj.name：JSON对象的成员。</span></span></span><br><span class="line"><span class="javascript">                    <span class="comment">// document.write(obj_res.name);</span></span></span><br><span class="line"><span class="javascript">                    <span class="built_in">document</span>.write(xhr.responseText);</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="javascript">        xhr.open(<span class="string">&#x27;post&#x27;</span>,<span class="string">&#x27;test.php&#x27;</span>);</span></span><br><span class="line"><span class="javascript">        xhr.setRequestHeader(<span class="string">&#x27;Content-type&#x27;</span>,<span class="string">&#x27;application/x-www-form-urlencoded&#x27;</span>);</span></span><br><span class="line"><span class="javascript">        xhr.send(<span class="string">&#x27;msg=&#x27;</span> + <span class="built_in">encodeURIComponent</span>(json));</span></span><br><span class="line"><span class="javascript">        <span class="comment">//encodeURIComponet：对字符串进行URI编码</span></span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"> <span class="keyword">echo</span> $_POST[<span class="string">&#x27;msg&#x27;</span>];</span><br></pre></td></tr></table></figure><p> <img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/24/04d7091a2a8d37f98eb4611d5fcdc164.png"></p><h1 id="无刷新分页"><a href="#无刷新分页" class="headerlink" title="无刷新分页"></a>无刷新分页</h1><ul><li><p>代码思路</p><ol><li>首先读取第一页（客户端提交1，服务端返回第1页内容的json数据）；</li><li>根据点击的按钮，读取相应页。</li></ol></li><li><p>自调用函数<br>用（）包裹匿名函数，其后的（）表示给匿名函数传递参数并立即执行，完成函数的自调用。</p><pre><code>  自调用函数：  ( function  函数名()&#123;      代码;  &#125;) ( )； </code></pre></li><li><p>回调函数<br>若想要函数体中某部分功能由调用者决定，此时可以使用回调函数。<br>简单说，在一个函数执行完毕后，得到想要的特定数据后再去执行的函数，即为回调函数。</p></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//定义函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">f1</span>(<span class="params">f2,f3</span>)</span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;11111&quot;</span>);</span><br><span class="line">f2();</span><br><span class="line">f3();</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;22222&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//调用函数</span></span><br><span class="line">f1(</span><br><span class="line"><span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;33333&quot;</span>);</span><br><span class="line">&#125;,</span><br><span class="line"><span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;44444&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">);</span><br><span class="line"><span class="comment">//运行结果</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">11111</span></span><br><span class="line"><span class="comment">33333</span></span><br><span class="line"><span class="comment">44444</span></span><br><span class="line"><span class="comment">22222</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><ul><li> 继承</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//构造函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Person</span>(<span class="params">name</span>)</span>&#123;</span><br><span class="line"><span class="built_in">this</span>.name=name;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//利用原型对象实现继承</span></span><br><span class="line">Person.prototype.sayHello=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;你好，我是&quot;</span>+<span class="built_in">this</span>.name);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> p1=<span class="keyword">new</span> Person(<span class="string">&#x27;Jim&#x27;</span>);</span><br><span class="line">p1.sayHello();</span><br></pre></td></tr></table></figure><ul><li>源码解析<ol><li>构造函数PageList：封装页面信息，并添加点击事件实现与用户的交互。</li><li>构造函数Comment：向服务器发送ajax请求，获取评论内容，并将服务器返回的JSON数据放入页面中显示出来。</li><li>源码解析–PageList：封装页面信息，并添加点击事件实现与用户的交互。</li><li>页面信息：<br>   页面元素：首页、尾页、上一页、下一页、页码<pre><code>   数据（变量）：页码、总共页数</code></pre></li><li>点击事件：<br>  为四个页面元素添加onclick事件，以更新页面内容。</li><li>函       数:<br> 根据页码更新页面内容。</li></ol></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;</span> <span class="meta-string">&quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.w3.org/1999/xhtml&quot;</span> <span class="attr">xml:lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Type&quot;</span> <span class="attr">content</span>=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">body</span>&#123;<span class="attribute">background</span>:<span class="number">#eee</span>;<span class="attribute">margin</span>:<span class="number">0</span>&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-class">.box</span>&#123;<span class="attribute">width</span>:<span class="number">800px</span>;<span class="attribute">margin</span>:<span class="number">0</span> auto;<span class="attribute">background</span>:<span class="number">#fefefe</span>;<span class="attribute">border-radius</span>:<span class="number">8px</span>;<span class="attribute">padding</span>:<span class="number">20px</span>;<span class="attribute">box-sizing</span>:border-box;<span class="attribute">margin-top</span>:<span class="number">40px</span>&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-class">.title</span>&#123;<span class="attribute">font-family</span>:<span class="string">&#x27;Microsoft YaHei&#x27;</span>;<span class="attribute">color</span>:<span class="number">#666</span>;<span class="attribute">font-size</span>:<span class="number">24px</span>;<span class="attribute">text-align</span>:center;<span class="attribute">margin</span>:<span class="number">10px</span> <span class="number">0</span>&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-class">.comment</span> <span class="selector-tag">ul</span>&#123;<span class="attribute">margin</span>:<span class="number">0</span>;<span class="attribute">padding</span>:<span class="number">10px</span>;<span class="attribute">list-style</span>:none;<span class="attribute">border-bottom</span>:<span class="number">1px</span> solid <span class="number">#ccc</span>&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-class">.comment</span> <span class="selector-tag">li</span>&#123;<span class="attribute">line-height</span>:<span class="number">32px</span>&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-class">.pagelist</span>&#123;<span class="attribute">margin-top</span>:<span class="number">20px</span>;<span class="attribute">text-align</span>:center&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-class">.pagelist</span> <span class="selector-tag">span</span>&#123;<span class="attribute">margin</span>:<span class="number">0</span> <span class="number">2px</span>&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-class">.pagelist</span> <span class="selector-tag">button</span>&#123;<span class="attribute">padding</span>:<span class="number">6px</span> <span class="number">10px</span>;<span class="attribute">cursor</span>:pointer&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-class">.pagelist</span> <span class="selector-tag">button</span><span class="selector-pseudo">:disabled</span>&#123;<span class="attribute">cursor</span>:default&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-class">.progress</span> <span class="selector-tag">div</span>&#123;<span class="attribute">width</span>:<span class="number">0%</span>;<span class="attribute">height</span>:<span class="number">1px</span>;<span class="attribute">position</span>:fixed;<span class="attribute">top</span>:<span class="number">0</span>;<span class="attribute">background-color</span>:<span class="number">#38f</span>;<span class="attribute">box-shadow</span>:<span class="number">1px</span> <span class="number">1px</span> <span class="number">1px</span> <span class="number">#6bf</span>;<span class="attribute">transition</span>: all <span class="number">0.8s</span>&#125;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;progress&quot;</span> <span class="attr">class</span>=<span class="string">&quot;progress&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;title&quot;</span>&gt;</span>查看商品评论<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;comment&quot;</span> <span class="attr">class</span>=<span class="string">&quot;comment&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;pagelist&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>当前是第<span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;page_num&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">span</span>&gt;</span>页<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;page_first&quot;</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;page_prev&quot;</span>&gt;</span>上一页<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;page_next&quot;</span>&gt;</span>下一页<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;page_last&quot;</span>&gt;</span>尾页<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        (<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="keyword">function</span> <span class="title">PageList</span>(<span class="params">options</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">for</span> (<span class="keyword">var</span> i <span class="keyword">in</span> options) &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>[i] = options[i];</span></span><br><span class="line">                &#125;</span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> obj = <span class="built_in">this</span>;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.first.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line">                    obj.page = 1;</span><br><span class="line">                    obj.onChange();</span><br><span class="line">                &#125;;</span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.prev.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line">                    obj.page = (obj.page &gt; 1) ? (obj.page - 1) : 1;</span><br><span class="line">                    obj.onChange();</span><br><span class="line">                &#125;;</span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.next.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line">                    obj.page = (obj.page &gt;= obj.maxPage) ? obj.maxPage : (obj.page + 1);</span><br><span class="line">                    obj.onChange();</span><br><span class="line">                &#125;;</span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.last.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line">                    obj.page = obj.maxPage;</span><br><span class="line">                    obj.onChange();</span><br><span class="line">                &#125;;</span><br><span class="line">            &#125;</span><br><span class="line"><span class="javascript">            <span class="function"><span class="keyword">function</span> <span class="title">Comment</span>(<span class="params">obj</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.obj = obj;</span></span><br><span class="line">            &#125;</span><br><span class="line"><span class="javascript">            Comment.prototype.ajax = <span class="function"><span class="keyword">function</span>(<span class="params">url, start, complete</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">          <span class="keyword">var</span> xhr = <span class="keyword">new</span> XMLHttpRequest();</span></span><br><span class="line"><span class="javascript">          xhr.onreadystatechange = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line">            if (xhr.readyState === 4) &#123;</span><br><span class="line"><span class="handlebars"><span class="xml">              if (xhr.status <span class="tag">&lt; <span class="attr">200</span> || <span class="attr">xhr.status</span> &gt;</span>= 300 &amp;&amp; xhr.status !== 304) &#123;</span></span></span><br><span class="line"><span class="javascript">                alert(<span class="string">&#x27;服务器异常&#x27;</span>);</span></span><br><span class="line"><span class="javascript">                <span class="keyword">return</span>;</span></span><br><span class="line">              &#125;</span><br><span class="line"><span class="javascript">              <span class="keyword">try</span> &#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> json = <span class="built_in">JSON</span>.parse(xhr.responseText);</span></span><br><span class="line"><span class="javascript">              &#125; <span class="function"><span class="title">catch</span>(<span class="params">e</span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">                alert(<span class="string">&#x27;解析服务器返回信息失败&#x27;</span>);</span></span><br><span class="line"><span class="javascript">                <span class="keyword">return</span>;</span></span><br><span class="line">              &#125;</span><br><span class="line">              complete(json);</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;;</span><br><span class="line"><span class="javascript">          xhr.open(<span class="string">&#x27;GET&#x27;</span>, url);</span></span><br><span class="line">          xhr.send();</span><br><span class="line">          start();</span><br><span class="line">        &#125;;</span><br><span class="line"><span class="javascript">         Comment.prototype.create = <span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">          <span class="keyword">var</span> html = <span class="string">&#x27;&#x27;</span>;</span></span><br><span class="line"><span class="javascript">          <span class="keyword">for</span> (<span class="keyword">var</span> i <span class="keyword">in</span> data) &#123;</span></span><br><span class="line"><span class="javascript">            html += <span class="string">&#x27;&lt;ul&gt;&lt;li&gt;用户名：&#x27;</span> + data[i].user + <span class="string">&#x27;　发表时间：&#x27;</span> + data[i].time + <span class="string">&#x27;&lt;/li&gt;&#x27;</span>;</span></span><br><span class="line"><span class="handlebars"><span class="xml">            html += &#x27;<span class="tag">&lt;<span class="name">li</span>&gt;</span>&#x27; + data[i].content + &#x27;<span class="tag">&lt;/<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">ul</span>&gt;</span>&#x27;;</span></span></span><br><span class="line">          &#125;</span><br><span class="line"><span class="javascript">          <span class="built_in">this</span>.obj.innerHTML = html;</span></span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line"><span class="javascript">           <span class="keyword">var</span> comment = <span class="keyword">new</span> Comment(<span class="built_in">document</span>.getElementById(<span class="string">&#x27;comment&#x27;</span>));</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> pageList =<span class="keyword">new</span> PageList(&#123;</span></span><br><span class="line">                page: 1,</span><br><span class="line">                maxPage: 1,</span><br><span class="line"><span class="javascript">                first: <span class="built_in">document</span>.getElementById(<span class="string">&#x27;page_first&#x27;</span>),</span></span><br><span class="line"><span class="javascript">                prev: <span class="built_in">document</span>.getElementById(<span class="string">&#x27;page_prev&#x27;</span>),</span></span><br><span class="line"><span class="javascript">                next: <span class="built_in">document</span>.getElementById(<span class="string">&#x27;page_next&#x27;</span>),</span></span><br><span class="line"><span class="javascript">                last: <span class="built_in">document</span>.getElementById(<span class="string">&#x27;page_last&#x27;</span>),</span></span><br><span class="line"><span class="javascript">                pageNum: <span class="built_in">document</span>.getElementById(<span class="string">&#x27;page_num&#x27;</span>),</span></span><br><span class="line"><span class="javascript">                onChange:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                    comment.ajax(<span class="string">&#x27;data.php?page=&#x27;</span> + <span class="built_in">this</span>.page,</span></span><br><span class="line"><span class="javascript">                        <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="comment">//start回调函数</span></span></span><br><span class="line"></span><br><span class="line">                        &#125;,</span><br><span class="line"><span class="javascript">                        <span class="function"><span class="keyword">function</span>(<span class="params">json</span>)</span>&#123; <span class="comment">//complete回调函数</span></span></span><br><span class="line">                            pageList.maxPage = json.maxPage;</span><br><span class="line">                            comment.create(json.data);</span><br><span class="line">                        &#125;</span><br><span class="line">                    )</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">            pageList.onChange();</span><br><span class="line">        &#125;)();</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//定义data数组，包含10个元素，每个元素表示1条评论</span></span><br><span class="line">$data = [</span><br><span class="line">    [<span class="string">&#x27;id&#x27;</span> =&gt; <span class="number">1</span>, <span class="string">&#x27;user&#x27;</span> =&gt; <span class="string">&#x27;test&#x27;</span>, <span class="string">&#x27;time&#x27;</span> =&gt; <span class="string">&#x27;2018-01-01&#x27;</span>, <span class="string">&#x27;content&#x27;</span> =&gt; <span class="string">&#x27;评论111&#x27;</span>],</span><br><span class="line">    [<span class="string">&#x27;id&#x27;</span> =&gt; <span class="number">2</span>, <span class="string">&#x27;user&#x27;</span> =&gt; <span class="string">&#x27;test&#x27;</span>, <span class="string">&#x27;time&#x27;</span> =&gt; <span class="string">&#x27;2018-01-01&#x27;</span>, <span class="string">&#x27;content&#x27;</span> =&gt; <span class="string">&#x27;评论222&#x27;</span>],</span><br><span class="line">    [<span class="string">&#x27;id&#x27;</span> =&gt; <span class="number">3</span>, <span class="string">&#x27;user&#x27;</span> =&gt; <span class="string">&#x27;test&#x27;</span>, <span class="string">&#x27;time&#x27;</span> =&gt; <span class="string">&#x27;2018-01-01&#x27;</span>, <span class="string">&#x27;content&#x27;</span> =&gt; <span class="string">&#x27;评论233&#x27;</span>],</span><br><span class="line">    [<span class="string">&#x27;id&#x27;</span> =&gt; <span class="number">4</span>, <span class="string">&#x27;user&#x27;</span> =&gt; <span class="string">&#x27;test&#x27;</span>, <span class="string">&#x27;time&#x27;</span> =&gt; <span class="string">&#x27;2018-01-01&#x27;</span>, <span class="string">&#x27;content&#x27;</span> =&gt; <span class="string">&#x27;评论444&#x27;</span>],</span><br><span class="line">    [<span class="string">&#x27;id&#x27;</span> =&gt; <span class="number">5</span>, <span class="string">&#x27;user&#x27;</span> =&gt; <span class="string">&#x27;test&#x27;</span>, <span class="string">&#x27;time&#x27;</span> =&gt; <span class="string">&#x27;2018-01-01&#x27;</span>, <span class="string">&#x27;content&#x27;</span> =&gt; <span class="string">&#x27;评论555&#x27;</span>],</span><br><span class="line">    [<span class="string">&#x27;id&#x27;</span> =&gt; <span class="number">6</span>, <span class="string">&#x27;user&#x27;</span> =&gt; <span class="string">&#x27;test&#x27;</span>, <span class="string">&#x27;time&#x27;</span> =&gt; <span class="string">&#x27;2018-01-01&#x27;</span>, <span class="string">&#x27;content&#x27;</span> =&gt; <span class="string">&#x27;评论666&#x27;</span>],</span><br><span class="line">    [<span class="string">&#x27;id&#x27;</span> =&gt; <span class="number">7</span>, <span class="string">&#x27;user&#x27;</span> =&gt; <span class="string">&#x27;test&#x27;</span>, <span class="string">&#x27;time&#x27;</span> =&gt; <span class="string">&#x27;2018-01-01&#x27;</span>, <span class="string">&#x27;content&#x27;</span> =&gt; <span class="string">&#x27;评论777&#x27;</span>],</span><br><span class="line">    [<span class="string">&#x27;id&#x27;</span> =&gt; <span class="number">8</span>, <span class="string">&#x27;user&#x27;</span> =&gt; <span class="string">&#x27;test&#x27;</span>, <span class="string">&#x27;time&#x27;</span> =&gt; <span class="string">&#x27;2018-01-01&#x27;</span>, <span class="string">&#x27;content&#x27;</span> =&gt; <span class="string">&#x27;评论888&#x27;</span>],</span><br><span class="line">    [<span class="string">&#x27;id&#x27;</span> =&gt; <span class="number">9</span>, <span class="string">&#x27;user&#x27;</span> =&gt; <span class="string">&#x27;test&#x27;</span>, <span class="string">&#x27;time&#x27;</span> =&gt; <span class="string">&#x27;2018-01-01&#x27;</span>, <span class="string">&#x27;content&#x27;</span> =&gt; <span class="string">&#x27;评论999&#x27;</span>],</span><br><span class="line">    [<span class="string">&#x27;id&#x27;</span> =&gt; <span class="number">10</span>, <span class="string">&#x27;user&#x27;</span> =&gt; <span class="string">&#x27;test&#x27;</span>, <span class="string">&#x27;time&#x27;</span> =&gt; <span class="string">&#x27;2018-01-01&#x27;</span>, <span class="string">&#x27;content&#x27;</span> =&gt; <span class="string">&#x27;评论1010&#x27;</span>],</span><br><span class="line">];</span><br><span class="line">$page = <span class="keyword">isset</span>($_GET[<span class="string">&#x27;page&#x27;</span>]) ? max((<span class="keyword">int</span>)$_GET[<span class="string">&#x27;page&#x27;</span>], <span class="number">1</span>) : <span class="number">1</span>;</span><br><span class="line">$size = <span class="number">2</span>;</span><br><span class="line">$maxPage = ceil(count($data) / $size);</span><br><span class="line"><span class="keyword">echo</span> json_encode([</span><br><span class="line">    <span class="string">&#x27;data&#x27;</span> =&gt; array_slice($data, ($page - <span class="number">1</span>) * $size, $size),</span><br><span class="line">    <span class="string">&#x27;maxPage&#x27;</span> =&gt; $maxPage</span><br><span class="line">]);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">page：获取用户端请求的页码值。</span></span><br><span class="line"><span class="comment">size：每页返回的记录数。</span></span><br><span class="line"><span class="comment">maxPage：计算总页数。</span></span><br><span class="line"><span class="comment">json_encode:返回“根据当前页码查询的记录”和“总页数”。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Ajax&quot;&gt;&lt;a href=&quot;#Ajax&quot; class=&quot;headerlink&quot; title=&quot;Ajax&quot;&gt;&lt;/a&gt;Ajax&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;Ajax：Asynchronous JavaScript And XML，即&lt;strong&gt;异步JavaScri</summary>
      
    
    
    
    <category term="编程语言" scheme="http://xiaoliblog.cn/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    <category term="JavaScript" scheme="http://xiaoliblog.cn/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/JavaScript/"/>
    
    
    <category term="JavaScript" scheme="http://xiaoliblog.cn/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript🌞正则表达式</title>
    <link href="http://xiaoliblog.cn/2021/01/15/%E5%89%8D%E7%AB%AF/JavaScript/JavaScript_%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    <id>http://xiaoliblog.cn/2021/01/15/%E5%89%8D%E7%AB%AF/JavaScript/JavaScript_%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</id>
    <published>2021-01-15T04:25:39.723Z</published>
    <updated>2021-01-15T05:29:17.964Z</updated>
    
    <content type="html"><![CDATA[<h1 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h1><p><a href="https://ihateregex.io/">正则表达式查询网站I Hate Regex</a></p><ol><li><p>什么是正则表达式<br>正则表达式（Regular Expression，简称regexp）</p><ul><li>概念：是一种描述字符串结构的语法规则（描述字符串特征）</li><li>作用：用于验证各种字符串是否匹配这个特征。</li><li>应用：在项目开发中，手机号码指定位数的隐藏、数据采集、敏感词的过滤以及表单的验证等功能，都可以利用正则表达式来实现。</li></ul></li><li><p>获取正则对象</p><ul><li>字面量方式<pre><code>  /pattern/flags  例如：/abc/gi</code></pre></li><li>RegExp对象构造函数方式<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> <span class="built_in">RegExp</span>(pattern[,flags])</span><br><span class="line"><span class="built_in">RegExp</span>(pattern[,flags])</span><br><span class="line"><span class="comment">//示例</span></span><br><span class="line"><span class="keyword">var</span> str=<span class="string">&#x27;Abc123abc456abc&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> reg=<span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">&#x27;abc&#x27;</span>,<span class="string">&#x27;gi&#x27;</span>);</span><br><span class="line"><span class="built_in">console</span>.log(str.match(reg));</span><br></pre></td></tr></table></figure>pattern：模式文本，由元字符和文本字符（普通字符）组成。<br>flags：模式修饰符。<table><thead><tr><th align="center">模式符</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">g</td><td align="center">用于在目标字符串中实现全局匹配（多次）</td></tr><tr><td align="center">i</td><td align="center">忽略大小写</td></tr><tr><td align="center">m</td><td align="center">实现多行匹配</td></tr><tr><td align="center">u</td><td align="center">以Unicode编码执行正则表达式</td></tr><tr><td align="center">y</td><td align="center">粘性匹配，仅匹配目标字符串中此正则表达式的lastindex属性指示的索引</td></tr><tr><td align="center">^</td><td align="center">匹配字符串开始的位置</td></tr><tr><td align="center">$</td><td align="center">匹配字符串结束的位置</td></tr></tbody></table></li></ul></li><li><p>使用正则对象</p><ul><li>RegExp对象提供的<code>exec()</code>方法，一次仅返回一个匹配结果，匹配成功返回数组，否则返回null<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str=<span class="string">&#x27;Abc123abc456abc&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> reg=<span class="regexp">/abc/gi</span>;</span><br><span class="line"><span class="built_in">console</span>.log(reg.exec(str)); <span class="comment">//返回Abc</span></span><br></pre></td></tr></table></figure></li><li>String对象提供的<code>match()</code>方法，匹配出所有符合要求的内容，匹配成功返回数组，否则返回false<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str=<span class="string">&#x27;Abc123abc456abc&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> reg=<span class="regexp">/abc/gi</span>;</span><br><span class="line"><span class="built_in">console</span>.log(str.match(reg)); <span class="comment">//返回Abc、abc、abc</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>转义字符的处理<br>使用反斜线对特殊字符进行转义</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str=<span class="string">&#x27;^abc\\1.23*edf$&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> reg1=<span class="regexp">/\./</span>;</span><br><span class="line"><span class="built_in">console</span>.log(str.match(reg1));</span><br><span class="line"><span class="keyword">var</span> reg2=<span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">&#x27;\\.&#x27;</span>);</span><br><span class="line"><span class="built_in">console</span>.log(str.match(reg2));</span><br></pre></td></tr></table></figure></li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>请输入用户名<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;username&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&#x27;tips&#x27;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;checkname()&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="keyword">function</span> <span class="title">checkname</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> username = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;username&#x27;</span>).value;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> reg = <span class="regexp">/admin/gi</span>;</span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">if</span>(<span class="params">!(username.match(reg)==<span class="literal">null</span>)</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">document</span>.getElementById(<span class="string">&#x27;tips&#x27;</span>).innerHTML = <span class="string">&#x27;用户名不能包含admin&#x27;</span>;</span></span><br><span class="line"><span class="javascript">            &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">document</span>.getElementById(<span class="string">&#x27;tips&#x27;</span>).innerHTML = <span class="string">&#x27;注册成功&#x27;</span>;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/23/8dd395d313c59a501ded337ff5d2a43c.png"></p><h1 id="字符类别与集合"><a href="#字符类别与集合" class="headerlink" title="字符类别与集合"></a>字符类别与集合</h1><ul><li><strong>字符类别</strong><br>使正则表达式更加简洁，便于阅读。</li></ul><table><thead><tr><th align="center">字符</th><th align="center">含义</th><th align="center">字符</th><th align="center">含义</th></tr></thead><tbody><tr><td align="center">.</td><td align="center">匹配除“\n”外的任何单个字符</td><td align="center">\f</td><td align="center">匹配一个换页符（form-feed)</td></tr><tr><td align="center">\d</td><td align="center">匹配任意一个阿拉伯数字</td><td align="center">\D</td><td align="center">匹配任意一个非阿拉伯数字字符</td></tr><tr><td align="center">\s</td><td align="center">匹配一个空白符，包括空格、制表符、换页符、换行符等</td><td align="center">\S</td><td align="center">匹配一个非空白符</td></tr><tr><td align="center">\w</td><td align="center">匹配任意一个字母（大小写）、数字和下划线</td><td align="center">\W</td><td align="center">匹配任意一个非“字母（大小写）、数字和下划线”的字符</td></tr></tbody></table><ul><li><strong>字符集合</strong><br>正则表达式中的”[]”可以实现一个字符集合</li></ul><table><thead><tr><th align="center">pattern</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">[cat]</td><td align="center">匹配字符集合中的任意一个字符c、a、t</td></tr><tr><td align="center">[^cat]</td><td align="center">匹配除c、a、t以外的字符</td></tr><tr><td align="center">[B-Z]</td><td align="center">匹配字母B~Z范围内的字符</td></tr><tr><td align="center">[^a-z]</td><td align="center">匹配字母a~z范围外的字符</td></tr><tr><td align="center">[a-zA-Z0-9]</td><td align="center">匹配大小写字母和0~9范围内的字符</td></tr><tr><td align="center">[\u4e00-\u9fa5]</td><td align="center">匹配任意一个中文字符</td></tr></tbody></table><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>限定输入内容<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">input</span><span class="selector-attr">[type=text]</span>&#123;<span class="attribute">width</span>: <span class="number">40px</span>;<span class="attribute">border-color</span>: <span class="number">#bbb</span>;<span class="attribute">height</span>: <span class="number">25px</span>;<span class="attribute">font-size</span>: <span class="number">14px</span>;<span class="attribute">border-radius</span>: <span class="number">2px</span>;<span class="attribute">outline</span>: <span class="number">0</span>;<span class="attribute">border</span>: <span class="number">#ccc</span> <span class="number">1px</span> solid;<span class="attribute">padding</span>: <span class="number">0</span> <span class="number">10px</span>;<span class="attribute">-webkit-transition</span>: box-shadow .<span class="number">5s</span>;<span class="attribute">margin-bottom</span>: <span class="number">15px</span>;&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">input</span><span class="selector-attr">[type=text]</span><span class="selector-pseudo">:hover</span>, <span class="selector-tag">input</span><span class="selector-attr">[type=text]</span><span class="selector-pseudo">:focus</span>,<span class="selector-tag">input</span><span class="selector-attr">[type=submit]</span><span class="selector-pseudo">:hover</span>&#123;<span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#56b4ef</span>; <span class="attribute">box-shadow</span>: inset <span class="number">0</span> <span class="number">1px</span> <span class="number">3px</span> <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,.<span class="number">05</span>),<span class="number">0</span> <span class="number">0</span> <span class="number">8px</span> <span class="built_in">rgba</span>(<span class="number">82</span>,<span class="number">168</span>,<span class="number">236</span>,.<span class="number">6</span>); <span class="attribute">-webkit-transition</span>: box-shadow .<span class="number">5s</span>;&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">input</span><span class="selector-pseudo">::-webkit-input-placeholder</span> &#123;<span class="attribute">color</span>: <span class="number">#999</span>; <span class="attribute">-webkit-transition</span>: color .<span class="number">5s</span>;&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">input</span><span class="selector-pseudo">:focus</span><span class="selector-pseudo">::-webkit-input-placeholder</span>,  <span class="selector-tag">input</span><span class="selector-pseudo">:hover</span><span class="selector-pseudo">::-webkit-input-placeholder</span> &#123;<span class="attribute">color</span>: <span class="number">#c2c2c2</span>; <span class="attribute">-webkit-transition</span>: color .<span class="number">5s</span>;&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">input</span><span class="selector-attr">[type=submit]</span>&#123;<span class="attribute">height</span>: <span class="number">30px</span>; <span class="attribute">width</span>: <span class="number">80px</span>; <span class="attribute">background</span>: <span class="number">#4393C9</span>; <span class="attribute">border</span>:<span class="number">1px</span> solid <span class="number">#fff</span>;<span class="attribute">color</span>: <span class="number">#fff</span>;<span class="attribute">font</span>:<span class="number">14px</span> bolder; &#125;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">id</span>=<span class="string">&quot;form&quot;</span>&gt;</span></span><br><span class="line">      年份 <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;year&quot;</span>&gt;</span></span><br><span class="line">      月份 <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;month&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;查询&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;result&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">      <span class="function"><span class="keyword">function</span> <span class="title">checkYear</span>(<span class="params">obj</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">if</span> (!obj.value.match(<span class="regexp">/^\d&#123;4&#125;$/</span>)) &#123;</span></span><br><span class="line"><span class="javascript">          obj.style.borderColor = <span class="string">&#x27;red&#x27;</span>;</span></span><br><span class="line"><span class="javascript">          result.innerHTML = <span class="string">&#x27;输入错误，年份为4位数字表示&#x27;</span>;</span></span><br><span class="line"><span class="javascript">          <span class="keyword">return</span> <span class="literal">false</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="javascript">        result.innerHTML = <span class="string">&#x27;&#x27;</span>;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">return</span> <span class="literal">true</span>;</span></span><br><span class="line">      &#125;</span><br><span class="line"><span class="javascript">      <span class="function"><span class="keyword">function</span> <span class="title">checkMonth</span>(<span class="params">obj</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">if</span> (!obj.value.match(<span class="regexp">/^((0?[1-9])|(1[012]))$/</span>)) &#123;</span></span><br><span class="line"><span class="javascript">          obj.style.borderColor = <span class="string">&#x27;red&#x27;</span>;</span></span><br><span class="line"><span class="javascript">          result.innerHTML = <span class="string">&#x27;输入错误，月份为1~12之间&#x27;</span>;</span></span><br><span class="line"><span class="javascript">          <span class="keyword">return</span> <span class="literal">false</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="javascript">        result.innerHTML = <span class="string">&#x27;&#x27;</span>;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">return</span> <span class="literal">true</span>;</span></span><br><span class="line">      &#125;</span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> form = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;form&#x27;</span>);             <span class="comment">// &lt;form&gt;元素对象</span></span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> result = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;result&#x27;</span>);         <span class="comment">// &lt;div&gt;元素对象</span></span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> inputs = <span class="built_in">document</span>.getElementsByTagName(<span class="string">&#x27;input&#x27;</span>);    <span class="comment">// &lt;input&gt;元素集合</span></span></span><br><span class="line"><span class="javascript">      form.onsubmit = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">return</span> checkYear(inputs.year) &amp;&amp; checkMonth(inputs.month);</span></span><br><span class="line">      &#125;;</span><br><span class="line"><span class="javascript">      inputs.year.onfocus = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">this</span>.style.borderColor = <span class="string">&#x27;&#x27;</span>;</span></span><br><span class="line">      &#125;;</span><br><span class="line"><span class="javascript">      inputs.month.onfocus = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">this</span>.style.borderColor = <span class="string">&#x27;&#x27;</span>;</span></span><br><span class="line">      &#125;;</span><br><span class="line"><span class="javascript">      <span class="keyword">if</span> (!<span class="built_in">String</span>.prototype.trim) &#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">String</span>.prototype.trim = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">          <span class="keyword">return</span> <span class="built_in">this</span>.replace(<span class="regexp">/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g</span>, <span class="string">&#x27;&#x27;</span>);</span></span><br><span class="line">        &#125;;</span><br><span class="line">      &#125;</span><br><span class="line"><span class="javascript">      inputs.year.onblur = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">this</span>.value = <span class="built_in">this</span>.value.trim();</span></span><br><span class="line"><span class="javascript">        checkYear(<span class="built_in">this</span>);</span></span><br><span class="line">      &#125;;</span><br><span class="line"><span class="javascript">      inputs.month.onblur = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">this</span>.value = <span class="built_in">this</span>.value.trim();</span></span><br><span class="line"><span class="javascript">        checkMonth(<span class="built_in">this</span>);</span></span><br><span class="line">      &#125;;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/23/9ea4277327e36652b380f6f9a39f5398.png"></p><h1 id="字符限定与分组"><a href="#字符限定与分组" class="headerlink" title="字符限定与分组"></a>字符限定与分组</h1><ul><li>限定符<pre><code>  var reg=/\d&#123;6&#125;/gi; //匹配6个连续出现的数字</code></pre></li></ul><table><thead><tr><th align="center">限定符</th><th align="center">说明</th><th align="center">举例</th></tr></thead><tbody><tr><td align="center">?</td><td align="center">匹配前面的字符零次或一次</td><td align="center">ht?t</td></tr><tr><td align="center">+</td><td align="center">匹配前面的字符一次或多次</td><td align="center">bre+ad</td></tr><tr><td align="center">*</td><td align="center">匹配前面的字符零次或多次</td><td align="center">ro*se</td></tr><tr><td align="center">{n}</td><td align="center">匹配前面的字符n次</td><td align="center">hit{2}er</td></tr><tr><td align="center">{n,}</td><td align="center">匹配前面的字符最少n次</td><td align="center">hit{2,}er</td></tr><tr><td align="center">{n,m}</td><td align="center">匹配前面的字符最少n次，最多m次</td><td align="center">fe{0,2}</td></tr></tbody></table><ul><li>贪婪与懒惰匹配<ol><li>贪婪匹配表示匹配尽可能多的字符</li><li>懒惰匹配表示匹配尽可能少的字符</li><li>在默认情况下，是贪婪匹配，若想实现懒惰匹配，需在上一个限定符后面加上”?”符号<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str=<span class="string">&#x27;webWEBWebwEb&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> reg1=<span class="regexp">/w.*b/gi</span>;   <span class="comment">//贪婪匹配</span></span><br><span class="line"><span class="keyword">var</span> reg2=<span class="regexp">/w.*?b/gi</span>; <span class="comment">//懒惰匹配</span></span><br><span class="line"><span class="built_in">console</span>.log(reg1.exec(str));   <span class="comment">//webWEBWebwEb 获得最先出现的w到最后出现的b</span></span><br><span class="line"><span class="built_in">console</span>.log(reg2.exec(str));   <span class="comment">//web 获得最先出现的w到最先出现的b</span></span><br></pre></td></tr></table></figure></li></ol></li></ul><h1 id="括号字符"><a href="#括号字符" class="headerlink" title="括号字符"></a>括号字符</h1><p>被括号字符“()”括起来的内容，称之为”子表达式“</p><ol><li>改变限定符的作用范围<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//改变前</span></span><br><span class="line">正则表达式：<span class="keyword">catch</span>|er</span><br><span class="line">可匹配的结果：<span class="keyword">catch</span>、er</span><br><span class="line"><span class="comment">//改变后</span></span><br><span class="line">正则表达式：cat(ch|er)</span><br><span class="line">可匹配的结果：<span class="keyword">catch</span>、cater</span><br></pre></td></tr></table></figure></li><li>分组<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//分组前</span></span><br><span class="line">正则表达式：abc&#123;<span class="number">2</span>&#125;</span><br><span class="line">可匹配的结果：abcc</span><br><span class="line"><span class="comment">//分组后</span></span><br><span class="line">正则表达式： <span class="function"><span class="title">a</span>(<span class="params">bc</span>)</span>&#123;<span class="number">2</span>&#125;</span><br><span class="line">可匹配的结果：abcbc</span><br></pre></td></tr></table></figure></li><li>捕获<br>将子表达式匹配到的内容存储到系统的缓存区中。<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> res1 = <span class="string">&#x27;1234&#x27;</span>.match(<span class="regexp">/\d\d\d\d/g</span>);</span><br><span class="line"><span class="built_in">console</span>.log(res1); <span class="comment">//[&quot;1234&quot;]</span></span><br><span class="line"><span class="keyword">var</span> res2 = <span class="string">&#x27;1234&#x27;</span>.match(<span class="regexp">/(\d)(\d)(\d)(\d)/</span>);</span><br><span class="line"><span class="built_in">console</span>.log(res2); <span class="comment">// [&quot;1234&quot;,&quot;1&quot;,&quot;2&quot;,&quot;3&quot;,&quot;4&quot;]</span></span><br><span class="line"><span class="keyword">var</span> res3 = <span class="string">&#x27;1234&#x27;</span>.match(<span class="regexp">/(\d)(\d)(\d)(\d)/g</span>);</span><br><span class="line"><span class="built_in">console</span>.log(res3);  <span class="comment">//[&quot;1234&quot;]</span></span><br></pre></td></tr></table></figure></li><li>反向引用<br>在正则表达式中，获取存放在缓存区内的子表达式的捕获内容，则可以使用”\n“(n&gt;0)的方式引用<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">\<span class="number">1</span>：第一个子表达式捕获的内容</span><br><span class="line">\<span class="number">2</span>：第二个子表达式捕获的内容</span><br><span class="line"><span class="keyword">var</span> reg1=<span class="regexp">/(\d)\1\1/gi</span>; 连续三个相同的数字</span><br><span class="line"><span class="keyword">var</span> reg2=<span class="regexp">/(\s)(\s)\1\2/gi</span>; ABAB格式</span><br></pre></td></tr></table></figure></li></ol><h1 id="正则相关方法"><a href="#正则相关方法" class="headerlink" title="正则相关方法"></a>正则相关方法</h1><ol><li>RegExp对象 的test()方法：<br>检测正则表达式与指定的字符串是否匹配，返回true或false。<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> reg = <span class="regexp">/([A-Z])([A-Z])\1\2/g</span>;</span><br><span class="line"><span class="built_in">console</span>.log(reg.test(<span class="string">&#x27;1234&#x27;</span>));    <span class="comment">//false    </span></span><br><span class="line"><span class="built_in">console</span>.log(reg.test(<span class="string">&#x27;abab&#x27;</span>));    <span class="comment">//false</span></span><br><span class="line"><span class="built_in">console</span>.log(reg.test(<span class="string">&#x27;CDCD&#x27;</span>));    <span class="comment">//true</span></span><br><span class="line"><span class="built_in">console</span>.log(reg.test(<span class="string">&#x27;EfEf&#x27;</span>));    <span class="comment">//false</span></span><br></pre></td></tr></table></figure></li><li>String对象的search()方法：<br>可以返回指定模式的子串在字符串首次出现的位置，查找失败返回-1。<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">&#x27;123*abc.456&#x27;</span>;</span><br><span class="line"><span class="built_in">console</span>.log(str.search(<span class="string">&#x27;.*&#x27;</span>));       <span class="comment">//0</span></span><br><span class="line"><span class="built_in">console</span>.log(str.search(<span class="regexp">/[\.\*]/</span>));   <span class="comment">//3</span></span><br></pre></td></tr></table></figure><blockquote><p>search()方法如果传入一个非正则表达式对象，则会将其转换为正则表达式对象</p></blockquote></li><li>String对象的split()方法<br>用于根据指定的分隔符将一个字符串分割成字符串数组，其分割后的字符串数组中不包括分隔符。<br>当分隔符不只一个时，需要定义正则对象才能够完成字符串的分割操作。<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">&#x27;test@123.com&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> reg = <span class="regexp">/[@\.]/</span>;</span><br><span class="line"><span class="keyword">var</span> split_res = str.split(reg);</span><br><span class="line"><span class="built_in">console</span>.log(split_res);    <span class="comment">// 输出结果：(3) [&quot;test&quot;, &quot;123&quot;, &quot;com&quot;]</span></span><br></pre></td></tr></table></figure></li><li>String对象的replace()方法<br>用 newChar 字符替换字符串中出现的所有 searchChar 字符，并返回替换后的新字符串。<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">&#x27;test@123.com&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> str_new= str.replace(‘<span class="number">123</span>’,’<span class="number">163</span>’);</span><br><span class="line"><span class="built_in">console</span>.log(str_new);    <span class="comment">// 输出结果：test@163.com</span></span><br></pre></td></tr></table></figure></li></ol><blockquote><p>replace：获取捕获内容，并对捕获内容进行替换</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str=<span class="string">&#x27;12ab34&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> reg=<span class="regexp">/(\d)(\d)/gi</span>;</span><br><span class="line"><span class="built_in">console</span>.log(str.match(reg));</span><br><span class="line"><span class="built_in">console</span>.log(str.replace(reg,<span class="string">&#x27;*&#x27;</span>));  <span class="comment">//[&quot;12&quot;,[&quot;34&quot;]]  *ab*</span></span><br></pre></td></tr></table></figure><blockquote><p>$n:获取第n个字表达式捕获的内容</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">&#x27;Regular Capture&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> reg = <span class="regexp">/(\w+)\s(\w+)/gi</span>;</span><br><span class="line"><span class="keyword">var</span> newStr = str.replace(reg,<span class="string">&#x27;$2 $1&#x27;</span>);</span><br><span class="line"><span class="built_in">console</span>.log(newStr);</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>内容查找与替换<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">div</span>&#123;<span class="attribute">float</span>:left;&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">input</span>&#123;<span class="attribute">margin</span>:<span class="number">0</span> <span class="number">20px</span>;&#125;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>过滤前内容:<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">id</span>=<span class="string">&quot;pre&quot;</span> <span class="attr">rows</span>=<span class="string">&quot;10&quot;</span> <span class="attr">cols</span>=<span class="string">&quot;40&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;btn&quot;</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;过滤&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>过滤后内容:<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">id</span>=<span class="string">&quot;res&quot;</span> <span class="attr">rows</span>=<span class="string">&quot;10&quot;</span> <span class="attr">cols</span>=<span class="string">&quot;40&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">      <span class="built_in">document</span>.getElementById(<span class="string">&#x27;btn&#x27;</span>).onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 定义查找并需要替换的内容规则，[\u4e00-\u9fa5]表示匹配任意中文字符</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> reg = <span class="regexp">/(bad)|[\u4e00-\u9fa5]/gi</span>;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> str = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;pre&#x27;</span>).value;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> newstr = str.replace(reg, <span class="string">&#x27;*&#x27;</span>);</span></span><br><span class="line"><span class="javascript">        <span class="built_in">document</span>.getElementById(<span class="string">&#x27;res&#x27;</span>).innerHTML = newstr;</span></span><br><span class="line">      &#125;;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/23/fba47172672ed97909dab0842fe31f3a.png"></p><h1 id="表单验证"><a href="#表单验证" class="headerlink" title="表单验证"></a>表单验证</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>表单验证<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;case03.css&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box-head&quot;</span>&gt;</span>填写注册信息<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box-body&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">form</span>&gt;</span>  <span class="comment">&lt;!-- ----- --&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">table</span>&gt;</span>   <span class="comment">&lt;!-- ------- --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">th</span>&gt;</span>用户名称：<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;长度4~12，英文大小写字母&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">th</span>&gt;</span>密　　码：<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;pwd&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;长度6~20，大小写字母、数字或下划线&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">th</span>&gt;</span>确认密码：<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;repwd&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请再次输入密码进行确认&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">th</span>&gt;</span>手机号码：<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;tel&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;13、14、15、17、18开头的11位手机号&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">th</span>&gt;</span>电子邮箱：<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;email&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;用户名@域名（域名后缀至少2个字符）&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">&quot;3&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;注册&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;case03.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span>&#123;<span class="attribute">margin-top</span>:<span class="number">20px</span>;&#125;</span><br><span class="line"><span class="selector-class">.box</span>&#123;<span class="attribute">font-size</span>:<span class="number">13px</span>;<span class="attribute">margin</span>:<span class="number">0</span> auto; <span class="attribute">width</span>: <span class="number">80%</span>;&#125;</span><br><span class="line"><span class="selector-class">.box-head</span>&#123;<span class="attribute">padding</span>:<span class="number">15px</span> <span class="number">20px</span>;<span class="attribute">font-size</span>:<span class="number">14px</span>; <span class="attribute">text-align</span>: center; <span class="attribute">font-size</span>:<span class="number">24px</span>; <span class="attribute">font</span>:bolder;&#125;</span><br><span class="line"><span class="selector-class">.box-body</span>&#123;<span class="attribute">padding</span>:<span class="number">10px</span> <span class="number">20px</span>;&#125;</span><br><span class="line"><span class="selector-class">.box-body</span> <span class="selector-tag">th</span>&#123;<span class="attribute">font-weight</span>:normal;<span class="attribute">vertical-align</span>:top;<span class="attribute">padding-top</span>:<span class="number">12px</span>;&#125;</span><br><span class="line"><span class="selector-class">.box-body</span> <span class="selector-tag">tr</span><span class="selector-pseudo">:last-child</span>&#123; <span class="attribute">text-align</span>: center;&#125;</span><br><span class="line"><span class="selector-class">.box-body</span> <span class="selector-tag">input</span>&#123;<span class="attribute">vertical-align</span>:middle;<span class="attribute">font-family</span>:Tahoma,simsun;<span class="attribute">font-size</span>:<span class="number">12px</span>;&#125;</span><br><span class="line"><span class="selector-class">.box-body</span> <span class="selector-tag">input</span><span class="selector-attr">[type=text]</span>,<span class="selector-class">.box-body</span> <span class="selector-tag">input</span><span class="selector-attr">[type=password]</span>&#123;<span class="attribute">border-color</span>: <span class="number">#bbb</span>;<span class="attribute">height</span>: <span class="number">38px</span>;<span class="attribute">font-size</span>: <span class="number">14px</span>;<span class="attribute">border-radius</span>: <span class="number">2px</span>;<span class="attribute">outline</span>: <span class="number">0</span>;<span class="attribute">border</span>: <span class="number">#ccc</span> <span class="number">1px</span> solid;<span class="attribute">padding</span>: <span class="number">0</span> <span class="number">10px</span>; <span class="attribute">width</span>: <span class="number">350px</span>;<span class="attribute">-webkit-transition</span>: box-shadow .<span class="number">5s</span>;<span class="attribute">margin-bottom</span>: <span class="number">15px</span>;&#125;</span><br><span class="line"><span class="selector-class">.box-body</span> <span class="selector-tag">input</span><span class="selector-attr">[type=text]</span><span class="selector-pseudo">:hover</span>, <span class="selector-class">.box-body</span>  <span class="selector-tag">input</span><span class="selector-attr">[type=text]</span><span class="selector-pseudo">:focus</span>, <span class="selector-class">.box-body</span> <span class="selector-tag">input</span><span class="selector-attr">[type=password]</span><span class="selector-pseudo">:hover</span>, <span class="selector-class">.box-body</span>  <span class="selector-tag">input</span><span class="selector-attr">[type=password]</span><span class="selector-pseudo">:focus</span> &#123;<span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#56b4ef</span>; <span class="attribute">box-shadow</span>: inset <span class="number">0</span> <span class="number">1px</span> <span class="number">3px</span> <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,.<span class="number">05</span>),<span class="number">0</span> <span class="number">0</span> <span class="number">8px</span> <span class="built_in">rgba</span>(<span class="number">82</span>,<span class="number">168</span>,<span class="number">236</span>,.<span class="number">6</span>); <span class="attribute">-webkit-transition</span>: box-shadow .<span class="number">5s</span>;&#125;</span><br><span class="line"><span class="selector-class">.box-body</span> <span class="selector-tag">input</span><span class="selector-pseudo">::-webkit-input-placeholder</span> &#123;<span class="attribute">color</span>: <span class="number">#999</span>; <span class="attribute">-webkit-transition</span>: color .<span class="number">5s</span>;&#125;</span><br><span class="line"><span class="selector-class">.box-body</span> <span class="selector-tag">input</span><span class="selector-pseudo">:focus</span><span class="selector-pseudo">::-webkit-input-placeholder</span>,  <span class="selector-tag">input</span><span class="selector-pseudo">:hover</span><span class="selector-pseudo">::-webkit-input-placeholder</span> &#123;<span class="attribute">color</span>: <span class="number">#c2c2c2</span>; <span class="attribute">-webkit-transition</span>: color .<span class="number">5s</span>;&#125;</span><br><span class="line"><span class="selector-class">.box-body</span> <span class="selector-tag">input</span><span class="selector-attr">[type=submit]</span>&#123;<span class="attribute">padding</span>:<span class="number">4px</span> <span class="number">15px</span>;<span class="attribute">cursor</span>:pointer; <span class="attribute">width</span>:<span class="number">120px</span>; <span class="attribute">height</span>:<span class="number">40px</span>; <span class="attribute">background</span>: <span class="number">#4393C9</span>; <span class="attribute">border</span>:<span class="number">1px</span> solid <span class="number">#fff</span>; <span class="attribute">color</span>: <span class="number">#fff</span>;<span class="attribute">font</span>:<span class="number">16px</span> bolder;&#125;</span><br><span class="line"><span class="selector-class">.box-body</span> <span class="selector-class">.error</span>&#123;<span class="attribute">border</span>:<span class="number">1px</span> solid <span class="number">#FF3300</span>; <span class="attribute">background</span>: <span class="number">#FFF2E5</span>; <span class="attribute">font-size</span>:<span class="number">10px</span>; <span class="attribute">height</span>: <span class="number">30px</span>; <span class="attribute">line-height</span>: <span class="number">30px</span>;<span class="attribute">margin-bottom</span>:<span class="number">10px</span>; <span class="attribute">padding</span>:<span class="number">0</span> <span class="number">10px</span>;&#125;</span><br><span class="line"><span class="selector-class">.box-body</span> <span class="selector-class">.success</span>&#123;<span class="attribute">border</span>:<span class="number">1px</span> solid <span class="number">#01BE00</span>; <span class="attribute">background</span>: <span class="number">#E6FEE4</span>; <span class="attribute">font-size</span>:<span class="number">10px</span>; <span class="attribute">height</span>: <span class="number">30px</span>; <span class="attribute">line-height</span>: <span class="number">30px</span>;<span class="attribute">margin-bottom</span>:<span class="number">10px</span>; <span class="attribute">padding</span>:<span class="number">0</span> <span class="number">10px</span>;&#125;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取所有input框</span></span><br><span class="line"><span class="keyword">var</span> inputs = <span class="built_in">document</span>.getElementsByTagName(<span class="string">&#x27;input&#x27;</span>);</span><br><span class="line">inputs[<span class="number">0</span>].focus();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 为每个input框添加失去焦点事件</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; inputs.length - <span class="number">1</span>; ++i) &#123;</span><br><span class="line">  inputs[i].onblur = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    inputBlur(<span class="built_in">this</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">inputBlur</span>(<span class="params">obj</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> name = obj.name;           <span class="comment">// 获取输入框的name值</span></span><br><span class="line">  <span class="keyword">var</span> val = obj.value;           <span class="comment">// 获取输入框的value值</span></span><br><span class="line">  <span class="keyword">var</span> tips = obj.placeholder;    <span class="comment">// 获取输入框中的提示信息</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// var fu = obj.parentNode;</span></span><br><span class="line">  <span class="comment">// var xiongdi = fu.nextSibling.nextSibling;   //回车会被当成一个文本节点，所以要next两次</span></span><br><span class="line">  <span class="keyword">var</span> tips_obj = obj.parentNode.nextSibling.nextSibling.firstChild;  <span class="comment">// 获取提示信息显示的div元素对象</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 1. 去掉两端的空白字符</span></span><br><span class="line">  val = val.trim();</span><br><span class="line">  <span class="comment">// 2. 文本框内容为空，给出提示信息</span></span><br><span class="line">  <span class="keyword">if</span> (!val) &#123;</span><br><span class="line">    error(tips_obj, <span class="string">&#x27;输入框不能为空&#x27;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 3. 获取正则匹配规则和提示信息</span></span><br><span class="line">  <span class="keyword">var</span> reg_msg = getRegMsg(name, tips);</span><br><span class="line">  <span class="comment">// 4. 检测是否否he正则匹配</span></span><br><span class="line">  <span class="keyword">if</span> (reg_msg[<span class="string">&#x27;reg&#x27;</span>].test(val)) &#123;</span><br><span class="line">    <span class="comment">// 匹配成功，显示成功的提示信息</span></span><br><span class="line">    success(tips_obj, reg_msg[<span class="string">&#x27;msg&#x27;</span>][<span class="string">&#x27;success&#x27;</span>]);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// 匹配失败，显示失败的提示信息</span></span><br><span class="line">    error(tips_obj, reg_msg[<span class="string">&#x27;msg&#x27;</span>][<span class="string">&#x27;error&#x27;</span>]);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 根据input的name值，设置正则规则及提示信息</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getRegMsg</span>(<span class="params">name, tips</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> reg = msg = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">  <span class="keyword">switch</span> (name) &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;username&#x27;</span>:</span><br><span class="line">      reg = <span class="regexp">/^[a-zA-Z]&#123;4,12&#125;$/</span>;</span><br><span class="line">      msg = &#123;<span class="string">&#x27;success&#x27;</span>: <span class="string">&#x27;用户名输入正确&#x27;</span>, <span class="string">&#x27;error&#x27;</span>: tips&#125;;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;pwd&#x27;</span>:</span><br><span class="line">      reg = <span class="regexp">/^\w&#123;6,20&#125;$/</span>;</span><br><span class="line">      msg = &#123;<span class="string">&#x27;success&#x27;</span>: <span class="string">&#x27;密码输入正确&#x27;</span>, <span class="string">&#x27;error&#x27;</span>: tips&#125;;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;repwd&#x27;</span>:</span><br><span class="line">      <span class="keyword">var</span> con = <span class="built_in">document</span>.getElementsByTagName(<span class="string">&#x27;input&#x27;</span>)[<span class="number">1</span>].value;</span><br><span class="line">      reg = <span class="built_in">RegExp</span>(<span class="string">&quot;^&quot;</span> + con + <span class="string">&quot;$&quot;</span>);</span><br><span class="line">      msg = &#123;<span class="string">&#x27;success&#x27;</span>: <span class="string">&#x27;两次密码输入正确&#x27;</span>, <span class="string">&#x27;error&#x27;</span>: <span class="string">&#x27;两次输入的密码不一致&#x27;</span>&#125;;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;tel&#x27;</span>:</span><br><span class="line">      reg = <span class="regexp">/^1[34578]\d&#123;9&#125;$/</span>;</span><br><span class="line">      msg = &#123;<span class="string">&#x27;success&#x27;</span>: <span class="string">&#x27;手机号码输入正确&#x27;</span>, <span class="string">&#x27;error&#x27;</span>: tips&#125;;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;email&#x27;</span>:</span><br><span class="line">      reg = <span class="regexp">/^(\w+(\_|\-|\.)*)+@(\w+(\-)?)+(\.\w&#123;2,&#125;)+$/</span>;</span><br><span class="line">      msg = &#123;<span class="string">&#x27;success&#x27;</span>: <span class="string">&#x27;邮箱输入正确&#x27;</span>, <span class="string">&#x27;error&#x27;</span>: tips&#125;;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> &#123;<span class="string">&#x27;reg&#x27;</span>: reg, <span class="string">&#x27;msg&#x27;</span>: msg&#125;;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 成功</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">success</span>(<span class="params">obj, msg</span>) </span>&#123;</span><br><span class="line">  obj.className = <span class="string">&#x27;success&#x27;</span>;</span><br><span class="line">  obj.innerHTML = msg;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 失败</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">error</span>(<span class="params">obj, msg</span>) </span>&#123;</span><br><span class="line">  obj.className = <span class="string">&#x27;error&#x27;</span>;</span><br><span class="line">  obj.innerHTML = msg + <span class="string">&#x27;，请重新输入&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/23/4a94c38f802bec0a3ec225449773b4aa.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;正则表达式&quot;&gt;&lt;a href=&quot;#正则表达式&quot; class=&quot;headerlink&quot; title=&quot;正则表达式&quot;&gt;&lt;/a&gt;正则表达式&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://ihateregex.io/&quot;&gt;正则表达式查询网站I Hate Regex&lt;/a&gt;</summary>
      
    
    
    
    <category term="编程语言" scheme="http://xiaoliblog.cn/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    <category term="JavaScript" scheme="http://xiaoliblog.cn/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/JavaScript/"/>
    
    
    <category term="JavaScript" scheme="http://xiaoliblog.cn/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript🌞jQuery</title>
    <link href="http://xiaoliblog.cn/2021/01/15/%E5%89%8D%E7%AB%AF/JavaScript/JavaScript_jQuery/"/>
    <id>http://xiaoliblog.cn/2021/01/15/%E5%89%8D%E7%AB%AF/JavaScript/JavaScript_jQuery/</id>
    <published>2021-01-15T04:25:39.723Z</published>
    <updated>2021-01-15T05:28:40.702Z</updated>
    
    <content type="html"><![CDATA[<h1 id="jQuery"><a href="#jQuery" class="headerlink" title="jQuery"></a>jQuery</h1><ul><li>基本概念<ol><li>jQuery：一款优秀的JavaScript框架库，封装了很多的JavaScript函数。</li><li>作用：简化了HTML与JavaScript之间的操作，使得DOM对象、事件处理、动画效果、Ajax等操作的实现语法更加简洁，提高了程序的开发效率，消除很多跨浏览器的兼容问题。</li></ol></li><li>下载jQuery<ol><li>官方网址：<a href="http://jquery.com/">http://jquery.com</a></li><li>jQuery官网引用地址最近国内访问会经常出现打不开的情况，可以戳<a href="https://www.jq22.com/jquery-info122">jQuery插件库</a></li><li><a href="https://www.runoob.com/jquery/jquery-tutorial.html">jQuery|菜鸟教程</a></li></ol></li><li>引入jQuery<ol><li>下载：minified（压缩版，去掉注释和空白行，引入本地下载的jQuery。<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;jquery-1.12.4.min.js&quot;</span>&gt;</span><span class="handlebars"><span class="xml"><span class="tag">&lt;/<span class="name">scirpt</span>&gt;</span></span></span></span><br></pre></td></tr></table></figure></li><li>CDN：内容分发网络，通过CDN的优势可以加快jQuery文件的访问速度<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>   <span class="attr">src</span>=<span class="string">&quot;https://code.jquery.com/jquery-3.4.1.min.js&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol></li><li>使用jQuery</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">在HTML页面中创建&lt;h2&gt;元素，该元素含有文本“测试”和“居中”属性的。</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">//html实现</span></span><br><span class="line">&lt;h2 align=‘center’&gt;测试&lt;/h2&gt;</span><br><span class="line"><span class="comment">//JS实现</span></span><br><span class="line"><span class="keyword">var</span> h2 = <span class="built_in">document</span>.createElement(<span class="string">&#x27;h2&#x27;</span>); </span><br><span class="line"><span class="keyword">var</span> text = <span class="built_in">document</span>.createTextNode(‘测试’); </span><br><span class="line"><span class="keyword">var</span> attr = <span class="built_in">document</span>.createAttribute(<span class="string">&#x27;align&#x27;</span>);</span><br><span class="line">attr.value = ‘center’; </span><br><span class="line">h2.setAttributeNode(attr);  </span><br><span class="line">h2.appendChild(text); </span><br><span class="line"><span class="built_in">document</span>.querySelector(<span class="string">&#x27;body&#x27;</span>).appendChild(h2);</span><br><span class="line"><span class="comment">//jQuery实现</span></span><br><span class="line"><span class="comment">//美元符号$表示jQuery类，也就是说&quot;$()&quot;等价于&quot;jQuery()&quot;,即jQuery的构造函数。</span></span><br><span class="line">$(<span class="string">&#x27;&lt;h2 align=&quot;center&quot;&gt;测试&lt;/h2&gt;&#x27;</span>).appendTo(<span class="string">&#x27;body&#x27;</span>);</span><br></pre></td></tr></table></figure><h1 id="元素操作"><a href="#元素操作" class="headerlink" title="元素操作"></a>元素操作</h1><h2 id="jQuery选择器"><a href="#jQuery选择器" class="headerlink" title="jQuery选择器"></a>jQuery选择器</h2><p><strong>语法：$(选择器)</strong></p><ul><li>基本选择器、层级选择器</li><li>基本过滤选择器、内容选择器</li><li>可见性选择器、属性选择器</li><li>子元素选择器、表单选择器</li></ul><h3 id="基本选择器"><a href="#基本选择器" class="headerlink" title="基本选择器"></a>基本选择器</h3><p>基本选择器常用的有标签选择器、类选择器和ID选择器</p><table><thead><tr><th align="center">CSS选择器</th><th align="center">功能描述</th><th align="center">示例</th></tr></thead><tbody><tr><td align="center">li{color:red}</td><td align="center">根据指定元素名匹配所有元素</td><td align="center">${“li”}</td></tr><tr><td align="center">.bar{color:red}</td><td align="center">根据指定类名匹配所有元素</td><td align="center">${“.bar”}</td></tr><tr><td align="center">#btn{color:red}</td><td align="center">根据指定id匹配一个元素</td><td align="center">${“#bar}”</td></tr><tr><td align="center">li,.bar,#btn{color:red}</td><td align="center">同时获取多个元素</td><td align="center">${“li,p,div”}</td></tr></tbody></table><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/25/b0ece8129f371bfe621892437397d7a0.png"></p><h3 id="层级选择器"><a href="#层级选择器" class="headerlink" title="层级选择器"></a>层级选择器</h3><table><thead><tr><th align="center">选择器</th><th align="center">示例</th><th align="center">功能描述</th></tr></thead><tbody><tr><td align="center">selector selector1</td><td align="center">$(“div .test”)</td><td align="center">选取&lt;div&gt;下所有class名为test的元素（多级）</td></tr><tr><td align="center">parent &gt; child</td><td align="center">$(“.box &gt; .con”)</td><td align="center">选取class名为box下的所有class名为con的子元素（一级）</td></tr><tr><td align="center">prev + next</td><td align="center">$(“div + .title”)</td><td align="center">获取紧邻&lt;div&gt;的下一个class名为title的兄弟节点</td></tr><tr><td align="center">prev ~ siblings</td><td align="center">$(“.bar ~ li”)</td><td align="center">获取class名为bar的元素后的所有同级元素节点&lt;li&gt;</td></tr></tbody></table><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/25/991e6bf8bb02ade1e9fb757b2dabbcc3.png"></p><h3 id="基本过滤选择器"><a href="#基本过滤选择器" class="headerlink" title="基本过滤选择器"></a>基本过滤选择器</h3><table><thead><tr><th align="center">选择器</th><th align="center">示例</th><th align="center">功能描述</th></tr></thead><tbody><tr><td align="center">:first</td><td align="center">$(“li : first”)</td><td align="center">获取第1个&lt;li&gt;元素</td></tr><tr><td align="center">:last</td><td align="center">$(“li : last”)</td><td align="center">获取最后1个&lt;li&gt;元素</td></tr><tr><td align="center">:even</td><td align="center">$(“li :even”)</td><td align="center">获取所有li元素中，索引为偶数的奇数行数据,从0开始</td></tr><tr><td align="center">:odd</td><td align="center">$(“li :odd”)</td><td align="center">获取所有li元素中，索引为奇数数的偶数行数据，从0开始</td></tr><tr><td align="center">:eq(index)</td><td align="center">$(“li:eq(3)”)</td><td align="center">获取索引为3的li元素</td></tr><tr><td align="center">:gt(index)</td><td align="center">$(“li :eq(3)”)</td><td align="center">获取索引大于3的li元素</td></tr><tr><td align="center">:It(index)</td><td align="center">$(“li :It(3)”)</td><td align="center">获取索引小于3的li元素</td></tr><tr><td align="center">:not(seletor)</td><td align="center">$(“li :not(li:qe(3))”)</td><td align="center">获取除指定选择器外的其他元素，获取除索引为3的li元素</td></tr><tr><td align="center">:focus</td><td align="center">$(“inputs:focus”)</td><td align="center">匹配当前获取焦点的input元素</td></tr><tr><td align="center">:animated</td><td align="center">#(“div:not(:animated)”)</td><td align="center">匹配当前没有执行动画的div元素</td></tr></tbody></table><h3 id="内容选择器"><a href="#内容选择器" class="headerlink" title="内容选择器"></a>内容选择器</h3><table><thead><tr><th align="center">选择器</th><th align="center">功能描述</th><th align="center">示例</th></tr></thead><tbody><tr><td align="center">:contains(text)</td><td align="center">获取内容包含1text文本的元素</td><td align="center">&amp;(“li:contains(‘js’)”)获取内容中含’js’的li元素</td></tr><tr><td align="center">:empty</td><td align="center">获取内容为空的元素</td><td align="center">$(“li:empty”)获取内容为空的li元素</td></tr><tr><td align="center">:has(selector)</td><td align="center">获取内容包含指定选择器元素</td><td align="center">$(“li:has(‘a’)”)获取内容中含a元素的所有li元素</td></tr><tr><td align="center">:parent</td><td align="center">获取内容不为空的元素(特殊)</td><td align="center">$(“li:parent”)获取内容不为空的li元素</td></tr></tbody></table><h3 id="可见性选择器"><a href="#可见性选择器" class="headerlink" title="可见性选择器"></a>可见性选择器</h3><table><thead><tr><th align="center">选择器</th><th align="center">功能描述</th><th align="center">示例</th></tr></thead><tbody><tr><td align="center">:hidden</td><td align="center">获取所有隐藏元素</td><td align="center">$(“li:hidden”)获取所有隐藏的li元素</td></tr><tr><td align="center">:visible</td><td align="center">获取所有可见元素</td><td align="center">$(“li:visible”)获取所有可见的li元素</td></tr></tbody></table><h3 id="属性选择器"><a href="#属性选择器" class="headerlink" title="属性选择器"></a>属性选择器</h3><table><thead><tr><th align="center">选择器</th><th align="center">功能描述</th><th align="center">示例</th></tr></thead><tbody><tr><td align="center">[attr]</td><td align="center">获取具体指定属性的元素</td><td align="center">$(“div[class]”)获取含有class属性的所有div元素</td></tr><tr><td align="center">[attr=value]</td><td align="center">获取属性值等于value的元素</td><td align="center">$(“div[class=current]”)获取class等于current的所有div元素</td></tr><tr><td align="center">[attr！=value]</td><td align="center">获取属性值不等于value的元素</td><td align="center">$(“div[class！=current]”)获取class不等于current的所有div元素</td></tr><tr><td align="center">[attr^=value]</td><td align="center">获取属性值以value开始的元素</td><td align="center">$(“div[class^box]”)获取class以box开始的所有div元素</td></tr><tr><td align="center">[attr$=value]</td><td align="center">获取属性值以value结尾的元素</td><td align="center">$(“div[class$box]”)获取class以box结尾的所有div元素</td></tr><tr><td align="center">[attr*=value]</td><td align="center">获取属性值包含value的元素</td><td align="center">$(“div[class*=’-‘]”)获取class含有’-‘的所有div元素</td></tr><tr><td align="center">[attr~=value]</td><td align="center">获取元素的属性值包含一个value，以空格隔开</td><td align="center">$(“div[class~=’box’]”)获取class属性值等于’box’或通过空格分隔并含有box的div元素，如”t box”</td></tr><tr><td align="center">[attr1][attr2]…[attrN]</td><td align="center">获取同时拥有多个属性的元素</td><td align="center">$(“input[id][name$=’usr’]”)获取同时含有id属性和属性值以usr结尾的name属性的input元素</td></tr></tbody></table><h3 id="子元素选择器"><a href="#子元素选择器" class="headerlink" title="子元素选择器"></a>子元素选择器</h3><table><thead><tr><th align="center">选择器</th><th align="center">功能描述</th></tr></thead><tbody><tr><td align="center">:nth-child(index/even/odd/公式)</td><td align="center">索引index默认从1开始，匹配指定index索引、偶数、奇书、或符合指定公式(如2n,n默认从0开始)的子元素</td></tr><tr><td align="center">:first-child</td><td align="center">获取第一个子元素</td></tr><tr><td align="center">:last-child</td><td align="center">获取最后一个子元素</td></tr><tr><td align="center">:only-child</td><td align="center">如果当前元素时唯一的子元素，则匹配</td></tr><tr><td align="center">:nth-last-child(index/even/odd/公式)</td><td align="center">选择所有它们父元素的第n个子元素，计数从最后一个元素开始到第一个</td></tr><tr><td align="center">:nth-of-type(index/even/odd/公式)</td><td align="center">选择同一个父元素之下，并且标签名相同的子元素中的第n个子元素</td></tr><tr><td align="center">:first-of-type</td><td align="center">选择所有相同的元素名称的第一个子元素</td></tr><tr><td align="center">:last-of-type</td><td align="center">选择所有相同的元素名称的最后一个子元素</td></tr><tr><td align="center">:only-of-type</td><td align="center">选择所有没有兄弟元素，且具有相同的元素名称的元素</td></tr><tr><td align="center">:nth-last-of-type(index/even/odd/公式)</td><td align="center">选择所有它们的父级元素的第n个子元素，计数从最后一个元素开始到第一个</td></tr></tbody></table><h3 id="表单选择器"><a href="#表单选择器" class="headerlink" title="表单选择器"></a>表单选择器</h3><table><thead><tr><th align="center">选择器</th><th align="center">功能描述</th></tr></thead><tbody><tr><td align="center">:input</td><td align="center">获取页面中的所有表单元素，包含select元素和textarea元素</td></tr><tr><td align="center">:text</td><td align="center">选取页面中的所有文本框</td></tr><tr><td align="center">:password</td><td align="center">选取所有的密码框</td></tr><tr><td align="center">:radio</td><td align="center">选取所有的单选按钮</td></tr><tr><td align="center">:checkbox</td><td align="center">选取所有的复选框</td></tr><tr><td align="center">:submit</td><td align="center">获取submit提交按钮</td></tr><tr><td align="center">:reset</td><td align="center">获取reset重置按钮</td></tr><tr><td align="center">:image</td><td align="center">获取type=”image”的图像域</td></tr><tr><td align="center">:button</td><td align="center">获取button按钮，包括button标签和type=”button”</td></tr><tr><td align="center">:file</td><td align="center">获取type=”file”的文件域</td></tr><tr><td align="center">:hidden</td><td align="center">获取隐藏表单项</td></tr><tr><td align="center">:enabled</td><td align="center">获取所有可用表单元素</td></tr><tr><td align="center">:disabled</td><td align="center">获取所有不可用表单元素</td></tr><tr><td align="center">:checked</td><td align="center">获取所有选中的表单元素，主要针对radio和checkbox</td></tr><tr><td align="center">:selected</td><td align="center">获取所有可用表单元素，主要针对select</td></tr></tbody></table><h3 id="元素筛选函数"><a href="#元素筛选函数" class="headerlink" title="元素筛选函数"></a>元素筛选函数</h3><table><thead><tr><th align="center">语法</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">$(“ul”).find(“span”)</td><td align="center">返回&lt;ul&gt; 后代中所有的&lt;span&gt; 元素</td></tr><tr><td align="center">$(“ul”).siblings(“span”))</td><td align="center">返回与&lt;ul&gt; 同级的所有的 &lt;span&gt; 元素</td></tr><tr><td align="center">$(“ul”).next(“span”))</td><td align="center">匹配&lt;ul&gt;紧邻的同级的下一个&lt;span&gt;元素</td></tr><tr><td align="center">$(“ul”). prev(“span”))</td><td align="center">匹配&lt;ul&gt;紧邻的同级的上一个&lt;span&gt;元素</td></tr></tbody></table><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/25/ce1673e1b45dc9421d7a6c4652b96f37.png"></p><p>获取第三层的第一个li</p><pre><code>    $(&#39;#fold&gt;ul&gt;li:first&#39;)</code></pre><p>通过上面的li，获得其下class为wrap的元素</p><pre><code>    $(&#39;#fold&gt;ul&gt;li:first&#39;).find(&#39;.wrap&#39;);</code></pre><h2 id="元素操作-1"><a href="#元素操作-1" class="headerlink" title="元素操作"></a>元素操作</h2><h3 id="元素遍历"><a href="#元素遍历" class="headerlink" title="元素遍历"></a>元素遍历</h3><p>each()方法可以对元素进行遍历</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>PHP<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>IOS<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>JAVA<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>JS<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="comment">//each参数：回调函数</span></span></span><br><span class="line"><span class="javascript">$(<span class="string">&#x27;li&#x27;</span>).each(<span class="function"><span class="keyword">function</span>(<span class="params">index,element</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.og(<span class="string">&quot;第&quot;</span>+(index+<span class="number">1</span>)+<span class="string">&#x27;个:&#x27;</span>+$(element).text());</span></span><br><span class="line">&#125;);</span><br><span class="line"><span class="javascript"><span class="comment">//each：遍历选择器匹配到的所有&lt;li&gt;元素</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//index：当前元素的索引位置</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//element：当前元素</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//text():函数，元素的文本</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">/*</span><br><span class="line">第1个:PHP</span><br><span class="line">第2个:IOS</span><br><span class="line">第3个:JAVA</span><br><span class="line">第4个:JS</span><br><span class="line">*/</span><br></pre></td></tr></table></figure><h3 id="元素内容"><a href="#元素内容" class="headerlink" title="元素内容"></a>元素内容</h3><table><thead><tr><th align="center">语法</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">html()</td><td align="center">获取第一个匹配元素的HTML内容</td></tr><tr><td align="center">html(content)</td><td align="center">设置第一个匹配元素的HTML内容</td></tr><tr><td align="center">text()</td><td align="center">获取所有匹配元素包含的文本内容组合起来的文本</td></tr><tr><td align="center">text(content)</td><td align="center">设置所有匹配元素的文本内容</td></tr><tr><td align="center">val()</td><td align="center">获取表单元素的value值</td></tr><tr><td align="center">val(value)</td><td align="center">设置表单元素的value值</td></tr></tbody></table><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;</span> <span class="meta-string">&quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.w3.org/1999/xhtml&quot;</span> <span class="attr">xml:lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Type&quot;</span> <span class="attr">content</span>=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>PHP<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>ios<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>java<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>js<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;jquery-3.4.1.min.js&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        $(<span class="string">&#x27;li&#x27;</span>).each(<span class="function"><span class="keyword">function</span>(<span class="params">index,element</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            $(element).text(<span class="string">&#x27;修改后的内容&#x27;</span> + index);</span></span><br><span class="line">        &#125;);</span><br><span class="line"><span class="javascript">        $(<span class="string">&#x27;li&#x27;</span>).each(<span class="function"><span class="keyword">function</span>(<span class="params">index,element</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">&quot;第&quot;</span> + (index+<span class="number">1</span>) + <span class="string">&#x27;个:&#x27;</span></span></span><br><span class="line"><span class="javascript">                + $(element).text());</span></span><br><span class="line">        &#125;);</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/25/63efebe8bea84d084a689d34e0d14a17.png"></p><h3 id="元素样式"><a href="#元素样式" class="headerlink" title="元素样式"></a>元素样式</h3><pre><code>    var ele=$(&#39;div&#39;);    ele.css(&#123;border:&#39;2px solid black&#39;,backgroundColor:&#39;#ccc&#39;&#125;);    var w=ele.css(&#39;width&#39;);    var h=ele.css(&#39;height&#39;);    ele.css(&#39;width&#39;,&#39;200px&#39;);    ele.css(&#39;height&#39;,&#39;200px&#39;);</code></pre><table><thead><tr><th align="center">语法</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">css(name)</td><td align="center">name:样式名称，获得样式的值</td></tr><tr><td align="center">css(properties)</td><td align="center">properties：键值对形式的对象，设置样式值</td></tr><tr><td align="center">css(name,value)</td><td align="center">设置样式的值</td></tr><tr><td align="center">width()/width(value)</td><td align="center">获取/设置第一个匹配元素的当前宽度值</td></tr><tr><td align="center">height()/height(value)</td><td align="center">获取/设置第一个匹配元素的当前高度值</td></tr><tr><td align="center">offset()</td><td align="center">获取元素的位置，返回的是一个对象，包含left和top属性</td></tr><tr><td align="center">offset(properties)</td><td align="center">利用对象设置元素的位置，必须包含left和top属性</td></tr></tbody></table><h3 id="元素属性"><a href="#元素属性" class="headerlink" title="元素属性"></a>元素属性</h3><pre><code>    $(element).prop(&#39;checked&#39;,false);</code></pre><table><thead><tr><th align="center">语法</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">attr(name)</td><td align="center">取得第一个匹配元素的属性值，否则返回undefined</td></tr><tr><td align="center">attr(properties)</td><td align="center">将一个键值对形式的对象设置为所有匹配元素的属性</td></tr><tr><td align="center">attr(name,value)</td><td align="center">为所有匹配的元素设置一个属性值</td></tr><tr><td align="center">removeAtrre(name)</td><td align="center">从每一个匹配的元素中删除一个属性</td></tr><tr><td align="center">prop(name)</td><td align="center">取得第一个匹配元素的属性值，否则返回undefined</td></tr><tr><td align="center">prop(properties)</td><td align="center">将一个键值对形式的对象设置为所有匹配元素的属性</td></tr><tr><td align="center">prop(name,value)</td><td align="center">为所有匹配的元素设置一个属性值</td></tr></tbody></table><blockquote><p>attr（）和prop（）只能获取第一个匹配元素的属性值。<br>操作状态，如checked、selected、disabled时(有true/false)用prop；其它用attr。</p></blockquote><h3 id="元素基本属性"><a href="#元素基本属性" class="headerlink" title="元素基本属性"></a>元素基本属性</h3><table><thead><tr><th align="center">语法</th><th align="center">作用</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">addClass(class)</td><td align="center">追加样式</td><td align="center">为每个匹配的元素追加指定的类名</td></tr><tr><td align="center">removeClass(class)</td><td align="center">移除样式</td><td align="center">从所有匹配的元素中删除全部或者指定的类</td></tr><tr><td align="center">toggleClass(class)</td><td align="center">切换样式</td><td align="center">判断指定类是否存在，存在则删除，不存在则添加</td></tr><tr><td align="center">hasClass(class)</td><td align="center">判断样式</td><td align="center">判断元素是否具有class样式</td></tr></tbody></table><h2 id="折叠菜单"><a href="#折叠菜单" class="headerlink" title="折叠菜单"></a>折叠菜单</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;jquery-3.4.1.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">ul</span>&#123;<span class="attribute">list-style</span>:none;<span class="attribute">padding</span>:<span class="number">0</span>;<span class="attribute">margin</span>:<span class="number">0</span>&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">div</span>&#123;<span class="attribute">width</span>:<span class="number">150px</span>;<span class="attribute">border</span>:<span class="number">1px</span> solid <span class="number">#515E7B</span>;<span class="attribute">margin</span>:<span class="number">10px</span>;&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">div</span> <span class="selector-tag">li</span>&#123;<span class="attribute">background</span>:<span class="number">#515E7B</span>;<span class="attribute">border-bottom</span>:<span class="number">1px</span> solid <span class="number">#fff</span>;&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">div</span> <span class="selector-tag">li</span> <span class="selector-tag">a</span>&#123;<span class="attribute">text-decoration</span>:none;<span class="attribute">color</span>:<span class="number">#fff</span>;<span class="attribute">font-size</span>:<span class="number">16px</span>;<span class="attribute">height</span>:<span class="number">40px</span>;<span class="attribute">line-height</span>:<span class="number">40px</span>;<span class="attribute">padding-left</span>:<span class="number">10px</span>;&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">div</span> <span class="selector-tag">li</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span>&#123;<span class="attribute">text-decoration</span>:underline;&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-class">.wrap</span> &#123;<span class="attribute">width</span>:<span class="number">150px</span>;<span class="attribute">display</span>:none;&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-class">.wrap</span> <span class="selector-tag">li</span>&#123;<span class="attribute">background</span>: <span class="number">#fff</span>;<span class="attribute">margin</span>: <span class="number">0</span>;&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-class">.wrap</span> <span class="selector-tag">li</span> <span class="selector-tag">a</span>&#123;<span class="attribute">color</span>:<span class="number">#3B475F</span>;<span class="attribute">font-size</span>:<span class="number">12px</span>;&#125;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;fold&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>信息管理<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;wrap&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>未读信息<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>已读信息<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>信息列表<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>商品管理<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;wrap&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>商品添加<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>商品列表<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>商品分类<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>用户管理<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;wrap&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>权限设置<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>用户列表<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>重置密码<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 默认第一个显示：css--display:block</span></span></span><br><span class="line"><span class="javascript">        $(<span class="string">&quot;.wrap:first&quot;</span>).css(<span class="string">&#x27;display&#x27;</span>,<span class="string">&#x27;block&#x27;</span>);</span></span><br><span class="line"><span class="javascript">        <span class="comment">//添加点击事件，当前显示,其它隐藏</span></span></span><br><span class="line"><span class="javascript">        $(<span class="string">&quot;#fold&gt;ul&gt;li&quot;</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;   <span class="comment">//无需遍历，直接添加事件</span></span></span><br><span class="line"><span class="javascript">            $(<span class="built_in">this</span>).siblings(<span class="string">&#x27;li&#x27;</span>).find(<span class="string">&#x27;.wrap&#x27;</span>).css(&#123;<span class="attr">display</span>:<span class="string">&#x27;none&#x27;</span>&#125;);</span></span><br><span class="line"><span class="javascript">            $(<span class="built_in">this</span>).find(<span class="string">&#x27;.wrap&#x27;</span>).css(&#123;<span class="attr">display</span>:<span class="string">&#x27;block&#x27;</span>&#125;);</span></span><br><span class="line">            &#125;</span><br><span class="line">        );</span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/25/91b2836348482ddd0439b8c1de7080b9.png"></p><h1 id="DOM节点操作"><a href="#DOM节点操作" class="headerlink" title="DOM节点操作"></a>DOM节点操作</h1><h2 id="节点追加"><a href="#节点追加" class="headerlink" title="节点追加"></a>节点追加</h2><p>content是一段字符串形式的HTML代码<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/25/608d27904a43f74dec06c6a54354296e.png"></p><blockquote><p>父子节点添加是在匹配到的元素内部进行，兄弟节点是在匹配的元素外部进行。</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">//父子节点</span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>hello&gt;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">$(&#x27;p&#x27;).append(&#x27;<span class="tag">&lt;<span class="name">b</span>&gt;</span>append<span class="tag">&lt;/<span class="name">b</span>&gt;</span>&#x27;);</span><br><span class="line">//添加在结束标签之前</span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>hello<span class="tag">&lt;<span class="name">b</span>&gt;</span>append<span class="tag">&lt;/<span class="name">b</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">$(&#x27;p&#x27;).prepend(&#x27;<span class="tag">&lt;<span class="name">b</span>&gt;</span>append<span class="tag">&lt;/<span class="name">b</span>&gt;</span>&#x27;);</span><br><span class="line">//添加在开始标签之后</span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">b</span>&gt;</span><span class="tag">&lt;<span class="name">append</span>&gt;</span><span class="tag">&lt;/<span class="name">b</span>&gt;</span>hello<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">//兄弟节点</span><br><span class="line">$(&#x27;p&#x27;).after(&#x27;<span class="tag">&lt;<span class="name">b</span>&gt;</span>didi<span class="tag">&lt;/<span class="name">b</span>&gt;</span>&#x27;);</span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>hello<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">b</span>&gt;</span>didi<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">$(&#x27;p&#x27;).before(&#x27;<span class="tag">&lt;<span class="name">b</span>&gt;</span>didi<span class="tag">&lt;/<span class="name">b</span>&gt;</span>&#x27;);</span><br><span class="line"><span class="tag">&lt;<span class="name">b</span>&gt;</span>didi<span class="tag">&lt;/<span class="name">b</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>hello&gt;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/25/3f67b7eb565d49fc1270c7406fb57cb1.png"></p><h2 id="节点替换"><a href="#节点替换" class="headerlink" title="节点替换"></a>节点替换</h2><table><thead><tr><th align="center">语法</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">replaceWith(content)</td><td align="center">将所有匹配的元素替换成指定的HTML或DOM元素</td></tr><tr><td align="center">replaceAll(selector)</td><td align="center">用匹配的元素替换掉所有selector匹配到的元素</td></tr></tbody></table><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>hello<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>world<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="handlebars"><span class="xml">        // $(&#x27;p:first&#x27;).replaceWith(&#x27;<span class="tag">&lt;<span class="name">p</span>&gt;</span>你好<span class="tag">&lt;/<span class="name">p</span>&gt;</span>&#x27;);</span></span></span><br><span class="line"><span class="handlebars"><span class="xml">        // $(&#x27;p:eq(1)&#x27;).replaceWith(&#x27;<span class="tag">&lt;<span class="name">p</span>&gt;</span>世界<span class="tag">&lt;/<span class="name">p</span>&gt;</span>&#x27;);</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">        $(<span class="string">&#x27;&lt;p&gt;你好&lt;/p&gt;&#x27;</span>).replaceAll($(<span class="string">&#x27;p:first&#x27;</span>));</span></span><br><span class="line"><span class="javascript">        $(<span class="string">&#x27;&lt;p&gt;世界&lt;/p&gt;&#x27;</span>).replaceAll($(<span class="string">&#x27;p:eq(1)&#x27;</span>));</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="节点删除"><a href="#节点删除" class="headerlink" title="节点删除"></a>节点删除</h2><table><thead><tr><th align="center">语法</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">empty()</td><td align="center">清空元素的内容，但不删除元素本身</td></tr><tr><td align="center">remove()</td><td align="center">清空元素的内容，并删除元素本身</td></tr></tbody></table><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">li</span>&gt;</span>1111<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">li</span>&gt;</span>2222<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">li</span>&gt;</span>3333<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">li</span>&gt;</span>4444<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">       <span class="comment">//移除第一个节点的内容</span></span></span><br><span class="line"><span class="javascript">       $(<span class="string">&#x27;li:first&#x27;</span>).empty();</span></span><br><span class="line"><span class="javascript">       <span class="comment">//移除第二个元素的内容及元素本身</span></span></span><br><span class="line"><span class="javascript">       $(<span class="string">&#x27;li:eq(1)&#x27;</span>).remove();</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/25/be846db6a9a21c2aa000b70fc203b348.png"></p><h2 id="节点复制"><a href="#节点复制" class="headerlink" title="节点复制"></a>节点复制</h2><table><thead><tr><th align="center">语法</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">clone([false])</td><td align="center">复制匹配的元素，默认参数为false</td></tr><tr><td align="center">clone(true)</td><td align="center">参数设置为true时，复制元素的所有事件处理</td></tr></tbody></table><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">li</span>&gt;</span>1111<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">li</span>&gt;</span>2222<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">li</span>&gt;</span>3333<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">li</span>&gt;</span>4444<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">       $(<span class="string">&#x27;ul&#x27;</span>).clone().appendTo($(<span class="string">&#x27;body&#x27;</span>));</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/25/089e1fb74bc937a7141481d94270ac65.png"></p><h2 id="左移与右移"><a href="#左移与右移" class="headerlink" title="左移与右移"></a>左移与右移</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>左移与右移<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">select</span>&#123;<span class="attribute">width</span>:<span class="number">100px</span>;<span class="attribute">height</span>:<span class="number">150px</span>&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">input</span><span class="selector-attr">[type=button]</span>&#123;<span class="attribute">width</span>:<span class="number">50px</span>&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-id">#opt</span>&#123;<span class="attribute">margin</span>:<span class="number">90px</span> <span class="number">10px</span> <span class="number">0</span>&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-class">.box</span>&#123;<span class="attribute">width</span>:<span class="number">80%</span>;<span class="attribute">margin</span>:<span class="number">0</span> auto;<span class="attribute">background-color</span>:<span class="number">#999999</span>&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-class">.box</span> <span class="selector-tag">div</span>&#123;<span class="attribute">float</span>:left&#125;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;left&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>可选项<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">select</span> <span class="attr">multiple</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">option</span>&gt;</span>添加<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">option</span>&gt;</span>移动<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">option</span>&gt;</span>修改<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">option</span>&gt;</span>查询<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">option</span>&gt;</span>打印<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">option</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;opt&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;toRight&quot;</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;&gt;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;toLeft&quot;</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;&lt;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;toAllRight&quot;</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;&gt;&gt;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;toAllLeft&quot;</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;&lt;&lt;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;right&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>已选项<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">select</span> <span class="attr">multiple</span>=<span class="string">&quot;multiple&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;jquery-3.4.1.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">      <span class="comment">// 获取按钮添加单击事件，获取第一个下拉框中被选中的option添加到第二个下拉框</span></span></span><br><span class="line"><span class="javascript">      $(<span class="string">&#x27;#toRight&#x27;</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;       <span class="comment">// 右移</span></span></span><br><span class="line"><span class="javascript">        $(<span class="string">&#x27;#right&gt;select&#x27;</span>).append($(<span class="string">&#x27;#left&gt;select&gt;option:selected&#x27;</span>));</span></span><br><span class="line">      &#125;);</span><br><span class="line"><span class="javascript">      $(<span class="string">&#x27;#toLeft&#x27;</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;        <span class="comment">// 左移</span></span></span><br><span class="line"><span class="javascript">        $(<span class="string">&#x27;#left&gt;select&#x27;</span>).append($(<span class="string">&#x27;#right&gt;select&gt;option:selected&#x27;</span>));</span></span><br><span class="line">      &#125;);</span><br><span class="line"><span class="javascript">      $(<span class="string">&#x27;#toAllRight&#x27;</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;    <span class="comment">// 全部右移</span></span></span><br><span class="line"><span class="javascript">        $(<span class="string">&#x27;#right&gt;select&#x27;</span>).append($(<span class="string">&#x27;#left&gt;select&gt;option&#x27;</span>));</span></span><br><span class="line">      &#125;);</span><br><span class="line"><span class="javascript">      $(<span class="string">&#x27;#toAllLeft&#x27;</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;     <span class="comment">// 全部左移</span></span></span><br><span class="line"><span class="javascript">        $(<span class="string">&#x27;#left&gt;select&#x27;</span>).append($(<span class="string">&#x27;#right&gt;select&gt;option&#x27;</span>));</span></span><br><span class="line">      &#125;);</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/25/c8e2b69a10be668bdb5a127790ea6062.png"></p><h1 id="事件操作"><a href="#事件操作" class="headerlink" title="事件操作"></a>事件操作</h1><ul><li>标签中通过属性设置事件，每个属性都由一个on和事件名组成。例如，点击事件对应的属性为onclick。</li><li>在jQuery中则可直接使用其提供的与事件类型同名的方法。例如，点击事件对应的方法为click()。</li><li>这些事件方法允许重复绑定处理程序，按照绑定顺序依次执行。</li></ul><h2 id="表单事件"><a href="#表单事件" class="headerlink" title="表单事件"></a>表单事件</h2><table><thead><tr><th align="center">方法</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">blur()</td><td align="center">当元素失去焦点时触发</td></tr><tr><td align="center">focus()</td><td align="center">当元素获得焦点时触发</td></tr><tr><td align="center">change()</td><td align="center">当元素的值发生改变时触发</td></tr><tr><td align="center">select()</td><td align="center">当文本框（包括&lt;input&gt;和&lt;textarea&gt;）中的文本被选中时触发</td></tr><tr><td align="center">submit()</td><td align="center">表单提交时触发</td></tr></tbody></table><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;</span> <span class="meta-string">&quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.w3.org/1999/xhtml&quot;</span> <span class="attr">xml:lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Type&quot;</span> <span class="attr">content</span>=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;jquery-3.4.1.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>用户名称：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;uname&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>电子邮箱：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;email&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>手机号码：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;tel&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        $(<span class="string">&#x27;input[type=text]&#x27;</span>).focus(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> tips = $(<span class="string">&#x27;&lt;span&gt;&lt;/span&gt;&#x27;</span>);</span></span><br><span class="line"><span class="javascript">            tips.html(<span class="string">&#x27;请按要求输入&#x27;</span>);</span></span><br><span class="line"><span class="javascript">            $(<span class="string">&#x27;input:focus&#x27;</span>).after(tips);</span></span><br><span class="line">        &#125;);</span><br><span class="line"><span class="javascript">        $(<span class="string">&#x27;input[type=text]&#x27;</span>).blur(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            $(<span class="built_in">this</span>).next().remove();</span></span><br><span class="line">        &#125;);</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/25/84ff5255a8425a2dd3860eb8d6f253cf.png"></p><h2 id="键盘事件"><a href="#键盘事件" class="headerlink" title="键盘事件"></a>键盘事件</h2><table><thead><tr><th align="center">方法</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">keydown()</td><td align="center">键盘按键被按下时触发</td></tr><tr><td align="center">keyup()</td><td align="center">键盘按键弹起时触发</td></tr><tr><td align="center">keypress()</td><td align="center">键盘按键（Shift等非字符键除外）被按下时触发</td></tr></tbody></table><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>左移与右移<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">      <span class="selector-class">.boxes</span>&#123;<span class="attribute">width</span>:<span class="number">10px</span>;<span class="attribute">height</span>:<span class="number">10px</span>;<span class="attribute">background-color</span>:red;&#125;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&#x27;boxes&#x27;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;jquery-3.4.1.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">       $(<span class="built_in">document</span>).</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">       keydown(<span class="function"><span class="keyword">function</span>(<span class="params">event</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">       <span class="comment">//获取按键码(37、38、39、40)</span></span></span><br><span class="line"><span class="javascript">           <span class="keyword">var</span> opt = event.which;</span></span><br><span class="line"><span class="javascript">           <span class="keyword">var</span> item = $(<span class="string">&#x27;.boxes&#x27;</span>);</span></span><br><span class="line"><span class="javascript">           <span class="comment">//获取元素距离文档的位置</span></span></span><br><span class="line"><span class="javascript">           <span class="keyword">var</span> left = item.offset().left;</span></span><br><span class="line"><span class="javascript">           <span class="keyword">var</span> top = item.offset().top;;</span></span><br><span class="line"><span class="javascript">           <span class="built_in">console</span>.log(opt);</span></span><br><span class="line"><span class="javascript">           <span class="function"><span class="title">switch</span>(<span class="params">opt</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">case</span> <span class="number">37</span>:item.offset(&#123;<span class="attr">left</span>:left-<span class="number">1</span>,<span class="attr">top</span>:top&#125;);<span class="keyword">break</span>;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">case</span> <span class="number">38</span>:item.offset(&#123;<span class="attr">left</span>:left,<span class="attr">top</span>:top-<span class="number">1</span>&#125;);<span class="keyword">break</span>;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">case</span> <span class="number">39</span>:item.offset(&#123;<span class="attr">left</span>:left+<span class="number">1</span>,<span class="attr">top</span>:top&#125;);<span class="keyword">break</span>;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">case</span> <span class="number">40</span>:item.offset(&#123;<span class="attr">left</span>:left,<span class="attr">top</span>:top+<span class="number">1</span>&#125;);<span class="keyword">break</span>;</span></span><br><span class="line">           &#125;</span><br><span class="line">       &#125;);</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/25/3355318cfc0459182e0575a1c5acd4c6.png"></p><h2 id="鼠标事件"><a href="#鼠标事件" class="headerlink" title="鼠标事件"></a>鼠标事件</h2><table><thead><tr><th align="center">方法</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">mouseover()</td><td align="center">当鼠标移入对象时触发</td></tr><tr><td align="center">mouseout()</td><td align="center">鼠标从元素上离开时触发</td></tr><tr><td align="center">click()</td><td align="center">当单击元素时触发</td></tr><tr><td align="center">dbclick()</td><td align="center">当双击元素时触发</td></tr><tr><td align="center">mousedown()</td><td align="center">当鼠标指针移动到元素上方，并按下鼠标按键时触发</td></tr><tr><td align="center">mouseup()</td><td align="center">当在元素上放松鼠标按钮时，会被触发</td></tr></tbody></table><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">/*</span><br><span class="line">鼠标移入时，为本文添加背景颜色；</span><br><span class="line">鼠标移出时，为文本移除背景颜色。</span><br><span class="line">鼠标单击时，打印单击位置。</span><br><span class="line"></span><br><span class="line">*/</span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>左移与右移<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">      <span class="selector-class">.boxes</span>&#123;<span class="attribute">width</span>:<span class="number">10px</span>;<span class="attribute">height</span>:<span class="number">10px</span>;<span class="attribute">background-color</span>:red;&#125;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;hit&quot;</span>&gt;</span>jQuery介绍<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;jquery-3.4.1.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">       $(<span class="string">&#x27;.hit&#x27;</span>).mouseover(<span class="function"><span class="keyword">function</span>(<span class="params">event</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">           $(<span class="built_in">this</span>).css(<span class="string">&#x27;background-color&#x27;</span>,<span class="string">&#x27;green&#x27;</span>);</span></span><br><span class="line"></span><br><span class="line">       &#125;);</span><br><span class="line"><span class="javascript">       $(<span class="string">&#x27;.hit&#x27;</span>).mouseout(<span class="function"><span class="keyword">function</span>(<span class="params">event</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">           $(<span class="built_in">this</span>).css(<span class="string">&#x27;background-color&#x27;</span>,<span class="string">&#x27;&#x27;</span>);</span></span><br><span class="line">       &#125;);</span><br><span class="line"><span class="javascript">       $(<span class="string">&#x27;.hit&#x27;</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params">event</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">           <span class="built_in">console</span>.log(event.pageY);</span></span><br><span class="line"></span><br><span class="line">       &#125;);</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="页面加载事件"><a href="#页面加载事件" class="headerlink" title="页面加载事件"></a>页面加载事件</h2><table><thead><tr><th align="center">类比选项</th><th align="center">window.onload</th><th align="center">$(document).ready()</th></tr></thead><tbody><tr><td align="center">执行时机</td><td align="center">必须等待网页中的所有内容加载完成后(包括外部元素，如图片)才能执行</td><td align="center">网页中的所有DOM结构绘制完成后就执行（可能关联内容并未加载完成）</td></tr><tr><td align="center">编写个数</td><td align="center">不能同时编写多个</td><td align="center">能够同时编写多个</td></tr><tr><td align="center">简化写法</td><td align="center">无</td><td align="center">$()</td></tr></tbody></table><p>jQuery中的页面加载事件方法有3种语法形式，具体如下。</p><pre><code>    $(document).ready(function() &#123;  &#125;);         // 语法方式1    $().ready(function() &#123;  &#125;);             // 语法方式2    $(function() &#123;  &#125;);                 // 语法方式3</code></pre><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>页面加载<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;jquery-3.4.1.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">          $(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">              alert(<span class="string">&quot;欢迎光临&quot;</span>);</span></span><br><span class="line">          &#125;)</span><br><span class="line">      <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/25/2776a6a8b120b78267a95c9aa433c8f5.png"></p><h2 id="事件绑定与切换"><a href="#事件绑定与切换" class="headerlink" title="事件绑定与切换"></a>事件绑定与切换</h2><table><thead><tr><th align="center">方法</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">on(events,function)</td><td align="center">在匹配元素上绑定一个或多个事件处理函数</td></tr><tr><td align="center">off(events)</td><td align="center">在匹配元素上移除一个或多个事件处理函数</td></tr><tr><td align="center">one(events,function)</td><td align="center">为每个匹配元素的事件绑定一次性的处理函数</td></tr><tr><td align="center">hover([over,]out)</td><td align="center">元素鼠标移入与移出事件切换</td></tr></tbody></table><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>页面加载<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;jquery-3.4.1.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">div</span>&gt;</span>文本<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">          $(<span class="string">&#x27;div&#x27;</span>).on(<span class="string">&#x27;click&#x27;</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">              <span class="built_in">console</span>.log(<span class="string">&#x27;触发点击事件&#x27;</span>);</span></span><br><span class="line"><span class="javascript">              $(<span class="string">&#x27;div&#x27;</span>).off(<span class="string">&#x27;click&#x27;</span>);</span></span><br><span class="line">          &#125;)</span><br><span class="line"><span class="javascript">          $(<span class="string">&#x27;div&#x27;</span>).on(&#123;</span></span><br><span class="line"><span class="javascript">              mouseover:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">&#x27;鼠标移入&#x27;</span>);</span></span><br><span class="line">              &#125;,</span><br><span class="line"><span class="javascript">              mouseout:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">&#x27;鼠标移出&#x27;</span>);</span></span><br><span class="line">              &#125;</span><br><span class="line">          &#125;)</span><br><span class="line">       <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/25/67f8db8f8d37d276874a7977b13105aa.png"></p><h1 id="手风琴效果"><a href="#手风琴效果" class="headerlink" title="手风琴效果"></a>手风琴效果</h1><ul><li><p>页面组成<br>  5张图片<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/25/b121fdc5918a1143cbcf60403f0c6bed.png"></p></li><li><p>动态效果：<br>  鼠标移入图片时，该图片完整显示；鼠标移出时，该图片回复默认大小。overflow:hidden多余隐藏。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/25/1cc77ff4965b51597b5e50718b693c10.png"></p></li><li><p>图片素材</p></li></ul><p>1.jpg<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/25/92f6b154568bc50a88a2bb755847c57f.png"><br>2.jpg<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/25/470f55c119b2c75fc21c898ee7fd470f.png"><br>3.jpg<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/25/744f096e12d235ff3feaaae3758cd653.png"><br>4.jpg<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/25/5547663bea41be8ae50f6bcd4e152e26.png"><br>5.jpg<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/25/046dc5f515f8200717a5f6062f617146.png"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>手风琴效果<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">ul</span>&#123;<span class="attribute">list-style</span>:none;<span class="attribute">margin</span>:<span class="number">0</span>;<span class="attribute">padding</span>:<span class="number">0</span>&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">div</span>&#123;<span class="attribute">width</span>:<span class="number">1200px</span>;<span class="attribute">height</span>:<span class="number">400px</span>;<span class="attribute">margin</span>:<span class="number">50px</span> auto;<span class="attribute">overflow</span>:hidden&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">div</span> <span class="selector-tag">li</span>&#123;<span class="attribute">width</span>:<span class="number">240px</span>;<span class="attribute">height</span>:<span class="number">400px</span>;<span class="attribute">float</span>:left&#125;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;jquery-3.4.1.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;images/1.jpg&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;images/2.jpg&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;images/3.jpg&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;images/4.jpg&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;images/5.jpg&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        $(<span class="string">&#x27;div&gt;ul&gt;li&#x27;</span>).on(&#123;</span></span><br><span class="line"><span class="javascript">            mouseover:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">              $(<span class="built_in">this</span>).siblings(<span class="string">&#x27;li&#x27;</span>).css(<span class="string">&#x27;width&#x27;</span>,<span class="string">&#x27;60.5px&#x27;</span>);</span></span><br><span class="line"><span class="javascript">              $(<span class="built_in">this</span>).css(<span class="string">&#x27;width&#x27;</span>,<span class="string">&#x27;958px&#x27;</span>);</span></span><br><span class="line">            &#125;,</span><br><span class="line"><span class="javascript">            mouseout:<span class="function"><span class="keyword">function</span>(<span class="params">event</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">              $(<span class="string">&#x27;#box&gt;ul&gt;li&#x27;</span>).css(<span class="string">&#x27;width&#x27;</span>,<span class="string">&#x27;240px&#x27;</span>);</span></span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/25/cf52d7fed1bb639bfa23b09f5dc42f26.png"></p><h1 id="动画特效"><a href="#动画特效" class="headerlink" title="动画特效"></a>动画特效</h1><p>jQuery提供了两种增加动画特效的方法</p><ol><li>内置的动画方法</li><li>提供<code>animate()</code>方法自定义动画</li></ol><h2 id="常用内置动画"><a href="#常用内置动画" class="headerlink" title="常用内置动画"></a>常用内置动画</h2><ul><li><strong>基本特效</strong></li></ul><table><thead><tr><th align="center">方法</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">show([speed,[easing],[fn]])</td><td align="center">显示匹配元素</td></tr><tr><td align="center">hide([speed,[easing],[fn]])</td><td align="center">隐藏匹配元素</td></tr><tr><td align="center">toggle([speed],[easing],[ fn])</td><td align="center">元素显示与隐藏切换</td></tr></tbody></table><ol><li><code>speed</code> ：动画的速度（持续时长），如1000（毫秒），或者预定的3种速度(slow、fast、normal)</li><li><code>easing</code>：切换效果，默认为swing，另有linear</li><li><code>fn</code>    ：动画完成时执行的函数</li></ol><blockquote><p>linear方法提供了一个稳定的动画，以使得动画的每个步骤都是相同的(例如，如果要让一个元素以逐渐变化的方式穿过屏幕，每一步的距离和前一步都是相同的)。</p></blockquote><blockquote><p>swing要更加动态一些，随着动画的开始变得更加快一些，然后再慢下来。swing是一个常用设置，因此，如果没有指定任何缓动，jQuery会使用swing方法。 </p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;</span> <span class="meta-string">&quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.w3.org/1999/xhtml&quot;</span> <span class="attr">xml:lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Type&quot;</span> <span class="attr">content</span>=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">media</span>=<span class="string">&quot;screen&quot;</span>&gt;</span></span><br><span class="line">      div&#123;</span><br><span class="line">        width: 200px;</span><br><span class="line"><span class="css">        <span class="selector-tag">height</span><span class="selector-pseudo">:200px</span>;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">border</span><span class="selector-pseudo">:1px</span> <span class="selector-tag">solid</span> <span class="selector-tag">red</span>;</span></span><br><span class="line">      &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span></span></span><br><span class="line"><span class="tag">      <span class="attr">src</span>=<span class="string">&quot;jquery-3.4.1.js&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;images/1.jpg&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">      fefwefew</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="comment">//1.基本特效</span></span></span><br><span class="line"><span class="javascript">        $(<span class="string">&#x27;img&#x27;</span>).hide(<span class="number">5000</span>);</span></span><br><span class="line"><span class="javascript">        $(<span class="string">&#x27;img&#x27;</span>).show(<span class="number">5000</span>);</span></span><br><span class="line"><span class="javascript">        $(<span class="string">&#x27;img&#x27;</span>).toggle(<span class="number">5000</span>);</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/30/b23cb4c356a35318d3c36cd00de42b63.png"></p><ul><li><strong>滑动特效</strong></li></ul><table><thead><tr><th align="center">方法</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">slideDown([speed],[easing],[ fn])</td><td align="center">使用滑动效果，显示隐藏的被选元素（向下）</td></tr><tr><td align="center">slideUp([speed,[easing],[ fn]])</td><td align="center">使用滑动效果，显示隐藏的被选元素（向上）</td></tr><tr><td align="center">slideToggle([speed],[easing],[ fn])</td><td align="center">使用滑动效果，显示隐藏的被选元素（向下)</td></tr></tbody></table><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Type&quot;</span> <span class="attr">content</span>=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span></span></span><br><span class="line"><span class="tag">          <span class="attr">src</span>=<span class="string">&quot;jquery-3.4.1.js&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">div</span><span class="selector-class">.panel</span>,<span class="selector-tag">p</span><span class="selector-class">.flip</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">margin</span><span class="selector-pseudo">:0px</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">padding</span><span class="selector-pseudo">:5px</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">text-align</span><span class="selector-pseudo">:center</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">background</span>:<span class="selector-id">#e5eecc</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">border</span><span class="selector-pseudo">:solid</span> 1<span class="selector-tag">px</span> <span class="selector-id">#c3c3c3</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-tag">div</span><span class="selector-class">.panel</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">height</span><span class="selector-pseudo">:120px</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">display</span><span class="selector-pseudo">:none</span>;  <span class="comment">/*如果此元素不隐藏，则不能滑动--视觉效果滑动的是flip，其实滑动的是。panel*/</span></span></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;panel&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>W3School - 领先的 Web 技术教程站点<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>在 W3School，你可以找到你所需要的所有网站建设教程。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;flip&quot;</span>&gt;</span>请点击这里<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="comment">// $(document).ready(function()&#123;</span></span></span><br><span class="line"><span class="javascript">          $(<span class="string">&quot;.flip&quot;</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">              $(<span class="string">&quot;.panel&quot;</span>).slideDown(<span class="string">&quot;slow&quot;</span>);</span></span><br><span class="line">          &#125;);</span><br><span class="line"><span class="javascript">        <span class="comment">// &#125;);</span></span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/30/400422ae2228282d3fd51a3eb6bd290a.png"></p><ul><li><strong>淡入淡出特效</strong></li></ul><table><thead><tr><th align="center">方法</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">fadeIn()</td><td align="center">淡入显示匹配元素</td></tr><tr><td align="center">fadeOut()</td><td align="center">淡出隐藏匹配元素</td></tr><tr><td align="center">fadeToggle()</td><td align="center">在fadeIn()和fadeOut()两种效果间的切换</td></tr></tbody></table><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--设置编码--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Type&quot;</span> <span class="attr">content</span>=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span></span></span><br><span class="line"><span class="tag">      <span class="attr">src</span>=<span class="string">&quot;jquery-3.4.1.js&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">  $(<span class="string">&quot;button&quot;</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">    $(<span class="string">&quot;#div1&quot;</span>).fadeIn();</span></span><br><span class="line"><span class="javascript">    $(<span class="string">&quot;#div2&quot;</span>).fadeIn(<span class="string">&quot;slow&quot;</span>);</span></span><br><span class="line"><span class="javascript">    $(<span class="string">&quot;#div3&quot;</span>).fadeIn(<span class="number">3000</span>);</span></span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>演示带有不同参数的 fadeIn() 方法。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span>&gt;</span>点击这里，使三个矩形淡入<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;div1&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width:80px;height:80px;display:none;background-color:red;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;div2&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width:80px;height:80px;display:none;background-color:green;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;div3&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width:80px;height:80px;display:none;background-color:blue;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/30/609da2f27cd557c4025af99ecc3ac40f.png"></p><h2 id="自定义动画"><a href="#自定义动画" class="headerlink" title="自定义动画"></a>自定义动画</h2><p>除了内置动画，用户还可以根据开发需求自定义动画效果。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$(&#x27;div&#x27;).animate(</span><br><span class="line">&#123;width:&#x27;100px&#x27;,height:&#x27;100px&#x27;&#125;,</span><br><span class="line">3000,</span><br><span class="line">&#x27;swing&#x27;,</span><br><span class="line">function()&#123;&#125;</span><br><span class="line">);</span><br></pre></td></tr></table></figure><ul><li>样式名称采用驼峰形式，如maginLeft</li><li>无法识别颜色属性，如color、bordercolor、backgroundcolor</li><li>鼓励通过$.speed()设置动画效果（时长和缓动）</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var params=&#123;width:&#x27;100px&#x27;,height:&#x27;100px&#x27;&#125;;</span><br><span class="line">var settings=$.speed(3000,&#x27;swing&#x27;);</span><br><span class="line">$(&#x27;div&#x27;).animate(params,setting);```</span><br></pre></td></tr></table></figure><ul><li>动画队列</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"> function runQue() &#123;</span><br><span class="line">div.show(&#x27;slow&#x27;)</span><br><span class="line">.animate(&#123;left: &#x27;+=200&#x27;&#125;, 2000)   </span><br><span class="line">        .queue(function() &#123;</span><br><span class="line">        //弥补jquery不能识别颜色属性的缺陷</span><br><span class="line">        $(this).css(&#x27;background&#x27;, &#x27;green&#x27;).dequeue();</span><br><span class="line">        &#125;)</span><br><span class="line">        .animate(&#123;left: &#x27;-=200&#x27;&#125;, 1500)</span><br><span class="line">        //构成一个永不停止的动画的</span><br><span class="line">        .slideUp(&#x27;normal&#x27;, runQue);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th align="center">方自定义动画相关方法</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">animate(params[,speed][,easing][,fn])</td><td align="center">用于创建自定义动画的函数</td></tr><tr><td align="center">$.speed([speed][,settings])</td><td align="center">创建一个包含一组属性的对象用来定义自定义动画</td></tr><tr><td align="center">queue([queueName])</td><td align="center">显示被选元素上要执行的函数队列（入队）</td></tr><tr><td align="center">delay(speed[,queueName])</td><td align="center">设置一个延时来推迟执行队列中之后的项目</td></tr><tr><td align="center">clearQueue([queueName])</td><td align="center">从尚未运行的队列中移除所有项目</td></tr><tr><td align="center">dequeue([queueName])</td><td align="center">从队列移除下一个函数，然后执行函数（出队）</td></tr><tr><td align="center">finish([queueName])</td><td align="center">停止当前正在运行的动画，删除所有排队的动画，并完成匹配元素所有的动画</td></tr><tr><td align="center">stop([clearQueue][,jumpToEnd])</td><td align="center">停止所有在指定元素上正在运行的动画</td></tr></tbody></table><ol><li><code>params</code>：表示一组包含动画最终属性值的集合</li><li><code>settings</code>：是easing与fn组成的一个对象集合</li><li><code>queueName</code>：表示队列名称，默认值为fx(标准效果队列)</li><li><code>clearQueue</code>：布尔类型，默认为false，用于规定是否停止被选元素所有加入队列的动画</li><li><code>jumpToEnd</code>：布尔类型，默认为false，用于规定是否立即完成当前的动画</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Type&quot;</span> <span class="attr">content</span>=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span></span></span><br><span class="line"><span class="tag">          <span class="attr">src</span>=<span class="string">&quot;jquery-3.4.1.js&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">media</span>=<span class="string">&quot;screen&quot;</span>&gt;</span></span><br><span class="line">        div&#123;</span><br><span class="line">            background: red;</span><br><span class="line">            width: 0px;</span><br><span class="line">            height: 0px;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;btn&quot;</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;开始动画&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        $(<span class="string">&#x27;#btn&#x27;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="comment">//1. 直接调用animate，所有效果均作为参数</span></span></span><br><span class="line"><span class="javascript">            $(<span class="string">&#x27;div&#x27;</span>).animate(</span></span><br><span class="line"><span class="javascript">                &#123;<span class="attr">width</span>:<span class="string">&#x27;100px&#x27;</span>,<span class="attr">height</span>:<span class="string">&#x27;100px&#x27;</span>&#125;,</span></span><br><span class="line">                3000,</span><br><span class="line"><span class="javascript">                <span class="string">&#x27;swing&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;</span></span><br><span class="line">            );</span><br><span class="line"></span><br><span class="line"><span class="javascript">            <span class="comment">// 2. 单独设置参数</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">// var params = &#123;width:&#x27;100px&#x27;,height:&#x27;100px&#x27;&#125;;</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">// var settings = $.speed(3000,&#x27;swing&#x27;);</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">// $(&#x27;div&#x27;).animate(params,settings);</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">            <span class="comment">//3. 动画队列</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">// var div = $(&#x27;div&#x27;);    // 获取指定动画的元素</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">// div.css(&#123;width:&#x27;100px&#x27;,height:&#x27;100px&#x27;,display:&#x27;none&#x27;,position:&#x27;absolute&#x27;&#125;);       //初始状态设置</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">// runQue();              // 执行队列动画</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">// function runQue() &#123;</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//     div.show(&#x27;slow&#x27;)</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//        .animate(&#123;left: &#x27;+=200&#x27;&#125;, 2000)   //修改left，应设position为absolute</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//        .queue(function() &#123;</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//             $(this).css(&#x27;background&#x27;, &#x27;green&#x27;).dequeue();</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//         &#125;)</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//        .animate(&#123;left: &#x27;-=200&#x27;&#125;, 1500)</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//        .slideUp(&#x27;normal&#x27;, runQue);</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">// &#125;</span></span></span><br><span class="line">        &#125;);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="无缝轮播"><a href="#无缝轮播" class="headerlink" title="无缝轮播"></a>无缝轮播</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;</span> <span class="meta-string">&quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.w3.org/1999/xhtml&quot;</span> <span class="attr">xml:lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Type&quot;</span> <span class="attr">content</span>=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>无缝轮播图<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.banner</span>&#123;<span class="attribute">position</span>:relative;<span class="attribute">overflow</span>:hidden;</span></span><br><span class="line"><span class="css">          <span class="selector-tag">margin</span><span class="selector-pseudo">:100px</span> <span class="selector-tag">auto</span>;<span class="selector-tag">width</span><span class="selector-pseudo">:958px</span>;<span class="selector-tag">height</span><span class="selector-pseudo">:400px</span>;&#125;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.banner</span> <span class="selector-tag">ul</span>&#123;<span class="attribute">margin</span>:<span class="number">0</span>;<span class="attribute">padding</span>:<span class="number">0</span>;<span class="attribute">list-style</span>:none;&#125;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.hot</span>&#123;<span class="attribute">position</span>:absolute;<span class="attribute">top</span>:<span class="number">0</span>;<span class="attribute">left</span>:<span class="number">0</span>;&#125;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.hot</span> <span class="selector-tag">li</span>&#123;<span class="attribute">float</span>:left;&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.dot</span>&#123;<span class="attribute">position</span>:absolute;<span class="attribute">bottom</span>:<span class="number">10px</span>;<span class="attribute">width</span>:<span class="number">100%</span>;<span class="attribute">text-align</span>:center;<span class="attribute">font-size</span>:<span class="number">0</span>;&#125;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.dot</span> <span class="selector-tag">li</span>&#123;<span class="attribute">display</span>:inline-block;<span class="attribute">margin</span>:<span class="number">0</span> <span class="number">5px</span>;<span class="attribute">width</span>:<span class="number">15px</span>;<span class="attribute">height</span>:<span class="number">15px</span>;<span class="attribute">border-radius</span>:<span class="number">100%</span>;<span class="attribute">background</span>:<span class="built_in">rgba</span>(<span class="number">145</span>,<span class="number">144</span>,<span class="number">144</span>,.<span class="number">5</span>);<span class="attribute">cursor</span>:pointer;&#125;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.dot</span> <span class="selector-class">.on</span>&#123;<span class="attribute">background-color</span>:<span class="number">#fff</span>;&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="comment">/* 左右翻页箭头样式 */</span></span></span><br><span class="line"><span class="css">        <span class="selector-class">.arrow</span>&#123;<span class="attribute">display</span>:none;&#125;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.arrow</span> <span class="selector-tag">span</span>&#123;<span class="attribute">display</span>:block;<span class="attribute">width</span>:<span class="number">50px</span>;<span class="attribute">height</span>:<span class="number">100px</span>;<span class="attribute">background</span>:<span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,.<span class="number">6</span>);<span class="attribute">color</span>:<span class="number">#fff</span>;<span class="attribute">text-align</span>:center;<span class="attribute">font-size</span>:<span class="number">40px</span>;<span class="attribute">line-height</span>:<span class="number">100px</span>;<span class="attribute">cursor</span>:pointer;&#125;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.arrow</span> <span class="selector-class">.prev</span>&#123;<span class="attribute">position</span>:absolute;<span class="attribute">top</span>:<span class="number">50%</span>;<span class="attribute">left</span>:<span class="number">0</span>;<span class="attribute">margin-top</span>:-<span class="number">50px</span>;&#125;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.arrow</span> <span class="selector-class">.next</span>&#123;<span class="attribute">position</span>:absolute;<span class="attribute">top</span>:<span class="number">50%</span>;<span class="attribute">right</span>:<span class="number">0</span>;<span class="attribute">margin-top</span>:-<span class="number">50px</span>;&#125;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">script</span></span></span><br><span class="line"><span class="tag">          <span class="attr">src</span>=<span class="string">&quot;jquery-3.4.1.js&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;banner&quot;</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!--轮播图片--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;hot&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;images/1.jpg&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;images/2.jpg&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;images/3.jpg&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;images/4.jpg&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;images/5.jpg&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">&lt;!--小圆点--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;dot&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;on&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">&lt;!-- 左右翻页箭头--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;arrow&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;prev&quot;</span>&gt;</span><span class="symbol">&amp;lt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;next&quot;</span>&gt;</span><span class="symbol">&amp;gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">      <span class="comment">//1.初始工作</span></span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> i = <span class="number">0</span>;           <span class="comment">// 当前显示的图片索引</span></span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> timer = <span class="literal">null</span>;    <span class="comment">// 定时器</span></span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> delay = <span class="number">1000</span>;    <span class="comment">// 图片自动切换的间隔时间</span></span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> width = <span class="number">958</span>;     <span class="comment">// 每张图片的宽度</span></span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> speed = <span class="number">400</span>;     <span class="comment">// 动画时间</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">      <span class="comment">// 复制列表中的第一个图片，追加到列表最后，设置ul的宽度为图片张数 * 图片宽度</span></span></span><br><span class="line">  </span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> firstimg = $(<span class="string">&#x27;.hot li&#x27;</span>).first().clone();</span></span><br><span class="line"><span class="javascript">      $(<span class="string">&#x27;.hot&#x27;</span>).append(firstimg).width($(<span class="string">&#x27;.hot li&#x27;</span>).length * width);</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">      <span class="comment">// 设置周期计时器，实现图片自动切换</span></span></span><br><span class="line"><span class="javascript">      timer = <span class="built_in">setInterval</span>(imgChange, delay);</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">       <span class="comment">//2. 自动切换图片</span></span></span><br><span class="line"><span class="javascript">      <span class="function"><span class="keyword">function</span> <span class="title">imgChange</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line">        ++i;</span><br><span class="line"><span class="javascript">        isCrack();  <span class="comment">//实现无缝轮播</span></span></span><br><span class="line"><span class="javascript">        dotChange();  <span class="comment">//自动切换对应的圆点样式</span></span></span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line"><span class="javascript">      <span class="function"><span class="keyword">function</span> <span class="title">isCrack</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">if</span> (i == $(<span class="string">&#x27;.hot li&#x27;</span>).length) &#123;</span></span><br><span class="line">          i = 1;</span><br><span class="line"><span class="javascript">          $(<span class="string">&#x27;.hot&#x27;</span>).css(&#123;<span class="attr">left</span>: <span class="number">0</span>&#125;);</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="javascript">        $(<span class="string">&#x27;.hot&#x27;</span>).stop().animate(&#123;<span class="attr">left</span>: -i * width&#125;, speed);</span></span><br><span class="line">      &#125;</span><br><span class="line"><span class="javascript">      <span class="comment">// 3.自动切换对应的圆点</span></span></span><br><span class="line"><span class="javascript">      <span class="function"><span class="keyword">function</span> <span class="title">dotChange</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">if</span> (i == $(<span class="string">&#x27;.hot li&#x27;</span>).length - <span class="number">1</span>) &#123;</span></span><br><span class="line"><span class="javascript">          $(<span class="string">&#x27;.dot li&#x27;</span>).eq(<span class="number">0</span>).addClass(<span class="string">&#x27;on&#x27;</span>).</span></span><br><span class="line"><span class="javascript">               siblings().removeClass(<span class="string">&#x27;on&#x27;</span>);</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="javascript">        <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">          $(<span class="string">&#x27;.dot li&#x27;</span>).eq(i).addClass(<span class="string">&#x27;on&#x27;</span>).</span></span><br><span class="line"><span class="javascript">               siblings().removeClass(<span class="string">&#x27;on&#x27;</span>);</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line"><span class="javascript">      <span class="comment">// 4. 设置左右切换的箭头显示和隐藏</span></span></span><br><span class="line"><span class="javascript">      $(<span class="string">&#x27;.banner&#x27;</span>).hover(</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">           $(<span class="string">&#x27;.arrow&#x27;</span>).show();</span></span><br><span class="line">        &#125;,</span><br><span class="line"><span class="javascript">        <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">           $(<span class="string">&#x27;.arrow&#x27;</span>).hide();</span></span><br><span class="line">        &#125;);</span><br><span class="line"><span class="javascript">        <span class="comment">//  鼠标移入，暂停自动播放，移出，开始自动播放</span></span></span><br><span class="line"><span class="javascript">        $(<span class="string">&#x27;.banner&#x27;</span>).hover(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">          <span class="built_in">clearInterval</span>(timer);</span></span><br><span class="line"><span class="javascript">        &#125;, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">          timer = <span class="built_in">setInterval</span>(imgChange, delay);</span></span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line"><span class="javascript">      <span class="comment">//5.设置右箭头的事件</span></span></span><br><span class="line"><span class="javascript">      $(<span class="string">&#x27;.next&#x27;</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line">          imgChange()</span><br><span class="line">      &#125;);</span><br><span class="line"><span class="javascript">      <span class="comment">//6.设置左箭头的事件</span></span></span><br><span class="line"><span class="javascript">      $(<span class="string">&#x27;.prev&#x27;</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line">        --i;</span><br><span class="line">        if (i == -1) &#123;</span><br><span class="line"><span class="javascript">          i = $(<span class="string">&#x27;.hot li&#x27;</span>).length - <span class="number">2</span>;</span></span><br><span class="line"><span class="javascript">          $(<span class="string">&#x27;.hot&#x27;</span>).css(&#123;<span class="attr">left</span>: -($(<span class="string">&#x27;.hot li&#x27;</span>).length - <span class="number">1</span>) * width&#125;);</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="javascript">        $(<span class="string">&#x27;.hot&#x27;</span>).stop().animate(&#123;<span class="attr">left</span>: -i * width&#125;, speed);</span></span><br><span class="line">        dotChange();</span><br><span class="line">      &#125;);</span><br><span class="line">   <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/30/96517f17aa403959789e9ce6cd54a26c.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;jQuery&quot;&gt;&lt;a href=&quot;#jQuery&quot; class=&quot;headerlink&quot; title=&quot;jQuery&quot;&gt;&lt;/a&gt;jQuery&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;基本概念&lt;ol&gt;
&lt;li&gt;jQuery：一款优秀的JavaScript框架库，封装了很多的Jav</summary>
      
    
    
    
    <category term="编程语言" scheme="http://xiaoliblog.cn/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    <category term="JavaScript" scheme="http://xiaoliblog.cn/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/JavaScript/"/>
    
    
    <category term="JavaScript" scheme="http://xiaoliblog.cn/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript🌞事件</title>
    <link href="http://xiaoliblog.cn/2021/01/15/%E5%89%8D%E7%AB%AF/JavaScript/JavaScript_%E4%BA%8B%E4%BB%B6/"/>
    <id>http://xiaoliblog.cn/2021/01/15/%E5%89%8D%E7%AB%AF/JavaScript/JavaScript_%E4%BA%8B%E4%BB%B6/</id>
    <published>2021-01-15T04:24:25.594Z</published>
    <updated>2021-01-15T05:28:55.901Z</updated>
    
    <content type="html"><![CDATA[<h1 id="事件"><a href="#事件" class="headerlink" title="事件"></a>事件</h1><ul><li>事件：用户行为，如单击、鼠标移动等；</li><li>事件处理程序：对事件进行处理的代码；</li><li>事件驱动式：侦测到用户行为、执行事件处理程序的过程；</li><li>事件流：事件传播的过程（捕获+冒泡）<ol><li>事件捕获方式（网景）<br>事件流传播的顺序应该是从DOM树的根节点到发生事件的元素节点。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/23/b315bc6e374e49e06599e3358da1c234.png"></li><li>事件冒泡方式（微软）<br>事件流传播的顺序应该是从发生事件的元素节点到DOM树的根节点。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/23/f8841c573e31a54e16e3e49579b65763.png"></li></ol></li></ul><h2 id="事件绑定方式"><a href="#事件绑定方式" class="headerlink" title="事件绑定方式"></a>事件绑定方式</h2><ol><li>行内绑定式<br> 事件处理程序中this关键字用于指向window对象<pre><code>     &lt;标签名 事件=&quot;事件的处理程序&quot;&gt;</code></pre></li><li>动态绑定式<br> 事件处理程序中this关键字用于指向当前正在操作的DOM元素对象<pre><code>     DOM元素对象.事件=事件的处理程序</code></pre></li><li>事件监听<br> 事件监听：可以为一个事件添加多个事件处理程序。</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">DOM对象.addEventListener(type,callback,[capture]);</span></span><br><span class="line"><span class="comment">type：事件类型 </span></span><br><span class="line"><span class="comment">callback：表示事件的处理程序</span></span><br><span class="line"><span class="comment">capture：</span></span><br><span class="line"><span class="comment">默认false表示在冒泡阶段完成事件处理 </span></span><br><span class="line"><span class="comment">true表示在捕获阶段完成事件的处理</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">var</span> div=<span class="built_in">document</span>.getElementById(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line">div.addEventListener(<span class="string">&#x27;click&#x27;</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;one&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line">div.addEventListener(<span class="string">&#x27;click&#x27;</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;two&quot;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="事件对象"><a href="#事件对象" class="headerlink" title="事件对象"></a>事件对象</h2><ul><li>在Javascript中，当发生事件时，都会产生一个<strong>事件对象event</strong>，这个对象中包含着所有与事件有关的信息。</li><li>获取事件对象<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">btn.onclick=<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line"><span class="keyword">var</span> event = e || <span class="built_in">window</span>.event; <span class="comment">//e为现版本 window.event为早期版本</span></span><br><span class="line"><span class="built_in">console</span>.log(event);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>补充：</li><li>假false：undefined、null、NaN、0、空串</li><li>真true：其它都为真</li><li>真前：true||任何值，都返回前面的值</li><li>假后：false||任何值，都返回后面的值</li></ul><table><thead><tr><th align="center">事件对象常用属性/方法</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">type</td><td align="center">返回当前事件的类型，如click</td></tr><tr><td align="center">target</td><td align="center">返回触发此事件的元素（事件的目标节点）</td></tr><tr><td align="center">stopPropagation()</td><td align="center">阻止事件冒泡</td></tr></tbody></table><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;</span> <span class="meta-string">&quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.w3.org/1999/xhtml&quot;</span> <span class="attr">xml:lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Type&quot;</span> <span class="attr">content</span>=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.d1</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">width</span><span class="selector-pseudo">:100px</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">height</span><span class="selector-pseudo">:100px</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">border</span><span class="selector-pseudo">:1px</span> <span class="selector-tag">red</span> <span class="selector-tag">solid</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;div&quot;</span> <span class="attr">class</span>=<span class="string">&#x27;d1&#x27;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;点击我&quot;</span> <span class="attr">id</span>=<span class="string">&quot;btn&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> div = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;div&#x27;</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> btn = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;btn&#x27;</span>);</span></span><br><span class="line"><span class="javascript">        div.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">&quot;div div div&quot;</span>);</span></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"><span class="javascript">        btn.onclick = <span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">&quot;btn btn btn&quot;</span>);</span></span><br><span class="line"><span class="javascript">           <span class="comment">//type  类型    target目标   event.stopPropagation()阻止冒泡</span></span></span><br><span class="line"><span class="javascript">           <span class="comment">//得到事件对象</span></span></span><br><span class="line"><span class="javascript">           <span class="keyword">var</span> event = e || <span class="built_in">window</span>.event;</span></span><br><span class="line"><span class="javascript">           <span class="built_in">console</span>.log( event.type );   <span class="comment">//--click</span></span></span><br><span class="line"><span class="handlebars"><span class="xml">           console.log( event.target );   //-- <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;点击我&quot;</span> <span class="attr">id</span>=<span class="string">&quot;btn&quot;</span>/&gt;</span></span></span></span><br><span class="line"><span class="javascript">           event.stopPropagation();  <span class="comment">//-- btn</span></span></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="页面事件"><a href="#页面事件" class="headerlink" title="页面事件"></a>页面事件</h1><table><thead><tr><th align="center">事件名称</th><th align="center">事件触发时机</th></tr></thead><tbody><tr><td align="center">load</td><td align="center">当页面载入完毕后触发</td></tr><tr><td align="center">unload</td><td align="center">当页面关闭时触发</td></tr></tbody></table><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;</span> <span class="meta-string">&quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.w3.org/1999/xhtml&quot;</span> <span class="attr">xml:lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Type&quot;</span> <span class="attr">content</span>=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">       <span class="comment">&lt;!--  &lt;script&gt;</span></span><br><span class="line"><span class="comment">        document.getElementById(&#x27;demo&#x27;).onclick = function()&#123;</span></span><br><span class="line"><span class="comment">            console.log(&#x27;单击&#x27;);</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">    &lt;/script&gt; --&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">              <span class="built_in">document</span>.getElementById(<span class="string">&#x27;demo&#x27;</span>).onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">&#x27;单击&#x27;</span>);</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&#x27;demo&#x27;</span>&gt;</span>点我<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="焦点事件"><a href="#焦点事件" class="headerlink" title="焦点事件"></a>焦点事件</h1><p>焦点事件多用于表单验证功能</p><table><thead><tr><th align="center">事件名称</th><th align="center">事件触发时机</th></tr></thead><tbody><tr><td align="center">focus</td><td align="center">当获得焦点时触发（不会冒泡）</td></tr><tr><td align="center">blur</td><td align="center">当失去焦点时（不会冒泡）</td></tr></tbody></table><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>验证用户名和密码是否为空<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">body</span>&#123;<span class="attribute">background</span>:<span class="number">#ddd</span>;&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-class">.box</span>&#123;<span class="attribute">background</span>:<span class="number">#fff</span>;<span class="attribute">padding</span>:<span class="number">20px</span> <span class="number">30px</span>;<span class="attribute">width</span>:<span class="number">400px</span>;<span class="attribute">margin</span>: <span class="number">0</span> auto;<span class="attribute">text-align</span>:center;&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-class">.btn</span>&#123;<span class="attribute">width</span>:<span class="number">180px</span>;<span class="attribute">height</span>:<span class="number">40px</span>;<span class="attribute">background</span>:<span class="number">#3388ff</span>;<span class="attribute">border</span>:<span class="number">1px</span> solid <span class="number">#fff</span>;<span class="attribute">color</span>:<span class="number">#fff</span>;<span class="attribute">font-size</span>:<span class="number">14px</span>;&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-class">.ipt</span>&#123;<span class="attribute">width</span>:<span class="number">260px</span>;<span class="attribute">padding</span>:<span class="number">4px</span> <span class="number">2px</span>;&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-class">.tips</span>&#123;<span class="attribute">width</span>:<span class="number">440px</span>;<span class="attribute">height</span>:<span class="number">30px</span>;<span class="attribute">margin</span>:<span class="number">5px</span> auto;<span class="attribute">background</span>:<span class="number">#fff</span>;<span class="attribute">color</span>:red;<span class="attribute">border</span>:<span class="number">1px</span> solid <span class="number">#ccc</span>;<span class="attribute">display</span>:none;<span class="attribute">line-height</span>:<span class="number">30px</span>;<span class="attribute">padding-left</span>:<span class="number">20px</span>;<span class="attribute">font-size</span>:<span class="number">13px</span>;&#125;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;tips&quot;</span> <span class="attr">class</span>=<span class="string">&quot;tips&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">label</span>&gt;</span>用户名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;user&quot;</span> <span class="attr">class</span>=<span class="string">&quot;ipt&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">label</span>&gt;</span>密　码：<span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;pass&quot;</span> <span class="attr">class</span>=<span class="string">&quot;ipt&quot;</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;login&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn&quot;</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> user = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;user&#x27;</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> pass = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;pass&#x27;</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> tips = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;tips&#x27;</span>);</span></span><br><span class="line"><span class="javascript">        user.onblur = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">if</span>(<span class="params">user.value===<span class="string">&#x27;&#x27;</span></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                tips.innerHTML = <span class="string">&#x27;用户名不能为空&#x27;</span>;</span></span><br><span class="line"><span class="javascript">                tips.style.display = <span class="string">&#x27;block&#x27;</span>;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="javascript">        pass.onblur = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">if</span>(<span class="params">user.value===<span class="string">&#x27;&#x27;</span></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                tips.innerHTML = <span class="string">&#x27;密码不能为空&#x27;</span>;</span></span><br><span class="line"><span class="javascript">                tips.style.display = <span class="string">&#x27;block&#x27;</span>;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--  &lt;script&gt;</span></span><br><span class="line"><span class="comment">      window.onload = function() &#123;</span></span><br><span class="line"><span class="comment">        addBlur(getElement(&#x27;user&#x27;));      // 检测id为user的元素失去焦点后，value值是否为空</span></span><br><span class="line"><span class="comment">        addBlur(getElement(&#x27;pass&#x27;));      // 检测id为pass的元素失去焦点后，value值是否为空</span></span><br><span class="line"><span class="comment">      &#125;;</span></span><br><span class="line"><span class="comment">      function getElement(obj) &#123;          // 根据id获取指定元素</span></span><br><span class="line"><span class="comment">        return document.getElementById(obj);</span></span><br><span class="line"><span class="comment">      &#125;</span></span><br><span class="line"><span class="comment">      function addBlur(obj) &#123;    // 为指定元素添加失去焦点事件</span></span><br><span class="line"><span class="comment">        obj.onblur = function() &#123;</span></span><br><span class="line"><span class="comment">          isEmpty(this);</span></span><br><span class="line"><span class="comment">        &#125;;</span></span><br><span class="line"><span class="comment">      &#125;</span></span><br><span class="line"><span class="comment">      function isEmpty(obj) &#123;    // 检测表单是否为空</span></span><br><span class="line"><span class="comment">        if (obj.value === &#x27;&#x27;) &#123;</span></span><br><span class="line"><span class="comment">          getElement(&#x27;tips&#x27;).style.display = &#x27;block&#x27;;</span></span><br><span class="line"><span class="comment">          getElement(&#x27;tips&#x27;).innerHTML = &#x27;注意：输入内容不能为空! &#x27;;</span></span><br><span class="line"><span class="comment">        &#125; else &#123;</span></span><br><span class="line"><span class="comment">          getElement(&#x27;tips&#x27;).style.display = &#x27;none&#x27;;</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">      &#125;</span></span><br><span class="line"><span class="comment">    &lt;/script&gt; --&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/23/b1fc049c00843685e04a843150a47ea2.png"></p><h1 id="鼠标事件"><a href="#鼠标事件" class="headerlink" title="鼠标事件"></a>鼠标事件</h1><table><thead><tr><th align="center">事件名称</th><th align="center">事件触发时机</th></tr></thead><tbody><tr><td align="center">click</td><td align="center">单击(动态绑定用onclick)</td></tr><tr><td align="center">dblclick</td><td align="center">双击</td></tr><tr><td align="center">mouseover/mouseout</td><td align="center">鼠标进入/离开</td></tr><tr><td align="center">change</td><td align="center">当内容发生改变时触发，一般用于select对象</td></tr><tr><td align="center">mousedown/mouseup</td><td align="center">按下 / 松开 任意鼠标键</td></tr><tr><td align="center">mousemove</td><td align="center">在元素内当鼠标移动时持续触发</td></tr></tbody></table><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/23/3893d35aef54b8c820472f5c8619fd76.png"></p><table><thead><tr><th align="center">位置属性</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">clientX/clinetY</td><td align="center">触发点相对浏览器可视区域左上角距离，不随页面滚动而变化（所有浏览器）</td></tr><tr><td align="center">pageX / pageY</td><td align="center">触发点相对文档区域左上角距离，随页面滚动而滚动（IE6~8不兼容）</td></tr><tr><td align="center">screenX / screenY</td><td align="center">触发点位于屏幕的距离，不随页面滚动而变化</td></tr></tbody></table><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;</span> <span class="meta-string">&quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.w3.org/1999/xhtml&quot;</span> <span class="attr">xml:lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Type&quot;</span> <span class="attr">content</span>=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">      <span class="selector-class">.mouse</span>&#123;<span class="attribute">position</span>:absolute;<span class="attribute">background</span>:<span class="number">#ffd965</span>;<span class="attribute">width</span>:<span class="number">40px</span>;<span class="attribute">height</span>:<span class="number">40px</span>;<span class="attribute">border-radius</span>:<span class="number">20px</span>;&#125;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;mouse&quot;</span> <span class="attr">class</span>=<span class="string">&quot;mouse&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">document</span>.onclick = <span class="function"><span class="keyword">function</span>(<span class="params">event</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="comment">//获取事件对象的兼容性</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span>  event = event || <span class="built_in">window</span>.event;</span></span><br><span class="line"><span class="javascript">            <span class="comment">//鼠标在页面上的位置</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> pageX = event.pageX ||</span></span><br><span class="line"><span class="javascript">                  event.clientX + <span class="built_in">document</span>.documentElement.scrollLeft;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> pageY = event.pageY ||</span></span><br><span class="line"><span class="javascript">                  event.clientY + <span class="built_in">document</span>.documentElement.scrollTop;</span></span><br><span class="line"><span class="javascript">            <span class="comment">//计算div应该显示的位置</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> targetX = pageX - mouse.offsetWidth/<span class="number">2</span>;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> targetY = pageY - mouse.offsetHeight / <span class="number">2</span>;</span></span><br><span class="line"><span class="javascript">            <span class="comment">//在鼠标位置显示div</span></span></span><br><span class="line"><span class="javascript">            mouse.style.display = <span class="string">&#x27;block&#x27;</span>;</span></span><br><span class="line"><span class="javascript">            mouse.style.left = targetX + <span class="string">&#x27;px&#x27;</span>;</span></span><br><span class="line"><span class="javascript">            mouse.style.top = targetY + <span class="string">&#x27;px&#x27;</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/23/8a51609ea5ea1dd95937bc2e0e1125b3.png"></p><h1 id="键盘事件"><a href="#键盘事件" class="headerlink" title="键盘事件"></a>键盘事件</h1><table><thead><tr><th align="center">事件名称</th><th align="center">事件触发时机</th></tr></thead><tbody><tr><td align="center">keypress</td><td align="center">键盘非功能键按下时触发</td></tr><tr><td align="center">keydown</td><td align="center">键盘所有键键按下时触发</td></tr><tr><td align="center">keyup</td><td align="center">键盘按键弹起时触发</td></tr></tbody></table><blockquote><p>keypress事件保存的按键值是ASCII码，<br>keydown和keyup事件保存的按键值是虚拟键码keycode。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/23/ecac96b22b955aee35cf5b9814b25cbe.png"><br>常用的keycode</p><ul><li> 回车：13</li><li>左上右下：37、38、39、40</li><li>Tab：9</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line">/*</span><br><span class="line">按下键盘的enter键，下一个文本框获得焦点。 </span><br><span class="line">第一步：查找页面元素</span><br><span class="line">第二步：为每一个input添加“键盘按下”事件</span><br><span class="line">第三步：判断按下的是否为Enter键</span><br><span class="line">第四步：如果是enter键，则寻找当前input框</span><br><span class="line">第五步：根据当前，计算下一个input框的index</span><br><span class="line">第六步：下一个input框获得焦点</span><br><span class="line">*/</span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>按Enter键切换<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>用户姓名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>电子邮箱：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>手机号码：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>个人描述：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 为四个input添加键盘事件</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">// 查找页面元</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> inputs = <span class="built_in">document</span>.getElementsByTagName(<span class="string">&#x27;input&#x27;</span>);</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">for</span>(<span class="params"><span class="keyword">var</span> i=<span class="number">0</span>;i&lt;inputs.length;i++</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            inputs[i].onkeydown = <span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="comment">//                    处理：如果按下的是回车键，</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//                    下一个输入框（当前—遍历，？==this）获得焦点（focus）</span></span></span><br><span class="line"><span class="javascript">                e = e || <span class="built_in">window</span>.event;</span></span><br><span class="line"><span class="javascript">                <span class="function"><span class="title">if</span>(<span class="params">e.keyCode==<span class="number">13</span></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="function"><span class="title">for</span>(<span class="params"><span class="keyword">var</span> j=<span class="number">0</span>;j&lt;inputs.length;j++</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                        <span class="function"><span class="title">if</span>(<span class="params">inputs[j]==<span class="built_in">this</span></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                            <span class="keyword">var</span> index = j+<span class="number">1</span>;</span></span><br><span class="line"><span class="javascript">                            <span class="comment">// 边界处理</span></span></span><br><span class="line"><span class="javascript">                            <span class="function"><span class="title">if</span>(<span class="params">index==inputs.length</span>)</span>&#123;</span></span><br><span class="line">                                index = 0;</span><br><span class="line">                            &#125;</span><br><span class="line">                            inputs[index].focus();</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="javascript">        <span class="comment">// //查找页面元素</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">// var inputs = document.getElementsByTagName(&#x27;input&#x27;);</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">// //为每一个input添加“键盘按下”事件</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">// for(var i=0;i&lt;inputs.length;i++)&#123;</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">//     inputs[i].onkeydown = function(e)&#123;</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">//         //判断按下的是否为Enter键</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">//         var e = e || window.event;</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">//         if(e.keyCode===13)&#123;</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">//             //是enter键，则寻找当前input框</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">//             for(var j=0;j&lt;inputs.length;j++)&#123;</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">//                 if(inputs[j]===this)&#123;</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">//                     //console.log(j);</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">//                     //下一个input框的index</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">//                     var index = ++j;</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">//                     if(index==inputs.length)&#123;</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">//                         index=0;</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">//                     &#125;</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">//                     console.log(index);</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">//                     //下一个input框获得焦点</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">//                     inputs[index].focus();</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">//                     break;</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">//                 &#125;</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">//             &#125;</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">//         &#125;</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">//     &#125;</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">// &#125;</span></span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/23/7d6946a12612945ad0b169c50d4f7de8.png"></p><h1 id="表单事件"><a href="#表单事件" class="headerlink" title="表单事件"></a>表单事件</h1><table><thead><tr><th align="center">事件名称</th><th align="center">事件触发条件</th></tr></thead><tbody><tr><td align="center">submit</td><td align="center">当表单提交时触发</td></tr><tr><td align="center">reset</td><td align="center">当表单重置时触发</td></tr></tbody></table><p>这两个事件的返回值若是false则会取消默认操作，否则将执行默认操作</p><h1 id="图片放大特效"><a href="#图片放大特效" class="headerlink" title="图片放大特效"></a>图片放大特效</h1><p>素材：<br>    big.jpg<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/23/27526e27bf54e49ae8ca76b8aca0b014.png"><br>    small.jpg<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/23/7afa6108f3aefd19e34000981327ad18.png"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line">/*</span><br><span class="line">（1）页面构成</span><br><span class="line">大div：包括左div+右div</span><br><span class="line">左div：包含图片+div(遮罩--移动、显示或隐藏)</span><br><span class="line">右div：包含 图片（显示或隐藏）</span><br><span class="line">（2）JS实现步骤</span><br><span class="line">第一步：鼠标经过与移出，遮罩和大图的显示与隐藏</span><br><span class="line">第二步：遮罩的移动，通过为小图添加鼠标移动事件来实现</span><br><span class="line">第三步：大图的显示区域</span><br><span class="line"></span><br><span class="line">*/</span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;</span> <span class="meta-string">&quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.w3.org/1999/xhtml&quot;</span> <span class="attr">xml:lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Type&quot;</span> <span class="attr">content</span>=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">      <span class="selector-class">.box</span>&#123;<span class="attribute">width</span>:<span class="number">350px</span>;<span class="attribute">height</span>:<span class="number">350px</span>;<span class="attribute">border</span>:<span class="number">1px</span> solid <span class="number">#ccc</span>;<span class="attribute">position</span>:relative&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-class">.big</span>&#123;<span class="attribute">width</span>:<span class="number">400px</span>;<span class="attribute">height</span>:<span class="number">400px</span>;<span class="attribute">position</span>:absolute;<span class="attribute">top</span>:<span class="number">0</span>;<span class="attribute">left</span>:<span class="number">360px</span>;<span class="attribute">border</span>:<span class="number">1px</span> solid <span class="number">#ccc</span>;<span class="attribute">overflow</span>:hidden;<span class="attribute">display</span>:none&#125; <span class="comment">/* overflow:hidden是当元素内的内容溢出的时候使它隐藏溢出的部分，即超出部分隐藏 */</span></span></span><br><span class="line"><span class="css">      <span class="selector-class">.mask</span>&#123;<span class="attribute">width</span>:<span class="number">175px</span>;<span class="attribute">height</span>:<span class="number">175px</span>;<span class="attribute">background</span>:<span class="built_in">rgba</span>(<span class="number">255</span>,<span class="number">255</span>,<span class="number">0</span>,.<span class="number">4</span>);<span class="attribute">position</span>:absolute;<span class="attribute">top</span>:<span class="number">0</span>;<span class="attribute">left</span>:<span class="number">0</span>;<span class="attribute">cursor</span>:move;<span class="attribute">display</span>:none&#125;<span class="comment">/*cursor:move 光标形状*/</span></span></span><br><span class="line"><span class="css">      <span class="selector-class">.small</span>&#123;<span class="attribute">position</span>:relative&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-class">.box</span> <span class="selector-tag">img</span>&#123;<span class="attribute">vertical-align</span>:top&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-id">#bigBox</span> <span class="selector-tag">img</span>&#123;<span class="attribute">position</span>:absolute&#125;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span> <span class="attr">id</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;smallBox&quot;</span> <span class="attr">class</span>=<span class="string">&quot;small&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;images/small.jpg&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;mask&quot;</span> <span class="attr">class</span>=<span class="string">&quot;mask&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;bigBox&quot;</span> <span class="attr">class</span>=<span class="string">&quot;big&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">id</span>=<span class="string">&quot;bigImg&quot;</span> <span class="attr">src</span>=<span class="string">&quot;images/big.jpg&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="comment">//第一步：鼠标经过与移出，遮罩和大图的显示与隐藏 -- 遮罩默认在小图的左上角</span></span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="keyword">function</span> <span class="title">$</span>(<span class="params">id</span>)</span>&#123;  <span class="comment">//定义函数，根据id值获取元素对象</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> <span class="built_in">document</span>.getElementById(id);</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="javascript">        $(<span class="string">&#x27;smallBox&#x27;</span>).onmouseover = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">&quot;jirnu &quot;</span>);</span></span><br><span class="line"><span class="javascript">            $(<span class="string">&#x27;mask&#x27;</span>).style.display = <span class="string">&#x27;block&#x27;</span>;</span></span><br><span class="line"><span class="javascript">            $(<span class="string">&#x27;bigBox&#x27;</span>).style.display = <span class="string">&#x27;block&#x27;</span>;</span></span><br><span class="line">        &#125;;</span><br><span class="line"><span class="javascript">        $(<span class="string">&#x27;smallBox&#x27;</span>).onmouseout = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            $(<span class="string">&#x27;mask&#x27;</span>).style.display = <span class="string">&#x27;none&#x27;</span>;</span></span><br><span class="line"><span class="javascript">            $(<span class="string">&#x27;bigBox&#x27;</span>).style.display = <span class="string">&#x27;none&#x27;</span>;</span></span><br><span class="line">        &#125;;</span><br><span class="line"><span class="javascript">        <span class="comment">//第二步：遮罩的移动，通过为小图添加鼠标移动事件来实现</span></span></span><br><span class="line"><span class="javascript">        $(<span class="string">&#x27;smallBox&#x27;</span>).onmousemove = <span class="function"><span class="keyword">function</span>(<span class="params">event</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> event = event || <span class="built_in">window</span>.event;</span></span><br><span class="line"><span class="javascript">            <span class="comment">//计算鼠标在页面中的坐标</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> pageX = event.pageX || event.clientX + dodument.documentElement.scroll;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> pageY = event.pageY || event.clientY + <span class="built_in">document</span>.documentElement.scrollTop;</span></span><br><span class="line"><span class="javascript">            <span class="comment">//计算遮罩的位置:x = 鼠标位置的x - 遮罩宽度的一半， y类似</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> maskX = pageX - $(<span class="string">&#x27;mask&#x27;</span>).offsetWidth / <span class="number">2</span>;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> maskY = pageY - $(<span class="string">&#x27;mask&#x27;</span>).offsetHeight / <span class="number">2</span>;</span></span><br><span class="line"><span class="javascript">            <span class="comment">//遮罩边界处理 -- 遮罩不能移动到小图以外的位置</span></span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">if</span>(<span class="params">maskX&lt;<span class="number">0</span></span>)</span>&#123;  <span class="comment">//左边界</span></span></span><br><span class="line">                maskX = 0;</span><br><span class="line">            &#125;</span><br><span class="line"><span class="javascript">            <span class="keyword">if</span>(maskX&gt;$(<span class="string">&#x27;smallBox&#x27;</span>).offsetWidth - $(<span class="string">&#x27;mask&#x27;</span>).offsetWidth)&#123;<span class="comment">//右边界</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//修改遮罩的显示位置 -- 移动</span></span></span><br><span class="line"><span class="javascript">                maskX = $(<span class="string">&#x27;smallBox&#x27;</span>).offsetWidth - $(<span class="string">&#x27;mask&#x27;</span>).offsetWidth;</span></span><br><span class="line">            &#125;</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">if</span>(<span class="params">maskY&lt;<span class="number">0</span></span>)</span>&#123;  <span class="comment">//上边界</span></span></span><br><span class="line">                maskY = 0;</span><br><span class="line">            &#125;</span><br><span class="line"><span class="javascript">            <span class="keyword">if</span>(maskY&gt;$(<span class="string">&#x27;smallBox&#x27;</span>).offsetHeight - $(<span class="string">&#x27;mask&#x27;</span>).offsetHeight)&#123;  <span class="comment">//下边界</span></span></span><br><span class="line"><span class="javascript">                maskY=$(<span class="string">&#x27;smallBox&#x27;</span>).offsetHeight - $(<span class="string">&#x27;mask&#x27;</span>).offsetHeight;</span></span><br><span class="line">            &#125;</span><br><span class="line"><span class="javascript">            $(<span class="string">&#x27;mask&#x27;</span>).style.left = maskX + <span class="string">&#x27;px&#x27;</span>;</span></span><br><span class="line"><span class="javascript">            $(<span class="string">&#x27;mask&#x27;</span>).style.top = maskY + <span class="string">&#x27;px&#x27;</span>;</span></span><br><span class="line"><span class="javascript">            <span class="comment">//第三步：大图的显示区域 -- 按照遮罩在小图中的区域，显示大图中相应区域 -- 比例计算</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">// 按照比例移动大图 大图片能够移动的总距离 = 大图的宽度 - 大盒子的宽度</span></span></span><br><span class="line"><span class="javascript">           <span class="keyword">var</span> bigImgToMove = $(<span class="string">&#x27;bigImg&#x27;</span>).offsetWidth - $(<span class="string">&#x27;bigBox&#x27;</span>).offsetWidth;</span></span><br><span class="line"><span class="javascript">           <span class="comment">// 遮罩能够移动的总距离 = 小盒子的宽度 - 遮罩的宽度</span></span></span><br><span class="line"><span class="javascript">           <span class="keyword">var</span> maskToMove = $(<span class="string">&#x27;smallBox&#x27;</span>).offsetWidth - $(<span class="string">&#x27;mask&#x27;</span>).offsetWidth;</span></span><br><span class="line"><span class="javascript">           <span class="comment">// 计算移动比例rate = 大图片能够移动的总距离/遮罩能够移动的总距离</span></span></span><br><span class="line"><span class="javascript">           <span class="keyword">var</span> rate = bigImgToMove / maskToMove;</span></span><br><span class="line"><span class="javascript">           <span class="comment">// 设置大图片当前的位置 = rate * 遮罩当前的位置</span></span></span><br><span class="line"><span class="javascript">           $(<span class="string">&#x27;bigImg&#x27;</span>).style.left = - rate * maskX + <span class="string">&#x27;px&#x27;</span>;</span></span><br><span class="line"><span class="javascript">           $(<span class="string">&#x27;bigImg&#x27;</span>).style.top = - rate * maskY + <span class="string">&#x27;px&#x27;</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/23/ecb6e3c873d1493ef7af732291722a28.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;事件&quot;&gt;&lt;a href=&quot;#事件&quot; class=&quot;headerlink&quot; title=&quot;事件&quot;&gt;&lt;/a&gt;事件&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;事件：用户行为，如单击、鼠标移动等；&lt;/li&gt;
&lt;li&gt;事件处理程序：对事件进行处理的代码；&lt;/li&gt;
&lt;li&gt;事件驱动式：侦测</summary>
      
    
    
    
    <category term="编程语言" scheme="http://xiaoliblog.cn/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    <category term="JavaScript" scheme="http://xiaoliblog.cn/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/JavaScript/"/>
    
    
    <category term="JavaScript" scheme="http://xiaoliblog.cn/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript🌞DOM</title>
    <link href="http://xiaoliblog.cn/2021/01/15/%E5%89%8D%E7%AB%AF/JavaScript/JavaScript_DOM/"/>
    <id>http://xiaoliblog.cn/2021/01/15/%E5%89%8D%E7%AB%AF/JavaScript/JavaScript_DOM/</id>
    <published>2021-01-15T04:20:51.180Z</published>
    <updated>2021-01-15T05:28:36.369Z</updated>
    
    <content type="html"><![CDATA[<h1 id="DOM"><a href="#DOM" class="headerlink" title="DOM"></a>DOM</h1><ol><li><p>什么是DOM？</p><ul><li>文 档（Document）表示HTML文件。</li><li>节 点：文档中所有的内容，都称为节点。</li><li>节点类型：标签节点（元素）、文本节点、属性节点、注释节点。</li><li>DOM：Document Object Model，文档对象模型。</li><li>作 用：完成对HTML文档内所有元素的获取、访问、标签属性和样式的设置等操作。</li></ul></li><li><p>DOM HTML 节点树</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>DOM节点<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;t1.png&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>喜欢的水果<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>DOM应用<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/23/97f95e864fdad767351f408505972143.png"></p></li></ol><h1 id="HTML元素操作"><a href="#HTML元素操作" class="headerlink" title="HTML元素操作"></a>HTML元素操作</h1><h2 id="获取页面元素"><a href="#获取页面元素" class="headerlink" title="获取页面元素"></a>获取页面元素</h2><ol><li><strong><em>利用document对象的方法</em></strong></li></ol><table><thead><tr><th align="center">document对象的方法</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">getElementById()</td><td align="center">返回对拥有指定id的第一个对象的引用</td></tr><tr><td align="center">getElementsByName()</td><td align="center">返回带有指定名称的对象集合</td></tr><tr><td align="center">getElementsByTagName()</td><td align="center">返回带有指定标签名的对象集合</td></tr><tr><td align="center">getElementsByClassName()</td><td align="center">返回带有指定类名的对象集合（不支持IE6~8）</td></tr><tr><td align="center">querySelector()</td><td align="center">返回文档中匹配到指定元素或CSS选择器的第1个对象的引用</td></tr><tr><td align="center">querySelectorAll()</td><td align="center">返回文档中匹配到指定元素或CSS选择器的第1个对象集合</td></tr></tbody></table><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;box&quot;</span>&gt;</span>box<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;bar&quot;</span>&gt;</span>bar1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;bar&quot;</span>&gt;</span>bar2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">name</span>=<span class="string">&quot;main&quot;</span>&gt;</span>main1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">name</span>=<span class="string">&quot;main&quot;</span>&gt;</span>main2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(<span class="built_in">document</span>.getElementById(<span class="string">&quot;box&quot;</span>));</span></span><br><span class="line"><span class="javascript"><span class="comment">//返回对象集合，可以通过下标获得指定项</span></span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(<span class="built_in">document</span>.getElementsByName(<span class="string">&quot;main&quot;</span>)[<span class="number">0</span>]);</span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(<span class="built_in">document</span>.getElementsByClassName(<span class="string">&quot;bar&quot;</span>));</span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(<span class="built_in">document</span>.getElementsByTagName(<span class="string">&quot;div&quot;</span>));</span></span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="comment">//HTML5新增方法</span></span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(<span class="built_in">document</span>.querySelector(<span class="string">&quot;div&quot;</span>)); <span class="comment">//获取匹配到的第1个div</span></span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(<span class="built_in">document</span>.querySelector(<span class="string">&quot;#box&quot;</span>)); <span class="comment">//获取id为box的第1个div</span></span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(<span class="built_in">document</span>.querySelector(<span class="string">&quot;.bar&quot;</span>)); <span class="comment">//获取class为bar的第1个div</span></span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(<span class="built_in">document</span>.querySelector(<span class="string">&quot;div[name]&quot;</span>)); <span class="comment">//获取含有name属性的第1个div</span></span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(<span class="built_in">document</span>.querySelector(<span class="string">&quot;div.bar&quot;</span>)); <span class="comment">//获取文档中class为bar的第1个div</span></span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(<span class="built_in">document</span>.querySelector(<span class="string">&quot;div#box&quot;</span>)); <span class="comment">//获取文档中id为box的第1个div</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>2.<strong><em>利用documetn对象的属性</em></strong></p><table><thead><tr><th align="center">document对象的属性</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">document.body</td><td align="center">返回文档的body元素</td></tr><tr><td align="center">document.documentElement</td><td align="center">返回文档的html元素</td></tr><tr><td align="center">document.forms</td><td align="center">返回对文档中所有Form对象引用</td></tr><tr><td align="center">document.images</td><td align="center">返回对文档中所有Image对象引用</td></tr></tbody></table><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> body=<span class="built_in">document</span>.getElementsByTagName(<span class="string">&#x27;body&#x27;</span>)[<span class="number">0</span>];  <span class="comment">//获取body元素</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span>html=<span class="built_in">document</span>.getElementsByTagName(<span class="string">&#x27;html&#x27;</span>)[<span class="number">0</span>];  <span class="comment">//获取html元素</span></span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(<span class="built_in">document</span>.body === body);             <span class="comment">//返回比较结果 true</span></span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(<span class="built_in">document</span>.documentElement === html);   <span class="comment">//返回比较结果 true</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>3.<strong><em>利用Element对象的方法</em></strong></p><table><thead><tr><th align="center">Element对象的方法</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">getElementsByClassName</td><td align="center">返回某个元素内具有指定class的元素</td></tr><tr><td align="center">getElementsByTagName</td><td align="center">返回某个元素内具有指定tag的元素</td></tr></tbody></table><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">id</span>=<span class="string">&quot;ul&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>PHP<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>JS<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>JQuery<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"> var lis = document.getElementById(&#x27;ul&#x27;).getElementsByTagName(&#x27;li&#x27;);</span><br><span class="line"> console.log(lis);</span><br></pre></td></tr></table></figure><blockquote><p>通过document对象或者Element对象调用getElementsByClassName()方法、getElementsByTagName()方法、children属性等返回的对象集合，实际上是一个<strong>HTMLCollection对象</strong>;<br>document对象调用getElementsByName()方法在Chrom浏览器中返回的是<strong>NodeList对象</strong>，IE11返回的是HTMLCOllection对象。<br>HTMLCollection用于元素操作，NodeList用于节点操作</p></blockquote><h2 id="更改元素内容"><a href="#更改元素内容" class="headerlink" title="更改元素内容"></a>更改元素内容</h2><table><thead><tr><th align="center">Element对象的属性</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center"><strong>innerHTML</strong></td><td align="center">设置或返回元素开始和结束标签之间的HTML</td></tr><tr><td align="center">innerText(不推荐)</td><td align="center">设置或返回元素中去除所有标签的内容</td></tr><tr><td align="center">textContent</td><td align="center">设置或者返回指定节点的文本内容</td></tr></tbody></table><table><thead><tr><th align="center">document对象的方法</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">document.write()</td><td align="center">向文档写入指定的内容</td></tr><tr><td align="center">document.writeln()</td><td align="center">向文档写入指定的内容后并换行</td></tr></tbody></table><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">//html代码</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&#x27;div&#x27;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>标题文字<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>段落1111<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">//JS代码实现</span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> div=<span class="built_in">document</span>.getElementById(<span class="string">&#x27;div&#x27;</span>);</span></span><br><span class="line"><span class="handlebars"><span class="xml">var str=&#x27;<span class="tag">&lt;<span class="name">h2</span>&gt;</span>标题文字<span class="tag">&lt;/<span class="name">h2</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>段落1111<span class="tag">&lt;/<span class="name">p</span>&gt;</span>&#x27;;</span></span></span><br><span class="line">div.innerHTML=str;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="更改元素属性"><a href="#更改元素属性" class="headerlink" title="更改元素属性"></a>更改元素属性</h2><pre><code>    ele.setAttribute(&#39;属性名&#39;,&#39;属性值&#39;);</code></pre><table><thead><tr><th align="center">方法</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">setAttribute(name, value)</td><td align="center">设置或者改变指定属性的值</td></tr><tr><td align="center">getAttribute(name)</td><td align="center">返回指定元素的属性值</td></tr><tr><td align="center">removeAttribute(name)</td><td align="center">从元素中删除指定的属性</td></tr></tbody></table><blockquote><p>利用<strong>attributes属性</strong>可以获取一个HTML元素的所有属性，以及所有属性的个数length</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span>php<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span>js<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;red&quot;</span>&gt;</span>java<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">      <span class="comment">//获得节点</span></span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> child = <span class="built_in">document</span>.getElementsByTagName(<span class="string">&#x27;li&#x27;</span>)[<span class="number">2</span>];</span></span><br><span class="line"><span class="javascript">      <span class="comment">//删除属性1</span></span></span><br><span class="line"><span class="javascript">      child.removeAttribute(<span class="string">&#x27;class&#x27;</span>);</span></span><br><span class="line"><span class="javascript">      <span class="comment">//删除属性2</span></span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> attr = child.getAttributeNode(<span class="string">&#x27;class&#x27;</span>);</span></span><br><span class="line">      child.removeAttributeNode(attr);</span><br><span class="line"><span class="javascript">      <span class="comment">//删除节点</span></span></span><br><span class="line">      child.parentNode.removeChild(child);</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&#x27;gray&#x27;</span> <span class="attr">id</span>=<span class="string">&#x27;thick&#x27;</span> <span class="attr">align</span>=<span class="string">&#x27;center&#x27;</span>&gt;</span>test word.<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> ele = <span class="built_in">document</span>.getElementsByTagName(<span class="string">&#x27;div&#x27;</span>)[<span class="number">0</span>];</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(<span class="string">&quot;当前属性个数：&quot;</span>  + ele.attributes.length);</span></span><br><span class="line"><span class="javascript">        <span class="comment">//添加属性 -- 实现和第12行同样的效果（二者留其一即可）</span></span></span><br><span class="line"><span class="javascript">        ele.setAttribute(<span class="string">&#x27;align&#x27;</span>, <span class="string">&#x27;center&#x27;</span>);</span></span><br><span class="line"><span class="javascript">        ele.setAttribute(<span class="string">&#x27;class&#x27;</span>, <span class="string">&#x27;gray&#x27;</span>);</span></span><br><span class="line"><span class="javascript">        ele.setAttribute(<span class="string">&#x27;id&#x27;</span>, <span class="string">&#x27;thick&#x27;</span>);</span></span><br><span class="line"><span class="javascript">        <span class="comment">//移除属性</span></span></span><br><span class="line"><span class="javascript">        ele.removeAttribute(<span class="string">&#x27;id&#x27;</span>);</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="更改元素样式"><a href="#更改元素样式" class="headerlink" title="更改元素样式"></a>更改元素样式</h2><pre><code>    ele.style.样式名:值;</code></pre><table><thead><tr><th align="center">常见style属性操作样式名</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">background</td><td align="center">设置或返回元素的背景属性</td></tr><tr><td align="center">backgroundColor</td><td align="center">设置或返回元素的背景色</td></tr><tr><td align="center">display</td><td align="center">设置或返回元素的显示类型</td></tr><tr><td align="center">height</td><td align="center">设置或返回元素的高度</td></tr><tr><td align="center">left</td><td align="center">设置或返回定位元素的左部位置</td></tr><tr><td align="center">textAlign</td><td align="center">设置或返回文本的水平对齐方式</td></tr><tr><td align="center">textDecoration</td><td align="center">设置或返回文本的修饰</td></tr><tr><td align="center">textIndent</td><td align="center">设置或返回文本第一行的缩进</td></tr></tbody></table><blockquote><p>在操作样式名称时，需要去掉CSS样式名里的中横线”-“,并将第二个英文首字母大写<br>例如background-color，需要修改为：backgroundColor</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span></span><br><span class="line"><span class="css">     <span class="selector-class">.gray</span>&#123;<span class="attribute">background</span>:<span class="number">#ccc</span>;&#125;</span></span><br><span class="line"><span class="css">     <span class="selector-id">#thick</span>&#123;<span class="attribute">font-weight</span>:bolder;&#125;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"> <span class="tag">&lt;<span class="name">div</span>&gt;</span>test word.<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"> <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">     <span class="keyword">var</span> ele = <span class="built_in">document</span>.getElementsByTagName(<span class="string">&#x27;div&#x27;</span>)[<span class="number">0</span>];</span></span><br><span class="line"><span class="javascript">     <span class="built_in">console</span>.log(<span class="string">&quot;当前属性个数：&quot;</span>  + ele.attributes.length);</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">     ele.style.textAlign = <span class="string">&#x27;center&#x27;</span>;</span></span><br><span class="line"><span class="javascript">     ele.style.background = <span class="string">&#x27;#ccc&#x27;</span>;</span></span><br><span class="line"><span class="javascript">     ele.style.fontWeight = <span class="string">&#x27;bolder&#x27;</span>;</span></span><br><span class="line"><span class="javascript">     <span class="comment">// //添加属性 -- 实现和第12行同样的效果（二者留其一即可）</span></span></span><br><span class="line"><span class="javascript">     <span class="comment">// ele.setAttribute(&#x27;align&#x27;, &#x27;center&#x27;);</span></span></span><br><span class="line"><span class="javascript">     <span class="comment">// ele.setAttribute(&#x27;class&#x27;, &#x27;gray&#x27;);</span></span></span><br><span class="line"><span class="javascript">     <span class="comment">// ele.setAttribute(&#x27;id&#x27;, &#x27;thick&#x27;);</span></span></span><br><span class="line"><span class="javascript">     <span class="comment">// //移除属性</span></span></span><br><span class="line"><span class="javascript">     <span class="comment">// ele.removeAttribute(&#x27;id&#x27;);</span></span></span><br><span class="line"></span><br><span class="line"> <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="classList"><a href="#classList" class="headerlink" title="classList"></a>classList</h2><p>由于一个元素的类选择器可以有多个，可以利用“div元素对象.classList”的方式，获取类选择器列表。</p><table><thead><tr><th align="center">classList方法</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">add()</td><td align="center">可以给元素添加类名，一次只能添加一个</td></tr><tr><td align="center">remove()</td><td align="center">可以将元素的类名删除，一次只能删除一个</td></tr><tr><td align="center">toggle()</td><td align="center">切换元素的样式，若元素之前没有指定名称的样式则添加，如果有则移除</td></tr><tr><td align="center">item()</td><td align="center">根据接收的数字索引参数，获取元素的类名</td></tr><tr><td align="center">contains</td><td align="center">判断元素是否包含指定名称的样式，若包含则返回true，否则返回false</td></tr></tbody></table><blockquote><p>可以通过classList的属性length获取元素类名的个数</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;bar bar1&quot;</span>&gt;</span>bar1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">media</span>=<span class="string">&quot;screen&quot;</span>&gt;</span></span><br><span class="line"><span class="css"><span class="selector-class">.ys</span>&#123;</span></span><br><span class="line"><span class="css"><span class="selector-tag">color</span><span class="selector-pseudo">:red</span>;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> mydiv=<span class="built_in">document</span>.getElementsByTagName(<span class="string">&#x27;div&#x27;</span>)[<span class="number">0</span>];</span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(mydiv.classList.length);  <span class="comment">//获得元素的所有类名</span></span></span><br><span class="line"><span class="javascript">mydiv.classList.add(<span class="string">&quot;ys&quot;</span>);    <span class="comment">//添加样式</span></span></span><br><span class="line"><span class="javascript">mydiv.classList.remove(<span class="string">&quot;ys&quot;</span>); <span class="comment">//删除样式s</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>标签栏切换效果<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">body</span>&#123;<span class="attribute">margin</span>:<span class="number">0</span>;<span class="attribute">padding</span>:<span class="number">0</span>;&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-class">.tab-box</span>&#123;<span class="attribute">width</span>:<span class="number">383px</span>;<span class="attribute">margin</span>:<span class="number">10px</span>;<span class="attribute">border</span>:<span class="number">1px</span> solid <span class="number">#ccc</span>;<span class="attribute">border-top</span>:<span class="number">2px</span> solid <span class="number">#206F96</span>;&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-class">.tab-head</span>&#123;<span class="attribute">height</span>:<span class="number">31px</span>;&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-class">.tab-head-div</span>&#123;<span class="attribute">width</span>:<span class="number">95px</span>;<span class="attribute">height</span>:<span class="number">30px</span>;<span class="attribute">float</span>:left;<span class="attribute">border-bottom</span>:<span class="number">1px</span> solid <span class="number">#ccc</span>;<span class="attribute">border-right</span>:<span class="number">1px</span> solid <span class="number">#ccc</span>;<span class="attribute">background</span>:<span class="number">#206F96</span>;<span class="attribute">line-height</span>:<span class="number">30px</span>;<span class="attribute">text-align</span>:center;<span class="attribute">cursor</span>:pointer;<span class="attribute">color</span>:<span class="number">#fff</span>;&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-class">.tab-head</span> <span class="selector-class">.current</span>&#123;<span class="attribute">background</span>:<span class="number">#fff</span>;<span class="attribute">border-bottom</span>:<span class="number">1px</span> solid <span class="number">#fff</span>;<span class="attribute">color</span>:<span class="number">#000</span>;&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-class">.tab-head-r</span>&#123;<span class="attribute">border-right</span>:<span class="number">0</span>;&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-class">.tab-body-div</span>&#123;<span class="attribute">display</span>:none;<span class="attribute">margin</span>:<span class="number">20px</span> <span class="number">10px</span>;&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-class">.tab-body</span> <span class="selector-class">.current</span>&#123;<span class="attribute">display</span>:block;&#125;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;tab-box&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;tab-head&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;tab-head-div current&quot;</span>&gt;</span>标签一<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;tab-head-div&quot;</span>&gt;</span>标签二<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;tab-head-div&quot;</span>&gt;</span>标签三<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;tab-head-div tab-head-r&quot;</span>&gt;</span>标签四<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!--jkdjfk?--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;tab-body&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;tab-body-div current&quot;</span>&gt;</span> 1 <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;tab-body-div&quot;</span>&gt;</span> 2 <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;tab-body-div&quot;</span>&gt;</span> 3 <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;tab-body-div&quot;</span>&gt;</span> 4 <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 获取标签栏的所有标签元素对象</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> tabs = <span class="built_in">document</span>.getElementsByClassName(<span class="string">&#x27;tab-head-div&#x27;</span>);</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 获取标签栏的所有内容对象</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> divs = <span class="built_in">document</span>.getElementsByClassName(<span class="string">&#x27;tab-body-div&#x27;</span>);</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 遍历标签的元素对象,为每个标签元素对象添加鼠标滑过事件</span></span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">for</span>(<span class="params"><span class="keyword">var</span> i <span class="keyword">in</span> tabs</span>)</span>&#123;  <span class="comment">//遍历</span></span></span><br><span class="line"><span class="javascript">            tabs[i].onmouseover = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;  <span class="comment">//加事件</span></span></span><br><span class="line"><span class="javascript">                <span class="function"><span class="title">for</span>(<span class="params"><span class="keyword">var</span> j <span class="keyword">in</span> tabs</span>)</span>&#123;  <span class="comment">//再次遍历</span></span></span><br><span class="line"><span class="javascript">                    <span class="function"><span class="title">if</span>(<span class="params">tabs[j]==<span class="built_in">this</span></span>)</span>&#123;  <span class="comment">//判断当前，加current</span></span></span><br><span class="line"><span class="javascript">                        tabs[j].classList.add(<span class="string">&#x27;current&#x27;</span>);</span></span><br><span class="line"><span class="javascript">                        divs[j].classList.add(<span class="string">&#x27;current&#x27;</span>);</span></span><br><span class="line"><span class="javascript">                    &#125;<span class="keyword">else</span>&#123;  <span class="comment">//非当前，去current</span></span></span><br><span class="line"><span class="javascript">                        tabs[j].classList.remove(<span class="string">&#x27;current&#x27;</span>);</span></span><br><span class="line"><span class="javascript">                        divs[j].classList.remove(<span class="string">&#x27;current&#x27;</span>);</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/23/0d8b8e41bf64e9a5cfa7745cceabac11.png"></p><h1 id="DOM节点操作"><a href="#DOM节点操作" class="headerlink" title="DOM节点操作"></a>DOM节点操作</h1><ul><li>文档中的所有内容，称为节点。</li><li>根据作用，划分为：标签节点、文本节点和属性节点。</li></ul><h2 id="获取节点"><a href="#获取节点" class="headerlink" title="获取节点"></a>获取节点</h2><pre><code>    document.getElementById（）    element.firstChild()    element.lastChild()    element.parentNode()    element.childNodes()</code></pre><table><thead><tr><th>属性</th><th>说明</th></tr></thead><tbody><tr><td>firstChild</td><td>访问当前节点的首个子节点</td></tr><tr><td>lastChild</td><td>访问当前节点的最后一个子节点</td></tr><tr><td>nodeName</td><td>访问当前节点名称</td></tr><tr><td>nodeValue</td><td>访问当前节点的值</td></tr><tr><td>nextSibiling</td><td>返回同ff一树层级中指定节点之后紧跟的节点（下一个兄弟）</td></tr><tr><td>previousSibling</td><td>返回同ff一树层级中指定节点的前一个节点（前一个兄弟）</td></tr><tr><td>parentNode</td><td>访问当前元素节点的父节点</td></tr><tr><td>childNodes</td><td>访问当前元素节点的所有子节点集合（含回车符，返回NodeList）</td></tr></tbody></table><blockquote><p>childNodes属性用于节点操作，返回NdeList对象的集合，包括回车符、文本节点等其他类型的节点</p><p>children属性用于元素操作，返回HTMLCollection对象的集合，不包括文本节点等其他类型的节点</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">id</span>=<span class="string">&quot;ul1&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>JS<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>BOM<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>DOM<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--注释--&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> ul1 = <span class="built_in">document</span>.getElementById(<span class="string">&quot;ul1&quot;</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(<span class="string">&quot;1--nodeName--&quot;</span> + ul1.nodeName);</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(<span class="string">&quot;2--nodeValue--&quot;</span> + ul1.nodeValue);</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> txt1 = ul1.firstChild;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(<span class="string">&quot;3--nodeName--&quot;</span> + txt1.nodeName);</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(<span class="string">&quot;4--nodeValue--&quot;</span> + txt1.nodeValue);</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> li1 = txt1.nextSibling;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(<span class="string">&quot;5--nodeName--&quot;</span> + li1.nodeName);</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(<span class="string">&quot;6--nodeValue--&quot;</span> + li1.nodeValue);</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> txtJS = li1.firstChild.nodeValue;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(<span class="string">&quot;7--txtJS--&quot;</span> + txtJS);</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(<span class="string">&quot;8--&quot;</span> + li1.nextSibling.nodeName);</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(<span class="string">&quot;9--&quot;</span> + ul1.childNodes.length);</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(<span class="string">&quot;10--&quot;</span> + ul1.children.length);</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="节点追加"><a href="#节点追加" class="headerlink" title="节点追加"></a>节点追加</h2><table><thead><tr><th align="center">方法名</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">document.createElement()</td><td align="center">创建元素节点</td></tr><tr><td align="center">document.createTextNode()</td><td align="center">创建文本节点</td></tr><tr><td align="center">document.createAttribute()</td><td align="center">创建属性节点</td></tr><tr><td align="center">appendChild()</td><td align="center">在指定元素的子节点列表的末尾添加一个节点</td></tr><tr><td align="center">insertBefore()</td><td align="center">为当前节点增加一个子节点（插入到指定子节点之后）</td></tr><tr><td align="center">getAttributeNode()</td><td align="center">返回指定名称的属性节点</td></tr><tr><td align="center">setAttributeNode()</td><td align="center">设置或者改变名称的属性节点</td></tr></tbody></table><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;</span> <span class="meta-string">&quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.w3.org/1999/xhtml&quot;</span> <span class="attr">xml:lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Type&quot;</span> <span class="attr">content</span>=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span> <span class="attr">align</span>=<span class="string">&#x27;center&#x27;</span>&gt;</span>Hello JS!<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">//JS实现</span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> h2 = <span class="built_in">document</span>.createElement(<span class="string">&#x27;h2&#x27;</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> text = <span class="built_in">document</span>.createTextNode(<span class="string">&#x27;hello JS&#x27;</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> attr = <span class="built_in">document</span>.createAttribute(<span class="string">&#x27;algin&#x27;</span>);</span></span><br><span class="line"><span class="javascript">        attr.value = <span class="string">&#x27;center&#x27;</span>;</span></span><br><span class="line"></span><br><span class="line">        h2.setAttributeNode(attr);</span><br><span class="line">        h2.appendChild(text);</span><br><span class="line"><span class="javascript">        <span class="built_in">document</span>.body.appendChild(h2);</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="删除节点"><a href="#删除节点" class="headerlink" title="删除节点"></a>删除节点</h2><ul><li>删除节点使用<code>removeChild()</code>和<code>removeAttributeNode()</code>实现，它们的返回值是被移出的元素节点或属性节点</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;</span> <span class="meta-string">&quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.w3.org/1999/xhtml&quot;</span> <span class="attr">xml:lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Type&quot;</span> <span class="attr">content</span>=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">media</span>=<span class="string">&quot;screen&quot;</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.strong</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">font-weight</span><span class="selector-pseudo">:bolder</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>PHP<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>JavaScript<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;strong&quot;</span>&gt;</span>UI<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="comment">//删除第3个li的文本</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> li3 = <span class="built_in">document</span>.getElementsByTagName(<span class="string">&quot;li&quot;</span>)[<span class="number">2</span>];  <span class="comment">//获得元素 li</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> attr = li3.getAttributeNode(<span class="string">&#x27;class&#x27;</span>);  <span class="comment">//通过li获得其名称为class的属性节点</span></span></span><br><span class="line"><span class="javascript">        li3.removeAttributeNode(attr); <span class="comment">//删除li3的属性节点</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">        <span class="comment">//删除第3个li</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> ul = <span class="built_in">document</span>.getElementsByTagName(<span class="string">&#x27;ul&#x27;</span>)[<span class="number">0</span>];</span></span><br><span class="line">        ul.removeChild(li3);</span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="折叠菜单"><a href="#折叠菜单" class="headerlink" title="折叠菜单"></a>折叠菜单</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">media</span>=<span class="string">&quot;screen&quot;</span>&gt;</span></span><br><span class="line">        *&#123;</span><br><span class="line"><span class="css">            <span class="selector-tag">margin</span><span class="selector-pseudo">:0</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">padding</span><span class="selector-pseudo">:0</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">list-style</span><span class="selector-pseudo">:none</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">font-size</span><span class="selector-pseudo">:14px</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-id">#nav</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">margin</span><span class="selector-pseudo">:10px</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">text-align</span><span class="selector-pseudo">:center</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">line-height</span><span class="selector-pseudo">:25px</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">width</span><span class="selector-pseudo">:200px</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.title</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">background</span>: <span class="selector-id">#336699</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">color</span>:<span class="selector-id">#fff</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">border-bottom</span><span class="selector-pseudo">:1px</span> <span class="selector-tag">solid</span> <span class="selector-id">#fff</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">cursor</span><span class="selector-pseudo">:pointer</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.title1</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">background</span>:<span class="selector-id">#888</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">color</span>:<span class="selector-id">#000</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">border-bottom</span><span class="selector-pseudo">:1px</span> <span class="selector-tag">solid</span> <span class="selector-id">#666</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">cursor</span><span class="selector-pseudo">:pointer</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.content</span> <span class="selector-tag">li</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">color</span>:<span class="selector-id">#336699</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">background</span>:<span class="selector-id">#ddd</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">border-bottom</span><span class="selector-pseudo">:1px</span> <span class="selector-tag">solid</span> <span class="selector-id">#fff</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;nav&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;menu1&quot;</span> <span class="attr">class</span>=<span class="string">&quot;title&quot;</span>  <span class="attr">onclick</span>=<span class="string">&quot;showmenu(&#x27;1&#x27;)&quot;</span>&gt;</span>Ajax下载<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;list1&quot;</span> <span class="attr">class</span>=<span class="string">&quot;content&quot;</span> <span class="attr">style</span>=<span class="string">&quot;display:none&quot;</span>&gt;</span>    <span class="comment">&lt;!-- 探究：文档末 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span>AAA<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span>BBB<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span>CCC<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;menu2&quot;</span> <span class="attr">class</span>=<span class="string">&quot;title&quot;</span>  <span class="attr">onclick</span>=<span class="string">&quot;showmenu(&#x27;2&#x27;)&quot;</span>&gt;</span>JQuery下载<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;list2&quot;</span> <span class="attr">class</span>=<span class="string">&quot;content&quot;</span> <span class="attr">style</span>=<span class="string">&quot;display:none&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span>AAA<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span>BBB<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span>CCC<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="keyword">function</span> <span class="title">showmenu</span>(<span class="params">id</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> list = <span class="built_in">document</span>.getElementById(<span class="string">&quot;list&quot;</span> + id);</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> menu = <span class="built_in">document</span>.getElementById(<span class="string">&quot;menu&quot;</span> + id);</span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">if</span>(<span class="params">list.style.display==<span class="string">&#x27;none&#x27;</span></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                list.style.display=<span class="string">&#x27;block&#x27;</span>;  <span class="comment">//用元素操作：样式</span></span></span><br><span class="line"><span class="javascript">                menu.setAttribute(<span class="string">&#x27;class&#x27;</span>, <span class="string">&#x27;title1&#x27;</span>);</span></span><br><span class="line"><span class="javascript">            &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="javascript">                list.style.display=<span class="string">&#x27;none&#x27;</span>;</span></span><br><span class="line"><span class="javascript">                menu.setAttribute(<span class="string">&#x27;class&#x27;</span>, <span class="string">&#x27;title&#x27;</span>);</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/23/91fd175a02f7b27dded211fe6cb07bf1.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;DOM&quot;&gt;&lt;a href=&quot;#DOM&quot; class=&quot;headerlink&quot; title=&quot;DOM&quot;&gt;&lt;/a&gt;DOM&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;什么是DOM？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;文 档（Document）表示HTML文件。&lt;/li&gt;
&lt;li&gt;节 点：</summary>
      
    
    
    
    <category term="编程语言" scheme="http://xiaoliblog.cn/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    <category term="JavaScript" scheme="http://xiaoliblog.cn/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/JavaScript/"/>
    
    
    <category term="JavaScript" scheme="http://xiaoliblog.cn/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript🌞BOM</title>
    <link href="http://xiaoliblog.cn/2021/01/15/%E5%89%8D%E7%AB%AF/JavaScript/JavaScript_BOM/"/>
    <id>http://xiaoliblog.cn/2021/01/15/%E5%89%8D%E7%AB%AF/JavaScript/JavaScript_BOM/</id>
    <published>2021-01-15T04:10:03.134Z</published>
    <updated>2021-01-15T05:28:32.365Z</updated>
    
    <content type="html"><![CDATA[<h1 id="BOM"><a href="#BOM" class="headerlink" title="BOM"></a>BOM</h1><ul><li>JS组成<ol><li>ECMAScript：JS基本语法、数组、函数和对象。</li><li>BOM：浏览器对象模型（Brower Object Model）。</li><li>DOM：文档对象模型（Document Object Model )。</li></ol></li><li>BOM作用及结构图<ol><li>浏览器对象：内置对象，实现JS操作浏览器窗口及窗口上的控件，实现用户和页面的动态交互。</li><li>BOM：浏览器对象模型。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/22/fde59ae943452104dec1eb6697a007dc.png"></li></ol></li></ul><h1 id="window"><a href="#window" class="headerlink" title="window"></a>window</h1><ul><li>window对象是BOM中所有对象的核心，同时也是BOM中所有对象的父对象。</li><li>全局变量、函数、内置对象均能被window对象调用。</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> area = <span class="string">&#x27;Beijing&#x27;</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getArea</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"> <span class="keyword">return</span> <span class="built_in">this</span>.area;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">window</span>.area);        <span class="comment">//访问变量，输出结果：Beijing</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">window</span>.area());<span class="comment">//访问window对象的属性，输出结果为：Beijing</span></span><br><span class="line"><span class="built_in">console</span>.log(getArea());  <span class="comment">//调用自定义函数，输出结果：Beijing</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">window</span>.getArea());  <span class="comment">//调用window对象的方法，输出结果：Beijing</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">window</span>.Number(area));  <span class="comment">//调用内置函数，将变量area转换为数值型，输出结果：NaN</span></span><br></pre></td></tr></table></figure><ul><li><p>定义在全局作用域中的getArea()函数，函数体内的this关键字指向window对象。</p></li><li><p>对于window对象的属性和方法在调用时可以省略window，直接访问其属性和方法即可。</p></li><li><p>弹出对话框和窗口</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/22/f7c0de03573b5943357e4e28d54fe66a.png"></p><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/22/a5afa659fcf7196d587d016fcac0b3bc.png"></p><ul><li><p>输入对话框</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str=prompt(<span class="string">&#x27;请输入测试的选项&#x27;</span>,<span class="string">&#x27;用户名和密码&#x27;</span>);</span><br></pre></td></tr></table></figure></li><li><p>确认对话框</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;input type=<span class="string">&quot;button&quot;</span> value=<span class="string">&quot;删除&quot;</span> onclick=<span class="string">&quot;del()&quot;</span>&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">del</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="function"><span class="title">if</span>(<span class="params">confirm(<span class="string">&#x27;确定要删除吗？&#x27;</span>)</span>)</span>&#123;</span><br><span class="line"><span class="comment">//你按下了“确定”按钮</span></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="comment">//你按下了“取消”按钮</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li><li><p>打开与关闭窗口</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">open(URL,name,specs,replace);</span><br><span class="line"><span class="comment">//name指定target属性或窗口的名称</span></span><br><span class="line"><span class="comment">//specs设置浏览器窗口的特征（如大小、位置）</span></span><br><span class="line"><span class="comment">//replace设置为true，表示替换浏览器历史中的当前条目,设置为false(默认值)，表示在浏览历史中创建新的条目</span></span><br></pre></td></tr></table></figure></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>这是第一个页面<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;test1 windowd对象的属性和方法_submit&quot;</span> <span class="attr">method</span>=<span class="string">&quot;get&quot;</span> <span class="attr">accept-charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">value</span>=<span class="string">&quot;打开窗口&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;openWin()&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="comment">//第一组：对话框</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">// window.alert(&quot;alert&quot;);</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">// console.log(&quot;confirm:&quot; + window.confirm(&quot;confirm&quot;));  //观察点击”确认“和”取消“两种情况的输出结果</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">// console.log(&quot;prompt:&quot; +  window.prompt(&quot;prompt&quot;,100));</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">        <span class="comment">//第二组：窗口的打开与关闭</span></span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="keyword">function</span> <span class="title">openWin</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">window</span>.open(<span class="string">&quot;test1 第二个页面.html&quot;</span>,<span class="string">&quot;_blank&quot;</span>,<span class="string">&#x27;width=400,height=200,left=200&#x27;</span>);</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li> 窗口位置和大小</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/22/b12c6d694892607202cbe6b6c8f4b4d2.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/22/e1c6f927ee07c68790ff6149ba98f6fd.png"></p><h2 id="定时器"><a href="#定时器" class="headerlink" title="定时器"></a>定时器</h2><p>通过window对象提供的方法实现在指定时间后执行特定操作，也可以让程序代码每隔一段时间执行一次，实现间歇操作。</p><table><thead><tr><th align="center">方法</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">setTimeout()</td><td align="center">在指定的毫秒数后调用函数或执行一段代码</td></tr><tr><td align="center">setInterval()</td><td align="center">按照指定的周期(以毫秒计)来调用函数或执行一段代码</td></tr><tr><td align="center">clearTimeout()</td><td align="center">取消由setTimeout()方法设置的定时器</td></tr><tr><td align="center">clearInterval()</td><td align="center">取消由setInterval()方法设置的定时器</td></tr></tbody></table><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">//一次性定时器</span><br><span class="line">var timer = window.setTimeout(echoStr,3000); //echoStr定时调用的函数,3000为时间，单位毫秒</span><br><span class="line">  function echoStr()&#123;</span><br><span class="line">            console.log(&quot;Hello JS!&quot;);</span><br><span class="line">   &#125;</span><br><span class="line"> window.clearTimeout(timer);</span><br><span class="line"> //周期性定时器</span><br><span class="line"> var timer = window.setInterval(echoStr,3000);       </span><br><span class="line">  function echoStr()&#123;</span><br><span class="line">            console.log(&quot;Hello JS!&quot;);</span><br><span class="line">   &#125;</span><br><span class="line">window.clearInterval(timer);</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;</span> <span class="meta-string">&quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.w3.org/1999/xhtml&quot;</span> <span class="attr">xml:lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Type&quot;</span> <span class="attr">content</span>=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">div</span>&#123;<span class="attribute">width</span>:<span class="number">50px</span>;<span class="attribute">height</span>:<span class="number">50px</span>;<span class="attribute">border</span>:<span class="number">1px</span> solid <span class="number">#ccc</span>;<span class="attribute">margin-left</span>:<span class="number">5px</span>;<span class="attribute">line-height</span>:<span class="number">50px</span>;<span class="attribute">text-align</span>: center;<span class="attribute">color</span>:red;&#125;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;timeDiv&quot;</span>&gt;</span>0<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">     <span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span> = <span class="string">&quot;开始&quot;</span> <span class="attr">id</span>=<span class="string">&quot;start&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span> = <span class="string">&quot;暂停&quot;</span> <span class="attr">id</span>=<span class="string">&quot;pause&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> start = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;start&#x27;</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> pause = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;pause&#x27;</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> timeDiv = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;timeDiv&#x27;</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> time = <span class="number">0</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">        start.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            timer = <span class="built_in">window</span>.setInterval(startFun, <span class="number">1000</span>);</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="javascript">        pause.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">window</span>.clearInterval(timer);</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="javascript">        <span class="function"><span class="keyword">function</span> <span class="title">startFun</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line">            time++;</span><br><span class="line">            timeDiv.innerHTML = time;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/22/3c71904f4ddcba4c36d76dcec829915a.png"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>限时秒杀<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">      <span class="selector-class">.box</span>&#123;<span class="attribute">margin</span>:<span class="number">0</span> auto;<span class="attribute">position</span>:relative;<span class="attribute">background</span>:<span class="built_in">url</span>(images/flash_sale.png);<span class="attribute">width</span>:<span class="number">702px</span>;<span class="attribute">height</span>:<span class="number">378px</span>;&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-class">.box</span> <span class="selector-tag">div</span>&#123;<span class="attribute">float</span>:left;<span class="attribute">width</span>:<span class="number">50px</span>;<span class="attribute">height</span>:<span class="number">50px</span>;<span class="attribute">border</span>:<span class="number">1px</span> solid <span class="number">#ccc</span>;<span class="attribute">margin-left</span>:<span class="number">5px</span>;<span class="attribute">line-height</span>:<span class="number">50px</span>;<span class="attribute">text-align</span>: center;<span class="attribute">color</span>:red;<span class="attribute">position</span>:relative;<span class="attribute">top</span>:<span class="number">260px</span>;<span class="attribute">left</span>:<span class="number">305px</span>;&#125;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;s&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span>        <span class="comment">&lt;!-- 剩余的秒数 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> s = <span class="number">5</span>;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> timer = <span class="built_in">window</span>.setInterval(myFun,<span class="number">1000</span>);</span></span><br><span class="line"><span class="javascript">      <span class="function"><span class="keyword">function</span> <span class="title">myFun</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">           <span class="built_in">document</span>.getElementById(<span class="string">&#x27;s&#x27;</span>).innerHTML = s + <span class="string">&#x27;秒&#x27;</span>;</span></span><br><span class="line">           s--;</span><br><span class="line"><span class="javascript">           <span class="function"><span class="title">if</span>(<span class="params">s&lt;<span class="number">0</span></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">window</span>.clearInterval(timer);</span></span><br><span class="line">           &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/22/fc3bf46530e987d249f98c6db03ca728.png"></p><h1 id="location"><a href="#location" class="headerlink" title="location"></a>location</h1><ul><li><p>localtion对象可以更改当前用户中浏览器中访问的URL，实现新文档的载入、重载以及替换等功能。</p></li><li><p>每一个网页文件都有一个访问标记符，用于唯一标识它的访问位置，以便浏览器可以访问的，这个访问标记符称为URL(Uniform Resource Locator,统一资源定位符)。URL中包含了网络协议、服务器的主机名、端口号、资源名称字符串、参数以及锚点</p><pre><code>  http://www.example.com:80/web/index.html?a=3&amp;b=4#res</code></pre></li><li><p>更改URL</p><table><thead><tr><th align="center">location对象的方法</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">assign()</td><td align="center">载入一个新的文档</td></tr><tr><td align="center">reload()</td><td align="center">重新载入当前文档</td></tr><tr><td align="center">replace</td><td align="center">用新的文档替换当前文档</td></tr></tbody></table></li></ul><blockquote><p>reload() 参数为true时，它会绕过缓存，从服务器上重新下载该文档，类似于浏览器中的刷新页面按钮。</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;载入新页面&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;newPage()&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;刷新页面&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;freshPage()&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;替换页面&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;replacePage()&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;time&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="comment">//获取并显示当前页面载入的时间</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> ds=<span class="keyword">new</span> <span class="built_in">Date</span>();</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> d=ds.getDate();</span></span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.getElementById(<span class="string">&#x27;time&#x27;</span>).innerHTML=t;</span></span><br><span class="line"><span class="javascript"><span class="comment">//载入新的页面</span></span></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">newPage</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="built_in">window</span>.location.assign(<span class="string">&#x27;http://www.baidu.com&#x27;</span>);</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="javascript"> <span class="comment">//刷新页面        </span></span></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">freshPage</span>(<span class="params"></span>)</span>&#123;          </span></span><br><span class="line"><span class="javascript"><span class="built_in">window</span>.location.reload(<span class="literal">true</span>);</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="javascript"><span class="comment">//替换，不能后退</span></span></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">replace</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="built_in">window</span>.location.replace(‘http:<span class="comment">//www.baidu.com’);  </span></span></span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>获取URL参数</li></ul><table><thead><tr><th align="center">属性</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">search</td><td align="center">返回URL地址中的参数</td></tr><tr><td align="center">hash</td><td align="center">返回一个URL的锚部分</td></tr><tr><td align="center">host</td><td align="center">返回一个URL的主机名和端口</td></tr><tr><td align="center">hostname</td><td align="center">返回URL的主机名</td></tr><tr><td align="center">href</td><td align="center">返回完整的主机名</td></tr><tr><td align="center">pathname</td><td align="center">返回URL的路径名</td></tr><tr><td align="center">port</td><td align="center">返回一个URL服务器使用的端口号</td></tr><tr><td align="center">protocol</td><td align="center">返回一个URL协议</td></tr></tbody></table><ul><li>获取URL的指定部分：location.属性名。</li><li>设置URL的指定部分：location.属性名 = 值。</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//假设用户在地址栏中访问:http://localhost/search.html?goods=books&amp;price=40</span></span><br><span class="line">location.search;  <span class="comment">//获取:&quot;?goods=books&amp;price=40&quot;</span></span><br><span class="line"><span class="comment">//获取URL地址</span></span><br><span class="line">location.href;</span><br><span class="line"><span class="comment">//设置URL地址</span></span><br><span class="line">location.href=<span class="string">&quot;http://www.baidu.com&quot;</span>;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>定时跳转<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">body</span>&#123;<span class="attribute">background</span>:gray;&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">div</span>&#123;<span class="attribute">margin</span>:<span class="number">20px</span> auto;<span class="attribute">width</span>:<span class="number">350px</span>;<span class="attribute">height</span>:<span class="number">150px</span>;<span class="attribute">border</span>:<span class="number">1px</span> solid <span class="number">#000</span>;<span class="attribute">background</span>:white;<span class="attribute">padding</span>:<span class="number">10px</span>;&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">h2</span>&#123;<span class="attribute">text-align</span>:center;&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">span</span>&#123;<span class="attribute">font-size</span>:<span class="number">150%</span>;<span class="attribute">color</span>:red;<span class="attribute">margin</span>:<span class="number">0</span> <span class="number">10px</span>;&#125;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h2</span>&gt;</span>提交成功<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://www.baidu.com&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;seconds&quot;</span>&gt;</span>3<span class="tag">&lt;/<span class="name">span</span>&gt;</span>秒后系统会自动跳转，也可单击此链接跳转</span><br><span class="line">      <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">     <span class="function"><span class="keyword">function</span> <span class="title">timing</span>(<span class="params">secs,url</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> seconds=<span class="built_in">document</span>.getElementById(<span class="string">&#x27;seconds&#x27;</span>);</span></span><br><span class="line">seconds.innerHTML=--secs;</span><br><span class="line"><span class="javascript"><span class="function"><span class="title">if</span>(<span class="params">secs&gt;<span class="number">0</span></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">  <span class="built_in">setTimeout</span>(<span class="string">&#x27;timing(&#x27;</span>+secs+<span class="string">&#x27;,\&#x27;&#x27;</span>+url+<span class="string">&#x27;\&#x27;)&#x27;</span>,<span class="number">1000</span>); </span></span><br><span class="line"><span class="javascript">&#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"> location.href=url;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="javascript">timing(<span class="number">3</span>,<span class="string">&#x27;http://www.baidu.com&#x27;</span>);</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/22/6ce17e2ba00d43144f24cacf7fbb696a.png"></p><h1 id="history"><a href="#history" class="headerlink" title="history"></a>history</h1><p>history对象可以对用户在浏览器中访问过的URL历史记录进行操作。但history不能直接获取用户浏览过的URL。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/22/94c388f221c2b7c8d15a47bcd46fabd6.png"></p><ul><li>go()方法：当参数值是一个负整数时，表示“后退”指定的页数；当参数值是一个正整数时，表示“前进”指定的页数。</li><li>当go()方法的参数为1或-1时，与forward()和back()方法的作用相同。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/22/0563d51aaf7af1fa4858b0b3fef727fc.png"></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">//第一个页面</span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>定时跳转<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">h1</span>&gt;</span>这是第一个页面<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;前进&quot;</span> <span class="attr">id</span>=<span class="string">&quot;qianjin&quot;</span>/&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;打开新页面&quot;</span> <span class="attr">id</span>=<span class="string">&quot;dakai&quot;</span> /&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line">       <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">           <span class="keyword">var</span> qianjin = <span class="built_in">document</span>.getElementById(<span class="string">&quot;qianjin&quot;</span>);</span></span><br><span class="line"><span class="javascript">           qianjin.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">window</span>.history.forward();  <span class="comment">//window.history.go(1);</span></span></span><br><span class="line">           &#125;</span><br><span class="line"></span><br><span class="line"><span class="javascript">           <span class="keyword">var</span> dakai = <span class="built_in">document</span>.getElementById(<span class="string">&quot;dakai&quot;</span>);</span></span><br><span class="line"><span class="javascript">           dakai.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">window</span>.location.assign(<span class="string">&quot;u6 前进和后退2.html&quot;</span>);</span></span><br><span class="line">           &#125;</span><br><span class="line">       <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line">//第二个页面</span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>定时跳转<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">h2</span>&gt;</span>这是第二个页面<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">id</span>=<span class="string">&quot;houtui&quot;</span> <span class="attr">value</span>=<span class="string">&quot;后退&quot;</span>/&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line">       <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">           <span class="keyword">var</span> houtui = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;houtui&#x27;</span>);</span></span><br><span class="line"><span class="javascript">           houtui.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">window</span>.history.back();</span></span><br><span class="line">           &#125;</span><br><span class="line">       <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/22/cc6d3cf4bfe42d635f73f20bd8663e9f.png"></p><h1 id="navigator"><a href="#navigator" class="headerlink" title="navigator"></a>navigator</h1><p>navigator对象提供了有关浏览器的信息。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/22/02f974b05a95d0f7da7eb30125bacd35.png"></p><h1 id="screen"><a href="#screen" class="headerlink" title="screen"></a>screen</h1><p>返回当前渲染窗口中与屏幕相关的属性信息，如屏幕的宽度和高度等。</p><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/22/8aa35d76cbc9fc6e0eac08b9045ac9cd.png"></p><h1 id="红绿灯倒计时"><a href="#红绿灯倒计时" class="headerlink" title="红绿灯倒计时"></a>红绿灯倒计时</h1><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/22/b6f3e06ee4682dfae9a3b4f8a1d57724.png"><br>分析红绿灯：<br>① 横向三色交通信号灯的亮灯的顺序一般为“绿-&gt;黄-&gt;红-&gt;绿”依次循环。<br>② 亮灯时长需根据路口的实际情况等因素来考虑设置，如红灯亮设置为3秒，绿灯亮设置为5秒，黄灯亮设置为3秒。<br>核心功能：  改变背景颜色 + 倒计时</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>红绿灯倒计时<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">      <span class="selector-class">.box</span>&#123;<span class="attribute">width</span>:<span class="number">250px</span>;<span class="attribute">height</span>:<span class="number">52px</span>;<span class="attribute">padding</span>:<span class="number">15px</span> <span class="number">30px</span>;<span class="attribute">border</span>:<span class="number">2px</span> solid <span class="number">#ccc</span>;<span class="attribute">border-radius</span>:<span class="number">16px</span>;<span class="attribute">margin</span>:<span class="number">0</span> auto;&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-class">.box</span> <span class="selector-class">.count</span>&#123;<span class="attribute">width</span>:<span class="number">60px</span>;<span class="attribute">color</span>:<span class="number">#666</span>;<span class="attribute">font-size</span>:<span class="number">280%</span>;<span class="attribute">line-height</span>:<span class="number">50px</span>;<span class="attribute">padding-left</span>:<span class="number">6px</span>;<span class="attribute">margin-left</span>:<span class="number">5px</span>;<span class="attribute">border</span>:<span class="number">1px</span> solid <span class="number">#fff</span>&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-class">.box</span> <span class="selector-tag">div</span>&#123;<span class="attribute">margin-left</span>:<span class="number">5px</span>;<span class="attribute">float</span>:left;<span class="attribute">width</span>:<span class="number">50px</span>;<span class="attribute">height</span>:<span class="number">50px</span>;<span class="attribute">border-radius</span>:<span class="number">50px</span>;<span class="attribute">border</span>:<span class="number">1px</span> solid <span class="number">#666</span>;&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-class">.gray</span>&#123;<span class="attribute">background-color</span>:<span class="number">#eee</span>;&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-class">.red</span>&#123;<span class="attribute">background-color</span>:red;&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-class">.yellow</span>&#123;<span class="attribute">background-color</span>:yellow;&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-class">.green</span>&#123;<span class="attribute">background-color</span>:<span class="number">#26ff00</span>;&#125;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  //编写HTML页面</span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;red&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;yellow&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;green&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;count&quot;</span> <span class="attr">id</span>=<span class="string">&quot;count&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">      <span class="comment">// 获取红、黄、绿灯以及倒计时的元素对象</span></span></span><br><span class="line"><span class="javascript">      <span class="comment">//lamp：整个红绿灯对象</span></span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> lamp = &#123;</span></span><br><span class="line"><span class="javascript">        red: &#123;  <span class="comment">//red:lamp的成员,红灯对象</span></span></span><br><span class="line"><span class="javascript">          obj: <span class="built_in">document</span>.getElementById(<span class="string">&#x27;red&#x27;</span>), <span class="comment">//obj:存储信号灯的元素对象</span></span></span><br><span class="line"><span class="javascript">          timeout: <span class="number">3</span>,    <span class="comment">//信号灯剩余亮灯时间</span></span></span><br><span class="line"><span class="javascript">          style: [<span class="string">&#x27;red&#x27;</span>, <span class="string">&#x27;gray&#x27;</span>, <span class="string">&#x27;gray&#x27;</span>],  <span class="comment">//当红灯亮起时，红、黄、绿信号灯的背景颜色</span></span></span><br><span class="line"><span class="javascript">          next: <span class="string">&#x27;green&#x27;</span> <span class="comment">//红灯之后亮起的信号灯</span></span></span><br><span class="line">        &#125;,</span><br><span class="line">        yellow: &#123;</span><br><span class="line"><span class="javascript">          obj: <span class="built_in">document</span>.getElementById(<span class="string">&#x27;yellow&#x27;</span>),</span></span><br><span class="line">          timeout: 3,</span><br><span class="line"><span class="javascript">          style: [<span class="string">&#x27;gray&#x27;</span>, <span class="string">&#x27;yellow&#x27;</span>, <span class="string">&#x27;gray&#x27;</span>],</span></span><br><span class="line"><span class="javascript">          next: <span class="string">&#x27;red&#x27;</span></span></span><br><span class="line">        &#125;,</span><br><span class="line">        green: &#123;</span><br><span class="line"><span class="javascript">          obj: <span class="built_in">document</span>.getElementById(<span class="string">&#x27;green&#x27;</span>),</span></span><br><span class="line">          timeout: 5,</span><br><span class="line"><span class="javascript">          style: [<span class="string">&#x27;gray&#x27;</span>, <span class="string">&#x27;gray&#x27;</span>, <span class="string">&#x27;green&#x27;</span>],</span></span><br><span class="line"><span class="javascript">          next: <span class="string">&#x27;yellow&#x27;</span></span></span><br><span class="line">        &#125;,</span><br><span class="line"><span class="javascript">        <span class="comment">//创建红绿灯对象（增加设置信号灯背景颜色的函数）</span></span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">changeStyle</span>(<span class="params">style</span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">          <span class="built_in">this</span>.red.obj.className = style[<span class="number">0</span>];  <span class="comment">//根据参数，更改obj的样式名称，实现更改背景颜色</span></span></span><br><span class="line"><span class="javascript">          <span class="built_in">this</span>.yellow.obj.className = style[<span class="number">1</span>];</span></span><br><span class="line"><span class="javascript">          <span class="built_in">this</span>.green.obj.className = style[<span class="number">2</span>];</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;;</span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> count = &#123;  <span class="comment">//根据参数，更改num的值，即更改倒计时时间</span></span></span><br><span class="line"><span class="javascript">        obj: <span class="built_in">document</span>.getElementById(<span class="string">&#x27;count&#x27;</span>),</span></span><br><span class="line"><span class="javascript">        change: <span class="function"><span class="keyword">function</span>(<span class="params">num</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">          <span class="built_in">this</span>.obj.innerHTML = (num &lt; <span class="number">10</span>) ? (<span class="string">&#x27;0&#x27;</span> + num) : num;</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;;</span><br><span class="line"><span class="javascript">      <span class="comment">//初始状态 -- 绿灯亮</span></span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> now = lamp.green;   <span class="comment">//用变量now记录当前状态</span></span></span><br><span class="line"><span class="javascript">      lamp.changeStyle(now.style);  <span class="comment">//设置信号灯的背景颜色</span></span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> timeout = now.timeout; <span class="comment">//记录信号灯亮起时的时间</span></span></span><br><span class="line"><span class="javascript">      count.change(timeout); <span class="comment">//设置倒计时时间</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">      <span class="comment">//改变时间 -- 定时器</span></span></span><br><span class="line"><span class="javascript">      <span class="built_in">window</span>.setInterval(myfun,<span class="number">1000</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">      <span class="function"><span class="keyword">function</span> <span class="title">myfun</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">           timeout--;  <span class="comment">//倒计时</span></span></span><br><span class="line"><span class="javascript">           <span class="function"><span class="title">if</span>(<span class="params">timeout&gt;<span class="number">0</span></span>)</span>&#123;  <span class="comment">//倒计时时间未结束</span></span></span><br><span class="line"><span class="javascript">                 count.change(timeout);   <span class="comment">//，刷新页面</span></span></span><br><span class="line"><span class="javascript">           &#125;<span class="keyword">else</span>&#123;  <span class="comment">//倒计时时间结束</span></span></span><br><span class="line"><span class="javascript">                now = lamp[now.next];   <span class="comment">//切换信号灯颜色  -- 注意：不能写为 now = now.next;  这样是将一个字符串如yellow赋值给now；</span></span></span><br><span class="line">                lamp.changeStyle(now.style);</span><br><span class="line">                timeout = now.timeout;</span><br><span class="line">                count.change(timeout);</span><br><span class="line">           &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/22/21f270060615dc63bbc199e10fe57fd1.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;BOM&quot;&gt;&lt;a href=&quot;#BOM&quot; class=&quot;headerlink&quot; title=&quot;BOM&quot;&gt;&lt;/a&gt;BOM&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;JS组成&lt;ol&gt;
&lt;li&gt;ECMAScript：JS基本语法、数组、函数和对象。&lt;/li&gt;
&lt;li&gt;BOM：浏览器对象模</summary>
      
    
    
    
    <category term="编程语言" scheme="http://xiaoliblog.cn/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    <category term="JavaScript" scheme="http://xiaoliblog.cn/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/JavaScript/"/>
    
    
    <category term="JavaScript" scheme="http://xiaoliblog.cn/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript🌞对象</title>
    <link href="http://xiaoliblog.cn/2021/01/15/%E5%89%8D%E7%AB%AF/JavaScript/JavaScript_%E5%AF%B9%E8%B1%A1/"/>
    <id>http://xiaoliblog.cn/2021/01/15/%E5%89%8D%E7%AB%AF/JavaScript/JavaScript_%E5%AF%B9%E8%B1%A1/</id>
    <published>2021-01-15T03:59:05.132Z</published>
    <updated>2021-01-15T05:28:45.059Z</updated>
    
    <content type="html"><![CDATA[<h1 id="对象"><a href="#对象" class="headerlink" title="对象"></a>对象</h1><p>面向对象的特征主要可以概括为<strong>封装性、继承性、多态性</strong>。</p><h2 id="自定义对象"><a href="#自定义对象" class="headerlink" title="自定义对象"></a>自定义对象</h2><h3 id="字面量-创建对象"><a href="#字面量-创建对象" class="headerlink" title="字面量{}创建对象"></a>字面量{}创建对象</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">var</span> o1=&#123;&#125;;</span><br><span class="line"> <span class="keyword">var</span> o2=&#123;<span class="attr">name</span>:<span class="string">&#x27;Jim&#x27;</span>&#125;;</span><br><span class="line"> <span class="keyword">var</span> o3=&#123;<span class="attr">name</span>:<span class="string">&#x27;Jim&#x27;</span>,<span class="attr">age</span>:<span class="number">19</span>,<span class="attr">gender</span>:<span class="string">&#x27;男&#x27;</span>&#125;;</span><br><span class="line"> <span class="keyword">var</span> o4 = &#123;</span><br><span class="line">            name: <span class="string">&#x27;Jim&#x27;</span>,</span><br><span class="line">            age: <span class="number">19</span>,</span><br><span class="line">            gender: <span class="string">&#x27;男&#x27;</span>,</span><br><span class="line">            sayHello: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">&#x27;你好&#x27;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="访问对象成员"><a href="#访问对象成员" class="headerlink" title="访问对象成员"></a>访问对象成员</h3><pre><code>对象名.属性;对象名.方法名()</code></pre><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">o4.name;</span><br><span class="line">o4.sayHello();</span><br></pre></td></tr></table></figure><h3 id="增加对象成员"><a href="#增加对象成员" class="headerlink" title="增加对象成员"></a>增加对象成员</h3><pre><code>引用不存在的成员，即增加成员</code></pre><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">o4.tall=<span class="number">181</span>;</span><br><span class="line">o4.introduce=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(o4.name+o4.tall);</span><br><span class="line">&#125;</span><br><span class="line">o4.introduce();</span><br></pre></td></tr></table></figure><h3 id="可变成员名"><a href="#可变成员名" class="headerlink" title="可变成员名"></a>可变成员名</h3><pre><code>如果对象的成员名不确定时，还可通过一个变量保存成员的名称，使用[]语法来实现可变成员名。`成员名：是字符串`。</code></pre><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> key=<span class="string">&#x27;id&#x27;</span>;</span><br><span class="line">o4[key]=<span class="number">123</span>;</span><br></pre></td></tr></table></figure><h3 id="对象成员遍历"><a href="#对象成员遍历" class="headerlink" title="对象成员遍历"></a>对象成员遍历</h3><p>typeof：判断成员类型，function表示方法<br>访问方法：o4[i]()<br>访问属性：o4[i]</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">for</span>(<span class="params"><span class="keyword">var</span> i <span class="keyword">in</span> o4</span>)</span>&#123;</span><br><span class="line">   <span class="built_in">console</span>.log(<span class="keyword">typeof</span>(o4[i]));  </span><br><span class="line">   <span class="function"><span class="title">if</span>(<span class="params"><span class="keyword">typeof</span>(o4[i])==<span class="string">&quot;function&quot;</span></span>)</span>&#123;</span><br><span class="line">    o4[i]();  <span class="comment">//访问方法</span></span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">     <span class="built_in">console</span>.log(o4[i]);  <span class="comment">//访问属性</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>动态增加对象成员<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;key&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">value</span>=<span class="string">&quot;name&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;val&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Jack&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;btn&quot;</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;测试&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> k = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;key&#x27;</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> v = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;val&#x27;</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> btn = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;btn&#x27;</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> o = &#123;&#125;;  <span class="comment">//创建空对象</span></span></span><br><span class="line"><span class="javascript">        btn.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;  <span class="comment">//当点击btn时，调用匿名函数</span></span></span><br><span class="line"><span class="javascript">            o[k.value] = v.value;  <span class="comment">//增加属性，k的value为键、v的value为值</span></span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(o);  <span class="comment">//打印对象</span></span></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/21/6d0f7bf592c5985c9fce00bb75d2b2d7.png"></p><h2 id="深拷贝与浅拷贝"><a href="#深拷贝与浅拷贝" class="headerlink" title="深拷贝与浅拷贝"></a>深拷贝与浅拷贝</h2><ul><li>浅拷贝—复制快捷方式</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> o1 = &#123;<span class="attr">name</span>: <span class="string">&#x27;Jim&#x27;</span>, <span class="attr">age</span>: <span class="number">19</span>, <span class="attr">gender</span>: <span class="string">&#x27;男&#x27;</span>&#125;;</span><br><span class="line"><span class="keyword">var</span> o2=o1;</span><br></pre></td></tr></table></figure><ul><li>深拷贝—复制文件本身</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">deepCopy</span>(<span class="params">obj</span>)</span>&#123;</span><br><span class="line"><span class="keyword">var</span> o = &#123;&#125;;</span><br><span class="line">  <span class="function"><span class="title">for</span>(<span class="params"><span class="keyword">var</span> k <span class="keyword">in</span> obj</span>)</span>&#123;     <span class="comment">//假设k是简单的成员（不是对象）</span></span><br><span class="line">o[k] = obj[k];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="this指向"><a href="#this指向" class="headerlink" title="this指向"></a>this指向</h2><ul><li> 使用new调用构造函数时，this指向新创建的对象</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span>  <span class="title">Person</span>(<span class="params">name,age</span>)</span>&#123;</span><br><span class="line"><span class="built_in">this</span>.name = name;</span><br><span class="line"><span class="built_in">this</span>.age = age;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> o1 = <span class="keyword">new</span> Person(“Jack”,<span class="number">18</span>);</span><br><span class="line"><span class="keyword">var</span> o2 = <span class="keyword">new</span> Person(“Lily”,<span class="number">20</span>);</span><br></pre></td></tr></table></figure><ul><li>将函数作为对象的方法调用，this指向该对象</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">name:”Jack”,</span><br><span class="line">age:<span class="number">19</span>,</span><br><span class="line">sayHello:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log( <span class="built_in">this</span>.name + “,” + <span class="built_in">this</span>.age);</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line">obj.sayHello();</span><br></pre></td></tr></table></figure><ul><li> 直接通过函数名调用函数，this指向全局对象window</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(foo()===<span class="built_in">window</span>); <span class="comment">//true</span></span><br></pre></td></tr></table></figure><h1 id="内置对象"><a href="#内置对象" class="headerlink" title="内置对象"></a>内置对象</h1><h2 id="String对象"><a href="#String对象" class="headerlink" title="String对象"></a>String对象</h2><table><thead><tr><th align="center">成员</th><th align="center">作用</th></tr></thead><tbody><tr><td align="center">length</td><td align="center">获取字符串长度</td></tr><tr><td align="center">charAt(index)</td><td align="center">获取index位置的字符，位置从0开始</td></tr><tr><td align="center">indexOf(searchValue)</td><td align="center">获取seerchValue在字符串中首次出现的位置</td></tr><tr><td align="center">lastIndexOf(searchValue)</td><td align="center">获取seerchValue在字符串中最后出现的位置</td></tr><tr><td align="center">substring(start[,end])</td><td align="center">截取从start位置到end位置之间的一个子字符串</td></tr><tr><td align="center">substr(start[,length])</td><td align="center">截取从start位置开始到length长度的子字符串</td></tr><tr><td align="center">toLowerCase()</td><td align="center">获取字符串的小写形式</td></tr><tr><td align="center">toUpperCase()</td><td align="center">获取字符串的大写形式</td></tr><tr><td align="center">split([separator[,limit])</td><td align="center">使用separator分隔符将字符串分隔成数组，limit用于限制数量</td></tr><tr><td align="center">replace(str1,str2)</td><td align="center">使用str2替换字符串中的str1，返回替换结果</td></tr></tbody></table><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">var name=&#x27;Administrator&#x27;;</span><br><span class="line">if(name.length<span class="tag">&lt;<span class="name">3||name.length</span>&gt;</span>10)&#123;</span><br><span class="line">alert(&#x27;用户名必须在3~10之间&#x27;);</span><br><span class="line">&#125;</span><br><span class="line">if(name.toLowerCase().indexOf(&#x27;admini&#x27;)!== -1)&#123; //indexOf查找失败返回-1</span><br><span class="line">alert(&#x27;用户名中不能包含敏感词：admin&#x27;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Number对象"><a href="#Number对象" class="headerlink" title="Number对象"></a>Number对象</h2><p>Number对象用于处理整数、浮点数等数值，常用的属性和方法如下。</p><table><thead><tr><th align="center">成员</th><th align="center">作用</th></tr></thead><tbody><tr><td align="center">MAX_VALUE</td><td align="center">在JavaScript中所能表示的最大数值（静态成员）</td></tr><tr><td align="center">MIN_VALUE</td><td align="center">在JavaScript中所能表示的最小正值（静态成员）</td></tr><tr><td align="center">toFixed(digits)</td><td align="center">使用定点表示法来格式化一个数值</td></tr></tbody></table><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> num=<span class="number">12345.6789</span>;</span><br><span class="line">num.toFixed();  <span class="comment">//四舍五入，不包括小数部分，返回结果：12345</span></span><br><span class="line">num.toFixed(<span class="number">1</span>); <span class="comment">//四舍五入，保留1位小数，返回结果：12345.7</span></span><br><span class="line">num.toFixed(<span class="number">6</span>); <span class="comment">//用0填充不足的小数位，返回结果：12345.678900</span></span><br><span class="line">num.MAX_VALUE;</span><br><span class="line">num.MIN_VALUE;</span><br></pre></td></tr></table></figure><h2 id="Math对象"><a href="#Math对象" class="headerlink" title="Math对象"></a>Math对象</h2><p>Math对象用于对数值进行数学运算。</p><table><thead><tr><th align="center">成员</th><th align="center">作用</th></tr></thead><tbody><tr><td align="center">PI</td><td align="center">获取圆周率，结果为3.141592653589793</td></tr><tr><td align="center">abs(x)</td><td align="center">获取x的绝对值，可传入普通数值或是用字符串表示的数值</td></tr><tr><td align="center">pow(base,xponent)</td><td align="center">获取基数(base)的指数(exponent)次幂，即baseexponnet</td></tr><tr><td align="center">sqrt(x)</td><td align="center">获取x的平方根</td></tr><tr><td align="center">ceil(x)</td><td align="center">获取大于或等于x的最小整数，即向上取整</td></tr><tr><td align="center">floor(x)</td><td align="center">获取小于或等于x的最大整数，即向下取整</td></tr><tr><td align="center">round(x)</td><td align="center">获取x的四舍五入后的整数值</td></tr><tr><td align="center">random()</td><td align="center">获取大于或等于0.0且小于1.0的随机值</td></tr></tbody></table><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> num=<span class="number">10.88</span>;</span><br><span class="line"><span class="built_in">Math</span>.ceil(num);</span><br><span class="line"><span class="built_in">Math</span>.random();</span><br><span class="line"><span class="comment">//Math.floor( Math.random() * (max-min+1) + min)，生成[min,max]的随机整数。</span></span><br><span class="line"><span class="built_in">Math</span>.random()*(<span class="number">3</span>-<span class="number">1</span>+<span class="number">1</span>)+<span class="number">1</span>; <span class="comment">//[1,3]  //Math.random()*(Max-Min+1)+Min</span></span><br><span class="line"><span class="built_in">Math</span>.random()*(<span class="number">99</span>-<span class="number">88</span>)+<span class="number">88</span>; <span class="comment">//[88,99) //Math.random()*(Max-Min)+Min</span></span><br></pre></td></tr></table></figure><h2 id="Date对象"><a href="#Date对象" class="headerlink" title="Date对象"></a>Date对象</h2><p>Date对象用于处理日期和时间。</p><table><thead><tr><th align="center">成员</th><th align="center">作用</th></tr></thead><tbody><tr><td align="center">getFullYear()</td><td align="center">获取表示年份的4位数字，如2020</td></tr><tr><td align="center">setFullYear(value)</td><td align="center">设置年份</td></tr><tr><td align="center">getMonth()</td><td align="center"><strong>获取月份，范围0~11（0表示一月，1表示二月，依次类推）</strong></td></tr><tr><td align="center">setMonth(value)</td><td align="center">设置月份</td></tr><tr><td align="center">getDate()</td><td align="center"><strong>获取月份中的某一天，范围1~31</strong></td></tr><tr><td align="center">setDate(value)</td><td align="center">设置月份中的某一天</td></tr><tr><td align="center">getDay()</td><td align="center"><strong>获取星期，范围0~6（0表示星期日，1表示星期一，依次类推</strong>）</td></tr><tr><td align="center">getHours()</td><td align="center">获取小时数，返回0~23</td></tr><tr><td align="center">setHours(value)</td><td align="center">设置小时数</td></tr><tr><td align="center">getMinutes()</td><td align="center">获取分钟数，范围0~59</td></tr><tr><td align="center">setMinutes(value)</td><td align="center">设置分钟数</td></tr><tr><td align="center">getSeconds()</td><td align="center">获取秒数，范围0~59</td></tr><tr><td align="center">setSeconds(value)</td><td align="center">设置秒数</td></tr><tr><td align="center">getMilliseconds()</td><td align="center">获取毫秒数，范围0~999</td></tr><tr><td align="center">getMilliseconds(value)</td><td align="center">设置毫秒数</td></tr><tr><td align="center">getTime()</td><td align="center">获取从1970-01-01 00:00:00 距离Date对象所代表时间</td></tr></tbody></table><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> date=<span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line"><span class="built_in">document</span>.write(date+<span class="string">&quot;&lt;br&gt;&quot;</span>);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;年：&quot;</span>+date.getYear());  <span class="comment">//年：120</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;年：&quot;</span>+date.getFullYear());  <span class="comment">//年：2020</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;月：&quot;</span>+date.getMonth());  <span class="comment">//月：9</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;日：&quot;</span>+date.getDate());  <span class="comment">//日：15</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;时：&quot;</span>+date.getHours());  <span class="comment">//时：8</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;分：&quot;</span>+date.getMinutes());  <span class="comment">//分：52</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;秒：&quot;</span>+date.getSeconds());  <span class="comment">//秒：54</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;周几：&quot;</span>+date.getDay());  <span class="comment">//周几：4</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;</span> <span class="meta-string">&quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.w3.org/1999/xhtml&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Type&quot;</span> <span class="attr">content</span>=<span class="string">&quot;text/html; charset=utf-8&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>制作年历<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span></span><br><span class="line">body&#123;</span><br><span class="line"><span class="css"><span class="selector-tag">text-align</span><span class="selector-pseudo">:center</span>;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-class">.box</span>&#123;</span></span><br><span class="line"><span class="css"><span class="selector-tag">margin</span><span class="selector-pseudo">:0</span> <span class="selector-tag">auto</span>;</span></span><br><span class="line"><span class="css"><span class="selector-tag">width</span><span class="selector-pseudo">:880px</span>;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-class">.title</span>&#123;</span></span><br><span class="line"><span class="css"><span class="selector-tag">background</span>:<span class="selector-id">#ccc</span>;</span></span><br><span class="line">&#125;</span><br><span class="line">table&#123;</span><br><span class="line"><span class="css"><span class="selector-tag">height</span><span class="selector-pseudo">:200px</span>;</span></span><br><span class="line"><span class="css"><span class="selector-tag">width</span><span class="selector-pseudo">:200px</span>;</span></span><br><span class="line"><span class="css"><span class="selector-tag">font-size</span><span class="selector-pseudo">:12px</span>;</span></span><br><span class="line"><span class="css"><span class="selector-tag">text-align</span><span class="selector-pseudo">:center</span>;</span></span><br><span class="line"><span class="css"><span class="selector-tag">float</span><span class="selector-pseudo">:left</span>;   <span class="comment">/*浮动属性，脱离文档流，向左移动，直至遇到父元素或另一个浮动元素的边缘*/</span></span></span><br><span class="line"><span class="css"><span class="selector-tag">margin</span><span class="selector-pseudo">:10px</span>;</span></span><br><span class="line"><span class="css"><span class="selector-tag">font-family</span><span class="selector-pseudo">:Arial</span>;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="comment">/*定义年历生成函数*/</span></span></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">calendar</span>(<span class="params">y</span>)</span>&#123;  <span class="comment">//y：从网页获取到的年份</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//获取指定年份1月1日的星期数值</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> w = <span class="keyword">new</span> <span class="built_in">Date</span>(y,<span class="number">0</span>).getDay();  </span></span><br><span class="line"><span class="javascript"><span class="comment">//Date创建方式1： var date1 = new Date(2017,9,1,11,53,4);年月日时分秒，至少给出年和月；另外月的范围是0~11，即参数为0，实际月份为1月；</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//Date创建方式2： var date2 = new Date(&#x27;2017-10-01 11:53:04&#x27;);//getDay() 获取星期，范围0~6</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> html=<span class="string">&#x27;&lt;div class=&quot;box&quot;&gt;&#x27;</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="comment">//拼接每个月份的表格</span></span></span><br><span class="line"><span class="javascript"><span class="function"><span class="title">for</span>(<span class="params"><span class="keyword">var</span> m=<span class="number">1</span>;m&lt;=<span class="number">12</span>;m++</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">html += <span class="string">&#x27;&lt;table&gt;&#x27;</span>;</span></span><br><span class="line"><span class="handlebars"><span class="xml">                html += &#x27;<span class="tag">&lt;<span class="name">tr</span> <span class="attr">class</span>=<span class="string">&quot;title&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">th</span> <span class="attr">colspan</span>=<span class="string">&quot;7&quot;</span>&gt;</span>&#x27; + y + &#x27; 年 &#x27; + m + &#x27; 月<span class="tag">&lt;/<span class="name">th</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span>&#x27;;</span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                html += &#x27;<span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>日<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>一<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>二<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>三<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>四<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>五<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>六<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span>&#x27;;</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="comment">//获取月份m共有多少天？</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> max = (<span class="keyword">new</span> <span class="built_in">Date</span>(y,m,<span class="number">0</span>)).getDate();   <span class="comment">//getDate获取月份中的某一天，范围1~31；当日为0时，可获得该月的天数。</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//开始tr标签</span></span></span><br><span class="line"><span class="javascript">html = html+<span class="string">&#x27;&lt;tr&gt;&#x27;</span>;</span></span><br><span class="line"><span class="javascript"><span class="function"><span class="title">for</span>(<span class="params"><span class="keyword">var</span> d=<span class="number">1</span>;d&lt;=max;d++</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">if</span>((w!=<span class="number">0</span>) &amp;&amp; (d==<span class="number">1</span>))&#123;  <span class="comment">//如果该月的第一天不是星期日，则填充空白</span></span></span><br><span class="line"><span class="handlebars"><span class="xml">html = html+&#x27;<span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">&quot;&#x27; + w + &#x27;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span>&#x27;;  </span></span></span><br><span class="line">&#125;</span><br><span class="line"><span class="javascript">html = html + <span class="string">&#x27;&lt;td&gt;&#x27;</span> + d + <span class="string">&#x27;&lt;/td&gt;&#x27;</span>;</span></span><br><span class="line"><span class="javascript"><span class="function"><span class="title">if</span>(<span class="params">w==<span class="number">6</span> &amp;&amp; d!=max</span>)</span>&#123;  <span class="comment">//如果星期六不是该月的最后一天，则换行 </span></span></span><br><span class="line"><span class="handlebars"><span class="xml">html = html + &#x27;<span class="tag">&lt;/<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">tr</span>&gt;</span>&#x27;;</span></span></span><br><span class="line"><span class="javascript">&#125;<span class="keyword">else</span> <span class="function"><span class="title">if</span>(<span class="params">d==max</span>)</span>&#123;   <span class="comment">//该月的最后一天，闭合&lt;tr&gt;标签</span></span></span><br><span class="line"><span class="javascript">html = html + <span class="string">&#x27;&lt;/tr&gt;&#x27;</span>;</span></span><br><span class="line">&#125;</span><br><span class="line">w = (w+1&gt;6)?0:w+1;</span><br><span class="line">&#125;</span><br><span class="line"><span class="javascript">html = html + <span class="string">&#x27;&lt;/table&gt;&#x27;</span>;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="javascript">html = html + <span class="string">&#x27;&lt;/div&gt;&#x27;</span>;</span></span><br><span class="line"><span class="javascript"><span class="keyword">return</span> html;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> year = <span class="built_in">parseInt</span>(prompt(<span class="string">&#x27;输入年份:&#x27;</span>,<span class="string">&#x27;2019&#x27;</span>));</span></span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.write(calendar(year));</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/22/5a45bff2253fc06cc1a9d9c7ee84bfff.png"></p><h1 id="JSON"><a href="#JSON" class="headerlink" title="JSON"></a>JSON</h1><ul><li><p>JSON: <strong>JavaScript Object Notation</strong>(JavaScript 对象表示法)。</p></li><li><p>JSON 是<strong>轻量级的文本数据交换格式</strong>，类似 XML，但 比 XML 更小、更快，更易解析。</p></li><li><p>JSON 独立于语言和平台，目前非常多的动态（PHP，JSP，.NET）编程语言都支持JSON。</p></li></ul><h2 id="JSON对象"><a href="#JSON对象" class="headerlink" title="JSON对象"></a>JSON对象</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//JSON对象</span></span><br><span class="line"><span class="keyword">var</span> obj = &#123;“name”:“Jerry”，“age”:<span class="number">15</span>&#125; </span><br><span class="line"><span class="comment">//JS对象</span></span><br><span class="line"><span class="keyword">var</span> obj = &#123;<span class="attr">name</span>:“Jerry”，age:<span class="number">15</span>，    </span><br><span class="line">                sayHello:<span class="function"><span class="keyword">function</span></span>&#123;……&#125;</span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure><ul><li><p>JSON对象的属性名（key）必须被包含在双引号之中，而JavaScript对象除了有空格的属性名、中间有连字符-的属性名必须在双引号之中外，其它随意；</p></li><li><p>不能在JSON对象中定义方法，而在JavaScript对象中可以；</p></li><li><p>JSON对象可以被很多语言操作，而JavaScript对象只有JS自己可以识别。</p></li></ul><h2 id="JSON数组"><a href="#JSON数组" class="headerlink" title="JSON数组"></a>JSON数组</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> myJson =&#123;</span><br><span class="line">         <span class="string">&quot;country&quot;</span>:<span class="string">&quot;China&quot;</span>,</span><br><span class="line">    <span class="string">&quot;population&quot;</span>:<span class="string">&quot;1.3billion&quot;</span>,</span><br><span class="line">        <span class="string">&quot;bigCity&quot;</span>:[<span class="string">&quot;Peking&quot;</span>,<span class="string">&quot;Shanghai&quot;</span>,<span class="string">&quot;ShenZhen&quot;</span>,<span class="string">&quot;HongKong&quot;</span>]</span><br><span class="line">        &#125;</span><br><span class="line">       myJson .bigCity[<span class="number">0</span>] = <span class="string">&quot;GuangZhou&quot;</span>;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;对象&quot;&gt;&lt;a href=&quot;#对象&quot; class=&quot;headerlink&quot; title=&quot;对象&quot;&gt;&lt;/a&gt;对象&lt;/h1&gt;&lt;p&gt;面向对象的特征主要可以概括为&lt;strong&gt;封装性、继承性、多态性&lt;/strong&gt;。&lt;/p&gt;
&lt;h2 id=&quot;自定义对象&quot;&gt;&lt;a href</summary>
      
    
    
    
    <category term="编程语言" scheme="http://xiaoliblog.cn/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    <category term="JavaScript" scheme="http://xiaoliblog.cn/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/JavaScript/"/>
    
    
    <category term="JavaScript" scheme="http://xiaoliblog.cn/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript🌞函数</title>
    <link href="http://xiaoliblog.cn/2021/01/15/%E5%89%8D%E7%AB%AF/JavaScript/JavaScript_%E5%87%BD%E6%95%B0/"/>
    <id>http://xiaoliblog.cn/2021/01/15/%E5%89%8D%E7%AB%AF/JavaScript/JavaScript_%E5%87%BD%E6%95%B0/</id>
    <published>2021-01-15T03:53:10.039Z</published>
    <updated>2021-01-15T05:28:49.887Z</updated>
    
    <content type="html"><![CDATA[<h1 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h1><p>函数封装一段完成特定功能的代码。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> 函数名(<span class="params">[参数<span class="number">1</span>, 参数<span class="number">2</span>, ……]</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    函数体……</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">maxNum</span>(<span class="params">a, b</span>) </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">      a =  <span class="built_in">parseInt</span>(a);</span><br><span class="line">      b =  <span class="built_in">parseInt</span>(b);</span><br><span class="line">      <span class="keyword">return</span> a &gt;= b ? a : b;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>大小写转换<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>大小写转换<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>原数据:<span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;old&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>操<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span>作<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;转大写&quot;</span> <span class="attr">onClick</span>=<span class="string">&quot;deal(&#x27;upper&#x27;)&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;转小写&quot;</span> <span class="attr">onClick</span>=<span class="string">&quot;deal(&#x27;lower&#x27;)&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>新数据:<span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;new&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">deal</span>(<span class="params">opt</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> str=<span class="built_in">document</span>.getElementById(<span class="string">&#x27;old&#x27;</span>).value; <span class="comment">//取元数据的值</span></span></span><br><span class="line"><span class="javascript"><span class="function"><span class="title">switch</span>(<span class="params">opt</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">case</span> <span class="string">&#x27;upper&#x27;</span>:</span></span><br><span class="line">str=str.toUpperCase();</span><br><span class="line"><span class="javascript"><span class="keyword">break</span>;</span></span><br><span class="line"><span class="javascript"><span class="keyword">case</span> <span class="string">&#x27;lower&#x27;</span>:</span></span><br><span class="line">str=str.toLowerCase();</span><br><span class="line"><span class="javascript"><span class="keyword">break</span>;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.getElementById(<span class="string">&#x27;new&#x27;</span>).value=str;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/21/966bae02db2b5af925719320b9082bfd.png"></p><h2 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h2><p>开发时若不能确定函数的形参个数，可以不设置形参；<br>之后通过arguments对象获取调用时传递的实参。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sum</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">arguments</span>);</span><br><span class="line"><span class="keyword">var</span> sum=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="title">for</span>(<span class="params"><span class="keyword">var</span> i <span class="keyword">in</span> <span class="built_in">arguments</span></span>)</span>&#123;</span><br><span class="line">sum+=<span class="built_in">arguments</span>[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">document</span>.write(sum(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>));</span><br></pre></td></tr></table></figure><h2 id="变量的作用域"><a href="#变量的作用域" class="headerlink" title="变量的作用域"></a>变量的作用域</h2><p>全局变量：函数外声明，或者函数内省略var声明；<br>局部变量：函数体内用var声明。<br>块级变量：ES6提供的let关键字声明，仅在”{}”内有效。</p><h1 id="匿名函数"><a href="#匿名函数" class="headerlink" title="匿名函数"></a>匿名函数</h1><p>匿名函数指没有函数名称的函数，可以避免全局变量的污染以及函数名的冲突问题。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//方式1：函数表达式中省略函数名</span></span><br><span class="line"><span class="keyword">var</span> fn=<span class="function"><span class="keyword">function</span>(<span class="params">num1,num2</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> num1+num2;</span><br><span class="line">&#125;;</span><br><span class="line">fn(<span class="number">1</span>,<span class="number">2</span>);</span><br><span class="line"><span class="comment">//方式2：自调用方式</span></span><br><span class="line">(<span class="function"><span class="keyword">function</span> (<span class="params">num1,num2</span>)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> num1+num2;</span><br><span class="line">&#125;)(<span class="number">2</span>,<span class="number">3</span>);</span><br><span class="line"><span class="comment">//方式3：处理事件</span></span><br><span class="line"><span class="built_in">document</span>.body.onclick=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">alert(<span class="string">&#x27;Hi&#x27;</span>);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h1 id="回调函数"><a href="#回调函数" class="headerlink" title="回调函数"></a>回调函数</h1><p>回调函数指一个函数A作为参数传递给一个函数B，然后在B的函数体内调用函数A，称A为回调函数。其中，匿名函数常作为函数的参数传递，实现回调函数。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">      <span class="function"><span class="keyword">function</span> <span class="title">cal</span>(<span class="params">num1,num2,fn</span>)</span>&#123;</span><br><span class="line">          <span class="keyword">return</span> fn(num1,num2);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="built_in">console</span>.log(cal(<span class="number">10</span>,<span class="number">20</span>,<span class="function"><span class="keyword">function</span>(<span class="params">a,b</span>)</span>&#123;</span><br><span class="line">                  <span class="keyword">return</span> a+b;</span><br><span class="line">              &#125;</span><br><span class="line">           )</span><br><span class="line">      );</span><br><span class="line"></span><br><span class="line">      <span class="built_in">console</span>.log(cal(<span class="number">10</span>,<span class="number">20</span>,<span class="function"><span class="keyword">function</span>(<span class="params">a,b</span>)</span>&#123;</span><br><span class="line">                  <span class="keyword">return</span> a*b;</span><br><span class="line">              &#125;</span><br><span class="line">           )</span><br><span class="line">      );</span><br><span class="line">  &lt;/script&gt;</span><br></pre></td></tr></table></figure><h1 id="闭包函数"><a href="#闭包函数" class="headerlink" title="闭包函数"></a>闭包函数</h1><p>JavaScript中内部函数可引用外部函数的变量，但是在函数外部则不能访问函数的内部变量和嵌套函数，此时就需要使用”闭包“。<br>”闭包“指有权访问另一函数作用域内变量(局部变量)的函数。它主要的用途是以下两点：</p><ol><li>可以在函数外部读取函数内部的变量</li><li>可以让变量的值始终保持在内存中</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">var</span> times=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">var</span> c=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> ++times;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">return</span> c;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> count=fn();  <span class="comment">//保存fn()返回的函数，此时count就是一个闭包</span></span><br><span class="line"><span class="built_in">console</span>.log(count());</span><br><span class="line"><span class="built_in">console</span>.log(count());</span><br><span class="line"><span class="built_in">console</span>.log(count());</span><br><span class="line"><span class="built_in">console</span>.log(count());</span><br><span class="line"><span class="built_in">console</span>.log(count());</span><br><span class="line"><span class="comment">//使用闭包函数实现了在全局作用域中访问局部变量times，并让其始终存储在内存中</span></span><br><span class="line"><span class="comment">//运行结果：1，2，3，4，5</span></span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;函数&quot;&gt;&lt;a href=&quot;#函数&quot; class=&quot;headerlink&quot; title=&quot;函数&quot;&gt;&lt;/a&gt;函数&lt;/h1&gt;&lt;p&gt;函数封装一段完成特定功能的代码。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;</summary>
      
    
    
    
    <category term="编程语言" scheme="http://xiaoliblog.cn/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    <category term="JavaScript" scheme="http://xiaoliblog.cn/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/JavaScript/"/>
    
    
    <category term="JavaScript" scheme="http://xiaoliblog.cn/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript🌞数组</title>
    <link href="http://xiaoliblog.cn/2021/01/15/%E5%89%8D%E7%AB%AF/JavaScript/JavaScript_%E6%95%B0%E7%BB%84/"/>
    <id>http://xiaoliblog.cn/2021/01/15/%E5%89%8D%E7%AB%AF/JavaScript/JavaScript_%E6%95%B0%E7%BB%84/</id>
    <published>2021-01-15T03:34:29.945Z</published>
    <updated>2021-01-15T05:29:03.070Z</updated>
    
    <content type="html"><![CDATA[<h1 id="创建数组"><a href="#创建数组" class="headerlink" title="创建数组"></a>创建数组</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 元素值类型为字符串</span></span><br><span class="line"><span class="keyword">var</span> area = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="string">&#x27;Beijing&#x27;</span>, <span class="string">&#x27;Shanghai&#x27;</span>, <span class="string">&#x27;Shenzhen&#x27;</span>);</span><br><span class="line"><span class="comment">// 元素值类型为数值型</span></span><br><span class="line"><span class="keyword">var</span> score = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="number">56</span>, <span class="number">68</span>, <span class="number">98</span>, <span class="number">44</span>);</span><br><span class="line"><span class="comment">// 元素值类型为混合型</span></span><br><span class="line"><span class="keyword">var</span> mix = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="number">123</span>, <span class="string">&#x27;abc&#x27;</span>, <span class="literal">null</span>, <span class="literal">true</span>, <span class="literal">undefined</span>);</span><br><span class="line"><span class="comment">// 空数组</span></span><br><span class="line"><span class="keyword">var</span> arr1 = <span class="keyword">new</span> <span class="built_in">Array</span>();   或    <span class="keyword">var</span> arr2 = <span class="keyword">new</span> <span class="built_in">Array</span>;</span><br><span class="line"><span class="comment">//使用“[]”创建数组</span></span><br><span class="line"><span class="keyword">var</span> weather = [<span class="string">&#x27;wind&#x27;</span>, <span class="string">&#x27;fine&#x27;</span>]; </span><br><span class="line"><span class="keyword">var</span> empty = [];       </span><br></pre></td></tr></table></figure><h1 id="获取数组长度"><a href="#获取数组长度" class="headerlink" title="获取数组长度"></a>获取数组长度</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取数组长度</span></span><br><span class="line"><span class="keyword">var</span> area = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="string">&#x27;Beijing&#x27;</span>, <span class="string">&#x27;Shanghai&#x27;</span>, <span class="string">&#x27;Shenzhen&#x27;</span>);</span><br><span class="line"><span class="built_in">console</span>.log(area.length);</span><br><span class="line"><span class="comment">// 修改数组长度</span></span><br><span class="line"><span class="keyword">var</span> area = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="string">&#x27;Beijing&#x27;</span>, <span class="string">&#x27;Shanghai&#x27;</span>, <span class="string">&#x27;Shenzhen&#x27;</span>);</span><br><span class="line">area.length = <span class="number">5</span>;     <span class="built_in">console</span>.log(area);</span><br><span class="line">area.length = <span class="number">1</span>;      <span class="built_in">console</span>.log(area);</span><br></pre></td></tr></table></figure><h1 id="数组的遍历"><a href="#数组的遍历" class="headerlink" title="数组的遍历"></a>数组的遍历</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 元素值类型为字符串</span></span><br><span class="line"><span class="keyword">var</span> area = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="string">&#x27;Beijing&#x27;</span>, <span class="string">&#x27;Shanghai&#x27;</span>, <span class="string">&#x27;Shenzhen&#x27;</span>);</span><br><span class="line"><span class="comment">// 遍历</span></span><br><span class="line"><span class="function"><span class="title">for</span>(<span class="params"><span class="keyword">var</span> i=<span class="number">0</span>;i&lt;area.length;i++</span>)</span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(area[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">for</span>(<span class="params"><span class="keyword">var</span>  i  <span class="keyword">in</span> area</span>)</span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(area[i]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="数组元素的添加与删除"><a href="#数组元素的添加与删除" class="headerlink" title="数组元素的添加与删除"></a>数组元素的添加与删除</h1><ul><li><strong>添加数组元素</strong><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="string">&#x27;Asa&#x27;</span>,<span class="string">&#x27;Taylor&#x27;</span>];</span><br><span class="line">arr[<span class="number">2</span>] = <span class="string">&#x27;Tom&#x27;</span>;</span><br><span class="line">arr[<span class="number">3</span>] =  <span class="string">&#x27;Jack&#x27;</span>;</span><br><span class="line"><span class="built_in">console</span>.log(arr); </span><br></pre></td></tr></table></figure></li><li><strong>修改数组元素</strong><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;d&#x27;</span>];</span><br><span class="line">arr[<span class="number">2</span>] = <span class="number">123</span>;</span><br><span class="line">arr[<span class="number">3</span>] = <span class="number">456</span>;</span><br><span class="line"><span class="built_in">console</span>.log(arr);</span><br></pre></td></tr></table></figure></li><li><strong>元素的删除</strong><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> stu = [<span class="string">&#x27;Tom&#x27;</span>, <span class="string">&#x27;Jimmy&#x27;</span>, <span class="string">&#x27;Lucy&#x27;</span>];</span><br><span class="line"><span class="built_in">console</span>.log(stu);</span><br><span class="line"><span class="comment">// 输出结果：(3) [&quot;Tom&quot;, &quot;Jimmy&quot;, &quot;Lucy&quot;]</span></span><br><span class="line"><span class="keyword">delete</span> stu[<span class="number">1</span>];  <span class="comment">// 删除数组中第2个元素</span></span><br><span class="line"><span class="built_in">console</span>.log(stu);</span><br><span class="line"><span class="comment">// 输出结果：(3) [&quot;Tom&quot;, empty, &quot;Lucy&quot;]</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="二维数组"><a href="#二维数组" class="headerlink" title="二维数组"></a>二维数组</h1><ul><li><strong>创建二维数组</strong><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 使用Array对象创建数组</span></span><br><span class="line"><span class="keyword">var</span> info = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="keyword">new</span> <span class="built_in">Array</span>(<span class="string">&#x27;Tom&#x27;</span>, <span class="number">13</span>, <span class="number">155</span>),<span class="keyword">new</span> <span class="built_in">Array</span>(<span class="string">&#x27;Lucy&#x27;</span>, <span class="number">11</span>, <span class="number">152</span>)  );</span><br><span class="line"><span class="comment">// 使用“[]”创建数组</span></span><br><span class="line"><span class="keyword">var</span> num = [[<span class="number">1</span>, <span class="number">3</span>], [<span class="number">2</span>, <span class="number">4</span>]];</span><br></pre></td></tr></table></figure></li><li><strong>遍历二维数组</strong><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 使用“[]”创建数组</span></span><br><span class="line"><span class="keyword">var</span> num = [[<span class="number">1</span>, <span class="number">3</span>], [<span class="number">2</span>, <span class="number">4</span>]];</span><br><span class="line"><span class="comment">//遍历数组</span></span><br><span class="line"><span class="function"><span class="title">for</span>(<span class="params"><span class="keyword">var</span> i  <span class="keyword">in</span> num</span>)</span>&#123;</span><br><span class="line"> <span class="function"><span class="title">for</span>(<span class="params"><span class="keyword">var</span>  j  <span class="keyword">in</span>   num[i]</span>)</span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(num[i][j]));</span><br><span class="line">      &#125;&#125;</span><br></pre></td></tr></table></figure></li></ul><h1 id="常见数组方法"><a href="#常见数组方法" class="headerlink" title="常见数组方法"></a>常见数组方法</h1><ul><li> <strong>栈和队列方法</strong></li></ul><table><thead><tr><th>方法名称</th><th>功能描述</th></tr></thead><tbody><tr><td>push()</td><td>将一个或多个元素添加到数组的末尾，并返回数组的新长度。</td></tr><tr><td>unshift()</td><td>将一个或多个元素添加到数组的开头，并返回数组的新长度。</td></tr><tr><td>pop()</td><td>从数组的末尾移出并返回一个元素，若是空数组则返回undefined。</td></tr><tr><td>shift()</td><td>从数组的开头移出并返回一个元素，若是空数组则返回undefined。</td></tr></tbody></table><div class="note success flat"><p>push()和unshift()方法的返回值是新数组的长度。<br>pop()和shift()方法返回的是移出的数组元素。</p></div><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>];</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;原数组：&quot;</span> + arr);</span><br><span class="line"><span class="keyword">var</span> last = arr.pop();</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;末尾元素：&quot;</span> + last + <span class="string">&quot;,移除后数组：&quot;</span> + arr);</span><br><span class="line"><span class="keyword">var</span> first = arr.shift();</span><br><span class="line">arr.push(<span class="number">5</span>);</span><br><span class="line">arr.unshift(<span class="number">0</span>);</span><br></pre></td></tr></table></figure><ul><li><strong>检索方法</strong></li></ul><table><thead><tr><th>方法名称</th><th>功能描述</th></tr></thead><tbody><tr><td>includes()</td><td>用于确定数组中是否含有某个元素，含有返回true，否则返回false。</td></tr><tr><td>Array.isArray()</td><td>用于确定传递的值是否是一个 Array，是返回true，不是返回false。</td></tr><tr><td>indexOf()</td><td>返回在数组中可以找到给定值的第一个索引，如果不存在，则返回-1</td></tr><tr><td>lastIndexOf()</td><td>返回指定元素在数组中的最后一个的索引，如果不存在则返回 -1</td></tr></tbody></table><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;</span> <span class="meta-string">&quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.w3.org/1999/xhtml&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Type&quot;</span> <span class="attr">content</span>=<span class="string">&quot;text/html; charset=utf-8&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>无标题文档<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--首先：编写HTML页面，准备3个下拉菜单--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;sheng&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;-1&quot;</span>&gt;</span>请选择<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;shi&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;qu&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">select</span>&gt;</span>        </span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="comment">//省份数组</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> shengArr=[<span class="string">&#x27;上海&#x27;</span>, <span class="string">&#x27;江苏&#x27;</span>, <span class="string">&#x27;河北&#x27;</span>];</span></span><br><span class="line"><span class="javascript"><span class="comment">//市数组</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> shiArr = [</span></span><br><span class="line"><span class="javascript"> [<span class="string">&#x27;上海市&#x27;</span>],</span></span><br><span class="line"><span class="javascript"> [<span class="string">&#x27;苏州市&#x27;</span>, <span class="string">&#x27;南京市&#x27;</span>, <span class="string">&#x27;扬州市&#x27;</span>],</span></span><br><span class="line"><span class="javascript"> [<span class="string">&#x27;石家庄&#x27;</span>, <span class="string">&#x27;秦皇岛&#x27;</span>, <span class="string">&#x27;张家口&#x27;</span>]];</span></span><br><span class="line"><span class="javascript"> <span class="comment">//区数组 </span></span></span><br><span class="line"><span class="javascript"> <span class="keyword">var</span> quArr=[</span></span><br><span class="line">        [</span><br><span class="line"><span class="javascript">          [<span class="string">&#x27;黄浦区&#x27;</span>, <span class="string">&#x27;静安区&#x27;</span>, <span class="string">&#x27;长宁区&#x27;</span>, <span class="string">&#x27;浦东区&#x27;</span>]</span></span><br><span class="line">        ], [</span><br><span class="line"><span class="javascript">          [<span class="string">&#x27;虎丘区&#x27;</span>, <span class="string">&#x27;吴中区&#x27;</span>, <span class="string">&#x27;相城区&#x27;</span>, <span class="string">&#x27;姑苏区&#x27;</span>, <span class="string">&#x27;吴江区&#x27;</span>],</span></span><br><span class="line"><span class="javascript">          [<span class="string">&#x27;玄武区&#x27;</span>, <span class="string">&#x27;秦淮区&#x27;</span>, <span class="string">&#x27;建邺区&#x27;</span>, <span class="string">&#x27;鼓楼区&#x27;</span>, <span class="string">&#x27;浦口区&#x27;</span>],</span></span><br><span class="line"><span class="javascript">          [<span class="string">&#x27;邗江区&#x27;</span>, <span class="string">&#x27;广陵区&#x27;</span>, <span class="string">&#x27;江都区&#x27;</span>]</span></span><br><span class="line">        ], [</span><br><span class="line"><span class="javascript">          [<span class="string">&#x27;长安区&#x27;</span>, <span class="string">&#x27;桥西区&#x27;</span>, <span class="string">&#x27;新华区&#x27;</span>, <span class="string">&#x27;井陉矿区&#x27;</span>],</span></span><br><span class="line"><span class="javascript">          [<span class="string">&#x27;海港区&#x27;</span>, <span class="string">&#x27;山海关区&#x27;</span>, <span class="string">&#x27;北戴河区&#x27;</span>, <span class="string">&#x27;抚宁区&#x27;</span>],</span></span><br><span class="line"><span class="javascript">          [<span class="string">&#x27;桥东区&#x27;</span>, <span class="string">&#x27;桥西区&#x27;</span>, <span class="string">&#x27;宣化区&#x27;</span>, <span class="string">&#x27;下花园区&#x27;</span>]</span></span><br><span class="line">        ]</span><br><span class="line"> ];</span><br><span class="line"><span class="javascript"> <span class="comment">//1. 定义函数，将data数组中的值，添加到obj这个select中</span></span></span><br><span class="line"><span class="javascript"> <span class="function"><span class="keyword">function</span> <span class="title">createOption</span>(<span class="params">obj,data</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="function"><span class="title">for</span>(<span class="params"><span class="keyword">var</span> i <span class="keyword">in</span> data</span>)</span>&#123;  <span class="comment">//遍历数组</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> op = <span class="keyword">new</span> Option(data[i],i); <span class="comment">//创建Option，data[i]为显示的文本，i为value</span></span></span><br><span class="line"><span class="javascript">obj.options.add(op); <span class="comment">//将Option（op）添加到Select（obj）</span></span></span><br><span class="line">&#125; </span><br><span class="line"> &#125;</span><br><span class="line"><span class="javascript"> <span class="comment">//2.调用函数，设置省份下拉菜单的值</span></span></span><br><span class="line"><span class="javascript"> <span class="keyword">var</span> sheng = <span class="built_in">document</span>.getElementById(<span class="string">&quot;sheng&quot;</span>);</span></span><br><span class="line"> createOption(sheng,shengArr);</span><br><span class="line"><span class="javascript"> <span class="comment">//3.调用函数，设置市下拉菜单的值 -- 联动</span></span></span><br><span class="line"><span class="javascript"> <span class="keyword">var</span> shi = <span class="built_in">document</span>.getElementById(<span class="string">&quot;shi&quot;</span>);</span></span><br><span class="line"><span class="javascript"> sheng.onchange=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="comment">//清空市原有数据</span></span></span><br><span class="line">shi.options.length = 0;</span><br><span class="line"><span class="javascript"><span class="comment">//调用函数，设置市下拉菜单，注意下标为当前省的value</span></span></span><br><span class="line">createOption(shi,shiArr[sheng.value]); </span><br><span class="line"><span class="javascript"><span class="comment">//5.省修改时，市修改（代码如上），区也应该随着修改，即需要调用第四步的函数</span></span></span><br><span class="line"><span class="javascript"><span class="function"><span class="title">if</span>(<span class="params">sheng.value!=-<span class="number">1</span></span>)</span>&#123;  <span class="comment">//编码严谨，考虑省选择的“请选择”，此时：区清空</span></span></span><br><span class="line">shi.onchange();</span><br><span class="line"><span class="javascript">&#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line">qu.options.length=0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"> &#125;</span><br><span class="line"><span class="javascript"> <span class="comment">//4.调用函数，设置区下拉菜单的值 -- 联动</span></span></span><br><span class="line"><span class="javascript"> <span class="keyword">var</span> qu = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;qu&#x27;</span>);</span></span><br><span class="line"><span class="javascript"> shi.onchange=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="comment">//清空区原有数据</span></span></span><br><span class="line">qu.options.length = 0;</span><br><span class="line"><span class="javascript"><span class="comment">//调用函数，设置区下拉菜单，注意下标为：一维sheng.value，二维shi.value</span></span></span><br><span class="line">createOption(qu,quArr[sheng.value][shi.value]); </span><br><span class="line"> &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/21/f6cf616aa5f5f1adb55466e6efc8449c.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;创建数组&quot;&gt;&lt;a href=&quot;#创建数组&quot; class=&quot;headerlink&quot; title=&quot;创建数组&quot;&gt;&lt;/a&gt;创建数组&lt;/h1&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter</summary>
      
    
    
    
    <category term="编程语言" scheme="http://xiaoliblog.cn/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    <category term="JavaScript" scheme="http://xiaoliblog.cn/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/JavaScript/"/>
    
    
    <category term="JavaScript" scheme="http://xiaoliblog.cn/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript🌞语法基础</title>
    <link href="http://xiaoliblog.cn/2021/01/15/%E5%89%8D%E7%AB%AF/JavaScript/JavaScript_%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/"/>
    <id>http://xiaoliblog.cn/2021/01/15/%E5%89%8D%E7%AB%AF/JavaScript/JavaScript_%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/</id>
    <published>2021-01-15T03:31:42.349Z</published>
    <updated>2021-01-15T05:29:09.270Z</updated>
    
    <content type="html"><![CDATA[<h1 id="JavaScript快速入门"><a href="#JavaScript快速入门" class="headerlink" title="JavaScript快速入门"></a>JavaScript快速入门</h1><ul><li>网站推荐：<a href="https://www.liaoxuefeng.com/wiki/1022910821149312">JavaSript教程</a>  || <a href="https://www.w3school.com.cn/">W3school</a></li><li>JavaScript是一种运行在浏览器中的解释型的编程语言。</li><li>在Web世界里，只有JavaScript能跨平台、跨浏览器驱动网页，与用户交互.</li><li>JavaScript内嵌于HTML网页中,通过浏览器内置的JavaScript引擎直接编译，使静态转变成支持用户交互的页面程序。</li></ul><table><thead><tr><th align="center">语言</th><th align="center">作用</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">HTML</td><td align="center">结构</td><td align="center">从语义的角度，描述页面结构</td></tr><tr><td align="center">CSS</td><td align="center">样式</td><td align="center">从审美的角度，美化页面</td></tr><tr><td align="center">JavaScript</td><td align="center">行为</td><td align="center">从交互的角度，提升用户体验</td></tr></tbody></table><ul><li>JavaScript是脚本语言<br><strong>脚本(Script)就是一条条的文本命令，按照程序流程执行</strong>。常见脚本语言有     JavaScript,VBScript,Perl,PHP,Python等,而C,C++,Java,C#属于非脚本语言。<br>非脚本语言需要编译、链接，生成独立的可执行文件后才能运行。<br>脚本语言依赖于解释器，只在被调用时自动进行解释或调用。</li><li>JavaScript可以跨平台<br>JavaScript语言不依赖操作系统，只需要浏览器的支持。</li><li>JavaScript支持面向对象</li></ul><h1 id="开发工具"><a href="#开发工具" class="headerlink" title="开发工具"></a>开发工具</h1><ul><li>JavaScript开发工具主要包括浏览器和代码编译器两种软件。</li><li>浏览器用于执行、调试代码，代码编译器用于编写代码。</li><li>种类繁多的浏览器只需要了解其内核就能对其有一个清晰的归类。</li><li>浏览器内核分两部分：排版引擎和Javascript引擎。</li><li>sublime-text编译工具快捷键<ol><li>Ctrl + N，新建一个文档；</li><li>Ctrl + Shift + P，打开命令模式，再输入 sshtml 进行模糊匹配，将语法切换到html模式；</li><li>输入  !，再按下Tab键或者Ctrl + E ，就能快速打开HTML5的整体结构。</li></ol></li></ul><h1 id="引入方式"><a href="#引入方式" class="headerlink" title="引入方式"></a>引入方式</h1><ul><li><strong>嵌入式</strong><br>直接编写在HTML文件中</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span></span><br><span class="line">JavaScript语句</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li> <strong>外链式</strong><br>保存在一个单独的文件中，用“js”作为文件扩展名,最好放在body标签的底部，可以减少对整个页面的下载影响</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;js/test.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>行内式</strong><br>将Javascript代码作为HTML标签的属性值使用</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:alert(&#x27;Hello&#x27;);&quot;</span>&gt;</span>test<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>JavaScript异步加载<br>无论使用内嵌式还是外链式，页面的下载和渲染都会暂停，等待脚本执行完成后才会继续。为了降低阻塞问题对页面造成的影响，可以使用可选属性：async和defer,添加后，即使文件下载失败，也不会阻塞javascript代码的执行</p></blockquote><ul><li><strong>async</strong><br>async用于异步加载，即先下载文件，不阻塞其他代码执行，下载完成后再执行</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;http://js.test/file.js&quot;</span> <span class="attr">async</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>defer</strong><br>defer用于延后执行，即先下载文件，直到网页加载完成后再执行</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;http://js.test/file.js&quot;</span> <span class="attr">defer</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="输出语句"><a href="#输出语句" class="headerlink" title="输出语句"></a>输出语句</h1><ul><li><strong>alert()</strong><br>弹出一个警告框</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alert(<span class="string">&quot;提示信息&quot;</span>);</span><br></pre></td></tr></table></figure><ul><li> <strong>console.log()</strong><br>在浏览器的控制台中输出内容(按F12)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;你好！&#x27;</span>);</span><br></pre></td></tr></table></figure><ul><li> <strong>document.write()</strong><br>在HTML文档页面输出内容，也可以输出标签</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.write(<span class="string">&#x27;&lt;b&gt;加粗文本&lt;/b&gt;&#x27;</span>);</span><br></pre></td></tr></table></figure><ul><li><strong>prompt()</strong><br>弹出一个输入框</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> value=prompt(<span class="string">&quot;提示输入&quot;</span>,<span class="string">&quot;默认值&quot;</span>);</span><br></pre></td></tr></table></figure><h1 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h1><ul><li><strong>布尔型</strong></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> flag=<span class="literal">true</span>;</span><br></pre></td></tr></table></figure><ul><li><p><strong>数值型(Number)</strong><br>javaScript不区分整数和浮点数，统一用Number表示</p></li><li><p><strong>字符型(String)</strong><br>字符串是以单引号’或双引号”括起来的任意文本</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> color=<span class="string">&#x27;&quot;red&quot;blue&#x27;</span>;</span><br></pre></td></tr></table></figure></li><li><p><strong>空型(Null)</strong><br>空型只有一个特殊的null值，用于表示一个不存在的或无效的对象或地址。</p></li><li><p><strong>未定义型(Undefined)</strong><br>未定义型只有一个特殊的undefined值，用于声明的变量还未被初始化时，变量的默认值为undefined。</p></li></ul><blockquote><p>undefined表示没有为变量设置值，null表示变量（对象或地址）不存在或无效。</p></blockquote><ul><li><strong>转布尔型</strong><br>Boolean()函数将如何非空字符串和非零的数组转为true，将空字符串、0、NaN、undefined和null转换为false</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> con=prompt(); <span class="comment">//保存用户的输出内容</span></span><br><span class="line"><span class="function"><span class="title">if</span>(<span class="params"><span class="built_in">Boolean</span>(con)</span>)</span>&#123;</span><br><span class="line"><span class="built_in">document</span>.write(<span class="string">&#x27;已输入内容&#x27;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="built_in">document</span>.write(<span class="string">&#x27;未输入内容&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Boolean</span>(con));</span><br></pre></td></tr></table></figure><ul><li><strong>转数值型</strong><br>Number()、parseInt( )、parseFloat()，isNaN()表示不是一个数值</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取用户的输入，完成自动求和</span></span><br><span class="line"><span class="keyword">var</span> num1=prompt(<span class="string">&#x27;输入求和的第1个数：&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> num2=prompt(<span class="string">&#x27;输入求和的第1个数：&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">isNaN</span>(num1)||<span class="built_in">isNaN</span>(num2))&#123;  <span class="comment">//判断出不是数值型 返回ture</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;非法数字&#x27;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(num1+num2);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>转字符型</strong><br>String()、toString()</li></ul><h2 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h2><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/21/cca461f12daf99245406348455b0c6c3.png"></p><h1 id="流程控制"><a href="#流程控制" class="headerlink" title="流程控制"></a>流程控制</h1><h2 id="选择结构"><a href="#选择结构" class="headerlink" title="选择结构"></a>选择结构</h2><ul><li><p><strong>单分支结构</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//单分支</span></span><br><span class="line"><span class="function"><span class="title">if</span>(<span class="params">判断条件</span>)</span>&#123;</span><br><span class="line">代码段</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><strong>双分支结构</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//双分支</span></span><br><span class="line"><span class="function"><span class="title">if</span>(<span class="params">判断条件</span>)</span>&#123;</span><br><span class="line">代码段<span class="number">1</span></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">代码段<span class="number">2</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><strong>多分支结构</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//多分支</span></span><br><span class="line"><span class="function"><span class="title">if</span>(<span class="params">条件<span class="number">1</span></span>)</span>&#123;</span><br><span class="line">代码段<span class="number">1</span>;</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="function"><span class="title">if</span>(<span class="params">条件<span class="number">2</span></span>)</span>&#123;</span><br><span class="line">代码段<span class="number">2</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">switch</span>(<span class="params">表达式</span>)</span>&#123;</span><br><span class="line"><span class="keyword">case</span> 值<span class="number">1</span>:</span><br><span class="line">代码段<span class="number">1</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> 值<span class="number">1</span>:</span><br><span class="line">代码段<span class="number">1</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">...</span><br><span class="line"><span class="keyword">default</span>: </span><br><span class="line">代码段n;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="循环结构"><a href="#循环结构" class="headerlink" title="循环结构"></a>循环结构</h2><ul><li><p><strong>while循环</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">while</span>(<span class="params">循环条件</span>)</span>&#123;</span><br><span class="line">循环体</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><strong>do…while循环</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">do</span>&#123;</span><br><span class="line">循环体</span><br><span class="line">&#125;<span class="keyword">while</span>(循环条件);</span><br></pre></td></tr></table></figure></li><li><p><strong>for循环</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">for</span>(<span class="params">初始条件;循环条件;迭代条件</span>)</span>&#123;</span><br><span class="line">代码块</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><blockquote><p>在ES6中，不仅可以使用var定义变量，还可以使用let声明一个块级作用域(可以理解为{}之间的代码)的本地变量，let关键字在快级作用域内不能重复定义同名的变量，该变量仅在块级作用范围内有效。</p></blockquote><ul><li><strong>跳转语句</strong><br>  break语句和continue语句</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">//实现九九乘法表</span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.write(<span class="string">&quot;&lt;h1&gt;九九乘法表&lt;/h1&gt;&quot;</span>)</span></span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.write(<span class="string">&quot;&lt;table border=1px&gt;&quot;</span>)</span></span><br><span class="line"><span class="javascript"><span class="function"><span class="title">for</span>(<span class="params"><span class="keyword">var</span> i=<span class="number">1</span>;i&lt;<span class="number">10</span>;i++</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.write(<span class="string">&quot;&lt;tr&gt;&quot;</span>)</span></span><br><span class="line"><span class="javascript"><span class="function"><span class="title">for</span>(<span class="params"> <span class="keyword">var</span> j=<span class="number">1</span>;j&lt;i;j++</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.write(<span class="string">&quot;&lt;td&gt;&quot;</span>)</span></span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.write(j+<span class="string">&quot;*&quot;</span>+i+<span class="string">&quot;=&quot;</span>+i*j);</span></span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.write(<span class="string">&quot;&lt;/td&gt;&quot;</span>)</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.write(<span class="string">&quot;&lt;/tr&gt;&quot;</span>)</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;JavaScript快速入门&quot;&gt;&lt;a href=&quot;#JavaScript快速入门&quot; class=&quot;headerlink&quot; title=&quot;JavaScript快速入门&quot;&gt;&lt;/a&gt;JavaScript快速入门&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;网站推荐：&lt;a href=&quot;ht</summary>
      
    
    
    
    <category term="编程语言" scheme="http://xiaoliblog.cn/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    <category term="JavaScript" scheme="http://xiaoliblog.cn/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/JavaScript/"/>
    
    
    <category term="JavaSctipt" scheme="http://xiaoliblog.cn/tags/JavaSctipt/"/>
    
  </entry>
  
  <entry>
    <title>JavaWeb🌍分页功能</title>
    <link href="http://xiaoliblog.cn/2021/01/15/%E5%89%8D%E7%AB%AF/JavaWeb/JavaWeb_%E5%88%86%E9%A1%B5%E5%8A%9F%E8%83%BD/"/>
    <id>http://xiaoliblog.cn/2021/01/15/%E5%89%8D%E7%AB%AF/JavaWeb/JavaWeb_%E5%88%86%E9%A1%B5%E5%8A%9F%E8%83%BD/</id>
    <published>2021-01-15T03:26:03.716Z</published>
    <updated>2021-01-15T05:26:22.947Z</updated>
    
    <content type="html"><![CDATA[<h1 id="分页功能"><a href="#分页功能" class="headerlink" title="分页功能"></a>分页功能</h1><p><a href="https://github.com/lzyblog/MyCode/tree/main/%E5%88%86%E9%A1%B5%E5%8A%9F%E8%83%BD/PageDemo">项目GitHub源码分享</a>，源码下载后，需要修改对应的数据库和表名！</p><ul><li>对于MySQL8.*以上可能无法运行，需要进行相关操作<ol><li>换成最近MySQL驱动包<ol start="2"><li>url地址增加 参数 serverTimezone=UTC</li></ol></li><li> url地址 ；不识别，需要改成 &amp;</li><li>mysql驱动包改com.mysql.cj.jdbc.Driver</li><li>设置MySQL时区： set global time_zone = ‘+8:00’;</li></ol></li></ul><p>项目总览<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/27/2cddea7f2b2e0019fc85569622f2c570.png"><br>数据库</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">database</span> student;</span><br><span class="line"><span class="keyword">use</span> student;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> <span class="keyword">user</span>(<span class="keyword">id</span> <span class="built_in">int</span> primary <span class="keyword">key</span> auto_increment,<span class="keyword">name</span> <span class="built_in">varchar</span>(<span class="number">255</span>),<span class="keyword">password</span> <span class="built_in">varchar</span>(<span class="number">255</span>));</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//封装了页面Page信息</span></span><br><span class="line"><span class="keyword">package</span> com.cheng.Bean;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Page</span> </span>&#123;</span><br><span class="line"><span class="comment">// 页码索引</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> pageIndex;</span><br><span class="line"><span class="comment">// 每页的容量</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> pageSize;</span><br><span class="line"><span class="comment">//  总页数</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> pageCount;</span><br><span class="line"><span class="comment">// 分页后的数据集合</span></span><br><span class="line"><span class="keyword">private</span> List&lt;?&gt; dataList;</span><br><span class="line"><span class="comment">// 数据总条数</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> total;</span><br><span class="line"><span class="comment">// 准备一个集合显示分页条数</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span>[] bar;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getPageIndex</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> pageIndex;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPageIndex</span><span class="params">(<span class="keyword">int</span> pageIndex)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.pageIndex = pageIndex;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getPageSize</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> pageSize;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPageSize</span><span class="params">(<span class="keyword">int</span> pageSize)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.pageSize = pageSize;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getPageCount</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> pageCount;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPageCount</span><span class="params">(<span class="keyword">int</span> pageCount)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.pageCount = pageCount;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> List&lt;?&gt; getDataList() &#123;</span><br><span class="line"><span class="keyword">return</span> dataList;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setDataList</span><span class="params">(List&lt;?&gt; dataList)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.dataList = dataList;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getTotal</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> total;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setTotal</span><span class="params">(<span class="keyword">int</span> total)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.total = total;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">int</span>[] getBar() &#123;</span><br><span class="line"><span class="keyword">return</span> bar;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setBar</span><span class="params">(<span class="keyword">int</span>[] bar)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.bar = bar;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//封装了用户User的信息</span></span><br><span class="line"><span class="keyword">package</span> com.cheng.Bean;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> id ;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> String name  ;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> String password  ;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> id;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.id = id;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.name = name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getPassword</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> password;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPassword</span><span class="params">(String password)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.password = password;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//PageDao页面DAO接口</span></span><br><span class="line"><span class="keyword">package</span> com.cheng.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cheng.Bean.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">PageDao</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getCount</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">selectUserByPage</span><span class="params">(<span class="keyword">int</span> begin, <span class="keyword">int</span> pageSize)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//UserDao用户DAO接口</span></span><br><span class="line"><span class="keyword">package</span> com.cheng.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cheng.Bean.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserDao</span> </span>&#123;</span><br><span class="line"><span class="comment">////檢查用戶名和密碼是否匹配</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">selectPasswordByName</span><span class="params">(User user)</span> </span>;</span><br><span class="line"><span class="comment">//插入数据</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Boolean <span class="title">insert</span><span class="params">(User user)</span> <span class="keyword">throws</span> SQLException </span>;</span><br><span class="line"><span class="comment">// 根据用户名称返回对象</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> User <span class="title">selectUserByName</span><span class="params">(String name)</span> <span class="keyword">throws</span> SQLException </span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//PageDaoImpl 页面DAO实现类</span></span><br><span class="line"><span class="keyword">package</span> com.cheng.daoImpl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.dbutils.QueryRunner;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.dbutils.handlers.BeanListHandler;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.dbutils.handlers.ScalarHandler;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cheng.Bean.User;</span><br><span class="line"><span class="keyword">import</span> com.cheng.dao.PageDao;</span><br><span class="line"><span class="keyword">import</span> com.cheng.utils.C3p0Utils;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.bcel.internal.generic.NEW;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PageDaoImpl</span> <span class="keyword">implements</span> <span class="title">PageDao</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getCount</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> pageCount = <span class="number">0</span>;</span><br><span class="line"><span class="comment">// // 创建QueryRunner对象</span></span><br><span class="line">QueryRunner runner = <span class="keyword">new</span> QueryRunner(C3p0Utils.getDataSource());</span><br><span class="line"><span class="comment">// 写SQL语句</span></span><br><span class="line">String sql = <span class="string">&quot;select * from user&quot;</span>;</span><br><span class="line"><span class="comment">// 调用方法</span></span><br><span class="line">List&lt;User&gt; list = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">list = (List&lt;User&gt;) runner.query(sql,</span><br><span class="line">        <span class="keyword">new</span> BeanListHandler&lt;User&gt;(User.class));</span><br><span class="line">pageCount = list.size() ;</span><br><span class="line">&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> pageCount;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">selectUserByPage</span><span class="params">(<span class="keyword">int</span> begin, <span class="keyword">int</span> pageSize)</span> </span>&#123;</span><br><span class="line"><span class="comment">// 创建QueryRunner对象</span></span><br><span class="line">QueryRunner runner = <span class="keyword">new</span> QueryRunner(C3p0Utils.getDataSource());</span><br><span class="line"><span class="comment">// 写SQL语句</span></span><br><span class="line">String sql = <span class="string">&quot;select * from user limit ?, ?&quot;</span>;</span><br><span class="line"><span class="comment">// 调用方法</span></span><br><span class="line">List&lt;User&gt; list = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">list = (List&lt;User&gt;) runner.query(sql,</span><br><span class="line">        <span class="keyword">new</span> BeanListHandler&lt;User&gt;(User.class),<span class="keyword">new</span> Object[]&#123;begin, pageSize&#125;);</span><br><span class="line">&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> list;</span><br><span class="line">&#125;&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//UserDaoImpl 用户DAO接口实现类</span></span><br><span class="line"><span class="keyword">package</span> com.cheng.daoImpl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.commons.dbutils.QueryRunner;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.dbutils.handlers.BeanHandler;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cheng.Bean.User;</span><br><span class="line"><span class="keyword">import</span> com.cheng.dao.UserDao;</span><br><span class="line"><span class="keyword">import</span> com.cheng.utils.C3p0Utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserDaoImpl</span> <span class="keyword">implements</span> <span class="title">UserDao</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> User <span class="title">selectUserByName</span><span class="params">(String name)</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line"><span class="comment">// 创建QueryRunner对象</span></span><br><span class="line">QueryRunner runner = <span class="keyword">new</span> QueryRunner(C3p0Utils.getDataSource());</span><br><span class="line"><span class="comment">// 写SQL语句</span></span><br><span class="line">String sql = <span class="string">&quot;select * from user where name=?&quot;</span>;</span><br><span class="line"><span class="comment">// 调用方法</span></span><br><span class="line">User user = (User) runner.query(sql, <span class="keyword">new</span> BeanHandler(User.class), <span class="keyword">new</span> Object[] &#123; name &#125;);</span><br><span class="line"><span class="keyword">return</span> user;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Boolean <span class="title">insert</span><span class="params">(User user)</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line"><span class="comment">// 创建QueryRunner对象</span></span><br><span class="line">QueryRunner runner = <span class="keyword">new</span> QueryRunner(C3p0Utils.getDataSource());</span><br><span class="line"><span class="comment">// 写SQL语句</span></span><br><span class="line">String sql = <span class="string">&quot;insert into user (name,password) values (?,?)&quot;</span>;</span><br><span class="line"><span class="comment">// 调用方法</span></span><br><span class="line"><span class="keyword">int</span> num = runner.update(sql, <span class="keyword">new</span> Object[] &#123; user.getName(), user.getPassword() &#125;);</span><br><span class="line"><span class="keyword">if</span> (num &gt; <span class="number">0</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">selectPasswordByName</span><span class="params">(User user)</span> </span>&#123;</span><br><span class="line"><span class="comment">// 创建QueryRunner对象</span></span><br><span class="line">QueryRunner runner = <span class="keyword">new</span> QueryRunner(C3p0Utils.getDataSource());</span><br><span class="line"><span class="comment">// 写SQL语句</span></span><br><span class="line">String sql = <span class="string">&quot;select * from user where name=? and password=?&quot;</span>;</span><br><span class="line"><span class="comment">// 调用方法</span></span><br><span class="line">User user_ = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">user_ = (User) runner.query(sql, <span class="keyword">new</span> BeanHandler(User.class),user.getName(),user.getPassword());</span><br><span class="line">&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(user_!=<span class="keyword">null</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//PageService 页面业务接口</span></span><br><span class="line"><span class="keyword">package</span> com.cheng.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cheng.Bean.Page;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">PageService</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> Page <span class="title">findUserByPage</span><span class="params">(<span class="keyword">int</span> pageIndex)</span> </span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//UserService 用户业务接口</span></span><br><span class="line"><span class="keyword">package</span> com.cheng.service;</span><br><span class="line"><span class="keyword">import</span> com.cheng.Bean.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">registerUser</span><span class="params">(User st)</span> </span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> User <span class="title">findUserByName</span><span class="params">(String name)</span> </span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">login</span><span class="params">(User user)</span> </span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//PageServiceImpl 页面业务接口实现类</span></span><br><span class="line"><span class="keyword">package</span> com.cheng.serviceImpl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cheng.Bean.Page;</span><br><span class="line"><span class="keyword">import</span> com.cheng.Bean.User;</span><br><span class="line"><span class="keyword">import</span> com.cheng.dao.PageDao;</span><br><span class="line"><span class="keyword">import</span> com.cheng.daoImpl.PageDaoImpl;</span><br><span class="line"><span class="keyword">import</span> com.cheng.service.PageService;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PageServiceImpl</span> <span class="keyword">implements</span> <span class="title">PageService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Page <span class="title">findUserByPage</span><span class="params">(<span class="keyword">int</span> pageIndex)</span> </span>&#123;</span><br><span class="line">PageDao pageDao = <span class="keyword">new</span> PageDaoImpl() ;</span><br><span class="line"><span class="comment">// 1、total总记录数</span></span><br><span class="line"><span class="keyword">int</span> total = <span class="number">0</span>;</span><br><span class="line">List&lt;User&gt; dataList = <span class="keyword">null</span>;</span><br><span class="line">total = pageDao.getCount();</span><br><span class="line"><span class="comment">// 2、一页显示多少个数据</span></span><br><span class="line"><span class="keyword">int</span> pageSize = <span class="number">3</span>;</span><br><span class="line"><span class="comment">// 3、计算总页数</span></span><br><span class="line"><span class="keyword">int</span> pageCount = total % pageSize == <span class="number">0</span> ? (total / pageSize) : (total / pageSize) + <span class="number">1</span>;</span><br><span class="line">System.out.println(<span class="string">&quot;pageCount=&quot;</span>+pageCount);</span><br><span class="line"><span class="comment">// 当前页的开始检索的数据索引（start）为 （当前页码-1）*每页数据容量</span></span><br><span class="line">dataList = pageDao.selectUserByPage((pageIndex - <span class="number">1</span>) * pageSize, pageSize);</span><br><span class="line"><span class="comment">// 封装数据</span></span><br><span class="line">Page page = <span class="keyword">new</span> Page();</span><br><span class="line">page.setTotal(total);</span><br><span class="line">page.setPageCount(pageCount);</span><br><span class="line">page.setPageIndex(pageIndex);</span><br><span class="line">page.setDataList(dataList);</span><br><span class="line">page.setPageSize(pageSize);</span><br><span class="line"> </span><br><span class="line"><span class="keyword">return</span> page;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//UserService 用户业务接口实现类</span></span><br><span class="line"><span class="keyword">package</span> com.cheng.serviceImpl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cheng.Bean.User;</span><br><span class="line"><span class="keyword">import</span> com.cheng.dao.UserDao;</span><br><span class="line"><span class="keyword">import</span> com.cheng.daoImpl.UserDaoImpl;</span><br><span class="line"><span class="keyword">import</span> com.cheng.service.UserService;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">registerUser</span><span class="params">(User user)</span> </span>&#123;</span><br><span class="line"><span class="keyword">boolean</span> flag = <span class="keyword">false</span> ;</span><br><span class="line">UserDao stDao = <span class="keyword">new</span> UserDaoImpl() ;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">flag = stDao.insert(user) ;</span><br><span class="line">&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> flag;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> User <span class="title">findUserByName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">UserDao userDao = <span class="keyword">new</span> UserDaoImpl() ;</span><br><span class="line">User user = <span class="keyword">new</span> User() ;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">user = userDao.selectUserByName(name) ;</span><br><span class="line">&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> user;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">login</span><span class="params">(User user)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">UserDao userDao = <span class="keyword">new</span> UserDaoImpl() ;</span><br><span class="line">Boolean flag = userDao.selectPasswordByName(user);</span><br><span class="line"><span class="keyword">return</span> flag;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//loginServlet 登录请求信息页面</span></span><br><span class="line"><span class="keyword">package</span> com.cheng.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpSession;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cheng.Bean.User;</span><br><span class="line"><span class="keyword">import</span> com.cheng.service.UserService;</span><br><span class="line"><span class="keyword">import</span> com.cheng.serviceImpl.UserServiceImpl;</span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet(&quot;/loginServlet&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">loginServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">loginServlet</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">super</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">super</span>.destroy(); <span class="comment">// Just puts &quot;destroy&quot; string in log</span></span><br><span class="line"><span class="comment">// Put your code here</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.doPost(request, response);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">request.setCharacterEncoding(<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">User st = <span class="keyword">new</span> User();</span><br><span class="line">HttpSession session = request.getSession();</span><br><span class="line">UserService ss = <span class="keyword">new</span> UserServiceImpl();</span><br><span class="line">st.setName(request.getParameter(<span class="string">&quot;name&quot;</span>));</span><br><span class="line">st.setPassword(request.getParameter(<span class="string">&quot;password&quot;</span>));</span><br><span class="line"><span class="keyword">boolean</span> flag = ss.login(st);</span><br><span class="line"><span class="keyword">if</span>(!flag) &#123;</span><br><span class="line">session.setAttribute(<span class="string">&quot;msg&quot;</span>, <span class="string">&quot;Ture&quot;</span>);</span><br><span class="line">request.getRequestDispatcher(<span class="string">&quot;/msg.jsp&quot;</span>).forward(request, response);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">session.setAttribute(<span class="string">&quot;msg&quot;</span>, <span class="string">&quot;false&quot;</span>);</span><br><span class="line">request.getRequestDispatcher(<span class="string">&quot;/msg.jsp&quot;</span>).forward(request, response);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line"><span class="comment">// Put your code here</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//LogoutServlet 注销处理</span></span><br><span class="line"><span class="keyword">package</span> com.cheng.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpSession;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LogoutServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line">       </span><br><span class="line">   </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">LogoutServlet</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>();</span><br><span class="line">        <span class="comment">// TODO Auto-generated constructor stub</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">HttpSession session = request.getSession() ;</span><br><span class="line">session.removeAttribute(<span class="string">&quot;st&quot;</span>);</span><br><span class="line">response.sendRedirect(<span class="string">&quot;success.jsp&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">doGet(request, response);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//PageServlet 页面处理</span></span><br><span class="line"><span class="keyword">package</span> com.cheng.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cheng.Bean.Page;</span><br><span class="line"><span class="keyword">import</span> com.cheng.service.PageService;</span><br><span class="line"><span class="keyword">import</span> com.cheng.serviceImpl.PageServiceImpl;</span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet(&quot;/pageServlet&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PageServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line">       </span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"><span class="comment">// 接收页码</span></span><br><span class="line"><span class="keyword">int</span> pageIndex = Integer.parseInt(request.getParameter(<span class="string">&quot;pageIndex&quot;</span>));</span><br><span class="line">PageService productService = <span class="keyword">new</span> PageServiceImpl();</span><br><span class="line">Page page = productService.findUserByPage(pageIndex);</span><br><span class="line">request.setAttribute(<span class="string">&quot;page&quot;</span>, page);</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">request.getRequestDispatcher(<span class="string">&quot;/list.jsp&quot;</span>).forward(request, response);</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">doGet(request, response);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//registerServlet 注册处理</span></span><br><span class="line"><span class="keyword">package</span> com.cheng.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpSession;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cheng.Bean.User;</span><br><span class="line"><span class="keyword">import</span> com.cheng.service.UserService;</span><br><span class="line"><span class="keyword">import</span> com.cheng.serviceImpl.UserServiceImpl;</span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet(&quot;/registerServlet&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">registerServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">registerServlet</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">super</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">super</span>.destroy(); <span class="comment">// Just puts &quot;destroy&quot; string in log</span></span><br><span class="line"><span class="comment">// Put your code here</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.doPost(request, response);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">request.setCharacterEncoding(<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">User st = <span class="keyword">new</span> User();</span><br><span class="line">HttpSession session = request.getSession();</span><br><span class="line">UserService ss = <span class="keyword">new</span> UserServiceImpl();</span><br><span class="line">st.setName(request.getParameter(<span class="string">&quot;name&quot;</span>));</span><br><span class="line">st.setPassword(request.getParameter(<span class="string">&quot;password&quot;</span>));</span><br><span class="line">ss.registerUser(st);</span><br><span class="line">session.setAttribute(<span class="string">&quot;st&quot;</span>, st);</span><br><span class="line">request.getRequestDispatcher(<span class="string">&quot;/success.jsp&quot;</span>).forward(request, response);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line"><span class="comment">// Put your code here</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//validateServlet 验证处理</span></span><br><span class="line"><span class="keyword">package</span> com.cheng.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cheng.Bean.User;</span><br><span class="line"><span class="keyword">import</span> com.cheng.service.UserService;</span><br><span class="line"><span class="keyword">import</span> com.cheng.serviceImpl.UserServiceImpl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">validateServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">response.setCharacterEncoding(<span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">String name = request.getParameter(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">UserService us = <span class="keyword">new</span> UserServiceImpl();</span><br><span class="line">User user = us.findUserByName(name);</span><br><span class="line"><span class="keyword">if</span> (user != <span class="keyword">null</span>) &#123;</span><br><span class="line"><span class="comment">// 表示已经存在这个用户</span></span><br><span class="line">response.getWriter().print(<span class="string">&quot;&lt;font color=&#x27;red&#x27;&gt;用户名已经存在&lt;/font&gt; &quot;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">// 表示该用户不存在，可以注册</span></span><br><span class="line">response.getWriter().println(<span class="string">&quot;&lt;font color=&#x27;green&#x27;&gt;用户名可以使用&lt;/font&gt; &quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.doGet(request, response);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//创建C3p0类</span></span><br><span class="line"><span class="keyword">package</span> com.cheng.utils;</span><br><span class="line"><span class="keyword">import</span> javax.sql.DataSource;</span><br><span class="line"><span class="keyword">import</span> com.mchange.v2.c3p0.ComboPooledDataSource;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">C3p0Utils</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> DataSource ds;</span><br><span class="line"><span class="keyword">static</span> &#123;</span><br><span class="line">ds = <span class="keyword">new</span> ComboPooledDataSource();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> DataSource <span class="title">getDataSource</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> ds;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--c3p0-config.xml--&gt;</span></span><br><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">c3p0-config</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">default-config</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driverClass&quot;</span>&gt;</span>com.mysql.jdbc.Driver<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;jdbcUrl&quot;</span>&gt;</span></span><br><span class="line">     jdbc:mysql://localhost:3306/student?characterEncoding=utf8</span><br><span class="line">     <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;user&quot;</span>&gt;</span>root<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span>&gt;</span>root<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;checkoutTimeout&quot;</span>&gt;</span>30000<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;initialPoolSize&quot;</span>&gt;</span>10<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;maxIdleTime&quot;</span>&gt;</span>30<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;maxPoolSize&quot;</span>&gt;</span>100<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;minPoolSize&quot;</span>&gt;</span>10<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;maxStatements&quot;</span>&gt;</span>200<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">default-config</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">named-config</span> <span class="attr">name</span>=<span class="string">&quot;itcast&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driverClass&quot;</span>&gt;</span>com.mysql.jdbc.Driver<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;jdbcUrl&quot;</span>&gt;</span></span><br><span class="line">           jdbc:mysql://localhost:3306/student?characterEncoding=utf8</span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;user&quot;</span>&gt;</span>root<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span>&gt;</span>root<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;initialPoolSize&quot;</span>&gt;</span>5<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;maxPoolSize&quot;</span>&gt;</span>15<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">named-config</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">c3p0-config</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--list交互页面--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">language</span>=<span class="string">&quot;java&quot;</span> <span class="attr">contentType</span>=<span class="string">&quot;text/html; charset=UTF-8&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">pageEncoding</span>=<span class="string">&quot;UTF-8&quot;</span>%&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">taglib</span> <span class="attr">uri</span>=<span class="string">&quot;http://java.sun.com/jsp/jstl/core&quot;</span> <span class="attr">prefix</span>=<span class="string">&quot;c&quot;</span>%&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>用户列表<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span></span><br><span class="line"><span class="javascript">onload=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="comment">// 如果当前页码为空，则首先查询一次</span></span></span><br><span class="line"><span class="javascript"><span class="function"><span class="title">if</span>(<span class="params"><span class="string">&quot;$&#123;page.pageIndex&#125;&quot;</span> == <span class="string">&quot;&quot;</span> || <span class="string">&quot;$&#123;page.pageIndex&#125;&quot;</span> == <span class="literal">null</span></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="built_in">window</span>.location.href=<span class="string">&quot;$&#123;pageContext.servletContext.contextPath&#125;/pageServlet?pageIndex=1&quot;</span>;</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 遍历显示用户信息 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;1&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">c:forEach</span> <span class="attr">var</span>=<span class="string">&quot;user&quot;</span> <span class="attr">items</span>=<span class="string">&quot;$&#123;page.dataList&#125;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">用户名：$&#123;user.name&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">c:forEach</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">&lt;!-- 上一页 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 判断是否是第一页 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">c:if</span> <span class="attr">test</span>=<span class="string">&quot;$&#123;page.pageIndex == 1&#125;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:void(0)&quot;</span> <span class="attr">aria-label</span>=<span class="string">&quot;Previous&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">aria-hidden</span>=<span class="string">&quot;true&quot;</span>&gt;</span><span class="symbol">&amp;laquo;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">c:if</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">c:if</span> <span class="attr">test</span>=<span class="string">&quot;$&#123;page.pageIndex != 1&#125;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;$&#123;pageContext.servletContext.contextPath&#125;/pageServlet?pageIndex=$&#123;page.pageIndex-1&#125;&quot;</span> <span class="attr">aria-label</span>=<span class="string">&quot;Previous&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">aria-hidden</span>=<span class="string">&quot;true&quot;</span>&gt;</span><span class="symbol">&amp;laquo;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">c:if</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">c:forEach</span> <span class="attr">begin</span>=<span class="string">&quot;1&quot;</span> <span class="attr">end</span>=<span class="string">&quot;$&#123;page.pageCount&#125;&quot;</span> <span class="attr">var</span>=<span class="string">&quot;pageNum&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 判断当前页 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">c:if</span> <span class="attr">test</span>=<span class="string">&quot;$&#123;page.pageIndex == pageNum&#125;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:void(0)&quot;</span>&gt;</span>$&#123;pageNum&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">c:if</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">c:if</span> <span class="attr">test</span>=<span class="string">&quot;$&#123;page.pageIndex != pageNum&#125;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;$&#123;pageContext.servletContext.contextPath&#125;/pageServlet?pageIndex=$&#123;pageNum&#125;&quot;</span>&gt;</span>$&#123;pageNum&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">c:if</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">c:forEach</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">&lt;!-- 下一页 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 判断当前页是否是最后一页 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">c:if</span> <span class="attr">test</span>=<span class="string">&quot;$&#123;page.pageIndex == page.pageCount&#125;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:void(0)&quot;</span> <span class="attr">aria-label</span>=<span class="string">&quot;Next&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">aria-hidden</span>=<span class="string">&quot;true&quot;</span>&gt;</span><span class="symbol">&amp;raquo;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">c:if</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">c:if</span> <span class="attr">test</span>=<span class="string">&quot;$&#123;page.pageIndex != page.pageCount&#125;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;$&#123;pageContext.servletContext.contextPath&#125;/pageServlet?pageIndex=$&#123;page.pageIndex+1&#125;&quot;</span> <span class="attr">aria-label</span>=<span class="string">&quot;Next&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">aria-hidden</span>=<span class="string">&quot;true&quot;</span>&gt;</span><span class="symbol">&amp;raquo;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">c:if</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 分页结束 --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/27/2d1de7a3aef1b3d37c27e7620b99a71b.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;分页功能&quot;&gt;&lt;a href=&quot;#分页功能&quot; class=&quot;headerlink&quot; title=&quot;分页功能&quot;&gt;&lt;/a&gt;分页功能&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/lzyblog/MyCode/tree/main/%E5%88%86</summary>
      
    
    
    
    <category term="Web前端" scheme="http://xiaoliblog.cn/categories/Web%E5%89%8D%E7%AB%AF/"/>
    
    <category term="JavaWeb" scheme="http://xiaoliblog.cn/categories/Web%E5%89%8D%E7%AB%AF/JavaWeb/"/>
    
    
    <category term="JavaWeb" scheme="http://xiaoliblog.cn/tags/JavaWeb/"/>
    
  </entry>
  
  <entry>
    <title>JavaWeb🌍文件上传和下载</title>
    <link href="http://xiaoliblog.cn/2021/01/15/%E5%89%8D%E7%AB%AF/JavaWeb/JavaWeb_%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E5%92%8C%E4%B8%8B%E8%BD%BD/"/>
    <id>http://xiaoliblog.cn/2021/01/15/%E5%89%8D%E7%AB%AF/JavaWeb/JavaWeb_%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E5%92%8C%E4%B8%8B%E8%BD%BD/</id>
    <published>2021-01-15T03:25:28.395Z</published>
    <updated>2021-01-15T05:27:27.322Z</updated>
    
    
    
    
    <category term="Web前端" scheme="http://xiaoliblog.cn/categories/Web%E5%89%8D%E7%AB%AF/"/>
    
    <category term="JavaWeb" scheme="http://xiaoliblog.cn/categories/Web%E5%89%8D%E7%AB%AF/JavaWeb/"/>
    
    
    <category term="JavaWeb" scheme="http://xiaoliblog.cn/tags/JavaWeb/"/>
    
  </entry>
  
</feed>
