<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Lzy_Blog</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-01-02T09:58:02.648Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>Lzy_Blog</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>详谈Java后端开发路线</title>
    <link href="http://example.com/2021/01/02/%E5%85%B6%E4%BB%96/%E8%AF%A6%E8%B0%88Java%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91%E8%B7%AF%E7%BA%BF/"/>
    <id>http://example.com/2021/01/02/%E5%85%B6%E4%BB%96/%E8%AF%A6%E8%B0%88Java%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91%E8%B7%AF%E7%BA%BF/</id>
    <published>2021-01-02T05:05:30.237Z</published>
    <updated>2021-01-02T09:58:02.648Z</updated>
    
    <content type="html"><![CDATA[<h1 id="学习路线"><a href="#学习路线" class="headerlink" title="学习路线"></a>学习路线</h1><ul><li><p><a href="https://www.runoob.com/w3cnote/web-developer-learn-path.html">路线图来源</a><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2021/01/02/b3f38845705004dd0f2c09d2b98e67cb.png"></p></li><li><p><a href="https://blog.csdn.net/a724888/article/details/83000249">Java后端开发</a></p></li><li><p><a href="https://www.zhihu.com/question/285121265/answer/1028557038">2020尚硅谷Java学习路线图</a></p></li><li><p>本人收集的学习路线视频<a href="https://space.bilibili.com/390969485/favlist?fid=1141890185&ftype=create">请戳这里！</a></p></li></ul><h1 id="计算机基础"><a href="#计算机基础" class="headerlink" title="计算机基础"></a>计算机基础</h1><ul><li>操作系统</li><li>编译原理</li><li>计算机网络</li><li>计算机组成原理</li><li>数据结构</li></ul><h1 id="开发工具"><a href="#开发工具" class="headerlink" title="开发工具"></a>开发工具</h1><ul><li>IDE<ol><li>Eclipse</li><li>IntelliJ IDEA(推荐)</li></ol></li></ul><h1 id="JavaSE"><a href="#JavaSE" class="headerlink" title="JavaSE"></a>JavaSE</h1><ul><li>Java核心语法</li><li>Java面向对象核心</li><li>集合框架</li><li>异常机制</li><li>Java常用API</li><li>Java泛型、枚举、注解</li><li>反射机制</li><li>线程、线程通信</li><li>网络编程</li><li>数据结构和算法</li><li>设计模式</li><li>开发工具的使用</li></ul><h1 id="Java与数据库交互"><a href="#Java与数据库交互" class="headerlink" title="Java与数据库交互"></a>Java与数据库交互</h1><ul><li>SQL与PL/SQL的使用</li><li>MySQL数据库</li><li>数据库事务</li><li>存储过程</li><li>函数</li><li>存储引擎</li><li>JDBC</li><li>C3p0、Druid数据库连接池</li></ul><h1 id="JavaWeb前后端交互"><a href="#JavaWeb前后端交互" class="headerlink" title="JavaWeb前后端交互"></a>JavaWeb前后端交互</h1><ul><li>HTML基础与CSS</li><li>JavaScript与jQuery</li><li>XML与XML解析</li><li>Tomcat服务器安装与配置</li><li>HTTP协议</li><li>服务器组件Servlet</li><li>JSP</li><li>EL表达式</li><li>JSTL</li><li>会话控制Cookie和Session</li><li>服务器组件Filter</li><li>服务器组件Listener</li><li>异步数据传输框架Ajax</li><li>文件的上传下载</li><li>前端框架Bootstrap</li></ul><h1 id="JavaEE框架"><a href="#JavaEE框架" class="headerlink" title="JavaEE框架"></a>JavaEE框架</h1><ul><li>系统整体分层解耦框架Spring</li><li>Spring IOC容器</li><li>Spring AOP容器</li><li>Spring 高级应用</li><li>轻量级Web框架SpringMVC</li><li>轻量级持久层框架Mybatis</li><li>Mbatis自定义插件开发</li><li>反向代码生成器MyBatisGeneratior</li><li>MyBatis增强器MyBatis_Plus</li><li>快速继承构建框架SpringBoot</li><li>微服务构建框架SpringCloud</li><li>服务网关SpringCloudGateway</li><li>分布式配置SpringCloudConfig</li><li>消息总线SpringCloudBus</li><li>客户端负载均衡SpringCloudRibbon</li><li>服务熔断与服务降级SpringCloudHystrix</li><li>服务注册与发现SpringCloudEureka</li><li>声明式服务调用SpringCloudFeign</li><li>Web安全框架SpringSecurity</li><li>分布式Session管理SpringSession</li><li>缓存机制</li></ul><h1 id="常用工具和环境"><a href="#常用工具和环境" class="headerlink" title="常用工具和环境"></a>常用工具和环境</h1><ul><li>项目构建、jar包管理工具Maven</li><li>日志输出Log4j</li><li>分布式版本管理工具Git和GitHub</li><li>分布式系统与内存数据库Redis</li><li>MySQL集群</li><li>服务器操作系统Linux常用操作、进程、线程</li><li>Java虚拟机JVM原理、优化</li><li>高并发编程工具JUC</li><li>命令解析器Shell</li><li>Intellij IDEA的使用</li></ul><h1 id="JavaEE高级"><a href="#JavaEE高级" class="headerlink" title="JavaEE高级"></a>JavaEE高级</h1><ul><li>服务器操作系统Linux常用操作</li><li>远程调用技术WebService</li><li>企业级现代数据访问技术SpringData</li><li>MySQL索引优化与锁</li><li>MyCat实现MySQL的分布式、分库分表、读写分离</li><li>支付接口调用开发</li><li>Nginx反向带来、负载均衡、动静分离</li><li>全文索引数据库Solr</li><li>分布式工具框架Dubbo</li><li>Tomcat性能优化</li><li>JVM内存模型、参数调优</li><li>Java并发包JUC</li></ul><h1 id="互联网架构新技术"><a href="#互联网架构新技术" class="headerlink" title="互联网架构新技术"></a>互联网架构新技术</h1><ul><li>分布式架构中的注册中心Zookeeper</li><li>全文检索引擎Elasticsearch</li><li>日志接收、转发工具Logstash</li><li>用于分析Elasticsearch中数据的可视化平台Kibana</li><li>分布式发布-订阅消息系统Kafka</li><li>虚拟化应用容器Docker</li><li>大数据分析存储框架Hadoop</li><li>数仓仓库工具Hive</li><li>MapReduce编程模型</li><li>前端技术栈Node,js+vue.js</li><li>消息队列ActiveMQ</li><li>消息队列RabbitMQ</li><li>消息队列RocketMQ</li><li>数据库增量订阅Canal</li><li>实时接口文档Swagger2</li><li>社交登录SpringSocial</li><li>分布式配置、服务注册与发现Nacos</li><li>服务熔断Sentinel</li><li>分布式事务Seata</li></ul><h1 id="大数据技术"><a href="#大数据技术" class="headerlink" title="大数据技术"></a>大数据技术</h1><ul><li>大数据技术概论</li><li>Hadoop概述与安装</li><li>HDFS伪分布式文件</li><li>Hadoop-HA高可用</li><li>HDFS完全分布式</li><li>Hive入门</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;学习路线&quot;&gt;&lt;a href=&quot;#学习路线&quot; class=&quot;headerlink&quot; title=&quot;学习路线&quot;&gt;&lt;/a&gt;学习路线&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://www.runoob.com/w3cnote/web-developer</summary>
      
    
    
    
    <category term="后端" scheme="http://example.com/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
    <category term="后端" scheme="http://example.com/tags/%E5%90%8E%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>详谈Web前端开发路线</title>
    <link href="http://example.com/2021/01/02/%E5%85%B6%E4%BB%96/%E8%AF%A6%E8%B0%88Web%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E8%B7%AF%E7%BA%BF/"/>
    <id>http://example.com/2021/01/02/%E5%85%B6%E4%BB%96/%E8%AF%A6%E8%B0%88Web%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E8%B7%AF%E7%BA%BF/</id>
    <published>2021-01-02T02:58:10.172Z</published>
    <updated>2021-01-02T09:55:25.097Z</updated>
    
    <content type="html"><![CDATA[<h1 id="学习路线"><a href="#学习路线" class="headerlink" title="学习路线"></a>学习路线</h1><ul><li><p><a href="https://www.runoob.com/w3cnote/web-developer-learn-path.html">路线图来源</a></p></li><li><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2021/01/02/12c348da56f463bd8b0f213a75367d22.png"></p></li><li><p>本人收集的学习路线视频<a href="https://space.bilibili.com/390969485/favlist?fid=1141995685&ftype=create">请戳这里</a></p><h1 id="资料推荐"><a href="#资料推荐" class="headerlink" title="资料推荐"></a>资料推荐</h1></li><li><p><a href="https://github.com/qianguyihao/Web?utm_source=qq&utm_medium=social&utm_oi=619975022605897728">qianguyihao_Web前端开发资料</a><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2021/01/02/ee9c7786b0c050b1fd1d4d3041d16735.png"></p></li><li><p>感谢知乎<a href="https://zhuanlan.zhihu.com/p/164701269?utm_source=qq&utm_medium=social&utm_oi=619975022605897728">前端开发路线</a></p></li></ul><h1 id="工具推荐"><a href="#工具推荐" class="headerlink" title="工具推荐"></a>工具推荐</h1><ul><li><strong>文本编辑器</strong><ul><li><strong>VSCode</strong>（推荐使用）<br>下载网盘链接<a href="https://pan.baidu.com/s/1iQaivCqQV6RpWKrOj7eTbg">提取码：97p1</a><br>官方网址:<a href="https://code.visualstudio.com/">https://code.visualstudio.com/</a><br><a href="https://www.jspang.com/detailed?id=60">VSCode常用插件和技巧教程</a></li><li><strong>Sublime</strong></li><li>WebStorm</li><li>Atom</li></ul></li><li><strong>图像编辑器</strong><ul><li>PhotoShop</li><li>Illustrator</li></ul></li><li><strong>FTP/SSH工具</strong><ul><li>Filezilla</li><li>Putty</li></ul></li><li><strong>浏览器</strong><ul><li>Chrome</li></ul></li><li><strong>云盘</strong><ul><li>Dropbox</li><li>Google Drive</li><li>Box</li></ul></li></ul><h1 id="HTML-CSS-JS"><a href="#HTML-CSS-JS" class="headerlink" title="HTML/CSS/JS"></a>HTML/CSS/JS</h1><h2 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h2><ul><li>常用标签</li><li>表单</li><li>HTML</li><li><a href="https://www.runoob.com/html/html-tutorial.html">HTML|菜鸟教程</a></li><li><a href="https://www.bilibili.com/video/BV14J4114768?from=search&seid=7000402704669507889">2019年黑马程序员前端入门视频教程 HTML5+CSS3-简单有趣好玩-pink老师</a></li></ul><h2 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h2><ul><li>基本语法</li><li>布局（浮动float、定位position、盒模型、flex、grid/layout)</li><li><a href="https://www.runoob.com/css/css-tutorial.html">CSS|菜鸟教程</a></li></ul><h2 id="JS"><a href="#JS" class="headerlink" title="JS"></a>JS</h2><ul><li><p>基本语法</p></li><li><p>函数</p></li><li><p>面向对象</p></li><li><p>JSON</p></li><li><p>jQuery框架</p></li><li><p>ES6+<br><a href="https://es6.ruanyifeng.com/">ES6 入门教程</a></p></li><li><p>接口请求Ajax<br><a href="https://zh.javascript.info/">现代Javascript教程</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1YW411T7GX?from=search&seid=10104038366788666376">尚硅谷最新版JavaScript基础全套教程完整版(140集实战教学,JS从入门到精通</a></p></li><li><p><a href="https://www.liaoxuefeng.com/wiki/1022910821149312">JavaScript学习博客</a></p></li></ul><h1 id="JS-CSS框架"><a href="#JS-CSS框架" class="headerlink" title="JS/CSS框架"></a>JS/CSS框架</h1><h2 id="JS框架"><a href="#JS框架" class="headerlink" title="JS框架"></a>JS框架</h2><ul><li><p><strong>React</strong>(推荐）</p><ol><li>Redux</li><li>Mobx</li><li>React-router</li><li><a href="https://react.docschina.org/docs/getting-started.html">React文档</a></li><li><a href="https://jspang.com/detailed?id=56">React学习路线</a></li></ol></li><li><p><strong>Vue</strong>(推荐)</p><ol><li>Vuex</li><li>Vue-router</li><li><a href="https://cn.vuejs.org/v2/guide/">Vue文档</a></li><li><a href="https://jspang.com/detailed?id=57">Vue学习路线</a></li></ol></li><li><p><strong>Angular</strong></p><ol><li>RxJS（异步优化）</li><li>NgRx</li></ol></li></ul><h2 id="CSS框架"><a href="#CSS框架" class="headerlink" title="CSS框架"></a>CSS框架</h2><ul><li><strong>Bootstrap(推荐)</strong><br><a href="https://www.bootcss.com/">Bootstrap中文网</a></li><li> Antd(推荐)<br><a href="https://ant.design/index-cn">Ant Design—企业级UI设计语言和React组件库</a></li><li>Element UI（推荐）<br><a href="https://element.eleme.cn/#/zh-CN">Element UI–网站快速成型工具</a></li><li>Material UI<br><a href="https://material-ui.com/zh/">Material-UI A popular React UI framework</a></li><li>semantic UI<br><a href="https://semantic-ui.com/">Semantic UI</a></li><li>vant (移动端）<br><a href="https://youzan.github.io/vant/#/zh-CN/">Vant中文网</a></li></ul><h1 id="CSS预处理"><a href="#CSS预处理" class="headerlink" title="CSS预处理"></a>CSS预处理</h1><ul><li><strong>Sass(推荐)</strong><br><a href="https://www.sass.hk/docs/">Sass教程</a></li><li>PostCss</li><li>Stylus</li><li>Less</li><li><a href="https://www.jianshu.com/p/9d84bb5043bb">CSS 预处理器 sass,less,stylus优缺点</a></li></ul><h1 id="CSS优化方案"><a href="#CSS优化方案" class="headerlink" title="CSS优化方案"></a>CSS优化方案</h1><ul><li>Styled Component(推荐)<br><a href="https://styled-components.com/">Styled Components</a></li><li>CSS Modules（推荐）</li><li>Styled JSX</li></ul><h1 id="服务器端编程语言"><a href="#服务器端编程语言" class="headerlink" title="服务器端编程语言"></a>服务器端编程语言</h1><ul><li><strong>Node.jS</strong><ul><li><a href="http://nodejs.cn/learn">NodeJs入门教程</a></li><li><a href="https://nqdeng.github.io/7-days-nodejs/">七天学会NodeJS</a></li><li>express.js (node.js 的优化版）<br><a href="https://www.expressjs.com.cn/">Express 中文网</a></li><li>koa (基于node.js的web开发框架)<br><a href="https://koa.bootcss.com/">web 框架——Koa</a></li></ul></li><li>PHP</li><li>Ruby on Rails </li><li>Python</li></ul><h1 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h1><ul><li>关系型数据库: MySQL 和 PostgreSQL</li><li>非机构化数据库: MongoDB 和 CouchDB</li><li>建议选择一个以下的组合:<ul><li>PHP/ MySQL</li><li>Node.js/ MongoDB</li></ul></li></ul><h1 id="端技术"><a href="#端技术" class="headerlink" title="端技术"></a>端技术</h1><ul><li>Git &amp; Github<ul><li><a href="https://www.bilibili.com/video/BV1Mf4y117f3?from=search&seid=10987880512517365800">千锋教育-2020最新Git教程（2小时从入门到精通）</a></li><li><a href="https://www.liaoxuefeng.com/wiki/896043488029600">Git教程</a></li></ul></li><li>SSH(安全外壳协议) &amp; Basic Command Line</li><li>CSS 预编译器: Sass/Less</li><li>APIS / REST Service</li><li>HTTPS / SSL<h1 id="部署应用"><a href="#部署应用" class="headerlink" title="部署应用"></a>部署应用</h1></li><li>专用服务器/ VPS</li><li>应用云平台: Heroku, Digital Ocean, AWS</li><li>部署工具</li><li>Linux命令行</li><li>维护和升级</li></ul><h1 id="构建工具"><a href="#构建工具" class="headerlink" title="构建工具"></a>构建工具</h1><ul><li><p>自动化构建<br>npm script<br>npm 允许在 package.json 文件里面，使用 scripts 字段定义脚本命令<br><a href="http://www.ruanyifeng.com/blog/2016/10/npm_scripts.html">npm scripts 使用指南</a></p></li><li><p>gulp</p></li><li><p>模块化打包</p></li><li><p>webpack（推荐）<br><a href="https://www.webpackjs.com/concepts/">webpack中文网</a><br><a href="https://github.com/ruanyf/webpack-demos">https://github.com/ruanyf/webpack-demos</a></p></li><li><p>Rollup</p></li><li><p>Snowpack</p></li><li><p>Parcel</p></li><li><p>grunt<br><a href="https://grunt.docschina.org/">Grunt中文网</a></p></li></ul><h1 id="性能"><a href="#性能" class="headerlink" title="性能"></a>性能</h1><p>白屏、卡顿、页面加载失败、页面跳转慢、图片空窗、崩溃、耗电等问题一直都是用户频繁舆情反馈的痛点。</p><ul><li><p>性能指标</p><ol><li>白屏时间</li><li>首屏时间</li><li>用户可操作时间</li><li>页面总下载时间</li><li>请求数量</li></ol></li><li><p>RAIL模型<br><a href="https://segmentfault.com/a/1190000010512899">web性能优化——使用RAIL模型评估性能</a></p></li><li><p>LightHouse指标<br><a href="https://blog.csdn.net/Napoleonxxx/article/details/85077418">玩转Lighthouse—全方位提高网站各项指标的实践</a></p></li><li><p>DevTools</p></li><li><p>PWA<br><a href="https://www.bilibili.com/video/BV1wt411E7QD?from=search&seid=7258704753153037754">【黑马程序员】PWA-3小时带你实现渐进式WebAPP</a></p></li><li><p>Service Worker</p></li><li><p>骨架屏（骨架屏(Skeleton Screen)是指在页面数据加载完成前，先给用户展示出页面的大致结构（灰色占位图），在拿到接口数据后渲染出实际页面内容然后替换掉。）<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2021/01/02/27e14b697f3f27e89e21f94b7e56728f.png"></p></li><li><p>gzip<br><a href="https://segmentfault.com/a/1190000012571492">前端性能优化之gzip</a></p></li><li><p>懒加载和预加载</p></li><li><p>包分析工具（构建代码之后，明白到底是什么占用了那么多空间？可以使用 webpack-bundle-analyzer）</p></li></ul><h1 id="数据可视化"><a href="#数据可视化" class="headerlink" title="数据可视化"></a>数据可视化</h1><ul><li>ECharts(推荐)<br>实例：<a href="https://echarts.apache.org/examples/zh/index.html">Examples-Apache Echarts</a><br><a href="https://echarts.apache.org/zh/index.html">Apache Echarts</a></li><li>AntV<br><a href="https://antv.vision/zh/">蚂蚁集团数据可视化</a></li><li>HighChat</li><li>ucharts(小程序)</li></ul><h1 id="移动端应用-Android-Studio-XCode）"><a href="#移动端应用-Android-Studio-XCode）" class="headerlink" title="移动端应用(Android Studio / XCode）)"></a>移动端应用(Android Studio / XCode）)</h1><ul><li><p>React Native(推荐)<br><a href="https://reactnative.cn/docs/getting-started">React Native中文网</a></p><blockquote><p>插件汇总</p></blockquote></li><li><p>react-native-linear-gradient 颜色渐变处理</p></li><li><p>react-native-login 视频界面登录</p></li><li><p>react-native-keyboard-aware-scroll-view 键盘显示处理</p></li><li><p>react-native-popup-dialog 弹窗</p></li><li><p>react-native-dropdownalert 一种非常漂亮的alert弹窗方式，从状态栏往下弹窗；</p></li><li><p>react-native-simple-radio-button 单选按钮；</p></li><li><p>react-native-swiper</p></li><li><p>react-native-macos macos桌面应用</p></li><li><p>react-native-wechat 集成微信相关SDK</p></li><li><p>react-native-modalbox 模态弹窗</p></li><li><p>react-native-touch-id 指纹登录</p></li><li><p>react-native-prompt 可输入文字的弹窗</p></li><li><p>react-native-sqlite-storage sqlite数据库存储</p></li><li><p>react-native-permissions 权限检查</p></li><li><p>react-native-progress-hud loading圈</p></li><li><p>react-native-snackbar 类似toast的弹窗模式</p></li><li><p>react-native-qrcode-svg 二维码生产工具</p></li><li><p>native-base UI组件</p></li><li><p>react-native-busy-indicator loading圈</p></li><li><p>react-native-fit-image 图片展示优化</p></li><li><p>react-native-timer 定时器管理</p></li><li><p>react-native-scrollable-tab-view 可以左右滑动的tab</p></li><li><p>react-native-zip-archive 解压工具</p></li><li><p>react-native-xml2js</p></li><li><p>react-native-spinkit 好看的loading圈</p></li><li><p>react-native-interactable 有很强交互效果的table视图</p></li><li><p>react-native-pull-to-refresh 下拉刷新效果</p></li><li><p>react-native-deck-swiper 不错的swiper效果</p></li><li><p>react-native-prefix-picker select效果</p></li><li><p>react-native-gesture-helper 手势 向上还是向下 还是向左</p></li><li><p>react-native-drawer-layout 抽屉效果</p></li><li><p>react-native-sortable-listview 可拖拽排序的列表视图</p></li><li><p>react-native-progress 进度条 长方形 圆形</p></li><li><p>react-native-splash-screen 启动屏处理</p></li><li><p>react-native-masked-text 指定格式的输入框</p></li><li><p>react-native-keyboard-manager 针对IOS 键盘遮挡的问题 俺可以这么用android:windowSoftInputMode=”adjustResize”</p></li><li><p>react-native-beacons-manager 蓝牙处理</p></li><li><p>react-native-fetch-blob 文件获取</p></li><li><p>react-native-popup-menu 弹出菜单</p></li><li><p>react-native-pathjs-charts 图表</p></li><li><p>react-native-dates 日历日期选择工具</p></li><li><p>react-native-calendar-strip 一种简单的日历处理</p></li><li><p>react-native-simple-markdown 简单的markdown文本编辑器</p></li><li><p>react-native-image-progress 进度条</p></li><li><p>react-native-img-cache 图片缓存技术</p></li><li><p>rn-placeholder 在展示具体的文字和图片之前有个加载样式处理</p></li><li><p>react-native-pie-chart 饼状图</p></li><li><p>react-native-maps 地图</p></li><li><p>react-native-loading-overlay loading圈加载遮罩</p></li><li><p>react-native-progress 圆形进度条<a href="https://www.jianshu.com/p/d0742d421b7c">react-native 圆形进度条</a></p></li><li><p>react-native-modal 弹窗插件 <a href="https://www.npmjs.com/package/react-native-modal">react-native-modal</a></p></li><li><p>react-native-extra-dimensions-android 安卓水滴屏获取屏幕高度 <a href="https://github.com/Sunhat/react-native-extra-dimensions-android">Sunhat/react-native-extra-dimensions-android</a></p></li><li><p>Weex(阿里巴巴旗下的跨平台移动开发解决方案)<br><a href="https://www.bilibili.com/video/BV1Wx411s7PC?from=search&seid=7952335917735607106">技术胖的WEEX入门到实战视频教程</a></p></li><li><p>Flutter<br><a href="https://flutterchina.club/get-started/install/"> Flutter中文网</a><br><a href="https://jspang.com/detailed?id=58">Flutter学习路线</a></p></li></ul><h1 id="小程序"><a href="#小程序" class="headerlink" title="小程序"></a>小程序</h1><ul><li>原生<ol><li>微信<br><a href="https://developers.weixin.qq.com/miniprogram/dev/framework/">微信开发文档</a></li><li>支付宝</li><li>头条</li></ol></li><li>跨端</li><li>Taro<br><a href="https://taro-docs.jd.com/taro/docs/README/index.html">Taro文档</a><br>基于 Taro 框架开发的多端 UI 组件库:<a href="https://taro-ui.jd.com/#/docs/introduction">Taro UI</a></li><li>uni-app<br><a href="https://uniapp.dcloud.io/">uni-app文档</a></li></ul><h1 id="桌面开发"><a href="#桌面开发" class="headerlink" title="桌面开发"></a>桌面开发</h1><ul><li>Electron （推荐）<br><a href="http://www.electronjs.org/">Electron文档</a></li><li>Flutter</li></ul><h1 id="网站分享"><a href="#网站分享" class="headerlink" title="网站分享"></a>网站分享</h1><ul><li><a href="https://litterwang.gitee.io/web-navigation/#/">https://litterwang.gitee.io/web-navigation/#/</a></li><li><a href="http://www.alloyteam.com/nav/">Web前端导航</a></li><li><a href="https://docschina.org/">权威Web开发文档合集</a></li><li><a href="https://guide.aotu.io/index.html">前端代码规范–Aotu</a></li><li><a href="https://www.w3cplus.com/">打造前端精品</a></li><li><a href="https://weekly.75.team/">奇舞周刊</a></li><li><a href="https://codepen.io/">在线代码测试–Cdepen</a></li><li><a href="https://juejin.cn/">掘金–大神技术分享社区</a></li><li><a href="http://blog.lovebug.cn/">工具，网站导航，各种插件</a></li><li><a href="https://yuchengkai.cn/">前端进阶之道</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;学习路线&quot;&gt;&lt;a href=&quot;#学习路线&quot; class=&quot;headerlink&quot; title=&quot;学习路线&quot;&gt;&lt;/a&gt;学习路线&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://www.runoob.com/w3cnote/web-developer</summary>
      
    
    
    
    <category term="前端" scheme="http://example.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="前端" scheme="http://example.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>PHP程序设计</title>
    <link href="http://example.com/2021/01/01/%E5%90%8E%E7%AB%AF/PHP%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/"/>
    <id>http://example.com/2021/01/01/%E5%90%8E%E7%AB%AF/PHP%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/</id>
    <published>2021-01-01T10:39:54.294Z</published>
    <updated>2021-01-02T02:32:27.595Z</updated>
    
    <content type="html"><![CDATA[<h1 id="教程推荐"><a href="#教程推荐" class="headerlink" title="教程推荐"></a>教程推荐</h1><p><a href="https://www.bilibili.com/video/BV18x411H7qD">黑马程序员 PHP入门教程</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;教程推荐&quot;&gt;&lt;a href=&quot;#教程推荐&quot; class=&quot;headerlink&quot; title=&quot;教程推荐&quot;&gt;&lt;/a&gt;教程推荐&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://www.bilibili.com/video/BV18x411H7qD&quot;&gt;黑马程序员 PH</summary>
      
    
    
    
    <category term="后端" scheme="http://example.com/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
    <category term="PHP" scheme="http://example.com/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>Python程序设计</title>
    <link href="http://example.com/2021/01/01/%E5%90%8E%E7%AB%AF/Python%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/"/>
    <id>http://example.com/2021/01/01/%E5%90%8E%E7%AB%AF/Python%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/</id>
    <published>2021-01-01T10:11:11.026Z</published>
    <updated>2021-01-02T02:32:33.381Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.liaoxuefeng.com/wiki/1016959663602400">Python教程</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.liaoxuefeng.com/wiki/1016959663602400&quot;&gt;Python教程&lt;/a&gt;&lt;/p&gt;
</summary>
      
    
    
    
    <category term="后端" scheme="http://example.com/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>SQL数据库操作</title>
    <link href="http://example.com/2021/01/01/%E5%90%8E%E7%AB%AF/SQL%E6%95%B0%E6%8D%AE%E5%BA%93%E6%93%8D%E4%BD%9C/"/>
    <id>http://example.com/2021/01/01/%E5%90%8E%E7%AB%AF/SQL%E6%95%B0%E6%8D%AE%E5%BA%93%E6%93%8D%E4%BD%9C/</id>
    <published>2021-01-01T09:54:13.811Z</published>
    <updated>2021-01-02T02:32:41.733Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.liaoxuefeng.com/wiki/1177760294764384">SQL教程</a><br><a href="https://www.vxzsk.com/1393.html">MySql教程</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.liaoxuefeng.com/wiki/1177760294764384&quot;&gt;SQL教程&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://www.vxzsk.com/1393.html&quot;&gt;MySql教程&lt;/a&gt;&lt;/p&gt;
</summary>
      
    
    
    
    <category term="后端" scheme="http://example.com/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
    <category term="SQL" scheme="http://example.com/tags/SQL/"/>
    
  </entry>
  
  <entry>
    <title>JavaMail邮件实现</title>
    <link href="http://example.com/2020/12/31/%E5%90%8E%E7%AB%AF/JavaMail%E9%82%AE%E4%BB%B6%E5%AE%9E%E7%8E%B0/"/>
    <id>http://example.com/2020/12/31/%E5%90%8E%E7%AB%AF/JavaMail%E9%82%AE%E4%BB%B6%E5%AE%9E%E7%8E%B0/</id>
    <published>2020-12-31T07:59:00.510Z</published>
    <updated>2021-01-02T02:31:59.232Z</updated>
    
    <content type="html"><![CDATA[<p>感谢<a href="https://www.cnblogs.com/ysocean/p/7652934.html">YSOcean</a></p><h1 id="电子邮件的接发过程"><a href="#电子邮件的接发过程" class="headerlink" title="电子邮件的接发过程"></a>电子邮件的接发过程</h1><p>假设<strong>用户A从QQ邮箱发送邮件到用户B163邮箱</strong>的图示，然后对图示的过程进行详细的介绍：<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/31/1b1ff5cb7ec90c03d9eb2753feb94056.png"></p><ol><li>用户A的电子邮箱为：<a href="mailto:&#120;&#x78;&#64;&#113;&#x71;&#46;&#x63;&#111;&#109;">&#120;&#x78;&#64;&#113;&#x71;&#46;&#x63;&#111;&#109;</a>，通过邮件客户端软件写好一封邮件，交到QQ的邮件服务器，这一步使用的协议是<code>SMTP</code>,对应图示的①；</li><li>QQ邮箱会根据用户A发送的邮件进行<strong>解析</strong>，也就是根据收件地址判断是否是自己管辖的账户，如果收件地址也是QQ邮箱，那么会直接存放到自己的存储空间。这里我们假设收件地址不是QQ邮箱，而是163邮箱，那么QQ邮箱就会将邮件转发到163邮箱服务器，转发使用的协议也是<code>SMTP</code>，对应图示的②；</li><li>163邮箱服务器接收到QQ邮箱转发过来的邮件，也会判断收件地址是否是自己，发现是自己的账户，那么就会将QQ邮箱转发过来的邮件存放到自己的内部存储空间，对应图示的③；</li><li>用户A将邮件发送了之后，就会通知用户B去指定的邮箱收取邮件。用户B会通过邮件客户端软件先向163邮箱<strong>服务器请求</strong>，要求收取自己的邮件，对应图示的④；</li><li>163邮箱服务器收到用户B的请求后，会从自己的存储空间中取出B未收取的邮件，对应图示⑤；</li><li>163邮箱服务器取出用户B未收取的邮件后，将邮件发给用户B，对应图示的⑥；最后三步用户B收取邮件的过程，使用的协议是<code>POP3</code>;</li></ol><h2 id="邮件服务器"><a href="#邮件服务器" class="headerlink" title="邮件服务器"></a>邮件服务器</h2><p>图示出现了两个邮件服务器，QQ和163邮件服务器。用户想要在网上收发邮件，必须要有专门的邮件服务器。邮件服务器我们可以假想为现实生活中的邮局。</p><ul><li>如果按<strong>功能</strong>划分，邮件服务器可以划分为两种类型：<ol><li><strong>SMTP邮件服务器</strong>：替用户<strong>发送邮件和接收</strong>外面发送给本地用户的邮件，对应上图的第一、二步。它相当于现实生活中邮局的邮件接收部门（可接收普通用户要投出的邮件和其他邮局投递进来的邮件）。</li><li><strong>POP3/IMAP邮件服务器</strong>：帮助用户<strong>读取SMTP邮件服务器接收进来的邮件</strong>，对应上图的第六步。它相当于专门为前来取包裹的用户提供服务的部门。</li></ol></li></ul><h2 id="电子邮箱"><a href="#电子邮箱" class="headerlink" title="电子邮箱"></a>电子邮箱</h2><ul><li>电子邮箱也称为E-mail地址，比如用户A的<a href="mailto:&#120;&#120;&#x40;&#x71;&#x71;&#x2e;&#99;&#111;&#109;">&#120;&#120;&#x40;&#x71;&#x71;&#x2e;&#99;&#111;&#109;</a>，和用户B的<a href="mailto:&#120;&#120;&#x40;&#x31;&#x36;&#51;&#46;&#x63;&#x6f;&#109;">&#120;&#120;&#x40;&#x31;&#x36;&#51;&#46;&#x63;&#x6f;&#109;</a>。</li><li>用户能<strong>通过E-mail地址标识自己发送的电子邮件</strong>，同时也可以通过这个地址接收别人发来的电子邮件</li><li>电子邮箱需要到邮件服务器进行申请，也就是说，电子邮箱其实就是用户在<strong>邮件服务器上申请的账户</strong>。邮件服务器会把接收到的邮件保存到为该账户所分配的邮箱空间中，用户通过用户名密码登录到邮件服务器查收该地址已经收到的邮件。一般来讲，邮件服务器为用户分配的邮箱空间是有限的。</li></ul><h2 id="邮件客户端软件"><a href="#邮件客户端软件" class="headerlink" title="邮件客户端软件"></a>邮件客户端软件</h2><p>我们可以直接在网站上进行邮件收发，也可以用邮件客户端软件。比如常见的FoxMail，Outlook Express。邮件客户端软件通常集邮件撰写，发送和收发功能于一体，主要用于<strong>帮助用户将邮件发送给SMTP邮件服务器和从POP3/IMAP邮件服务器读取用户的电子邮件</strong>。</p><blockquote><p>推荐使用<strong>163邮箱</strong>，不推荐使用QQ邮箱！</p></blockquote><h2 id="邮件传输协议"><a href="#邮件传输协议" class="headerlink" title="邮件传输协议"></a>邮件传输协议</h2><p>电子邮件需要在邮件客户端和邮件服务器之间，以及两个邮件服务器之间进行邮件传递，那就必须要遵守一定的规则，这个规则就是邮件传输协议。下面我们分别简单介绍几种协议（后面会详细讲解）：</p><ol><li><strong>SMTP协议</strong>：全称为 <code>Simple Mail Transfer Protocol</code>，<strong>简单邮件传输协议</strong>。它定义了邮件客户端软件和SMTP邮件服务器之间，以及两台SMTP邮件服务器之间的通信规则。</li><li><strong>POP3协议</strong>：全称为 <code>Post Office Protocol</code>，<strong>邮局协议</strong>。它定义了邮件客户端软件和POP3邮件服务器的通信规则。</li><li><strong>IMAP协议</strong>：全称为<code> Internet Message Access Protocol</code>,<strong>Internet消息访问协议</strong>，它是对POP3协议的一种扩展，也是定义了邮件客户端软件和IMAP邮件服务器的通信规则。</li></ol><h1 id="体验SMTP和POP3协议"><a href="#体验SMTP和POP3协议" class="headerlink" title="体验SMTP和POP3协议"></a>体验SMTP和POP3协议</h1><h2 id="使用SMTP协议发送邮件"><a href="#使用SMTP协议发送邮件" class="headerlink" title="使用SMTP协议发送邮件"></a>使用SMTP协议发送邮件</h2><ul><li>SMTP协议的通信双方采用<strong>一问一答的命令/响应形式</strong>进行对话</li><li>SMTP协议分为<strong>标准SMTP协议和扩展SMTP协议</strong>，标准SMTP协议是1982年在RFC821 文档中定义的，而扩展SMTP协议是1995年在RFC1869 文档中定义的</li><li>扩展SMTP协议在标准 SMTP协议基础上的改动非常小，主要增加了邮件安全方面的认证功能，现在我们说的SMTP协议基本上都是扩展SMTP协议。</li><li>RFC1869文档参考如下：<a href="https://tools.ietf.org/html/rfc1869">https://tools.ietf.org/html/rfc1869</a></li></ul><p>MTP 协议中一共定义了18条命令，但是发送一封电子邮件的过程通常只需要6条命令，我将这6调命令/响应的语法格式总结如下：</p><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/31/13ddc01cc71655602aeb728ab184225e.png"><br>大家可能光看这些命令不太清楚，下面我总结了一下使用Smtp协议手工发送邮件的步骤：<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/31/c2bc0c204363d9893a7c1b955137ccbc.png"></p><ol><li>和SMTP服务器建立连接，<code>telnet smtp.163.com 25。</code>这条命令是和163邮箱建立连接，如果是和QQ，那么将163换成qq即可，同理别的邮箱也是一样。后面的数字25表示<strong>SMTP服务器的端口号</strong>。</li><li><code>ehlo 发件人用户名</code>。这没什么好说的，就是告诉SMTP服务器发送者的用户名。</li><li>选择登录认证方式，一般我们在第二步执行完后，会提示有几种认证方式，我们一般选择的是login。即输入命令：<code>auth login</code></li><li>分别输入经过<strong>Base64加密后的用户名和密码</strong>。注意必须是要经过 Base64加密后的用户名和密码，大家可以<a href="https://base64.us/">网上在线转</a>，也可以用后面给的代码进行转换。</li><li>指明邮件的发送人和收件人<figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mail from:&lt;xxx@<span class="number">163</span>.com&gt;</span><br><span class="line">rcpt to:&lt;xxx@qq.com&gt;</span><br></pre></td></tr></table></figure></li><li>输入data命令，然后编写要发送的邮件内容，邮件的编写格式规则如下：<figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">from:&lt;<span class="title">xxx</span>@163.<span class="title">com</span>&gt;　　　　----邮件头发件人地址</span></span><br><span class="line"><span class="function"><span class="title">to</span>:&lt;<span class="title">xxx</span>@<span class="title">qq.com</span>&gt; 　　　　  ----邮件头收件人地址</span></span><br><span class="line"><span class="function"><span class="title">subject:hello</span> <span class="title">world</span>　　　 ----邮件头主题</span></span><br><span class="line"><span class="function">　　　　　　　　　　　　　　 -----空行</span></span><br><span class="line"><span class="function"><span class="title">This</span> <span class="title">is</span> <span class="title">the</span> <span class="title">first</span> <span class="title">email</span> <span class="title">sent</span> <span class="title">by</span> <span class="title">hand</span> <span class="title">using</span> <span class="title">the</span> <span class="title">SMTP</span> <span class="title">protocol</span>　　----邮件的具体内容</span></span><br></pre></td></tr></table></figure></li><li>输入“.”表示邮件内容输入完毕</li><li>输入quit命令断开与邮件服务器的连接</li></ol><p>下面用动图的形式给大家展示用Smtp协议手工发送邮件的前面三个步骤：<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/31/4356ece4e67b1267b3887502e736d5be.png"><br>上面我执行到第4步，剩下的步骤我就直接截图了：<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/31/fc6dcc94a509f77359b7f74230179e24.png"><br>至此，我们一封邮件便发出去了，我们先登陆到QQ邮箱查看（后面我们通过POP3服务器来查收）：<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/31/091440cb37e79c75ea99a3b45eeb3873.png"></p><h2 id="SMTP发送邮件遇到问题"><a href="#SMTP发送邮件遇到问题" class="headerlink" title="SMTP发送邮件遇到问题"></a>SMTP发送邮件遇到问题</h2><ul><li><p>执行 telent smtp.163.com 25 命令时，报如下错误：<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/31/533633c0f55a77ce179dde93912d108d.png"><br>解决办法是：【控制面板】—-【程序】——【启动或关闭 Windows 功能】—-【将Telnet勾上】，然后点击确定即可<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/31/f8cb1ffc682a9fa2381b576b66fa0246.png"></p></li><li><p>用户名和密码必须要base64加密，在线网站：<a href="https://base64.us/">https://base64.us/</a></p></li><li><p>每一步骤之间输入命令要尽量快，不然会自动断开连接</p></li><li><p>我上面是和163邮箱链接的，如果是和qq邮箱连接，会有一些问题。首先第一步建立连接为 telnet smtp.qq.com 587,端口号为587，不是25。还有第三步，选择认证方式，在执行 auth login之前，先执行：starttls。还有第四步，输入用户名和授权码，而不是用户名和密码，授权码的获取可以参考：<a href="http://service.mail.qq.com/cgi-bin/help?subtype=1&&id=28&&no=1001256">QQ授权码客户端中心</a></p></li><li><p>输入邮件内容时，空行不要忘记了，还有结束输入是以“.”结束的。 </p></li></ul><h2 id="POP3协议接收邮件"><a href="#POP3协议接收邮件" class="headerlink" title="POP3协议接收邮件"></a>POP3协议接收邮件</h2><p>邮件服务商专门为每个用户申请的电子邮箱提供了专门的存储空间，SMTP 服务器将接收到的邮件保存到相应用户的存储空间。用户要从邮件服务提供商提供的电子邮箱中获取自己的电子邮件，那么就需要POP3 邮件服务器来完成。</p><ul><li>POP3协议：全称为 Post Office Protocol，它定义了邮件客户端程序和POP3邮件服务器的通信规则。</li></ul><p>下面我们演示用POP3协议手工接收邮件：</p><ol><li>用telnet 连接POP3的163邮箱服务器<figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">telnet pop3.l63.com <span class="number">110</span></span><br></pre></td></tr></table></figure></li><li>接下来收取邮件：<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/31/48c17313972f7deeb0545afa20b68392.png"></li><li>相关命令的详细解释如下：<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/31/0459d219562b1804926efabddd4e7081.png"></li></ol><h1 id="邮件的组织结构"><a href="#邮件的组织结构" class="headerlink" title="邮件的组织结构"></a>邮件的组织结构</h1><h2 id="RFC822-邮件格式"><a href="#RFC822-邮件格式" class="headerlink" title="RFC822 邮件格式"></a>RFC822 邮件格式</h2><ul><li>英文参考文档如下：<a href="https://tools.ietf.org/html/rfc822">https://tools.ietf.org/html/rfc822</a></li><li>RFC822 文档中定义的文件格式包括两个部分：<strong>邮件头和邮件体</strong>。</li><li>在上一节中，我们通过SMTP服务发送一封邮件，然后用POP3服务器接收。邮件接收内容如下图红色框所显示：</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/31/7197d63f0f7b0a00eade03d86136b3fa.png"></p><ul><li>每一个邮件头以“<strong>字段名：字段值</strong>”的格式出现，即每一行邮件头的内容依次由字段名、冒号、空格、字段值、回车换行符组成</li><li>RFC822文档中定义了多个标准的邮件头字段，每一个邮件头字段表示一种特定的信息。邮件头中也可以包含自定义的头字段，这种自定义的头字段通常是某个组织或机构内部专用的。下面是对一些主要的邮件头字段的解释</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/31/baa3a7c6e8b6fd987fc45eb2f19942e9.png"></p><p>我们从上可以知道，RFC822文档存在两个问题：</p><ol><li>只能用于表述一段普通的文本，而无法表达出图片、声音等二进制数据。</li><li>SMTP服务器在接收邮件内容时，当接收到只有一个“.”字符的单独行时，就会认为邮件内容已经结束，如果一封邮件正文中正好有内容仅为一个“.”字符的单独行，SMTP服务器就会丢弃掉该行后面的内容，从而导致信息丢失。</li></ol><p>为了解决上面两个问题，为此定义了<strong>MIME（Multipurpose Internet Mail Extension，多用途Internet邮件扩展）协议</strong>。</p><h2 id="MIME协议"><a href="#MIME协议" class="headerlink" title="MIME协议"></a>MIME协议</h2><ul><li><p>MIME协议用于定义复杂邮件体的格式，它可以表达多段平行的文本内容和非文本的邮件内容，例如，在邮件体中内嵌的图像数据和邮件附件等。</p></li><li><p>另外，MIME协议的数据格式也可以避免邮件内容在传输过程中发生信息丢失。</p></li><li><p>MIME协议不是对RFC822邮件格式的升级和替代，而是基于RFC822邮件格式的扩展应用。一言以蔽之，RFC822定义了邮件内容的格式和邮件头字段的详细细节，MIME协议则是定义了如何在邮件体部分表达出的丰富多样的数据内容。</p></li><li><p>一个采用了MIME协议的电子邮件就叫做MIME邮件，MIME邮件在RFC822文档中定义的邮件头字段的基础上，扩充了一些自己专用的邮件头字段，例如，使用MIME-Version头字段指定MIME协议的版本，使用Content-Type头字段指定邮件体的MIME类型，使用Content-Transfer-Encoding头字段指定编码方法，如下所示： </p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">MIME-Version:<span class="number">1</span>.<span class="number">0</span></span><br><span class="line"></span><br><span class="line">Content-<span class="built_in">Type</span>:multipart/mixed;boundary=&quot;----=_NextPart_000_0050_01C&quot;</span><br></pre></td></tr></table></figure><p>其中，“multipart/mixed”部分说明邮件体中包含有多段数据，每段数据之间使用boundary属性中指定的字符文本作为分隔标识符。<br>另外，MIME邮件也扩展了RFC822文档中已经定义了的邮件头字段的内涵，例如，定义了subject头字段中的值内容的格式，以便通过编码的方式让邮件主题中也可以使用非ASCII码的字符。subject头字段中的值嵌套在一对“=?”和“?=”标记符之间，标记符之间的内容由三部分组成：邮件主题的原始内容的字符集、当前采用的编码方式、编码后的结果，这三部分之间使用“?”进行分隔。</p></li></ul><h1 id="JavaMail"><a href="#JavaMail" class="headerlink" title="JavaMail"></a>JavaMail</h1><p>实际项目中我们不需要考虑邮件的底层实现协议，因为 sun 公司（现在已经被orcal收购了）开发的JavaMail API 就是为方便Java开发人员在应用程序中实现邮件接收和发送功能而提供的一套标准开发包，屏蔽了底层的邮件实现协议</p><h2 id="JavaMail介绍"><a href="#JavaMail介绍" class="headerlink" title="JavaMail介绍"></a>JavaMail介绍</h2><p>JavaMail 是sun公司（现以被甲骨文收购）为方便Java开发人员在应用程序中实现邮件发送和接收功能而提供的一套标准开发包，它支持一些常用的邮件协议，如前面所讲的SMTP，POP3，IMAP,还有MIME等。我们在使用JavaMail API 编写邮件时，无须考虑邮件的底层实现细节，只要调用JavaMail 开发包中相应的API类就可以了。</p><ul><li>本项目开源代码：<a href="https://github.com/lzyblog/MyCode/tree/main/JavaMailProject">https://github.com/lzyblog/MyCode/tree/main/JavaMailProject</a></li><li>JavaMail下载地址：<a href="https://github.com/javaee/javamail/releases">https://github.com/javaee/javamail/releases</a>，下载<code>javax.mail.jar</code><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/31/0636b9fa06f4afa7421a443e0af31316.png"></li></ul><h2 id="JavaMail-API"><a href="#JavaMail-API" class="headerlink" title="JavaMail API"></a>JavaMail API</h2><p>JavaMail API 按照功能可以划分为如下三大类：</p><ol><li>创建和解析邮件的API</li><li>发送邮件的API</li><li>接收邮件的API<br>以上三种类型的API在JavaMail 中由多个类组成，但是主要有四个核心类，我们在编写程序时，记住这四个核心类，就很容易编写出Java邮件处理程序。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/31/df232bb78ce012a3ce18114c0d377fba.png"></li></ol><ul><li><p><strong>Message 类</strong>:<code>javax.mail.Message</code> 类是<strong>创建和解析邮件</strong>的核心 API，这是一个抽象类，通常使用它的子类javax.mail.internet.MimeMessage 类。它的实例对象表示一份电子邮件。客户端程序发送邮件时，首先使用创建邮件的 JavaMail API 创建出封装了邮件数据的 Message 对象，然后把这个对象传递给邮件发送API（Transport 类） 发送。客户端程序接收邮件时，邮件接收API把接收到的邮件数据封装在Message 类的实例中，客户端程序在使用邮件解析API从这个对象中解析收到的邮件数据。</p></li><li><p><strong>Transport 类</strong>：<code>javax.mail.Transport</code> 类是<strong>发送邮件</strong>的核心API 类，它的实例对象代表实现了某个邮件发送协议的邮件发送对象，例如 SMTP 协议，客户端程序创建好 Message 对象后，只需要使用邮件发送API 得到 Transport 对象，然后把 Message 对象传递给 Transport 对象，并调用它的发送方法，就可以把邮件发送给指定的 SMTP 服务器。</p></li><li><p><strong>Store 类</strong>：<code>javax.mail.Store</code> 类是<strong>接收邮件</strong>的核心 API 类，它的实例对象代表实现了某个邮件接收协议的邮件接收对象，例如 POP3 协议，客户端程序接收邮件时，只需要使用邮件接收 API 得到 Store 对象，然后调用 Store 对象的接收方法，就可以从指定的 POP3 服务器获得邮件数据，并把这些邮件数据封装到表示邮件的 Message 对象中。</p></li><li><p><strong>Session 类</strong>：<code>javax.mail.Session</code> 类用于定义整个应用程序所需的环境信息，以及收集客户端与邮件服务器建立网络连接的<strong>会话信息</strong>，例如邮件服务器的主机名、端口号、采用的邮件发送和接收协议等。Session 对象根据这些信息构建用于邮件收发的 Transport 和 Store 对象，以及为客户端创建 Message 对象时提供信息支持。</p></li></ul><h2 id="发送纯文本邮件"><a href="#发送纯文本邮件" class="headerlink" title="发送纯文本邮件"></a>发送纯文本邮件</h2><ul><li><strong>关于授权码</strong><br>某些邮箱服务器为了增加邮箱本身密码的安全性，给 SMTP 客户端设置了独立密码（有的邮箱称为“授权码”）, 对于开启了独立密码的邮箱, 邮箱账户密码必需使用这个独立密码（授权码）。<br>一般在邮箱的设置里都会有，QQ邮箱也类似，设置后负责授权码，该授权码可以登录邮箱，<strong>需保密</strong><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/31/683131a691a2fa4afa523fdedd3bc8fa.png"></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.lzyblog.mail;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> java.io.ObjectInputStream.GetField;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> javax.mail.Address;</span><br><span class="line"><span class="keyword">import</span> javax.mail.Message;</span><br><span class="line"><span class="keyword">import</span> javax.mail.MessagingException;</span><br><span class="line"><span class="keyword">import</span> javax.mail.Session;</span><br><span class="line"><span class="keyword">import</span> javax.mail.Transport;</span><br><span class="line"><span class="keyword">import</span> javax.mail.internet.AddressException;</span><br><span class="line"><span class="keyword">import</span> javax.mail.internet.InternetAddress;</span><br><span class="line"><span class="keyword">import</span> javax.mail.internet.MimeMessage;</span><br><span class="line"><span class="keyword">import</span> javax.swing.text.html.MinimalHTMLWriter;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SendMailText</span> </span>&#123;</span><br><span class="line">    <span class="comment">//发件人邮箱地址</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String senderAddress = <span class="string">&quot;xxxx@163.com&quot;</span>;</span><br><span class="line">    <span class="comment">//收件人邮箱地址</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String recipientAddress = <span class="string">&quot;xxxx@qq.com&quot;</span>;</span><br><span class="line">    <span class="comment">//发件人邮箱账户名</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String senderAccount = <span class="string">&quot;xxxx@163.com&quot;</span>;</span><br><span class="line">    <span class="comment">//发件人邮箱账户密码(独立密码或者授权码)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String senderPassword = <span class="string">&quot;xxxxxxxxxxxxxxxx&quot;</span>;</span><br><span class="line">     </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">//1、连接邮件服务器的参数配置</span></span><br><span class="line">        Properties props = <span class="keyword">new</span> Properties();</span><br><span class="line">        <span class="comment">//设置用户的认证方式，需要请求认证</span></span><br><span class="line">        props.setProperty(<span class="string">&quot;mail.smtp.auth&quot;</span>, <span class="string">&quot;true&quot;</span>);</span><br><span class="line">        <span class="comment">//设置传输协议</span></span><br><span class="line">        props.setProperty(<span class="string">&quot;mail.transport.protocol&quot;</span>, <span class="string">&quot;smtp&quot;</span>);</span><br><span class="line">        <span class="comment">//设置发件人的SMTP服务器地址，格式smtp.xxx.com</span></span><br><span class="line">        props.setProperty(<span class="string">&quot;mail.smtp.host&quot;</span>, <span class="string">&quot;smtp.163.com&quot;</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// PS: 某些邮箱服务器要求 SMTP 连接需要使用 SSL 安全认证 (为了提高安全性, 邮箱支持SSL连接, 也可以自己开启),</span></span><br><span class="line">        <span class="comment">//     如果无法连接邮件服务器, 仔细查看控制台打印的 log, 如果有有类似 “连接失败, 要求 SSL 安全连接” 等错误,</span></span><br><span class="line">        <span class="comment">//     打开下面 /* ... */ 之间的注释代码, 开启 SSL 安全连接。</span></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        // SMTP 服务器的端口 (非 SSL 连接的端口一般默认为 25, 可以不添加, 如果开启了 SSL 连接,</span></span><br><span class="line"><span class="comment">        //                  需要改为对应邮箱的 SMTP 服务器的端口, 具体可查看对应邮箱服务的帮助,</span></span><br><span class="line"><span class="comment">        //                  QQ邮箱的SMTP(SLL)端口为465或587, 其他邮箱自行去查看)</span></span><br><span class="line"><span class="comment">        final String smtpPort = &quot;465&quot;;</span></span><br><span class="line"><span class="comment">        props.setProperty(&quot;mail.smtp.port&quot;, smtpPort);</span></span><br><span class="line"><span class="comment">        props.setProperty(&quot;mail.smtp.socketFactory.class&quot;, &quot;javax.net.ssl.SSLSocketFactory&quot;);</span></span><br><span class="line"><span class="comment">        props.setProperty(&quot;mail.smtp.socketFactory.fallback&quot;, &quot;false&quot;);</span></span><br><span class="line"><span class="comment">        props.setProperty(&quot;mail.smtp.socketFactory.port&quot;, smtpPort);</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">        </span><br><span class="line">       <span class="comment">//2、创建定义整个应用程序所需的环境信息的 Session 对象</span></span><br><span class="line">        Session session = Session.getInstance(props);</span><br><span class="line">        <span class="comment">//设置调试信息在控制台打印出来</span></span><br><span class="line">        session.setDebug(<span class="keyword">true</span>);</span><br><span class="line">        <span class="comment">//3、创建邮件的实例对象</span></span><br><span class="line">        Message msg = getMimeMessage(session);</span><br><span class="line">        <span class="comment">//4、根据session对象获取邮件传输对象Transport</span></span><br><span class="line">        Transport transport = session.getTransport();</span><br><span class="line">        <span class="comment">//设置发件人的账户名和密码</span></span><br><span class="line">        transport.connect(senderAccount, senderPassword);</span><br><span class="line">        <span class="comment">//发送邮件，并发送到所有收件人地址，message.getAllRecipients() 获取到的是在创建邮件对象时添加的所有收件人, 抄送人, 密送人</span></span><br><span class="line">        transport.sendMessage(msg,msg.getAllRecipients());</span><br><span class="line">         </span><br><span class="line">        <span class="comment">//如果只想发送给指定的人，可以如下写法</span></span><br><span class="line">        <span class="comment">//transport.sendMessage(msg, new Address[]&#123;new InternetAddress(&quot;xxx@qq.com&quot;)&#125;);</span></span><br><span class="line">         </span><br><span class="line">        <span class="comment">//5、关闭邮件连接</span></span><br><span class="line">        transport.close();</span><br><span class="line">    &#125;</span><br><span class="line">     </span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获得创建一封邮件的实例对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> session</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> MessagingException</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> AddressException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> MimeMessage <span class="title">getMimeMessage</span><span class="params">(Session session)</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        <span class="comment">//1.创建一封邮件的实例对象</span></span><br><span class="line">        MimeMessage msg = <span class="keyword">new</span> MimeMessage(session);</span><br><span class="line">        <span class="comment">//2.From:设置发件人地址</span></span><br><span class="line">        msg.setFrom(<span class="keyword">new</span> InternetAddress(senderAddress));</span><br><span class="line">        </span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 设置收件人地址（可以增加多个收件人、抄送、密送），即下面这一行代码书写多行</span></span><br><span class="line"><span class="comment">         * MimeMessage.RecipientType.TO:发送</span></span><br><span class="line"><span class="comment">         * MimeMessage.RecipientType.CC：抄送</span></span><br><span class="line"><span class="comment">         * MimeMessage.RecipientType.BCC：密送</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="comment">//3.To:收件人</span></span><br><span class="line">        msg.setRecipient(MimeMessage.RecipientType.TO,<span class="keyword">new</span> InternetAddress(recipientAddress));</span><br><span class="line">        <span class="comment">//4.Subject：设置邮件主题</span></span><br><span class="line">        msg.setSubject(<span class="string">&quot;邮件主题&quot;</span>,<span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">        <span class="comment">//5.Content：设置邮件正文（可以使用HTML标签）</span></span><br><span class="line">        msg.setContent(<span class="string">&quot;简单的纯文本邮件！&quot;</span>, <span class="string">&quot;text/html;charset=UTF-8&quot;</span>);</span><br><span class="line">        <span class="comment">//6.设置邮件的发送时间,默认立即发送</span></span><br><span class="line">        msg.setSentDate(<span class="keyword">new</span> Date());</span><br><span class="line">         <span class="comment">//7.保存设置</span></span><br><span class="line">        msg.saveChanges();</span><br><span class="line">        <span class="keyword">return</span> msg;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>执行完上述代码，然后我们查看收件箱：<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/31/607c6806c1ce2c9da2c3c50a604ec342.png"></p><ul><li><strong>邮件发送注意实现</strong><ol><li>发件人的邮箱账户名和密码：有的邮箱设置了独立密码，还有的必须用授权码登录（qq邮箱），要开启SMTP服务</li><li>发件人的SMTP服务器地址：一般是 smtp.xxx.com，比如163邮箱是smtp.163.com，qq邮箱是smtp.qq.com</li><li>有些邮箱服务器要求必须要使用 SSL 安全连接;</li><li>有可能你收件人地址，发件人地址等信息都正确了，控制台也打印了正确的信息，但是在收件箱就是收不到信息。这是因为可能收件箱服务器拒收了你发的邮件（比如认为你的邮件是广告），这时候可能在垃圾箱里能找到，可能找不到。解决办法是重复的邮件内容不要多次发送，或者更换收件箱试试。</li><li>本实例使用的是JavaMail1.6版本，支持的JDK必须是jdk1.7版本！！！</li></ol></li></ul><h2 id="JavaMail接收邮件"><a href="#JavaMail接收邮件" class="headerlink" title="JavaMail接收邮件"></a>JavaMail接收邮件</h2><p> 接收邮件用处不多，稍作了解即可<br> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">package</span> com.lzyblog.mail;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"><span class="keyword">import</span> javax.mail.Address;</span><br><span class="line"><span class="keyword">import</span> javax.mail.Folder;</span><br><span class="line"><span class="keyword">import</span> javax.mail.Message;</span><br><span class="line"><span class="keyword">import</span> javax.mail.Session;</span><br><span class="line"><span class="keyword">import</span> javax.mail.Store;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RecipientMail</span> </span>&#123;</span><br><span class="line">    <span class="comment">//收件人地址</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String recipientAddress = <span class="string">&quot;xxx@163.com&quot;</span>;</span><br><span class="line">    <span class="comment">//收件人账户名</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String recipientAccount = <span class="string">&quot;xxx&quot;</span>;</span><br><span class="line">    <span class="comment">//收件人账户密码</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String recipientPassword = <span class="string">&quot;xxx&quot;</span>;</span><br><span class="line">     </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">//1、连接邮件服务器的参数配置</span></span><br><span class="line">        Properties props = <span class="keyword">new</span> Properties();</span><br><span class="line">        <span class="comment">//设置传输协议</span></span><br><span class="line">        props.setProperty(<span class="string">&quot;mail.store.protocol&quot;</span>, <span class="string">&quot;pop3&quot;</span>);</span><br><span class="line">        <span class="comment">//设置收件人的POP3服务器</span></span><br><span class="line">        props.setProperty(<span class="string">&quot;mail.pop3.host&quot;</span>, <span class="string">&quot;pop3.163.com&quot;</span>);</span><br><span class="line">        <span class="comment">//2、创建定义整个应用程序所需的环境信息的 Session 对象</span></span><br><span class="line">        Session session = Session.getInstance(props);</span><br><span class="line">        <span class="comment">//设置调试信息在控制台打印出来</span></span><br><span class="line">        <span class="comment">//session.setDebug(true);</span></span><br><span class="line">         </span><br><span class="line">        Store store = session.getStore(<span class="string">&quot;pop3&quot;</span>);</span><br><span class="line">        <span class="comment">//连接收件人POP3服务器</span></span><br><span class="line">        store.connect(<span class="string">&quot;pop3.163.com&quot;</span>, recipientAccount, recipientPassword);</span><br><span class="line">        <span class="comment">//获得用户的邮件账户，注意通过pop3协议获取某个邮件夹的名称只能为inbox</span></span><br><span class="line">        Folder folder = store.getFolder(<span class="string">&quot;inbox&quot;</span>);</span><br><span class="line">        <span class="comment">//设置对邮件账户的访问权限</span></span><br><span class="line">        folder.open(Folder.READ_WRITE);</span><br><span class="line">         </span><br><span class="line">        <span class="comment">//得到邮件账户的所有邮件信息</span></span><br><span class="line">        Message [] messages = folder.getMessages();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; messages.length ; i++)&#123;</span><br><span class="line">            <span class="comment">//获得邮件主题</span></span><br><span class="line">            String subject = messages[i].getSubject();</span><br><span class="line">            <span class="comment">//获得邮件发件人</span></span><br><span class="line">            Address[] from = messages[i].getFrom();</span><br><span class="line">            <span class="comment">//获取邮件内容（包含邮件内容的html代码）</span></span><br><span class="line">            String content = (String) messages[i].getContent();</span><br><span class="line">        &#125;</span><br><span class="line">         </span><br><span class="line">        <span class="comment">//关闭邮件夹对象</span></span><br><span class="line">        folder.close();</span><br><span class="line">        <span class="comment">//关闭连接对象</span></span><br><span class="line">        store.close();</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="发送带图片、附件的邮件"><a href="#发送带图片、附件的邮件" class="headerlink" title="发送带图片、附件的邮件"></a>发送带图片、附件的邮件</h2><p>先看项目结构，在src目录下包含图片和附件<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/31/ed604608381745ea58c8d5ade531e255.png"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.lzyblog.mail;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> javax.activation.DataHandler;</span><br><span class="line"><span class="keyword">import</span> javax.activation.FileDataSource;</span><br><span class="line"><span class="keyword">import</span> javax.mail.Message;</span><br><span class="line"><span class="keyword">import</span> javax.mail.MessagingException;</span><br><span class="line"><span class="keyword">import</span> javax.mail.Session;</span><br><span class="line"><span class="keyword">import</span> javax.mail.Transport;</span><br><span class="line"><span class="keyword">import</span> javax.mail.internet.AddressException;</span><br><span class="line"><span class="keyword">import</span> javax.mail.internet.InternetAddress;</span><br><span class="line"><span class="keyword">import</span> javax.mail.internet.MimeBodyPart;</span><br><span class="line"><span class="keyword">import</span> javax.mail.internet.MimeMessage;</span><br><span class="line"><span class="keyword">import</span> javax.mail.internet.MimeMultipart;</span><br><span class="line"><span class="keyword">import</span> javax.mail.internet.MimeUtility;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SendMailText_Picture_Enclosure</span> </span>&#123;</span><br><span class="line">    <span class="comment">//发件人邮箱地址</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String senderAddress = <span class="string">&quot;xxxx@163.com&quot;</span>;</span><br><span class="line">    <span class="comment">//收件人邮箱地址</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String recipientAddress = <span class="string">&quot;xxxx@qq.com&quot;</span>;</span><br><span class="line">    <span class="comment">//发件人邮箱账户名</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String senderAccount = <span class="string">&quot;xxxx@163.com&quot;</span>;</span><br><span class="line">    <span class="comment">//发件人邮箱账户密码</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String senderPassword = <span class="string">&quot;xxxxxxxxxxxxxx&quot;</span>;</span><br><span class="line">     </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">//1、连接邮件服务器的参数配置</span></span><br><span class="line">        Properties props = <span class="keyword">new</span> Properties();</span><br><span class="line">        <span class="comment">//设置用户的认证方式</span></span><br><span class="line">        props.setProperty(<span class="string">&quot;mail.smtp.auth&quot;</span>, <span class="string">&quot;true&quot;</span>);</span><br><span class="line">        <span class="comment">//设置传输协议</span></span><br><span class="line">        props.setProperty(<span class="string">&quot;mail.transport.protocol&quot;</span>, <span class="string">&quot;smtp&quot;</span>);</span><br><span class="line">        <span class="comment">//设置发件人的SMTP服务器地址</span></span><br><span class="line">        props.setProperty(<span class="string">&quot;mail.smtp.host&quot;</span>, <span class="string">&quot;smtp.163.com&quot;</span>);</span><br><span class="line">        <span class="comment">//2、创建定义整个应用程序所需的环境信息的 Session 对象</span></span><br><span class="line">        Session session = Session.getInstance(props);</span><br><span class="line">        <span class="comment">//设置调试信息在控制台打印出来</span></span><br><span class="line">        session.setDebug(<span class="keyword">true</span>);</span><br><span class="line">        <span class="comment">//3、创建邮件的实例对象</span></span><br><span class="line">        Message msg = getMimeMessage(session);</span><br><span class="line">        <span class="comment">//4、根据session对象获取邮件传输对象Transport</span></span><br><span class="line">        Transport transport = session.getTransport();</span><br><span class="line">        <span class="comment">//设置发件人的账户名和密码</span></span><br><span class="line">        transport.connect(senderAccount, senderPassword);</span><br><span class="line">        <span class="comment">//发送邮件，并发送到所有收件人地址，message.getAllRecipients() 获取到的是在创建邮件对象时添加的所有收件人, 抄送人, 密送人</span></span><br><span class="line">        transport.sendMessage(msg,msg.getAllRecipients());</span><br><span class="line">         </span><br><span class="line">        <span class="comment">//5、关闭邮件连接</span></span><br><span class="line">        transport.close();</span><br><span class="line">    &#125;</span><br><span class="line">     </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获得创建一封邮件的实例对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> session</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> MessagingException</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> AddressException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> MimeMessage <span class="title">getMimeMessage</span><span class="params">(Session session)</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        <span class="comment">//1.创建一封邮件的实例对象</span></span><br><span class="line">        MimeMessage msg = <span class="keyword">new</span> MimeMessage(session);</span><br><span class="line">        <span class="comment">//2.设置发件人地址</span></span><br><span class="line">        msg.setFrom(<span class="keyword">new</span> InternetAddress(senderAddress));</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 3.设置收件人地址（可以增加多个收件人、抄送、密送），即下面这一行代码书写多行</span></span><br><span class="line"><span class="comment">         * MimeMessage.RecipientType.TO:发送</span></span><br><span class="line"><span class="comment">         * MimeMessage.RecipientType.CC：抄送</span></span><br><span class="line"><span class="comment">         * MimeMessage.RecipientType.BCC：密送</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        msg.setRecipient(MimeMessage.RecipientType.TO,<span class="keyword">new</span> InternetAddress(recipientAddress));</span><br><span class="line">        <span class="comment">//4.设置邮件主题</span></span><br><span class="line">        msg.setSubject(<span class="string">&quot;邮件主题(包含图片和附件)&quot;</span>,<span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">         </span><br><span class="line">        <span class="comment">//下面是设置邮件正文</span></span><br><span class="line">        <span class="comment">//msg.setContent(&quot;简单的纯文本邮件！&quot;, &quot;text/html;charset=UTF-8&quot;);</span></span><br><span class="line">         </span><br><span class="line">        <span class="comment">// 5. 创建图片&quot;节点&quot;</span></span><br><span class="line">        MimeBodyPart image = <span class="keyword">new</span> MimeBodyPart();</span><br><span class="line">        <span class="comment">// 读取本地文件</span></span><br><span class="line">        DataHandler dh = <span class="keyword">new</span> DataHandler(<span class="keyword">new</span> FileDataSource(<span class="string">&quot;src\\mailTestPic.png&quot;</span>));</span><br><span class="line">        <span class="comment">// 将图片数据添加到&quot;节点&quot;</span></span><br><span class="line">        image.setDataHandler(dh);</span><br><span class="line">        <span class="comment">// 为&quot;节点&quot;设置一个唯一编号（在文本&quot;节点&quot;将引用该ID）</span></span><br><span class="line">        image.setContentID(<span class="string">&quot;mailTestPic&quot;</span>);    </span><br><span class="line">         </span><br><span class="line">        <span class="comment">// 6. 创建文本&quot;节点&quot;</span></span><br><span class="line">        MimeBodyPart text = <span class="keyword">new</span> MimeBodyPart();</span><br><span class="line">        <span class="comment">// 这里添加图片的方式是将整个图片包含到邮件内容中, 实际上也可以以 http 链接的形式添加网络图片</span></span><br><span class="line">        text.setContent(<span class="string">&quot;这是一张图片&lt;br/&gt;&lt;a href=&#x27;https://lzyblog.github.io/&#x27;&gt;&lt;img src=&#x27;cid:mailTestPic&#x27;/&gt;&lt;/a&gt;&quot;</span>, <span class="string">&quot;text/html;charset=UTF-8&quot;</span>);</span><br><span class="line">         </span><br><span class="line">        <span class="comment">// 7. （文本+图片）设置 文本 和 图片&quot;节点&quot;的关系（将 文本 和 图片&quot;节点&quot;合成一个混合&quot;节点&quot;）</span></span><br><span class="line">        MimeMultipart mm_text_image = <span class="keyword">new</span> MimeMultipart();</span><br><span class="line">        mm_text_image.addBodyPart(text);</span><br><span class="line">        mm_text_image.addBodyPart(image);</span><br><span class="line">        mm_text_image.setSubType(<span class="string">&quot;related&quot;</span>);    <span class="comment">// 关联关系</span></span><br><span class="line">         </span><br><span class="line">        <span class="comment">// 8. 将 文本+图片 的混合&quot;节点&quot;封装成一个普通&quot;节点&quot;</span></span><br><span class="line">        <span class="comment">// 最终添加到邮件的 Content 是由多个 BodyPart 组成的 Multipart, 所以我们需要的是 BodyPart,</span></span><br><span class="line">        <span class="comment">// 上面的 mailTestPic 并非 BodyPart, 所有要把 mm_text_image 封装成一个 BodyPart</span></span><br><span class="line">        MimeBodyPart text_image = <span class="keyword">new</span> MimeBodyPart();</span><br><span class="line">        text_image.setContent(mm_text_image);</span><br><span class="line">         </span><br><span class="line">        <span class="comment">// 9. 创建附件&quot;节点&quot;</span></span><br><span class="line">        MimeBodyPart attachment = <span class="keyword">new</span> MimeBodyPart();</span><br><span class="line">        <span class="comment">// 读取本地文件</span></span><br><span class="line">        DataHandler dh2 = <span class="keyword">new</span> DataHandler(<span class="keyword">new</span> FileDataSource(<span class="string">&quot;src\\mailTestDoc.docx&quot;</span>));</span><br><span class="line">        <span class="comment">// 将附件数据添加到&quot;节点&quot;</span></span><br><span class="line">        attachment.setDataHandler(dh2);</span><br><span class="line">        <span class="comment">// 设置附件的文件名（需要编码）</span></span><br><span class="line">        attachment.setFileName(MimeUtility.encodeText(dh2.getName()));       </span><br><span class="line">         </span><br><span class="line">        <span class="comment">// 10. 设置（文本+图片）和 附件 的关系（合成一个大的混合&quot;节点&quot; / Multipart ）</span></span><br><span class="line">        MimeMultipart mm = <span class="keyword">new</span> MimeMultipart();</span><br><span class="line">        mm.addBodyPart(text_image);</span><br><span class="line">        mm.addBodyPart(attachment);     <span class="comment">// 如果有多个附件，可以创建多个多次添加</span></span><br><span class="line">        mm.setSubType(<span class="string">&quot;mixed&quot;</span>);         <span class="comment">// 混合关系</span></span><br><span class="line"> </span><br><span class="line">        <span class="comment">// 11. 设置整个邮件的关系（将最终的混合&quot;节点&quot;作为邮件的内容添加到邮件对象）</span></span><br><span class="line">        msg.setContent(mm);</span><br><span class="line">        <span class="comment">//设置邮件的发送时间,默认立即发送</span></span><br><span class="line">        msg.setSentDate(<span class="keyword">new</span> Date());</span><br><span class="line">         </span><br><span class="line">        <span class="keyword">return</span> msg;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>执行程序后查看<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/31/bcbd5bf285e7bc553f5847e9b7ae4c32.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;感谢&lt;a href=&quot;https://www.cnblogs.com/ysocean/p/7652934.html&quot;&gt;YSOcean&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;电子邮件的接发过程&quot;&gt;&lt;a href=&quot;#电子邮件的接发过程&quot; class=&quot;headerlink&quot; tit</summary>
      
    
    
    
    <category term="Java" scheme="http://example.com/categories/Java/"/>
    
    
    <category term="JavaMail" scheme="http://example.com/tags/JavaMail/"/>
    
  </entry>
  
  <entry>
    <title>史上最浅显易懂的Git教程</title>
    <link href="http://example.com/2020/12/27/GIt/%E5%8F%B2%E4%B8%8A%E6%9C%80%E6%B5%85%E6%98%BE%E6%98%93%E6%87%82%E7%9A%84Git%E6%95%99%E7%A8%8B/"/>
    <id>http://example.com/2020/12/27/GIt/%E5%8F%B2%E4%B8%8A%E6%9C%80%E6%B5%85%E6%98%BE%E6%98%93%E6%87%82%E7%9A%84Git%E6%95%99%E7%A8%8B/</id>
    <published>2020-12-27T05:34:40.123Z</published>
    <updated>2021-01-02T02:30:21.960Z</updated>
    
    <content type="html"><![CDATA[<h1 id="教程推荐"><a href="#教程推荐" class="headerlink" title="教程推荐"></a>教程推荐</h1><p><a href="https://www.liaoxuefeng.com/wiki/896043488029600">Git教程</a><br><a href="https://www.bilibili.com/video/BV1FE411P7B3">Git最新教程通俗易懂</a><br><a href="https://www.bilibili.com/video/BV1pW411A7a5">尚硅谷GitHub教程</a></p><h1 id="下载Git"><a href="#下载Git" class="headerlink" title="下载Git"></a>下载Git</h1><ul><li>首先你需要一个github账号，所有还没有的话先去注册吧！</li><li>我们使用git需要先安装git工具，这里给出下载地址，下载后一路直接安装即可：<a href="https://gitforwindows.org/">https://gitforwindows.org/</a></li></ul><h1 id="创建仓库"><a href="#创建仓库" class="headerlink" title="创建仓库"></a>创建仓库</h1><ul><li>进入Github首页，点击<strong>New repository</strong>新建一个项目</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/27/dc31ad6f25861bbc77cf87aedee85834.png"></p><ul><li><p>填写相应信息后点击<strong>create</strong>即可<br>Repository name: 仓库名称<br>Description(可选): 仓库描述介绍<br>Public, Private : 仓库权限（公开共享，私有或指定合作者）<br>Initialize this repository with a README: 添加一个README.md<br>gitignore: 不需要进行版本管理的仓库类型，对应生成文件.gitignore<br>license: 证书类型，对应生成文件LICENSE<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/27/a8daa307c2fb5cfca92ad8afd8667357.png"></p></li><li><p>点击Clone or dowload会出现一个地址，copy这个地址备用。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/27/d6f0d035757ae5a71be52819987d6358.png"></p></li></ul><h1 id="本地操作"><a href="#本地操作" class="headerlink" title="本地操作"></a>本地操作</h1><ul><li><p>接下来就到本地操作了，首先右键你的项目，如果你之前安装git成功的话，右键会出现两个新选项，分别为Git Gui Here,Git Bash Here,这里我们选择Git Bash Here，进入如下界面，MyCode即为我的项目文件名。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/27/ba9b7558b7ab673b34519c2fc29d29c4.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/27/1105ccee96316f1c78ded6c2c865274b.png"></p></li><li><p>接下来输入如下代码（关键步骤），把github上面的仓库克隆到本地，后面URL为以上copy的地址</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> https://github.com/lzyblog/MyCode.git</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/27/12aedd272f9957df2c46237520a4f23e.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/27/e10d6acbe844d15c79eabbbf5562626e.png"></p><ul><li>进入克隆到本地的文件中，可以看到GitHub仓库里的文件</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> MyCode</span><br></pre></td></tr></table></figure><ul><li>接着，将想要提交（上传）到GitHub的代码拷贝到本地计算机中的MyCode文件夹，然后执行“git add .”命令。这里的”.”表示将当前目录下所有改动的文件夹及文件添加到版本管理器。</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git add .  <span class="comment">#把该目录下的所有文件添加到仓库</span></span><br></pre></td></tr></table></figure><ul><li>执行git commit -m “First commit”命令，提交到本地的版本控制库里，引号里面是你对本次提交的说明信息</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m <span class="string">&quot;First commit&quot;</span>   <span class="comment">#添加-m参数，提交的注释内容</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/27/f9acda0b7f3a3bea0f8169353d42fb97.png"></p><h1 id="本地上传"><a href="#本地上传" class="headerlink" title="本地上传"></a>本地上传</h1><ul><li>连接GitHUb，注意执行顺序<br>创建SSH Key</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ git init   <span class="comment">#通过命令git init把这个文件夹变成Git可管理的仓库 </span></span><br><span class="line">$ git config user.name <span class="string">&quot;github_username&quot;</span></span><br><span class="line">$ git config user.email <span class="string">&quot;github_email&quot;</span></span><br><span class="line"><span class="comment"># 以上只需要第一次上传的时候执行，第二次上传不需要再执行</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git add *   <span class="comment">#git add 项目文件名</span></span><br><span class="line">$ git commit  -m <span class="string">&#x27;some msg&#x27;</span>  <span class="comment"># some msg为描述信息</span></span><br></pre></td></tr></table></figure><ul><li>最后，执行” git push origin master“命令将本地仓库提交到远程的GitHub中，这里会用到注册的用户名和密码。输入密码的时候默认是没有任何提示符。</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git push origin main <span class="comment">#main也可以是master，具体看仓库</span></span><br></pre></td></tr></table></figure><p>这样，刷新GitHub仓库，你的代码就上传了！<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/27/a00faf273b5cb84e9a375e00c3f99b44.png"></p><h1 id="删除仓库"><a href="#删除仓库" class="headerlink" title="删除仓库"></a>删除仓库</h1><p>进入到需要删除的仓库界面，找到settings点击进入Denger Zone，如下图所示<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/31/a20b95e63a9f8f21d226c6dd8b63e615.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/31/ca8a90fee73639f1eb0987b916227ce7.png"><br>点击“Delete this repository”会出现弹框，里面输入你要删除的仓库的名字后点击底下的红色字体，目的是避免误删<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/31/b81003ace0dc5da0e914019edaa79bdd.png"></p><h1 id="删除文件"><a href="#删除文件" class="headerlink" title="删除文件"></a>删除文件</h1><p>在GitHub上只能删除仓库，单独删除文件或者文件夹需要命令来解决</p><ul><li><strong>本地仓库的文件和远程仓库的文件同时删除</strong><br>先打开本地仓库的文件夹，选择要删除的文件或者文件夹点击删除，注意github仓库不要删除<br>然后执行下面的命令行即可，刷新页面后远程仓库的文件或者文件夹就已经被删除了</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git add *     <span class="comment">#把本地仓库的文件上传到缓存</span></span><br><span class="line">$ git commit -m <span class="string">&#x27;del&#x27;</span>  <span class="comment">#把第一步上传到缓存的东西上传到本地仓库，其中‘del’是操作标识，内容随便填</span></span><br><span class="line">$ git push origin main <span class="comment">#把本地仓库的文件上传到远程仓库 main可以是master</span></span><br></pre></td></tr></table></figure><ul><li><strong>只删除远程仓库，不删除本地仓库</strong><br>进入到Git Bash窗口，执行以下命令</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ git pull origin main <span class="comment">#将远程仓库里面的项目拉下来 main/master</span></span><br><span class="line">$ dir     <span class="comment">#查看有哪些文件夹</span></span><br><span class="line">$ git rm -r --cached JavaMailProject <span class="comment">#删除你要删除的文件每次，这里是删除JavaMailProject文件（cached不会把本地的flashview文件夹删除）</span></span><br><span class="line">$ git commit -m <span class="string">&#x27;删除了JavaMailProject&#x27;</span> <span class="comment">#提交，添加操作说明</span></span><br><span class="line">$ git push -u origin main <span class="comment">#重新提交 main也可以是master分支</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/31/2221b2fa73a7fe33dc44d71da294d8a1.png"></p><h1 id="下载代码"><a href="#下载代码" class="headerlink" title="下载代码"></a>下载代码</h1><p>那么怎么从GitHub上下载开源代码呢？</p><ul><li><p>先在本地新建一个文件夹，把该文件夹作为一个本地仓库。然后使用终端命令(<code>Git Bash Here</code>)进入该文件夹。比如我把Github Pages作为这个项目的文件夹。</p></li><li><p>在GitHub中找到项目路径，复制。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/27/e0f86592c789331b4597c783acbbe4d8.png"></p></li><li><p>在终端执行如下代码   注意：这个命令一定要在刚才的目录下(GitHub Pages文件夹下)执行。等待几秒钟</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> https://github.com/xxxx.git</span><br></pre></td></tr></table></figure><p>然后就可以看到文件夹已经取下来了</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;教程推荐&quot;&gt;&lt;a href=&quot;#教程推荐&quot; class=&quot;headerlink&quot; title=&quot;教程推荐&quot;&gt;&lt;/a&gt;教程推荐&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://www.liaoxuefeng.com/wiki/896043488029600&quot;&gt;Git</summary>
      
    
    
    
    <category term="Git" scheme="http://example.com/categories/Git/"/>
    
    
    <category term="Git" scheme="http://example.com/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>Node.js</title>
    <link href="http://example.com/2020/12/26/%E5%90%8E%E7%AB%AF/Node.js/"/>
    <id>http://example.com/2020/12/26/%E5%90%8E%E7%AB%AF/Node.js/</id>
    <published>2020-12-26T05:03:21.157Z</published>
    <updated>2021-01-02T02:28:05.246Z</updated>
    
    <content type="html"><![CDATA[<h1 id="教程推荐"><a href="#教程推荐" class="headerlink" title="教程推荐"></a>教程推荐</h1><p><a href="https://www.runoob.com/nodejs/nodejs-tutorial.html">Node.js|菜鸟教程</a><br><a href="https://www.vxzsk.com/1002.html">Nodejs入门教程</a><br><a href="https://www.vxzsk.com/980.html">NodeJs教程</a><br><a href="https://www.bilibili.com/video/BV1Ns411N7HU">黑马程序员Nodejs入门视频教程</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;教程推荐&quot;&gt;&lt;a href=&quot;#教程推荐&quot; class=&quot;headerlink&quot; title=&quot;教程推荐&quot;&gt;&lt;/a&gt;教程推荐&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://www.runoob.com/nodejs/nodejs-tutorial.html&quot;&gt;N</summary>
      
    
    
    
    <category term="后端" scheme="http://example.com/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
    <category term="Node.js" scheme="http://example.com/tags/Node-js/"/>
    
  </entry>
  
  <entry>
    <title>UML软件建模技术</title>
    <link href="http://example.com/2020/12/21/%E7%AC%94%E8%AE%B0/UML%E8%BD%AF%E4%BB%B6%E5%BB%BA%E6%A8%A1%E6%8A%80%E6%9C%AF/"/>
    <id>http://example.com/2020/12/21/%E7%AC%94%E8%AE%B0/UML%E8%BD%AF%E4%BB%B6%E5%BB%BA%E6%A8%A1%E6%8A%80%E6%9C%AF/</id>
    <published>2020-12-21T11:03:32.703Z</published>
    <updated>2021-01-02T02:30:59.621Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://8cd76980.wiz03.com/wapp/pages/view/share/s/2cRSC023Th7G2ouHSc1X-mcI11LFN60HM4Ot2CUbvE1bu5Yq">UML知识点</a></p><h1 id="UML与RUP"><a href="#UML与RUP" class="headerlink" title="UML与RUP"></a>UML与RUP</h1><ul><li><p><code>UML (Unified Modeling Language)</code>统一建模语言<br>为面向对象软件设计提供统一的、标准的、可视化的建模语言。</p></li><li><p><code>Rational统一过程(Rational Unified Process RUP)</code><br>统一软件开发过程采用用例来描述用户需求，同时提供了一套方法把用例转化为设计的类图，进一步变成最终的程序代码。</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/30/59e0f0915e745d559363fee6802faed6.png"><br>使用RUP开发软件产品，每个软件产品的开发过程都应该包括多次循环。每个循环包括四个阶段：<strong>初始、细化、构造和交付</strong>。每个阶段又包括多个迭代过程。在RUP模型图中包括九个工作流，被称为RUP的核心工作流。核心工作流进一步分为六个核心过程工作流和三个核心支持工作流。</p><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/30/5bd2cfedfad6ed627b7096345f6c2795.png"></p><h1 id="Rational-Rose"><a href="#Rational-Rose" class="headerlink" title="Rational Rose"></a>Rational Rose</h1><p>Rational Rose是Rational公司出品的一种面向对象的统一建模语言的可视化建模工具。用于可视化建模和公司级水平软件应用的组件构造。<a href="https://blog.csdn.net/hdkvsyralkvv_hk/article/details/105330982">Win10 安装 Rational Rose 教程（带超详细图文）</a><br>ROSE中的视图包括：<strong>用例视图（Use-case view）、逻辑视图（Logical view）、组件视图（Component view）、部署视图（Deployment View）</strong><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/30/0b65326b93becab2868984df5e689f75.png"></p><h1 id="UML构成"><a href="#UML构成" class="headerlink" title="UML构成"></a>UML构成</h1><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/30/c53060a22718a9a62d48824aa4b2f977.png"></p><ul><li>UML中的视图包括：逻辑视图（Logical view）、并发视图（Concurrency View）、组件视图（Component view）、配置视图（Deployment View）、用例视图（Use-case view）五种。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/30/116347b11c06998fdf2aeb9b631efb98.png"></li></ul><p><strong>用例视图</strong>：强调从系统的外部参与者（主要是用户）角度看到的或需要的系统功能。<br><strong>逻辑视图</strong>： 逻辑视图用来揭示系统功能的内部设计和协作情况。体现了系统的功能需求。<br><strong>并发视图</strong>：用来显示系统的并发工作状况<br><strong>组件视图</strong>：用来显示代码组件的组织方式。它描述了系统的实现模块和它们之间的依赖关系。<br><strong>部署视图</strong>：描述了软件到硬件的映射，反映了分布式特性。配置视图体现了系统的安装部署要求。</p><h1 id="UML图"><a href="#UML图" class="headerlink" title="UML图"></a>UML图</h1><p>图是一组元素的图形表示。为了对系统进行可视化，可以从不同的角度画图。在理论上，图可以包含任何事物及其关系的组合。<br>在UML中包含9类图： </p><ol><li><strong>类图(class diagram)</strong></li><li><strong>对象图(object diagram)</strong></li><li><strong>用例图(use case diagram)</strong></li><li><strong>顺序图(sequence diagram)</strong></li><li><strong>协作图(collaboration diagram)</strong></li><li><strong>状态图(statechart diagram)</strong></li><li><strong>活动图(activity diagram)</strong></li><li><strong>组件图(component diagram)</strong></li><li><strong>部署图(deployment diagram)</strong></li></ol><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/30/0e621fbfa74ecf5005bdd1f15abab92a.png"></p><h1 id="UML事物构造块"><a href="#UML事物构造块" class="headerlink" title="UML事物构造块"></a>UML事物构造块</h1><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/30/cfc63cd5aa667696b13cab1d1345fa5a.png"></p><p><strong>事物构造块</strong>对模型中最具有代表性的<strong>成分的抽象</strong></p><ol><li><strong>结构事物</strong>：UML中的名词，模型的静态部分，描述概念或物理元素    </li><li><strong>行为事物</strong>：UML中的动词，模型的动态部分，一种跨越时间、空间的行为         </li><li><strong>分组事物</strong> ：UML中的容器，用来组织模型，是模型更加的结构化</li><li><strong>注释事物</strong> ：UML中的解释部分，和代码中的注释语句一样，是用来描述模型的。</li></ol><h2 id="结构事物"><a href="#结构事物" class="headerlink" title="结构事物"></a>结构事物</h2><h3 id="类图"><a href="#类图" class="headerlink" title="类图"></a>类图</h3><ul><li>类<br>是具有<strong>相同属性、相同操作</strong>的一组对象的集合的抽象描述。在图形上，类用一个矩形来表示，通常矩形中写有类的名称、类的属性和类的操作</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/30/5c85c0bfa690aa1a6d8e6a3d84c8c31d.png"></p><ul><li><strong>类图</strong><br>用来表示系统中的类和类与类之间的关系，它是对系统<strong>静态结构</strong>的描述 </li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/30/d3532f9b6719aa8f9464c793b6bcc811.png"></p><ul><li><strong>类之间的关系</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/30/232d66f21fca146673f45c5b621ede27.png"></p><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/30/eed0a4b9093d8ad7f0ae4f750be7a085.png"></p><h3 id="接口"><a href="#接口" class="headerlink" title="接口"></a>接口</h3><p><strong>接口(interface)是描述了一个类或组件所提供的服务（操作）</strong>，或者说，接口描述了类或组件对外的、可见的动作。接口很少单独存在，而是依附于实现接口的类或组件<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/30/854d8007b2d977495895529a8b074e1d.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/30/44016f3ce0dcf00fdd673daa90376ae5.png"></p><h3 id="协作图"><a href="#协作图" class="headerlink" title="协作图"></a>协作图</h3><ul><li><p><strong>协作</strong><br>描述合作完成某个特定任务的一组类及其关联的集合，用于使用情形的实现建模。<br>在图形上，协作用一个包含名称的虚线椭圆表示。 Rose中不使用这种方法。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/30/3c950a631aaa3b977df834d1cde93be8.png"></p></li><li><p><strong>协作图</strong><br>除了显示消息变化（称为交互）外，协作图还显示了对象和它们之间的关系（称为上下文有关）<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/30/c3a8487e301e697c0d06f23dee647d9f.png"></p></li></ul><h3 id="用例图"><a href="#用例图" class="headerlink" title="用例图"></a>用例图</h3><ul><li><p><strong>用例</strong><br>用例是对一组序列动作的描述，系统执行这些动作将对用例的参与者(actor ，有些书翻译成“角色”)产生可以观察的结果。<br>在图形上，<strong>用例</strong>用<strong>实线的椭圆</strong>表示，<strong>参与者</strong>用一个<strong>人形的图案</strong>表示。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/30/bcbb6913eb66ae0356964adae9b96804.png"></p></li><li><p><strong>用例图</strong><br>用于显示若干参与者（actor）以及这些参与者与系统提供的用例之间的连接关系。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/30/65339d71cdd2e44364446f8cf7c44bd8.png"></p></li><li><p><strong>用例之间的关系</strong></p><ol><li><strong>关联</strong><br>表示参与者和用例之间的交互。为通信途径，任何一方都可发送或可接收消息。<br>箭头指向：<strong>指向消息接收方。在UML中用直线表示</strong></li><li><strong>包含</strong><br>基本用例的行为包含了另一个用例的行为。基本用例描述在多个用例中都有的公共行为。包含关系本质上是比较特殊的依赖关系。<br>箭头指向：<strong>从基本用例到包含用例。</strong></li><li><strong>扩展</strong><br>展关系是指用例功能的延伸。与包含关系不同的是，扩展用例是可选的，如果缺少扩展用例。不会影响到基用例的完整性。<br>箭头指向：<strong>用带箭头的虚线段加《extend》表示，箭头指向基用例。</strong></li><li><strong>泛化</strong><br>代表一般与特殊的关系。它的意思和面向对象程序设计中的继承的概念是类似的。不同的是继承使用在实施阶段，泛化使用在分析、设计阶段。在泛化关系中子用例继承了父用例的行为和含义，子用例也可以增加新的行为和含义或者覆盖父用例中的行为和含义。<br>箭头指向：<strong>泛化关系用空心箭头表示，箭头指向的是父用例。</strong></li></ol></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/30/db21a6fa0eba1929f88f74595b4f3b4a.png"></p><h3 id="部署图"><a href="#部署图" class="headerlink" title="部署图"></a>部署图</h3><ul><li><p><strong>节点</strong><br>节点是系统在运行时存在的物理模型，代表一个<strong>可计算</strong>的资源，比如说一台数据库服务器。在图形上，节点用一个<strong>立方体</strong>来表示。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/30/fafcb978d058ebdf0e24d72031aba8de.png"></p></li><li><p><strong>部署图</strong><br>显示系统中软件和硬件的物理架构。通常部署图中显示实际的计算机和设备（用结点表示），以及各个结点之间的关系（还可以显示关系的类型）。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/30/acd882723a7d29d4ea4b17ef14628282.png"></p></li></ul><h3 id="组件图"><a href="#组件图" class="headerlink" title="组件图"></a>组件图</h3><ul><li><strong>组件</strong><br>组件是系统中物理的、可替代的部件，是一个描述了一些逻辑元素(如类、接口)的物理包。在图形上，组件由一个<strong>带有小方框的矩形</strong>表示。通常在矩形中只写该组件的名字。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/30/8891af439f7949b5f9acb1086f64baec.png"></p><ul><li><strong>组件图</strong><br>用来反映代码的物理结构。代码的物理结构用代码组件表示。组件可以是源代码、二进制文件或可执行文件组件。 </li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/30/28a6202362dd88c8cf07978be8ce1dd4.png"></p><h2 id="行为事物"><a href="#行为事物" class="headerlink" title="行为事物"></a>行为事物</h2><p>结构事物描述的是模型的静态部分，而行为事物描述的是模型的动态部分。一共有两类主要的行为事物。<br><strong>①交互(interaction)</strong><br>交互是由一组对象之间在特定上下文中，为达到特定的目的而进行的一系列消息交换而组成的动作。<br>   在图形上，交互的消息通常用带箭头的直线表示。（顺序图）<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/30/f348428b8501e68351ea2eef818f9b47.png"><br><strong>②状态机(state machine)</strong><br>状态机由一系列对象的状态组成。（状态图）<br><strong>③活动（activity)</strong><br>描述了一个操作执行时的过程信息。一个活动包含在操作执行过程中的一个步骤之间的先后序列关系。（活动图）</p><h3 id="状态图"><a href="#状态图" class="headerlink" title="状态图"></a>状态图</h3><p><strong>状态图</strong>是对类所描述事物的补充说明，它显示了类的所有对象可能具有的状态，以及引起状态变化的事件 。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/30/c9ae3d642a4e6802cb9b847cf566c558.png"></p><h3 id="活动图"><a href="#活动图" class="headerlink" title="活动图"></a>活动图</h3><p>反映一个连续的活动流，相对于描述活动流（比如，用例或交互）来说，活动图更常用于描述某个操作执行时的活动状况。 活动图由<strong>各种动作状态</strong>组成。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/30/fe52dbd17de15dc045d05adf35bfbd22.png"></p><h3 id="顺序图"><a href="#顺序图" class="headerlink" title="顺序图"></a>顺序图</h3><p>用来反映若干个对象之间的<strong>动态协作关系</strong>，也就是随着时间的流逝，对象之间是如何交互的 。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/30/9d55900a9703dde9a8a755031c542a2e.png"></p><h3 id="协作图-1"><a href="#协作图-1" class="headerlink" title="协作图"></a>协作图</h3><p>除了显示消息变化（称为交互）外，协作图还显示了对象和它们之间的关系（称为上下文有关） 。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/30/c3a8487e301e697c0d06f23dee647d9f.png"></p><h2 id="分组事物"><a href="#分组事物" class="headerlink" title="分组事物"></a>分组事物</h2><ul><li>分组事物是UML模型中负责分组的部分，可以把它看作一个一个的盒子，每个盒子里面的对象关系相对复杂，而盒子与盒子之间的关系相对简单。最主要的分组事物是包。</li><li>**包(package)**是把元素组织成组的机制。结构事物、行为事物甚至其他的分组事物都可以放进包内。在图形上，包用一个在左上角带有一个小矩形的大矩形表示。   </li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/30/f86fe16e4a3a2477c7b0df6081495f8e.png"></p><h3 id="包图"><a href="#包图" class="headerlink" title="包图"></a>包图</h3><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/30/b1196c9f228a79c810bfe2031c122b3e.png"></p><h2 id="注释事物"><a href="#注释事物" class="headerlink" title="注释事物"></a>注释事物</h2><p>注释事物是UML模型的解释部分。这些注释事物用来描述、说明和标注模型的任何元素。有一种主要的注释事物，称为注解(note)。在图形上，注解用一个右上角是折角的矩形表示 。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/30/a0d0beb3af94fd561779e9ed859f27aa.png"></p><h1 id="UML关系构造块"><a href="#UML关系构造块" class="headerlink" title="UML关系构造块"></a>UML关系构造块</h1><h2 id="依赖关系"><a href="#依赖关系" class="headerlink" title="依赖关系"></a>依赖关系</h2><p>依赖是两个事物间的语义关系，其中一个事物(独立事物)发生变化，会影响到另一个事物(依赖事物)的语义。<br> 表示方法：<strong>虚线加箭头</strong><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/30/8707c876042d73b9a6805b7ab078d68c.png"></p><h2 id="关联关系"><a href="#关联关系" class="headerlink" title="关联关系"></a>关联关系</h2><p>关联关系：类与类之间的联结，它使一个类知道另一个类的属性和方法。可以双向，也可以单向。<br>表示方法：双向关联可以<strong>实线加两个箭头或者没箭头，或者单向关联实线加一个箭头</strong></p><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/30/1ba55358a9f33fd0d3d4f7c0f0fb7249.png"></p><h2 id="聚合关系"><a href="#聚合关系" class="headerlink" title="聚合关系"></a>聚合关系</h2><p>聚合关系是强的关联关系。是整体和部分的关系。部分可以单独存在<br>表示方法：<strong>空心菱形的实线，箭头指向部分，菱形指向整体</strong><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/30/9825fed0e7b53bbb8cf371f197a4b1b7.png"></p><h2 id="组合关系"><a href="#组合关系" class="headerlink" title="组合关系"></a>组合关系</h2><p>组合关系是更强的关联关系。是整合和部分的关系。<strong>部分不能单独存在</strong><br>表示方法：<strong>实心菱形头加实线箭头</strong><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/30/73ca9880cbe8158071088ef5e7b0f8ee.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/30/70b269e6911b3d7a59875ada0cc4f682.png"></p><h2 id="泛化关系"><a href="#泛化关系" class="headerlink" title="泛化关系"></a>泛化关系</h2><p>泛化是一种特殊\一般关系，是一般事物(父类)和该事物较为特殊的种类(子类)之间的关系，子类继承父类的属性和操作，除此之外，子类通常还添加新的属性和操作。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/30/716515ce2ef42c42f0a79bf71019d8e4.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/30/43475ab40431721714f321b8f18dcc3f.png"></p><h2 id="实现关系"><a href="#实现关系" class="headerlink" title="实现关系"></a>实现关系</h2><p>一个class类实现interface接口（可以是多个）的功能；实现是类与接口之间最常见的关系<br>表示方法：<strong>空心箭头加虚线</strong><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/30/e1662e17b063e869f9a72ab3362e1623.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://8cd76980.wiz03.com/wapp/pages/view/share/s/2cRSC023Th7G2ouHSc1X-mcI11LFN60HM4Ot2CUbvE1bu5Yq&quot;&gt;UML知识点&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;UML与</summary>
      
    
    
    
    <category term="笔记" scheme="http://example.com/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="UML" scheme="http://example.com/tags/UML/"/>
    
  </entry>
  
  <entry>
    <title>JavaWeb网上书城项目</title>
    <link href="http://example.com/2020/12/14/%E5%89%8D%E7%AB%AF/JavaWeb%E7%BD%91%E4%B8%8A%E4%B9%A6%E5%9F%8E%E9%A1%B9%E7%9B%AE/"/>
    <id>http://example.com/2020/12/14/%E5%89%8D%E7%AB%AF/JavaWeb%E7%BD%91%E4%B8%8A%E4%B9%A6%E5%9F%8E%E9%A1%B9%E7%9B%AE/</id>
    <published>2020-12-14T13:12:03.263Z</published>
    <updated>2021-01-02T02:27:16.958Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.bilibili.com/video/BV1Y7411K7zz?p=1">尚硅谷JavaWeb_2020idea新版</a></p><h1 id="传智书城项目设计"><a href="#传智书城项目设计" class="headerlink" title="传智书城项目设计"></a>传智书城项目设计</h1><h2 id="需求分析"><a href="#需求分析" class="headerlink" title="需求分析"></a>需求分析</h2><p>该项目应满足如下需求：</p><ul><li>统一友好的操作界面，具有良好的用户体验</li><li>商品分类详尽，可按不同类别查看商品信息</li><li>公共栏、本周热卖商品的展示</li><li>网站首页轮播图满足图书广告的需要</li><li>用户信息的注册何验证、用户登录功能</li><li>通过图书名模糊搜索相关图书</li><li>通过购物车一次购买多件商品</li><li>提供简单的安全模型，用户必须登录后购买图书</li><li>用户选择商品后可以在线提交订单</li><li>用户可以查看自己的订单信息</li><li>设计网站后台，用来管理网站的各项基本数据</li><li>系统运行安全稳定且响应及时</li></ul><h2 id="功能结构"><a href="#功能结构" class="headerlink" title="功能结构"></a>功能结构</h2><p>书城分前台和后台两个部分<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/30/311fd28c81bedbc45e86ef1bfb41fe5a.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/30/8d93fdbd7e2eb0b87570782f67a594b1.png"></p><h2 id="项目预览"><a href="#项目预览" class="headerlink" title="项目预览"></a>项目预览</h2><p><strong>传智书城首页</strong><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/30/8c6555f13f7872c045df1d6720536fd8.png"><br><strong>书籍详情页</strong><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/30/5b93cefbf1afbc5f23d7873342fa27cb.png"><br><strong>注册页面</strong><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/30/5b1a5425e8dbc70744273115daf6ebc4.png"><br><strong>登录界面</strong><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/30/2f5b856a8172331e33a18e439635583c.png"></p><h2 id="数据库设计"><a href="#数据库设计" class="headerlink" title="数据库设计"></a>数据库设计</h2><p>需要明确项目中有哪些实体，通过描述实体对象关系的模型——E-R图来表示</p><ul><li><p>用户实体（User）<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/30/8bffbea3d4083a2be515cc96e2f514dd.png"></p></li><li><p>商品实体（products）<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/30/44545ee38a7b4f5bd89bb258dc7a93f4.png"></p></li><li><p>订单实体（orders）<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/30/42480f985da5e7286978ec74fe9f49ef.png"></p></li><li><p>订单项（orderitem）<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/30/0049bed81dde47a09eab0b40b6f2299c.png"></p></li><li><p>公告栏实体（notice）<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/30/81beee775df1149ab05acb0a1b204429.png"></p></li></ul><h3 id="数据表结构"><a href="#数据表结构" class="headerlink" title="数据表结构"></a>数据表结构</h3><ul><li>User表</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/30/9dde79709cfe69235632d4bf3ff1a358.png"></p><ul><li>products表</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/30/29d39ffcc3705b364da5140a9f6d95ee.png"></p><ul><li>orders表</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/30/7b1643541b00da56103428e43107a887.png"></p><ul><li>orderitem表</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/30/b45a890f0d0a8430dcbec2c24f5f1d2e.png"></p><ul><li>notice表</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/30/b39b6a1f5c289e527c523fb08382918f.png"></p><h2 id="项目环境搭建"><a href="#项目环境搭建" class="headerlink" title="项目环境搭建"></a>项目环境搭建</h2><ol><li>确定开发环境<ul><li>操作系统:Windows XP、Windows7或者更高的Windows版本</li><li>web服务器：Tomcat7.0</li><li>Java开发包：JDK1.7</li><li>数据库：MySQL5.5</li><li>开发工具：Eclipse Java EE IDE for Web Developers</li><li>浏览器：IE8.0或更高版本</li></ul></li><li>创建数据库表<ul><li>MySQL数据库中创建一个名为itcaststore的数据库，并根据数据表结构创建相应的表</li></ul></li><li>创建项目，引入JAR包<ul><li>在Eclipse中创建一个名为itcaststore的Dynamic Web Project，将项目所需JAR包导入到项目的WEB-INF/lib文件夹下</li><li>本项目使用C3p0数据源连接数据库，需要C3p0数据源的JAR包</li><li>项目的JSP页面使用了JSTL标签库，需要jstl.jar和standard.jar两个包</li><li>项目中使用DBUtils工具处理数据的持久化操作，需要导入DBUtils工具包</li><li>由于在注册时系统还会给注册用户填写的邮箱发送一封激活邮件，因此需要导入mail.jar包</li><li>本项目所需的所有JAR包具体如下：<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/30/7189e3438cc63c8e007714716b7d03a3.png"></li></ul></li><li>配置c3p0-config.xml<br>将JAR包导入到项目中并发布到类路径后，在src根目录下编写c3p0-config.xml，该文件用于配置数据库连接参数<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">c3p0-config</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">default-config</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driverClass&quot;</span>&gt;</span>com.mysql.jdbc.Driver<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;jdbcUrl&quot;</span>&gt;</span>jdbc:mysql:///itcaststore<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;user&quot;</span>&gt;</span>root<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span>&gt;</span>root<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">default-config</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">c3p0-config</span>&gt;</span> </span><br></pre></td></tr></table></figure></li><li>编写filter过滤器<br>为了防止项目中请求和响应时出现乱码请求，在src下创建一个名称为cn.itcast.itcaststore.web.filter的包，该包下编写一个过滤器EncodingFilter来统一全站的编码，防止出现乱码的情况<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.itcast.itcaststore.web.filter;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.UnsupportedEncodingException;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.Filter;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.FilterChain;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.FilterConfig;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletResponse;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequestWrapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EncodingFilter</span> <span class="keyword">implements</span> <span class="title">Filter</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(FilterConfig filterConfig)</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doFilter</span><span class="params">(ServletRequest request, ServletResponse response,</span></span></span><br><span class="line"><span class="function"><span class="params">FilterChain chain)</span> <span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line"><span class="comment">// 处理请求乱码</span></span><br><span class="line">HttpServletRequest httpServletRequest = (HttpServletRequest) request;</span><br><span class="line">HttpServletRequest myRequest = <span class="keyword">new</span> MyRequest(httpServletRequest);</span><br><span class="line"><span class="comment">// 处理响应乱码</span></span><br><span class="line">response.setContentType(<span class="string">&quot;text/html;charset=utf-8&quot;</span>);</span><br><span class="line">chain.doFilter(myRequest, response);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//自定义request对象</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">自定义MyRequest方法，该类继承HttpServletRequestWrapper</span></span><br><span class="line"><span class="comment">并重写了getPrarmeterMap()、getParameter()和getParameterValues()这3个类用于获取请求参数的方法</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyRequest</span> <span class="keyword">extends</span> <span class="title">HttpServletRequestWrapper</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> HttpServletRequest request;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">boolean</span> hasEncode;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">MyRequest</span><span class="params">(HttpServletRequest request)</span> </span>&#123;</span><br><span class="line"><span class="keyword">super</span>(request);<span class="comment">// super必须写</span></span><br><span class="line"><span class="keyword">this</span>.request = request;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 对需要增强方法  进行覆盖</span></span><br><span class="line"><span class="meta">@SuppressWarnings(&#123; &quot;unchecked&quot;, &quot;rawtypes&quot; &#125;)</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Map <span class="title">getParameterMap</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">// 先获得请求方式</span></span><br><span class="line">String method = request.getMethod();</span><br><span class="line"><span class="keyword">if</span> (method.equalsIgnoreCase(<span class="string">&quot;post&quot;</span>)) &#123;</span><br><span class="line"><span class="comment">// post请求</span></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="comment">// 处理post乱码</span></span><br><span class="line">request.setCharacterEncoding(<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> request.getParameterMap();</span><br><span class="line">&#125; <span class="keyword">catch</span> (UnsupportedEncodingException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (method.equalsIgnoreCase(<span class="string">&quot;get&quot;</span>)) &#123;</span><br><span class="line"><span class="comment">// ge请求</span></span><br><span class="line">Map&lt;String, String[]&gt; parameterMap = request.getParameterMap();</span><br><span class="line"><span class="keyword">if</span> (!hasEncode) &#123; <span class="comment">//确保get手动编码逻辑只运行一次</span></span><br><span class="line"><span class="keyword">for</span> (String parameterName : parameterMap.keySet()) &#123;</span><br><span class="line">String[] values = parameterMap.get(parameterName);</span><br><span class="line"><span class="keyword">if</span> (values != <span class="keyword">null</span>) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; values.length; i++) &#123;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">hasEncode = <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> parameterMap;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">super</span>.getParameterMap();</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getParameter</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line"><span class="meta">@SuppressWarnings(&quot;unchecked&quot;)</span></span><br><span class="line">Map&lt;String, String[]&gt; parameterMap = getParameterMap();</span><br><span class="line">String[] values = parameterMap.get(name);</span><br><span class="line"><span class="keyword">if</span> (values == <span class="keyword">null</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> values[<span class="number">0</span>]; <span class="comment">// 取回参数的第一个值</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> String[] getParameterValues(String name) &#123;</span><br><span class="line"><span class="meta">@SuppressWarnings(&quot;unchecked&quot;)</span></span><br><span class="line">Map&lt;String, String[]&gt; parameterMap = getParameterMap();</span><br><span class="line">String[] values = parameterMap.get(name);</span><br><span class="line"><span class="keyword">return</span> values;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 编码过滤器 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>encodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>cn.itcast.itcaststore.web.filter.EncodingFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>encodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>编写工具类DataSourceUtils<br>在src下创建一个名称为cn.itcast.itcaststore.utils的包，在该包下编写DataSourceUtils类，用与获取数据源和数据库连接<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.itcast.itcaststore.utils;</span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> javax.sql.DataSource;</span><br><span class="line"><span class="keyword">import</span> com.mchange.v2.c3p0.ComboPooledDataSource;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DataSourceUtils</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> DataSource dataSource = <span class="keyword">new</span> ComboPooledDataSource();</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> ThreadLocal&lt;Connection&gt; tl = <span class="keyword">new</span> ThreadLocal&lt;Connection&gt;();</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> DataSource <span class="title">getDataSource</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> dataSource;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 当DBUTils需要手动控制事务时，调用该方法获得一个连接</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@throws</span> SQLException</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Connection <span class="title">getConnection</span><span class="params">()</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">Connection con = tl.get();</span><br><span class="line"><span class="keyword">if</span> (con == <span class="keyword">null</span>) &#123;</span><br><span class="line">con = dataSource.getConnection();</span><br><span class="line">tl.set(con);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> con;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 开启事务</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@throws</span> SQLException</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">startTransaction</span><span class="params">()</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">Connection con = getConnection();</span><br><span class="line"><span class="keyword">if</span> (con != <span class="keyword">null</span>)</span><br><span class="line">con.setAutoCommit(<span class="keyword">false</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 从ThreadLocal中释放并且关闭Connection，并结束事务</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@throws</span> SQLException</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">releaseAndCloseConnection</span><span class="params">()</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">Connection con = getConnection();</span><br><span class="line"><span class="keyword">if</span> (con != <span class="keyword">null</span>) &#123;</span><br><span class="line">con.commit();</span><br><span class="line">tl.remove();</span><br><span class="line">con.close();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 事务回滚</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@throws</span> SQLException </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">rollback</span><span class="params">()</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">Connection con = getConnection();</span><br><span class="line"><span class="keyword">if</span> (con != <span class="keyword">null</span>) &#123;</span><br><span class="line">con.rollback();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>itcaststore项目结构预览<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/30/699dbb99e4318a0b08075e20c20aa836.png"></li></ol><ul><li>dao包：java文件与数据库进行交互的类</li><li>domain包：其中的java文件为实体类</li><li>exception包：自定义异常</li><li>service包：主要用于编写业务逻辑，并调用dao操作数据库</li><li>tag包：自定义标签类，该包中只有一个类PrivilegeTag用于判断用户是否登录</li><li>utils包：工具类</li><li>web.filter包：有两个过滤器，分别用于过滤全站编码和判断用户权限</li><li>web.servlet.client包：项目前台的servlet类</li><li>web.servlet.manager包：项目后台的servlet类</li></ul><ol start="8"><li>WebContent目录预览<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/30/5cd7cb03037f77e30831edc8f5ea8d67.png"></li></ol><ul><li>admin：存放后台管理普通的所有页面以及CSS、js和图片等</li><li>bookcover：存放了图书封面图片</li><li>client：包含了前台的所有页面和js代码</li><li>error：包含了所有错误页面</li><li>productImg：上传的图书图片存储目录</li></ul><h1 id="传智书城前台程序设计"><a href="#传智书城前台程序设计" class="headerlink" title="传智书城前台程序设计"></a>传智书城前台程序设计</h1><h2 id="用户注册和登录模块"><a href="#用户注册和登录模块" class="headerlink" title="用户注册和登录模块"></a>用户注册和登录模块</h2><ul><li><p>任务目标</p><ol><li>用户只有注册账号并登录后才能购买图书，首次进入必须先注册账号</li><li>注册需要填写邮箱，用户名，密码，重复密码，性别，联系电话，个人介绍以及验证码</li><li>密码和重复密码必须一致</li><li>邮箱地址应该合法，且需要是本人邮箱，注册时系统会向此邮箱发送一封邮件，用于注册激活</li></ol></li><li><p><strong>编写注册页面</strong><br>位于WebContent下client文件中，命名register.jsp</p></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">language</span>=<span class="string">&quot;java&quot;</span> <span class="attr">import</span>=<span class="string">&quot;java.util.*&quot;</span> <span class="attr">pageEncoding</span>=<span class="string">&quot;UTF-8&quot;</span>%&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">HTML</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>传智书城注册页面<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%--导入css和js</span> <span class="attr">--</span>%&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;$&#123;pageContext.request.contextPath&#125;/client/css/main.css&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;$&#123;pageContext.request.contextPath&#125;/client/js/form.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">changeImage</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="comment">// 改变验证码图片中的文字</span></span></span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.getElementById(<span class="string">&quot;img&quot;</span>).src = <span class="string">&quot;$&#123;pageContext.request.contextPath&#125;/imageCode?time=&quot;</span></span></span><br><span class="line"><span class="javascript">+ <span class="keyword">new</span> <span class="built_in">Date</span>().getTime();</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">class</span>=<span class="string">&quot;main&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 1.网上书城顶部 start --&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">%@include</span> <span class="attr">file</span>=<span class="string">&quot;head.jsp&quot;</span>%&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 网上书城顶部  end --&gt;</span></span><br><span class="line"><span class="comment">&lt;!--2. 网上书城菜单列表  start --&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">%@include</span> <span class="attr">file</span>=<span class="string">&quot;menu_search.jsp&quot;</span> %&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 网上书城菜单列表  end --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 3.网上书城用户注册  start --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;divcontent&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;$&#123;pageContext.request.contextPath&#125;/register&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span> <span class="attr">onsubmit</span>=<span class="string">&quot;return checkForm();&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">width</span>=<span class="string">&quot;850px&quot;</span> <span class="attr">border</span>=<span class="string">&quot;0&quot;</span> <span class="attr">cellspacing</span>=<span class="string">&quot;0&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">&quot;padding: 30px&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">h1</span>&gt;</span>新用户注册<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">width</span>=<span class="string">&quot;70%&quot;</span> <span class="attr">border</span>=<span class="string">&quot;0&quot;</span> <span class="attr">cellspacing</span>=<span class="string">&quot;2&quot;</span> <span class="attr">class</span>=<span class="string">&quot;upline&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">&quot;text-align: right; width: 20%&quot;</span>&gt;</span>邮箱：<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">&quot;width: 40%&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">class</span>=<span class="string">&quot;textinput&quot;</span>  <span class="attr">id</span>=<span class="string">&quot;email&quot;</span> <span class="attr">name</span>=<span class="string">&quot;email&quot;</span> <span class="attr">onkeyup</span>=<span class="string">&quot;checkEmail();&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">&quot;2&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;emailMsg&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">&quot;#999999&quot;</span>&gt;</span>请输入有效的邮箱地址<span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">&quot;text-align: right&quot;</span>&gt;</span>用户名：<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">class</span>=<span class="string">&quot;textinput&quot;</span>  <span class="attr">id</span>=<span class="string">&quot;username&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">onkeyup</span>=<span class="string">&quot;checkUsername();&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">&quot;2&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;usernameMsg&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">&quot;#999999&quot;</span>&gt;</span>字母数字下划线1到10位, 不能是数字开头<span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">&quot;text-align: right&quot;</span>&gt;</span>密码：<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">class</span>=<span class="string">&quot;textinput&quot;</span>  <span class="attr">id</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">onkeyup</span>=<span class="string">&quot;checkPassword();&quot;</span>/&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;passwordMsg&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">&quot;#999999&quot;</span>&gt;</span>密码请设置6-16位字符<span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">&quot;text-align: right&quot;</span>&gt;</span>重复密码：<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">class</span>=<span class="string">&quot;textinput&quot;</span>  <span class="attr">id</span>=<span class="string">&quot;repassword&quot;</span> <span class="attr">name</span>=<span class="string">&quot;repassword&quot;</span> <span class="attr">onkeyup</span>=<span class="string">&quot;checkConfirm();&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;confirmMsg&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">&quot;text-align: right&quot;</span>&gt;</span>性别：<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">&quot;2&quot;</span>&gt;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;gender&quot;</span> <span class="attr">value</span>=<span class="string">&quot;男&quot;</span> <span class="attr">checked</span>=<span class="string">&quot;checked&quot;</span> /&gt;</span> 男</span><br><span class="line"><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;gender&quot;</span> <span class="attr">value</span>=<span class="string">&quot;女&quot;</span> /&gt;</span> 女</span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">&quot;text-align: right&quot;</span>&gt;</span>联系电话：<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">&quot;2&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">class</span>=<span class="string">&quot;textinput&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">style</span>=<span class="string">&quot;width: 350px&quot;</span> <span class="attr">name</span>=<span class="string">&quot;telephone&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">&quot;text-align: right&quot;</span>&gt;</span>个人介绍：<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">&quot;2&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">textarea</span> <span class="attr">class</span>=<span class="string">&quot;textarea&quot;</span> <span class="attr">name</span>=<span class="string">&quot;introduce&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>注册验证<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">width</span>=<span class="string">&quot;80%&quot;</span> <span class="attr">border</span>=<span class="string">&quot;0&quot;</span> <span class="attr">cellspacing</span>=<span class="string">&quot;2&quot;</span> <span class="attr">class</span>=<span class="string">&quot;upline&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">&quot;text-align: right; width: 20%&quot;</span>&gt;</span>输入验证码：<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">&quot;width: 50%&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">class</span>=<span class="string">&quot;textinput&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">&quot;text-align: right; width: 20%;&quot;</span>&gt;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">rowspan</span>=<span class="string">&quot;2&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width: 50%&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;$&#123;pageContext.request.contextPath&#125;/imageCode&quot;</span> <span class="attr">width</span>=<span class="string">&quot;180&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">height</span>=<span class="string">&quot;30&quot;</span> <span class="attr">class</span>=<span class="string">&quot;textinput&quot;</span> <span class="attr">style</span>=<span class="string">&quot;height: 30px;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;img&quot;</span> /&gt;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:void(0);&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;changeImage()&quot;</span>&gt;</span>看不清换一张<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">width</span>=<span class="string">&quot;70%&quot;</span> <span class="attr">border</span>=<span class="string">&quot;0&quot;</span> <span class="attr">cellspacing</span>=<span class="string">&quot;0&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">&quot;padding-top: 20px; text-align: center&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;image&quot;</span> <span class="attr">src</span>=<span class="string">&quot;images/signup.gif&quot;</span> <span class="attr">name</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">border</span>=<span class="string">&quot;0&quot;</span> <span class="attr">width</span>=<span class="string">&quot;140&quot;</span> <span class="attr">height</span>=<span class="string">&quot;35&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">&lt;!-- 网上书城用户注册  end --&gt;</span></span><br><span class="line"><span class="comment">&lt;!--4. 网上书城下方显示 start --&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">%@</span> <span class="attr">include</span> <span class="attr">file</span>=<span class="string">&quot;foot.jsp&quot;</span> %&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 网上书城下方显示 start --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/30/89a4a54ca6e0ee53043b148bc8a1c642.png"><br>可以看出，注册功能页面的核心代码是一个form表单，并使用了验证码生成工具类CheckImageServlet，每次单击【看不清换一张】图片链接时，会触发一次changeImage()方法，将请求发送给CheckIamgeServlet来实现对验证码进行更换。信息填写完成后，当单击【同意并提交】链接时，表单信息会提交到以地址/register结尾的链接中，它在web.xml文件在映射但是RegisterServlet类</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.bilibili.com/video/BV1Y7411K7zz?p=1&quot;&gt;尚硅谷JavaWeb_2020idea新版&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;传智书城项目设计&quot;&gt;&lt;a href=&quot;#传智书城项目设计&quot; class=&quot;head</summary>
      
    
    
    
    <category term="项目" scheme="http://example.com/categories/%E9%A1%B9%E7%9B%AE/"/>
    
    
    <category term="JavaWeb" scheme="http://example.com/tags/JavaWeb/"/>
    
  </entry>
  
  <entry>
    <title>谈谈IOS和Android</title>
    <link href="http://example.com/2020/12/12/%E5%85%B6%E4%BB%96/%E8%B0%88%E8%B0%88IOS%E5%92%8CAndroid/"/>
    <id>http://example.com/2020/12/12/%E5%85%B6%E4%BB%96/%E8%B0%88%E8%B0%88IOS%E5%92%8CAndroid/</id>
    <published>2020-12-12T10:09:38.285Z</published>
    <updated>2021-01-02T02:29:43.062Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Android"><a href="#Android" class="headerlink" title="Android"></a>Android</h1><p>Android （美国谷歌公司开发的移动操作系统）</p><ul><li>安卓是一种基于<code>Linux内核</code>（不包含GNU组件）的自由及开放源代码的操作系统。主要使用于移动设备，如智能手机和平板电脑，由美国Google公司和开放手机联盟领导及开发。</li><li>Android操作系统最初由Andy Rubin开发，主要支持手机。2005年8月由Google收购注资。2007年11月，Google与84家硬件制造商、软件开发商及电信营运商组建开放手机联盟共同研发改良Android系统。随后Google以Apache开源许可证的授权方式，发布了Android的源代码。</li><li>第一部Android智能手机发布于2008年10月。Android逐渐扩展到平板电脑及其他领域上，如电视、数码相机、游戏机、智能手表等。2011年第一季度，Android在全球的市场份额首次超过塞班系统，跃居全球第一。 2013年的第四季度，Android平台手机的全球市场份额已经达到78.1%。2013年09月24日谷歌开发的操作系统Android在迎来了5岁生日，全世界采用这款系统的设备数量已经达到10亿台。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/12/a7eff2fee1da45a99414127adaf9170d.png"></li><li>Android一词的本义指“机器人”，同时也是Google于2007年11月5日宣布的基于Linux平台的开源手机操作系统的名称，该平台由操作系统、中间件、用户界面和应用软件组成。</li><li>Android一词最早出现于法国作家利尔亚当（Auguste Villiers de l’Isle-Adam）在1886年发表的科幻小说《未来夏娃》（L’ève future）中。他将外表像人的机器起名为Android。</li><li>Android的Logo是由Ascender公司设计的，诞生于2010年，其设计灵感源于男女厕所门上的图形符号，于是布洛克绘制了一个简单的机器人，它的躯干就像锡罐的形状，头上还有两根天线，Android小机器人便诞生了。其中的文字使用了Ascender公司专门制作的称之为“Droid ” 的字体。Android是一个全身绿色的机器人，绿色也是Android的标志。颜色采用了PMS 376C和RGB中十六进制的#A4C639来绘制，这是Android操作系统的品牌象征。有时候，它们还会使用纯文字的Logo。</li><li>编程语言:C/C++(底层),Java,Kotlin等(应用层)。</li></ul><h1 id="IOS"><a href="#IOS" class="headerlink" title="IOS"></a>IOS</h1><p>IOS(Input Output System)，即输入输出系统，是由苹果公司开发的移动操作系统。</p><ul><li>苹果公司最早于2007年1月9日的Macworld大会上公布这个系统，最初是设计给iPhone使用的，后来陆续套用到iPod touch、iPad上。iOS与苹果的MacOS操作系统一样，属于类Unix的商业操作系统。原本这个系统名为iPhone OS，因为iPad，iPhone，iPod touch都使用iPhone OS，所以2010年WWDC大会上宣布改名为iOS（iOS为美国Cisco公司网络设备操作系统注册商标，苹果改名已获得Cisco公司授权）。</li><li>2016年1月，随着iOS 9.2.1版本的发布，苹果修复了一个存在了3年的漏洞。 [2]  2018年9月22日，美国苹果公司在最新的操作系统中秘密加入了基于iPhone用户和该公司其他设备使用者的“信任评级”功能。、</li><li>软件语言:<a href="https://baike.baidu.com/item/Swift/14080957">Swift</a>,<a href="https://baike.baidu.com/item/Objective-C/8374012">Objective-C</a>,<a href="https://baike.baidu.com/item/c%E8%AF%AD%E8%A8%80/105958?fromtitle=c&fromid=7252092">C</a>,<a href="https://baike.baidu.com/item/C%2B%2B/99272">C++</a>。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/12/64fe3ed21c4b81d505ab9f284970e7de.png"></li></ul><h1 id="区别"><a href="#区别" class="headerlink" title="区别"></a>区别</h1><ul><li><p>应用的设备不同<br>IOS和安卓最大的区别在于本身所应用的设备不同。ios系统主要是应用在iPhone、IPad、itouch设备上的操作系统，安卓系统主要是应用在安卓智能手机上的操作系统。</p></li><li><p>开源与封闭<br>英特尔前CEO安迪·格鲁夫曾提到过一个理论“ <code>硬件性能随着摩尔定律飞速提升，软件总有办法尽量榨干硬件提升带来的性能。</code>” 这便是著名的安迪比尔定理。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/12/1df02760dd4d1f9d77e58de3167a9df9.png"><br>随着软件的飞速发展，老旧的硬件必定满足不了当前软件巨大的内存运行需求，自然会影响使用流畅度。<br>而系统的开放性主要体现在两个方面：<code>源代码</code>和<code>应用接口</code>。Android系统基于Linux开发，跟 Linux一脉相承，开放性极强。安卓拥有自己的开源<code>AOSP</code>(Android Open Source Project)，只要遵循<code>GPL</code>和<code>Apache Licence 2.0</code>开源协议，那么你就可以使用安卓源代码进行二次开发。而安卓由于源代码开放，自然可玩性也比iOS高,但这时的应用开发者有更多的权限去开发自己的App，给App增添更多功能，这无形中加重了手机硬件的运行负担，使得手机使用寿命大大缩短。<br>此外，安卓比iOS开放了更多的<code>应用接口API</code>，我们可以很自然地利用安卓实现很多在iOS上不折腾就没法做的功能。在安卓，你可以随心随意地更换输入法，随意用任何浏览器打开链接，随意从任何途经安装程序，随意调用第三方程序分享文件——这些在iOS上不越狱都做不到，即使越狱也未必比安卓做得更好。<br>而IOS系统最大的一个特点就是<code>沙盒机制</code>，<code>封闭性比较强</code>。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/12/59f65d945b8e9f79e55eeed9a258da79.png"></p></li><li><p>系统安全性区别<br>IOS系统是一款比较强大的<code>操作系统</code>，在ios系统运行的程序不管程序多大都不会造成死机，玩起来非常的流程，而且系统的安全性比较高。<br>安卓系统是属于<code>代码系统</code>，如果所有的应用程序需要下载下来之后才能玩，系统用久之后会经常出现卡机或者是死机的现象，而且安卓系统还存在恶意的插件在系统上自动运行，系统漏洞多，导致个人资料被盗、系统耗电大，流量消耗大等，系统安全性相对来说比较低。</p></li></ul><h1 id="IOS系统流畅的真正原因"><a href="#IOS系统流畅的真正原因" class="headerlink" title="IOS系统流畅的真正原因"></a>IOS系统流畅的真正原因</h1><ul><li><p><strong>优先级别不同</strong><br>IOS对屏幕反应的优先级是最高的，它的响应顺序依次为<code>Touch--Media--Service--Core</code>架构，换句话说当用户只要触摸接触了屏幕之后，系统就会最优先去处理屏幕显示（Touch这个层级）然后才是媒体（Media），服务（Service）以及Core架构。；<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/12/bff085ae73ae81601e25138687131cfa.png"><br>而Android系统的优先级响应层级则是<code>Application--Framework--Library--Kernal</code>架构，和显示相关的图形图像处理这一部分属于Library，可以看到到第三位才是它，当触摸屏幕之后Android系统首先会激活应用，框架然后才是屏幕最后是核心架构。</p></li><li><p><strong>硬件工作配置不同：iOS基于GPU加速</strong><br>在处理器等配置到到了同等级的情况下，GPU就成为了一个凸显差异的重要因素。一些大型软件像是3D游戏对GPU性能要求都会比较高，而iOS系统对图形的各种特效处理基本上正好都是<code>基于GPU硬件</code>进行加速的，它可以不用完全借助CPU或者程序本身，而是通过GPU进行渲染以达到更流畅的操控表现。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/12/8f4db78aaa7626ea7a9e5acb9b088341.png"><br>而Android系统产品则并非如此，因为Android需要适应不同的手机硬件，需要满足各种差异配置，所以很多图形特效大多都要靠程序本身进行加速和渲染，并严重依赖CPU运算的操作自然会加大处理器的负荷，从而出现卡顿的问题。</p></li><li><p><strong>开发机制不同：安卓机制效率低</strong><br>Android的编程语言是<code>JAVA</code>，而iOS的则为<code>Objective-C</code>，IOS采用的是<code>沙盒运行机制</code>，安卓采用的是<code>Java虚拟机运行机制</code>。Objective-C的优势是<code>效率高</code>但比较“唯一”，而JAVA的优势则是<code>跨平台</code>不过运行效率相对偏低，其实这两个编程语言所带来的机制不同，就已经造成了各自系统之间的流畅性差异化。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/12/e80710c53aa2a1bdb7a5d43bed46a91e.png"><br>iOS的Objective-C，编译器gcc，而这个gcc编译出来的代码又被苹果专为iOS架构优化到了极致，运行过程中也不需要虚拟机在中间插手，执行效率自然很高。<br>Android是通过JAVA虚拟机来执行，并且系统需要占用大量内存来换取执行速度，再加上不定期的内存自动回收机制，从而直接导致了卡顿现象的出现。</p></li><li><p><strong>后台管理方式不同</strong><br>苹果是假后台，即<code>墓碑机制</code>，当你回到主界面的时候之前的软件就相当于暂停使用，不再消耗RAM（利用远程通知机制，如果你没启动qq，有朋友给你发消息的话，腾讯服务器会告诉<code>苹果服务器</code>，苹果服务器给你的手机发通知，不需要你的qq在后台）；<br>而安卓是真后台，即使你退出软件，软件也会在后台自启(比如接收qq信息，qq软件必须在运行状态来接收腾讯服务器传来的消息)，从而继续占用你的RAM，而RAM是有限的，当RAM剩余太少的时候你就会感觉到卡顿。同时，后台的程序运行也会占用CPU资源，使手机处理能力下降，这也是安卓手机需要通过使用更高的配置来提高流畅度的原因。<br><a href="https://zhuanlan.zhihu.com/p/137812632">关于iPhone的后台机制详细讲解，通俗易懂！</a></p></li><li><p><strong>线程不同</strong><br>苹果的单线程比安卓机强，大部分安卓机都是<code>堆核</code>，而苹果是<code>堆料</code>，安卓是<code>小核高频</code>，苹果是<code>大核低频</code>，在一个核上堆20多亿晶体管，堪称堆料狂魔，自然单线程神速，上面也说了，苹果在运行一个应用时，另一个是暂停的，所以神一般的单线程加上大部分情况下只运行一个，当然神速。</p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Android&quot;&gt;&lt;a href=&quot;#Android&quot; class=&quot;headerlink&quot; title=&quot;Android&quot;&gt;&lt;/a&gt;Android&lt;/h1&gt;&lt;p&gt;Android （美国谷歌公司开发的移动操作系统）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;安卓是一种基于&lt;cod</summary>
      
    
    
    
    <category term="杂谈" scheme="http://example.com/categories/%E6%9D%82%E8%B0%88/"/>
    
    
    <category term="IOS" scheme="http://example.com/tags/IOS/"/>
    
  </entry>
  
  <entry>
    <title>汇编语言</title>
    <link href="http://example.com/2020/12/09/%E7%AC%94%E8%AE%B0/%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80%E7%AC%94%E8%AE%B0/"/>
    <id>http://example.com/2020/12/09/%E7%AC%94%E8%AE%B0/%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80%E7%AC%94%E8%AE%B0/</id>
    <published>2020-12-09T11:44:08.068Z</published>
    <updated>2021-01-01T10:35:05.352Z</updated>
    
    <content type="html"><![CDATA[<h1 id="教程推荐"><a href="#教程推荐" class="headerlink" title="教程推荐"></a>教程推荐</h1><p><a href="https://www.bilibili.com/video/BV1Rs411c7HG">小甲鱼带你入门汇编语言</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;教程推荐&quot;&gt;&lt;a href=&quot;#教程推荐&quot; class=&quot;headerlink&quot; title=&quot;教程推荐&quot;&gt;&lt;/a&gt;教程推荐&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://www.bilibili.com/video/BV1Rs411c7HG&quot;&gt;小甲鱼带你入门汇</summary>
      
    
    
    
    <category term="笔记" scheme="http://example.com/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="笔记" scheme="http://example.com/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>Butterfly主题魔改</title>
    <link href="http://example.com/2020/12/02/Hexo/Butterfly%E4%B8%BB%E9%A2%98%E9%AD%94%E6%94%B9/"/>
    <id>http://example.com/2020/12/02/Hexo/Butterfly%E4%B8%BB%E9%A2%98%E9%AD%94%E6%94%B9/</id>
    <published>2020-12-02T09:51:14.762Z</published>
    <updated>2020-12-21T13:06:03.951Z</updated>
    
    <content type="html"><![CDATA[<h1 id="基础美化"><a href="#基础美化" class="headerlink" title="基础美化"></a>基础美化</h1><p>基础美好请仔细查看<a href="https://butterfly.js.org/">Butterfly主题文档</a></p><h1 id="JS-CSS的引入"><a href="#JS-CSS的引入" class="headerlink" title="JS/CSS的引入"></a>JS/CSS的引入</h1><ul><li>JS/CSS一般写在<code>themes\butterfly\source</code>文件夹下对应CSS/JS文件夹里。</li><li>打开主题配置文件(<code>config.yml</code>);</li><li>定位搜索(Ctrl+F)找到<code>inject</code></li><li><code>head</code>引入CSS，<code>bottom</code>引入JS。</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">inject:</span></span><br><span class="line">   <span class="attr">head:</span></span><br><span class="line">     <span class="bullet">-</span> <span class="string">&lt;link</span> <span class="string">rel=&quot;stylesheet&quot;</span> <span class="string">href=&quot;/css/xxx.css&quot;&gt;</span> <span class="comment">#相对路径引入</span></span><br><span class="line">     <span class="bullet">-</span> <span class="string">&lt;link</span> <span class="string">rel=&quot;stylesheet&quot;</span> <span class="string">href=&quot;外链&quot;&gt;</span> <span class="comment">#外链方式引入：将文件上传到 cdn，如七牛云、又拍云、GitHub+Jsdeliver 等。</span></span><br><span class="line">   <span class="attr">bottom:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&lt;script</span> <span class="string">src=&quot;https://cdn.jsdelivr.net/gh/GitHub用户名/GitHub用户名.github.io/js/background.js&quot;&gt;&lt;/script&gt;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&lt;script</span> <span class="string">src=&quot;xxx&quot;&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure><h1 id="新建页面"><a href="#新建页面" class="headerlink" title="新建页面"></a>新建页面</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page <span class="string">&quot;xxx页面名&quot;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/02/22b37d2a111a098b4a18becec22d8efb.png"></p><p>图标素材点击<a href="https://fontawesome.com/">Font Awesome</a>，找到对应图标点击找到<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/02/66c5304d4b7a11c6136927abd66275b6.png"></p><h1 id="图标动画"><a href="#图标动画" class="headerlink" title="图标动画"></a>图标动画</h1><p><a href="https://www.antmoe.com/posts/a811d614/index.html">感谢小康博主</a><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/02/69d9b869911a6fd7264af2834d2bf927.png"><br>理论上这些动效是可以给任意 DOM 元素添加的。添加方式很简单，引入一个 css 库：<a href="https://cdn.jsdelivr.net/gh/sviptzk/StaticFile_HEXO@latest/butterfly/css/font-awesome-animation.min.css">https://cdn.jsdelivr.net/gh/sviptzk/StaticFile_HEXO@latest/butterfly/css/font-awesome-animation.min.css</a></p><p>然后在 DOM 元素的类名添加相应的动画即可。</p><blockquote><p>例如分类可以写为 分类: /categories/ || fas fa-folder-open  <code>faa-wrench animated-hover</code></p></blockquote><h1 id="标签外挂"><a href="#标签外挂" class="headerlink" title="标签外挂"></a>标签外挂</h1><div class="note warning flat"><p>注意：标签外挂是Hexo独有的功能，並不是标签的Markdown格式。<br>以下的写法，只适用于Butterfly主题，用在其它主題上不会有效果，甚至可能会报错。使用前请留意</p></div><p>配置主题文件</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">note:</span></span><br><span class="line">  <span class="comment"># Note tag style values:</span></span><br><span class="line">  <span class="comment">#  - simple    bs-callout old alert style. Default.</span></span><br><span class="line">  <span class="comment">#  - modern    bs-callout new (v2-v3) alert style.</span></span><br><span class="line">  <span class="comment">#  - flat      flat callout style with background, like on Mozilla or StackOverflow.</span></span><br><span class="line">  <span class="comment">#  - disabled  disable all CSS styles import of note tag.</span></span><br><span class="line">  <span class="attr">style:</span> <span class="string">simple</span></span><br><span class="line">  <span class="attr">icons:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">border_radius:</span> <span class="number">3</span></span><br><span class="line">  <span class="comment"># Offset lighter of background in % for modern and flat styles (modern: -12 | 12; flat: -18 | 6).</span></span><br><span class="line">  <span class="comment"># Offset also applied to label tag variables. This option can work with disabled note tag.</span></span><br><span class="line">  <span class="attr">light_bg_offset:</span> <span class="number">0</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>用法</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note [class] [no-icon] %&#125;</span><br><span class="line">Any content (support inline tags too.io).</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">[class]   : default | primary | success | info | warning | danger.</span><br><span class="line">[no-icon] : Disable icon in note.</span><br><span class="line"></span><br><span class="line">All parameters are optional.</span><br></pre></td></tr></table></figure><p>例如</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note default %&#125;</span><br><span class="line">default 提示标签符</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary %&#125;</span><br><span class="line">primary 提示标签符</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success %&#125;</span><br><span class="line">success 提示标签符</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info %&#125;</span><br><span class="line">info 提示标签符</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning %&#125;</span><br><span class="line">warning 提示标签符</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger %&#125;</span><br><span class="line">danger 提示标签符</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><div class="note default flat"><p>default 提示标签符</p></div><div class="note primary flat"><p>primary 提示标签符</p></div><div class="note success flat"><p>success 提示标签符</p></div><div class="note info flat"><p>info 提示标签符</p></div><div class="note warning flat"><p>warning 提示标签符</p></div><div class="note danger flat"><p>danger 提示标签符</p></div><h1 id="字体设置"><a href="#字体设置" class="headerlink" title="字体设置"></a>字体设置</h1><p>找到主题配置文件中</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">font:</span></span><br><span class="line">  <span class="attr">global-font-size:</span> <span class="comment">#全局字体大小</span></span><br><span class="line">  <span class="attr">code-font-size:</span> <span class="comment">#代码字体大小</span></span><br><span class="line">  <span class="attr">font-family:</span> <span class="comment">#全局字体</span></span><br><span class="line">  <span class="attr">code-font-family:</span>  <span class="comment">#代码字体</span></span><br></pre></td></tr></table></figure><p><a href="https://www.zsfmyz.top/demo/font/">字体对照表</a></p><h1 id="鼠标样式"><a href="#鼠标样式" class="headerlink" title="鼠标样式"></a>鼠标样式</h1><p>新建\themes\butterfly\source\css\Myidea.css（css文件名称自定义）。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*设置鼠标样式*/</span></span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">cursor</span>: <span class="built_in">url</span>(https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@latest/Hexo/img/default.cur),</span><br><span class="line">        default;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">a</span>,<span class="selector-tag">img</span> &#123;</span><br><span class="line">    <span class="attribute">cursor</span>: <span class="built_in">url</span>(https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@latest/Hexo/img/pointer.cur),</span><br><span class="line">        default;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="页脚渐变"><a href="#页脚渐变" class="headerlink" title="页脚渐变"></a>页脚渐变</h1><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 页脚footer */</span></span><br><span class="line"><span class="comment">/* 渐变色滚动动画 */</span></span><br><span class="line"><span class="keyword">@-webkit-keyframes</span> Gradient &#123;</span><br><span class="line">    0% &#123;</span><br><span class="line">        <span class="attribute">background-position</span>: <span class="number">0</span> <span class="number">50%</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    50% &#123;</span><br><span class="line">        <span class="attribute">background-position</span>: <span class="number">100%</span> <span class="number">50%</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    100% &#123;</span><br><span class="line">        <span class="attribute">background-position</span>: <span class="number">0</span> <span class="number">50%</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@-moz-keyframes</span> Gradient &#123;</span><br><span class="line">    0% &#123;</span><br><span class="line">        <span class="attribute">background-position</span>: <span class="number">0</span> <span class="number">50%</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    50% &#123;</span><br><span class="line">        <span class="attribute">background-position</span>: <span class="number">100%</span> <span class="number">50%</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    100% &#123;</span><br><span class="line">        <span class="attribute">background-position</span>: <span class="number">0</span> <span class="number">50%</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@keyframes</span> Gradient &#123;</span><br><span class="line">    0% &#123;</span><br><span class="line">        <span class="attribute">background-position</span>: <span class="number">0</span> <span class="number">50%</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    50% &#123;</span><br><span class="line">        <span class="attribute">background-position</span>: <span class="number">100%</span> <span class="number">50%</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    100% &#123;</span><br><span class="line">        <span class="attribute">background-position</span>: <span class="number">0</span> <span class="number">50%</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#footer</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">linear-gradient</span>(-<span class="number">45deg</span>, #ee7752, #ce3e75, #<span class="number">23</span>a6d5, #<span class="number">23</span>d5ab);</span><br><span class="line">    <span class="attribute">background-size</span>: <span class="number">400%</span> <span class="number">400%</span>;</span><br><span class="line">    <span class="attribute">-webkit-animation</span>: Gradient <span class="number">10s</span> ease infinite;</span><br><span class="line">    <span class="attribute">-moz-animation</span>: Gradient <span class="number">10s</span> ease infinite;</span><br><span class="line">    <span class="attribute">animation</span>: Gradient <span class="number">10s</span> ease infinite;</span><br><span class="line">    <span class="attribute">-o-user-select</span>: none;</span><br><span class="line">    <span class="attribute">-ms-user-select</span>: none;</span><br><span class="line">    <span class="attribute">-webkit-user-select</span>: none;</span><br><span class="line">    <span class="attribute">-moz-user-select</span>: none;</span><br><span class="line">    <span class="attribute">user-select</span>: none;</span><br><span class="line">    <span class="attribute">border-top-left-radius</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">border-top-right-radius</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#footer</span><span class="selector-pseudo">:before</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/21/272f832b461c620d418265018f4f6d16.png"></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*页脚a标签字体颜色*/</span></span><br><span class="line"><span class="selector-id">#footer-wrap</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#00c4b6</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="背景渐变"><a href="#背景渐变" class="headerlink" title="背景渐变"></a>背景渐变</h1><p>在<code>C:\blog\lzyblog\source\_posts</code>目录下新建<code>background.css</code></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#web_bg</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">-webkit-linear-gradient</span>(</span><br><span class="line">    <span class="number">0deg</span>,</span><br><span class="line">    rgba(<span class="number">247</span>, <span class="number">149</span>, <span class="number">51</span>, <span class="number">0.1</span>) <span class="number">0</span>,</span><br><span class="line">    <span class="built_in">rgba</span>(<span class="number">243</span>, <span class="number">112</span>, <span class="number">85</span>, <span class="number">0.1</span>) <span class="number">15%</span>,</span><br><span class="line">    <span class="built_in">rgba</span>(<span class="number">239</span>, <span class="number">78</span>, <span class="number">123</span>, <span class="number">0.1</span>) <span class="number">30%</span>,</span><br><span class="line">    <span class="built_in">rgba</span>(<span class="number">161</span>, <span class="number">102</span>, <span class="number">171</span>, <span class="number">0.1</span>) <span class="number">44%</span>,</span><br><span class="line">    <span class="built_in">rgba</span>(<span class="number">80</span>, <span class="number">115</span>, <span class="number">184</span>, <span class="number">0.1</span>) <span class="number">58%</span>,</span><br><span class="line">    <span class="built_in">rgba</span>(<span class="number">16</span>, <span class="number">152</span>, <span class="number">173</span>, <span class="number">0.1</span>) <span class="number">72%</span>,</span><br><span class="line">    <span class="built_in">rgba</span>(<span class="number">7</span>, <span class="number">179</span>, <span class="number">155</span>, <span class="number">0.1</span>) <span class="number">86%</span>,</span><br><span class="line">    <span class="built_in">rgba</span>(<span class="number">109</span>, <span class="number">186</span>, <span class="number">130</span>, <span class="number">0.1</span>) <span class="number">100%</span></span><br><span class="line">  );</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">-moz-linear-gradient</span>(</span><br><span class="line">    <span class="number">0deg</span>,</span><br><span class="line">    rgba(<span class="number">247</span>, <span class="number">149</span>, <span class="number">51</span>, <span class="number">0.1</span>) <span class="number">0</span>,</span><br><span class="line">    <span class="built_in">rgba</span>(<span class="number">243</span>, <span class="number">112</span>, <span class="number">85</span>, <span class="number">0.1</span>) <span class="number">15%</span>,</span><br><span class="line">    <span class="built_in">rgba</span>(<span class="number">239</span>, <span class="number">78</span>, <span class="number">123</span>, <span class="number">0.1</span>) <span class="number">30%</span>,</span><br><span class="line">    <span class="built_in">rgba</span>(<span class="number">161</span>, <span class="number">102</span>, <span class="number">171</span>, <span class="number">0.1</span>) <span class="number">44%</span>,</span><br><span class="line">    <span class="built_in">rgba</span>(<span class="number">80</span>, <span class="number">115</span>, <span class="number">184</span>, <span class="number">0.1</span>) <span class="number">58%</span>,</span><br><span class="line">    <span class="built_in">rgba</span>(<span class="number">16</span>, <span class="number">152</span>, <span class="number">173</span>, <span class="number">0.1</span>) <span class="number">72%</span>,</span><br><span class="line">    <span class="built_in">rgba</span>(<span class="number">7</span>, <span class="number">179</span>, <span class="number">155</span>, <span class="number">0.1</span>) <span class="number">86%</span>,</span><br><span class="line">    <span class="built_in">rgba</span>(<span class="number">109</span>, <span class="number">186</span>, <span class="number">130</span>, <span class="number">0.1</span>) <span class="number">100%</span></span><br><span class="line">  );</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">-o-linear-gradient</span>(</span><br><span class="line">    <span class="number">0deg</span>,</span><br><span class="line">    rgba(<span class="number">247</span>, <span class="number">149</span>, <span class="number">51</span>, <span class="number">0.1</span>) <span class="number">0</span>,</span><br><span class="line">    <span class="built_in">rgba</span>(<span class="number">243</span>, <span class="number">112</span>, <span class="number">85</span>, <span class="number">0.1</span>) <span class="number">15%</span>,</span><br><span class="line">    <span class="built_in">rgba</span>(<span class="number">239</span>, <span class="number">78</span>, <span class="number">123</span>, <span class="number">0.1</span>) <span class="number">30%</span>,</span><br><span class="line">    <span class="built_in">rgba</span>(<span class="number">161</span>, <span class="number">102</span>, <span class="number">171</span>, <span class="number">0.1</span>) <span class="number">44%</span>,</span><br><span class="line">    <span class="built_in">rgba</span>(<span class="number">80</span>, <span class="number">115</span>, <span class="number">184</span>, <span class="number">0.1</span>) <span class="number">58%</span>,</span><br><span class="line">    <span class="built_in">rgba</span>(<span class="number">16</span>, <span class="number">152</span>, <span class="number">173</span>, <span class="number">0.1</span>) <span class="number">72%</span>,</span><br><span class="line">    <span class="built_in">rgba</span>(<span class="number">7</span>, <span class="number">179</span>, <span class="number">155</span>, <span class="number">0.1</span>) <span class="number">86%</span>,</span><br><span class="line">    <span class="built_in">rgba</span>(<span class="number">109</span>, <span class="number">186</span>, <span class="number">130</span>, <span class="number">0.1</span>) <span class="number">100%</span></span><br><span class="line">  );</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">-ms-linear-gradient</span>(</span><br><span class="line">    <span class="number">0deg</span>,</span><br><span class="line">    rgba(<span class="number">247</span>, <span class="number">149</span>, <span class="number">51</span>, <span class="number">0.1</span>) <span class="number">0</span>,</span><br><span class="line">    <span class="built_in">rgba</span>(<span class="number">243</span>, <span class="number">112</span>, <span class="number">85</span>, <span class="number">0.1</span>) <span class="number">15%</span>,</span><br><span class="line">    <span class="built_in">rgba</span>(<span class="number">239</span>, <span class="number">78</span>, <span class="number">123</span>, <span class="number">0.1</span>) <span class="number">30%</span>,</span><br><span class="line">    <span class="built_in">rgba</span>(<span class="number">161</span>, <span class="number">102</span>, <span class="number">171</span>, <span class="number">0.1</span>) <span class="number">44%</span>,</span><br><span class="line">    <span class="built_in">rgba</span>(<span class="number">80</span>, <span class="number">115</span>, <span class="number">184</span>, <span class="number">0.1</span>) <span class="number">58%</span>,</span><br><span class="line">    <span class="built_in">rgba</span>(<span class="number">16</span>, <span class="number">152</span>, <span class="number">173</span>, <span class="number">0.1</span>) <span class="number">72%</span>,</span><br><span class="line">    <span class="built_in">rgba</span>(<span class="number">7</span>, <span class="number">179</span>, <span class="number">155</span>, <span class="number">0.1</span>) <span class="number">86%</span>,</span><br><span class="line">    <span class="built_in">rgba</span>(<span class="number">109</span>, <span class="number">186</span>, <span class="number">130</span>, <span class="number">0.1</span>) <span class="number">100%</span></span><br><span class="line">  );</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">linear-gradient</span>(</span><br><span class="line">    <span class="number">90deg</span>,</span><br><span class="line">    rgba(<span class="number">247</span>, <span class="number">149</span>, <span class="number">51</span>, <span class="number">0.1</span>) <span class="number">0</span>,</span><br><span class="line">    <span class="built_in">rgba</span>(<span class="number">243</span>, <span class="number">112</span>, <span class="number">85</span>, <span class="number">0.1</span>) <span class="number">15%</span>,</span><br><span class="line">    <span class="built_in">rgba</span>(<span class="number">239</span>, <span class="number">78</span>, <span class="number">123</span>, <span class="number">0.1</span>) <span class="number">30%</span>,</span><br><span class="line">    <span class="built_in">rgba</span>(<span class="number">161</span>, <span class="number">102</span>, <span class="number">171</span>, <span class="number">0.1</span>) <span class="number">44%</span>,</span><br><span class="line">    <span class="built_in">rgba</span>(<span class="number">80</span>, <span class="number">115</span>, <span class="number">184</span>, <span class="number">0.1</span>) <span class="number">58%</span>,</span><br><span class="line">    <span class="built_in">rgba</span>(<span class="number">16</span>, <span class="number">152</span>, <span class="number">173</span>, <span class="number">0.1</span>) <span class="number">72%</span>,</span><br><span class="line">    <span class="built_in">rgba</span>(<span class="number">7</span>, <span class="number">179</span>, <span class="number">155</span>, <span class="number">0.1</span>) <span class="number">86%</span>,</span><br><span class="line">    <span class="built_in">rgba</span>(<span class="number">109</span>, <span class="number">186</span>, <span class="number">130</span>, <span class="number">0.1</span>) <span class="number">100%</span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="文章透明度"><a href="#文章透明度" class="headerlink" title="文章透明度"></a>文章透明度</h1><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">* 文章页背景 */</span><br><span class="line"><span class="selector-class">.layout_post</span>&gt;<span class="selector-id">#post</span> &#123;</span><br><span class="line">    <span class="comment">/* 以下代表白色透明度为0.3*/</span></span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>,.<span class="number">3</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 所有背景（包括首页卡片、文章页、页面页等） */</span></span><br><span class="line"><span class="selector-id">#aside_content</span> <span class="selector-class">.card-widget</span>, <span class="selector-id">#recent-posts</span>&gt;<span class="selector-class">.recent-post-item</span>, <span class="selector-class">.layout_page</span>&gt;<span class="selector-tag">div</span><span class="selector-pseudo">:first-child</span><span class="selector-pseudo">:not(.recent-posts)</span>, <span class="selector-class">.layout_post</span>&gt;<span class="selector-id">#page</span>, <span class="selector-class">.layout_post</span>&gt;<span class="selector-id">#post</span>, <span class="selector-class">.read-mode</span> <span class="selector-class">.layout_post</span>&gt;<span class="selector-id">#post</span>&#123;</span><br><span class="line">    <span class="comment">/* 以下代表白色透明度为0.3 */</span></span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>,.<span class="number">3</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="昵称颜色"><a href="#昵称颜色" class="headerlink" title="昵称颜色"></a>昵称颜色</h1><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 博主昵称颜色 */</span></span><br><span class="line"><span class="selector-class">.author-info__name</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#ff7242</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/02/f60544faff00e4c69603da563eda7c40.png"></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 首页中间打字效果上方 博客昵称颜色*/</span></span><br><span class="line"><span class="selector-id">#page-header</span> <span class="selector-id">#site_title</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#80bdab</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 顶部导航栏 博客昵称颜色*/</span></span><br><span class="line"><span class="selector-id">#nav</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#f9f2f4</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="评论框"><a href="#评论框" class="headerlink" title="评论框"></a>评论框</h1><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 评论框  */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.vwrap</span> &#123;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">2px</span> <span class="number">2px</span> <span class="number">5px</span> <span class="number">#bbb</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.3</span>);</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">8px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">30px</span> <span class="number">0px</span> <span class="number">30px</span> <span class="number">0px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 提交按钮 */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-id">#vcomment</span> <span class="selector-tag">button</span> &#123;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0.3rem</span> <span class="number">0.8rem</span>;</span><br><span class="line">    <span class="attribute">border-color</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#e58a8a</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">0.7rem</span>;</span><br><span class="line">    <span class="attribute">-webkit-transition</span>: all <span class="number">0.3s</span>;</span><br><span class="line">    <span class="attribute">-moz-transition</span>: all <span class="number">0.3s</span>;</span><br><span class="line">    <span class="attribute">-o-transition</span>: all <span class="number">0.3s</span>;</span><br><span class="line">    <span class="attribute">-ms-transition</span>: all <span class="number">0.3s</span>;</span><br><span class="line">    <span class="attribute">transition</span>: all <span class="number">0.3s</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 评论区代码块 */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.v</span><span class="selector-attr">[data-class=v]</span> <span class="selector-tag">code</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#c7254e</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#F9F2F4</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 设置评论框 */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.vcard</span> &#123;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">2px</span> <span class="number">2px</span> <span class="number">5px</span> <span class="number">#bbb</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.3</span>);</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">8px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">30px</span> <span class="number">0px</span> <span class="number">0px</span> <span class="number">0px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 取消回复聊天框 */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.vquote</span> <span class="selector-class">.vcard</span> &#123;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">2px</span> <span class="number">2px</span> <span class="number">5px</span> transparent;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.0</span>);</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="Valine访客标签"><a href="#Valine访客标签" class="headerlink" title="Valine访客标签"></a>Valine访客标签</h1><p><a href="https://akilar.top/posts/d2222705/">感谢Akilar博主</a></p><ol><li>打开<code>[lzyblog]\themes\butterfly\layout\includes\third-party\comments\valine.pug</code>,按指示添加如下字段(<code>去掉+号</code>)。<figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">serverURLs: &#x27;#&#123;theme.valine.serverURLs&#125;&#x27;,</span><br><span class="line">      emojiCDN: &#x27;#&#123;theme.valine.emojiCDN&#125;&#x27;,</span><br><span class="line">      emojiMaps: !&#123;emojiMaps&#125;,</span><br><span class="line">      enableQQ: #&#123;theme.valine.enableQQ&#125;,</span><br><span class="line">      path: window.location.pathname,</span><br><span class="line"><span class="addition">+     master: &#x27;#&#123;theme.valine.master&#125;&#x27;.split(&#x27;,&#x27;),</span></span><br><span class="line"><span class="addition">+     friends: &#x27;#&#123;theme.valine.friends&#125;&#x27;.split(&#x27;,&#x27;),</span></span><br><span class="line"><span class="addition">+     tagMeta: &#x27;#&#123;theme.valine.tagMeta || &quot;博主,小伙伴,访客&quot;&#125;&#x27;.split(&#x27;,&#x27;)</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li><li>打开<code>[lzyblog]\_config.butterfly.yml,</code><ul><li>在valine配置项添加如下内容。<br>md5加密可以使用<a href="https://tool.chinaz.com/tools/md5.aspx">在线转码</a>,务必使用<code>32位[小]</code>进行转码。</li></ul></li></ol><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"> valine:</span><br><span class="line">       appId:  # leancloud application app id</span><br><span class="line">       appKey:  # leancloud application app key</span><br><span class="line">       ........#去掉+号</span><br><span class="line"><span class="addition">+     master: # md5加密后的博主邮箱</span></span><br><span class="line"><span class="addition">+       - d4e7????4d361ad7????44a14e9e2a94  #可添加多个</span></span><br><span class="line"><span class="addition">+     friends: # md5加密后的小伙伴邮箱</span></span><br><span class="line"><span class="addition">+       - 5c?????bfe6rfc72a????e268ad3819c #可添加多个</span></span><br><span class="line"><span class="addition">+       - 7c?????bfe65fc02a????e2????3919c</span></span><br><span class="line"><span class="addition">+     tagMeta: &#x27;博主,小伙伴,访客&#x27; # 标签要显示的文字,默认&#x27;博主,小伙伴,访客&#x27;</span></span><br></pre></td></tr></table></figure><ul><li>在CDN配置项添加如下内容。将Valine.min.js替换成HCLonely魔改的版本(+号替换-号）。</li></ul><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="deletion">-valine: https://cdn.jsdelivr.net/npm/valine/dist/Valine.min.js</span></span><br><span class="line"><span class="addition">+valine: https://cdn.jsdelivr.net/gh/HCLonely/Valine@latest/dist/Valine.min.js</span></span><br></pre></td></tr></table></figure><h1 id="a标签颜色"><a href="#a标签颜色" class="headerlink" title="a标签颜色"></a>a标签颜色</h1><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* a标签默认颜色 */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-id">#article-container</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#00c4b6</span>;</span><br><span class="line">    <span class="attribute">text-decoration</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 鼠标悬停时的颜色 */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-id">#article-container</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#e58a8a</span>;</span><br><span class="line">    <span class="attribute">text-decoration</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*a标签颜色*/</span></span><br><span class="line"><span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#00c4b6</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><a href="http://tools.jb51.net/static/colorpicker/">在线颜色选择器 | RGB颜色查询对照表</a></p><h1 id="友情链接"><a href="#友情链接" class="headerlink" title="友情链接"></a>友情链接</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page link</span><br></pre></td></tr></table></figure><p><code>C:\lzyblog\source\link\index.md</code></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 友情链接</span><br><span class="line">date: 2020-06-03 17:53:02</span><br><span class="line">type: link</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p><code>C:\lzyblog\source\ </code>目录下新建<code>_data </code>文件夹，文件夹内新建 <code>link.yml</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">class:</span></span><br><span class="line">  <span class="attr">class_name:</span> <span class="string">友情链接</span></span><br><span class="line">  <span class="attr">link_list:</span></span><br><span class="line">    <span class="attr">1:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">lzyblog</span></span><br><span class="line">      <span class="attr">link:</span> <span class="string">https://lzyblog.github.io/</span></span><br><span class="line">      <span class="attr">avatar:</span> <span class="string">https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/19/1f52735f41052a8a163fbef9101b879e.png</span></span><br><span class="line">      <span class="attr">descr:</span> <span class="string">越努力越幸运</span></span><br><span class="line">    <span class="attr">2:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">Test</span></span><br><span class="line">      <span class="attr">link:</span> <span class="string">https://www.xxxxxx.com/</span></span><br><span class="line">      <span class="attr">avatar:</span> <span class="string">https://xxxxx/favicon.ico</span></span><br><span class="line">      <span class="attr">descr:</span> <span class="string">Test</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="attr">class2:</span></span><br><span class="line">   <span class="attr">class_name:</span> <span class="string">链接无效</span></span><br><span class="line">   <span class="attr">link_list:</span></span><br><span class="line">     <span class="attr">1:</span></span><br><span class="line">       <span class="attr">name:</span> <span class="string">Test</span></span><br><span class="line">       <span class="attr">link:</span> <span class="string">https://lzyblog.github.io/</span></span><br><span class="line">       <span class="attr">avatar:</span> </span><br><span class="line">       <span class="attr">descr:</span> <span class="string">Test</span></span><br><span class="line">     <span class="attr">2:</span></span><br><span class="line">       <span class="attr">name:</span> <span class="string">Test</span></span><br><span class="line">       <span class="attr">link:</span> <span class="string">https://lzyblog.github.io/</span></span><br><span class="line">       <span class="attr">avatar:</span> </span><br><span class="line">       <span class="attr">descr:</span> <span class="string">Test</span></span><br></pre></td></tr></table></figure><h1 id="主题颜色"><a href="#主题颜色" class="headerlink" title="主题颜色"></a>主题颜色</h1><p>找到主题配置文件里<code>theme_color</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">theme_color:</span> <span class="comment">#(自定义主题色)</span></span><br><span class="line">   <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">   <span class="attr">main:</span> <span class="string">&quot;#49B1F5&quot;</span> <span class="comment">#文章颜色</span></span><br><span class="line">   <span class="attr">paginator:</span> <span class="string">&quot;#00c4b6&quot;</span> <span class="comment">#分页器颜色</span></span><br><span class="line">   <span class="attr">button_hover:</span> <span class="string">&quot;#FF7242&quot;</span> <span class="comment"># 鼠标移动到按钮上的显示的颜色</span></span><br><span class="line">   <span class="attr">text_selection:</span> <span class="string">&quot;#00c4b6&quot;</span> <span class="comment">#选择文字的背景颜色</span></span><br><span class="line">   <span class="attr">link_color:</span> <span class="string">&quot;#99a9bf&quot;</span> <span class="comment">#链接颜色</span></span><br><span class="line">   <span class="attr">meta_color:</span> <span class="string">&quot;#858585&quot;</span></span><br><span class="line">   <span class="attr">hr_color:</span> <span class="string">&quot;#A4D8FA&quot;</span> <span class="comment"># 小剪刀颜色、小摩托颜色</span></span><br><span class="line">   <span class="attr">code_foreground:</span> <span class="string">&quot;#F47466&quot;</span> <span class="comment"># 代码`code`的颜色</span></span><br><span class="line">   <span class="attr">code_background:</span> <span class="string">&quot;rgba(27, 31, 35, .05)&quot;</span> <span class="comment"># 代码`code`的背景颜色</span></span><br><span class="line">   <span class="attr">toc_color:</span> <span class="string">&quot;#00c4b6&quot;</span></span><br><span class="line">   <span class="attr">blockquote_padding_color:</span> <span class="string">&quot;#49b1f5&quot;</span> <span class="comment"># &gt;  &gt;&gt; &gt;&gt;&gt; 描述颜色</span></span><br><span class="line">   <span class="attr">blockquote_background_color:</span> <span class="string">&quot;#49b1f5&quot;</span></span><br></pre></td></tr></table></figure><h1 id="公告栏装饰"><a href="#公告栏装饰" class="headerlink" title="公告栏装饰"></a>公告栏装饰</h1><p>在 C:\lzyblog\themes\Butterfly_config.yml 里找到 <code>card_announcement: </code>下的 <code>content: </code>后面添加</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">card_announcement:</span> <span class="comment">#公告栏</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">content:</span> <span class="string">城市的轮廓，你的孤独&lt;img</span> <span class="string">src=&quot;https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/19/33a1542ce0a798e62e404f0bd948149f.png&quot;&gt;</span></span><br></pre></td></tr></table></figure><h1 id="图床搭建"><a href="#图床搭建" class="headerlink" title="图床搭建"></a>图床搭建</h1><p><a href="https://plushine.cn/38834.html#Demo">XJHui’s Blog</a><br>PicGo,Typora下载<br><a href="https://www.lanzous.com/b00zdvy5e">点击下载—密码:6kjr</a></p><h1 id="博客备份"><a href="#博客备份" class="headerlink" title="博客备份"></a>博客备份</h1><p>非常感谢博主<a href="https://plushine.cn/38834.html#Demo">XJHui’s Blog</a>提供的方法<br><a href="https://github.com/coneycode/hexo-git-backup">GitHub项目地址</a><br><a href="https://github.com/coneycode/hexo-git-backup/blob/master/README.md">官方文档</a></p><h4 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h4><p>在博客文件里右击-&gt;Git Bash</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-git-backup --save </span><br></pre></td></tr></table></figure><ul><li>在GuiHub中新建仓库,例如Hexo_Backup，权限为private，分支为master</li><li>复制所建库的SSH</li><li>在Hexo配置文件中添加</li></ul><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">backup:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">    <span class="attr">repository:</span></span><br><span class="line">       <span class="attr">backup:</span> <span class="string">git@github.com:xingjiahui/Hexo-Backup.git,master(分支名,新库为main)</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo b(back)</span><br></pre></td></tr></table></figure><blockquote><p>每次更新博客后，都需要<code>hexo b</code></p></blockquote><p>备份的用处:</p><ul><li>当hexo g 报错没有头绪时，可以使用备份文件</li><li>当本地文件丢失时，可以使用备份文件</li><li>使用前提，配好环境(已下载<code>Node.js和Git</code>)</li></ul><h1 id="添加本地搜索"><a href="#添加本地搜索" class="headerlink" title="添加本地搜索"></a>添加本地搜索</h1><p><a href="https://blog.lete114.top/article/eef7397d.html#%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E4%BF%AE%E6%94%B9">Lete搜索配置</a><br>主题配置文件中找到local_search</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">local_search:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">input_placeholder:</span> <span class="string">Search</span> <span class="string">for</span> <span class="string">Posts</span></span><br><span class="line">    <span class="attr">hits_empty:</span> <span class="string">&quot;We didn&#x27;t find any results for the search: $&#123;query&#125;&quot;</span> <span class="comment"># 如果没有查到内容相关内容显示</span></span><br></pre></td></tr></table></figure><p><code>安装插件</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-search --save</span><br></pre></td></tr></table></figure><blockquote><p>当文章过多 search.xml 文件大小会越来越大，会拖慢博客的加载速度<br>找到主题文件\source\js\local-search.js<br>修改<code> url: GLOBAL_CONFIG.root + path,</code> 为 url: “<a href="https://cdn.jsdelivr.net/gh/%60%E4%BD%A0GitHub%E7%9A%84%E7%94%A8%E6%88%B7%E5%90%8D/%E4%BD%A0GitHub%E7%9A%84%E7%94%A8%E6%88%B7%E5%90%8D%60.github.io/search.xml&quot;">https://cdn.jsdelivr.net/gh/`你GitHub的用户名/你GitHub的用户名`.github.io/search.xml&quot;</a>,</p></blockquote><h1 id="valine评论系统"><a href="#valine评论系统" class="headerlink" title="valine评论系统"></a>valine评论系统</h1><p><a href="https://lete114.now.sh/article/Valine-LeanCloud-Config.html#%E5%89%8D%E8%A8%80">Lete保姆级valine教程</a><br><a href="https://www.leancloud.cn/">leancloud管理评论</a><br><a href="https://valine.js.org/">Valine文档</a><br>进入leancloud网站注册，并创建应用，找到应用key<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@1086c981d4982e49807f906e95be603883cef644/2020/11/17/d6a49b1aa90d7450e26c5f426ec117c4.png" width="500px" height="300px"><br>复制<code>AppID</code>和<code>AppKey</code>,找到Hexo配置文件中valine配置即可</p><h2 id="自定义表情（基于valine）"><a href="#自定义表情（基于valine）" class="headerlink" title="自定义表情（基于valine）"></a>自定义表情（基于valine）</h2><p><a href="https://butterfly.js.org/posts/ceeb73f/#%E8%A9%95%E8%AB%96">Butterfly官方文档</a></p><blockquote><p>在博客文件名`source<code>\目录下创建_data文件夹,</code>_data<code>文件夹里面创建</code>valine.json`文件，输入以下格式</p></blockquote><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="attr">&quot;QQ1&quot;</span>: <span class="string">&quot;QQ/aini.gif&quot;</span>,</span><br><span class="line"><span class="attr">&quot;QQ2&quot;</span>: <span class="string">&quot;QQ/aixin.gif&quot;</span>,</span><br><span class="line"><span class="attr">&quot;QQ3&quot;</span>: <span class="string">&quot;QQ/aoman.gif&quot;</span>,</span><br><span class="line"><span class="attr">&quot;QQ4&quot;</span>: <span class="string">&quot;QQ/baiyan.gif&quot;</span>,</span><br><span class="line"><span class="attr">&quot;QQ5&quot;</span>: <span class="string">&quot;QQ/bangbangtang.gif&quot;</span>,</span><br><span class="line"><span class="attr">&quot;QQ6&quot;</span>: <span class="string">&quot;QQ/baojin.gif&quot;</span>,</span><br><span class="line"><span class="attr">&quot;QQ7&quot;</span>: <span class="string">&quot;QQ/baoquan.gif&quot;</span>,</span><br><span class="line"><span class="attr">&quot;QQ8&quot;</span>: <span class="string">&quot;QQ/bishi.gif&quot;</span>,</span><br><span class="line"><span class="attr">&quot;QQ9&quot;</span>: <span class="string">&quot;QQ/bizui.gif&quot;</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>然后在Hexo主文件下_config.yml里面找到<code>valine</code>下<code>emojiCDN:</code> <a href="https://cdn.jsdelivr.net/gh/GamerNoTitle/ValineCDN@master/(%E5%A1%AB%E5%85%A5%E5%AE%98%E6%96%B9%E6%96%87%E6%A1%A3%E7%BB%99%E7%9A%84%E5%9C%B0%E5%9D%80)">https://cdn.jsdelivr.net/gh/GamerNoTitle/ValineCDN@master/(填入官方文档给的地址)</a></p></blockquote><p>寻找表情去前往<a href="https://github.com/GamerNoTitle/Valine-Magic">表情开源仓库</a></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">valine:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">appId:</span> <span class="string">54O2OYplcci4GjXUK0GjalFz-gzGzoHsz</span> <span class="comment"># leancloud application app id</span></span><br><span class="line">  <span class="attr">appKey:</span> <span class="string">sB0Y5Ydm1XnlyKUY5uR3RxsW</span> <span class="comment"># leancloud application app key</span></span><br><span class="line">  <span class="attr">pageSize:</span> <span class="number">10</span> <span class="comment"># comment list page size</span></span><br><span class="line">  <span class="attr">avatar:</span> <span class="string">monsterid</span> <span class="comment"># gravatar style https://valine.js.org/#/avatar</span></span><br><span class="line">  <span class="attr">lang:</span> <span class="string">zh-CN</span> <span class="comment"># i18n: zh-CN/zh-TW/en/ja</span></span><br><span class="line">  <span class="attr">placeholder:</span> <span class="string">请留下你的足迹（昵称栏输入QQ后按下Tab键，可以自动获取昵称和邮箱）</span> <span class="comment"># valine comment input placeholder (like: Please leave your footprints)</span></span><br><span class="line">  <span class="attr">nick:</span> <span class="string">昵称/QQ号(必填)</span></span><br><span class="line">  <span class="attr">mail:</span> <span class="string">邮箱(必填)</span></span><br><span class="line">  <span class="attr">guest_info:</span> <span class="string">nick,mail,link</span> <span class="comment"># valine comment header info (nick/mail/link)</span></span><br><span class="line">  <span class="attr">recordIP:</span> <span class="literal">false</span> <span class="comment"># Record reviewer IP</span></span><br><span class="line">  <span class="attr">serverURLs:</span> <span class="comment"># This configuration is suitable for domestic custom domain name users, overseas version will be automatically detected (no need to manually fill in)</span></span><br><span class="line">  <span class="attr">bg:</span> <span class="comment"># valine background</span></span><br><span class="line">  <span class="attr">notify:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">emojiCDN:</span> <span class="string">https://cdn.jsdelivr.net/gh/GamerNoTitle/ValineCDN@master/</span></span><br><span class="line">  <span class="attr">enableQQ:</span> <span class="literal">true</span> <span class="comment"># enable the Nickname box to automatically get QQ Nickname and QQ Avatar</span></span><br><span class="line">  <span class="attr">requiredFields:</span> <span class="string">nick,mail</span> <span class="comment"># required fields (nick/mail)</span></span><br><span class="line">  <span class="attr">option:</span></span><br></pre></td></tr></table></figure><h1 id="音乐播放器"><a href="#音乐播放器" class="headerlink" title="音乐播放器"></a>音乐播放器</h1><p>1.悬浮音乐播放器<br><a href="https://github.com/MoePlayer/hexo-tag-aplayer">GitHub项目地址</a><br><a href="https://github.com/MoePlayer/hexo-tag-aplayer/blob/master/docs/README-zh_cn.md">官方文档</a><br>感谢：<a href="https://plushine.cn/52527.html#%E5%89%8D%E8%A8%80">XJHui’s Blog</a></p><p>2.创建音乐页面</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-tag-aplayer(安装插件)</span><br></pre></td></tr></table></figure><p><a href="https://github.com/MoePlayer/hexo-tag-aplayer">插件文档</a></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">aplayer: true（在Font-Matter中）</span><br><span class="line">&#123;% meting &quot;2751269737&quot; &quot;netease&quot; &quot;playlist&quot; &quot;autoplay&quot; &quot;mutex:false&quot; &quot;listmaxheight:340px&quot; &quot;preload:none&quot; &quot;theme:#ad7a86&quot;%&#125;</span><br><span class="line">参数介绍：</span><br><span class="line"><span class="code">    &quot;narrow&quot;: false,// （可选）播放器袖珍风格</span></span><br><span class="line"><span class="code">    &quot;autoplay&quot;: true,// （可选) 自动播放，移动端浏览器暂时不支持此功能</span></span><br><span class="line"><span class="code">    &quot;mode&quot;: &quot;random&quot;,// （可选）曲目循环类型，有 &#x27;random&#x27;（随机播放）, &#x27;single&#x27; (单曲播放), &#x27;circulation&#x27; (循环播放), &#x27;order&#x27; (列表播放)， 默认：&#x27;circulation&#x27;</span></span><br><span class="line"><span class="code">    &quot;showlrc&quot;: 3,// （可选）歌词显示配置项，可选项有：1,2,3</span></span><br><span class="line"><span class="code">    &quot;mutex&quot;: true,// （可选）该选项开启时，如果同页面有其他 aplayer 播放，该播放器会暂停</span></span><br><span class="line"><span class="code">    &quot;theme&quot;: &quot;#e6d0b2&quot;,// （可选）播放器风格色彩设置，默认：#b7daff</span></span><br><span class="line"><span class="code">    &quot;preload&quot;: &quot;metadata&quot;,// （可选）音乐文件预载入模式，可选项： &#x27;none&#x27; &#x27;metadata&#x27; &#x27;auto&#x27;, 默认: &#x27;auto&#x27;</span></span><br><span class="line"><span class="code">    &quot;listmaxheight&quot;: &quot;513px&quot;,// (可选) 该播放列表的最大长度</span></span><br></pre></td></tr></table></figure><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 音乐</span><br><span class="line">date: 2020-11-19 18:02:36</span><br><span class="line">aplayer: true</span><br><span class="line">---</span><br><span class="line"><span class="section"># 吉他指弹音乐歌单</span></span><br><span class="line">&#123;% meting &quot;5345536427&quot; &quot;netease&quot; &quot;playlist&quot; &quot;autoplay&quot; &quot;mutex:false&quot; &quot;listmaxheight:340px&quot; &quot;preload:none&quot; &quot;theme:#ad7a86&quot;%&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/02/5601fa22acbc611a681a7980f3ad0c25.png"></p><h1 id="社交图标"><a href="#社交图标" class="headerlink" title="社交图标"></a>社交图标</h1><p><a href="https://www.iconfont.cn/home/index?spm=a313x.7781069.1998910419.2">阿里云iconfont</a><br>找到喜欢的图标，添加入库：<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/02/d33765ab9b09455c6b8d641e3a134212.png"><br>打开购物车，点击添加至项目。<br>然后复制代码，浏览器打开，复制到一个新建CSS文件里。<br>打开代码可以看到如下CSS样式：<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/02/4939d458354cd2338ae01a3e14cb4dd4.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/02/846b77ff8ea72734aeba60e48dc91cc2.png"><br>把以上新建的CSS文件存到<code>\themes\Butterfly\source\css</code>目录下。<br>在博客配置文件下引入CSS。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/02/610ee90c11ff51aa1988b668a59dd959.png"><br>按格式使用<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/02/fb3f6c235a83610b301c7ed7994db7d2.png"><br>修改图标大小和颜色：在<code>\themes\Butterfly\source\css</code>目录下创建一个<code>Icon_size.css</code>文件(自定义名称),然后同样引入博客<code>配置文件head</code>下。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*.icon-bilibili:before &#123;</span></span><br><span class="line"><span class="comment">  content: &quot;\e600&quot;;</span></span><br><span class="line"><span class="comment">&#125; */</span></span><br><span class="line"><span class="comment">/* 卡片处小图标 */</span></span><br><span class="line"><span class="selector-class">.card_icon_bilibili</span> &#123;</span><br><span class="line">  <span class="comment">/* 修改颜色 */</span></span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#FF69B4</span>;</span><br><span class="line">  <span class="comment">/* 修改大小 */</span></span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">24px</span>;</span><br><span class="line">   </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.card_icon_git</span>&#123;</span><br><span class="line">  <span class="comment">/* 修改颜色 */</span></span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#6495ED</span>;</span><br><span class="line">  <span class="comment">/* 修改大小 */</span></span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">24px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.card_icon_qq</span>&#123;</span><br><span class="line">  <span class="comment">/* 修改颜色 */</span></span><br><span class="line">  <span class="attribute">color</span>:<span class="number">#FF8C00</span> ;</span><br><span class="line">  <span class="comment">/* 修改大小 */</span></span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">24px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.card_icon_csdn</span>&#123;</span><br><span class="line">  <span class="comment">/* 修改颜色 */</span></span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#FF0000</span>;</span><br><span class="line">  <span class="comment">/* 修改大小 */</span></span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">24px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.card_icon_zhihu</span>&#123;</span><br><span class="line">  <span class="comment">/* 修改颜色 */</span></span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#00BFFF</span>;</span><br><span class="line">  <span class="comment">/* 修改大小 */</span></span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">24px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="添加2D人物模型"><a href="#添加2D人物模型" class="headerlink" title="添加2D人物模型"></a>添加2D人物模型</h1><p>在博客文件夹下右击,Git Bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-helper-live2d</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install live2d-widget-model-hijiki(模型名)</span><br></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/wang_123_zy/article/details/87181892">模型名及样式</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">在根目录配置文件中添加如下代码：</span><br><span class="line">live2d:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">  scriptFrom: <span class="built_in">local</span></span><br><span class="line">  pluginRootPath: live2dw/</span><br><span class="line">  pluginJsPath: lib/</span><br><span class="line">  pluginModelPath: assets/</span><br><span class="line">  tagMode: <span class="literal">false</span></span><br><span class="line">  <span class="built_in">log</span>: <span class="literal">false</span></span><br><span class="line">  model:</span><br><span class="line">    use: live2d-widget-model-hijiki(模型名)</span><br><span class="line">  display:</span><br><span class="line">    position: right</span><br><span class="line">    width: 150</span><br><span class="line">    height: 300</span><br><span class="line">  mobile:</span><br><span class="line">    show: <span class="literal">true</span></span><br><span class="line">  react:</span><br><span class="line">    opacity: 0.7</span><br></pre></td></tr></table></figure><h1 id="博客运行时间"><a href="#博客运行时间" class="headerlink" title="博客运行时间"></a>博客运行时间</h1><p>来源：<a href="https://blog.hclonely.com/posts/57bd67ce/">HCLonely Blog</a></p><blockquote><p>在博客根目录/themes/Butterfly/layout/includes/<code>footer.pug</code>文件，在最后span=theme.ICP.text下一行添加以下内容：</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#running-time</span><br><span class="line">    script.setInterval(()&#x3D;&gt;&#123;let create_time&#x3D;Math.round(new Date(&#39;2020-01-03 00:00:00&#39;).getTime()&#x2F;1000);let timestamp&#x3D;Math.round((new Date().getTime()+8*60*60*1000)&#x2F;1000);let second&#x3D;timestamp-create_time;let time&#x3D;new Array(0,0,0,0,0);if(second&gt;&#x3D;365*24*3600)&#123;time[0]&#x3D;parseInt(second&#x2F;(365*24*3600));second%&#x3D;365*24*3600;&#125;if(second&gt;&#x3D;24*3600)&#123;time[1]&#x3D;parseInt(second&#x2F;(24*3600));second%&#x3D;24*3600;&#125;if(second&gt;&#x3D;3600)&#123;time[2]&#x3D;parseInt(second&#x2F;3600);second%&#x3D;3600;&#125;if(second&gt;&#x3D;60)&#123;time[3]&#x3D;parseInt(second&#x2F;60);second%&#x3D;60;&#125;if(second&gt;0)&#123;time[4]&#x3D;second;&#125;currentTimeHtml&#x3D;&#39;本站已安全运行 &#39;+time[0]+&#39; 年 &#39;+time[1]+&#39; 天 &#39;+time[2]+&#39; 时 &#39;+time[3]+&#39; 分 &#39;+time[4]+&#39; 秒&#39;;document.getElementById(&quot;running-time&quot;).innerHTML&#x3D;currentTimeHtml;&#125;,1000);</span><br></pre></td></tr></table></figure><blockquote><p>2020-01-03 00:00:00为<code>网站起始时间</code></p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;基础美化&quot;&gt;&lt;a href=&quot;#基础美化&quot; class=&quot;headerlink&quot; title=&quot;基础美化&quot;&gt;&lt;/a&gt;基础美化&lt;/h1&gt;&lt;p&gt;基础美好请仔细查看&lt;a href=&quot;https://butterfly.js.org/&quot;&gt;Butterfly主题文档&lt;/a&gt;</summary>
      
    
    
    
    <category term="Buffterfly" scheme="http://example.com/categories/Buffterfly/"/>
    
    
    <category term="Buffterfly" scheme="http://example.com/tags/Buffterfly/"/>
    
  </entry>
  
  <entry>
    <title>Markdown语法</title>
    <link href="http://example.com/2020/12/02/Hexo/Markdown%E8%AF%AD%E6%B3%95/"/>
    <id>http://example.com/2020/12/02/Hexo/Markdown%E8%AF%AD%E6%B3%95/</id>
    <published>2020-12-02T05:27:07.497Z</published>
    <updated>2020-12-04T05:08:30.849Z</updated>
    
    <content type="html"><![CDATA[<ul><li><p>Markdown 是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档。</p></li><li><p>Markdown 语言在 2004 由约翰·格鲁伯（英语：John Gruber）创建。</p></li><li><p>Markdown 编写的文档可以导出 HTML 、Word、图像、PDF、Epub 等多种格式的文档。</p></li><li><p>Markdown 编写的文档后缀为 .md, .markdown。</p></li></ul><p><a href="https://www.runoob.com/markdown/md-tutorial.html">Markdown教程</a><br><a href="https://c.runoob.com/front-end/712">Markdown在线编辑器</a><br><a href="https://typora.io/">Typora编辑工具</a><br><a href="https://blog.csdn.net/zzh45828/article/details/105883083?utm_source=app">Typora搭配Markdown</a></p><h1 id="Typora"><a href="#Typora" class="headerlink" title="Typora"></a>Typora</h1><h2 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a><span id="jump">快捷键</span></h2><p><code>非源代码模式</code>下使用：</p><table><thead><tr><th align="center">功能</th><th align="center">快捷键</th></tr></thead><tbody><tr><td align="center">加粗</td><td align="center">Ctrl + B</td></tr><tr><td align="center">斜体</td><td align="center">Ctrl + I</td></tr><tr><td align="center">引用</td><td align="center">Ctrl + Q</td></tr><tr><td align="center">插入链接</td><td align="center">Ctrl + L</td></tr><tr><td align="center">插入代码</td><td align="center">Ctrl + K</td></tr><tr><td align="center">插入图片</td><td align="center">Ctrl + G</td></tr><tr><td align="center">插入表格</td><td align="center">Ctrl + T</td></tr><tr><td align="center">提升标题</td><td align="center">Ctrl + H</td></tr><tr><td align="center">有序列表</td><td align="center">Ctrl + O</td></tr><tr><td align="center">无序列表</td><td align="center">Ctrl + U</td></tr><tr><td align="center">横线</td><td align="center">Ctrl + R</td></tr><tr><td align="center">撤销</td><td align="center">Ctrl + Z</td></tr><tr><td align="center">重做</td><td align="center">Ctrl + Y</td></tr></tbody></table><h2 id="扩展语法"><a href="#扩展语法" class="headerlink" title="扩展语法"></a>扩展语法</h2><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/02/84a26db56c9c0099690b44375a4e1c00.png"></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">文本高亮：==高亮文本==</span><br><span class="line">下标：水 H~2~O(用~中间的字体会标在下方)</span><br><span class="line">上标：面积 m^3^(尖符合中间的字会标记在上方)</span><br></pre></td></tr></table></figure><h1 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h1><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 一级标题</span></span><br><span class="line"><span class="section">## 二级标题</span></span><br><span class="line"><span class="section">### 三级标题</span></span><br><span class="line"><span class="section">#### 四级标题</span></span><br><span class="line"><span class="section">##### 五级标题</span></span><br><span class="line"><span class="section">###### 六级标题</span></span><br></pre></td></tr></table></figure><h1 id="段落格式"><a href="#段落格式" class="headerlink" title="段落格式"></a>段落格式</h1><p>Markdown 段落没有特殊的格式，直接编写文字就好，<code>段落的换行是使用两个以上空格加上回车</code>。</p><h2 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="emphasis">*我是斜体*</span></span><br><span class="line"><span class="strong">**我是粗体**</span></span><br><span class="line"><span class="strong">**<span class="emphasis">*我是粗斜体<span class="strong">**<span class="emphasis">*</span></span></span></span></span><br><span class="line"><span class="strong"><span class="emphasis"><span class="strong"><span class="emphasis">~~我是删除线~~</span></span></span></span></span><br><span class="line"><span class="strong"><span class="emphasis"><span class="strong"><span class="emphasis"></span></span></span></span></span><br></pre></td></tr></table></figure><p><em>我是斜体</em><br><strong>我是粗体</strong><br><strong><em>我是粗斜体</em></strong><br><del>我是删除线</del></p><h2 id="字号、颜色"><a href="#字号、颜色" class="headerlink" title="字号、颜色"></a>字号、颜色</h2><p>通过html标记实现</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">face</span>=<span class="string">&quot;黑体&quot;</span>&gt;</span></span>我是黑体字<span class="xml"><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">face</span>=<span class="string">&quot;微软雅黑&quot;</span>&gt;</span></span>我是微软雅黑<span class="xml"><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">#0099ff</span> <span class="attr">size</span>=<span class="string">23</span> <span class="attr">face</span>=<span class="string">&quot;黑体&quot;</span>&gt;</span></span>我是黑体，颜色#0099ff 字号23<span class="xml"><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p><font face="黑体">我是黑体字</font><br><font face="微软雅黑">我是微软雅黑</font><br><font color="#0099ff" size="23" face="黑体">我是黑体，颜色#0099ff 字号23</font><br>颜色值可以查看<a href="https://www.sojson.com/web/online.html">调色板</a></p><h2 id="空格"><a href="#空格" class="headerlink" title="空格"></a>空格</h2><p>markdown不支持空格，需要使用html标记语言<code>&amp;nbsp;</code></p><h2 id="分隔线"><a href="#分隔线" class="headerlink" title="分隔线"></a>分隔线</h2><p>你可以在一行中用三个以上的星号、减号、底线来建立一个分隔线，行内不能有其他东西。你也可以在星号或是减号中间插入空格。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="strong">**<span class="emphasis">*</span></span></span><br><span class="line"><span class="strong"><span class="emphasis">*</span> <span class="emphasis">* *</span></span></span><br><span class="line"><span class="strong">**</span><span class="strong">**<span class="emphasis">*</span></span></span><br><span class="line"><span class="strong"><span class="emphasis">- - -</span></span></span><br><span class="line"><span class="strong"><span class="emphasis">---------</span></span></span><br></pre></td></tr></table></figure><hr><hr><hr><hr><hr><h2 id="下划线"><a href="#下划线" class="headerlink" title="下划线"></a>下划线</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">u</span>&gt;</span></span>下划线文本<span class="xml"><span class="tag">&lt;/<span class="name">u</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p><u>下划线文本</u></p><h2 id="脚注"><a href="#脚注" class="headerlink" title="脚注"></a>脚注</h2><p>脚注是对文本的补充说明。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[^要注明的文本]</span><br><span class="line"></span><br><span class="line">[<span class="symbol">^要注明的文本</span>]:<span class="link">这是对注明文本的补充说明。</span></span><br></pre></td></tr></table></figure><h1 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h1><p>（1）无序列表<br>无序列表使用星号(<code>*</code>)、加号(<code>+</code>)或是减号(<code>-</code>)作为列表标记，这些标记后面要添加<code>一个</code>空格，然后再填写内容</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">*</span> 第一项</span><br><span class="line"><span class="bullet">*</span> 第二项</span><br><span class="line"><span class="bullet">*</span> 第三项</span><br><span class="line"></span><br><span class="line"><span class="bullet">+</span> 第一项</span><br><span class="line"><span class="bullet">+</span> 第二项</span><br><span class="line"><span class="bullet">+</span> 第三项</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> 第一项</span><br><span class="line"><span class="bullet">-</span> 第二项</span><br><span class="line"><span class="bullet">-</span> 第三项</span><br></pre></td></tr></table></figure><ul><li>第一项</li><li>第二项</li><li>第三项</li></ul><ul><li>第一项</li><li>第二项</li><li>第三项</li></ul><ul><li>第一项</li><li>第二项</li><li>第三项</li></ul><p>（2）有序列表</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span> 第一项</span><br><span class="line"><span class="number">2.</span> 第二项</span><br><span class="line"><span class="number">3.</span> 第三项</span><br></pre></td></tr></table></figure><ol><li>第一项</li><li>第二项</li><li>第三项</li></ol><p>（3）列表嵌套<br>列表嵌套只需在子列表中的选项前面添加<code>四个空格</code>即可：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1.</span> 第一项：</span><br><span class="line"><span class="bullet">    -</span> 第一项嵌套的第一个元素</span><br><span class="line"><span class="bullet">    -</span> 第一项嵌套的第二个元素</span><br><span class="line"><span class="bullet">2.</span> 第二项：</span><br><span class="line"><span class="bullet">    -</span> 第二项嵌套的第一个元素</span><br><span class="line"><span class="bullet">    -</span> 第二项嵌套的第二个元素</span><br></pre></td></tr></table></figure><ol><li>第一项：<ul><li>第一项嵌套的第一个元素</li><li>第一项嵌套的第二个元素</li></ul></li><li>第二项：<ul><li>第二项嵌套的第一个元素</li><li>第二项嵌套的第二个元素</li></ul></li></ol><h1 id="区块"><a href="#区块" class="headerlink" title="区块"></a>区块</h1><p>（1）引用<br>Markdown 区块引用是在段落开头使用 <code>&gt;</code>符号 ，然后后面紧跟一个<code>空格符号</code>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; 一级引用</span><br><span class="line">&gt;&gt; 二级引用</span><br><span class="line">&gt;&gt;&gt; 三级引用</span><br><span class="line">&gt;&gt;&gt;&gt; 四级引用</span><br></pre></td></tr></table></figure><blockquote><p>一级引用</p><blockquote><p>二级引用</p><blockquote><p>三级引用</p><blockquote><p>四级引用</p></blockquote></blockquote></blockquote></blockquote><p>（2）代码区块<br>1.代码区块使用 4 个空格或者<code>一个制表符（Tab) </code>，要与上面内容隔一个换行符。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">int a=1;</span><br><span class="line">int b=1;</span><br><span class="line">printf(a+b);</span><br></pre></td></tr></table></figure><pre><code>int a=1;int b=1;printf(a+b);</code></pre><p>2.可以用  ```  包裹一段代码，并指定一种语言（也可以不指定）：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    alert(<span class="string">&#x27;RUNOOB&#x27;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>3.单个代码块用单个 ` 包裹。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C语言的&#96;scanf()&#96;怎么使用。</span><br></pre></td></tr></table></figure><p>C语言的<code>scanf()</code>怎么使用。</p><h1 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h1><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">链接名称</span>](<span class="link">链接地址  &quot;链接标题&quot;</span>)</span><br><span class="line">[<span class="string">百度</span>](<span class="link">https://www.baidu.com/  &quot;百度&quot;</span>)</span><br><span class="line">或者</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">链接地址</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">https:</span>//<span class="attr">www.baidu.com</span>/&gt;</span></span></span><br></pre></td></tr></table></figure><p><a href="https://www.baidu.com/" title="百度">百度</a><br>或者<br><a href="https://www.baidu.com/">https://www.baidu.com/</a></p><h2 id="锚点"><a href="#锚点" class="headerlink" title="锚点"></a>锚点</h2><p>1.<strong>标题</strong>跳转（只限英文标题）</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">我向跳转到标题</span>](<span class="link">#要去哪个标题</span>)</span><br></pre></td></tr></table></figure><p><a href="#Typora">我向跳转到Typora</a><br>2.<strong>瞄点</strong>设置</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">目标页面设置：<span class="xml"><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;jump&quot;</span>&gt;</span></span>快捷键<span class="xml"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line">点击页面设置：[<span class="string">点我跳转到快捷键</span>](<span class="link">#jump</span>)</span><br></pre></td></tr></table></figure><p><a href="#jump">点我跳转到快捷键</a></p><h1 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h1><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">![<span class="string">alt 属性文本</span>](<span class="link">图片地址</span>)</span><br><span class="line">例如：![<span class="string">RUNOOB 图标</span>](<span class="link">http://static.runoob.com/images/runoob-logo.png</span>)</span><br></pre></td></tr></table></figure><p><img src="http://static.runoob.com/images/runoob-logo.png" alt="RUNOOB 图标"></p><h1 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h1><p>可以使用快捷键Ctrl+T（非源代模式）<br>Markdown 制作表格使用 | 来分隔不同的单元格，使用 - 来分隔表头和其他行。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">|  表头   | 表头  |</span><br><span class="line">|  ----  | ----  |</span><br><span class="line">| 单元格  | 单元格 |</span><br><span class="line">| 单元格  | 单元格 |</span><br></pre></td></tr></table></figure><table><thead><tr><th>表头</th><th>表头</th></tr></thead><tbody><tr><td>单元格</td><td>单元格</td></tr><tr><td>单元格</td><td>单元格</td></tr></tbody></table><h2 id="对齐方式"><a href="#对齐方式" class="headerlink" title="对齐方式"></a>对齐方式</h2><pre><code>-: 设置内容和标题栏居右对齐。:- 设置内容和标题栏居左对齐。:-: 设置内容和标题栏居中对齐。</code></pre><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">| 左对齐 | 右对齐 | 居中对齐 |</span><br><span class="line">| :-----| ----: | :----: |</span><br><span class="line">| 单元格 | 单元格 | 单元格 |</span><br><span class="line">| 单元格 | 单元格 | 单元格 |</span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">左对齐</th><th align="right">右对齐</th><th align="center">居中对齐</th></tr></thead><tbody><tr><td align="left">单元格</td><td align="right">单元格</td><td align="center">单元格</td></tr><tr><td align="left">单元格</td><td align="right">单元格</td><td align="center">单元格</td></tr></tbody></table><h1 id="特殊符号"><a href="#特殊符号" class="headerlink" title="特殊符号"></a>特殊符号</h1><p>(1）对于 Markdown 中的语法符号，前面加<code>反斜线\</code>即可显示符号本身。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">\\  --- \反斜线</span><br><span class="line">\<span class="emphasis">* ----  *</span>星号</span><br><span class="line">\<span class="emphasis">_----下划线</span></span><br><span class="line"><span class="emphasis">\&#123;\&#125; \[\] \(\) ----  &#123;&#125; [] ()</span></span><br><span class="line"><span class="emphasis">\#  ----  #</span></span><br><span class="line"><span class="emphasis">\+   ---- +</span></span><br><span class="line"><span class="emphasis">\-   -----   -</span></span><br><span class="line"><span class="emphasis">\.  ----- .</span></span><br><span class="line"><span class="emphasis">\!  ---- !</span></span><br></pre></td></tr></table></figure><h1 id="高级技巧"><a href="#高级技巧" class="headerlink" title="高级技巧"></a>高级技巧</h1><p>可以使用<strong>HTML标记</strong>语言进行一些扩展。</p><h2 id="背景色"><a href="#背景色" class="headerlink" title="背景色"></a>背景色</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">orange</span>&gt;</span>背景色是：orange<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><table><tr><td bgcolor="orange">背景色是：orange</td></tr></table><h2 id="Emoji表情符号"><a href="#Emoji表情符号" class="headerlink" title="Emoji表情符号"></a>Emoji表情符号</h2><p>emoji表情使用:EMOJICODE:的格式，详细列表可见 <a href="https://www.webfx.com/tools/emoji-cheat-sheet/">https://www.webfx.com/tools/emoji-cheat-sheet/</a><br>但是部分平台不支持。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">:smile:</span><br><span class="line">:heart<span class="emphasis">_eyes:</span></span><br><span class="line"><span class="emphasis">:yum:</span></span><br><span class="line"><span class="emphasis">:kissing_</span>heart:</span><br></pre></td></tr></table></figure><h2 id="Latex数学公式"><a href="#Latex数学公式" class="headerlink" title="Latex数学公式"></a>Latex数学公式</h2><p><a href="https://blog.csdn.net/testcs_dn/article/details/44229085">markdown编辑器使用LaTex数学公式</a><br>1.行内公式：使用两个”$”符号引用公式:(与最左边隔开一个空格)</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$公式$</span><br><span class="line">$\sqrt&#123;x^&#123;2&#125;&#125;$ </span><br></pre></td></tr></table></figure><p>显示结果:<br> $\sqrt{x^{2}}$ </p><p>2.行间公式：使用两对“$$”符号引用公式<br><a href="https://www.mohu.org/info/symbols/symbols.htm">常用数学符号的 LaTeX 表示方法</a></p><h2 id="流程图"><a href="#流程图" class="headerlink" title="流程图"></a>流程图</h2><p>部分平台不支持，属于Typora扩展语法。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">st&#x3D;&gt;start: 开始</span><br><span class="line">op1&#x3D;&gt;operation: My Operation</span><br><span class="line">c&#x3D;&gt;condition: Yes or No?</span><br><span class="line">e&#x3D;&gt;end: 结束</span><br><span class="line"></span><br><span class="line">st-&gt;op1-&gt;c</span><br><span class="line">c(yes)-&gt;e</span><br><span class="line">c(no)-&gt;op1</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/02/9cd7e37d1fd654d36c1832fe87254d28.png"></p><h2 id="Todo列表"><a href="#Todo列表" class="headerlink" title="Todo列表"></a>Todo列表</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> [ ] 已处理的事情1</span><br><span class="line"><span class="bullet">-</span> [ ] 已处理的事情2</span><br><span class="line"><span class="bullet">-</span> [x] 未处理的事情1</span><br><span class="line"><span class="bullet">-</span> [x] 未处理的事情2</span><br><span class="line"><span class="bullet">-</span> [x] 未处理的事情3</span><br></pre></td></tr></table></figure><ul><li><input disabled type="checkbox"> 已处理的事情1</li><li><input disabled type="checkbox"> 已处理的事情2</li><li><input checked disabled type="checkbox"> 未处理的事情1</li><li><input checked disabled type="checkbox"> 未处理的事情2</li><li><input checked disabled type="checkbox"> 未处理的事情3</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Markdown 是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Markdown 语言在 2004 由约翰·格鲁伯（英语：John Gruber）创建。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Markdo</summary>
      
    
    
    
    <category term="Markdown" scheme="http://example.com/categories/Markdown/"/>
    
    
    <category term="Markdown" scheme="http://example.com/tags/Markdown/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode每日一道</title>
    <link href="http://example.com/2020/11/24/%E7%AE%97%E6%B3%95/LeetCode%E6%AF%8F%E6%97%A5%E4%B8%80%E9%81%93/"/>
    <id>http://example.com/2020/11/24/%E7%AE%97%E6%B3%95/LeetCode%E6%AF%8F%E6%97%A5%E4%B8%80%E9%81%93/</id>
    <published>2020-11-24T12:16:51.310Z</published>
    <updated>2021-01-02T02:28:52.380Z</updated>
    
    
    
    
    <category term="算法" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="LeetCode" scheme="http://example.com/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>Linux学习笔记</title>
    <link href="http://example.com/2020/11/24/%E5%90%8E%E7%AB%AF/Linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>http://example.com/2020/11/24/%E5%90%8E%E7%AB%AF/Linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2020-11-24T12:16:02.604Z</published>
    <updated>2021-01-01T10:46:40.826Z</updated>
    
    
    
    
    <category term="Linux" scheme="http://example.com/categories/Linux/"/>
    
    
    <category term="Linux" scheme="http://example.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>计算机组成原理笔记</title>
    <link href="http://example.com/2020/11/24/%E7%AC%94%E8%AE%B0/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E7%AC%94%E8%AE%B0/"/>
    <id>http://example.com/2020/11/24/%E7%AC%94%E8%AE%B0/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E7%AC%94%E8%AE%B0/</id>
    <published>2020-11-24T12:14:13.807Z</published>
    <updated>2021-01-01T10:36:03.698Z</updated>
    
    <content type="html"><![CDATA[<h1 id="教程推荐"><a href="#教程推荐" class="headerlink" title="教程推荐"></a>教程推荐</h1><p><a href="https://www.bilibili.com/video/BV1BE411D7ii">2019 王道考研 计算机组成原理</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;教程推荐&quot;&gt;&lt;a href=&quot;#教程推荐&quot; class=&quot;headerlink&quot; title=&quot;教程推荐&quot;&gt;&lt;/a&gt;教程推荐&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://www.bilibili.com/video/BV1BE411D7ii&quot;&gt;2019 王道考</summary>
      
    
    
    
    <category term="笔记" scheme="http://example.com/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="笔记" scheme="http://example.com/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>计算机网络笔记</title>
    <link href="http://example.com/2020/11/24/%E7%AC%94%E8%AE%B0/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%AC%94%E8%AE%B0/"/>
    <id>http://example.com/2020/11/24/%E7%AC%94%E8%AE%B0/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%AC%94%E8%AE%B0/</id>
    <published>2020-11-24T12:13:43.190Z</published>
    <updated>2021-01-01T10:36:48.316Z</updated>
    
    <content type="html"><![CDATA[<h1 id="教程推荐"><a href="#教程推荐" class="headerlink" title="教程推荐"></a>教程推荐</h1><p><a href="https://www.bilibili.com/video/BV19E411D78Q">2019 王道考研 计算机网络</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;教程推荐&quot;&gt;&lt;a href=&quot;#教程推荐&quot; class=&quot;headerlink&quot; title=&quot;教程推荐&quot;&gt;&lt;/a&gt;教程推荐&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://www.bilibili.com/video/BV19E411D78Q&quot;&gt;2019 王道考</summary>
      
    
    
    
    <category term="笔记" scheme="http://example.com/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="笔记" scheme="http://example.com/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>操作系统笔记</title>
    <link href="http://example.com/2020/11/24/%E7%AC%94%E8%AE%B0/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%AC%94%E8%AE%B0/"/>
    <id>http://example.com/2020/11/24/%E7%AC%94%E8%AE%B0/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%AC%94%E8%AE%B0/</id>
    <published>2020-11-24T12:12:48.878Z</published>
    <updated>2020-12-29T11:05:51.686Z</updated>
    
    <content type="html"><![CDATA[<p><code>感谢!!</code><br><a href="https://blog.csdn.net/gl620321/article/details/107128661?utm_source=app">思维导图来源</a><br><a href="https://mubu.com/doc/Cd-Y4YOfkh#">操作系统王道幕布笔记—ZaxTyson</a><br><a href="https://www.bilibili.com/video/BV1YE411D7nH?p=1">操作系统王道学习视频</a></p><h1 id="操作系统引论及概述"><a href="#操作系统引论及概述" class="headerlink" title="操作系统引论及概述"></a>操作系统引论及概述</h1><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/04/41a83c1d8dace273dc87b961c251a70f.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/01/24b735899f12b5416d21e4c0ebb4c288.png"></p><h2 id="OS功能和目标"><a href="#OS功能和目标" class="headerlink" title="OS功能和目标"></a>OS功能和目标</h2><p><code>操作系统</code>(Operating System，OS)是计算机系统中最重要的系统软件，它管理整个计算机系统的软件资源和硬件资源，是用户与计算机硬件的桥梁，是其它软件和程序的运行基础。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/01/c2d24416e4d4d5732a88766f3d7817f2.png"><br>（1）<code>作为系统资源的管理者</code></p><ul><li><code>处理机</code>管理<br>计算机系统中最重要的资源是中央处理机（简称CPU），任何计算都必须在CPU上进行。<br>在处理机管理中，最核心的问题是CPU时间的分配问题，这涉及分配的策略和方法。</li><li><code>存储器</code>管理<br>存储管理的主要工作是对内存储器进行合理分配、有效保护和扩充。<br>内存是现代计算机系统的中心，是可以被CPU和I/O设备共同访问的数据仓库。<br>内存通常是CPU直接寻址和访问的、唯一的大容量存储器。</li><li><code>设备</code>管理<br>设备管理是操作系统中最庞杂、琐碎的部分，其原因是：<br>①设备管理涉及很多实际的物理设备，这些设备品种繁多、用法各异。<br>②各种外部设备都能和主机并行工作，而且，有些设备可被多个进程所共享。<br>③主机和外部设备，以及各类外部设备之间的速度极不匹配，极差很大。</li><li><code>文件</code>管理<br>以上三种管理都是针对计算机的硬件资源的管理。<br>文件系统管理则是对软件资源的管理。为了管理庞大的系统软件资源及用户提供的程序和数据，操作系统将它们组织成文件的形式，操作系统对软件的管理实际上是对文件系统的管理。</li><li><code>作业</code>管理<br>作业指用户在一次计算过程中或者事务处理过程中，要求计算机所作工作的集合。<br>作业由程序、数据和作业说明书组成。在批处理系统中，作业是占据内存的基本单位。<br>作业管理是通过管理让这些作业按照自己所想要的方式来进行工作。</li></ul><p>（2）<code>作为用户和计算机硬件之间的接口</code></p><ul><li>命令接口<br>命令接口<code>允许用户直接使用</code>，命令接口又分<code>联机命令接口</code>和<code>脱机命令接口</code>。<br>联机命令接口：用户说一句，系统做一句（<code>交互式命令接口</code>）。<br>脱机命令接口：用户说一堆，系统做一堆（批<code>处理命令接口</code>）。</li><li>程序接口<br>用户程序<code>间接使用</code></li><li>GUI（图像用户界面）</li></ul><h2 id="OS特征"><a href="#OS特征" class="headerlink" title="OS特征"></a>OS特征</h2><p>OS四大特征：<code>并发</code>、<code>共享</code>、<code>虚拟</code>、<code>异步</code>。</p><ul><li><p>并发<br><code>并发</code>: 指两个或多个事件在同一<code>时间间隔内</code>发生。宏观上是同时发生的,但微观上是交替发生的。<br><code>并行</code>: 指两个或多个事件在同一<code>时刻同时</code>发生。<br>并发和共享是操作系统的两个最基本特征。<br>操作系统并发性指计算机系统中同时存在着多个运行着的程序。</p><blockquote><p>例如：8-9点一号执行，9-10点二号执行，10-11点三号执行，为并发情况。而在8点一二号一起执行为并行情况。</p></blockquote></li><li><p>共享<br>资源共享指系统中的资源可供内存中多个并发执行的进程共同调用。<br><code>互斥共享</code><br>｜ 同一个时间段只允许一个进程访问资源(摄像头/麦克风)<br><code>同时共享</code><br>｜ 允许一个时间段多个进程“同时”(宏观上)访问某些资源（微观上是分时共享），比如硬盘读写<br>并发和共享互为存在条件。</p></li><li><p>虚拟<br>虚拟是指把一个物理上的实体变为若干个逻辑上的对应物。物理实体(前者)是实际存在的,而逻辑上对应物(后者)是用户感受到的。</p></li><li><p>异步<br>异步是指,在多道程序环境下,允许多个程序并发执行,但由于资源有限,进程的执行不是一贯到底的,是<code>走走停停</code>（等待资源进程阻塞）,以不可预知的速度向前推。</p></li></ul><h2 id="OS发展与分类"><a href="#OS发展与分类" class="headerlink" title="OS发展与分类"></a>OS发展与分类</h2><ul><li><p>手工操作阶段<br>纸带机（用户独占全机，人机速度矛盾，资源利用率极低）。</p></li><li><p>单道批处理系统<br>引入了脱机输入/输出技术（磁带），通过<code>监督程序</code>（操作系统雏形）控制作业输入输出。<br>外围机负责把输入纸带录入磁带。<br>缓解了人机速度矛盾，提高了资源利用率，但是CPU是串行的，大量CPU时间浪费在I/O等待上。</p></li><li><p>多道批处理系统<br>磁带往内存输入多道程序，并发执行，输入、计算、输出互不干扰<br>操作系统诞生，引入了中断技术，资源利用率大幅上升，但是缺少人机交互功能，用户响应时间长（用户提交作业之后只能等待作业完成）。</p></li><li><p>分时操作系统<br>分时操作系统：计算机以<code>时间片</code>为单位<code>轮流</code>为各个用户/作业服务,各个用户可通过终端与计算机进行交互。<br>主要优点:用户请求可以被即时响应,解决了人机交互问题。允许多个用户同时使用一台计算机,并且用户对计算机的操作相互独立,感受不到别人的存在。<br>主要缺点:不能优先处理一些紧急任务。操作系统对各个用户/作业都是完全公平的,循环地为每个用户/作业服务一个时间片,不区分任务的紧急性。</p></li><li><p>实时操作系统<br><code>硬实时系统</code>：必须在绝对严格的规定时间内完成处理。<br><code>软实时系统</code>：能接受偶尔违法时间规定。<br>主要优点:能够优先响应一些紧急任务,某些紧急任务不需时间片排队。在实时操作系统的控制下,计算机系统接收到外部信号后及时进行处理,并且要在严格的时限内处理完事件。实时操作系统的主要特点是及时性和可靠性。</p></li><li><p>网络操作系统<br>网络操作系统:是伴随着计算机网络的发展而诞生的,能把网络中各个计算机有机地结合起来,实现数据传送等功能,实现网络中各种资源的共享(如文件共享)和各台计算机之间的通信。(如: Windows NT就是一种典型的网络操作系统,网站服务器就可以使用)</p></li><li><p>分布式操作系统<br>分布式操作系统:主要特点是分布性和并行性。系统中的各台计算机地位相同,任何工作都可以分布在这些计算机上,由它们并行、协同完成这个任务。</p></li></ul><h2 id="OS运行机制-体系结构"><a href="#OS运行机制-体系结构" class="headerlink" title="OS运行机制/体系结构"></a>OS运行机制/体系结构</h2><h3 id="运行机制"><a href="#运行机制" class="headerlink" title="运行机制"></a>运行机制</h3><ul><li><p>指令<br>指令就是处理器(CPU)能识别、处理的最基本命令。<br><code>特权指令</code>：如内存清零指令。（不允许用户程序使用）<br><code>非特权指令</code>：如普通的运算指令。</p></li><li><p>处理机状态<br><code>用户态</code>：此时CPU只能执行非特权指令。<br><code>核心态</code>：特权命令、非特权命令都可执行。</p><blockquote><p>处理机状态用程序状态寄存器(PSW)中的某标志位来标识当前处理器处于什么状态。如0为用户态，1为核心态。</p></blockquote></li><li><p>程序<br><code>内核程序</code>：系统的管理者，可以执行特权和非特权指令，运行在核心态。<br><code>应用程序</code>：只能执行非特权指令，运行在用户态。</p></li></ul><h3 id="OS内核"><a href="#OS内核" class="headerlink" title="OS内核"></a>OS内核</h3><p>计算机最底层的软件，是操作系统最核心的部分。实现操作系统<code>内核功能</code>的程序才是<code>内核程序</code>。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/01/222957e356925c52dca1823b5730791a.png"></p><ul><li><code>时钟管理</code><br>实现计时功能。</li><li><code>中断处理</code><br>负责实现中断机制。</li><li><code>原语</code><br>是一种特殊的程序，处于操作系统最底层，是最接近硬件的部分。<br>运行时间短，调用频繁，具有<code>原子性</code>——运行只能一气呵成，不可中断。</li><li><code>系统资源管理</code><br>进程管理、存储管理、设备管理。<blockquote><p>有的操作系统不把这个作为“内核功能”（微内核)，不同操作系统，对内核功能的划分可能不一样。</p></blockquote></li></ul><h3 id="体系结构"><a href="#体系结构" class="headerlink" title="体系结构"></a>体系结构</h3><p>操作系统的体系结构：<code>大内核</code>和<code>微内核</code>。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/01/926936683836e9fe7e5cbf31a498d3c5.png"></p><ul><li><p>大内核<br>将操作系统的<code>主要功能模块</code>都作为系统内核，运行在核心态。<br>高性能，但是内核代码庞大难以维护。</p></li><li><p>微内核<br>只把<code>基本概念</code>保留在内核。<br>功能少，功能清晰方便维护，但是需要频繁的在核心态和用户态之间切换，性能低。</p></li></ul><blockquote><p>OS体系结构可以类比于企业的管理问题：<code>内核</code>就是企业的<code>管理层</code>，负责一些重要的工作。只有管理层才能执行<code>特权指令</code>，普通员工只能执行<code>非特权指令</code>。<code>用户态</code>、<code>核心态</code>之间的<code>切换</code>相当于普通员工和管理层之间的工作交流。<br><code>大内核</code>：企业初创时体量不大，管理层的人会负责大部分的事情。<br><code>微内核</code>：随着企业体力越来越大，管理层只负责最核心的一些工作。</p></blockquote><h2 id="中断和异常"><a href="#中断和异常" class="headerlink" title="中断和异常"></a>中断和异常</h2><p>中断机制的诞生：<br>早期计算机，各程序只能串行执行，系统资源利用率低。<br>为了解决上述问题，人们发明操作系统，引入中断机制，实现了多道程序并发执行。<br><code>本质：发生中断</code>就意味着<code>需要操作系统介入,开展管理工作</code>。</p><h3 id="中断的概念和作用"><a href="#中断的概念和作用" class="headerlink" title="中断的概念和作用"></a>中断的概念和作用</h3><p>中断信号可以使CPU从<code>用户态</code>切换为<code>核心态</code>,<code>使操作系统获得计算机的控制权</code>。有了中断才能实现多道程序并发执行。</p><blockquote><p>由于操作系统的管理工作(比如进程切换、分配I/O设备等)需要使用<code>特权指令</code>,因此CPU要从用户态转为核心态。</p></blockquote><p><code>中断</code>是CPU从用户态-&gt;核心态切换的<code>唯一途径</code>。<br>核心态-&gt;用户态切换只需要执行一个<code>特权指令</code>，将<code>PSW</code>设置为<code>0</code>。</p><h3 id="中断的分类"><a href="#中断的分类" class="headerlink" title="中断的分类"></a>中断的分类</h3><ul><li><p><code>内中断</code>(异常/例外/陷入)<br>信号来源CPU<code>内部</code>，<code>与当前执行的指令有关</code><br><code>自愿中断(指令中断) </code>：</p><pre><code>      系统调用时使用的访管指令(陷入指令/trap指令)</code></pre><p><code>强迫中断</code>：</p><pre><code>      1.硬件故障（缺页错误）2.软件中断（除0错误）</code></pre><p>陷阱、陷入(trap)</p><pre><code>      有意而为之的异常，系统调用</code></pre><p>故障(fault)</p><pre><code>      错误条件引起的，可能被故障处理程序修复的，如缺页</code></pre><p>终止(abort)</p><pre><code>      致命错误，无法修复，终止处理程序不再将控制返回给应用程序，如除0</code></pre></li><li><p><code>外中断</code>(狭义中断)<br>信号来源CPU<code>外部</code>，<code>与当前执行的指令无关</code><br><code>外设请求</code>：</p><pre><code>       外设(比如打印机)I/O操作完成发出中断信号       键盘输入一个字符​</code></pre><p><code>人工干预</code>：</p><pre><code>        用户强制终止一个进程</code></pre></li></ul><h2 id="系统调用"><a href="#系统调用" class="headerlink" title="系统调用"></a>系统调用</h2><p>操作系统作为用户和计算机硬件之间的接口，需要向上提供一些简单易用的服务。主要包括命令接口和程序接口。其中，程序接口由一组<code>系统调用</code>组成。<br>系统调用是操作系统提供给应用程序(程序员/编程人员)使用的接口,可以理解为一种可供应用程序调用的特殊函数,应用程序可以发出<code>系统调用请求</code>来获得操作系统的服务,操作系统会对各个请求进行<code>协调管理</code>。</p><blockquote><p>例如A和B共用打印机，A按下打印后，打印机工作，B接着又按下打印，打印机不会把A和B的打印内容混合在一起。</p></blockquote><p>应用程序通过<code>系统调用请求</code>操作系统的服务。<br>​系统中的各种共享资源都由操作系统统一掌管,因此在用户程序中,凡是与资源有关的操作(如存储分配、I/O操作、文件管理等) ,都必须通过系统调用的方式向操作系统提出服务请求,由操作系统代为完成。这样可以保证系统的稳定性和安全性,防止用户进行非法操作。<br>系统调用相关的处理需要在<code>核心态</code>下完成。</p><h3 id="系统调用与库函数的区别"><a href="#系统调用与库函数的区别" class="headerlink" title="系统调用与库函数的区别"></a>系统调用与库函数的区别</h3><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/01/e7ab8bab64bae5282f57c5f7297e7ec8.png"></p><ul><li>系统调用是操作系统向上提供的接口</li><li>有的库函数是对于系统调用的进一步封装</li><li>大多数高级语言提供的库函数间接进行系统调用</li></ul><h3 id="系统调用过程"><a href="#系统调用过程" class="headerlink" title="系统调用过程"></a>系统调用过程</h3><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/01/7f5ff4cb6568a412aaa0f91b3528db13.png"></p><h1 id="进程管理"><a href="#进程管理" class="headerlink" title="进程管理"></a>进程管理</h1><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/01/02066158f4beb9f2c557383fcf86ec8a.png"></p><h2 id="进程的定义"><a href="#进程的定义" class="headerlink" title="进程的定义"></a>进程的定义</h2><ul><li>进程的定义：<strong>程序段、数据段、PCB</strong>三部分组成了<strong>进程实体(进程映像)</strong> </li><li>一般情况下,我们把进程实体就简称为进程,例如,所谓创建进程,实质上是创建进程实体中的PCB;而撤销进程,实质上是撤销进程实体中的PCB</li></ul><blockquote><p>注意: PCB是进程存在的唯一标志!</p></blockquote><p>从不同的角度,进程可以有不同的定义,比较传统典型的定义有:</p><ol><li>进程是程序的一次<strong>执行过程</strong>。</li><li>进程是一个程序及其数据在处理机上顺序执行时所<strong>发生的活动</strong>。</li><li>进程是具有独立功能的程序在数据集合上<strong>运行的过程</strong>，它是系统进行资源分配和调度的一个独立单位（强调“动态性”）</li><li>引入进程实体的概念后，可把进程定义为:进程是进程实体的运行过程，是系统进行<strong>资源分配</strong>和<strong>调度</strong>的一个独立单位。</li></ol><blockquote><p>注：严格来说，进程实体和进程并不一样,进程实体是<code>静态的</code>，进程则是<code>动态的</code>。不过,除非题目专门考察二者区别，否则可以认为进程实体就是进程。因此我们也可以说“进程由程序段、数据段、PCB三部分组成</p></blockquote><h2 id="进程的组成"><a href="#进程的组成" class="headerlink" title="进程的组成"></a>进程的组成</h2><ul><li><p>程序段<br>存放程序代码本身</p></li><li><p>数据段<br>存放程序运行过程中处理的各种数据（如全局变量、局部变量、宏定义的常量等）</p></li><li><p>PCB</p></li></ul><p><strong>进程管理所需的数据</strong>都放在这里，PCB是进程存在的唯一标志，操作系统通过PCB来管理进程<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/27/ce7872a1bfbd5dafc1453de9322ff949.png"></p><h2 id="进程的组织"><a href="#进程的组织" class="headerlink" title="进程的组织"></a>进程的组织</h2><p>个系统里面通常由数千个PCB，为了更有效地管理，需要用适当的方式把他们组织起来</p><ul><li><p>链接方式<br>按照进程状态将PCB分为多个队列<br>操作系统持有指向个个队列的指针<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/27/6c73d88223c3f0bbb779a74d23ea0828.png"></p></li><li><p>索引方式<br>根据进程状态不同，建立几张索引表<br>操作系统持有指向各索引表的指针<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/27/7884d54769251ab2cf4a7907c1903ab7.png"></p></li></ul><h2 id="进程的特征"><a href="#进程的特征" class="headerlink" title="进程的特征"></a>进程的特征</h2><p>进程和程序是两个截然不同的概念，相比于程序，进程拥有以下特征：</p><ul><li><p><strong>动态性</strong><br>最基本特征。进程是程序的一次执行过程，是动态地产生、变化和消亡的</p></li><li><p><strong>并发性</strong><br>内存中有多个进程实体，各进程可以并行执行</p></li><li><p><strong>独立性</strong><br>进程是能独立运行、获得资源、接受调度的基本单位</p></li><li><p><strong>异步性</strong><br>各进程按各自独立的、不可预测的速度向前推进，异步性会导致并发程序执行结果的不确定性，操作系统要提供“进程同步机制”来解决异步问题</p></li><li><p><strong>结构性</strong><br>每一个进程都会配置PCB，结构上看，进程由程序段、数据段、PCB组成</p></li></ul><h2 id="进程的状态"><a href="#进程的状态" class="headerlink" title="进程的状态"></a>进程的状态</h2><p>基本状态：运行态、就绪态、阻塞态/等待态</p><ul><li><p><strong>运行态(Running)</strong><br>占有CPU，并在CPU上运行<br>单核处理器一个时刻只有一个进程处于运行态，双核两个</p></li><li><p><strong>就绪态(Ready)</strong><br>进程已经具备一切运行条件，除了没有空闲CPU，导致暂时不能运行<br>万事俱备，只差CPU</p></li><li><p><strong>阻塞态(Waiting/Blocked)</strong><br>等待某一事件而暂时不能运行，比如等待操作系统分配打印机、等待磁盘读写<br>为了提高CPU利用效率，进程需要先准备好其它所需资源，才能得到CPU的服务</p></li><li><p><strong>创建状态(New)</strong><br>操作系统为该进程分配所需内存等系统资源，为其创建、初始化PCB(分配PID等等)</p></li><li><p><strong>终止状态(Terminated)</strong><br>进程运行结束，或者出现Bug导致无法继续执行，操作系统需要撤销进程<br>完成资源回收，撤销PCB</p></li></ul><h2 id="进程间转换"><a href="#进程间转换" class="headerlink" title="进程间转换"></a>进程间转换</h2><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/27/9eb8a430b7220f00df5ca847dca45b51.png"></p><h2 id="进程控制"><a href="#进程控制" class="headerlink" title="进程控制"></a>进程控制</h2><ul><li>社么是进程控制？<br>进程控制的主要功能是对系统中的所有进程实施有效的管理,它具有创建新进程、撤销已有进程、实现进程状态转换等功能。简而言之就是<strong>实现进程状态切换</strong>。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/27/29d4cd4920843ffc47a4b3733fec4c4b.png"><br>某一个进程，把它的PCB从一个队列放到另一个队列，但是并没有把PCB当中的状态标志改成相应的新的状态，为防止这个问题，引入了原语操作。</p><ul><li><p>如何实现进程控制？<br>当关中断指令接收到外部中断信号时，会被忽略掉，暂时不会处理，这就保证了原语执行不被中断。直到执行到开中断指令，接收到外部中断信号才会开始处理。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/27/157f417dd8079f5c82c6d3a5c22eeea6.png"></p></li><li><p>进程控制相关原语<br>进程控制会导致进程状态的转换。无论哪个原语,要做的无非三类事情:</p><ol><li>更新PCB中的信息(如修改进程状态标志、将运行环境保存到PCB、从PCB恢复运行环境)<br>a.  所有的进程控制原语一定都会修改进程状态标志<br>b.  剥夺当前运行进程的CPU使用权必然需要保存其运行环境<br>c. 某进程开始运行前必然要恢复期运行环境</li><li>将PCB插入合适的队列</li><li>分配/回收资源</li></ol></li></ul><h2 id="进程通信"><a href="#进程通信" class="headerlink" title="进程通信"></a>进程通信</h2><ul><li>进程通信就是进程之间的信息交换。</li><li>进程是分配系统资源的单位（包括内存地址空间），因此<strong>各进程</strong>拥有各自的<strong>内存地址空间</strong>，它们<strong>相互独立</strong>。</li><li>为了保证安全，一个进程不能直接访问另一个进程的地址空间</li></ul><p>但是进程之间的信息交换又是必须实现的，为了保证进程间的安全通信，操作系统提供了一些方法实现。</p><ul><li><p><strong>共享存储</strong><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/27/08d60258f07e088ecebb337c84671d64.png"></p></li><li><p><strong>管道通信</strong><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/27/3dc4f522b8dbc5abb2d6e4862e7bd5c2.png"></p></li><li><p><strong>消息传递</strong><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/27/0fb02f609238179957d8dcfeb780e78c.png"></p></li></ul><h1 id="线程"><a href="#线程" class="headerlink" title="线程"></a>线程</h1><h2 id="线程的引入"><a href="#线程的引入" class="headerlink" title="线程的引入"></a>线程的引入</h2><p>在没引入进程之前，系统中各个程序只能串行执行<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/27/297ecbbc8b3077873cfda1029ba5344a.png"></p><ul><li><p>资源分配、调度<br>传统进程机制中，进程是资源分配、调度的基本单位<br>引入线程后，进程是<code>资源分配</code>的基本单位，线程是<code>调度</code>的基本单位</p></li><li><p>并发性<br>传统进程机制，只能进程间并发<br>现在<code>各线程之间</code>也能并发</p></li><li><p>系统开销<br>传统进程并发，需要切换进程的运行环境，系统开销大<br>同一个进程内的线程间并发，不需要切换环境，开销小</p></li></ul><blockquote><p>切换进程运行环境：类比图书馆看书，陌生人要用桌子，你需要把自己的书收走，他把自己的书放桌子上。<br>同一进程内的线程切换：你的舍友要用这张桌子，可以不把桌子上的书收走</p></blockquote><h2 id="线程的属性"><a href="#线程的属性" class="headerlink" title="线程的属性"></a>线程的属性</h2><ul><li>线程是处理机调度的单位</li><li>多CPU计算机中，各个线程可占用不同的CPU</li><li>每个线程都有一个线程ID、线程控制块（TCP）</li><li>线程也有就绪、阻塞、运行三种基本状态</li><li>线程几乎不拥有系统资源，资源分配给进程</li><li>同一进程的不同线程间共享进程的资源</li><li>由于共享内存地址空间，同一进程中的线程间通信甚至无需系统干预</li><li>同一进程中的线程切换，不会引起进程切换</li><li>不同进程中的线程切换，会引起进程切换</li><li>切换进程内的线程，系统开销很小</li><li>切换进程，系统开销较大</li></ul><h2 id="线程的实现方式"><a href="#线程的实现方式" class="headerlink" title="线程的实现方式"></a>线程的实现方式</h2><ul><li><p><strong>用户级线程</strong><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/27/b8c3889fbf0a66a4dcd10cf684baf310.png"></p></li><li><p><strong>内核级线程</strong><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/27/b614794c5a841e7d52093be2763cd3cc.png"></p></li><li><p><strong>组合方式</strong><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/27/c390886b3e93a3c770ccee727878775e.png"></p></li></ul><h2 id="多线程模型"><a href="#多线程模型" class="headerlink" title="多线程模型"></a>多线程模型</h2><ul><li><p><strong>多对一模型</strong><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/27/37604f2c714399daf4da29dba2868864.png"></p></li><li><p><strong>一对一模型</strong><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/27/b3e90c5a7ae02d68a824870fdaed90e4.png"></p></li><li><p><strong>多对多模型</strong><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/27/fbf8215e4d8ed0bdedea85a035f45908.png"></p></li></ul><h1 id="处理机调度"><a href="#处理机调度" class="headerlink" title="处理机调度"></a>处理机调度</h1><ul><li><p>基本概念<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/28/9158e9abe09a10247f33e3f357527e6a.png"></p></li><li><p>调度的三个层次</p><ol><li><strong>高级调度（作业调度）</strong><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/28/40eff0049b00c052639b18441bc4bc18.png"></li><li><strong>中级调度（内存调度）</strong><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/28/89750f6f38ab70cda27a00a136c7b32d.png"></li><li><strong>低级调度（进程调度）</strong><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/28/3459e6ca2806ec06e91c00b4820d5a2a.png"></li><li><strong>区别</strong><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/28/3b55461b8822dd42ed0fdbaf4cd9d8e7.png"></li></ol></li><li><p>补充：<strong>七状态模型</strong><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/28/a66c794973c8f59af02ed109a637ba42.png"></p></li></ul><h2 id="调度的时机和方式"><a href="#调度的时机和方式" class="headerlink" title="调度的时机和方式"></a>调度的时机和方式</h2><ul><li><p>什么适合需要进程调度？</p><ol><li><strong>进程自动放弃处理机</strong><br> 进程正常终止<br> 运行过程中发生异常终止<br> 进程主动请求阻塞（等待I/O）</li><li><strong>进程被动放弃处理机</strong><br> 时间片用完<br> 更紧急的事情需要处理（I/O中断）<br> 更高优先级的进程进入就绪队列</li></ol></li><li><p>不能进行进程调度与切换的情况</p><ol><li><strong>在处理中断的过程中</strong>（中断处理过程很复杂，很难做到同时完成进程切换）</li><li><strong>在原子操作的过程中（原语）</strong>。原子操作不可中断，要一气呵成</li><li><strong>进程在操作系统内核程序临界区中</strong>。</li></ol></li><li><p><strong>临界资源</strong>是指：进程需要互斥访问的资源，<strong>临界区</strong>：访问临界资源的代码</p></li><li><p><strong>内核程序临界区</strong>：访问内核数据结构的代码，比如进程的就绪队列（就绪进程PCB组成）。</p></li><li><p>进程访问就绪队列时会加锁，还没退出临界区（临界资源没解锁）的期间，是无法进行调度和切换的。<strong>内核临界区</strong>访问临界资源应该尽快完成，否则会影响内核其它管理功能。</p></li><li><p><strong>普通临界区</strong>访问临界资源不会直接影响操作系统内核管理工作，这个时候可以调度和切换。比如打印机完成打印之前，进程不允许调度就会导致CPU一直空闲。</p></li></ul><blockquote><p>进程在操作系统<strong>内核程序临界区</strong>中不能进行调度与切换  （√）<br>进程处于<strong>临界区</strong>时不能进行处理机调度    （×）</p></blockquote><ul><li><p>进程调度的方式</p><ol><li><strong>非剥夺(抢占)式</strong><br>只允许进程主动放弃处理机。在运行过程中即便有更紧迫的任务到达，当前进程依然会继续使用处理机，直到该进程终止或主动要求进入阻塞态。实现简单，开销小，但是无法实时处理紧急任务，适合早期批处理系统。</li><li><strong>剥夺(抢占)式</strong><br>如果有更重要更紧急的进程需要使用处理机，直接剥夺当前进程资源。适合分时操作系统、实时操作系统。</li></ol></li><li><p>进程的切换与过程</p><ol><li>“狭义的进程调度”与“进程切换”的区别<br>狭义调度指：从就绪队列中选择一个要运行的进程，这个进程可能是刚刚暂停的，也可能是另一个进程，后一种情况就需要进程切换<br>进程切换：一个进程让出处理机，由另一个进程占用处理机的过程<br>广义进程调度：包含了选择一个进程和进程切换两个步骤</li><li>进程切换的过程<br>保存原进程的数据<br>恢复新进程的数据（数据包括：程序计数器，程序状态字，各种数据寄存器等现场信息）</li></ol></li></ul><blockquote><p>进程切换是有代价的，过于频繁的调度、切换会导致效率低下，使系统大部分时间都花在了进程切换上，而真正用于执行进程的时间减少</p></blockquote><h2 id="调度算法的评价指标"><a href="#调度算法的评价指标" class="headerlink" title="调度算法的评价指标"></a>调度算法的评价指标</h2><ul><li><p><strong>CPU利用率</strong>：指CPU“忙碌”的时间占总时间的比例<br>  CPU忙碌时间(+IO时间)/总时间</p></li><li><p><strong>系统吞吐量</strong>：单位时间内完成作业的数量<br>  总共完成的作业数/总时间</p></li><li><p><strong>周转时间</strong>：是指从作业被提交给系统开始，到作业完成为止的这段时间间隔，作业被提交给系统开始到作业完成的时间，包括高级调度、低级调度的时间、进程在CPU执行的时间、等待I/O的时间</p><ol><li><strong>周转时间</strong>=作业完成时间-作业提交时间</li><li><strong>平均周转时间</strong>=各作业周转时间之和/作业数</li><li><strong>带权周转时间</strong>= 作业周转时间 / 作业实际运行时间 = （作业完成时间 - 作业提交时间）/ 作业实际运行时间<br>周转时间相同的情况下，作业运行时间长的，用户体验更好（浪费的时间少，带权周转时间一定大于 1，越小越好</li><li><strong>平均带权周转时间</strong>=各作业带权周总时间之和/作业数</li></ol></li><li><p><strong>等待时间</strong>：指进程/作业处于等待处理机状态时间之和，等待时间越长，用户满意度越低</p><ol><li>等待时间=进程/作业处于等待处理机状态时间之和</li><li>对于进程：等待时间是进程建立之后，等待被服务的时间之和（等待I/O的时间不计入）</li><li>对于作业：作业在外存后备队列等待被调度的时间 + 建立进程之后的等待时间</li></ol></li><li><p><strong>响应时间</strong>：用户提交请求到首次产生响应所用的时间</p></li></ul><h2 id="调度算法-早期系统"><a href="#调度算法-早期系统" class="headerlink" title="调度算法(早期系统)"></a>调度算法(早期系统)</h2><h3 id="先来先服务FCFS"><a href="#先来先服务FCFS" class="headerlink" title="先来先服务FCFS"></a>先来先服务FCFS</h3><ul><li><strong>先来先服务</strong>（FCFS：First Come First Service）<ol><li>公平角度考虑，作业/进程谁先到后备/就绪队列的谁先得到服务，非抢占式算法</li><li>优点：公平，算法简单</li><li>缺点：对<strong>长作业（进程）有利，对短作业不利</strong>（带权周转时间很大）比如下面例题中P3的带权周转时间为8</li><li>不会导致饥饿</li></ol></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/28/dceb6edebf04cf607997876d58907fd5.png"></p><h3 id="作业优先SJF"><a href="#作业优先SJF" class="headerlink" title="作业优先SJF"></a>作业优先SJF</h3><ul><li><strong>短作业优先</strong>（SJF：Shortest Job First）<ol><li>算法思想：追求最少的平均等待时间，最少平均周转时间，最少平均带权周转时间</li><li>算法规则：<strong>需要服务时间最短的作业。进程先得到服务</strong></li><li>可以调度作业和进程（短进程优先算法SPF: Shortest Process First）</li><li>SJF和SPF是<strong>非抢占式</strong>算法，抢占式版本：<strong>最短剩余时间优先算法</strong>(SRTN,Shortest Remaining Time Next)</li><li>优点：“最短的”平均等待时间、平均周转时间，最短剩余时间优先算法更短</li><li>缺点：不公平，短作业有利，长作业不利。    </li><li>可能导致饥饿，如果有源源不断的短作业到来，长作业可能一直得不到服务（饿死）</li></ol></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/28/cd4050ae0953e51e7519dd5603430bed.png"></p><h3 id="最短剩余时间优先SRTN"><a href="#最短剩余时间优先SRTN" class="headerlink" title="最短剩余时间优先SRTN"></a>最短剩余时间优先SRTN</h3><ul><li><strong>最短剩余时间优先算法</strong>(SRTN,Shortest Remaining Time Next)<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/28/8e127ff4f943a6e48afc4fe1687d2083.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/28/2302f774fa71363932727c7e4b575f55.png"></li></ul><h3 id="高响应比优先HRRN"><a href="#高响应比优先HRRN" class="headerlink" title="高响应比优先HRRN"></a>高响应比优先HRRN</h3><ul><li><strong>高响应比优先</strong>（HRRN：Highest Response Ratio Next）<ol><li>算法思想：综合考虑作业/进程的等待时间和服务时间</li><li>算法规则：每次调度时选择<strong>响应比最高</strong>的作业/进程。<strong>响应比=(等待时间+要求服务时间)/要求服务时间</strong>（响应比&gt;=1）</li><li>非抢占式，除非当前作业/进程主动放弃处理机，才需要调度</li><li>优点：综合考虑了<strong>等待时间和运行时间</strong>，等待时间相同时，要求服务时间短的优先(SJF的优点)，要求服务时间相同时，等待时间长的优先(FCFS的优点)</li><li>对于长作业来说，随着等待时间越来越久，其响应比也会越来越大，从而避免了长作业饥饿的问题</li></ol></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/28/b7428d46a12c3b8cbeb07fb9a2dc2e25.png"></p><h3 id="对比"><a href="#对比" class="headerlink" title="对比"></a>对比</h3><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/28/6f9fb03aed74db90e1eb9a5f9de21bc2.png"></p><h2 id="调度算法（交互式系统）"><a href="#调度算法（交互式系统）" class="headerlink" title="调度算法（交互式系统）"></a>调度算法（交互式系统）</h2><h3 id="时间片轮转RR"><a href="#时间片轮转RR" class="headerlink" title="时间片轮转RR"></a>时间片轮转RR</h3><ul><li><strong>时间片轮转</strong>（RR：Round-Robin)<ol><li>常用于分时操作系统，注重响应时间，而非周转时间</li><li>算法思想：公平、轮流地为各个进程服务，让每个进程在一定时间间隔内都可以得到响应</li><li>算法规则：按照各进程到达就绪队列的顺序,轮流让各个进程执行一个时间片(如100ms) </li><li>若进程未在一个时间片内执行完,则剥夺处理机,将进程重新放到就绪队列队尾重新排队。</li><li>用于进度调度（作业在放入内存并建立进程后才能被分配处理机时间片）</li><li>抢占式算法，由时钟中断通知CPU时间片已到，不会饥饿</li><li>缺点：高频率进程切换，有一定的开销，不区分任务的紧急程度</li><li>优点：公平；响应快，适用于分时操作系统</li></ol></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/28/5032c3cd79a2b114c0fd32e44967e576.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/28/d54338fb3b4bc407ef4d7351130b235f.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/28/9ee3f45cddc0a8de9b8fc91e5134d7b2.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/28/0c7efc1ec90a7dc093c9643b1309ae10.png"></p><h3 id="优先级调度算法"><a href="#优先级调度算法" class="headerlink" title="优先级调度算法"></a>优先级调度算法</h3><ul><li><strong>优先级调度算法</strong><ol><li>调度时选择<strong>优先级高</strong>的进程，可以作业调度和进程调度以及I/O调度</li><li>适用于实时操作系统，可能发生饥饿</li></ol></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/28/e5c391c62f67a9b137493df6f145b5fa.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/28/037e8caec9acb4e01465e29df0365a24.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/28/0d7a887e9e40726b2837f8f634c457d8.png"></p><h3 id="多级反馈队列调度算法"><a href="#多级反馈队列调度算法" class="headerlink" title="多级反馈队列调度算法"></a>多级反馈队列调度算法</h3><ul><li>对其他算法权衡折中，抢占式，可能导致饥饿</li><li>算法规则<ol><li>设置多级就绪队列，各级队列优先级从高到低，时间片从小到大</li><li>新进程到达时先进入第1级队列，按FCFS原则排队等待被分配时间片，若用完时间片进程还未结束，则进程进入下一级队列队尾。如果此时已经是在最下级的队列，则重新放回该队列队尾</li><li>只有第k级队列为空时，才会为k+1级队头的进程分配时间片</li><li><a href="https://www.bilibili.com/video/BV1YE411D7nH?p=17">动画演示</a></li></ol></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/bb186770ed9559f785aa6812cdabd2cc.png"></p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/dd10ab244dd7d5cc396a45cd05cb0ddc.png"></p><h1 id="进程同步与互斥"><a href="#进程同步与互斥" class="headerlink" title="进程同步与互斥"></a>进程同步与互斥</h1><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/f86ad32bfaea48db1e57a2a8becbd20d.png"></p><ul><li><p><strong>进程同步</strong></p><ol><li>进程具有异步性，各并发执行的进程以各自独立、不可预测的速度向前推进。</li><li>有时需要保证不同的进程按照特地的次序推进，比如管道读、写数据两个操作必需按照“写数据-&gt;读数据”的顺序执行，所以引入进程同步的问题</li><li>进程同步又叫进程的“直接制约关系”，它是指为了完成某种任务而建立两个或多个进程</li><li>这些进程因为需要在某些位置上协调工作次序而产生制约关系。</li></ol></li><li><p><strong>进程互斥</strong></p><ol><li><p>临界资源：一个时间段内只允许一个进程使用的资源（比如一些物理设备，变量数据，内存缓冲区）</p></li><li><p>对临界资源的访问必需互斥地进行，互斥又叫“间接制约关系”</p></li><li><p>进程互斥指一个进程访问某些临界资源时，另一个想要访问该临界资源的进程必需等待，直到资源被释放。</p></li><li><p>对临界资源的互斥访问，可以在逻辑上分为如下四个部分</p><pre><code> do&#123;     entry section;  //进入区 &#123;上锁&#125;     critical section;  //临界区  &#123; 访问临界资源的那段代码&#125;     exit section;     //退出区   &#123;解锁&#125;     remainder section; //剩余区 &#123;做其他处理&#125; &#125;</code></pre></li></ol></li><li><p>为了实现对临界资源的互斥访问，需要遵循以下原则</p><ol><li><strong>空间让进</strong><br>临界区空闲时，可以允许一个请求进入临界区的进程立即进入临界区</li><li><strong>忙则等待</strong><br>当已有进程进入临界区时，其他试图进入临界区的进程必须等待</li><li><strong>有限等待</strong><br>对请求访问的进程，应保证能在有限时间内进入临界区(保证不会饥饿)</li><li><strong>让权等待</strong><br>当进程不能进入临界区时，应立即释放处理机，防止进程忙等待</li></ol></li></ul><h2 id="进程互斥软件实现"><a href="#进程互斥软件实现" class="headerlink" title="进程互斥软件实现"></a>进程互斥软件实现</h2><ul><li><strong>单标志法</strong><br>算法思想：两个进程在<strong>访问完临界区后</strong>会把使用临界区的权限转交给另一个进程。也就是说<strong>每个进程进入临界区的权限只能被另一个进程赋予</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/731b6f044ab528989f2fa1062396c447.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/237f9e041fdfd0123289a1d09713d5f5.png"></p><ul><li><strong>双标志先检查法</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/51e07e90ddadfa31dc0ff035d3c891cb.png"></p><ul><li><strong>双标志后检查法</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/275bd64a2e8d4613edd4a404aa3c59fc.png"></p><ul><li><strong>Peterson算法</strong><br>Perterson算法用软件方法解决了进程互斥问题，<strong>遵循了空闲让进、忙则等待、有限等待三个原则</strong>，但是依然<strong>未遵循让权等待</strong>的原则</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/6f567cdad0d1515a8d8a9d30abc7f3a8.png"></p><h2 id="进程互斥硬件实现"><a href="#进程互斥硬件实现" class="headerlink" title="进程互斥硬件实现"></a>进程互斥硬件实现</h2><ul><li><strong>中断屏蔽方法</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/09f753f261223ebfb6d88b1e6a373acc.png"></p><ul><li><strong>TestAndSet指令</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/2933780d4e37df6a0c7fb0c40ba8c764.png"></p><ul><li><strong>Swap指令</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/a5fe75ea3d34489db4e19d09fc58d1f8.png"></p><h2 id="信号量机制"><a href="#信号量机制" class="headerlink" title="信号量机制"></a>信号量机制</h2><p>针对以上两种实现方法无法实现的问题，1965年，荷兰学者<strong>Dijkstra</strong>提出了一种卓有成效的实现进程互斥、同步的方法——<strong>信号量机制</strong></p><ul><li>用户进程可以通过使用操作系统提供的<strong>一对原语</strong>来对<strong>信号量</strong>进行操作,从而很方便的实现了进程互斥、进程同步。</li><li>信号量其实就是一个变量(可以是 个整数,也可以是更复杂的记录型变量),可以用一个信号量来<strong>表示系统中某种资源的数量</strong>,比如:系统中只有一台打印机,就可以设置一个初值为1的信号量</li><li><strong>原语</strong>是一种特殊的程序段,其<strong>执行只能一气呵成,不可被中断</strong>。原语是由<strong>关中断/开中断指令</strong>实现的。</li><li>软件解决方案的主要问题是由“进入区的各种操作无法一气呵成” ,因此如果能把进入区、退出区的操作都用“原语”实现,使这些操作能“一气呵成”就能避免问题。</li><li><strong>一对原语</strong>：<code>wait(S)</code>原语和<code>signal(S)</code>原语,可以理解为函数,函数名分别为wait和signal,括号里的<code>信号量S</code>就是参数。</li><li>wait, signal原语常<code>简称为P,V操作</code>(来自荷兰语proberen和verhogen) 。因此,做题的时候常把wait(S).signal(S)两个操作分别写为<code>P(S)</code>、<code>V(S)</code></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/f28cd6bd7144dacbc922b8a94f7010e1.png"></p><ul><li><strong>整型信号量</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/550c20f518820ecebbf51f460d359efe.png"></p><ul><li><strong>记录型信号量</strong><br><a href="https://www.bilibili.com/video/BV1YE411D7nH?p=21">动画演示</a></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/bd4a1a080acd5ddc975d40729772c320.png"></p><ul><li><strong>信号量机制实现进程互斥</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/f1d372d4dc89e34140a6f575b0835a82.png"></p><ul><li><strong>信号量机制实现进程同步</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/9725eea0587c84eecbf0439147dab141.png"></p><ul><li><strong>信号量机制实现前驱关系</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/7e90239a4e0b457ceb54070e5c1667d1.png"></p><ul><li><strong>总结</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/787e8c3e0180caba244bdbfcbfd19b9e.png"></p><h2 id="生产者消费者问题"><a href="#生产者消费者问题" class="headerlink" title="生产者消费者问题"></a>生产者消费者问题</h2><ul><li><strong>问题分析</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/11365e55cebc6b74328eb9f4e2b7633c.png"></p><ul><li><strong>如何实现</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/5938225a1587db4475d9a3ac114b64b3.png"></p><p><strong>能否改变相邻P、V操作的顺序？</strong><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/922cca5307bc0561a31645071261302d.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/d533b343f32b290106ec998a784adc7d.png"></p><h2 id="多生产者消费者问题"><a href="#多生产者消费者问题" class="headerlink" title="多生产者消费者问题"></a>多生产者消费者问题</h2><ul><li><strong>问题分析</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/c11ccc721e66cd7735a5dbebad46145c.png"></p><ul><li><strong>如何实现</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/e69f38723527235f89f85c6134974161.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/2d71cc4b72391d7dc071d3cc1d397ec9.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/229c421bee513c9d5ba5a00a83ef767f.png"></p><h2 id="吸烟者问题"><a href="#吸烟者问题" class="headerlink" title="吸烟者问题"></a>吸烟者问题</h2><ul><li><strong>问题分析</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/111a2f89ec29d6f0627531314054fddf.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/2769a0617e764e289a3a302b1eadf690.png"></p><ul><li><strong>如何实现</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/47fd14ae737b5dbd33fbc82bb9be63f4.png"></p><h2 id="读写者问题"><a href="#读写者问题" class="headerlink" title="读写者问题"></a>读写者问题</h2><ul><li><strong>问题分析</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/a7723d8eda3906f698501c25a2e2992a.png"></p><ul><li><strong>如何实现</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/79fa92ea5478be4a56028b3ab0097124.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/7770a31fe3df6639fa87b04344ddd074.png"></p><h2 id="哲学家就餐问题"><a href="#哲学家就餐问题" class="headerlink" title="哲学家就餐问题"></a>哲学家就餐问题</h2><ul><li><strong>问题分析</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/2c373a09712c045b2d8c9cef8e5ce06b.png"></p><ul><li><strong>如何解决</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/741802daff0d4ff4b9ea60c5a7ba550d.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/9003fdffc57851ace8a5a64ac4bf5cc8.png"></p><h2 id="管程"><a href="#管程" class="headerlink" title="管程"></a>管程</h2><ul><li><p>为什么引入管程<br>信号量机制编写程序困难，PV顺序错误可能导致死锁</p></li><li><p><strong>管程的定义</strong><br>  管程是一种高级的同步机制，是一种特殊的软件模块，包括：</p><ol><li>局部于管程的共享数据结构说明</li><li>对数据结构进行操作的一组过程（函数）</li><li>对共享数据初始化的语句</li><li>管程有一个名字（就是OOP里面的封装思想）</li></ol></li><li><p><strong>管程的基本特征</strong></p><ol><li>管程中的共享数据结构只能被管程内部的过程（函数）访问</li><li>一个进程只能通过调用管程内的过程（函数）才能访问管程内的数据</li><li>每次仅允许一个进程在管程内执行某个内部过程（这个特性是编译器实现的）</li></ol></li><li><p><strong>用管程解决生产者消费者问题</strong></p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/4b9be5f3242e839af4169b37c902d306.png"></p><ul><li><strong>Java</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/cc2559b64af379f7a31b797ea898dfd7.png"></p><h1 id="死锁"><a href="#死锁" class="headerlink" title="死锁"></a>死锁</h1><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/dbc130be6a2f1a4bfc16d762c4695f46.png"></p><ul><li><p>什么是死锁<br>并发环境下，各进程因为竞争资源造成的：互相等待对方手里的资源，导致各进程都阻塞，无法向前推进的现象</p></li><li><p>死锁、饥饿、死循环</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/da6e2ff9f6d44e4670622ea6c2d9e0e8.png"></p><ul><li><p>死锁产生的条件<br>  对不可剥夺资源分配不合理可能导致死锁</p><ol><li><strong>互斥条件</strong><br>争抢互斥资源</li><li><strong>不剥夺条件</strong><br>进程获得的资源未使用完成，其它进程不能强行夺走，只能等待主动释放</li><li><strong>请求和保持条件</strong><br>进程已经保持了至少一个资源，但是又提出新的资源请求，同时该资源被其它进程占有，此时请求进程被阻塞，但是对自己拥有资源又保持不放</li><li><strong>循环等待条件</strong><br>死锁时存在循环等待链，但是存在循环等待链不一定出现死锁（同类资源大于1，可能链条外的某个进程释放了资源）</li></ol></li><li><p>死锁的处理策略</p><ol><li><strong>预防死锁</strong><br>破坏产生死锁的条件</li><li><strong>避免死锁</strong><br>避免系统进入不安全状态（银行家算法）</li><li><strong>检测和解除</strong><br>允许死锁发生，操作系统负责检测死锁并解除</li></ol></li></ul><h2 id="死锁的处理"><a href="#死锁的处理" class="headerlink" title="死锁的处理"></a>死锁的处理</h2><h3 id="不允许死锁发生"><a href="#不允许死锁发生" class="headerlink" title="不允许死锁发生"></a>不允许死锁发生</h3><ul><li><strong>静态策略：预防死锁</strong><ol><li><strong>破坏互斥条件</strong><br>将物理互斥的资源改造为逻辑共享设备，SPOOLing技术将打印机改造成共享设备</li><li><strong>破坏不剥夺条件</strong><br>方案一：某个进程所需的资源得不到满足时，主动释放自己保持的资源，以后再重新申请<br>方案二：操作系统协助，将资源剥夺给优先级高的资源<br>实现复杂，可能造成获得资源前一阶段的工作白做，而且反复申请资源增加系统开销，可能导致进程饥饿</li><li><strong>破坏请求和保持条件</strong><br>静态分配法：进程分配好需要的资源再投入运行，运行时不再申请<br>实现简单，但是资源利用率极低，可能导致某些进程饥饿​</li><li><strong>破坏循环等待条件</strong><br>顺序资源分配法：首先给系统资源编号，每一个进程必需按照进程递增的顺序请求资源（大编号无法请求小编号资源，也就不能线程循环等待的情况）<br>按编号申请资源，编程很麻烦不方便添加新设备，需要重新分配编号；进程实际使用资源的顺序可能和编号顺序不一致，导致需要提前申请不必要的资源导致浪费​</li></ol></li><li><strong>动态策略：避免死锁</strong><ol><li>什么是安全序列<br>系统按照这种序列分配资源，能让每个进程都顺利完成</li><li>什么是系统的不安全状态<br>只要存在一个安全序列，系统就是安全状态<br>找不到安全序列，系统就是不安全状态，意味着可能所有进程都无法顺利执行下去（如果有进程提前归还资源，那系统也有可能可以回到安全状态）<br>不安全状态可能发生死锁（不一定发生），安全状态一定不会死锁</li><li>银行家算法</li></ol></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/6b8c8a1fc9771cbf256a401f7cfa6d14.png"></p><h3 id="允许死锁发生"><a href="#允许死锁发生" class="headerlink" title="允许死锁发生"></a>允许死锁发生</h3><ul><li><strong>死锁检测</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/bb14c3d0b17ec907154b4e26ca70deff.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/72761f62025d9ab2c856d77967fb88a9.png"></p><ul><li><strong>死锁解除</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/499e642ccb42f3b8792987a11109a31f.png"></p><h1 id="内存管理"><a href="#内存管理" class="headerlink" title="内存管理"></a>内存管理</h1><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/339f84440daad4b17a82464ae8c6d840.png"></p><h2 id="内存基础"><a href="#内存基础" class="headerlink" title="内存基础"></a>内存基础</h2><ul><li><p>什么是内存</p><ul><li><strong>储存单元</strong><br>按字节编址：一个存储单元1字节，8个二进制位<br>按字长编址：一个存储单元1个字长，字长16位的计算机一个存储单元16个二进制位<br>2^10=1K    2^20=1M   2^30=1G<br>4G内存的地址长度: 4*2^30=2^32  ，所以需要32个二进制位(32位操作系统最大支持4GB内存，指针大小4字节)</li><li><strong>内存地址</strong><br>内存从0开始，每一个地址对应一个存储单元</li></ul></li><li><p>进程运行的基本原理</p><ul><li><strong>指令的工作原理</strong><br>CPU按照程序段的指令去内存某个位置存取数据，一条 指令由操作码+若干参数组成<br>编译生成的指令中一般使用逻辑地址</li><li><strong>逻辑地址/物理地址</strong><br>逻辑地址（相对地址）<br>物理地址（绝对地址）</li></ul></li><li><p>从写程序到程序运行</p><ol><li><strong>编辑源文件</strong></li><li><strong>编译</strong><br>源代码文件(.c)生成目标模块(.o)，将高级语言翻译为机器语言<br>每一个目标模块都具有独立的逻辑地址 0-xxx</li><li><strong>链接</strong><br>目标模块生成装入模块(可执行文件,如.exe)，链接完成使得各模块形成整体的链接地址</li><li><strong>装入(载)</strong><br>将装入模块装入内存运行，装入后形成物理地址</li></ol></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/8e00f6dbac6c69dbfeb08565f887d6a6.png"></p><ul><li><p>三种链接方式</p><ol><li><strong>静态链接</strong><br>装入前链接成一个完整模块</li><li><strong>装入时动态链接</strong><br>运行前边装入边链接</li><li><strong>运行时动态链接</strong><br>运行时需要什么模块才装入并链接</li></ol></li><li><p>三种装入方式</p><ol><li><strong>绝对装入</strong><br>编译时产生绝对地址，只适用于单道程序环境(那时候还没有操作系统，编译器负责实现)</li><li><strong>可重定位装入(静态重定位)</strong><br>编译链接后的装入模块地址是逻辑地址，装入时进行重定位，将指令中逻辑地址+装入的起始物理地址得到真实的物理地址<br>一个作业装入内存时，必需分配其要求的全部内存空间，内存不够就不能装入<br>作业一旦进入内存，运行期间就不能再移动，也不能再申请内存空间，因为地址都写死了<br>早期多道批处理操作系统使用</li><li><strong>动态运行时装入(动态重定位)</strong><br>运行时才将逻辑地址转换为物理地址，需要设置重定位寄存器(或者叫基址寄存器)<br>允许程序在内存中发生移动，而且程序可以分配到不连续的储存区，也支持动态申请内存<br>只需装入部分代码即可投入运行，可以向用户提供一个比存储空间大得多的地址空间<br>现代操作系统使用</li></ol></li></ul><h1 id="内存空间分配与回收"><a href="#内存空间分配与回收" class="headerlink" title="内存空间分配与回收"></a>内存空间分配与回收</h1><p>为用户进程分配的内存必须是一个连续的内存空间</p><h2 id="连续分配管理方式"><a href="#连续分配管理方式" class="headerlink" title="连续分配管理方式"></a>连续分配管理方式</h2><ul><li><strong>单一连续分配</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/0081a0e4a2e83c34175718736ba82557.png"></p><ul><li><strong>固定分区分配</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/5058bbf39550bd01e121ff658145bcd0.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/67c30dbd1599bee950756f950ef917ca.png"></p><ul><li><strong>动态分区分配</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/08767bf29ec2c778d70e77b5f4b1ab02.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/9d28c7547a80d70088163e835a6a5b0d.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/dfd3883c7a984ac035dcfbbe0394ce49.png"></p><blockquote><p>回收内存时，回收区前后的空闲分区应该合并</p></blockquote><ul><li><strong>动态分区分配算法</strong><ol><li><strong>首次适应(First Fit)</strong><br>空闲分区按地址递增顺序排列，每次分配内存时查找空闲分区链(表)，找到第一个满足要求的分区即可<br>每次从低地址部分查找，高地址的大分区更有可能被保存下来<br>效果最佳</li><li><strong>最佳适应(Best Fit)</strong><br>空闲分区按容量递增顺序链接，每次分配内存时按顺序查找内存分区链(表)，找到第一个可以满足的空闲分区<br>优先使用最小连续内存区，尽可能多的留下大块空闲区，满足大进程需求，但是会留下非常多难以利用的外部碎片</li><li><strong>最坏适应(Worst Fit)</strong><br>有叫最大适应算法(Largest Fit)<br>空闲分区按容量递减顺序排序，每次分配找到能满足要求的第一个空闲分区<br>优先使用最大的连续空闲区，使得分配后的剩余空闲区不会太下，方便使用，但是如果后面需要大内存区间就没办法了</li><li><strong>邻近适应(Next Fit)</strong><br>又叫循环首次适应算法<br>空闲分区按地址递增顺序构成循环链表，每次内存分配时从所以才查找结束位置开始，找到第一个能满足要求的空闲分区<br>无论是低地址还是高地址的空闲分区，都有相同的概率被使用，导致最后无大分区可用​</li><li><strong>对比</strong></li></ol></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/50d2425ddf6b7419c25b81048e422055.png"></p><h2 id="非连续分配管理方式"><a href="#非连续分配管理方式" class="headerlink" title="非连续分配管理方式"></a>非连续分配管理方式</h2><p>为用户进程分配的内存可以是一个分散的内存空间<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/28aefd8d61408a8fc73fa4de0eb88cb9.png"></p><h3 id="基本分页存储管理"><a href="#基本分页存储管理" class="headerlink" title="基本分页存储管理"></a>基本分页存储管理</h3><h4 id="分页管理"><a href="#分页管理" class="headerlink" title="分页管理"></a>分页管理</h4><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/9aa76ab94a1dbfae0f77f253568a809a.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/b95575785e694b93bba47d918ef7ed94.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/09faeccfa419d0484cda4eeaea7080f3.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/0fec9bc2dfe05653f27ef07bccbcf388.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/a3133228d3b4efc94a2469d17d0b5203.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/36b98f7da4ecbc6b1e226b84d7135526.png"></p><blockquote><p>基本分页存储管理的思想：把内存分成一个个相等的小分区，在按分区大小把进程拆分成一个个小部分 (x)</p></blockquote><h4 id="基本地址变换机构"><a href="#基本地址变换机构" class="headerlink" title="基本地址变换机构"></a>基本地址变换机构</h4><ul><li><p>页表寄存器(PTR)<br>  保存页表在内存中的起始地址F和页表长度M<br>  进程未执行的时候，F和M放在PCB中，进程被调度时，操作系统内核将其放到PTR中</p></li><li><p>地址转换过程</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/2eb2b028d5cd785c98260d6fbc118c24.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/b8eaa75727fb2d37f95172d5dcd91c50.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/c12017d76287105807bebd09920d3783.png"></p><ul><li>对页表项目的探讨</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/2154b9952fc29517e016662477ea7b1b.png"></p><h4 id="快表地址变换机构"><a href="#快表地址变换机构" class="headerlink" title="快表地址变换机构"></a>快表地址变换机构</h4><ul><li><p>局部性原理</p><ol><li>时间局部性:如果执行了程序中的某条指令,那么不久后这条指令很有可能再次执行;如果某个数据被访问过,不久之后该数据很可能再次被访问。(因为程序中存在大量的循环)</li><li>空间局部性:一旦程序访问了某个存储单元,在不久之后,其附近的存储单元也很有可能被访问。(因为很多数据在内存中都是连续存放的）</li></ol></li><li><p>什么是快表(TLB)<br>  又称联想寄存器(TLB) ,是一种访问速度比内存快很多的高速缓冲存储器,用来存放当前访问的若干页表项,以加速地址变换的过程。与此对应,内存中的页表常称为慢表。</p></li><li><p>地址变换过程</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/ec475874aa13a75c6efae864ad8089bb.png"></p><h4 id="两级页表"><a href="#两级页表" class="headerlink" title="两级页表"></a>两级页表</h4><ul><li><p>单级页表的问题<br>Q1：所有的页表项都要连续存放，页表很大时，需要占用很多很多个连续的页框。<br>比如32位逻辑地址分页储存，页面大小4K，则页表最多2^20项，一项占4B，一共需要1024个连续的页框才能放得下<br>Q2：没有必要让整个页表常驻内存，进程在一段时间可能只访问某几个特定的页面</p></li><li><p>两级页表原理</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/76d6a57cd465b8976246e5e9196edc2e.png"></p><ul><li>如何实现地址变换</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/657bc76d734af9c9af1d0a9464585fc3.png"></p><ul><li>注意事项</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/dec992c358e87fa5e9f4fd8b36c3ea51.png"></p><h3 id="基本分段存储管理"><a href="#基本分段存储管理" class="headerlink" title="基本分段存储管理"></a>基本分段存储管理</h3><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/16e9a89e972005edfe77c27ae941e8f2.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/7996687da1d81625eb2e670b73bf4631.png"></p><ul><li><strong>什么是段表</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/04c6fd47091dcdf52e5a5bed77b9ff8a.png"></p><ul><li><strong>如何实现地址变换</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/263cf986df0af5c56a30be57805b6bcf.png"></p><ul><li><strong>分段VS分页</strong>-</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/7158352d0aca697027068159d02d8cd8.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/8ab1305deb6e4491afc4e182ac4b9d0b.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/83f024c57174873268a1e390b80a2e68.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/242d7ee1fa0e36a0309c03ec7eb7a326.png"></p><h3 id="段页式存储管理"><a href="#段页式存储管理" class="headerlink" title="段页式存储管理"></a>段页式存储管理</h3><ul><li>分段分页的优缺点</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/391b4cf087b6c14ebbb1766382492a23.png"></p><ul><li><strong>段页式管理</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/137833abba4059c0befbb3b083a488a1.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/203f30c57ff875d37631b93836ab3cec.png"></p><ul><li><strong>段表、页表</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/efc6d68c9181d25b30b1f1d2dd93bfad.png"></p><ul><li><strong>如何实现地址变换</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/cc29b1687f721912dec313f5802eeb7f.png"></p><h1 id="内存空间的扩充"><a href="#内存空间的扩充" class="headerlink" title="内存空间的扩充"></a>内存空间的扩充</h1><h2 id="覆盖技术"><a href="#覆盖技术" class="headerlink" title="覆盖技术"></a>覆盖技术</h2><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/b8d088c6d7e777d60267200f96df9531.png"></p><h2 id="交换-对换-技术"><a href="#交换-对换-技术" class="headerlink" title="交换(对换)技术"></a>交换(对换)技术</h2><p>内存紧张时，把进程暂时换出到外存（例：进程的中级调度(内存调度)，挂起态，七状态模型）<br>磁盘分为对换区(swap)和文件区，前者连续分配追求I/O速度，后者离散分配追求存储空间利用率<br>优先换出阻塞进程、低优先级进程（可能导致饥饿）、还要考虑进程在内存的驻留时间，PCB不会换出</p><h2 id="虚拟储存技术"><a href="#虚拟储存技术" class="headerlink" title="虚拟储存技术"></a>虚拟储存技术</h2><ul><li>传统存储方式的缺点<br>  连续分配/非连续分配<ol><li>一次性<br>作业必须一次性全部装入内存后才能开始运行。大作业无法运行,多道程序并发度下降。</li><li>驻留性<br>作业在运行期间一直驻留在内存，内存中驻留大量的暂时用不到的数据，浪费了宝贵的内存资源。</li></ol></li><li>局部性原理    <ol><li>时间局部性<br>现在访问的指令、数据在不久后很可能再次访问</li><li>空间局部性<br>现在访问的内存单元周围的内存空间很可能在不久之后访问</li><li>高速缓存<br>频繁访问的数据放到更高速的储存器中</li></ol></li><li>虚拟内存的定义和特征<br>  程序不需要全部装入内存即可运行，运行时根据需要动态调入数据，内存不够时，换出一些数据到外存<ol><li>多次性<br>作业无需在运行时一次装入内存，而是允许分多次调用</li><li>对换性<br>作业无需在运行时常驻内存，允许作业换入、换出</li><li>虚拟性<br>从逻辑上扩充了内存容量，用户看到的容量，远大于实际容量</li></ol></li></ul><h1 id="如何实现虚拟内存"><a href="#如何实现虚拟内存" class="headerlink" title="如何实现虚拟内存"></a>如何实现虚拟内存</h1><h2 id="请求调页"><a href="#请求调页" class="headerlink" title="请求调页"></a>请求调页</h2><p>访问的信息不存在时，操作系统负责将需要的信息从外存调入内存</p><h2 id="页面置换"><a href="#页面置换" class="headerlink" title="页面置换"></a>页面置换</h2><p>内存空间不足时，将内存中暂时不用的信息换到外存<br>页面的换入换出需要磁盘I/O，时间开销是很大的，缺页率越小越好</p><h3 id="最佳置换算法OPT"><a href="#最佳置换算法OPT" class="headerlink" title="最佳置换算法OPT"></a>最佳置换算法OPT</h3><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/a31e68c46d08157aff900e68175fcdb7.png"></p><h3 id="先进先出置换算法FIFO"><a href="#先进先出置换算法FIFO" class="headerlink" title="先进先出置换算法FIFO"></a>先进先出置换算法FIFO</h3><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/8fbfe8dec801c9679911f48024b89abe.png"></p><h3 id="最近最久未使用算法LRU"><a href="#最近最久未使用算法LRU" class="headerlink" title="最近最久未使用算法LRU"></a>最近最久未使用算法LRU</h3><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/12db53c5ecacba69329f1a320fd0f6ec.png"></p><h3 id="时钟置换算法CLOCK"><a href="#时钟置换算法CLOCK" class="headerlink" title="时钟置换算法CLOCK"></a>时钟置换算法CLOCK</h3><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/3fbda0061a096757ee0b6d7975e53ed3.png"></p><ul><li><strong>改进型时钟置换算法</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/fbc5786e66054fa21ae3e66f4636370e.png"></p><h3 id="对比-1"><a href="#对比-1" class="headerlink" title="对比"></a>对比</h3><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/6367b523aa247845d9ad05bbde1f773c.png"></p><h2 id="虚拟内存的实现"><a href="#虚拟内存的实现" class="headerlink" title="虚拟内存的实现"></a>虚拟内存的实现</h2><h3 id="请求分页存储管理"><a href="#请求分页存储管理" class="headerlink" title="请求分页存储管理"></a>请求分页存储管理</h3><ul><li><strong>页表机制</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/87530d9abd6297d27c42da9d19b5e2e3.png"></p><ul><li><p><strong>缺页中断机构</strong></p><ul><li>访问的页面不存在时，产生缺页中断(属于内中断的故障 fault)，操作系统缺页中断处理程序中断，进程放到阻塞队列，待调页完成后将进程唤醒，放到就绪队列</li><li>如果内存有空闲块，则为进程分配一个空闲块，将缺页装入其中，并修改页表相应页表项</li><li>如果内存没有空闲块，由页面置换算法选择一个页面淘汰(若该页面在内存期间被修改过，则需要先将其写回外存)，腾出一个空间再装入缺页​​</li><li>一条指令执行期间，可能产生多次缺页中断</li></ul></li><li><p><strong>地址变换机构</strong></p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/0e3537ef13a2ea5aca18407cb91af5ab.png"></p><h2 id="请求分段存储管理"><a href="#请求分段存储管理" class="headerlink" title="请求分段存储管理"></a>请求分段存储管理</h2><h2 id="请求段页式存储管理"><a href="#请求段页式存储管理" class="headerlink" title="请求段页式存储管理"></a>请求段页式存储管理</h2><h1 id="内存保护"><a href="#内存保护" class="headerlink" title="内存保护"></a>内存保护</h1><p>进程1只能访问进程1的内存，不能越界访问其它进程或者操作系统的内存区<br>方法一：在CPU中设置上限/下限寄存器，保存进程可访问的物理地址的上下限<br>方法二：重定位寄存器(基址寄存器)+界地址寄存器(限长寄存器)<br>重定位寄存器中保存了进程的起始物理地址P1，界地址寄存器保存了进程的最大逻辑地址P2, 进程可以访问的物理内存位置是P1~P1+P2</p><h1 id="页面分配策略"><a href="#页面分配策略" class="headerlink" title="页面分配策略"></a>页面分配策略</h1><ul><li><strong>相关概念</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/e5e89721b565c0911c692b8012b2892e.png"></p><ul><li><p><strong>固定分配局部置换</strong>)</p><ul><li>系统为每个进程分配一定数量的物理块,在整个运行期间都不改变。</li><li>若进程在运行中发生缺页,则只能从该进程在内存中的页面中选出一页换出,然后再调入需要的页面。</li><li>缺点:很难在刚开始就确定应为每个进程分配多少个物理块才算合理。(采用这种策略的系统可以根据进程大小、优先级、或是根据程序员给出的参数来确定为一个进程分配的内存块数)</li></ul></li><li><p><strong>可变分配全局置换</strong></p><ul><li>刚开始会为每个进程分配一定数量的物理块。操作系统会保持一个空闲物理块队列。</li><li>当某进程发生缺页时,从空闲物理块中取出一块分配给该进程;若已无空闲物理块,则可选择一个未锁定的页面换出外存,再将该物理块分配给缺页的进程。</li><li>只要某进程缺页,都将获得新的物理块,仅当空闲物理块用完时,系统才选择一个未锁定的页面调出。</li><li>被选择调出的页可能是系统中任何一个进程中的页,因此这个被选中的进程拥有的物理块会减少,缺页率会增加。</li></ul></li><li><p><strong>可变分配局部置换</strong></p><ul><li>刚开始会为每个进程分配一定数量的物理块。当某进程发生缺页时,只允许从该进程自己的物理块中选出一个进行换出外存。</li><li>如果进程在运行中频繁地缺页,系统会为该进程多分配几个物理块,直至该进程缺页率趋势适当程度;</li><li>反之,如果进程在运行中缺页率特别低,则可适当减少分配给该进程的物理块。</li></ul></li><li><p><strong>调入页面的时机</strong></p><ul><li><strong>预调页策略</strong><br>  运行前调入，根据空间局部性原理,一次调入若干个相邻的页面可能比一次调入一个页面更高效。但如果提前调入的页面中大多数都没被访问过,则又是低效的。<br>  因此可以预测不久之后可能访问到的页面,将它们预先调入内存,但目前预测成功率只有50%左右。故这种策略主要用于进程的首次调入,由程序员指定应该调入的部分。</li><li><strong>请求调页策略</strong><br>运行时调入，进程在运行期间发现缺页时才将所缺页面调入内存。由这种策略调入的页面一定会被访问到,但由于每次只能调入一页,而每次调页都要磁盘I/O操作,因此I/O开销较大。</li></ul></li><li><p><strong>从何处调页</strong></p><ul><li><strong>对换区空间足够</strong><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/cf3dd8df63ee90c85d95c7c43987561e.png"></li><li><strong>对换区空间不够</strong><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/258a8a5c20df486e189abb531c735fa3.png"></li><li><strong>Unix方式</strong><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/2d352762246646b4e081b7b4e4f8e2e7.png"></li></ul></li><li><p><strong>抖动(颠簸)现象</strong><br>给进程分配的物理块太少，刚刚换出的页面马上又要换入内存,刚刚换入的页面马上又要换出外存，这种频繁的页面调度行为称为抖动或颠簸。</p></li><li><p><strong>工作集</strong></p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/c3e0c087bb7b935766cc5956a55a248b.png"></p><h1 id="文件管理"><a href="#文件管理" class="headerlink" title="文件管理"></a>文件管理</h1><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/8cb3890c5cfca0ce03f7e5c3893cd027.png"></p><ul><li>文件的属性<ol><li>文件名<br>主要是给用户看，同一个目录下不允许重名文件</li><li>标识符<br>一个系统内各文件标识符唯一，对用户毫无可读性，给操作系统看的</li><li>类型<br>文件扩展名</li><li>位置<br>文件存放路径，给用户看的，在外存中的地址用户是看不到的</li><li>大小</li><li>创建时间</li><li>上次修改/访问时间</li><li>所有者信息</li><li>保护信息</li></ol></li></ul><h1 id="文件的逻辑结构"><a href="#文件的逻辑结构" class="headerlink" title="文件的逻辑结构"></a>文件的逻辑结构</h1><ul><li>什么是逻辑结构</li></ul><p><strong>逻辑结构</strong>：在用户看来，文件内部的数据是如何组织起来<br><strong>物理结构</strong>：操作系统看来，文件的数据如何存放在外存中</p><ul><li><strong>无结构文件</strong><br>又叫流式文件，比如txt，由一些二进制或者字符流组成</li></ul><h2 id="有结构文件"><a href="#有结构文件" class="headerlink" title="有结构文件"></a>有结构文件</h2><ul><li><p>又叫记录式文件，比如数据库表，由一组相似的记录组成</p></li><li><p>记录是一组相关数据线的集合，每条记录有一个数据项可作为关键字</p></li><li><p>根据记录的长度是否相等，分为：定长记录，可变长记录</p></li><li><p><strong>顺序文件</strong></p><ul><li><strong>链式存储</strong><br>逻辑上相邻的记录，在物理上离散存储。<br>无论是定长/可变长记录，都无法实现随机存取，只能从链头开始遍历</li><li><strong>顺序存储</strong><br>逻辑上相邻的记录，在物理上也相邻。<br>没有说明的情况下，顺序文件指采用顺序存储的顺序文件</li></ul><ol><li><strong>可变长记录</strong><br>无法实现随机存取</li><li><strong>定长记录</strong><br>可以实现随机存储。如果采用串结构(记录顺序与关键字无关)，无法快速找到某个关键字对应的记录，如果采用顺序结构(记录按关键字排序的)，可以使用折半查找快速找到记录</li></ol></li><li><p><strong>索引文件</strong></p><ul><li>索引表本身是定长记录的顺序文件，索引表项包含索引号，长度，指针，真正的记录可以在物理上离散存储。</li><li>索引号可以是关键字，这样就能折半查找加快检索速度，用于对信息处理及时性要求高的场合，解决了顺序文件增删不便的问题</li><li>可以用不同的数据项建立多个索引表</li></ul></li><li><p><strong>索引顺序文件</strong></p><ul><li>将记录分组，每一个组对应一个索引表项</li><li>检索记录时先检索索引表，找到分组，再顺序查找分组</li><li>记录过多时，可以建立多级索引表</li><li>记录N的表，平均查找次数是N/2</li></ul></li></ul><h1 id="文件目录"><a href="#文件目录" class="headerlink" title="文件目录"></a>文件目录</h1><ul><li><p><strong>文件控制块(FCB)</strong><br>一个FCB 对应一个文件，一个FCB就是一个目录项，FCB的有序集合叫“文件目录”<br>FCB包含了文件的基本信息，存取控制信息，使用信息等等，最重要的是文件名、文件存放的物理地址<br>对目录的操作:搜索、创建文件、删除文件、显示文件、修改文件</p></li><li><p><strong>单级目录结构</strong></p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/8a0b4efcd29db4cced9e2cb247b09f15.png"></p><ul><li><strong>两级目录结构</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/3cf10a2b20534a4d42023945fdc63f72.png"></p><ul><li><strong>多级(树形)目录结构</strong><br>共享不方便</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/aef4051a93db04e86ca7c72c2c2fbd2f.png"></p><ul><li><strong>无环图目录结构</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/f6590892b721e118e6ec125c451395f5.png"></p><ul><li><strong>索引节点(FCB改进）</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/458da625bb3ef4b7d0550f5824fd4e60.png"></p><h1 id="文件的物理结构"><a href="#文件的物理结构" class="headerlink" title="文件的物理结构"></a>文件的物理结构</h1><ul><li><strong>文件块、物理块</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/9e0536d5a5a087ba0172451339110976.png"></p><h2 id="连续分配"><a href="#连续分配" class="headerlink" title="连续分配"></a>连续分配</h2><ul><li>优点：支持随机访问；顺序访问时速度最快（移动磁头所需的时间短）</li><li>缺点：不方便文件扩展，每次扩展都得迁移到一段连续的空间，代价大；存储空间利用率低，产生磁盘碎片</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/9cf825dd079e0bc8c633914c5f798618.png"></p><h2 id="链接分配"><a href="#链接分配" class="headerlink" title="链接分配"></a>链接分配</h2><ul><li><strong>隐式链接</strong><br>方便拓展，磁盘利用率高<br>不支持随机访问，查找效率低</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/c933ccf03e736d7999a3246d65c5e030.png"></p><ul><li><strong>显式链接</strong><br>逻辑块号转物理块号不需要访问磁盘，因此支持随机访问；扩展方便且不会有磁盘碎片<br>缺点是FAT要占用一定的存储空间</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/ea24291a7c921ad7b56dd5101f5cf6a2.png"></p><h2 id="索引分配"><a href="#索引分配" class="headerlink" title="索引分配"></a>索引分配</h2><p>每一个文件建立一张索引表，其中记录文件的逻辑块对应的物理块。存放索引表的磁盘块叫索引块，存放文件数据的磁盘块叫数据块。</p><ul><li><strong>链接方案</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/7b06a91634ab0108bc54fd9820475128.png"></p><ul><li><strong>多层索引</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/2583fd053336ff2a32b63f4b24fdb46f.png"></p><ul><li><strong>混合索引</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/c4fdb3f9861d1a37e234bf73cebb3290.png"></p><ul><li><strong>对比</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/2387e02852ddb16f92beea74b851a9e5.png"></p><h2 id="对比-2"><a href="#对比-2" class="headerlink" title="对比"></a>对比</h2><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/8e0caa75cbdb07a6acf1bcd1acc047fa.png"></p><h1 id="文件存储空间管理"><a href="#文件存储空间管理" class="headerlink" title="文件存储空间管理"></a>文件存储空间管理</h1><ul><li><strong>存储空间划分与初始化</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/0960e40a11a50610a063a89c9291b238.png"></p><h2 id="管理方法"><a href="#管理方法" class="headerlink" title="管理方法"></a>管理方法</h2><ul><li><strong>空闲表法</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/9f93c30bbc2e803a2bd12fabcc9ebcbc.png"></p><ul><li><p><strong>空闲链表法</strong></p><ol><li>空闲盘块链<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/e80227bfee4ddd88ea0543e0db25ca0d.png"></li><li>空闲盘区链<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/4960ca076e0d2fc5de879058a70715a1.png"></li></ol></li><li><p><strong>位示图法</strong><br>(字号, 位号) = (行号, 列号) -&gt; 盘块号<br>字长16 = 一行有 16 个磁盘块，注意 0 开始 还是 1 开始<br>盘块号 = 字长*字号 + 位号</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/9e8ea8088ae40d789f6d8cf260f36f43.png"></p><ul><li><strong>成组链接法</strong><br>适用于大型文件系统，文件卷的目录区中，专门用一个磁盘块作为超级块，系统启动时读入内存，并且保持内外存超级块数据同步<br>比较复杂，看视频：<a href="https://www.bilibili.com/video/BV1YE411D7nH?p=52">https://www.bilibili.com/video/BV1YE411D7nH?p=52</a></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/d3d0b43a9930c6674bc7cb467cc2a4ec.png"></p><h1 id="文件的基本操作"><a href="#文件的基本操作" class="headerlink" title="文件的基本操作"></a>文件的基本操作</h1><ul><li>创建文件(creat)<ol><li>在外存中找到文件所需的空间</li><li>根据文件路径找到对应目录，创建文件对应的目录项​</li></ol></li><li>删除文件(delete)<ol><li>根据路径找到目录文件，找到文件名对应的目录项</li><li>回收文件占用的磁盘块</li><li>.删除目录项​​</li></ol></li><li>打开文件(open)<ol><li>根据路径找到目录文件，找到文件名对应的目录项，检测用户权限</li><li>将目录项复制到该进程在内存中的打开文件表中，返回表目编号​(索引号/文件描述符) </li></ol></li><li>关闭文件(close)<ol><li>删除进程的打开文件表中对应项</li><li>回收分配给该文件的内存空间等资源</li><li>系统打开文件表的打开计数器count-=1(归零时删除该项)​​</li></ol></li><li>读文件(read)<br>  需提供进程打开文件表中的索引号，读入的数据量，数据在内存中存放的位置<br>  从读指针​指向的外存位置读取指定大小的数据到指定的内存区域</li><li>写文件(write)<br>  需要提供打开文件表中的索引号，写出的数据量，写回外存的数据位置(写指针指向)</li></ul><h1 id="文件共享"><a href="#文件共享" class="headerlink" title="文件共享"></a>文件共享</h1><ul><li><strong>基于索引结点的共享(硬链接)</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/3c9338371fa86c7786b4ccb44689caed.png"></p><ul><li><strong>基于符号链的共享(软链接)</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/ae84e44309b34cfd622f053f47190759.png"></p><h1 id="文件保护"><a href="#文件保护" class="headerlink" title="文件保护"></a>文件保护</h1><ul><li>口令保护<br>  FCB中保存口令，访问时与用户提供的口令对比<br>  开销小，d但是不够安全</li><li>加密保护<br>  用密码对文件数据流加密，访问时用密码解密，比如异或加密<br>  保密性强，不需要存储密码，但是加密/解密要花费一定的时间</li><li>访问控制<br>  每一个文件FCB中增加一个访问控制表(ACL)，控制各用户的访问权限<br>  精简的访问列表，以组为单位，标记其访问权限，比如Linux里面分：所有者，所属组，其他人</li></ul><h1 id="文件系统的层次结构"><a href="#文件系统的层次结构" class="headerlink" title="文件系统的层次结构"></a>文件系统的层次结构</h1><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/9703c1be05bce180167e6fa59878359c.png"></p><h1 id="磁盘管理"><a href="#磁盘管理" class="headerlink" title="磁盘管理"></a>磁盘管理</h1><h2 id="磁盘的结构"><a href="#磁盘的结构" class="headerlink" title="磁盘的结构"></a>磁盘的结构</h2><ul><li><strong>磁盘/磁道/扇区</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/e2fd159374ac453b5c36d9e943ad7cf1.png"></p><ul><li><strong>如何在磁盘中读写数据</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/fb1c99d8be588db49c4ac54666d26e99.png"></p><ul><li><strong>盘面/柱面/物理地址</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/897ccf51aaaff4967dc66f561ac62f80.png"></p><ul><li><strong>磁盘分类</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/f8d0cbc3ad9baf31d441fc3c5062c63e.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/ebbceb79d6505750496e61cf6fe1bc1b.png"></p><h2 id="磁盘调度算法"><a href="#磁盘调度算法" class="headerlink" title="磁盘调度算法"></a>磁盘调度算法</h2><ul><li><strong>读写时间</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/ab37e3ed8e17a95235ae54100ea8f8db.png"></p><ul><li><strong>调度算法</strong><ol><li><strong>先来先服务(FCFS)</strong><br>根据进程请求访问磁盘的先后顺序调度<br>公平；如果大量进程访问的磁道很分散，虚拟会很差​</li><li><strong>最短寻道时间优先(SSTF)</strong><br>优先处理当前磁头最近的磁道，保证寻道时间最短（眼前最优，未必整体最优）<br>性能较好，但是可能产生饥饿现象</li><li><strong>扫描算法(SCAN)</strong><br>又叫电梯算法，在SSTF算法的基础上，规定磁头只有移动到磁道尽头（最外侧或者最内侧）才能往回移动<br>性能较好，不会饥饿；但是只能扫描到最边上的磁道才能改变磁头方向，越外侧的的磁道，响应频率越高</li><li><strong>LOOK调度算法</strong><br>改进SCAN算法，磁头边移动边观察(LOOK)，如果移动方向没有请求了，就不必继续扫描，直接调头</li><li><strong>循环扫描算法(C-SCAN)</strong><br>只有磁头朝着某个方向移动（比如磁道号增大方向）时才处理访问请求，移动到最边上后直接返回到另一边（0号磁道），返回途中不处理请求</li><li><strong>相比SACN算法</strong><br>各个位置的磁道响应频率很平均​</li><li><strong>C-LOOK算法</strong><br>改进C-SCAN算法，磁头移动方向上如果没有请求了，就直接返回到最靠近边缘的请求磁道即可</li></ol></li></ul><h2 id="减少磁盘延时"><a href="#减少磁盘延时" class="headerlink" title="减少磁盘延时"></a>减少磁盘延时</h2><ul><li><p><strong>交替编号</strong><br>一个盘面上，让逻辑相邻的扇区在物理上有一定间隔，使读取连续逻辑扇区所需的延迟时间更小<br>​（如果没有间隔，读入N号扇区时数据时需要一些时间处理，导致错过N+1号扇区，磁盘需要再转一圈才能读到N+1）</p></li><li><p><strong>磁盘物理地址设计</strong></p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/2ddce19efb6ffb45e550e494c2674ca5.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/96815efaafe28326e1cf29720642d2f2.png"></p><ul><li><strong>错位命名</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/346b8e84564845047ac77b7a84733f2d.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/5842e0c4e82f9a00c9df4f1718b63d71.png"></p><h2 id="磁盘管理-1"><a href="#磁盘管理-1" class="headerlink" title="磁盘管理"></a>磁盘管理</h2><ul><li><strong>磁盘初始化</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/4042a22e2a51b1943d413286e53f2c9d.png"></p><ul><li><strong>引导快</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/f407760fd3c9f41870514841b10bec42.png"></p><ul><li><strong>坏块管理</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/62341e5c566ea63d0ee9af4e96922f1d.png"></p><h1 id="I-O管理"><a href="#I-O管理" class="headerlink" title="I/O管理"></a>I/O管理</h1><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/841fa902a42c4e677331af7912ad4fde.png"></p><h2 id="I-O设备分类"><a href="#I-O设备分类" class="headerlink" title="I/O设备分类"></a>I/O设备分类</h2><ul><li><p>按使用特性分类</p><ol><li>人机交互类外设<br>鼠标、键盘、打印机等等，传输速度慢</li><li>存储类<br>移动硬盘、光盘等，传输速度块</li><li>物理通信设备<br>调制解调器等，速度一般</li></ol></li><li><p>按传输速度分类</p><ol><li>低速设备<br>鼠标、键盘等，每秒几百字节</li><li>中速设备<br>激光打印机等，每秒数千到上万字节</li><li>高速设备<br>磁盘等，每秒数千至千兆字节</li></ol></li><li><p>按信息交换的单位</p><ol><li>块设备<br>如磁盘等，传输数据块，可寻址（随机读写）</li><li>字符设备<br>鼠标键盘，传输字符，不可寻址，输入输出采用中断驱动方式</li></ol></li></ul><h2 id="I-O控制器"><a href="#I-O控制器" class="headerlink" title="I/O控制器"></a>I/O控制器</h2><ul><li><p><strong>机械部件</strong><br>执行具体的I/O操作，比如鼠标键盘的按钮，显示器的屏幕，移动硬盘的磁臂</p></li><li><p><strong>电子部件</strong><br>  CPU和机械部件的中介，通常是插入主板的电路板<br>  又叫I/O控制器，设备控制器</p><ol><li><strong>接受和识别CPU的命令</strong><br>控制寄存器保存命令和参数</li><li><strong>向CPU报告设备状态</strong><br>状态寄存器记录设备状态，如：1表示空闲，0表示忙碌</li><li><strong>数据交换</strong><br>数据寄存器用于双方数据交换的缓冲区</li><li><strong>地址识别</strong><br>通过CPU提供的地址判断读写哪个寄存器</li></ol></li><li><p><strong>组成</strong></p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/212f3c6c9cf226974950b81c08da30d4.png"></p><ul><li><strong>内存映像I/O 和 寄存器独立编址</strong><br>统一编址/独立编址</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/369f9a725ef40b92687193a32d81504e.png"></p><h2 id="I-O控制方式"><a href="#I-O控制方式" class="headerlink" title="I/O控制方式"></a>I/O控制方式</h2><ul><li><strong>程序直接控制</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/c8207bb3ce99d3f28812105daa163e65.png"></p><ul><li><strong>中断驱动方式</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/4de1d22c12ae1af7c5a51dd2372aba92.png"></p><ul><li><strong>直接存储器存取(DMA)方式</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/e82bebeab44dfc1375309c774b8ab8cd.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/5fb3a4d8e66831b9a01b5a333cd44336.png"></p><ul><li><strong>通道控制方式</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/378f1ea022a8162db2dc88dab6cbb2c8.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/b465db97c2c140914517931a72fc01de.png"></p><ul><li><strong>对比</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/f9b61bfe6d6533744162e109d4db4b29.png"></p><h2 id="I-O软件层次结构"><a href="#I-O软件层次结构" class="headerlink" title="I/O软件层次结构"></a>I/O软件层次结构</h2><ul><li><strong>用户层软件</strong><br>提供易用的库函数</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/26e762ed21e497fc84190d106516923e.png"></p><ul><li><strong>设备独立性软件</strong><br>提供调用接口(read/write系统调用)<br>设备保护<br>差错处理<br>设备分配与回收<br>数据缓冲区管理<br>建立逻辑设备名到物理设备名的映射关系<br>根据设备类型调用相应的驱动程序</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/2a03874beb3992f636423569dbceb5b4.png"></p><ul><li><strong>设备驱动程序</strong><br>设置设备的寄存器<br>检测设备状态</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/61e39c3eaed5fcf1f08fc77e7b7551c0.png"></p><ul><li><strong>中断处理程序</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/95ce891b6852f81a2cb3120f8e0ffd61.png"></p><h2 id="I-O核心子系统"><a href="#I-O核心子系统" class="headerlink" title="I/O核心子系统"></a>I/O核心子系统</h2><p>由设备独立性软件、设备驱动程序、中断处理程序组成，<br>属于操作系统内核部分，即I/O系统</p><h3 id="假脱机技术-SPOOLing"><a href="#假脱机技术-SPOOLing" class="headerlink" title="假脱机技术(SPOOLing)"></a>假脱机技术(SPOOLing)</h3><p>在用户层软件实现，但是408大纲将其归入I/O核心子系统</p><ul><li><p> <strong>脱机技术</strong><br>脱机技术指的是脱离主机的控制进行输入输出操作<br>很久以前是纸带输入，速度太慢，于是通过外围控制机将纸带数据输入到磁带，再输入主机，输出同理<br>缓解CPU与慢速I/O设备的速度矛盾</p></li><li><p><strong>假脱机技术实现原理</strong></p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/294494befcdb3cef54c51186ac1d7eec.png"></p><ul><li><strong>共享打印机原理分析</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/d51701e8bf1fbb9d0630f32d079cac26.png"></p><h3 id="设备分配与回收"><a href="#设备分配与回收" class="headerlink" title="设备分配与回收"></a>设备分配与回收</h3><ul><li><p>设备分配应该考虑的因素</p><ol><li>设备的固有属性<br>独占设备、共享设备、虚拟设备(SPOOLing技术将独占设备改造成虚拟的共享设备)</li><li>设备分配算法<br>先来先服务、优先级高者优先、短任务优先等等</li><li>设备分配的安全性<br>安全分配方式：串行使用设备，为进程分配一个设备后将进程阻塞，I/O完成再唤醒。不会产生死锁<br>不安全分配方式：进程请求I/O，操作系统负责分配设备，进程可以继续执行或者请求新的I/O，直到某个I/O无法满足才阻塞进程。可能产生死锁</li></ol></li><li><p>静态分配和动态分配<br>  进程运行前分配全部资源/运行时动态分配，见死锁那章</p></li><li><p>数据结构<br>  一个通道控制多个设备控制器，一个设备控制器控制多个设备</p></li><li><p>分配过程</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/2799b9f792d0c4b37f05bed3e5d01870.png"></p><ul><li>分配过程改进</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/7402da3e85d0454564595bcb4eea6bc7.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/b685ebaa2793533d4851c732b59421a3.png"></p><h3 id="缓冲区管理"><a href="#缓冲区管理" class="headerlink" title="缓冲区管理"></a>缓冲区管理</h3><ul><li><p>缓冲区的作用</p><ol><li>缓冲区可以使用专门的硬件寄存器实现，成本高容量小，更多时候使用内存做缓冲区</li><li>缓和CPU与I/O的速度矛盾</li><li>减少对CPU的中断频率，放宽对CPU中断的时间限制（中断驱动的字符型设备）</li><li>解决数据粒度不匹配的问题（字符型/块型）</li><li>提高CPU与I/O的并行性</li></ol></li><li><p><strong>单缓冲</strong></p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/6ec49ee53ac77d8ac79f5a3d0a667f8a.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/3e7298c4ccbc0d42abb56c651dbad863.png"></p><ul><li><strong>双缓冲</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/36e52d2b73e0353f30cf5fb6d5637e36.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/36a14ebcdb5bafdecd043eaa936e6ece.png"></p><ul><li><strong>循环缓冲</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/2125e12c4ca05881880fee2526d95275.png"></p><ul><li><strong>缓冲池</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/9438f9747cbace132ec876cde0751043.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;code&gt;感谢!!&lt;/code&gt;&lt;br&gt;&lt;a href=&quot;https://blog.csdn.net/gl620321/article/details/107128661?utm_source=app&quot;&gt;思维导图来源&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://mub</summary>
      
    
    
    
    <category term="笔记" scheme="http://example.com/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="笔记" scheme="http://example.com/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>HTML+CSS+JS</title>
    <link href="http://example.com/2020/11/24/%E5%89%8D%E7%AB%AF/HTML+CSS+JavaScript/"/>
    <id>http://example.com/2020/11/24/%E5%89%8D%E7%AB%AF/HTML+CSS+JavaScript/</id>
    <published>2020-11-24T12:11:59.134Z</published>
    <updated>2021-01-02T02:27:01.116Z</updated>
    
    <content type="html"><![CDATA[<h1 id="教程推荐"><a href="#教程推荐" class="headerlink" title="教程推荐"></a>教程推荐</h1><p><a href="https://www.vxzsk.com/tags/88.html">CSS教程</a><br><a href="https://www.vxzsk.com/tags/103.html">HTML+CSS教程</a></p><h1 id="HTML基础"><a href="#HTML基础" class="headerlink" title="HTML基础"></a>HTML基础</h1><ul><li><p>HTML：Hyper Text Markup Language（超文本标记语言）<br>超文本包括：文字、图片、音频、视频、动画等</p></li><li><p>W3C</p><ol><li>World Wide Web Consortium（万维网联盟）</li><li>成立于1994年，Web技术领域最权威和具影响力<br>的国际中立性技术标准机构</li></ol></li><li><p>W3C标准包括</p><ol><li>结构化标准语言（XHTML 、XML）</li><li>表现标准语言（CSS）</li><li>行为标准（DOM、ECMAScript ）</li></ol></li><li><p>网页基本结构</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span>  //告诉浏览器使用什么规范</span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span> 我的第一个网页<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">我的第一个网页</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Head标签"><a href="#Head标签" class="headerlink" title="Head标签"></a>Head标签</h2></li><li><p>&lt;title&gt;标签<br>设定显示在浏览器标题栏中的内容</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>家用电器排行榜<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>&lt;meta&gt;标签<br>定义网页的字符集、关键字、描述信息等内容</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">“keywords”</span> <span class="attr">content</span>=<span class="string">&quot;关键字1,关键字2,关键字3,...&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;description&quot;</span> <span class="attr">content</span>=<span class="string">&quot;网页描述内容&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;refresh&quot;</span> <span class="attr">content</span>=<span class="string">“刷新间隔时间;url</span>=<span class="string">页面地址”</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meat</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Type&quot;</span> <span class="attr">content</span>=<span class="string">&quot;text/html;charset=某种字符集&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>gb2312包含全部中文字符，utf-8 则包含全世界所有国家需要用到的字符，页面编码应与页面文件保存时的编码一致</p></blockquote></li></ul><h2 id="Body标签"><a href="#Body标签" class="headerlink" title="Body标签"></a>Body标签</h2><ul><li><p>设置正文颜色与背景颜色<br>body标签封装了页面的主体内容</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">bgcolor</span>=<span class="string">&quot;页面背景颜色值&quot;</span> <span class="attr">text</span>=<span class="string">&quot;页面正文颜色值&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>添加网页背景图片</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- fixed设置背景图片固定不动--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">background</span>=<span class="string">&quot;背景图片的URI&quot;</span> <span class="attr">bgproperties</span>=<span class="string">&quot;fixed&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>设置网页链接文字颜色</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">link</span>=<span class="string">&quot;未访问状态颜色值&quot;</span> <span class="attr">vlink</span>=<span class="string">&quot;访问过后的颜色值&quot;</span> <span class="attr">alink</span>=<span class="string">&quot;正在访问中的颜色&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>设置网页边距</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">leftmargin</span>=<span class="string">&quot;左边距值&quot;</span> <span class="attr">rightmargin</span>=<span class="string">&quot;右边距值&quot;</span> <span class="attr">topmargin</span>=<span class="string">&quot;上边距值&quot;</span> <span class="attr">bottommargin</span>=<span class="string">&quot;底边距值&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="文字与段落标记"><a href="#文字与段落标记" class="headerlink" title="文字与段落标记"></a>文字与段落标记</h2></li><li><p>特殊文字</p></li><li><p>注释</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--注释内容--&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>字体设置</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">face</span>=<span class="string">&quot;字体名称&quot;</span> <span class="attr">size</span>=<span class="string">&quot;字号&quot;</span> <span class="attr">color</span>=<span class="string">&quot;颜色值&quot;</span>&gt;</span>文字内容<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>size字号取值范围从1到7，或者从+1到+7、从-1到-7（正负取值相对于页面默认字号）</p></blockquote></li><li><p>字体样式标签</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">strong</span>&gt;</span>加粗<span class="tag">&lt;/<span class="name">strong</span>&gt;</span>、<span class="tag">&lt;<span class="name">b</span>&gt;</span>加租<span class="tag">&lt;/<span class="name">b</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">em</span>&gt;</span>斜体<span class="tag">&lt;/<span class="name">em</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">sup</span>&gt;</span>设置为上标<span class="tag">&lt;/<span class="name">sup</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">sub</span>&gt;</span>设置为小标<span class="tag">&lt;/<span class="name">sub</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">big</span>&gt;</span>设置为大字号<span class="tag">&lt;/<span class="name">big</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">small</span>&gt;</span>设置为小字号<span class="tag">&lt;/<span class="name">small</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">u</span>&gt;</span>设置下划线<span class="tag">&lt;/<span class="name">u</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">s</span>&gt;</span>设置删除线<span class="tag">&lt;/<span class="name">s</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>标题标签</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span> 一级标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span> 二级标题<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span> 三级标题<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h4</span>&gt;</span> 四级标题<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h5</span>&gt;</span> 五级标题<span class="tag">&lt;/<span class="name">h5</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h6</span>&gt;</span> 六级标题<span class="tag">&lt;/<span class="name">h6</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>段落标签</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>这个一个段落<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>换行标签</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>预格式化标签<br>预格式化可以保留在源代码中使用Enter、空格等键产生的各种格式</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">pre</span>&gt;</span> .. <span class="tag">&lt;/<span class="name">pre</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>居中标记</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">center</span>&gt;</span>居中<span class="tag">&lt;/<span class="name">center</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>缩排标记<br>缩排标记可以使一段文字产生一定位置的缩进，使用多次缩排标记可以实现多次缩排</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">blockquot</span>&gt;</span>...<span class="tag">&lt;/<span class="name">blockquot</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>水平线标签</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hr</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span> <span class="attr">width</span>=<span class="string">&quot;宽度&quot;</span> <span class="attr">height</span>=<span class="string">&quot;高度&quot;</span> <span class="attr">size</span>=<span class="string">&quot;粗细&quot;</span> <span class="attr">align</span>=<span class="string">&quot;水平对齐方式&quot;</span> <span class="attr">color</span>=<span class="string">&quot;颜色&quot;</span> <span class="attr">noshade</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>noshade表示设置实心的不带阴影的效果</p></blockquote></li></ul><h2 id="列表标记"><a href="#列表标记" class="headerlink" title="列表标记"></a>列表标记</h2><ul><li><p>有序列表<br>以数字或字母等可以表示顺序的符号为项目前导符来排列列表项的列表</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>列表项一<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>列表项二<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>列表项三<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br></pre></td></tr></table></figure><p>前导符设置：前导符可以取1、A、a、I、i这几种，默认为”1”</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ol</span> <span class="attr">type</span>=<span class="string">&quot;前导符&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>起始编号设置：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ol</span> <span class="attr">start</span>=<span class="string">&quot;起始编号位序&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>无序列表<br>以无序次含义的符号为前导符的列表</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>列表项一<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>列表项二<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>列表项三<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><p>前导符设置：前导符可以取disc（实心圆点）、circle（空心圆点）、square（实心小方块），默认为”disc”</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">type</span>=<span class="string">&quot;前导符&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>定义列表<br>一种具有两个层次的列表，可以用于对名词的解释，其中名词为第一层次，解释为第二层次</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dl</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dt</span>&gt;</span>名词一<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dd</span>&gt;</span>解释一<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dd</span>&gt;</span>解释二<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">...</span><br><span class="line"><span class="tag">&lt;<span class="name">dt</span>&gt;</span>名词二<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dd</span>&gt;</span>解释一<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dd</span>&gt;</span>解释二<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="表格标签"><a href="#表格标签" class="headerlink" title="表格标签"></a>表格标签</h2></li><li><p>语法</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">width</span>=<span class="string">“200”</span> <span class="attr">border</span>=<span class="string">“8”</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span> 第1 个单元格的内容<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span> 第2 个单元格的内容<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">……</span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span> 第1 个单元格的内容<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span> 第2 个单元格的内容<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">……</span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>设置表格边框和大小</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;边框宽度&quot;</span> <span class="attr">bordercolor</span>=<span class="string">&quot;边框颜色&quot;</span> <span class="attr">width</span>=<span class="string">&quot;宽度&quot;</span> <span class="attr">height</span>=<span class="string">&quot;高度&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>设置表格背景颜色和对齐方式</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">bgcolor</span>=<span class="string">&quot;颜色值&quot;</span> <span class="attr">align</span>=<span class="string">&quot;对齐方式&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>设置背景图片</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">background</span>=<span class="string">&quot;图片路径&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>设置表格边框间隔</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">cellpadding</span>=<span class="string">&quot;内容与边框距离值&quot;</span> <span class="attr">cellspacing</span>=<span class="string">&quot;边框之间间距值&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>设置表格的标题</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">caption</span> <span class="attr">align</span>=<span class="string">&quot;水平对齐方式left/right/center&quot;</span> <span class="attr">valign</span>=<span class="string">&quot;垂直对齐方式top/bottom&quot;</span>&gt;</span>表格标题<span class="tag">&lt;/<span class="name">caption</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>&lt;tr&gt;标签<br>一个&lt;tr&gt;&lt;/tr&gt;表示一行</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">tr</span> <span class="attr">height</span>=<span class="string">&quot;行高&quot;</span> <span class="attr">align</span>=<span class="string">&quot;水平对齐方式&quot;</span> <span class="attr">valign</span>=<span class="string">&quot;垂直对齐方式&quot;</span> <span class="attr">bordercolor</span>=<span class="string">&quot;颜色值&quot;</span> <span class="attr">bgcolor</span>=<span class="string">&quot;颜色值&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>&lt;td&gt;和&lt;th&gt;标签</p><table><thead><tr><th align="center">常用属性</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">align</td><td align="center">水平对齐方式，取值left，right，center</td></tr><tr><td align="center">valign</td><td align="center">垂直对齐方式，取值top，middle，bottom</td></tr><tr><td align="center">bgcolor</td><td align="center">单元格背景颜色</td></tr><tr><td align="center">background</td><td align="center">单元格背景图片</td></tr><tr><td align="center">bordercolor</td><td align="center">单元格边框颜色</td></tr><tr><td align="center">width</td><td align="center">单元格宽度，单位为像素或者百分比</td></tr><tr><td align="center">height</td><td align="center">单元格高度</td></tr><tr><td align="center">rowspan</td><td align="center">单元格的跨行操作</td></tr><tr><td align="center">colspan</td><td align="center">单元格的跨列操作</td></tr></tbody></table></li></ul><h2 id="图片标签"><a href="#图片标签" class="headerlink" title="图片标签"></a>图片标签</h2><ul><li><p>常见的图像格式</p><ol><li>位图：JPG、PNG、GIF</li><li>矢量图：ai、cdf、fh、swf</li></ol></li><li><p>区别</p><ol><li>位图：色彩丰富，表现力强，容量大，用于网页</li><li>矢量图：图片放大，清晰度不变，不适用于色彩，丰富的图片，用于印刷行业、网页logo等。</li></ol></li><li><p>设置图片大小和提示</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;path&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;text&quot;</span> <span class="attr">title</span>=<span class="string">&quot;text&quot;</span> <span class="attr">width</span>=<span class="string">&quot;x&quot;</span> <span class="attr">height</span>=<span class="string">&quot;y&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>src为图像路径，alt为图像的替代文章，title为鼠标悬停提示文字，width，height为宽高</p></li><li><p>设置图片与周围对象的间距</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;图片路径&quot;</span> <span class="attr">hspace</span>=<span class="string">&quot;水平间距&quot;</span> <span class="attr">vaspace</span>=<span class="string">&quot;垂直间距&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>设置图片的对齐方式</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;图片文件路径&quot;</span> <span class="attr">align</span>=<span class="string">&quot;top/bottom/middle/left/right&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>设置图片边框</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;图片文件路径&quot;</span> <span class="attr">border</span>=<span class="string">&quot;边框宽度&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="滚动字幕"><a href="#滚动字幕" class="headerlink" title="滚动字幕"></a>滚动字幕</h2></li><li><p>设置滚动字幕<br>默认情况下，&lt;marquee&gt;标签得到的滚动字幕是从右向左的</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">marquee</span>&gt;</span>滚动文字<span class="tag">&lt;/<span class="name">marquee</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>设置滚动方向</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">marquee</span> <span class="attr">direction</span>=<span class="string">&quot;滚动方向&quot;</span>&gt;</span>滚动文字<span class="tag">&lt;/<span class="name">marquee</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><table><thead><tr><th align="center">direction属性值</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">up</td><td align="center">从下往上滚动</td></tr><tr><td align="center">down</td><td align="center">从上往下滚动</td></tr><tr><td align="center">left</td><td align="center">从左往右滚动</td></tr><tr><td align="center">right</td><td align="center">从右往左滚动</td></tr></tbody></table><ul><li>设置滚动字幕的滚动行为<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">marquee</span> <span class="attr">behavior</span>=<span class="string">&quot;滚动行为&quot;</span>&gt;</span>滚动文字<span class="tag">&lt;/<span class="name">marquee</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><table><thead><tr><th align="center">behavior属性值</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">scroll</td><td align="center">设置文字循环往复滚动（默认）</td></tr><tr><td align="center">slide</td><td align="center">设置文字只进行一次滚动</td></tr><tr><td align="center">alternate</td><td align="center">设置文字循环交替往返进行滚动</td></tr></tbody></table><ul><li><p>设置字幕的滚动速度和滚动延迟特性</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">marquee</span> <span class="attr">scrollamount</span>=<span class="string">&quot;滚动速度值(默认为6)&quot;</span> <span class="attr">scrolldelay</span>=<span class="string">&quot;延迟时间(毫秒为单位)&quot;</span>&gt;</span>滚动文字<span class="tag">&lt;/<span class="name">marquee</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>设置字幕的滚动区域及其背景色</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">marquee</span> <span class="attr">bgcolor</span>=<span class="string">&quot;颜色值&quot;</span> <span class="attr">width</span>=<span class="string">&quot;宽度&quot;</span> <span class="attr">height</span>=<span class="string">&quot;高度&quot;</span>&gt;</span>滚动字幕<span class="tag">&lt;/<span class="name">marquee</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>设置字幕的滚动区域与周围对象的间距</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">marquee</span> <span class="attr">hspace</span>=<span class="string">&quot;水平间距&quot;</span> <span class="attr">vspace</span>=<span class="string">&quot;垂直间距&quot;</span>&gt;</span>滚动文字<span class="tag">&lt;/<span class="name">marquee</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="多媒体标签"><a href="#多媒体标签" class="headerlink" title="多媒体标签"></a>多媒体标签</h2></li><li><p>视频标签</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">controls</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">&quot;video/video.webm&quot;</span> <span class="attr">type</span>=<span class="string">&quot;video/webm&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">&quot;video/video.mp4&quot;</span> <span class="attr">type</span>=<span class="string">&quot;video/mp4&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>cotrols表示提供播放、暂停和音量 的控件</p></blockquote></li><li><p>自动播放</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">autoplay</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">&quot;video/video.webm&quot;</span> <span class="attr">type</span>=<span class="string">&quot;video/webm&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">&quot;video/video.mp4&quot;</span> <span class="attr">type</span>=<span class="string">&quot;video/mp4&quot;</span>/&gt;</span></span><br><span class="line">持 你的浏览器不支持video 元素</span><br><span class="line"><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>音频标签</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">audio</span> <span class="attr">controls</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">&quot;music/music.mp3&quot;</span> <span class="attr">type</span>=<span class="string">&quot;audio/mpeg&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">&quot;music/music.ogg&quot;</span> <span class="attr">type</span>=<span class="string">&quot;audio/ogg&quot;</span>/&gt;</span></span><br><span class="line">持 你的浏览器不支持audio 元素</span><br><span class="line"><span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="结构元素"><a href="#结构元素" class="headerlink" title="结构元素"></a>结构元素</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">header</span>&gt;</span><span class="tag">&lt;<span class="name">h2</span>&gt;</span> 网页头部<span class="tag">&lt;/<span class="name">h2</span>&gt;</span> <span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">section</span>&gt;</span><span class="tag">&lt;<span class="name">h2</span>&gt;</span> 网页主体部分<span class="tag">&lt;/<span class="name">h2</span>&gt;</span><span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">footer</span>&gt;</span><span class="tag">&lt;<span class="name">h2</span>&gt;</span> 网页底部<span class="tag">&lt;/<span class="name">h2</span>&gt;</span><span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artice</span>&gt;</span>独立的文章内容<span class="tag">&lt;/<span class="name">artice</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">aside</span>&gt;</span>相关内容或应用<span class="tag">&lt;/<span class="name">aside</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">nav</span>&gt;</span>导航类辅助内容<span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="框架结构"><a href="#框架结构" class="headerlink" title="框架结构"></a>框架结构</h2><p>框架的基本结构分框架集和框架两个部分，因为只分隔窗口，不涉及页面的具体内容，所以不需要&lt;body&gt;包裹</p></li><li><p>框架集标记<br>&lt;frameset&gt;的作用主要是定义浏览器窗口的分割方式、各分隔窗口(框架)的大小，以及设置框架边框的颜色和粗细等属性。</p><table><thead><tr><th align="center">属性</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">border</td><td align="center">设置边框粗细</td></tr><tr><td align="center">bordercolor</td><td align="center">边框颜色</td></tr><tr><td align="center">frameboder</td><td align="center">是否显示边框，可取值0或和1，或者no和yes</td></tr><tr><td align="center">framespacing</td><td align="center">框架之间的间距</td></tr><tr><td align="center">rows</td><td align="center">按行，即上下(垂直)方式分割</td></tr><tr><td align="center">cols</td><td align="center">按列，即左右(水平)方式分割</td></tr></tbody></table></li><li><p>左右分隔窗口</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">frameset</span> <span class="attr">cols</span>=<span class="string">&quot;value1,value2,..&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">frame</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">frame</span>&gt;</span></span><br><span class="line">...</span><br><span class="line"><span class="tag">&lt;/<span class="name">frameset</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>上下分割窗口</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">frameset</span> <span class="attr">rows</span>=<span class="string">&quot;value1,value2,..&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">frame</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">frame</span>&gt;</span></span><br><span class="line">...</span><br><span class="line"><span class="tag">&lt;/<span class="name">frameset</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>嵌套分隔窗口</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">frameset</span> <span class="attr">rows</span>=<span class="string">&quot;80%,*,..&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">frame</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">frameset</span> <span class="attr">cols</span>=<span class="string">&quot;20%,*,..&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">frame</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">frame</span>&gt;</span></span><br><span class="line">...</span><br><span class="line"><span class="tag">&lt;/<span class="name">frameset</span>&gt;</span></span><br><span class="line">...</span><br><span class="line"><span class="tag">&lt;/<span class="name">frameset</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>使用&lt;frameset&gt;标签设置框架边框</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">frameset</span> <span class="attr">frameborder</span>=<span class="string">&quot;0|1|no|yes&quot;</span> <span class="attr">framespacing</span>=<span class="string">&quot;边框间距&quot;</span> <span class="attr">border</span>=<span class="string">&quot;边框宽度&quot;</span> <span class="attr">bordercolor</span>=<span class="string">&quot;颜色值&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>框架标记&lt;frame&gt;<br>&lt;frame&gt;用于设置子窗口，是个单标记，必须放在frameset中</p><table><thead><tr><th align="center">属性</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">src</td><td align="center">设置在框架中显示的页面的URL地址</td></tr><tr><td align="center">bordercolor</td><td align="center">设置边框颜色</td></tr><tr><td align="center">frameboder</td><td align="center">是否显示边框，可取值0或和1，或者no和yes</td></tr><tr><td align="center">border</td><td align="center">设置边框粗细</td></tr><tr><td align="center">name</td><td align="center">设置框架名称，可作为超链接的target的属性值</td></tr><tr><td align="center">noresize</td><td align="center">使用时不能调整窗口的大小</td></tr><tr><td align="center">scorlling</td><td align="center">设置是否显示滚动条，可取值yes,no和auto</td></tr><tr><td align="center">marginwidth</td><td align="center">设置内容与框架窗口左右边框的距离</td></tr><tr><td align="center">marginheight</td><td align="center">设置内容与框架窗口上下边框的距离</td></tr></tbody></table></li><li><p>设置框架显示内容<br>设置指定某个页面的内容</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">frame</span> <span class="attr">src</span>=<span class="string">&quot;需要显示页面的URL&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>设置框架边距</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">frame</span> <span class="attr">frameborder</span>=<span class="string">&quot;0|1|no|yes&quot;</span> <span class="attr">bordercolor</span>=<span class="string">&quot;颜色值&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>设置框架名称</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">frame</span> <span class="attr">name</span>=<span class="string">&quot;框架名称&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>设置框架固定大小</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">frame</span> <span class="attr">noresize</span>=<span class="string">&quot;noresize&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>设置框架滚动条</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">frame</span> <span class="attr">scrolling</span>=<span class="string">&quot;auto|no|yes&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>设置框架边距</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">frame</span> <span class="attr">marginheight</span>=<span class="string">&quot;上、下边距&quot;</span> <span class="attr">marginwidth</span>=<span class="string">&quot;左、右边距&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>不支持框架标签<br>有些浏览器不支持框架，会显示空白页，这时，需要使用&lt;noframes&gt;显示提示信息</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">noframes</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">抱歉，你的浏览器版本太低，不支持框架，无法看到页面内容，请使用较新的浏览器来浏览</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">noframes</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>浮动框架标签<br>&lt;iframe&gt;是一种特殊的框架页面，可以作为HTML文档的一部分,，放在body标签里面</p><table><thead><tr><th align="center">属性</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">src</td><td align="center">设置在浮点框架中显示的页面的URL地址</td></tr><tr><td align="center">width</td><td align="center">设置浮动框架的宽度</td></tr><tr><td align="center">height</td><td align="center">设置浮动框架的高度</td></tr><tr><td align="center">align</td><td align="center">设置浮动框架的对齐方式</td></tr><tr><td align="center">frameboder</td><td align="center">是否显示边框，可取值0或和1，或者no和yes</td></tr><tr><td align="center">name</td><td align="center">设置框架名称，可作为超链接的target的属性值</td></tr><tr><td align="center">noresize</td><td align="center">使用时不能调整窗口的大小</td></tr><tr><td align="center">scorlling</td><td align="center">设置是否显示滚动条，可取值yes,no和auto</td></tr><tr><td align="center">bordercolor</td><td align="center">设置边框颜色</td></tr><tr><td align="center">marginwidth</td><td align="center">设置内容与框架窗口左右边框的距离</td></tr><tr><td align="center">marginheight</td><td align="center">设置内容与框架窗口上下边框的距离</td></tr></tbody></table></li><li><p>在页面中嵌入浮动框架</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">&quot;源文件地址&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>浮动框架的大小</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">&quot;源文件地址&quot;</span> <span class="attr">width</span>=<span class="string">&quot;宽度&quot;</span> <span class="attr">heigth</span>=<span class="string">&quot;高度&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>浮点框架的对齐方式</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">&quot;源文件地址&quot;</span> <span class="attr">align</span>=<span class="string">&quot;对齐方式&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>实现页面间的相互跳转</p></li></ul><ol><li>在被打开的框架上加name属性<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">name</span>=<span class="string">&quot;mainFrame&quot;</span> <span class="attr">src</span>=<span class="string">&quot;a.html&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure></li><li>在超链接上设置target目标窗口属性为希望显示的框架窗口名<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;a.html&quot;</span> <span class="attr">target</span>=<span class="string">&quot;mainFrame&quot;</span>&gt;</span> 下边显示第二页<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><h2 id="行内元素和块元素"><a href="#行内元素和块元素" class="headerlink" title="行内元素和块元素"></a>行内元素和块元素</h2><ul><li>块元素<br>  无论内容多少，该元素独占一行（p、h1-h6…）</li><li>行内元素<br>  内容撑开宽度，左右都是行内元素的可以排在一<br>行(a、strong、em…)</li></ul><h2 id="链接标签"><a href="#链接标签" class="headerlink" title="链接标签"></a>链接标签</h2><ul><li>普通链接<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;目标端点&quot;</span> <span class="attr">target</span>=<span class="string">&quot; 目标窗口位置&quot;</span>&gt;</span> 链接文字或图像<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><table><thead><tr><th align="center">target属性</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">_blank</td><td align="center">在新窗口打开链接文档</td></tr><tr><td align="center">_self</td><td align="center">在同一个框架或同一窗口中打开链接文档(默认属性)</td></tr><tr><td align="center">_parent</td><td align="center">在上一级窗口中打开，一般在框架页面中经常使用</td></tr><tr><td align="center">_top</td><td align="center">在浏览器的整个窗口中打开，忽略如何框架</td></tr><tr><td align="center">框架名称</td><td align="center">在指定的框架窗口中打开链接文档</td></tr></tbody></table><ul><li>锚链接（从A页面的甲位置跳转到本页中的乙位置）</li></ul><ol><li>创建跳转标记<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">name</span>=<span class="string">&quot;marker&quot;</span>&gt;</span> 乙位置<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>创建跳转链接<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#marker&quot;</span>&gt;</span> 甲位置<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><ul><li>功能性链接（电子邮件、QQ、MSN）<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;mailto:bdqnWebmaster@bdqn.cn&quot;</span>&gt;</span> 联系我们<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>脚本链接<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:alert(&#x27;你好，欢迎访问！&#x27;)&quot;</span>&gt;</span>欢迎访问<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>文件下载<br>当链接的目标文档类型属于.doc、.Rar、.zip、.exe等<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;task.exe&quot;</span>&gt;</span>可执行文件下载<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>图片链接<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;目标地址&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;图片地址&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;教程推荐&quot;&gt;&lt;a href=&quot;#教程推荐&quot; class=&quot;headerlink&quot; title=&quot;教程推荐&quot;&gt;&lt;/a&gt;教程推荐&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://www.vxzsk.com/tags/88.html&quot;&gt;CSS教程&lt;/a&gt;&lt;br&gt;&lt;a h</summary>
      
    
    
    
    <category term="前端" scheme="http://example.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="HTML+CSS+JS" scheme="http://example.com/tags/HTML-CSS-JS/"/>
    
  </entry>
  
</feed>
