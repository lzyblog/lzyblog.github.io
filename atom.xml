<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>小李博客</title>
  
  
  <link href="http://xiaoliblog.cn/atom.xml" rel="self"/>
  
  <link href="http://xiaoliblog.cn/"/>
  <updated>2021-06-23T13:37:03.906Z</updated>
  <id>http://xiaoliblog.cn/</id>
  
  <author>
    <name>小李博客</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>SpringBoot🍃集成SpringSecurity</title>
    <link href="http://xiaoliblog.cn/page/SpringBoot13.html"/>
    <id>http://xiaoliblog.cn/page/SpringBoot13.html</id>
    <published>2021-06-23T12:51:43.751Z</published>
    <updated>2021-06-23T13:37:03.906Z</updated>
    
    
    
    
    <category term="Java后端" scheme="http://xiaoliblog.cn/categories/Java%E5%90%8E%E7%AB%AF/"/>
    
    <category term="SpringBoot" scheme="http://xiaoliblog.cn/categories/Java%E5%90%8E%E7%AB%AF/SpringBoot/"/>
    
    
    <category term="SpringBoot" scheme="http://xiaoliblog.cn/tags/SpringBoot/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot🍃SpringData数据库操作</title>
    <link href="http://xiaoliblog.cn/page/SpringBoot12.html"/>
    <id>http://xiaoliblog.cn/page/SpringBoot12.html</id>
    <published>2021-06-23T08:55:59.135Z</published>
    <updated>2021-06-23T13:36:24.535Z</updated>
    
    <content type="html"><![CDATA[<h1 id="SpringData"><a href="#SpringData" class="headerlink" title="SpringData"></a>SpringData</h1><ul><li>对于数据访问层，无论是 SQL(关系型数据库) 还是 NOSQL(非关系型数据库)，Spring Boot 底层都是采用 Spring Data 的方式进行统一处理。</li><li>Spring Boot 底层都是采用 Spring Data 的方式进行统一处理各种数据库，Spring Data 也是 Spring 中与 Spring Boot、Spring Cloud 等齐名的知名项目。</li><li>Sping Data 官网：<a href="https://spring.io/projects/spring-data">https://spring.io/projects/spring-data</a></li><li>数据库相关的启动器 ：可以参考<a href="https://docs.spring.io/spring-boot/docs/2.2.5.RELEASE/reference/htmlsingle/#using-boot-starter">官方文档</a></li></ul><h1 id="整合JDBC"><a href="#整合JDBC" class="headerlink" title="整合JDBC"></a>整合JDBC</h1><h2 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h2><ul><li>新建一个项目测试，需要引入相应的模块</li></ul><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@98a700108583574ce090a7d57031f0ce38775620/2021/06/23/a0c39e4ae1e773b9d9b4da80f82f1501.png"></p><ul><li>项目建好之后，发现自动帮我们导入了如下的启动器：</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-thymeleaf<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-devtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="测试数据源"><a href="#测试数据源" class="headerlink" title="测试数据源"></a>测试数据源</h2><ul><li>新建<code>application.yml</code>配置文件连接数据库；</li></ul><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">data-username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">data-password:</span> <span class="number">123456</span></span><br><span class="line">    <span class="comment">#?serverTimezone=UTC解决时区的报错</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/springboot?serverTimezone=UTC&amp;useUnicode=true&amp;characterEncoding=utf-8</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br></pre></td></tr></table></figure><ul><li>配置完这一些东西后，我们就可以直接去使用了，因为SpringBoot已经默认帮我们进行了自动配置；去测试类测试一下</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SpringbootDataJdbcApplicationTests</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//DI注入数据源</span></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    DataSource dataSource;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">contextLoads</span><span class="params">()</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">        <span class="comment">//看一下默认数据源</span></span><br><span class="line">        System.out.println(dataSource.getClass());</span><br><span class="line">        <span class="comment">//获得连接</span></span><br><span class="line">        Connection connection =   dataSource.getConnection();</span><br><span class="line">        System.out.println(connection);</span><br><span class="line">        <span class="comment">//关闭连接</span></span><br><span class="line">        connection.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>结果：我们可以看到他默认给我们配置的数据源为 ：<code>class com.zaxxer.hikari.HikariDataSource</code>，我们并没有手动配置</li><li>我们来全局搜索一下，找到数据源的所有自动配置都在 ：DataSourceAutoConfiguration文件：</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Import(</span></span><br><span class="line"><span class="meta">    &#123;Hikari.class, Tomcat.class, Dbcp2.class, Generic.class, DataSourceJmxConfiguration.class&#125;</span></span><br><span class="line"><span class="meta">)</span></span><br><span class="line"><span class="keyword">protected</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">PooledDataSourceConfiguration</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="title">PooledDataSourceConfiguration</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>这里导入的类都在 DataSourceConfiguration 配置类下，可以看出 Spring Boot 2.2.5 默认使用HikariDataSource 数据源，而以前版本，如 Spring Boot 1.5 默认使用 org.apache.tomcat.jdbc.pool.DataSource 作为数据源</li><li><strong><code>HikariDataSource</code> 号称 Java WEB 当前速度最快的数据源，相比于传统的 C3P0 、DBCP、Tomcat jdbc 等连接池更加优秀；</strong></li><li><strong>可以使用 <code>spring.datasource.type</code> 指定自定义的数据源类型，值为要使用的连接池实现的完全限定名</strong></li></ul><h2 id="JdbcTemplate"><a href="#JdbcTemplate" class="headerlink" title="JdbcTemplate"></a>JdbcTemplate</h2><ul><li>有了数据源<code>com.zaxxer.hikari.HikariDataSource</code>，然后可以拿到数据库连接<code>java.sql.Connection</code>，有了连接，就可以使用原生的 JDBC 语句来操作数据库；</li><li>即使不使用第三方第数据库操作框架，如 MyBatis等，Spring 本身也对原生的JDBC 做了轻量级的封装，即<code>JdbcTemplate</code></li><li>数据库操作的所有 CRUD 方法都在 JdbcTemplate 中</li><li>Spring Boot 不仅提供了默认的数据源，同时默认已经配置好了 JdbcTemplate 放在了容器中，程序员只需自己注入即可使用</li><li>JdbcTemplate 的自动配置是依赖 org.springframework.boot.autoconfigure.jdbc 包下的 JdbcTemplateConfiguration 类</li><li>JdbcTemplate主要提供以下几类方法：<ul><li><code>execute</code>方法：可以用于执行任何SQL语句，一般用于执行DDL语句；</li><li><code>update</code>方法及<code>batchUpdate</code>方法：update方法用于执行新增、修改、删除等语句；batchUpdate方法用于执行批处理相关语句；</li><li><code>query</code>方法及<code>queryForXXX</code>方法：用于执行查询相关语句；</li><li><code>call</code>方法：用于执行存储过程、函数相关语句</li></ul></li></ul><h2 id="测试案例"><a href="#测试案例" class="headerlink" title="测试案例"></a>测试案例</h2><ul><li>编写一个Controller，注入 jdbcTemplate，编写测试方法进行访问测试；</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JDBCController</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Spring Boot 默认提供了数据源，默认提供了 org.springframework.jdbc.core.JdbcTemplate</span></span><br><span class="line"><span class="comment">     * JdbcTemplate 中会自己注入数据源，用于简化 JDBC操作</span></span><br><span class="line"><span class="comment">     * 还能避免一些常见的错误,使用起来也不用再自己来关闭数据库连接</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    JdbcTemplate jdbcTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//查询user表中所有数据</span></span><br><span class="line">    <span class="comment">//List 中的1个 Map 对应数据库的 1行数据</span></span><br><span class="line">    <span class="comment">//Map 中的 key 对应数据库的字段名，value 对应数据库的字段值</span></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/userlist&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;Map&lt;String,Object&gt;&gt; userList()&#123;</span><br><span class="line">        String sql = <span class="string">&quot;select * from user&quot;</span>;</span><br><span class="line">        List&lt;Map&lt;String, Object&gt;&gt; maps = jdbcTemplate.queryForList(sql);</span><br><span class="line">        <span class="keyword">return</span> maps;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//新增一个用户</span></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/add&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">addUser</span><span class="params">()</span></span>&#123;</span><br><span class="line">        String sql = <span class="string">&quot;insert into user(username, password)&quot;</span> +</span><br><span class="line">                <span class="string">&quot; values (&#x27;李四&#x27;,&#x27;123456&#x27;)&quot;</span>;</span><br><span class="line">        jdbcTemplate.update(sql);</span><br><span class="line">        <span class="comment">//查询</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;addOk&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//修改用户信息</span></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/update/&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">updateUser</span><span class="params">(<span class="meta">@PathVariable(&quot;id&quot;)</span> <span class="keyword">int</span> id)</span></span>&#123;</span><br><span class="line">        <span class="comment">//插入语句</span></span><br><span class="line">        String sql = <span class="string">&quot;update user set username=?,password=? where id=&quot;</span>+id;</span><br><span class="line">        <span class="comment">//数据</span></span><br><span class="line">        Object[] objects = <span class="keyword">new</span> Object[<span class="number">2</span>];</span><br><span class="line">        objects[<span class="number">0</span>] = <span class="string">&quot;李白&quot;</span>;</span><br><span class="line">        objects[<span class="number">1</span>] = <span class="string">&quot;24736743123&quot;</span>;</span><br><span class="line">        jdbcTemplate.update(sql,objects);</span><br><span class="line">        <span class="comment">//查询</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;updateOk&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//删除用户</span></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/delete/&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">delUser</span><span class="params">(<span class="meta">@PathVariable(&quot;id&quot;)</span> <span class="keyword">int</span> id)</span></span>&#123;</span><br><span class="line">        <span class="comment">//插入语句</span></span><br><span class="line">        String sql = <span class="string">&quot;delete from user where id=?&quot;</span>;</span><br><span class="line">        jdbcTemplate.update(sql,id);</span><br><span class="line">        <span class="comment">//查询</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;deleteOk&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="整合Druid"><a href="#整合Druid" class="headerlink" title="整合Druid"></a>整合Druid</h1><h2 id="Druid简介"><a href="#Druid简介" class="headerlink" title="Druid简介"></a>Druid简介</h2><ul><li>Java程序很大一部分要操作数据库，为了提高性能操作数据库的时候，又不得不使用数据库连接池</li><li><code>Druid</code> 是阿里巴巴开源平台上一个数据库连接池实现，结合了 C3P0、DBCP 等 DB 池的优点，同时加入了日志监控。</li><li>Druid 可以很好的监控 DB 池连接和 SQL 的执行情况，天生就是针对监控而生的 DB 连接池。</li><li>Druid已经在阿里巴巴部署了超过600个应用，经过一年多生产环境大规模部署的严苛考验。</li><li>Spring Boot 2.0 以上默认使用 Hikari 数据源，可以说 Hikari 与 Driud 都是当前 Java Web 上最优秀的数据源，我们来重点介绍 Spring Boot 如何集成 Druid 数据源，如何实现数据库监控。</li><li>Github地址：<a href="https://github.com/alibaba/druid/">https://github.com/alibaba/druid/</a></li><li>com.alibaba.druid.pool.DruidDataSource 基本配置参数如下：</li></ul><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@f20c7f0ed06a42be34e782d8beb588fdde1c82d9/2021/06/23/2903cdb121901eb466eb0a63c59e13ee.png"><br><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@0602c6a19196cd304930b2021b3f60e07d80dbad/2021/06/23/3a06da6a83a1f3da4029c9901a8fc7d8.png"><br><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@2f062359a6c899d23fa74c53b8b6ef4ac7e2a21a/2021/06/23/73e4d85c5258acc82f28e701b504d0a9.png"></p><h2 id="配置数据源"><a href="#配置数据源" class="headerlink" title="配置数据源"></a>配置数据源</h2><ul><li>添加上 Druid 数据源依赖</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/com.alibaba/druid --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>切换数据源；之前已经说过 Spring Boot 2.0 以上默认使用 com.zaxxer.hikari.HikariDataSource 数据源，但可以 通过 <code>spring.datasource.type</code> 指定数据源</li></ul><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">data-username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">data-password:</span> <span class="number">123456</span></span><br><span class="line">    <span class="comment">#?serverTimezone=UTC解决时区的报错</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/springboot?serverTimezone=UTC&amp;useUnicode=true&amp;characterEncoding=utf-8</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">com.alibaba.druid.pool.DruidDataSource</span> <span class="comment"># 自定义数据源</span></span><br></pre></td></tr></table></figure><ul><li>数据源切换之后，在测试类中注入 <code>DataSource</code>，然后获取到它，输出一看便知是否成功切换；</li></ul><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@bf4be9164cd45f86b3010b1c4b106629c2c14c2d/2021/06/23/d6c1014c938693808dec79a970892009.png"></p><ul><li>切换成功！既然切换成功，就可以设置数据源连接初始化大小、最大连接数、等待时间、最小连接数 等设置项；可以查看源码</li></ul><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="number">123456</span></span><br><span class="line">    <span class="comment">#?serverTimezone=UTC解决时区的报错</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/springboot?serverTimezone=UTC&amp;useUnicode=true&amp;characterEncoding=utf-8</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">com.alibaba.druid.pool.DruidDataSource</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#Spring Boot 默认是不注入这些属性值的，需要自己绑定</span></span><br><span class="line">    <span class="comment">#druid 数据源专有配置</span></span><br><span class="line">    <span class="attr">initialSize:</span> <span class="number">5</span></span><br><span class="line">    <span class="attr">minIdle:</span> <span class="number">5</span></span><br><span class="line">    <span class="attr">maxActive:</span> <span class="number">20</span></span><br><span class="line">    <span class="attr">maxWait:</span> <span class="number">60000</span></span><br><span class="line">    <span class="attr">timeBetweenEvictionRunsMillis:</span> <span class="number">60000</span></span><br><span class="line">    <span class="attr">minEvictableIdleTimeMillis:</span> <span class="number">300000</span></span><br><span class="line">    <span class="attr">validationQuery:</span> <span class="string">SELECT</span> <span class="number">1</span> <span class="string">FROM</span> <span class="string">DUAL</span></span><br><span class="line">    <span class="attr">testWhileIdle:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">testOnBorrow:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">testOnReturn:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">poolPreparedStatements:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#配置监控统计拦截的filters，stat:监控统计、log4j：日志记录、wall：防御sql注入</span></span><br><span class="line">    <span class="comment">#如果允许时报错  java.lang.ClassNotFoundException: org.apache.log4j.Priority</span></span><br><span class="line">    <span class="comment">#则导入 log4j 依赖即可，Maven 地址：https://mvnrepository.com/artifact/log4j/log4j</span></span><br><span class="line">    <span class="attr">filters:</span> <span class="string">stat,wall,log4j</span></span><br><span class="line">    <span class="attr">maxPoolPreparedStatementPerConnectionSize:</span> <span class="number">20</span></span><br><span class="line">    <span class="attr">useGlobalDataSourceStat:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">connectionProperties:</span> <span class="string">druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500</span></span><br></pre></td></tr></table></figure><ul><li>导入Log4j 的依赖</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/log4j/log4j --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.17<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>现在需要程序员自己为 <code>DruidDataSource</code> 绑定全局配置文件中的参数，再添加到容器中，而不再使用 Spring Boot 的自动生成了；我们需要 自己添加 <code>DruidDataSource</code> 组件到容器中，并绑定属性；</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DruidConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">       将自定义的 Druid数据源添加到容器中，不再让 Spring Boot 自动创建</span></span><br><span class="line"><span class="comment">       绑定全局配置文件中的 druid 数据源属性到 com.alibaba.druid.pool.DruidDataSource从而让它们生效</span></span><br><span class="line"><span class="comment">       @ConfigurationProperties(prefix = &quot;spring.datasource&quot;)：作用就是将 全局配置文件中</span></span><br><span class="line"><span class="comment">       前缀为 spring.datasource的属性值注入到 com.alibaba.druid.pool.DruidDataSource 的同名参数中</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@ConfigurationProperties(prefix = &quot;spring.datasource&quot;)</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> DataSource <span class="title">druidDataSource</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> DruidDataSource();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>去测试类中测试一下；看是否成功！</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SpringbootDataJdbcApplicationTests</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//DI注入数据源</span></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    DataSource dataSource;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">contextLoads</span><span class="params">()</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">        <span class="comment">//看一下默认数据源</span></span><br><span class="line">        System.out.println(dataSource.getClass());</span><br><span class="line">        <span class="comment">//获得连接</span></span><br><span class="line">        Connection connection =   dataSource.getConnection();</span><br><span class="line">        System.out.println(connection);</span><br><span class="line"></span><br><span class="line">        DruidDataSource druidDataSource = (DruidDataSource) dataSource;</span><br><span class="line">        System.out.println(<span class="string">&quot;druidDataSource 数据源最大连接数：&quot;</span> + druidDataSource.getMaxActive());</span><br><span class="line">        System.out.println(<span class="string">&quot;druidDataSource 数据源初始化连接数：&quot;</span> + druidDataSource.getInitialSize());</span><br><span class="line"></span><br><span class="line">        <span class="comment">//关闭连接</span></span><br><span class="line">        connection.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@b95e74d7df7bf803a6d4e95281e67e160248149f/2021/06/23/092ad2c104c166f4f13fd3ded8105cc0.png"></p><h2 id="配置Druid数据源监控"><a href="#配置Druid数据源监控" class="headerlink" title="配置Druid数据源监控"></a>配置Druid数据源监控</h2><ul><li>Druid 数据源具有监控的功能，并提供了一个 web 界面方便用户查看，类似安装 路由器 时，人家也提供了一个默认的 web 页面。</li><li>所以第一步需要设置 Druid 的后台管理页面，比如 登录账号、密码 等；配置后台管理；</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DruidConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//配置 Druid 监控管理后台的Servlet；</span></span><br><span class="line">    <span class="comment">//内置 Servlet 容器时没有web.xml文件，所以使用 Spring Boot 的注册 Servlet 方式</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ServletRegistrationBean <span class="title">statViewServlet</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        ServletRegistrationBean bean = <span class="keyword">new</span> ServletRegistrationBean(<span class="keyword">new</span> StatViewServlet(), <span class="string">&quot;/druid/*&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 这些参数可以在 com.alibaba.druid.support.http.StatViewServlet</span></span><br><span class="line">        <span class="comment">// 的父类 com.alibaba.druid.support.http.ResourceServlet 中找到</span></span><br><span class="line">        Map&lt;String, String&gt; initParams = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        initParams.put(<span class="string">&quot;loginUsername&quot;</span>, <span class="string">&quot;admin&quot;</span>); <span class="comment">//后台管理界面的登录账号</span></span><br><span class="line">        initParams.put(<span class="string">&quot;loginPassword&quot;</span>, <span class="string">&quot;123456&quot;</span>); <span class="comment">//后台管理界面的登录密码</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//后台允许谁可以访问</span></span><br><span class="line">        <span class="comment">//initParams.put(&quot;allow&quot;, &quot;localhost&quot;)：表示只有本机可以访问</span></span><br><span class="line">        <span class="comment">//initParams.put(&quot;allow&quot;, &quot;&quot;)：为空或者为null时，表示允许所有访问</span></span><br><span class="line">        initParams.put(<span class="string">&quot;allow&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">        <span class="comment">//deny：Druid 后台拒绝谁访问</span></span><br><span class="line">        <span class="comment">//initParams.put(&quot;kuangshen&quot;, &quot;192.168.1.20&quot;);表示禁止此ip访问</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//设置初始化参数</span></span><br><span class="line">        bean.setInitParameters(initParams);</span><br><span class="line">        <span class="keyword">return</span> bean;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>配置完毕后，我们可以选择访问 ：<code>http://localhost:8080/druid/login.html</code></li></ul><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@ba7e2d9eeaf1deb129ef7715556eeda9e34825c6/2021/06/23/6e0adb78f5261fe91e096c3dbd53cefb.png"></p><ul><li>进入之后</li></ul><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@daaecd55704d1a24162aa602297e54b9d76df9a5/2021/06/23/5bae0d4b62ced593da31c9137565dfc0.png"></p><ul><li>配置完整的数据源后，执行一条SQL语句会发现其监控了SQL操作</li></ul><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@72cc90ed216527e18ec27c96bbf6528081ce2fef/2021/06/23/cce30f91274a84d319e2f4f6e48118e7.png"></p><h2 id="filter-过滤器"><a href="#filter-过滤器" class="headerlink" title="filter 过滤器"></a>filter 过滤器</h2><ul><li>配置 Druid web 监控 filter 过滤器</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//配置 Druid 监控 之  web 监控的 filter</span></span><br><span class="line"><span class="comment">//WebStatFilter：用于配置Web和Druid数据源之间的管理关联监控统计</span></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> FilterRegistrationBean <span class="title">webStatFilter</span><span class="params">()</span> </span>&#123;</span><br><span class="line">   FilterRegistrationBean bean = <span class="keyword">new</span> FilterRegistrationBean();</span><br><span class="line">   bean.setFilter(<span class="keyword">new</span> WebStatFilter());</span><br><span class="line">   </span><br><span class="line">   <span class="comment">//exclusions：设置哪些请求进行过滤排除掉，从而不进行统计</span></span><br><span class="line">   Map&lt;String, String&gt; initParams = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">   initParams.put(<span class="string">&quot;exclusions&quot;</span>, <span class="string">&quot;*.js,*.css,/druid/*,/jdbc/*&quot;</span>);</span><br><span class="line">   bean.setInitParameters(initParams);</span><br><span class="line"></span><br><span class="line">   <span class="comment">//&quot;/*&quot; 表示过滤所有请求</span></span><br><span class="line">   bean.setUrlPatterns(Arrays.asList(<span class="string">&quot;/*&quot;</span>));</span><br><span class="line">   <span class="keyword">return</span> bean;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="整合MyBatis"><a href="#整合MyBatis" class="headerlink" title="整合MyBatis"></a>整合MyBatis</h1><ul><li>官方文档：<a href="http://mybatis.org/spring-boot-starter/mybatis-spring-boot-autoconfigure/">http://mybatis.org/spring-boot-starter/mybatis-spring-boot-autoconfigure/</a></li><li>Maven仓库地址：<a href="https://mvnrepository.com/artifact/org.mybatis.spring.boot/mybatis-spring-boot-starter/2.1.1">https://mvnrepository.com/artifact/org.mybatis.spring.boot/mybatis-spring-boot-starter/2.1.1</a></li></ul><h2 id="相关依赖"><a href="#相关依赖" class="headerlink" title="相关依赖"></a>相关依赖</h2><ul><li>导入 MyBatis 所需要的依赖</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.spring.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="数据库连接"><a href="#数据库连接" class="headerlink" title="数据库连接"></a>数据库连接</h2><ul><li>配置数据库连接信息（不变）</li></ul><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">data-username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">data-password:</span> <span class="number">123456</span></span><br><span class="line">    <span class="comment">#?serverTimezone=UTC解决时区的报错</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/springboot?serverTimezone=UTC&amp;useUnicode=true&amp;characterEncoding=utf-8</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">com.alibaba.druid.pool.DruidDataSource</span> <span class="comment"># 自定义数据源</span></span><br><span class="line">    <span class="comment">#Spring Boot 默认是不注入这些属性值的，需要自己绑定</span></span><br><span class="line">    <span class="comment">#druid 数据源专有配置</span></span><br><span class="line">    <span class="attr">initialSize:</span> <span class="number">5</span></span><br><span class="line">    <span class="attr">minIdle:</span> <span class="number">5</span></span><br><span class="line">    <span class="attr">maxActive:</span> <span class="number">20</span></span><br><span class="line">    <span class="attr">maxWait:</span> <span class="number">60000</span></span><br><span class="line">    <span class="attr">timeBetweenEvictionRunsMillis:</span> <span class="number">60000</span></span><br><span class="line">    <span class="attr">minEvictableIdleTimeMillis:</span> <span class="number">300000</span></span><br><span class="line">    <span class="attr">validationQuery:</span> <span class="string">SELECT</span> <span class="number">1</span> <span class="string">FROM</span> <span class="string">DUAL</span></span><br><span class="line">    <span class="attr">testWhileIdle:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">testOnBorrow:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">testOnReturn:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">poolPreparedStatements:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#配置监控统计拦截的filters，stat:监控统计、log4j：日志记录、wall：防御sql注入</span></span><br><span class="line">    <span class="comment">#如果允许时报错  java.lang.ClassNotFoundException: org.apache.log4j.Priority</span></span><br><span class="line">    <span class="comment">#则导入 log4j 依赖即可，Maven 地址：https://mvnrepository.com/artifact/log4j/log4j</span></span><br><span class="line">    <span class="attr">filters:</span> <span class="string">stat,wall,log4j</span></span><br><span class="line">    <span class="attr">maxPoolPreparedStatementPerConnectionSize:</span> <span class="number">20</span></span><br><span class="line">    <span class="attr">useGlobalDataSourceStat:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">connectionProperties:</span> <span class="string">druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500</span></span><br></pre></td></tr></table></figure><ul><li>测试数据库是否连接成功！</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SpringbootDataJdbcApplicationTests</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//DI注入数据源</span></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    DataSource dataSource;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">contextLoads</span><span class="params">()</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">        <span class="comment">//看一下数据源</span></span><br><span class="line">        System.out.println(dataSource.getClass());</span><br><span class="line">        <span class="comment">//获得连接</span></span><br><span class="line">        Connection connection =   dataSource.getConnection();</span><br><span class="line">        System.out.println(connection);</span><br><span class="line">        <span class="comment">//关闭连接</span></span><br><span class="line">        connection.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="整合测试"><a href="#整合测试" class="headerlink" title="整合测试"></a>整合测试</h2><ul><li>创建实体类，导入 Lombok！</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>创建mapper目录（即dao）以及对应的 Mapper 接口</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//这个注解表示了这是一个mybatis的mapper类</span></span><br><span class="line"><span class="meta">@Mapper</span></span><br><span class="line"><span class="meta">@Repository</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserMapper</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function">List&lt;User&gt; <span class="title">queryAllUser</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function">User <span class="title">queryUserById</span><span class="params">(Integer id)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">addUser</span><span class="params">(User user)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">updateUser</span><span class="params">(User user)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">deleteUser</span><span class="params">(<span class="keyword">int</span> id)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//除了@mapper注解以外，也可以在启动类添加扫描包实现</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@MapperScan(&quot;com.lzy.dao&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringbootDataApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(SpringbootDataApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>首先在<code>application.properties</code>中整合myBatis</li></ul><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 整合MyBatis</span></span><br><span class="line"><span class="meta">mybatis.type-aliases-package</span>=<span class="string">com.lzy.pojo</span></span><br><span class="line"><span class="meta">mybatis.mapper-locations</span>=<span class="string">classpath:mybatis/mapper/*.xml</span></span><br></pre></td></tr></table></figure><ul><li>对应的Mapper映射文件<code>UserMapper.xml</code>，在<code>resources</code>下创建<code>mybatis/mapper</code>文件夹存放配置文件</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--namespace指定Dao/Mapper的完整路径--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.lzy.dao.UserMapper&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;queryAllUser&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;User&quot;</span>&gt;</span></span><br><span class="line">        select * from user</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;queryUserById&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;User&quot;</span>&gt;</span></span><br><span class="line">        select * from user where id = #&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">&quot;addUser&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;User&quot;</span>&gt;</span></span><br><span class="line">        insert into user (username, password) values (#&#123;username&#125;,#&#123;password&#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">&quot;updateUser&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;User&quot;</span>&gt;</span></span><br><span class="line">        update user set username = #&#123;username&#125;,password = #&#123;password&#125; where id = #&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">delete</span> <span class="attr">id</span>=<span class="string">&quot;deleteUser&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;int&quot;</span>&gt;</span></span><br><span class="line">        delete from user where id = #&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">delete</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>编写UserController类进行测试</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserMapper userMapper;</span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/queryAll&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">queryAll</span><span class="params">()</span></span>&#123;</span><br><span class="line">        List&lt;User&gt; userList = userMapper.queryAllUser();</span><br><span class="line">        <span class="keyword">for</span> (User user : userList) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;user&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> userList;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@e4871b33db57528d225c91bafb2036cf99393adf/2021/06/23/4349520df40de33155461f059d410928.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;SpringData&quot;&gt;&lt;a href=&quot;#SpringData&quot; class=&quot;headerlink&quot; title=&quot;SpringData&quot;&gt;&lt;/a&gt;SpringData&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;对于数据访问层，无论是 SQL(关系型数据库) 还是 NOSQL</summary>
      
    
    
    
    <category term="Java后端" scheme="http://xiaoliblog.cn/categories/Java%E5%90%8E%E7%AB%AF/"/>
    
    <category term="SpringBoot" scheme="http://xiaoliblog.cn/categories/Java%E5%90%8E%E7%AB%AF/SpringBoot/"/>
    
    
    <category term="SpringBoot" scheme="http://xiaoliblog.cn/tags/SpringBoot/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot🍃员工管理系统之CRUD</title>
    <link href="http://xiaoliblog.cn/page/SpringBoot11.html"/>
    <id>http://xiaoliblog.cn/page/SpringBoot11.html</id>
    <published>2021-06-22T12:37:41.527Z</published>
    <updated>2021-06-23T08:43:02.021Z</updated>
    
    <content type="html"><![CDATA[<h1 id="展示员工列表"><a href="#展示员工列表" class="headerlink" title="展示员工列表"></a>展示员工列表</h1><h2 id="控制层"><a href="#控制层" class="headerlink" title="控制层"></a>控制层</h2><ul><li>创建<code>EmployeeController</code>控制器·</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EmployeeController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    EmployeeDao employeeDao;</span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/emps&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">list</span><span class="params">(Model model)</span></span>&#123;</span><br><span class="line">        Collection&lt;Employee&gt; employees = employeeDao.getAll();</span><br><span class="line">        model.addAttribute(<span class="string">&quot;emps&quot;</span>,employees);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;emp/list&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>修改前端页面进行跳转</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;nav-item&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;nav-link&quot;</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/emps&#125;&quot;</span>&gt;</span></span><br><span class="line">   员工管理</span><br><span class="line">   <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="公共部分"><a href="#公共部分" class="headerlink" title="公共部分"></a>公共部分</h2><ul><li>比如侧边栏和头部导航栏是公共的，可以把公共部分抽取出来。比如<code>dashboard.html</code>的导航栏进行抽取，成为一个组件，就可以在其他页面使用</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--头部--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">nav</span> <span class="attr">th:fragment</span>=<span class="string">&quot;header&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--侧边栏--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">nav</span> <span class="attr">th:fragment</span>=<span class="string">&quot;sidebar&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>在<code>list.html</code>中使用抽取出来的组件<code>&#123;页面路径::设置的参数值&#125;</code></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">th:insert</span>=<span class="string">&quot;~&#123;dashboard::header&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">th:insert</span>=<span class="string">&quot;~&#123;dashboard::sidebar&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>也可以把侧边栏和头部导航栏抽取到一个<code>commons.html</code>里，比如在<code>templates</code>下创建·<code>commons</code>文件夹存放<code>commons.html</code></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span> <span class="attr">xmlns:th</span>=<span class="string">&quot;http://www.thymeleaf.org&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--头部--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">nav</span> <span class="attr">th:fragment</span>=<span class="string">&quot;header&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--侧边栏--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">nav</span> <span class="attr">th:fragment</span>=<span class="string">&quot;sidebar&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>可以试一下<code>th:replace</code>使用</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">th:replace</span>=<span class="string">&quot;~&#123;commons/commons::header&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">th:replace</span>=<span class="string">&quot;~&#123;commons/commons::sidebar&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="URL传参"><a href="#URL传参" class="headerlink" title="URL传参"></a>URL传参</h2><ul><li>当选择员工管理时需把员工管理那一项高亮显示，这里使用到了URL传参</li><li>比如在<code>list.html</code>的公共部分，传递一个参数键值对<code>active=&#39;list.html&#39;</code></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">th:replace</span>=<span class="string">&quot;~&#123;commons/commons::sidebar(active=&#x27;list.html&#x27;)&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>在公共部分<code>commons.html</code>中进行接收并判断</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;nav-item&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">a</span> <span class="attr">th:class</span>=<span class="string">&quot;$&#123;active==&#x27;list.html&#x27;?&#x27;nav-link active&#x27;:&#x27;nav-link&#x27;&#125;&quot;</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/emps&#125;&quot;</span>&gt;</span></span><br><span class="line">   员工管理</span><br><span class="line">   <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="遍历数据"><a href="#遍历数据" class="headerlink" title="遍历数据"></a>遍历数据</h2><ul><li>使用<code>th:each=&quot;别名:$&#123;数据对象&#125;&quot;</code>进行数据遍历</li><li>取值可以通过行内<code>[[$&#123;value&#125;]]</code>，缺点是没有提示。可以通过<code>th:text=&quot;$&#123;value&#125;&quot;</code>，会有提示</li><li>使用thymeleaf的工具类进行日期格式转换<code>$&#123;#dates.format(date,&#39;yyyy-MM-dd HH:mm:ss&#39;)&#125;</code></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">class</span>=<span class="string">&quot;table table-striped table-sm&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">th</span>&gt;</span>id<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">th</span>&gt;</span>lastName<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">th</span>&gt;</span>email<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">th</span>&gt;</span>gender<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">th</span>&gt;</span>department<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">th</span>&gt;</span>birth<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">th</span>&gt;</span>操作<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!--动态生成--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">tr</span> <span class="attr">th:each</span>=<span class="string">&quot;emp:$&#123;emps&#125;&quot;</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">td</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;emp.getId()&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">td</span>&gt;</span>[[$&#123;emp.getLastName&#125;]]<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">td</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;emp.getEmail()&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">td</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;emp.getGender()==0?&#x27;女&#x27;:&#x27;男&#x27;&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">td</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;emp.department.getDepartmentName()&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">td</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;#dates.format(emp.getBirth(),&#x27;yyyy-MM-dd HH:mm:ss&#x27;)&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-sm btn-info&quot;</span>&gt;</span>编辑<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-sm btn-danger&quot;</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="增加员工实现"><a href="#增加员工实现" class="headerlink" title="增加员工实现"></a>增加员工实现</h1><h2 id="获取部门信息"><a href="#获取部门信息" class="headerlink" title="获取部门信息"></a>获取部门信息</h2><ul><li>增加添加按钮跳转到添加页面</li><li>输入员工信息提交表单，跳转到员工管理页面</li><li>使用Restful风格<code>GET</code>请求跳转到添加页面，<code>POST</code>请求提交表单。同一个请求不同的请求方法实现不同的业务</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/emp&#125;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-success&quot;</span>&gt;</span>添加员工<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>首先要获取部门信息并展示</li></ul><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@921051c119a3daf142f19a1389233d00db30de55/2021/06/23/e9baf8e39f5ba5a2c899f25544a5244c.png"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Autowired</span></span><br><span class="line">DepartmentDao departmentDao;</span><br><span class="line"><span class="meta">@GetMapping(&quot;/emp&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">toAddpage</span><span class="params">(Model model)</span></span>&#123;</span><br><span class="line">   <span class="comment">// 查出所有部门的信息</span></span><br><span class="line">   Collection&lt;Department&gt; departments = departmentDao.getDepartments();</span><br><span class="line">   model.addAttribute(<span class="string">&quot;departments&quot;</span>,departments);</span><br><span class="line">   <span class="keyword">return</span> <span class="string">&quot;emp/add&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>前端页面接收</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--value传的是id，name也要一一对应，传的是特殊类型，不能传对象只能转组件--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span> <span class="attr">name</span>=<span class="string">&quot;department.id&quot;</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--text只是显示，提交的是value--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">option</span> <span class="attr">th:each</span>=<span class="string">&quot;dept:$&#123;departments&#125;&quot;</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;dept.getDepartmentName()&#125;&quot;</span> <span class="attr">th:value</span>=<span class="string">&quot;$&#123;dept.getId()&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="添加实现"><a href="#添加实现" class="headerlink" title="添加实现"></a>添加实现</h2><ul><li>编写控制器处理POST表单提交请求</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Autowired</span></span><br><span class="line">DepartmentDao departmentDao;</span><br><span class="line"><span class="comment">//跳转到员工管理页面</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/emps&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">list</span><span class="params">(Model model)</span></span>&#123;</span><br><span class="line">   Collection&lt;Employee&gt; employees = employeeDao.getAll();</span><br><span class="line">   model.addAttribute(<span class="string">&quot;emps&quot;</span>,employees);</span><br><span class="line">  <span class="keyword">return</span> <span class="string">&quot;emp/list&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@PostMapping(&quot;/emp&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">addEmp</span><span class="params">(Employee employee,Model model)</span></span>&#123;</span><br><span class="line">   <span class="comment">// 添加员工</span></span><br><span class="line">   System.out.println(<span class="string">&quot;save=&gt;&quot;</span>+employee);</span><br><span class="line">   employeeDao.save(employee);</span><br><span class="line">   <span class="keyword">return</span> <span class="string">&quot;redirect:/emps&quot;</span>; <span class="comment">//跳转到员工列表并刷新</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>前端页面，注意<code>name</code>值要和实体类一一对应</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">th:action</span>=<span class="string">&quot;@&#123;/emp&#125;&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">label</span>&gt;</span>LastName<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;LastName&quot;</span> <span class="attr">name</span>=<span class="string">&quot;lastName&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">label</span>&gt;</span>Email<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;email&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;Email&quot;</span> <span class="attr">name</span>=<span class="string">&quot;email&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">label</span>&gt;</span>Gender<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-check form-check-inline&quot;</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">&quot;form-check-input&quot;</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;gender&quot;</span><span class="attr">value</span>=<span class="string">&quot;1&quot;</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">&quot;form-check-label&quot;</span>&gt;</span>男<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-check form-check-inline&quot;</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">&quot;form-check-input&quot;</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;gender&quot;</span><span class="attr">value</span>=<span class="string">&quot;0&quot;</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">&quot;form-check-label&quot;</span>&gt;</span>女<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">label</span>&gt;</span>department<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">select</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span> <span class="attr">name</span>=<span class="string">&quot;department.id&quot;</span>&gt;</span></span><br><span class="line">         <span class="comment">&lt;!--text只是显示，提交的是value--&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">option</span> <span class="attr">th:each</span>=<span class="string">&quot;dept:$&#123;departments&#125;&quot;</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;dept.getDepartmentName()&#125;&quot;</span> <span class="attr">th:value</span>=<span class="string">&quot;$&#123;dept.getId()&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">label</span>&gt;</span>Birth<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;Birth&quot;</span> <span class="attr">name</span>=<span class="string">&quot;birth&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-primary&quot;</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span>&gt;</span>提交表单<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="时间格式"><a href="#时间格式" class="headerlink" title="时间格式"></a>时间格式</h2><ul><li>当我们输入<code>1999/11/12</code>时，是没有问题的。但是输入<code>1999-11-12</code>却出现了错误</li><li>这是因为SpringBoot有一个默认的格式<code>dd/MM/yyyy</code>，所以需要自定义格式。自定义后<code>/</code>格式就无法使用</li></ul><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">spring.mvc.format.date</span>=<span class="string">yyyy-MM-dd</span></span><br></pre></td></tr></table></figure><h1 id="修改员工信息"><a href="#修改员工信息" class="headerlink" title="修改员工信息"></a>修改员工信息</h1><h2 id="控制器"><a href="#控制器" class="headerlink" title="控制器"></a>控制器</h2><ul><li>通过按钮绑定每一个员工ID，访问编辑页面的时候带员工ID参数</li><li>通过Restful分隔实现</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">tr</span> <span class="attr">th:each</span>=<span class="string">&quot;emp:$&#123;emps&#125;&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">td</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;emp.getId()&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">td</span>&gt;</span>[[$&#123;emp.getLastName&#125;]]<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">td</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;emp.getEmail()&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">td</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;emp.getGender()==0?&#x27;女&#x27;:&#x27;男&#x27;&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">td</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;emp.department.getDepartmentName()&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">td</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;#dates.format(emp.getBirth(),&#x27;yyyy-MM-dd HH:mm:ss&#x27;)&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-sm btn-info&quot;</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/emp/&#125;+$&#123;emp.getId()&#125;&quot;</span>&gt;</span>编辑<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-sm btn-danger&quot;</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>编写控制器处理请求</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//编辑页面</span></span><br><span class="line"><span class="meta">@GetMapping(&quot;/emp/&#123;id&#125;&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">toUpdateEmp</span><span class="params">(<span class="meta">@PathVariable(&quot;id&quot;)</span> Integer id,Model model)</span></span>&#123;</span><br><span class="line">   <span class="comment">//查出原来数据</span></span><br><span class="line">   Employee employee = employeeDao.getEmployeeByID(id);</span><br><span class="line">   model.addAttribute(<span class="string">&quot;emp&quot;</span>,employee);</span><br><span class="line">   <span class="comment">// 查出部门信息</span></span><br><span class="line">   Collection&lt;Department&gt; departments = departmentDao.getDepartments();</span><br><span class="line">   model.addAttribute(<span class="string">&quot;departments&quot;</span>,departments);</span><br><span class="line">   <span class="keyword">return</span> <span class="string">&quot;emp/update&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="编辑实现"><a href="#编辑实现" class="headerlink" title="编辑实现"></a>编辑实现</h2><ul><li>在<code>emp</code>文件下新建<code>update.html</code>页面，传入后端的数据</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">th:action</span>=<span class="string">&quot;@&#123;/emp&#125;&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line"> <span class="comment">&lt;!--隐藏域 用于隐藏保存主键ID--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;hidden&quot;</span> <span class="attr">name</span>=<span class="string">&quot;id&quot;</span> <span class="attr">th:value</span>=<span class="string">&quot;$&#123;emp.getId()&#125;&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">label</span>&gt;</span>LastName<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">th:value</span>=<span class="string">&quot;$&#123;emp.getLastName()&#125;&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;LastName&quot;</span> <span class="attr">name</span>=<span class="string">&quot;lastName&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">label</span>&gt;</span>Email<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">th:value</span>=<span class="string">&quot;$&#123;emp.getEmail()&#125;&quot;</span> <span class="attr">type</span>=<span class="string">&quot;email&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;Email&quot;</span> <span class="attr">name</span>=<span class="string">&quot;email&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">label</span>&gt;</span>Gender<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-check form-check-inline&quot;</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">input</span> <span class="attr">th:checked</span>=<span class="string">&quot;$&#123;emp.getGender()==1&#125;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-check-input&quot;</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;gender&quot;</span><span class="attr">value</span>=<span class="string">&quot;1&quot;</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">&quot;form-check-label&quot;</span>&gt;</span>男<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-check form-check-inline&quot;</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">input</span> <span class="attr">th:checked</span>=<span class="string">&quot;$&#123;emp.getGender()==0&#125;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-check-input&quot;</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;gender&quot;</span><span class="attr">value</span>=<span class="string">&quot;0&quot;</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">&quot;form-check-label&quot;</span>&gt;</span>女<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">label</span>&gt;</span>department<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">select</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span> <span class="attr">name</span>=<span class="string">&quot;department.id&quot;</span>&gt;</span></span><br><span class="line">         <span class="comment">&lt;!--text只是显示，提交的是value--&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">option</span> <span class="attr">th:selected</span>=<span class="string">&quot;$&#123;dept.getId()==emp.getDepartment().getId()&#125;&quot;</span> <span class="attr">th:each</span>=<span class="string">&quot;dept:$&#123;departments&#125;&quot;</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;dept.getDepartmentName()&#125;&quot;</span> <span class="attr">th:value</span>=<span class="string">&quot;$&#123;dept.getId()&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">label</span>&gt;</span>Birth<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">th:value</span>=<span class="string">&quot;$&#123;#dates.format(emp.getBirth(),&#x27;yyyy-MM-dd HH:mm&#x27;)&#125;&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;Birth&quot;</span> <span class="attr">name</span>=<span class="string">&quot;birth&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-primary&quot;</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span>&gt;</span>提交表单<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span>            </span><br></pre></td></tr></table></figure><ul><li>填写表单后需要控制器处理请求</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//员工信息修改</span></span><br><span class="line"><span class="meta">@PostMapping(&quot;/updateEmp&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">updateEmp</span><span class="params">(Employee employee)</span></span>&#123;</span><br><span class="line">   employeeDao.save((employee));</span><br><span class="line">   <span class="keyword">return</span> <span class="string">&quot;redirect:/emps&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="删除及404操作"><a href="#删除及404操作" class="headerlink" title="删除及404操作"></a>删除及404操作</h1><h2 id="删除员工信息"><a href="#删除员工信息" class="headerlink" title="删除员工信息"></a>删除员工信息</h2><ul><li>首先删除按钮绑定员工ID，传递参数给后端</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/delemp/&#125;+$&#123;emp.getId()&#125;&quot;</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>后端接收员工ID进行删除，删除后跳到员工列表</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//删除员工</span></span><br><span class="line"><span class="meta">@GetMapping(&quot;/emp/&#123;id&#125;&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">delEmp</span><span class="params">(<span class="meta">@PathVariable(&quot;id&quot;)</span> Integer id,Model model)</span></span>&#123;</span><br><span class="line">   employeeDao.delete(id);</span><br><span class="line">   <span class="keyword">return</span> <span class="string">&quot;redirect:/emps&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="注销操作"><a href="#注销操作" class="headerlink" title="注销操作"></a>注销操作</h2><ul><li>前端页面提交注销请求</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;nav-link&quot;</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/user/loginout&#125;&quot;</span>&gt;</span>注销<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>后端移除用户Session，并跳转到登录页面</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//用户注销</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/user/loginout&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">loginout</span><span class="params">(HttpSession session)</span></span>&#123;</span><br><span class="line">   session.invalidate();</span><br><span class="line">   <span class="keyword">return</span> <span class="string">&quot;redirect:/index.html&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="404页面"><a href="#404页面" class="headerlink" title="404页面"></a>404页面</h2><ul><li>在<code>templates</code>文件夹下新建一个<code>error</code>文件夹，新建一个<code>404.html</code></li><li>当发现错误时会自动跳转到404页面</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;展示员工列表&quot;&gt;&lt;a href=&quot;#展示员工列表&quot; class=&quot;headerlink&quot; title=&quot;展示员工列表&quot;&gt;&lt;/a&gt;展示员工列表&lt;/h1&gt;&lt;h2 id=&quot;控制层&quot;&gt;&lt;a href=&quot;#控制层&quot; class=&quot;headerlink&quot; title=&quot;控制层</summary>
      
    
    
    
    <category term="Java后端" scheme="http://xiaoliblog.cn/categories/Java%E5%90%8E%E7%AB%AF/"/>
    
    <category term="SpringBoot" scheme="http://xiaoliblog.cn/categories/Java%E5%90%8E%E7%AB%AF/SpringBoot/"/>
    
    
    <category term="SpringBoot" scheme="http://xiaoliblog.cn/tags/SpringBoot/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot🍃员工管理系统之登录拦截</title>
    <link href="http://xiaoliblog.cn/page/SpringBoot10.html"/>
    <id>http://xiaoliblog.cn/page/SpringBoot10.html</id>
    <published>2021-06-22T11:44:50.051Z</published>
    <updated>2021-06-22T12:57:25.472Z</updated>
    
    <content type="html"><![CDATA[<h1 id="热部署"><a href="#热部署" class="headerlink" title="热部署"></a>热部署</h1><ul><li>热部署，就是在应用正在运行的时候升级软件，却不需要重新启动应用</li><li>SpringBoot热部署就是在项目正在运行的时候修改代码, 却不需要重新启动项目</li></ul><h2 id="配置热部署"><a href="#配置热部署" class="headerlink" title="配置热部署"></a>配置热部署</h2><ul><li>pom文件中导入 <code>spring-boot-devtools</code> 依赖：</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-devtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>继续在pom.xml中添加插件</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">fork</span>&gt;</span>true<span class="tag">&lt;/<span class="name">fork</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">addResources</span>&gt;</span>true<span class="tag">&lt;/<span class="name">addResources</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>设置<code>application.properties</code></li></ul><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#配置项目热部署</span></span><br><span class="line"><span class="meta">spring.devtools.restart.enabled</span>=<span class="string">true</span></span><br></pre></td></tr></table></figure><ul><li>在idea中设置自动编译：</li></ul><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@faf08691318f4e003832ce54cf9f22de94d8c3b1/2021/06/22/1920dbecb59f02595044901846eced46.png"></p><ul><li><p>按住<kbd>ctrl</kbd>+<kbd>shift</kbd>+<kbd>alt</kbd>+<kbd> / </kbd>，出现如下图所示界面，点击Registry（注册）…，如下图：<img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@04df3016a11980061b66917dd18d2f3be038611d/2021/06/22/d21320e0e3a4b52337f3d234ca4b21dd.png"></p></li><li><p> 点击进入后，勾选<code>compiler.automake.allow.when.app.running</code>后关闭即可</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@fb274a58ab33dac06815f77b4dc7ae682f60de07/2021/06/22/347f522d897e4fb7efc8dbd2f0c71098.png"></p><h1 id="登录功能"><a href="#登录功能" class="headerlink" title="登录功能"></a>登录功能</h1><h2 id="控制器"><a href="#控制器" class="headerlink" title="控制器"></a>控制器</h2><ul><li>首先写一个控制器</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoginController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/user/login&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">login</span><span class="params">(String username, String password, Model model)</span></span>&#123;</span><br><span class="line">        <span class="comment">// 具体业务</span></span><br><span class="line">        <span class="keyword">if</span>(username.equals(<span class="string">&quot;admin&quot;</span>) &amp;&amp;  password.equals(<span class="string">&quot;12345&quot;</span>))&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;dashboard&quot;</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            model.addAttribute(<span class="string">&quot;msg&quot;</span>,<span class="string">&quot;用户名或者密码错误&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;index&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>修改前端代码</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">class</span>=<span class="string">&quot;form-signin&quot;</span> <span class="attr">th:action</span>=<span class="string">&quot;@&#123;/user/login&#125;&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--省略--&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--如果msg为空则不显示--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&quot;color:red&quot;</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;msg&#125;&quot;</span> <span class="attr">th:if</span>=<span class="string">&quot;$&#123;not #strings.isEmpty(msg)&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--省略--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>访问后发现成功跳转，但地址栏却没有变化</li></ul><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@4db08156fa4d3b9e4605ffb105b0e1d60851e5c3/2021/06/22/3f3a26df0fc5aa158b2ab336a0e0c5ce.png"></p><h2 id="地址映射"><a href="#地址映射" class="headerlink" title="地址映射"></a>地址映射</h2><ul><li>我们可以取一个假的地址别名，其不是真正的页面而只是一个请求而已</li><li>在我们<code>config</code>下创建的SpringMVC扩展类里添加地址映射</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//扩展springmvc</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyMvcConfig</span> <span class="keyword">implements</span> <span class="title">WebMvcConfigurer</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> LocaleResolver <span class="title">localeResolver</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> MyLocaleResolver();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addViewControllers</span><span class="params">(ViewControllerRegistry registry)</span></span>&#123;</span><br><span class="line">        registry.addViewController(<span class="string">&quot;/&quot;</span>).setViewName(<span class="string">&quot;index&quot;</span>);</span><br><span class="line">        registry.addViewController(<span class="string">&quot;/index.html&quot;</span>).setViewName(<span class="string">&quot;index&quot;</span>);</span><br><span class="line">        <span class="comment">//相当于给dashboard起别名</span></span><br><span class="line">        registry.addViewController(<span class="string">&quot;/main.html&quot;</span>).setViewName(<span class="string">&quot;dashboard&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>控制器中修改为重定向</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoginController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/user/login&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">login</span><span class="params">(String username, String password, Model model)</span></span>&#123;</span><br><span class="line">        <span class="comment">// 具体业务</span></span><br><span class="line">        <span class="keyword">if</span>(username.equals(<span class="string">&quot;admin&quot;</span>) &amp;&amp;  password.equals(<span class="string">&quot;12345&quot;</span>))&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;redirect:/main.html&quot;</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            model.addAttribute(<span class="string">&quot;msg&quot;</span>,<span class="string">&quot;用户名或者密码错误&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;index&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>再次访问就会映射到<code>main.html</code>了</li></ul><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@e42e34813212331a3e7fb29319e795d528cf3766/2021/06/22/88e9b814fdb05572659a9f894b89ec91.png"></p><h1 id="登录拦截"><a href="#登录拦截" class="headerlink" title="登录拦截"></a>登录拦截</h1><ul><li>但是未登录状态下访问<code>http://localhost:8080/main.html</code>照样能进入，这是不合理的，需要配置拦截器</li><li>在<code>config</code>包下新建一个拦截器类</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoginHandlerInterceptor</span> <span class="keyword">implements</span> <span class="title">HandlerInterceptor</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">preHandle</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object handler)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">// 登录成功之后，应该有用户的Session</span></span><br><span class="line">        Object loginUser = request.getSession().getAttribute(<span class="string">&quot;loginUser&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span>(loginUser == <span class="keyword">null</span>)&#123; <span class="comment">//未登录</span></span><br><span class="line">            request.setAttribute(<span class="string">&quot;msg&quot;</span>,<span class="string">&quot;没有权限，请先登录&quot;</span>);</span><br><span class="line">            request.getRequestDispatcher(<span class="string">&quot;/index.html&quot;</span>).forward(request,response);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span>  <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>在<code>config</code>下的SpringMVC扩展中进行设置</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//扩展springmvc</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyMvcConfig</span> <span class="keyword">implements</span> <span class="title">WebMvcConfigurer</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> LocaleResolver <span class="title">localeResolver</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> MyLocaleResolver();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addViewControllers</span><span class="params">(ViewControllerRegistry registry)</span></span>&#123;</span><br><span class="line">        registry.addViewController(<span class="string">&quot;/&quot;</span>).setViewName(<span class="string">&quot;index&quot;</span>);</span><br><span class="line">        registry.addViewController(<span class="string">&quot;/index.html&quot;</span>).setViewName(<span class="string">&quot;index&quot;</span>);</span><br><span class="line">        <span class="comment">//相当于给dashboard起别名</span></span><br><span class="line">        registry.addViewController(<span class="string">&quot;/main.html&quot;</span>).setViewName(<span class="string">&quot;dashboard&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addInterceptors</span><span class="params">(InterceptorRegistry registry)</span></span>&#123;</span><br><span class="line">        registry.addInterceptor(<span class="keyword">new</span> LoginHandlerInterceptor())</span><br><span class="line">                .addPathPatterns(<span class="string">&quot;/**&quot;</span>)</span><br><span class="line">                .excludePathPatterns(<span class="string">&quot;/index.html&quot;</span>,<span class="string">&quot;/&quot;</span>,<span class="string">&quot;/user/login&quot;</span>,<span class="string">&quot;static/**&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>需要在控制器处理时，添加用户Session</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoginController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/user/login&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">login</span><span class="params">(String username, String password, Model model, HttpSession session)</span></span>&#123;</span><br><span class="line">        <span class="comment">// 具体业务</span></span><br><span class="line">        <span class="keyword">if</span>(username.equals(<span class="string">&quot;admin&quot;</span>) &amp;&amp;  password.equals(<span class="string">&quot;12345&quot;</span>))&#123;</span><br><span class="line">            session.setAttribute(<span class="string">&quot;loginUser&quot;</span>,username);</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;redirect:/main.html&quot;</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            model.addAttribute(<span class="string">&quot;msg&quot;</span>,<span class="string">&quot;用户名或者密码错误&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;index&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>登陆后用户名显示</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span>&gt;</span>[[$&#123;session.loginUser&#125;]]<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;热部署&quot;&gt;&lt;a href=&quot;#热部署&quot; class=&quot;headerlink&quot; title=&quot;热部署&quot;&gt;&lt;/a&gt;热部署&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;热部署，就是在应用正在运行的时候升级软件，却不需要重新启动应用&lt;/li&gt;
&lt;li&gt;SpringBoot热部署就是在项目正</summary>
      
    
    
    
    <category term="Java后端" scheme="http://xiaoliblog.cn/categories/Java%E5%90%8E%E7%AB%AF/"/>
    
    <category term="SpringBoot" scheme="http://xiaoliblog.cn/categories/Java%E5%90%8E%E7%AB%AF/SpringBoot/"/>
    
    
    <category term="SpringBoot" scheme="http://xiaoliblog.cn/tags/SpringBoot/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot🍃员工管理系统准备及国际化</title>
    <link href="http://xiaoliblog.cn/page/SpringBoot09.html"/>
    <id>http://xiaoliblog.cn/page/SpringBoot09.html</id>
    <published>2021-06-22T08:33:52.422Z</published>
    <updated>2021-06-23T08:19:51.524Z</updated>
    
    <content type="html"><![CDATA[<h1 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h1><h2 id="静态资源"><a href="#静态资源" class="headerlink" title="静态资源"></a>静态资源</h2><ul><li>HTML页面放入<code>templates</code>文件夹下</li><li>CSS、JS、图片等放在<code>static</code>文件夹下</li></ul><h2 id="数据准备"><a href="#数据准备" class="headerlink" title="数据准备"></a>数据准备</h2><ul><li>这里未使用数据库，需要伪造数据。首先创建实体类</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 部门表</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Department</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String departmentName;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 员工表</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Employee</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String lastName;</span><br><span class="line">    <span class="keyword">private</span> String email;</span><br><span class="line">    <span class="keyword">private</span> Integer gender; <span class="comment">//0：女 1：男</span></span><br><span class="line">    <span class="keyword">private</span> Department department;</span><br><span class="line">    <span class="keyword">private</span> Date birth;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Employee</span><span class="params">(Integer id, String lastName, String email, Integer gender, Department department, Date birth)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">        <span class="keyword">this</span>.lastName = lastName;</span><br><span class="line">        <span class="keyword">this</span>.email = email;</span><br><span class="line">        <span class="keyword">this</span>.gender = gender;</span><br><span class="line">        <span class="keyword">this</span>.department = department;</span><br><span class="line">        <span class="comment">// 默认创建日期</span></span><br><span class="line">        <span class="keyword">this</span>.birth = <span class="keyword">new</span> Date();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>在Dao层模拟数据库数据</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 部门Dao</span></span><br><span class="line"><span class="meta">@Repository</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DepartmentDao</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 模拟数据库中的数据</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Map&lt;Integer, Department&gt; departmentmap = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        departmentmap = <span class="keyword">new</span> HashMap&lt;&gt;(); <span class="comment">//创建一个部门表</span></span><br><span class="line">        departmentmap.put(<span class="number">101</span>,<span class="keyword">new</span> Department(<span class="number">101</span>,<span class="string">&quot;教学部&quot;</span>));</span><br><span class="line">        departmentmap.put(<span class="number">102</span>,<span class="keyword">new</span> Department(<span class="number">102</span>,<span class="string">&quot;市场部&quot;</span>));</span><br><span class="line">        departmentmap.put(<span class="number">103</span>,<span class="keyword">new</span> Department(<span class="number">103</span>,<span class="string">&quot;教研部&quot;</span>));</span><br><span class="line">        departmentmap.put(<span class="number">104</span>,<span class="keyword">new</span> Department(<span class="number">104</span>,<span class="string">&quot;运营部&quot;</span>));</span><br><span class="line">        departmentmap.put(<span class="number">105</span>,<span class="keyword">new</span> Department(<span class="number">105</span>,<span class="string">&quot;后勤部&quot;</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取所有部门学校</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Collection&lt;Department&gt; <span class="title">getDepartments</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> departmentmap.values();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 通过id得到部门</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Department <span class="title">getDepartmentByID</span><span class="params">(Integer id)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> departmentmap.get(id);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 员工Deao</span></span><br><span class="line"><span class="meta">@Repository</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EmployeeDao</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 模拟数据库中的数据</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Map&lt;Integer, Employee&gt; employeeMap = <span class="keyword">null</span>;</span><br><span class="line">    <span class="comment">// 员工有所属的部门</span></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> DepartmentDao departmentDao;</span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        employeeMap = <span class="keyword">new</span> HashMap&lt;&gt;(); <span class="comment">//创建一个员工表</span></span><br><span class="line">        employeeMap.put(<span class="number">101</span>,<span class="keyword">new</span> Employee(<span class="number">101</span>,<span class="string">&quot;张三&quot;</span>,<span class="string">&quot;A247312312@qq.com&quot;</span>,<span class="number">1</span>,<span class="keyword">new</span> Department(<span class="number">101</span>,<span class="string">&quot;教学部&quot;</span>),<span class="keyword">new</span> Date()));</span><br><span class="line">        employeeMap.put(<span class="number">102</span>,<span class="keyword">new</span> Employee(<span class="number">102</span>,<span class="string">&quot;李四&quot;</span>,<span class="string">&quot;B247312312@qq.com&quot;</span>,<span class="number">0</span>,<span class="keyword">new</span> Department(<span class="number">102</span>,<span class="string">&quot;市场部&quot;</span>),<span class="keyword">new</span> Date()));</span><br><span class="line">        employeeMap.put(<span class="number">103</span>,<span class="keyword">new</span> Employee(<span class="number">103</span>,<span class="string">&quot;王五&quot;</span>,<span class="string">&quot;C247312312@qq.com&quot;</span>,<span class="number">1</span>,<span class="keyword">new</span> Department(<span class="number">103</span>,<span class="string">&quot;教研部&quot;</span>),<span class="keyword">new</span> Date()));</span><br><span class="line">        employeeMap.put(<span class="number">104</span>,<span class="keyword">new</span> Employee(<span class="number">104</span>,<span class="string">&quot;赵六&quot;</span>,<span class="string">&quot;D247312312@qq.com&quot;</span>,<span class="number">0</span>,<span class="keyword">new</span> Department(<span class="number">104</span>,<span class="string">&quot;运营部&quot;</span>),<span class="keyword">new</span> Date()));</span><br><span class="line">        employeeMap.put(<span class="number">105</span>,<span class="keyword">new</span> Employee(<span class="number">105</span>,<span class="string">&quot;老白&quot;</span>,<span class="string">&quot;E247312312@qq.com&quot;</span>,<span class="number">1</span>,<span class="keyword">new</span> Department(<span class="number">105</span>,<span class="string">&quot;后勤部&quot;</span>),<span class="keyword">new</span> Date()));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 增加一个员工，主键自增</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Integer initID = <span class="number">1006</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save</span><span class="params">(Employee employee)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(employee.getId() == <span class="keyword">null</span>)&#123;</span><br><span class="line">            employee.setId(initID++);</span><br><span class="line">        &#125;</span><br><span class="line">        employee.setDepartment(departmentDao.getDepartmentByID(employee.getDepartment().getId()));</span><br><span class="line">        employeeMap.put(employee.getId(),employee);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 获得查询全部员工信息</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Collection&lt;Employee&gt; <span class="title">getAll</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> employeeMap.values();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//通过ID查询员工</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Employee <span class="title">getEmployeeByID</span><span class="params">(Integer id)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> employeeMap.get(id);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 删除员工通过id</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">delete</span><span class="params">(Integer id)</span></span>&#123;</span><br><span class="line">        employeeMap.remove(id);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="首页实现"><a href="#首页实现" class="headerlink" title="首页实现"></a>首页实现</h1><h2 id="视图跳转"><a href="#视图跳转" class="headerlink" title="视图跳转"></a>视图跳转</h2><ul><li>视图跳转有两种实现方式，第一种是写一个<code>Controller</code>进行跳转</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">IndexController</span> </span>&#123;</span><br><span class="line">   <span class="comment">//  /和/index.html都映射到首页，但不建议用这种方法实现</span></span><br><span class="line">    <span class="meta">@RequestMapping(&#123;&quot;/&quot;,&quot;/index.html&quot;&#125;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">index</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;index&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>第二种方法是写一个<code>/config</code>包下的扩展SpringMVC</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//扩展springmvc</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyMvcConfig</span> <span class="keyword">implements</span> <span class="title">WebMvcConfigurer</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addViewControllers</span><span class="params">(ViewControllerRegistry registry)</span></span>&#123;</span><br><span class="line">        registry.addViewController(<span class="string">&quot;/&quot;</span>).setViewName(<span class="string">&quot;index&quot;</span>);</span><br><span class="line">        registry.addViewController(<span class="string">&quot;/index.html&quot;</span>).setViewName(<span class="string">&quot;index&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="静态资源-1"><a href="#静态资源-1" class="headerlink" title="静态资源"></a>静态资源</h2><ul><li>打开页面发现静态资源加载不出来，这是因为<code>Thymeleaf</code>没配好</li><li>首先要配置约束头</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span> <span class="attr">xmlns:th</span>=<span class="string">&quot;http://www.thymeleaf.org&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>URL静态资源的引入，首先<code>@&#123;/&#125;</code>就代表资源根目录，其用于定义URL，比如<code>/static/</code></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--/static/css/..--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/css/bootstrap.min.css&#125;&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>如果页面还是没有效果，可能是模板引擎缓存的影响，可以在配置文件中去掉缓存</li></ul><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">spring.thymeleaf.cache</span>=<span class="string">false</span></span><br></pre></td></tr></table></figure><ul><li>图片的引入也是一样，属性前加<code>th:</code>即可</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">th:src</span>=<span class="string">&quot;@&#123;/img/bootstrap-solid.svg&#125;&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><div class="note success simple"><p><strong>在线链接不需要加<code>th:</code></strong></p></div><ul><li><code>@&#123;/&#125;</code>是万能匹配的，比如更改项目虚拟路径</li></ul><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">server.servlet.context-path</span>=<span class="string">/lzy</span></span><br></pre></td></tr></table></figure><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@6146ca57b0ecfab9c10cd09321913443093add33/2021/06/22/ccb552fb0770d4ab90bc124ab81e72c7.png" width="80%"><h1 id="国际化"><a href="#国际化" class="headerlink" title="国际化"></a>国际化</h1><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ul><li>先在IDEA中统一设置<code>properties</code>的编码问题！确保为<code>UTF-8</code></li></ul><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@e1d8743bbfe129388d432d36968252e4e5b07250/2021/06/22/b38d12edb6fb89c4859413d429a852db.png" width="100%"><ul><li>编写国际化配置文件，抽取页面需要显示的国际化页面消息。我们可以去登录页面查看一下，哪些内容我们需要编写国际化的配置！</li></ul><h2 id="配置文件编写"><a href="#配置文件编写" class="headerlink" title="配置文件编写"></a>配置文件编写</h2><ul><li>在<code>resources</code>资源文件下新建一个<code>i18n</code>目录，存放国际化配置文件</li><li>建立一个<code>login.properties</code>文件，还有一个<code>login_zh_CN.properties</code>；发现IDEA自动识别了我们要做国际化操作；文件夹变了！</li></ul><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@05b305796fc369bc04a039b8fe6f8eff67e90f53/2021/06/22/12390d515e5fa815fbff2f3e8375468d.png"></p><ul><li>可以在这资源包上面去新建一个文件；</li></ul><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@14ccd343a0828a5937c5466b99062511c6575755/2021/06/22/df2764f950c56545d5d8a550c0bccf2c.png"></p><ul><li>弹出如下页面：再添加一个英文的；</li></ul><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@8dd692fd56097d22caf47f754bd17e57da7e07ad/2021/06/22/f36b3a40a9366eda72f6e4639d450992.png"></p><ul><li>这样就快多了</li></ul><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@5cdbcc3bbcb08af75ecf938ef7b01d8da66c6580/2021/06/22/644efbafc744b51d3da7047a1a07cf77.png"></p><ul><li>接下来，我们就来编写配置，我们可以看到idea编辑区左下面有另外一个视图；</li></ul><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@42f99570d9487758a145fd2bbd9e0c4eabcfdff5/2021/06/22/9ddf7bb5186379fb099c725db0430aff.png"></p><ul><li>这个视图我们点击 <code>+</code> 号就可以直接添加属性了；我们新建一个<code>login.tip</code>，可以看到边上有三个文件框可以输入</li></ul><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@c86891070ed953d7f5ed77b53ad5665def3adbad/2021/06/22/3ebea77661a0c92ab259ae57a72d7727.png"></p><ul><li>然后依次添加其他页面内容即可！</li></ul><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@e37c5aad1c7eeb5310056ba60c5074d17e9a68dc/2021/06/22/c3d011f10c2f911a9d16287fdf886c5c.png"></p><ul><li>然后去查看我们的配置文件；</li></ul><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># login.properties(默认)</span></span><br><span class="line"><span class="meta">login.btn</span>=<span class="string">请登录</span></span><br><span class="line"><span class="meta">login.passwod</span>=<span class="string">密码</span></span><br><span class="line"><span class="meta">login.remember</span>=<span class="string">记住我</span></span><br><span class="line"><span class="meta">login.tip</span>=<span class="string">请登录</span></span><br><span class="line"><span class="meta">login.username</span>=<span class="string">用户名</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># login_en_US.properties(英文)</span></span><br><span class="line"><span class="meta">login.btn</span>=<span class="string">Sign in</span></span><br><span class="line"><span class="meta">login.passwod</span>=<span class="string">Password</span></span><br><span class="line"><span class="meta">login.remember</span>=<span class="string">Remember me</span></span><br><span class="line"><span class="meta">login.tip</span>=<span class="string">Please sign in</span></span><br><span class="line"><span class="meta">login.username</span>=<span class="string">Username</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># login_zh_CN.properties(中文)</span></span><br><span class="line"><span class="meta">login.btn</span>=<span class="string">请登录</span></span><br><span class="line"><span class="meta">login.passwod</span>=<span class="string">密码</span></span><br><span class="line"><span class="meta">login.remember</span>=<span class="string">记住我</span></span><br><span class="line"><span class="meta">login.tip</span>=<span class="string">请登录</span></span><br><span class="line"><span class="meta">login.username</span>=<span class="string">用户名</span></span><br></pre></td></tr></table></figure><h2 id="配置文件生效探究"><a href="#配置文件生效探究" class="headerlink" title="配置文件生效探究"></a>配置文件生效探究</h2><ul><li>我们去看一下SpringBoot对国际化的自动配置！这里又涉及到一个类：<code>MessageSourceAutoConfiguration</code></li><li>里面有一个方法，这里发现SpringBoot已经自动配置好了管理我们国际化资源文件的组件 <code>ResourceBundleMessageSource</code></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取 properties 传递过来的值进行判断</span></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> MessageSource <span class="title">messageSource</span><span class="params">(MessageSourceProperties properties)</span> </span>&#123;</span><br><span class="line">    ResourceBundleMessageSource messageSource = <span class="keyword">new</span> ResourceBundleMessageSource();</span><br><span class="line">    <span class="keyword">if</span> (StringUtils.hasText(properties.getBasename())) &#123;</span><br><span class="line">        <span class="comment">// 设置国际化文件的基础名（去掉语言国家代码的）</span></span><br><span class="line">        messageSource.setBasenames(</span><br><span class="line">            StringUtils.commaDelimitedListToStringArray(</span><br><span class="line">                                       StringUtils.trimAllWhitespace(properties.getBasename())));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (properties.getEncoding() != <span class="keyword">null</span>) &#123;</span><br><span class="line">        messageSource.setDefaultEncoding(properties.getEncoding().name());</span><br><span class="line">    &#125;</span><br><span class="line">    messageSource.setFallbackToSystemLocale(properties.isFallbackToSystemLocale());</span><br><span class="line">    Duration cacheDuration = properties.getCacheDuration();</span><br><span class="line">    <span class="keyword">if</span> (cacheDuration != <span class="keyword">null</span>) &#123;</span><br><span class="line">        messageSource.setCacheMillis(cacheDuration.toMillis());</span><br><span class="line">    &#125;</span><br><span class="line">    messageSource.setAlwaysUseMessageFormat(properties.isAlwaysUseMessageFormat());</span><br><span class="line">    messageSource.setUseCodeAsDefaultMessage(properties.isUseCodeAsDefaultMessage());</span><br><span class="line">    <span class="keyword">return</span> messageSource;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>我们真实 的情况是放在了<code>i18n</code>目录下，所以我们要去配置这个<code>messages</code>的路径；</li></ul><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">spring.messages.basename</span>=<span class="string">i18n.login</span></span><br></pre></td></tr></table></figure><h2 id="配置页面国际化值"><a href="#配置页面国际化值" class="headerlink" title="配置页面国际化值"></a>配置页面国际化值</h2><ul><li>去页面获取国际化的值，查看Thymeleaf的文档，找到message取值操作为：<code>#&#123;...&#125;</code>。我们去页面测试下：</li></ul><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@0030722222d13602ce99ec8d8df87e06e6bfd5f5/2021/06/22/c3984fa2a1f47984839a0e3469b49fbd.png"></p><ul><li>去启动项目，访问一下，发现已经自动识别为中文的了！</li></ul><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@946c964ba21e30475e12c83bd7ab6dd000f6d085/2021/06/22/ca6e98629adbc8262638f2b48e94641c.png"></p><ul><li>但是我们需要可以根据按钮自动切换中文英文！</li></ul><h2 id="配置国际化解析"><a href="#配置国际化解析" class="headerlink" title="配置国际化解析"></a>配置国际化解析</h2><ul><li>在Spring中有一个国际化的<code>Locale</code> （区域信息对象）；里面有一个叫做<code>LocaleResolver</code> （获取区域信息对象）的解析器！</li><li>我们去我们webmvc自动配置文件，寻找一下！看到SpringBoot默认配置：</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="meta">@ConditionalOnMissingBean</span></span><br><span class="line"><span class="meta">@ConditionalOnProperty(prefix = &quot;spring.mvc&quot;, name = &quot;locale&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> LocaleResolver <span class="title">localeResolver</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 容器中没有就自己配，有的话就用用户配置的</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>.mvcProperties.getLocaleResolver() == WebMvcProperties.LocaleResolver.FIXED) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> FixedLocaleResolver(<span class="keyword">this</span>.mvcProperties.getLocale());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 接收头国际化分解</span></span><br><span class="line">    AcceptHeaderLocaleResolver localeResolver = <span class="keyword">new</span> AcceptHeaderLocaleResolver();</span><br><span class="line">    localeResolver.setDefaultLocale(<span class="keyword">this</span>.mvcProperties.getLocale());</span><br><span class="line">    <span class="keyword">return</span> localeResolver;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><code>AcceptHeaderLocaleResolver</code> 这个类中有一个方法</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> Locale <span class="title">resolveLocale</span><span class="params">(HttpServletRequest request)</span> </span>&#123;</span><br><span class="line">    Locale defaultLocale = <span class="keyword">this</span>.getDefaultLocale();</span><br><span class="line">    <span class="comment">// 默认的就是根据请求头带来的区域信息获取Locale进行国际化</span></span><br><span class="line">    <span class="keyword">if</span> (defaultLocale != <span class="keyword">null</span> &amp;&amp; request.getHeader(<span class="string">&quot;Accept-Language&quot;</span>) == <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> defaultLocale;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        Locale requestLocale = request.getLocale();</span><br><span class="line">        List&lt;Locale&gt; supportedLocales = <span class="keyword">this</span>.getSupportedLocales();</span><br><span class="line">        <span class="keyword">if</span> (!supportedLocales.isEmpty() &amp;&amp; !supportedLocales.contains(requestLocale)) &#123;</span><br><span class="line">            Locale supportedLocale = <span class="keyword">this</span>.findSupportedLocale(request, supportedLocales);</span><br><span class="line">            <span class="keyword">if</span> (supportedLocale != <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> supportedLocale;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> defaultLocale != <span class="keyword">null</span> ? defaultLocale : requestLocale;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> requestLocale;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>那假如我们现在想点击链接让我们的国际化资源生效，就需要让我们自己的Locale生效！</li><li>写一个自己的<code>LocaleResolver</code>，可以在链接上携带区域信息！</li><li>修改一下前端页面的跳转连接：</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 这里传入参数不需要使用 ？使用 （key=value）--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-sm&quot;</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/index.html(l=&#x27;zh_CN&#x27;)&#125;&quot;</span>&gt;</span>中文<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-sm&quot;</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/index.html(l=&#x27;en_US&#x27;)&#125;&quot;</span>&gt;</span>English<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>写一个处理的组件类！比如在<code>config</code>包下新建一个<code>MyLocaleResolver</code>类·</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//可以在链接上携带区域信息</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyLocaleResolver</span> <span class="keyword">implements</span> <span class="title">LocaleResolver</span> </span>&#123;</span><br><span class="line">    <span class="comment">//解析请求</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Locale <span class="title">resolveLocale</span><span class="params">(HttpServletRequest request)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 获取请求中的语言参数</span></span><br><span class="line">        String language = request.getParameter(<span class="string">&quot;l&quot;</span>);</span><br><span class="line">        Locale locale = Locale.getDefault(); <span class="comment">// 如果没有获取到就使用系统默认的</span></span><br><span class="line">        <span class="comment">//如果请求链接不为空</span></span><br><span class="line">        <span class="keyword">if</span> (!StringUtils.isEmpty(language))&#123;</span><br><span class="line">            <span class="comment">//分割请求参数</span></span><br><span class="line">            String[] split = language.split(<span class="string">&quot;_&quot;</span>);</span><br><span class="line">            <span class="comment">//国家，地区</span></span><br><span class="line">            locale = <span class="keyword">new</span> Locale(split[<span class="number">0</span>],split[<span class="number">1</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> locale;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setLocale</span><span class="params">(HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse, Locale locale)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>为了让我们的区域化信息能够生效，我们需要再配置一下这个组件！在我们自己的<code>MvcConofig</code>下添加<code>bean</code>；</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//扩展springmvc</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyMvcConfig</span> <span class="keyword">implements</span> <span class="title">WebMvcConfigurer</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> LocaleResolver <span class="title">localeResolver</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> MyLocaleResolver();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addViewControllers</span><span class="params">(ViewControllerRegistry registry)</span></span>&#123;</span><br><span class="line">        registry.addViewController(<span class="string">&quot;/&quot;</span>).setViewName(<span class="string">&quot;index&quot;</span>);</span><br><span class="line">        registry.addViewController(<span class="string">&quot;/index.html&quot;</span>).setViewName(<span class="string">&quot;index&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>重启项目，来访问一下，发现点击按钮可以实现成功切换!</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;环境准备&quot;&gt;&lt;a href=&quot;#环境准备&quot; class=&quot;headerlink&quot; title=&quot;环境准备&quot;&gt;&lt;/a&gt;环境准备&lt;/h1&gt;&lt;h2 id=&quot;静态资源&quot;&gt;&lt;a href=&quot;#静态资源&quot; class=&quot;headerlink&quot; title=&quot;静态资源&quot;&gt;&lt;/a</summary>
      
    
    
    
    <category term="Java后端" scheme="http://xiaoliblog.cn/categories/Java%E5%90%8E%E7%AB%AF/"/>
    
    <category term="SpringBoot" scheme="http://xiaoliblog.cn/categories/Java%E5%90%8E%E7%AB%AF/SpringBoot/"/>
    
    
    <category term="SpringBoot" scheme="http://xiaoliblog.cn/tags/SpringBoot/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot🍃MVC自动配置原理</title>
    <link href="http://xiaoliblog.cn/page/SpringBoot08.html"/>
    <id>http://xiaoliblog.cn/page/SpringBoot08.html</id>
    <published>2021-06-22T06:33:13.807Z</published>
    <updated>2021-06-22T08:28:25.698Z</updated>
    
    <content type="html"><![CDATA[<h1 id="MVC自动配置原理"><a href="#MVC自动配置原理" class="headerlink" title="MVC自动配置原理"></a>MVC自动配置原理</h1><h2 id="官网阅读"><a href="#官网阅读" class="headerlink" title="官网阅读"></a>官网阅读</h2><ul><li>在进行项目编写前，我们还需要知道一个东西，就是SpringBoot对我们的SpringMVC还做了哪些配置，包括如何扩展，如何定制</li><li>我们可以源码分析，或者阅读<a href="https://docs.spring.io/spring-boot/docs/2.2.5.RELEASE/reference/htmlsingle/#boot-features-spring-mvc-auto-configuration">官方文档</a>进行学习</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">Spring MVC Auto-configuration</span><br><span class="line"><span class="comment">// Spring Boot为Spring MVC提供了自动配置，它可以很好地与大多数应用程序一起工作。</span></span><br><span class="line">Spring Boot provides auto-configuration <span class="keyword">for</span> Spring MVC that works well with most applications.</span><br><span class="line"><span class="comment">// 自动配置在Spring默认设置的基础上添加了以下功能：</span></span><br><span class="line">The auto-configuration adds the following features on top of Spring’s defaults:</span><br><span class="line"><span class="comment">// 包含视图解析器</span></span><br><span class="line">Inclusion of ContentNegotiatingViewResolver and BeanNameViewResolver beans.</span><br><span class="line"><span class="comment">// 支持静态资源文件夹的路径，以及webjars</span></span><br><span class="line">Support <span class="keyword">for</span> serving <span class="keyword">static</span> resources, including support <span class="keyword">for</span> WebJars </span><br><span class="line"><span class="comment">// 自动注册了Converter：</span></span><br><span class="line"><span class="comment">// 转换器，这就是我们网页提交数据到后台自动封装成为对象的东西，比如把&quot;1&quot;字符串自动转换为int类型</span></span><br><span class="line"><span class="comment">// Formatter：【格式化器，比如页面给我们了一个2019-8-10，它会给我们自动格式化为Date对象】</span></span><br><span class="line">Automatic registration of Converter, GenericConverter, and Formatter beans.</span><br><span class="line"><span class="comment">// HttpMessageConverters</span></span><br><span class="line"><span class="comment">// SpringMVC用来转换Http请求和响应的的，比如我们要把一个User对象转换为JSON字符串，可以去看官网文档解释；</span></span><br><span class="line"><span class="function">Support <span class="keyword">for</span> <span class="title">HttpMessageConverters</span> <span class="params">(covered later in <span class="keyword">this</span> document)</span>.</span></span><br><span class="line"><span class="function"><span class="comment">// 定义错误代码生成规则的</span></span></span><br><span class="line"><span class="function">Automatic registration of <span class="title">MessageCodesResolver</span> <span class="params">(covered later in <span class="keyword">this</span> document)</span>.</span></span><br><span class="line"><span class="function"><span class="comment">// 首页定制</span></span></span><br><span class="line"><span class="function">Static index.html support.</span></span><br><span class="line"><span class="function"><span class="comment">// 图标定制</span></span></span><br><span class="line"><span class="function">Custom Favicon <span class="title">support</span> <span class="params">(covered later in <span class="keyword">this</span> document)</span>.</span></span><br><span class="line"><span class="function"><span class="comment">// 初始化数据绑定器：帮我们把请求数据绑定到JavaBean中！</span></span></span><br><span class="line"><span class="function">Automatic use of a ConfigurableWebBindingInitializer <span class="title">bean</span> <span class="params">(covered later in <span class="keyword">this</span> document)</span>.</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="comment">/*</span></span></span><br><span class="line"><span class="function"><span class="comment">如果您希望保留Spring Boot MVC功能，并且希望添加其他MVC配置（拦截器、格式化程序、视图控制器和其他功能），则可以添加自己</span></span></span><br><span class="line"><span class="function"><span class="comment">的@configuration类，类型为webmvcconfiguer，但不添加@EnableWebMvc。如果希望提供</span></span></span><br><span class="line"><span class="function"><span class="comment">RequestMappingHandlerMapping、RequestMappingHandlerAdapter或ExceptionHandlerExceptionResolver的自定义</span></span></span><br><span class="line"><span class="function"><span class="comment">实例，则可以声明WebMVCregistrationAdapter实例来提供此类组件。</span></span></span><br><span class="line"><span class="function"><span class="comment">*/</span></span></span><br><span class="line"><span class="function">If you want to keep Spring Boot MVC features and you want to add additional MVC configuration </span></span><br><span class="line"><span class="function"><span class="params">(interceptors, formatters, view controllers, and other features)</span>, you can add your own </span></span><br><span class="line"><span class="function">@Configuration class of type WebMvcConfigurer but without @EnableWebMvc. If you wish to provide </span></span><br><span class="line"><span class="function">custom instances of RequestMappingHandlerMapping, RequestMappingHandlerAdapter, or </span></span><br><span class="line"><span class="function">ExceptionHandlerExceptionResolver, you can declare a WebMvcRegistrationsAdapter instance to provide such components.</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="comment">// 如果您想完全控制Spring MVC，可以添加自己的@Configuration，并用@EnableWebMvc进行注释。</span></span></span><br><span class="line"><span class="function">If you want to take complete control of Spring MVC, you can add your own @Configuration annotated with @EnableWebMvc.</span></span><br></pre></td></tr></table></figure><h2 id="内容协商视图解析器"><a href="#内容协商视图解析器" class="headerlink" title="内容协商视图解析器"></a>内容协商视图解析器</h2><ul><li>SpringBoot自动配置了ViewResolver，也就是SpringMVC的视图解析器；即根据方法的返回值取得视图对象（View），然后由视图对象决定如何渲染（转发，重定向）</li><li>找到 WebMvcAutoConfiguration ， 然后搜索<code>ContentNegotiatingViewResolver</code>。找到如下方法</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="meta">@ConditionalOnBean(ViewResolver.class)</span></span><br><span class="line"><span class="meta">@ConditionalOnMissingBean(name = &quot;viewResolver&quot;, value = ContentNegotiatingViewResolver.class)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> ContentNegotiatingViewResolver <span class="title">viewResolver</span><span class="params">(BeanFactory beanFactory)</span> </span>&#123;</span><br><span class="line">    ContentNegotiatingViewResolver resolver = <span class="keyword">new</span> ContentNegotiatingViewResolver();</span><br><span class="line">    resolver.setContentNegotiationManager(beanFactory.getBean(ContentNegotiationManager.class));</span><br><span class="line">    <span class="comment">// ContentNegotiatingViewResolver使用所有其他视图解析器来定位视图，因此它应该具有较高的优先级</span></span><br><span class="line">    resolver.setOrder(Ordered.HIGHEST_PRECEDENCE);</span><br><span class="line">    <span class="keyword">return</span> resolver;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>可以点进这类看看！找到对应的解析视图的代码；</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@Nullable</span> <span class="comment">// 注解说明：@Nullable 即参数可为null</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> View <span class="title">resolveViewName</span><span class="params">(String viewName, Locale locale)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    RequestAttributes attrs = RequestContextHolder.getRequestAttributes();</span><br><span class="line">    Assert.state(attrs <span class="keyword">instanceof</span> ServletRequestAttributes, <span class="string">&quot;No current ServletRequestAttributes&quot;</span>);</span><br><span class="line">    List&lt;MediaType&gt; requestedMediaTypes = <span class="keyword">this</span>.getMediaTypes(((ServletRequestAttributes)attrs).getRequest());</span><br><span class="line">    <span class="keyword">if</span> (requestedMediaTypes != <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="comment">// 获取候选的视图对象</span></span><br><span class="line">        List&lt;View&gt; candidateViews = <span class="keyword">this</span>.getCandidateViews(viewName, locale, requestedMediaTypes);</span><br><span class="line">        <span class="comment">// 选择一个最适合的视图对象，然后把这个对象返回</span></span><br><span class="line">        View bestView = <span class="keyword">this</span>.getBestView(candidateViews, requestedMediaTypes, attrs);</span><br><span class="line">        <span class="keyword">if</span> (bestView != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> bestView;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// .....</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>继续点进去看，他是怎么获得候选的视图的呢？<code>getCandidateViews</code>中看到他是把所有的视图解析器拿来，进行<code>while</code>循环，挨个解析！</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Iterator var5 = <span class="keyword">this</span>.viewResolvers.iterator();</span><br></pre></td></tr></table></figure><div class="note success simple"><p><strong>得出结论：<code>ContentNegotiatingViewResolver</code> 这个视图解析器就是用来组合所有的视图解析器的</strong></p></div><ul><li>再去研究下他的组合逻辑，看到有个属性<code>viewResolvers</code>，看看它是在哪里进行赋值的！</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">initServletContext</span><span class="params">(ServletContext servletContext)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 这里它是从beanFactory工具中获取容器中的所有视图解析器</span></span><br><span class="line">    <span class="comment">// ViewRescolver.class 把所有的视图解析器来组合的</span></span><br><span class="line">    Collection&lt;ViewResolver&gt; matchingBeans = BeanFactoryUtils.beansOfTypeIncludingAncestors(<span class="keyword">this</span>.obtainApplicationContext(), ViewResolver.class).values();</span><br><span class="line">    ViewResolver viewResolver;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>.viewResolvers == <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">this</span>.viewResolvers = <span class="keyword">new</span> ArrayList(matchingBeans.size());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// ...............</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>既然它是在容器中去找视图解析器，我们是否可以猜想，我们就可以去实现一个视图解析器了呢？</li><li>我们可以自己给容器中去添加一个视图解析器；这个类就会帮我们自动的将它组合进来；我们去实现一下</li><li>创建一个<code>MyMvcConfig</code>的类</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//扩展springmvc</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyMvcConfig</span> <span class="keyword">implements</span> <span class="title">WebMvcConfigurer</span> </span>&#123;</span><br><span class="line">    <span class="comment">//Bean放入Spring</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ViewResolver <span class="title">myViewResolver</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> MyViewResolver();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//自定义一个自己的视图解析器MyViewResolver</span></span><br><span class="line">    <span class="comment">//我们写一个静态内部类，视图解析器就需要实现ViewResolver接口</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">MyViewResolver</span> <span class="keyword">implements</span> <span class="title">ViewResolver</span></span>&#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> View <span class="title">resolveViewName</span><span class="params">(String s, Locale locale)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>然后通过<code>Ctrl + N</code>搜索<code>dispatcherServlet</code>源码，找到<code>doDispatch</code>点进去打个断点。因为每个请求都经过<code>doDispatch</code></li></ul><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@1fe9baec2f6fd8367c5f169e131d77d72cf6925a/2021/06/22/44537c89bc9cdf02ea768c91b81e4087.png"></p><ul><li>打好断点后进行<code>debug</code>，重启后随便访问一个页面，查看控制台输出</li></ul><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@4d4d38523b162aa7b48444d6ae0f6524670686ed/2021/06/22/0191ef06d5623747c6587ef5b0b62997.png"></p><ul><li>找到视图解析器<code>ViewResolver</code>,到我们自己定义的就在这里了；</li></ul><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@6d4b150d78ba23cd5a05a2f39bea65f2ddf2e711/2021/06/22/8a78a7d35ca2fef143840352ac61b880.png"></p><ul><li>所以说，我们如果想要使用自己定制化的东西，我们只需要给Spring容器中添加这个组件(Bean)就好了！剩下的事情SpringBoot就会帮我们做了！</li></ul><h2 id="转换器和格式化器"><a href="#转换器和格式化器" class="headerlink" title="转换器和格式化器"></a>转换器和格式化器</h2><ul><li><code>Ctrl+N</code>搜索<code>WebMvcAutoConfiguration</code>找到格式化转换器：</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> FormattingConversionService <span class="title">mvcConversionService</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 拿到配置文件中的格式化规则</span></span><br><span class="line">    WebConversionService conversionService = </span><br><span class="line">        <span class="keyword">new</span> WebConversionService(<span class="keyword">this</span>.mvcProperties.getDateFormat());</span><br><span class="line">    addFormatters(conversionService);</span><br><span class="line">    <span class="keyword">return</span> conversionService;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>点开<code>mvcProperties</code>，再点开<code>WebMvcProperties</code>：</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* Date format to use. For instance, `dd/MM/yyyy`. 默认的</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> String dateFormat;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getDateFormat</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.dateFormat;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Deprecated</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setDateFormat</span><span class="params">(String dateFormat)</span> </span>&#123;</span><br><span class="line">   <span class="keyword">this</span>.format.setDate(dateFormat);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>可以看到在我们的<code>Properties</code>文件中，我们可以进行自动配置它！</li><li>如果配置了自己的格式化方式，就会注册到<code>Bean</code>中生效，我们可以在配置文件中配置日期格式化的规则：</li></ul><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">mvc:</span></span><br><span class="line">    <span class="attr">format:</span></span><br><span class="line">      <span class="attr">date:</span> <span class="string">dd/MM/yyyy</span></span><br></pre></td></tr></table></figure><h1 id="扩展SpringMVC"><a href="#扩展SpringMVC" class="headerlink" title="扩展SpringMVC"></a>扩展SpringMVC</h1><h2 id="修改默认配置"><a href="#修改默认配置" class="headerlink" title="修改默认配置"></a>修改默认配置</h2><ul><li>这么多的自动配置，原理都是一样的，通过这个<code>WebMVC</code>的自动配置原理分析，我们要学会一种学习方式，通过源码探究，得出结论；这个结论一定是属于自己的，而且一通百通。</li><li>SpringBoot的底层，大量用到了这些设计细节思想，所以，没事需要多阅读源码！得出结论；</li><li>SpringBoot在自动配置很多组件的时候，先看容器中有没有用户自己配置的（如果用户自己配置<code>@bean</code>），如果有就用用户配置的，如果没有就用自动配置的；</li><li>如果有些组件可以存在多个，比如我们的视图解析器，就将用户配置的和自己默认的组合起来！</li><li>我们要做的就是编写一个<code>@Configuration</code>注解类，并且类型要为<code>WebMvcConfigurer</code>，还不能标注<code>@EnableWebMvc</code>注解；我们去自己写一个；我们新建一个包叫<code>config</code>，写一个类<code>MyMvcConfig</code>:</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//应为类型要求为WebMvcConfigurer，所以我们实现其接口</span></span><br><span class="line"><span class="comment">//可以使用自定义类扩展MVC的功能</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyMvcConfig</span> <span class="keyword">implements</span> <span class="title">WebMvcConfigurer</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addViewControllers</span><span class="params">(ViewControllerRegistry registry)</span></span>&#123;</span><br><span class="line">        registry.addViewController(<span class="string">&quot;/test&quot;</span>).setViewName(<span class="string">&quot;test&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>访问页面测试一下。确实也跳转过来了！所以说，我们要扩展SpringMVC，官方就推荐我们这么去使用，既保SpringBoot留所有的自动配置，也能用我们扩展的配置！</li></ul><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@21640a704be46f602f642869079ce974fba25d5d/2021/06/22/7c61aa50afc5fdec6b00db92dc766e17.png"></p><h2 id="原理分析"><a href="#原理分析" class="headerlink" title="原理分析"></a>原理分析</h2><ul><li><code>WebMvcAutoConfiguration</code> 是 SpringMVC的自动配置类，里面有一个类<code>WebMvcAutoConfigurationAdapter</code></li><li>这个类上有一个注解，在做其他自动配置时会导入：<code>@Import(EnableWebMvcConfiguration.class)</code></li><li>我们点进<code>EnableWebMvcConfiguration</code>这个类看一下，它继承了一个父类：<code>DelegatingWebMvcConfiguration</code></li><li>这个父类中有这样一段代码：</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DelegatingWebMvcConfiguration</span> <span class="keyword">extends</span> <span class="title">WebMvcConfigurationSupport</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> WebMvcConfigurerComposite configurers = <span class="keyword">new</span> WebMvcConfigurerComposite();</span><br><span class="line">    </span><br><span class="line">  <span class="comment">// 从容器中获取所有的webmvcConfigurer</span></span><br><span class="line">    <span class="meta">@Autowired(required = false)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setConfigurers</span><span class="params">(List&lt;WebMvcConfigurer&gt; configurers)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!CollectionUtils.isEmpty(configurers)) &#123;</span><br><span class="line">            <span class="keyword">this</span>.configurers.addWebMvcConfigurers(configurers);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>我们可以在这个类中去寻找一个我们刚才设置的<code>viewController</code>当做参考，发现它调用了一个</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">addViewControllers</span><span class="params">(ViewControllerRegistry registry)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.configurers.addViewControllers(registry);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>我们点进去看一下</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addViewControllers</span><span class="params">(ViewControllerRegistry registry)</span> </span>&#123;</span><br><span class="line">    Iterator var2 = <span class="keyword">this</span>.delegates.iterator();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(var2.hasNext()) &#123;</span><br><span class="line">        <span class="comment">// 将所有的WebMvcConfigurer相关配置来一起调用！包括我们自己配置的和Spring给我们配置的</span></span><br><span class="line">        WebMvcConfigurer delegate = (WebMvcConfigurer)var2.next();</span><br><span class="line">        delegate.addViewControllers(registry);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="note success simple"><p><strong>所以得出结论：所有的<code>WebMvcConfiguration</code>都会被作用，不止Spring自己的配置类，我们自己的配置类当然也会被调用；</strong></p></div><h2 id="全面接管SpringMVC"><a href="#全面接管SpringMVC" class="headerlink" title="全面接管SpringMVC"></a>全面接管SpringMVC</h2><ul><li>全面接管即：SpringBoot对SpringMVC的自动配置不需要了，所有都是我们自己去配置！</li><li>只需在我们的配置类中要加一个<code>@EnableWebMvc</code></li><li>如果我们全面接管了SpringMVC了，我们之前SpringBoot给我们配置的静态资源映射一定会无效，比如给配置类加上注解：<code>@EnableWebMvc</code>，就无法访问了，所有的SpringMVC自动配置都失效了！回归到了最初的样子</li><li><strong>当然，我们开发中，不推荐使用全面接管SpringMVC</strong></li><li>思考问题？为什么加了一个注解，自动配置就失效了！我们看下源码：</li><li>这里发现它是导入了一个类，我们可以继续进去看</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Import(&#123;DelegatingWebMvcConfiguration.class&#125;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> EnableWebMvc &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>它继承了一个父类 <code>WebMvcConfigurationSupport</code></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DelegatingWebMvcConfiguration</span> <span class="keyword">extends</span> <span class="title">WebMvcConfigurationSupport</span> </span>&#123;</span><br><span class="line">  <span class="comment">// ......</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>回顾一下Webmvc自动配置类</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration(proxyBeanMethods = false)</span></span><br><span class="line"><span class="meta">@ConditionalOnWebApplication(type = Type.SERVLET)</span></span><br><span class="line"><span class="meta">@ConditionalOnClass(&#123; Servlet.class, DispatcherServlet.class, WebMvcConfigurer.class &#125;)</span></span><br><span class="line"><span class="comment">// 这个注解的意思就是：容器中没有这个组件的时候，这个自动配置类才生效</span></span><br><span class="line"><span class="meta">@ConditionalOnMissingBean(WebMvcConfigurationSupport.class)</span></span><br><span class="line"><span class="meta">@AutoConfigureOrder(Ordered.HIGHEST_PRECEDENCE + 10)</span></span><br><span class="line"><span class="meta">@AutoConfigureAfter(&#123; DispatcherServletAutoConfiguration.class, TaskExecutionAutoConfiguration.class,</span></span><br><span class="line"><span class="meta">    ValidationAutoConfiguration.class &#125;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WebMvcAutoConfiguration</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>总结一句话：<code>@EnableWebMvc</code>将<code>WebMvcConfigurationSupport</code>组件导入进来了；而导入的<code>WebMvcConfigurationSupport</code>只是SpringMVC最基本的功能！</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;MVC自动配置原理&quot;&gt;&lt;a href=&quot;#MVC自动配置原理&quot; class=&quot;headerlink&quot; title=&quot;MVC自动配置原理&quot;&gt;&lt;/a&gt;MVC自动配置原理&lt;/h1&gt;&lt;h2 id=&quot;官网阅读&quot;&gt;&lt;a href=&quot;#官网阅读&quot; class=&quot;headerli</summary>
      
    
    
    
    <category term="Java后端" scheme="http://xiaoliblog.cn/categories/Java%E5%90%8E%E7%AB%AF/"/>
    
    <category term="SpringBoot" scheme="http://xiaoliblog.cn/categories/Java%E5%90%8E%E7%AB%AF/SpringBoot/"/>
    
    
    <category term="SpringBoot" scheme="http://xiaoliblog.cn/tags/SpringBoot/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot🍃Thymeleaf模板引擎</title>
    <link href="http://xiaoliblog.cn/page/SpringBoot07.html"/>
    <id>http://xiaoliblog.cn/page/SpringBoot07.html</id>
    <published>2021-06-21T12:54:00.078Z</published>
    <updated>2021-06-22T06:30:45.676Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Thymeleaf"><a href="#Thymeleaf" class="headerlink" title="Thymeleaf"></a>Thymeleaf</h1><h2 id="模板引擎"><a href="#模板引擎" class="headerlink" title="模板引擎"></a>模板引擎</h2><ul><li>前端交给我们的页面，是html页面。如果是我们以前开发，我们需要把他们转成jsp页面，jsp好处就是当我们查出一些数据转发到JSP页面以后，我们可以用jsp轻松实现数据的显示，及交互等。</li><li>jsp支持非常强大的功能，包括能写Java代码，但是呢，我们现在的这种情况，SpringBoot这个项目首先是以jar的方式，不是war，第二，我们用的还是嵌入式的Tomcat，所以呢，他现在默认是不支持jsp的。</li><li>那不支持jsp，如果我们直接用纯静态页面的方式，那给我们开发会带来非常大的麻烦，那怎么办呢？</li><li>SpringBoot推荐使用模板引擎，我们其实大家听到很多，其实jsp就是一个模板引擎，还有用的比较多的freemarker，包括SpringBoot给我们推荐的<code>Thymeleaf</code>，模板引擎有非常多，但再多的模板引擎，他们的思想都是一样的，什么样一个思想呢我们来看一下这张图：<img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@cfa20fa2bd1a2961f359d3c420bc112f231168ee/2021/06/22/8495420c6b78736f9495761f4954a868.png"></li><li>模板引擎的作用就是我们来写一个页面模板，比如有些值呢，是动态的，我们写一些表达式。而这些值，从哪来呢，就是我们在后台封装一些数据。然后把这个模板和这个数据交给我们模板引擎，模板引擎按照我们这个数据帮你把这表达式解析、填充到我们指定的位置，然后把这个数据最终生成一个我们想要的内容给我们写出去，这就是我们这个模板引擎，不管是jsp还是其他模板引擎，都是这个思想。</li></ul><h2 id="引入Thymeleaf"><a href="#引入Thymeleaf" class="headerlink" title="引入Thymeleaf"></a>引入Thymeleaf</h2><ul><li>Thymeleaf 官网：<a href="https://www.thymeleaf.org/">https://www.thymeleaf.org/</a></li><li>Thymeleaf 在Github 的主页：<a href="https://github.com/thymeleaf/thymeleaf">https://github.com/thymeleaf/thymeleaf</a></li><li>Spring官方文档：找到我们对应的版本：<a href="https://docs.spring.io/spring-boot/docs/2.2.5.RELEASE/reference/htmlsingle/#using-boot-starter">https://docs.spring.io/spring-boot/docs/2.2.5.RELEASE/reference/htmlsingle/#using-boot-starter</a></li><li>对于springboot来说，什么事情不都是一个start的事情嘛，我们去在项目中引入一下</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--thymeleaf--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-thymeleaf<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@15a63e189b308d43e46f2b305d7f6e9b9a23fcbd/2021/06/22/51c759db52da5bd7b98baf3e9f17af77.png"></p><h2 id="Thymeleaf分析"><a href="#Thymeleaf分析" class="headerlink" title="Thymeleaf分析"></a>Thymeleaf分析</h2><ul><li>首先得按照SpringBoot的自动配置原理看一下我们这个Thymeleaf的自动配置规则，在按照那个规则，我们进行使用。</li><li>我们去找一下Thymeleaf的自动配置类：<code>ThymeleafProperties</code></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@ConfigurationProperties(</span></span><br><span class="line"><span class="meta">    prefix = &quot;spring.thymeleaf&quot;</span></span><br><span class="line"><span class="meta">)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ThymeleafProperties</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Charset DEFAULT_ENCODING;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String DEFAULT_PREFIX = <span class="string">&quot;classpath:/templates/&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String DEFAULT_SUFFIX = <span class="string">&quot;.html&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> checkTemplate = <span class="keyword">true</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> checkTemplateLocation = <span class="keyword">true</span>;</span><br><span class="line">    <span class="keyword">private</span> String prefix = <span class="string">&quot;classpath:/templates/&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> String suffix = <span class="string">&quot;.html&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> String mode = <span class="string">&quot;HTML&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> Charset encoding;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>我们可以在其中看到默认的前缀和后缀！</li><li>我们只需要把我们的html页面放在类路径下的<code>templates</code>下，<code>thymeleaf</code>就可以帮我们自动渲染了</li><li>使用<code>thymeleaf</code>什么都不需要配置，只需要将他放在指定的文件夹下即可！</li></ul><h2 id="测试Thymeleaf"><a href="#测试Thymeleaf" class="headerlink" title="测试Thymeleaf"></a>测试Thymeleaf</h2><ul><li>编写一个测试页面  <code>test.html</code> 放在<code>templates</code> 目录下</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>测试页面<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;/xxx&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>测试页面<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>编写一个<code>TestController</code></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestController</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/t1&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">test1</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">//classpath:/templates/test.html</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;test&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>启动项目</li></ul><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@7bbdfb0822574aa436a46bde74f9bb7cb1b47ffa/2021/06/22/650b094f475c4cc649a6bb421b33d4ab.png"></p><h1 id="Thymeleaf语法"><a href="#Thymeleaf语法" class="headerlink" title="Thymeleaf语法"></a>Thymeleaf语法</h1><ul><li>学习语法可以参考Thymeleaf 官网：<a href="https://www.thymeleaf.org/">https://www.thymeleaf.org/</a>，下载Thymeleaf的官方文档！</li><li>官网简单的Thymeleaf模板</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns:th</span>=<span class="string">&quot;http://www.thymeleaf.org&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">title</span>&gt;</span>Good Thymes Virtual Grocery<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Type&quot;</span> <span class="attr">content</span>=<span class="string">&quot;text/html; charset=UTF-8&quot;</span> /&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">media</span>=<span class="string">&quot;all&quot;</span> <span class="attr">href</span>=<span class="string">&quot;../../css/gtvg.css&quot;</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/css/gtvg.css&#125;&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;#&#123;home.welcome&#125;&quot;</span>&gt;</span>Welcome to our grocery store!<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="获取数据"><a href="#获取数据" class="headerlink" title="获取数据"></a>获取数据</h2><ul><li>做一个简单的练习：查出一些数据，在页面中展示</li><li>修改测试请求，增加数据传输；</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/t1&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">test1</span><span class="params">(Model model)</span></span>&#123;</span><br><span class="line">    <span class="comment">//存入数据</span></span><br><span class="line">    model.addAttribute(<span class="string">&quot;msg&quot;</span>,<span class="string">&quot;Hello,Thymeleaf&quot;</span>);</span><br><span class="line">    <span class="comment">//classpath:/templates/test.html</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;test&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>编写前端页面。要使用thymeleaf，需要在html文件中导入命名空间的约束，方便提示</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns:th</span>=<span class="string">&quot;http://www.thymeleaf.org&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>测试页面<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;/xxx&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>测试页面<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--th:text就是将div中的内容设置为它指定的值，和之前学习的Vue一样--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;msg&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@1e90252459c60c406457075df2afe97492cb84ad/2021/06/22/ee6698020772ef8fe39136b1812de06a.png"></p><div class="note success simple"><p>所有的HTML元素都可以被thymeleaf替换接管，语法<code>th:元素名</code></p></div><h2 id="Thymeleaf语法-1"><a href="#Thymeleaf语法-1" class="headerlink" title="Thymeleaf语法"></a>Thymeleaf语法</h2><ul><li>我们可以使用任意的 <code>th:attr</code> 来替换HTML中原生属性的值！</li></ul><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@c4d471d42b5d7ba43afbfd3d2080058fa1014972/2021/06/22/79762d4b558d4dcd7615035652de2dd2.png"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/t1&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">test</span><span class="params">(Map&lt;String,Object&gt; map)</span></span>&#123;</span><br><span class="line">        <span class="comment">//存入数据</span></span><br><span class="line">        map.put(<span class="string">&quot;msg&quot;</span>,<span class="string">&quot;&lt;h1&gt;Hello&lt;/h1&gt;&quot;</span>);</span><br><span class="line">        map.put(<span class="string">&quot;users&quot;</span>, Arrays.asList(<span class="string">&quot;username&quot;</span>,<span class="string">&quot;张三&quot;</span>));</span><br><span class="line">        <span class="comment">//classpath:/templates/test.html</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;test&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>测试页面取出数据</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns:th</span>=<span class="string">&quot;http://www.thymeleaf.org&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>测试页面<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;/xxx&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>测试页面<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;msg&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--不转义--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">th:utext</span>=<span class="string">&quot;$&#123;msg&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--遍历数据--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--th:each每次遍历都会生成当前这个标签：官网#9--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h4</span> <span class="attr">th:each</span>=<span class="string">&quot;user :$&#123;users&#125;&quot;</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;user&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">h4</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--行内写法：官网#12--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">th:each</span>=<span class="string">&quot;user:$&#123;users&#125;&quot;</span>&gt;</span>[[$&#123;user&#125;]]<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@2863d1f934ae0393f3820b9bbbc297b9cb6340a7/2021/06/22/b1c4ddde50cb55a5a6624e4f3bde6265.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Thymeleaf&quot;&gt;&lt;a href=&quot;#Thymeleaf&quot; class=&quot;headerlink&quot; title=&quot;Thymeleaf&quot;&gt;&lt;/a&gt;Thymeleaf&lt;/h1&gt;&lt;h2 id=&quot;模板引擎&quot;&gt;&lt;a href=&quot;#模板引擎&quot; class=&quot;headerli</summary>
      
    
    
    
    <category term="Java后端" scheme="http://xiaoliblog.cn/categories/Java%E5%90%8E%E7%AB%AF/"/>
    
    <category term="SpringBoot" scheme="http://xiaoliblog.cn/categories/Java%E5%90%8E%E7%AB%AF/SpringBoot/"/>
    
    
    <category term="SpringBoot" scheme="http://xiaoliblog.cn/tags/SpringBoot/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot🍃Web开发静态资源处理</title>
    <link href="http://xiaoliblog.cn/page/SpringBoot06.html"/>
    <id>http://xiaoliblog.cn/page/SpringBoot06.html</id>
    <published>2021-06-21T11:39:40.615Z</published>
    <updated>2021-06-21T12:47:32.736Z</updated>
    
    <content type="html"><![CDATA[<h1 id="静态资源处理"><a href="#静态资源处理" class="headerlink" title="静态资源处理"></a>静态资源处理</h1><h2 id="映射规则"><a href="#映射规则" class="headerlink" title="映射规则"></a>映射规则</h2><ul><li>静态资源映射规则：SpringBoot中，SpringMVC的web配置都在<code>WebMvcAutoConfiguration</code> 这个配置类里面；</li><li><code>WebMvcAutoConfigurationAdapter</code> 中有很多配置方法；有一个方法：<code>addResourceHandlers</code> 添加资源处理</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addResourceHandlers</span><span class="params">(ResourceHandlerRegistry registry)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="keyword">this</span>.resourceProperties.isAddMappings()) &#123;</span><br><span class="line">        <span class="comment">// 已禁用默认资源处理</span></span><br><span class="line">        logger.debug(<span class="string">&quot;Default resource handling disabled&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 缓存控制</span></span><br><span class="line">    Duration cachePeriod = <span class="keyword">this</span>.resourceProperties.getCache().getPeriod();</span><br><span class="line">    CacheControl cacheControl = <span class="keyword">this</span>.resourceProperties.getCache().getCachecontrol().toHttpCacheControl();</span><br><span class="line">    <span class="comment">// webjars 配置</span></span><br><span class="line">    <span class="keyword">if</span> (!registry.hasMappingForPattern(<span class="string">&quot;/webjars/**&quot;</span>)) &#123;</span><br><span class="line">        customizeResourceHandlerRegistration(registry.addResourceHandler(<span class="string">&quot;/webjars/**&quot;</span>)</span><br><span class="line">                                             .addResourceLocations(<span class="string">&quot;classpath:/META-INF/resources/webjars/&quot;</span>)</span><br><span class="line">                                             .setCachePeriod(getSeconds(cachePeriod)).setCacheControl(cacheControl));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 静态资源配置</span></span><br><span class="line">    String staticPathPattern = <span class="keyword">this</span>.mvcProperties.getStaticPathPattern();</span><br><span class="line">    <span class="keyword">if</span> (!registry.hasMappingForPattern(staticPathPattern)) &#123;</span><br><span class="line">        customizeResourceHandlerRegistration(registry.addResourceHandler(staticPathPattern)</span><br><span class="line">                                             .addResourceLocations(getResourceLocations(<span class="keyword">this</span>.resourceProperties.getStaticLocations()))</span><br><span class="line">                                             .setCachePeriod(getSeconds(cachePeriod)).setCacheControl(cacheControl));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>从源代码中可以看到所有的 <code>/webjars/**</code> ， 都需要去 <code>classpath:/META-INF/resources/webjars/</code> 找对应的资源；</li></ul><h2 id="webjars"><a href="#webjars" class="headerlink" title="webjars"></a>webjars</h2><ul><li><code>Webjars</code>本质就是以<code>jar</code>包的方式引入我们的静态资源 ， 我们以前要导入一个静态资源文件，直接导入即可</li><li>使用SpringBoot需要使用<code>Webjars</code>，可以参考官网：<a href="https://www.webjars.org/">https://www.webjars.org</a></li><li>要使用<code>jQuery</code>，我们只要要引入jQuery对应版本的pom依赖即可！</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.webjars<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jquery<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.6.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@0e251dad9d03947496d3a26171d6cda5f7ea6033/2021/06/21/7a8db79bb19486dd3a8119cbf51ae59a.png"></p><ul><li>可以通过重启服务器访问一下静态资源，<code>/webjars/</code>后面默认跟三级目录<code>/META-INF/resources/webjars/</code>，比如使用如下地址访问</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;localhost:8080&#x2F;webjars&#x2F;jquery&#x2F;3.6.0&#x2F;jquery.js</span><br></pre></td></tr></table></figure><h2 id="ResourceProperties"><a href="#ResourceProperties" class="headerlink" title="ResourceProperties"></a>ResourceProperties</h2><ul><li>实际开发中使用<code>webjar</code>方式导入静态资源并不实用。我们去找<code>staticPathPattern</code>发现第二种映射规则 ：<code>/**</code> , 访问当前的项目任意资源，它会去找 <code>resourceProperties</code> 这个类，我们可以点进去看一下分析：</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">/ 进入方法</span><br><span class="line"><span class="keyword">public</span> String[] getStaticLocations() &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.staticLocations;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 找到对应的值</span></span><br><span class="line"><span class="keyword">private</span> String[] staticLocations = CLASSPATH_RESOURCE_LOCATIONS;</span><br><span class="line"><span class="comment">// 找到路径</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String[] CLASSPATH_RESOURCE_LOCATIONS = &#123; </span><br><span class="line">    <span class="string">&quot;classpath:/META-INF/resources/&quot;</span>,</span><br><span class="line">    <span class="string">&quot;classpath:/resources/&quot;</span>, </span><br><span class="line">    <span class="string">&quot;classpath:/static/&quot;</span>, </span><br><span class="line">    <span class="string">&quot;classpath:/public/&quot;</span> </span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><ul><li><code>ResourceProperties</code> 可以设置和我们静态资源有关的参数；这里面指向了它会去寻找资源的文件夹，即上面数组的内容。</li><li>所以得出结论，以下四个目录存放的静态资源可以被我们识别：</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;classpath:/META-INF/resources/&quot;</span></span><br><span class="line"><span class="string">&quot;classpath:/resources/&quot;</span></span><br><span class="line"><span class="string">&quot;classpath:/static/&quot;</span></span><br><span class="line"><span class="string">&quot;classpath:/public/&quot;</span></span><br></pre></td></tr></table></figure><ul><li>我们可以在<code>resources</code>根目录下新建对应的文件夹，都可以存放我们的静态文件；</li><li>比如我们访问 <code>http://localhost:8080/1.js</code> , 他就会去这些文件夹中寻找对应的静态资源文件；</li><li>当出现重复静态资源时<code>resources</code>下的优先级最高，<code>static</code>其次，然后<code>public</code>优先级最低</li><li>一般在<code>public</code>下放一下公共的资源，比如Js、Css。在<code>static</code>下放一下静态资源，比如图片。<code>resources</code>下可以存放一些upload上传的文件</li></ul><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@b37fdd67e5ab152cf6210d9c9a06d6206ffb68f1/2021/06/21/045ce9d0a441f40ed690030ef0096998.png"></p><h2 id="自定义资源路径"><a href="#自定义资源路径" class="headerlink" title="自定义资源路径"></a>自定义资源路径</h2><ul><li>我们也可以自己通过配置文件来指定一下，哪些文件夹是需要我们放静态资源文件的，在<code>application.properties</code>中配置；</li></ul><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">spring.resources.static-locations</span>=<span class="string">classpath:/coding/,classpath:/lzy/</span></span><br></pre></td></tr></table></figure><ul><li>一旦自己定义了静态文件夹的路径，原来的自动配置就都会失效了！</li></ul><h1 id="首页处理"><a href="#首页处理" class="headerlink" title="首页处理"></a>首页处理</h1><h2 id="欢迎页映射"><a href="#欢迎页映射" class="headerlink" title="欢迎页映射"></a>欢迎页映射</h2><ul><li>继续查看<code>WebMvcAutoConfiguration</code>源码</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> WelcomePageHandlerMapping <span class="title">welcomePageHandlerMapping</span><span class="params">(ApplicationContext applicationContext,</span></span></span><br><span class="line"><span class="function"><span class="params">                                                           FormattingConversionService mvcConversionService,</span></span></span><br><span class="line"><span class="function"><span class="params">                                                           ResourceUrlProvider mvcResourceUrlProvider)</span> </span>&#123;</span><br><span class="line">    WelcomePageHandlerMapping welcomePageHandlerMapping = <span class="keyword">new</span> WelcomePageHandlerMapping(</span><br><span class="line">        <span class="keyword">new</span> TemplateAvailabilityProviders(applicationContext), applicationContext, getWelcomePage(), <span class="comment">// getWelcomePage 获得欢迎页</span></span><br><span class="line">        <span class="keyword">this</span>.mvcProperties.getStaticPathPattern());</span><br><span class="line">    welcomePageHandlerMapping.setInterceptors(getInterceptors(mvcConversionService, mvcResourceUrlProvider));</span><br><span class="line">    <span class="keyword">return</span> welcomePageHandlerMapping;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>点进去继续看</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> Optional&lt;Resource&gt; <span class="title">getWelcomePage</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    String[] locations = getResourceLocations(<span class="keyword">this</span>.resourceProperties.getStaticLocations());</span><br><span class="line">    <span class="comment">// ::是java8 中新引入的运算符</span></span><br><span class="line">    <span class="comment">// Class::function的时候function是属于Class的，应该是静态方法。</span></span><br><span class="line">    <span class="comment">// this::function的funtion是属于这个对象的。</span></span><br><span class="line">    <span class="comment">// 简而言之，就是一种语法糖而已，是一种简写</span></span><br><span class="line">    <span class="keyword">return</span> Arrays.stream(locations).map(<span class="keyword">this</span>::getIndexHtml).filter(<span class="keyword">this</span>::isReadable).findFirst();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 欢迎页就是一个location下的的 index.html 而已</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> Resource <span class="title">getIndexHtml</span><span class="params">(String location)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.resourceLoader.getResource(location + <span class="string">&quot;index.html&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>欢迎页，静态资源文件夹下的所有 <code>index.html</code> 页面；被 <code>/**</code> 映射。</li><li>比如在以上静态资源的<code>public</code>文件夹在新建首页<code>index.html</code>。访问  <code>http://localhost:8080/</code> ，就会找静态资源文件夹下的 <code>index.html</code></li></ul><div class="note success simple"><p>其实还有一个<code>templates</code>文件夹，也可以用于存放静态资源。但其只能有Controller层访问，相当于WEB-INF，首页<code>index.html</code>一般存放在<code>templates</code>文件夹中</p></div><h2 id="网站图标"><a href="#网站图标" class="headerlink" title="网站图标"></a>网站图标</h2><ul><li>与其他静态资源一样，Spring Boot在配置的静态内容位置中查找 <code>favicon.ico</code>。如果存在这样的文件，它将自动用作应用程序的<code>favicon</code></li><li>关闭SpringBoot默认图标</li></ul><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#关闭默认图标</span></span><br><span class="line"><span class="meta">spring.mvc.favicon.enabled</span>=<span class="string">false</span></span><br></pre></td></tr></table></figure><ul><li>自己放一个图标在静态资源目录下，比如 <code>public</code> 目录下</li><li>清除浏览器缓存！刷新网页，发现图标已经变成自己的了！</li></ul><div class="note success simple"><p>降版本只需要修改<code>pom.xml</code>的<code>parent</code>的版本即可</p></div>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;静态资源处理&quot;&gt;&lt;a href=&quot;#静态资源处理&quot; class=&quot;headerlink&quot; title=&quot;静态资源处理&quot;&gt;&lt;/a&gt;静态资源处理&lt;/h1&gt;&lt;h2 id=&quot;映射规则&quot;&gt;&lt;a href=&quot;#映射规则&quot; class=&quot;headerlink&quot; title=&quot;映</summary>
      
    
    
    
    <category term="Java后端" scheme="http://xiaoliblog.cn/categories/Java%E5%90%8E%E7%AB%AF/"/>
    
    <category term="SpringBoot" scheme="http://xiaoliblog.cn/categories/Java%E5%90%8E%E7%AB%AF/SpringBoot/"/>
    
    
    <category term="SpringBoot" scheme="http://xiaoliblog.cn/tags/SpringBoot/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot🍃自动配置原理及自定义starter</title>
    <link href="http://xiaoliblog.cn/page/SpringBoot05.html"/>
    <id>http://xiaoliblog.cn/page/SpringBoot05.html</id>
    <published>2021-06-21T10:15:25.113Z</published>
    <updated>2021-06-21T11:39:33.961Z</updated>
    
    <content type="html"><![CDATA[<h1 id="自动配置原理"><a href="#自动配置原理" class="headerlink" title="自动配置原理"></a>自动配置原理</h1><h2 id="分析原理"><a href="#分析原理" class="headerlink" title="分析原理"></a>分析原理</h2><ul><li>以<code>HttpEncodingAutoConfiguration</code>（Http编码自动配置）为例解释自动配置原理</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//表示这是一个配置类，和以前编写的配置文件一样，也可以给容器中添加组件；</span></span><br><span class="line"><span class="meta">@Configuration</span> </span><br><span class="line"></span><br><span class="line"><span class="comment">//启动指定类的ConfigurationProperties功能；</span></span><br><span class="line">  <span class="comment">//进入这个HttpProperties查看，将配置文件中对应的值和HttpProperties绑定起来；</span></span><br><span class="line">  <span class="comment">//并把HttpProperties加入到ioc容器中</span></span><br><span class="line"><span class="meta">@EnableConfigurationProperties(&#123;HttpProperties.class&#125;)</span> </span><br><span class="line"></span><br><span class="line"><span class="comment">//Spring底层@Conditional注解</span></span><br><span class="line">  <span class="comment">//根据不同的条件判断，如果满足指定的条件，整个配置类里面的配置就会生效；</span></span><br><span class="line">  <span class="comment">//这里的意思就是判断当前应用是否是web应用，如果是，当前配置类生效</span></span><br><span class="line"><span class="meta">@ConditionalOnWebApplication(</span></span><br><span class="line"><span class="meta">    type = Type.SERVLET</span></span><br><span class="line"><span class="meta">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//判断当前项目有没有这个类CharacterEncodingFilter；SpringMVC中进行乱码解决的过滤器；</span></span><br><span class="line"><span class="meta">@ConditionalOnClass(&#123;CharacterEncodingFilter.class&#125;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//判断配置文件中是否存在某个配置：spring.http.encoding.enabled；</span></span><br><span class="line">  <span class="comment">//如果不存在，判断也是成立的</span></span><br><span class="line">  <span class="comment">//即使我们配置文件中不配置pring.http.encoding.enabled=true，也是默认生效的；</span></span><br><span class="line"><span class="meta">@ConditionalOnProperty(</span></span><br><span class="line"><span class="meta">    prefix = &quot;spring.http.encoding&quot;,</span></span><br><span class="line"><span class="meta">    value = &#123;&quot;enabled&quot;&#125;,</span></span><br><span class="line"><span class="meta">    matchIfMissing = true</span></span><br><span class="line"><span class="meta">)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HttpEncodingAutoConfiguration</span> </span>&#123;</span><br><span class="line">    <span class="comment">//他已经和SpringBoot的配置文件映射了</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Encoding properties;</span><br><span class="line">    <span class="comment">//只有一个有参构造器的情况下，参数的值就会从容器中拿</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">HttpEncodingAutoConfiguration</span><span class="params">(HttpProperties properties)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.properties = properties.getEncoding();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//给容器中添加一个组件，这个组件的某些值需要从properties中获取</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="meta">@ConditionalOnMissingBean</span> <span class="comment">//判断容器没有这个组件？</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> CharacterEncodingFilter <span class="title">characterEncodingFilter</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        CharacterEncodingFilter filter = <span class="keyword">new</span> OrderedCharacterEncodingFilter();</span><br><span class="line">        filter.setEncoding(<span class="keyword">this</span>.properties.getCharset().name());</span><br><span class="line">        filter.setForceRequestEncoding(<span class="keyword">this</span>.properties.shouldForce(org.springframework.boot.autoconfigure.http.HttpProperties.Encoding.Type.REQUEST));</span><br><span class="line">        filter.setForceResponseEncoding(<span class="keyword">this</span>.properties.shouldForce(org.springframework.boot.autoconfigure.http.HttpProperties.Encoding.Type.RESPONSE));</span><br><span class="line">        <span class="keyword">return</span> filter;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="note success simple"><p><strong>一句话总结 ：根据当前不同的条件判断，决定这个配置类是否生效！</strong></p></div><ul><li>一但这个配置类生效；这个配置类就会给容器中添加各种组件；</li><li>这些组件的属性是从对应的<code>properties</code>类中获取的，这些类里面的每一个属性又是和配置文件绑定的；</li><li>所有在配置文件中能配置的属性都是在<code>xxxxProperties</code>类中封装着；</li><li>配置文件能配置什么就可以参照某个功能对应的这个属性类</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//从配置文件中获取指定的值和bean的属性进行绑定</span></span><br><span class="line"><span class="meta">@ConfigurationProperties(prefix = &quot;spring.http&quot;)</span> </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HttpProperties</span> </span>&#123;</span><br><span class="line">    <span class="comment">// .....</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>去<code>.yml</code>配置文件里面试试前缀，看提示！</li></ul><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@c17a996ac6b346c9f55c46c619655fc4ac6c5a33/2021/06/21/6bd9bff64cc34ca22a2a055e2542ca41.png" width="50%"><ul><li>SpringBoot启动会加载大量的自动配置类</li><li>我们看我们需要的功能有没有在SpringBoot默认写好的自动配置类当中；</li><li>我们再来看这个自动配置类中到底配置了哪些组件；（只要我们要用的组件存在在其中，我们就不需要再手动配置了）</li><li>给容器中自动配置类添加组件的时候，会从<code>properties</code>类中获取某些属性。我们只需要在配置文件中指定这些属性的值即可；<ul><li><code>xxxxAutoConfigurartion</code>：自动配置类；给容器中添加组件</li><li><code>xxxxProperties</code>：封装配置文件中相关属性；</li></ul></li></ul><h2 id="Conditional"><a href="#Conditional" class="headerlink" title="@Conditional"></a>@Conditional</h2><ul><li>自动配置类必须在一定的条件下才能生效；<code>@Conditional</code>派生注解（Spring注解版原生的@Conditional作用）</li><li>作用：必须是<code>@Conditional</code>指定的条件成立，才给容器中添加组件，配置配里面的所有内容才生效；</li></ul><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@dd2d9f69ac0099b107f9a29a92ee55a9547bbf39/2021/06/21/7cce9e37eaf2d76bde0b8bec5bf70422.png"></p><ul><li>那么多的自动配置类，必须在一定的条件下才能生效；也就是说，我们加载了这么多的配置类，但不是所有的都生效了</li><li>那如何知道哪些自动配置类生效？可以通过启用 <code>debug=true</code>属性；来让控制台打印自动配置报告，这样我们就可以很方便的知道哪些自动配置类生效；</li></ul><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#开启springboot的调试类</span></span><br><span class="line"><span class="attr">debug:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><ul><li>查看输出的日志，输出分以下三类<ul><li><code>Positive matches</code>:（自动配置类启用的：正匹配）</li><li><code>Negative matches</code>:（没有启动，没有匹配成功的自动配置类：负匹配）</li><li><code>Unconditional classes</code>: （没有条件的类）</li></ul></li></ul><h1 id="自定义Starter"><a href="#自定义Starter" class="headerlink" title="自定义Starter"></a>自定义Starter</h1><h2 id="启动器说明"><a href="#启动器说明" class="headerlink" title="启动器说明"></a>启动器说明</h2><ul><li>启动器模块是一个 空 <code>jar</code> 文件，仅提供辅助性依赖管理，这些依赖可能用于自动装配或者其他类库；</li><li>官方命名<ul><li>前缀：<code>spring-boot-starter-xxx</code></li><li>比如：spring-boot-starter-web….</li></ul></li><li>自定义命名：<ul><li><code>xxx-spring-boot-starter</code></li><li>比如：mybatis-spring-boot-starter</li></ul></li></ul><h2 id="启动器准备"><a href="#启动器准备" class="headerlink" title="启动器准备"></a>启动器准备</h2><ul><li>新建一个空项目 <code>spring-boot-starter-diy</code></li><li>再新建一个普通Maven模块：<code>lzy-spring-boot-starter</code></li><li>再新建一个SpringBoot模块：<code>lzy-spring-boot-starter-autoconfigure</code></li></ul><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@99746fd9ed84f59f348ef3fbbfbb6238d601d4c3/2021/06/21/300bd95530a62d45cc103090e9c24419.png"></p><ul><li><p>基本结构如下<img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@c636f358db9cd39bea9959164134d2ef5c987b21/2021/06/21/fbba6ededad338639191f0c8f15dba58.png"></p></li><li><p> 在父工程中 导入  <code>autoconfigure</code> 的依赖！</p></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.lzy<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lzy-spring-boot-starter-autoconfigure<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>将 <code>autoconfigure</code> 项目下多余的文件都删掉，<code>pom.xml</code>中只留下一个 <code>starter</code>，这是所有的启动器基本配置！</li></ul><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@a3e45d4a46d21c24d91e0e1ae8f23a4d3abcdf49/2021/06/21/0dc8c5c76f9115447009d01daae2e7e4.png"></p><h2 id="启动器配置"><a href="#启动器配置" class="headerlink" title="启动器配置"></a>启动器配置</h2><ul><li>编写一个自己的服务</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;自动配置原理&quot;&gt;&lt;a href=&quot;#自动配置原理&quot; class=&quot;headerlink&quot; title=&quot;自动配置原理&quot;&gt;&lt;/a&gt;自动配置原理&lt;/h1&gt;&lt;h2 id=&quot;分析原理&quot;&gt;&lt;a href=&quot;#分析原理&quot; class=&quot;headerlink&quot; title=&quot;分</summary>
      
    
    
    
    <category term="Java后端" scheme="http://xiaoliblog.cn/categories/Java%E5%90%8E%E7%AB%AF/"/>
    
    <category term="SpringBoot" scheme="http://xiaoliblog.cn/categories/Java%E5%90%8E%E7%AB%AF/SpringBoot/"/>
    
    
    <category term="SpringBoot" scheme="http://xiaoliblog.cn/tags/SpringBoot/"/>
    
  </entry>
  
  <entry>
    <title>SSM项目🎯网易云音乐实战之登录模块和文件上传</title>
    <link href="http://xiaoliblog.cn/page/neteaseshop04.html"/>
    <id>http://xiaoliblog.cn/page/neteaseshop04.html</id>
    <published>2021-06-19T14:09:26.213Z</published>
    <updated>2021-06-21T08:57:56.754Z</updated>
    
    <content type="html"><![CDATA[<h1 id="登录视图"><a href="#登录视图" class="headerlink" title="登录视图"></a>登录视图</h1><ul><li>登录页面当用户名失去焦点后会异步获取用户头像信息</li><li>登录调用了腾讯云的滑动验证码接口</li></ul><h2 id="HTML视图"><a href="#HTML视图" class="headerlink" title="HTML视图"></a>HTML视图</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;login layui-anim layui-anim-scaleSpring&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>网易云用户登录<span class="tag">&lt;/<span class="name">h2</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&quot;text-align:center;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;$&#123;APP_PATH &#125;/../../static/images/logo/sign-in-avatar.svg&quot;</span> <span class="attr">id</span>=<span class="string">&quot;avatar&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&quot;text-align:center;color:#7f8085;&quot;</span>&gt;</span> 音乐的力量<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">id</span>=<span class="string">&quot;r-form&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">size</span>=<span class="string">&quot;30&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请用户名/邮箱&quot;</span> <span class="attr">id</span>=<span class="string">&quot;username&quot;</span> <span class="attr">required</span> <span class="attr">autocomplete</span>=<span class="string">&quot;off&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">size</span>=<span class="string">&quot;30&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入密码&quot;</span> <span class="attr">id</span>=<span class="string">&quot;password&quot;</span> <span class="attr">required</span> <span class="attr">autocomplete</span>=<span class="string">&quot;off&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span>&gt;</span> 记住密码<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;$&#123;APP_PATH&#125;/user/findpw&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;forgetps&quot;</span>&gt;</span>忘记密码?<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">id</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-danger&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;loginSubmit()&quot;</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;text&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;$&#123;APP_PATH &#125;/admin/tologin&quot;</span>&gt;</span>管理员登录<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;$&#123;APP_PATH&#125;/user/register&quot;</span> <span class="attr">class</span>=<span class="string">&quot;register&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span>立即注册<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@7eeea5450a9bee0261a5f9df0413920efa3172f2/2021/06/19/0d484cf4d6df1974d7f19b2f007fab3d.png"></p><h2 id="JS部分"><a href="#JS部分" class="headerlink" title="JS部分"></a>JS部分</h2><ul><li>异步获取头像信息</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取表单元素</span></span><br><span class="line"><span class="keyword">var</span> $username = $(<span class="string">&#x27;#username&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> $password = $(<span class="string">&#x27;#password&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> $btn = $(<span class="string">&#x27;#submit&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> $form = $(<span class="string">&#x27;#r-form&#x27;</span>);</span><br><span class="line"><span class="comment">//如果失去焦点 去后台拿取头像数据</span></span><br><span class="line">$username.blur(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    $.ajax(&#123;</span><br><span class="line">        url:<span class="string">&#x27;$&#123;APP_PATH&#125;/getUserAvatar&#x27;</span>,</span><br><span class="line">        data:&#123;<span class="attr">username</span>:$username.val()&#125;,</span><br><span class="line">        type:<span class="string">&#x27;get&#x27;</span>,</span><br><span class="line">        success:<span class="function"><span class="keyword">function</span> (<span class="params">res</span>) </span>&#123; <span class="comment">//flag = 0,说明存在，得到user对象</span></span><br><span class="line">            <span class="function"><span class="title">if</span>(<span class="params">res.flag == <span class="number">1</span> </span>)</span>&#123;</span><br><span class="line">                $(<span class="string">&#x27;#avatar&#x27;</span>).attr(<span class="string">&#x27;src&#x27;</span>,res.hashMap.user.avatar)</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                layer.msg(res.message,&#123;<span class="attr">icon</span>:<span class="number">2</span>,<span class="attr">time</span>:<span class="number">600</span>&#125;)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ul><li>请求滑动验证码</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">/验证用户名和密码是否为空的函数</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">IsNull</span>(<span class="params">username, password</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> val1 = username.val();</span><br><span class="line">    <span class="keyword">var</span> val2 = password.val();</span><br><span class="line">    <span class="keyword">if</span> (val1 == <span class="string">&#x27;&#x27;</span> || val2 == <span class="string">&#x27;&#x27;</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//提交滑动验证码</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">loginSubmit</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">//表单为空</span></span><br><span class="line">    <span class="keyword">if</span> (IsNull($username, $password)) &#123;</span><br><span class="line">        layer.msg(<span class="string">&#x27;用户名或密码不能为空&#x27;</span>,&#123;<span class="attr">time</span>:<span class="number">600</span>,<span class="attr">icon</span>:<span class="number">2</span>&#125;);</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> loadIndex = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="comment">//创建滑动验证码对象</span></span><br><span class="line">    <span class="keyword">var</span> slideCode = <span class="keyword">new</span> TencentCaptcha(<span class="string">&#x27;2037160931&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">res</span>) </span>&#123;</span><br><span class="line">        <span class="comment">// res（用户主动关闭验证码）= &#123;ret: 2, ticket: null&#125;</span></span><br><span class="line">        <span class="comment">// res（验证成功） = &#123;ret: 0, ticket: &quot;String&quot;, randstr: &quot;String&quot;&#125;</span></span><br><span class="line">        <span class="keyword">if</span> (res.ret === <span class="number">0</span>) &#123;</span><br><span class="line">            $.ajax(&#123;</span><br><span class="line">                type: <span class="string">&quot;post&quot;</span>,</span><br><span class="line">                url: <span class="string">&quot;$&#123;APP_PATH&#125;/login&quot;</span>,</span><br><span class="line">                data: &#123;<span class="attr">username</span>:$username.val(),<span class="attr">password</span>:$password.val(),<span class="attr">ticket</span>:res.ticket,<span class="attr">randstr</span>:res.randstr&#125;, <span class="comment">//提交的数据</span></span><br><span class="line">                dataType: <span class="string">&quot;json&quot;</span>,  <span class="comment">//服务器返回的数据类型,用于解决跨域问题</span></span><br><span class="line">                beforeSend:<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span><br><span class="line">                    loadIndex = layer.load(<span class="number">0</span>,&#123;<span class="attr">shade</span>:[<span class="number">0.1</span>,<span class="string">&#x27;#fff&#x27;</span>]&#125;) <span class="comment">//0.1透明度的白色背景</span></span><br><span class="line">                &#125;,</span><br><span class="line">                complete:<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span><br><span class="line">                    layer.close(loadIndex)</span><br><span class="line">                &#125;,</span><br><span class="line">                success: <span class="function"><span class="keyword">function</span> (<span class="params">res</span>)</span>&#123;</span><br><span class="line">                    <span class="function"><span class="title">if</span>(<span class="params">res.flag == <span class="number">1</span></span>)</span>&#123;</span><br><span class="line">                        layer.msg(<span class="string">&quot;登录验证成功&quot;</span>,&#123;<span class="attr">time</span>:<span class="number">600</span>,<span class="attr">icon</span>:<span class="number">1</span>&#125;);</span><br><span class="line">                        <span class="built_in">window</span>.location.href = <span class="string">&quot;$&#123;APP_PATH&#125;/index&quot;</span></span><br><span class="line">                    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                        layer.msg(res.message,&#123;<span class="attr">time</span>:<span class="number">600</span>,<span class="attr">icon</span>:<span class="number">2</span>&#125;);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">                error: <span class="function"><span class="keyword">function</span> (<span class="params">e</span>)</span>&#123;</span><br><span class="line">                    <span class="comment">//请求失败</span></span><br><span class="line">                    <span class="built_in">console</span>.log(e.status)</span><br><span class="line">                    <span class="built_in">console</span>.log(e.responseText)</span><br><span class="line">                    layer.msg(<span class="string">&quot;不好意思，服务器跑到火星去了，登录异常！&quot;</span>,&#123;<span class="attr">time</span>:<span class="number">600</span>,<span class="attr">icon</span>:<span class="number">2</span>&#125;)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            layer.msg(<span class="string">&#x27;验证错误&#x27;</span>,&#123;<span class="attr">time</span>:<span class="number">600</span>,<span class="attr">icon</span>:<span class="number">2</span>&#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    slideCode.show(); <span class="comment">//显示滑动验证码</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="后端处理"><a href="#后端处理" class="headerlink" title="后端处理"></a>后端处理</h1><h2 id="控制器"><a href="#控制器" class="headerlink" title="控制器"></a>控制器</h2><ul><li>首先是处理异步获取头像信息</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//异步验证用户头像</span></span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/getUserAvatar&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> ReturnMsg <span class="title">getUserAvatar</span><span class="params">(String username)</span> </span>&#123;</span><br><span class="line">   <span class="comment">//后端校验</span></span><br><span class="line">   String regName = <span class="string">&quot;(^[a-zA-Z0-9_-]&#123;6,16&#125;$)|(^[\\u2E80-\\u9FFF]&#123;2,5&#125;)&quot;</span>;</span><br><span class="line">   <span class="comment">//如果不匹配</span></span><br><span class="line">   ReturnMsg returnMsg = <span class="keyword">new</span> ReturnMsg();</span><br><span class="line">   <span class="keyword">if</span>(!username.matches(regName))&#123;</span><br><span class="line">      returnMsg.fail(<span class="string">&quot;用户名必须是6-16数字或字母的组合，或者2-5位汉字&quot;</span>);</span><br><span class="line">   &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      User user = userService.queryUserByUsername(username);</span><br><span class="line">      <span class="keyword">if</span> (user != <span class="keyword">null</span>) &#123;</span><br><span class="line">         <span class="comment">//用户存在</span></span><br><span class="line">         returnMsg.isSuccess().add(<span class="string">&quot;user&quot;</span>,user);</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">         returnMsg.fail(<span class="string">&quot;用户名不存在&quot;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">return</span>  returnMsg;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>处理滑动验证码请求</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="meta">@RequestMapping(value = &quot;/login&quot;, method = RequestMethod.POST)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> ReturnMsg <span class="title">login</span><span class="params">(HttpServletRequest request, String ticket, String randstr)</span> </span>&#123;</span><br><span class="line">   String username = request.getParameter(<span class="string">&quot;username&quot;</span>);</span><br><span class="line">   String password = request.getParameter(<span class="string">&quot;password&quot;</span>);</span><br><span class="line">   DescribeCaptchaResult describeCaptchaResult = <span class="keyword">new</span> DescribeCaptchaResult();</span><br><span class="line">   User user1 = userService.queryUserBynameAndpwd(username, password);</span><br><span class="line">   ReturnMsg returnMsg = <span class="keyword">new</span> ReturnMsg();</span><br><span class="line">   <span class="comment">//System.out.println(&quot;验证码结果:&quot;+describeCaptchaResult.codeResponse(ticket,randstr));</span></span><br><span class="line">   <span class="comment">//如果验证码读取验证成功</span></span><br><span class="line">   <span class="keyword">if</span> (describeCaptchaResult.codeResponse(ticket, randstr) &amp;&amp; user1 != <span class="keyword">null</span>) &#123;</span><br><span class="line">      <span class="comment">//传一个用户对象</span></span><br><span class="line">      <span class="comment">//用户信息保存到Session</span></span><br><span class="line">      request.getSession().setAttribute(SessionConstants.USER_SESSION, user1);</span><br><span class="line">      returnMsg.isSuccess(); <span class="comment">//成功flag=1</span></span><br><span class="line">      <span class="keyword">return</span> returnMsg;</span><br><span class="line">   &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      returnMsg.fail(<span class="string">&quot;登录验证失败，请重新登录!&quot;</span>);</span><br><span class="line">      <span class="keyword">return</span> returnMsg;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;d</span><br></pre></td></tr></table></figure><ul><li>这里使用了常量封装用户Session，对一些全局使用的常量进行封装是一个非常好的习惯。便于后期维护</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.netease.utils;</span><br><span class="line"></span><br><span class="line"><span class="comment">//定义全局Session常量</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SessionConstants</span> </span>&#123;</span><br><span class="line">    <span class="comment">//用户登录Session</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">static</span> String USER_SESSION = <span class="string">&quot;userInfo&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="滑动验证码工具类"><a href="#滑动验证码工具类" class="headerlink" title="滑动验证码工具类"></a>滑动验证码工具类</h2><div class="note success simple"><p>由于代码中需要获取特地参数，出于安全考虑不予公布，请读者自行获取参数</p></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.netease.utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.tencentcloudapi.captcha.v20190722.CaptchaClient;</span><br><span class="line"><span class="keyword">import</span> com.tencentcloudapi.captcha.v20190722.models.DescribeCaptchaResultRequest;</span><br><span class="line"><span class="keyword">import</span> com.tencentcloudapi.captcha.v20190722.models.DescribeCaptchaResultResponse;</span><br><span class="line"><span class="keyword">import</span> com.tencentcloudapi.common.Credential;</span><br><span class="line"><span class="keyword">import</span> com.tencentcloudapi.common.exception.TencentCloudSDKException;</span><br><span class="line"><span class="keyword">import</span> com.tencentcloudapi.common.profile.ClientProfile;</span><br><span class="line"><span class="keyword">import</span> com.tencentcloudapi.common.profile.HttpProfile;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DescribeCaptchaResult</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">DescribeCaptchaResult</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//去腾讯云服务获取结果</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">codeResponse</span><span class="params">(String ticket,String randstr)</span></span>&#123;</span><br><span class="line">        String str = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            <span class="comment">//实例化一个认证对象，入参需要传入腾讯云账户密钥对 secretId 和 secretKey</span></span><br><span class="line">            Credential cred = <span class="keyword">new</span> Credential(<span class="string">&quot;AKIDyhngMxxxxf3KR&quot;</span>,<span class="string">&quot;Zu1tqeEZbMvxxxYBYeBOO7&quot;</span>);</span><br><span class="line">            <span class="comment">// 实例化一个 http 选项，可选，无特殊需求时可以跳过</span></span><br><span class="line">            HttpProfile httpProfile = <span class="keyword">new</span> HttpProfile();</span><br><span class="line">            <span class="comment">//接口请求域名： captcha.tencentcloudapi.com</span></span><br><span class="line">            httpProfile.setEndpoint(<span class="string">&quot;captcha.tencentcloudapi.com&quot;</span>);</span><br><span class="line">            <span class="comment">/* 实例化一个客户端配置对象 */</span></span><br><span class="line">            ClientProfile clientProfile = <span class="keyword">new</span> ClientProfile();</span><br><span class="line">            clientProfile.setHttpProfile(httpProfile);</span><br><span class="line">            <span class="comment">/* 实例化 SMS 的 client 对象</span></span><br><span class="line"><span class="comment">             * 第二个参数是地域信息，可以直接填写字符串 ap-beijing，或者引用预设的常量 */</span></span><br><span class="line">            CaptchaClient client = <span class="keyword">new</span> CaptchaClient(cred,<span class="string">&quot;ap-beijing&quot;</span>,clientProfile);</span><br><span class="line">            <span class="comment">//需要UserIP,CaptchaAppId和AppSecretKey</span></span><br><span class="line">            String params = <span class="string">&quot;&#123;\&quot;CaptchaType\&quot;:9,\&quot;Ticket\&quot;:\&quot;&quot;</span></span><br><span class="line">                    + ticket + <span class="string">&quot;\&quot;,\&quot;UserIp\&quot;:\&quot;127.0.0.1\&quot;,\&quot;Randstr\&quot;:\&quot;&quot;</span></span><br><span class="line">                    + randstr + <span class="string">&quot;\&quot;,\&quot;CaptchaAppId\&quot;:20xxx931,\&quot;AppSecretKey\&quot;:\&quot;0Sih3-_w8dsr1xxx**\&quot;&#125;&quot;</span>;</span><br><span class="line">            DescribeCaptchaResultRequest req = DescribeCaptchaResultRequest.fromJsonString(params,DescribeCaptchaResultRequest.class);</span><br><span class="line">            DescribeCaptchaResultResponse resp = client.DescribeCaptchaResult(req);</span><br><span class="line">            str = DescribeCaptchaResultRequest.toJsonString(resp);</span><br><span class="line">        &#125;<span class="keyword">catch</span> (TencentCloudSDKException e)&#123;</span><br><span class="line">            System.out.println(e.toString());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//打印JSON对象</span></span><br><span class="line">        System.out.println(<span class="string">&quot;JSON对象:&quot;</span>+str);</span><br><span class="line">        <span class="keyword">if</span>(str.indexOf(<span class="string">&quot;OK&quot;</span>)&lt;<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="文件上传"><a href="#文件上传" class="headerlink" title="文件上传"></a>文件上传</h1><ul><li>其他功能没有可讲性，讲一下调用LayUI的文件上传组件+阿里云OSS对象存储存储图片</li></ul><h2 id="LayUI组件"><a href="#LayUI组件" class="headerlink" title="LayUI组件"></a>LayUI组件</h2><ul><li>这里用到了LayUI文件上传组件，HTML结构如下</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;layui-upload&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;layui-btn&quot;</span> <span class="attr">id</span>=<span class="string">&quot;test1&quot;</span>&gt;</span>上传图片<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;layui-upload-list&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">class</span>=<span class="string">&quot;layui-upload-img&quot;</span> <span class="attr">id</span>=<span class="string">&quot;demo1&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width:90px;height: 90px;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;demoText&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;width: 95px;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;layui-progress layui-progress-big&quot;</span> <span class="attr">lay-showpercent</span>=<span class="string">&quot;yes&quot;</span> <span class="attr">lay-filter</span>=<span class="string">&quot;demo&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;layui-progress-bar&quot;</span> <span class="attr">lay-percent</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">name</span>=<span class="string">&quot;list-progress&quot;</span>&gt;</span> <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>JS代码如下</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//layui 用户添加上传图片</span></span><br><span class="line">layui.use([<span class="string">&#x27;upload&#x27;</span>, <span class="string">&#x27;element&#x27;</span>, <span class="string">&#x27;layer&#x27;</span>], <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">//引入模块</span></span><br><span class="line">    <span class="keyword">var</span> $ = layui.jquery,</span><br><span class="line">        upload = layui.upload,</span><br><span class="line">        element = layui.element,</span><br><span class="line">        layer = layui.layer;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//渲染文件上传</span></span><br><span class="line">    <span class="keyword">var</span> uploadInst = upload.render(&#123;</span><br><span class="line">        elem: <span class="string">&#x27;#test1&#x27;</span> <span class="comment">//上传文件按钮id</span></span><br><span class="line">            ,</span><br><span class="line">        url: <span class="string">&#x27;$&#123;APP_PATH&#125;/admin/upload&#x27;</span> <span class="comment">//文件上传接口</span></span><br><span class="line">            ,</span><br><span class="line">        accept: <span class="string">&#x27;images&#x27;</span> <span class="comment">//直接收图片</span></span><br><span class="line">            ,</span><br><span class="line">        auto: <span class="literal">true</span> <span class="comment">//是否选择文件以后自动上传 可以给一个属性添加按钮绑定</span></span><br><span class="line">            ,</span><br><span class="line">        multipe: <span class="literal">true</span> <span class="comment">//多文件上传</span></span><br><span class="line">            <span class="comment">//,size: //设置最大允许上传的大小 单位kb</span></span><br><span class="line">            ,</span><br><span class="line">        acceptMime: <span class="string">&#x27;image/*&#x27;</span> <span class="comment">//打开文件选择指定只出现图片类型后缀的文件</span></span><br><span class="line">            ,</span><br><span class="line">        before: <span class="function"><span class="keyword">function</span> (<span class="params">obj</span>) </span>&#123;</span><br><span class="line">            <span class="comment">//预读本地文件示例，不支持ie8</span></span><br><span class="line">            obj.preview(<span class="function"><span class="keyword">function</span> (<span class="params">index, file, result</span>) </span>&#123;</span><br><span class="line">                <span class="comment">//#demo1为img标签</span></span><br><span class="line">                $(<span class="string">&#x27;#demo1&#x27;</span>).attr(<span class="string">&#x27;src&#x27;</span>, result); <span class="comment">//图片链接（base64）</span></span><br><span class="line">            &#125;);</span><br><span class="line">            element.progress(<span class="string">&#x27;demo&#x27;</span>, <span class="string">&#x27;0%&#x27;</span>); <span class="comment">//进度条复位</span></span><br><span class="line">            layer.msg(<span class="string">&#x27;上传中&#x27;</span>, &#123;</span><br><span class="line">                icon: <span class="number">16</span>,</span><br><span class="line">                time: <span class="number">0</span></span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;,</span><br><span class="line">        done: <span class="function"><span class="keyword">function</span> (<span class="params">res</span>) </span>&#123; <span class="comment">//上传成功的回调</span></span><br><span class="line">            <span class="comment">//如果上传失败</span></span><br><span class="line">            <span class="keyword">if</span> (res.flag == <span class="number">1</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> layer.msg(<span class="string">&#x27;上传成功&#x27;</span>, &#123;</span><br><span class="line">                    icon: <span class="number">1</span></span><br><span class="line">                &#125;);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> layer.msg(<span class="string">&#x27;上传失败&#x27;</span>, &#123;</span><br><span class="line">                    icon: <span class="number">2</span></span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//上传成功的一些操作</span></span><br><span class="line">            <span class="comment">//……</span></span><br><span class="line">            $(<span class="string">&#x27;#demoText&#x27;</span>).html(<span class="string">&#x27;&#x27;</span>); <span class="comment">//置空上传失败的状态</span></span><br><span class="line">        &#125;,</span><br><span class="line">        error: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123; <span class="comment">//上传失败的回调</span></span><br><span class="line">                <span class="comment">//演示失败状态，并实现重传</span></span><br><span class="line">                <span class="keyword">var</span> demoText = $(<span class="string">&#x27;#demoText&#x27;</span>);</span><br><span class="line">                demoText.html(<span class="string">&#x27;&lt;span style=&quot;color: #ff5722;&quot;&gt;上传失败&lt;/span&gt; &lt;a class=&quot;layui-btn layui-btn-xs demo-reload&quot;&gt;重试&lt;/a&gt;&#x27;</span>);</span><br><span class="line">                demoText.find(<span class="string">&#x27;.demo-reload&#x27;</span>).on(<span class="string">&#x27;click&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                    uploadInst.upload();</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//进度条</span></span><br><span class="line">            ,</span><br><span class="line">        progress: <span class="function"><span class="keyword">function</span> (<span class="params">n, elem, e</span>) </span>&#123;</span><br><span class="line">            element.progress(<span class="string">&#x27;demo&#x27;</span>, n + <span class="string">&#x27;%&#x27;</span>); <span class="comment">//可配合 layui 进度条元素使用</span></span><br><span class="line">            <span class="keyword">if</span> (n == <span class="number">100</span>) &#123;</span><br><span class="line">                layer.msg(<span class="string">&#x27;上传完毕&#x27;</span>, &#123;</span><br><span class="line">                    icon: <span class="number">1</span></span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="控制器-1"><a href="#控制器-1" class="headerlink" title="控制器"></a>控制器</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Autowired</span></span><br><span class="line">AliyunOSSClientUtil ossClientUtil;</span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="meta">@RequestMapping(value=&quot;/upload&quot;,method = RequestMethod.POST)</span></span><br><span class="line"> <span class="function"><span class="keyword">public</span> ReturnMsg <span class="title">upload</span><span class="params">(<span class="meta">@RequestParam(&quot;file&quot;)</span> MultipartFile multipartFile)</span> </span>&#123;</span><br><span class="line">   user.setAvatar(<span class="string">&quot;&quot;</span>); <span class="comment">//上传一次先清空原照片</span></span><br><span class="line">   String FileType= ossClientUtil.getContentType(multipartFile);</span><br><span class="line">   String url = ossClientUtil.uploadDocument(multipartFile,FileType);</span><br><span class="line">   System.out.println(<span class="string">&quot;路径：&quot;</span>+url);</span><br><span class="line">   ReturnMsg returnMsg = <span class="keyword">new</span> ReturnMsg();</span><br><span class="line">   <span class="keyword">if</span>(url!=<span class="keyword">null</span>)&#123;</span><br><span class="line">      returnMsg.isSuccess(url);</span><br><span class="line">      user.setAvatar(url);</span><br><span class="line">   &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      returnMsg.fail(<span class="string">&quot;文件上传失败&quot;</span>);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">return</span>  returnMsg;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="对象存储工具类"><a href="#对象存储工具类" class="headerlink" title="对象存储工具类"></a>对象存储工具类</h2><ul><li>首先封装一些需要的参数（特定参数需自行查找）</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.netease.utils;</span><br><span class="line"></span><br><span class="line"><span class="comment">//阿里云OSS参数常量类</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OSSClientConstants</span> </span>&#123;</span><br><span class="line">    <span class="comment">//阿里云API的外网域名 以上海为例，其他按情况填写</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String ENDPOINT = <span class="string">&quot;oss-cn-shanghai.aliyuncs.com&quot;</span>;</span><br><span class="line">    <span class="comment">//阿里云API的密钥Access Key ID</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String ACCESS_KEY_ID = <span class="string">&quot;LTAI5tGkaLxxxxZm&quot;</span>;</span><br><span class="line">    <span class="comment">//阿里云API的密钥Access Key Secret</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String ACCESS_KEY_SECRET = <span class="string">&quot;FG6ttcllvChgxxxytzJu&quot;</span>;</span><br><span class="line">    <span class="comment">//阿里云API的bucket名称</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String BUCKET_NAME = <span class="string">&quot;origins-xiaoliblog&quot;</span>;</span><br><span class="line">    <span class="comment">//Bucket 域名即外网访问的域名</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String BUCKET_URL= <span class="string">&quot;http://origins-xiaoliblog.oss-cn-shanghai.aliyuncs.com/&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>创建OSS工具类</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.netease.utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.aliyun.oss.OSSClient;</span><br><span class="line"><span class="keyword">import</span> com.aliyun.oss.model.CannedAccessControlList;</span><br><span class="line"><span class="keyword">import</span> com.aliyun.oss.model.CreateBucketRequest;</span><br><span class="line"><span class="keyword">import</span> com.aliyun.oss.model.OSSObject;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.multipart.MultipartFile;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.ByteArrayInputStream;</span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.UUID;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span> <span class="comment">//实例化 便于在控制器中自动装配</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AliyunOSSClientUtil</span> </span>&#123;</span><br><span class="line">    <span class="comment">//阿里云API的内或外网域名</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String ENDPOINT;</span><br><span class="line">    <span class="comment">//阿里云API的密钥Access Key ID</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String ACCESS_KEY_ID;</span><br><span class="line">    <span class="comment">//阿里云API的密钥Access Key Secret</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span>  String ACCESS_KEY_SECRET;</span><br><span class="line">    <span class="comment">//阿里云API的bucket名称</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String BUCKET_NAME;</span><br><span class="line">    <span class="comment">//Bucket 域名即外网访问的域名</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String BUCKET_URL;</span><br><span class="line">    <span class="comment">//日期格式化对象</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> SimpleDateFormat SDF = <span class="keyword">new</span> SimpleDateFormat(<span class="string">&quot;yyyymmdd&quot;</span>); <span class="comment">//日期格式化对象</span></span><br><span class="line">    <span class="comment">//初始化属性</span></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        ENDPOINT = OSSClientConstants.ENDPOINT;</span><br><span class="line">        ACCESS_KEY_ID = OSSClientConstants.ACCESS_KEY_ID;</span><br><span class="line">        ACCESS_KEY_SECRET = OSSClientConstants.ACCESS_KEY_SECRET;</span><br><span class="line">        BUCKET_NAME = OSSClientConstants.BUCKET_NAME;</span><br><span class="line">        BUCKET_URL = OSSClientConstants.BUCKET_URL;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取阿里云OSS客户端对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> ossClient</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> OSSClient <span class="title">getOSSClient</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//创建一个OSSClient对象</span></span><br><span class="line">        OSSClient ossClient = <span class="keyword">new</span> OSSClient(ENDPOINT, ACCESS_KEY_ID, ACCESS_KEY_SECRET);</span><br><span class="line">        <span class="comment">//通过连接对象判断Bucket仓库是否存在</span></span><br><span class="line">        <span class="keyword">if</span>(ossClient.doesBucketExist(BUCKET_NAME))&#123;</span><br><span class="line">            System.out.println(BUCKET_NAME+<span class="string">&quot;仓库存在&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="comment">//如果没有就通过API接口创建Bucket仓库</span></span><br><span class="line">            System.out.println(<span class="string">&quot;Bucket不存在，创建新的Bucket:&quot;</span>+BUCKET_NAME);</span><br><span class="line">            CreateBucketRequest bucketRequest = <span class="keyword">new</span> CreateBucketRequest(<span class="keyword">null</span>);</span><br><span class="line">            <span class="comment">//设置Bucket名称</span></span><br><span class="line">            bucketRequest.setBucketName(BUCKET_NAME);</span><br><span class="line">            <span class="comment">//设置权限:公共读</span></span><br><span class="line">            bucketRequest.setCannedACL(CannedAccessControlList.PublicRead);</span><br><span class="line">            <span class="comment">//创建新Bucket</span></span><br><span class="line">            ossClient.createBucket(bucketRequest);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ossClient;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 创建模拟文件夹</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> ossClient oss连接</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> bucketName 存储空间</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> folder   模拟文件夹名如&quot;qj_nanjing/&quot;</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span>  文件夹名</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span>  String <span class="title">createFolder</span><span class="params">(OSSClient ossClient,String bucketName,String folder)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//判断文件夹是否存在，不存在则创建</span></span><br><span class="line">        <span class="keyword">if</span>(!ossClient.doesObjectExist(bucketName,folder))&#123;</span><br><span class="line">            <span class="comment">//创建文件夹</span></span><br><span class="line">            ossClient.putObject(bucketName,folder,<span class="keyword">new</span> ByteArrayInputStream(<span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">0</span>]));</span><br><span class="line">            System.out.println(<span class="string">&quot;创建文件夹成功&quot;</span>);</span><br><span class="line">            <span class="comment">//得到文件夹名</span></span><br><span class="line">            OSSObject ossObject = ossClient.getObject(bucketName,folder);</span><br><span class="line">            String fileDir = ossObject.getKey();</span><br><span class="line">            System.out.println(<span class="string">&quot;文件名为：&quot;</span>+fileDir);</span><br><span class="line">            <span class="keyword">return</span> fileDir;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> folder;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 上传图片至OSS</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> multipartFile 文件对象F</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> FileType  文件类型F</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> url 返回文件访问路径</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="comment">//MultipartFile是一个封装了文件信息的对象</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">uploadDocument</span><span class="params">(MultipartFile multipartFile, String FileType)</span></span>&#123;</span><br><span class="line">        <span class="comment">//获得OSS连接</span></span><br><span class="line">        OSSClient ossClient = <span class="keyword">this</span>.getOSSClient();</span><br><span class="line">        <span class="comment">//获取文件的后缀</span></span><br><span class="line">        String suffix = multipartFile.getOriginalFilename();</span><br><span class="line">        suffix = suffix.substring(suffix.lastIndexOf(<span class="string">&quot;.&quot;</span>)); <span class="comment">//.后面的</span></span><br><span class="line">        <span class="comment">//获得当前上传日期</span></span><br><span class="line">        String date = SDF.format(<span class="keyword">new</span> Date());</span><br><span class="line">        <span class="comment">//通过UUID名来避免文件重名</span></span><br><span class="line">        String uuid = UUID.randomUUID().toString().replace(<span class="string">&quot;-&quot;</span>,<span class="string">&quot;&quot;</span>);</span><br><span class="line">        <span class="comment">//组合文件名称</span></span><br><span class="line">        String filename = FileType + <span class="string">&quot;/&quot;</span> + date  + <span class="string">&quot;/&quot;</span> + uuid + suffix;</span><br><span class="line">        String url = <span class="keyword">null</span>;</span><br><span class="line">        <span class="comment">//通过OSSClient获得上传文件后返回的url</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            ossClient.putObject(BUCKET_NAME,filename,<span class="keyword">new</span> ByteArrayInputStream(multipartFile.getBytes()));</span><br><span class="line">            url = BUCKET_URL + filename;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="comment">//关闭连接</span></span><br><span class="line">            ossClient.shutdown();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> url;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 通过文件名判断并获取OSS服务文件上传时文件的contentType</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> multipartFile 文件对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 文件的contentType</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span>  String <span class="title">getContentType</span><span class="params">(MultipartFile multipartFile)</span></span>&#123;</span><br><span class="line">        <span class="comment">//获取文件的后缀</span></span><br><span class="line">        String suffix = multipartFile.getOriginalFilename();</span><br><span class="line">        suffix = suffix.substring(suffix.lastIndexOf(<span class="string">&quot;.&quot;</span>)); <span class="comment">//.后面的</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="string">&quot;.bmp&quot;</span>.equalsIgnoreCase(suffix)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;image/bmp&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(<span class="string">&quot;.gif&quot;</span>.equalsIgnoreCase(suffix)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;image/gif&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(<span class="string">&quot;.jpeg&quot;</span>.equalsIgnoreCase(suffix) || <span class="string">&quot;.jpg&quot;</span>.equalsIgnoreCase(suffix)  || <span class="string">&quot;.png&quot;</span>.equalsIgnoreCase(suffix) ) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;image/jpeg&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(<span class="string">&quot;.html&quot;</span>.equalsIgnoreCase(suffix)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;text/html&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(<span class="string">&quot;.txt&quot;</span>.equalsIgnoreCase(suffix)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;text/plain&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(<span class="string">&quot;.vsd&quot;</span>.equalsIgnoreCase(suffix)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;application/vnd.visio&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(<span class="string">&quot;.ppt&quot;</span>.equalsIgnoreCase(suffix) || <span class="string">&quot;pptx&quot;</span>.equalsIgnoreCase(suffix)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;application/vnd.ms-powerpoint&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(<span class="string">&quot;.doc&quot;</span>.equalsIgnoreCase(suffix) || <span class="string">&quot;docx&quot;</span>.equalsIgnoreCase(suffix)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;application/msword&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(<span class="string">&quot;.xml&quot;</span>.equalsIgnoreCase(suffix)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;text/xml&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//默认返回类型</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;image/jpeg&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="JS工具方法"><a href="#JS工具方法" class="headerlink" title="JS工具方法"></a>JS工具方法</h1><ul><li>获取地址栏参数</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取地址栏参数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getUrlParams</span>(<span class="params">param</span>)</span>&#123;</span><br><span class="line">   <span class="comment">// 用该属性获取页面 URL 地址从问号 (?) 开始的 URL（查询部分）</span></span><br><span class="line">   <span class="keyword">var</span> url = <span class="built_in">window</span>.location.search;</span><br><span class="line">   <span class="comment">// 正则筛选地址栏</span></span><br><span class="line">   <span class="keyword">var</span> reg = <span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">&quot;(^|&amp;)&quot;</span> + param + <span class="string">&quot;=([^&amp;]*)(&amp;|$)&quot;</span>);</span><br><span class="line">   <span class="comment">// 匹配目标参数</span></span><br><span class="line">   <span class="keyword">var</span> result = url.substr(<span class="number">1</span>).match(reg);</span><br><span class="line">   <span class="comment">//返回参数值</span></span><br><span class="line">   <span class="keyword">return</span> result ? <span class="built_in">decodeURIComponent</span>(result[<span class="number">2</span>]) : <span class="literal">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 比如localhost:8080/query?keywords=周杰伦</span></span><br><span class="line"><span class="keyword">var</span> query = getUrlParams(<span class="string">&quot;keywords&quot;</span>); <span class="comment">//周杰伦</span></span><br></pre></td></tr></table></figure><ul><li>回车跳转</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;search_input&quot;</span> <span class="attr">onkeypress</span>=<span class="string">&quot;return EnterSongList()&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//搜索框回车跳转</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">EnterSongList</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">   <span class="function"><span class="title">if</span>(<span class="params">event.keyCode == <span class="number">13</span></span>)</span>&#123;</span><br><span class="line">      <span class="keyword">var</span> keywords = $(<span class="string">&#x27;#search_input&#x27;</span>).val();</span><br><span class="line">      <span class="built_in">window</span>.location.href=<span class="string">&quot;$&#123;APP_PATH&#125;/user/songlist?keywords=&quot;</span>+keywords;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;登录视图&quot;&gt;&lt;a href=&quot;#登录视图&quot; class=&quot;headerlink&quot; title=&quot;登录视图&quot;&gt;&lt;/a&gt;登录视图&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;登录页面当用户名失去焦点后会异步获取用户头像信息&lt;/li&gt;
&lt;li&gt;登录调用了腾讯云的滑动验证码接口&lt;/li&gt;
</summary>
      
    
    
    
    <category term="项目案例" scheme="http://xiaoliblog.cn/categories/%E9%A1%B9%E7%9B%AE%E6%A1%88%E4%BE%8B/"/>
    
    <category term="全栈实例" scheme="http://xiaoliblog.cn/categories/%E9%A1%B9%E7%9B%AE%E6%A1%88%E4%BE%8B/%E5%85%A8%E6%A0%88%E5%AE%9E%E4%BE%8B/"/>
    
    
    <category term="项目案例" scheme="http://xiaoliblog.cn/tags/%E9%A1%B9%E7%9B%AE%E6%A1%88%E4%BE%8B/"/>
    
  </entry>
  
  <entry>
    <title>SSM项目🎯网易云音乐实战之注册模块</title>
    <link href="http://xiaoliblog.cn/page/neteaseshop03.html"/>
    <id>http://xiaoliblog.cn/page/neteaseshop03.html</id>
    <published>2021-06-18T15:00:16.110Z</published>
    <updated>2021-06-18T15:25:32.999Z</updated>
    
    <content type="html"><![CDATA[<h1 id="注册视图"><a href="#注册视图" class="headerlink" title="注册视图"></a>注册视图</h1><h2 id="HTML结构"><a href="#HTML结构" class="headerlink" title="HTML结构"></a>HTML结构</h2><ul><li>不通过表单自动提交，而是通过Ajax方式提交，最好满足以下条件<ul><li><code>&lt;form&gt;</code>不需要写提交路径和方式</li><li><code>&lt;input&gt;</code>标签不需要带<code>name</code>属性·</li><li>最好用<code>&lt;button&gt;</code> ，且<code>type=&quot;button&quot;</code></li></ul></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">class</span>=<span class="string">&quot;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;&quot;</span> <span class="attr">required</span> <span class="attr">autocomplete</span>=<span class="string">&quot;off&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;&quot;</span>&gt;</span>提交并注册<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>视图通过Bootstrap+Layui搭建</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;loginBox col-md-7 layui-anim layui-anim-scaleSpring&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>欢迎注册网易云音乐<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>音乐，是一种态度<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">form</span> <span class="attr">class</span>=<span class="string">&quot;form-horizontal&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;username&quot;</span> <span class="attr">class</span>=<span class="string">&quot;col-sm-2 control-label&quot;</span>&gt;</span>用户名<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-sm-5&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span> <span class="attr">id</span>=<span class="string">&quot;username&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;2-5位中文或者6-16位英文或数字的组合&quot;</span> <span class="attr">required</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">autocomplete</span>=<span class="string">&quot;off&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">&quot;tips usernameTips&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;password&quot;</span> <span class="attr">class</span>=<span class="string">&quot;col-sm-2 control-label&quot;</span>&gt;</span>密码<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-sm-5&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span> <span class="attr">id</span>=<span class="string">&quot;password&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;至少8位并包含大小写和数字,不能包含特殊字符&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">required</span> <span class="attr">autocomplete</span>=<span class="string">&quot;off&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">&quot;tips passwordTips&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;repassword&quot;</span> <span class="attr">class</span>=<span class="string">&quot;col-sm-2 control-label&quot;</span>&gt;</span>确认密码<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-sm-5&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span> <span class="attr">id</span>=<span class="string">&quot;repassword&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请再次输入密码进行确认&quot;</span> <span class="attr">required</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">autocomplete</span>=<span class="string">&quot;off&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">&quot;tips repasswordTips&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;email&quot;</span> <span class="attr">class</span>=<span class="string">&quot;col-sm-2 control-label&quot;</span>&gt;</span>邮箱<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-sm-5&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;email&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span> <span class="attr">id</span>=<span class="string">&quot;email&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;用户名@域名（域名后缀至少2个字符）&quot;</span> <span class="attr">required</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">autocomplete</span>=<span class="string">&quot;off&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">&quot;tips emailTips&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;code&quot;</span> <span class="attr">class</span>=<span class="string">&quot;col-sm-2 control-label&quot;</span>&gt;</span>邮箱验证码<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-sm-5&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span> <span class="attr">id</span>=<span class="string">&quot;code&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入邮箱验证码&quot;</span> <span class="attr">required</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">autocomplete</span>=<span class="string">&quot;off&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-success&quot;</span> <span class="attr">id</span>=<span class="string">&quot;sendEmail&quot;</span>&gt;</span>点击发送<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-sm-offset-2 col-sm-10&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;checkbox&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">label</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span>&gt;</span> 我已阅读并同意相关服务条款和隐私政策</span><br><span class="line">                        <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">&quot;tips checkboxTips&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-sm-offset-2 col-sm-10&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-info&quot;</span> <span class="attr">id</span>=<span class="string">&quot;submit&quot;</span>&gt;</span>提交并注册<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;reset&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-danger&quot;</span> <span class="attr">id</span>=<span class="string">&quot;reset&quot;</span> <span class="attr">style</span>=<span class="string">&quot;margin-left: 20px;&quot;</span>&gt;</span>重置表单<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@8f73e4a11effedcb3be0bfcca165e681a69b3812/2021/06/18/8cbaa23b887a9285b1e279f5c5405110.png"></p><h2 id="JS校验"><a href="#JS校验" class="headerlink" title="JS校验"></a>JS校验</h2><ul><li>通过对DOM节点<code>&lt;label class=&quot;tips xxxTips&quot;&gt;&lt;/label&gt;</code>进行添加、删除提示</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取元素</span></span><br><span class="line"><span class="keyword">var</span> $username = $(<span class="string">&#x27;#username&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> $password = $(<span class="string">&#x27;#password&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> $repassword = $(<span class="string">&#x27;#repassword&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> $email = $(<span class="string">&#x27;#email&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> $code = $(<span class="string">&#x27;#code&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//为每个表单提交失去焦点事件</span></span><br><span class="line">$(<span class="string">&quot;form :input&quot;</span>).blur(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">    $(<span class="string">&quot;.tips&quot;</span>).empty(); <span class="comment">//删除以前的提醒元素（find()：查找匹配元素集中元素的所有匹配元素）</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//验证用户名</span></span><br><span class="line">    <span class="keyword">if</span> ($(<span class="built_in">this</span>).is($username)) &#123;</span><br><span class="line">        <span class="keyword">var</span> username = $.trim(<span class="built_in">this</span>.value); <span class="comment">//去空格</span></span><br><span class="line">        <span class="keyword">var</span> regName = <span class="regexp">/(^[a-zA-Z0-9_-]&#123;6,16&#125;$)|(^[\u2E80-\u9FFF]&#123;2,5&#125;)/</span>;;</span><br><span class="line">        <span class="keyword">if</span> (!regName.test(username)) &#123;</span><br><span class="line">            <span class="keyword">var</span> errorMsg = <span class="built_in">this</span>.placeholder; <span class="comment">//获取输入提示框的值</span></span><br><span class="line">            <span class="keyword">var</span> imgNode = <span class="string">&quot;&lt;img src=&#x27;$&#123;APP_PATH &#125;/static/images/logo/x.png&#x27;&gt;&quot;</span>;</span><br><span class="line">            $(<span class="string">&quot;.usernameTips&quot;</span>).append(imgNode + errorMsg);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// 异步检查是否存在用户名</span></span><br><span class="line">            $.ajax(&#123;</span><br><span class="line">                url: <span class="string">&quot;$&#123;APP_PATH&#125;/verifyUsername&quot;</span>,</span><br><span class="line">                type: <span class="string">&#x27;get&#x27;</span>,</span><br><span class="line">                dataType: <span class="string">&#x27;json&#x27;</span>,</span><br><span class="line">                data: &#123;</span><br><span class="line">                    username: username</span><br><span class="line">                &#125;,</span><br><span class="line">                success: <span class="function"><span class="keyword">function</span> (<span class="params">res</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">if</span> (res.flag == <span class="number">1</span>) &#123; <span class="comment">//不存在表示可用</span></span><br><span class="line">                        <span class="keyword">var</span> successMsg = res.message; <span class="comment">//获取输入提示框的值</span></span><br><span class="line">                        <span class="keyword">var</span> imgNode = <span class="string">&quot;&lt;img src=&#x27;$&#123;APP_PATH &#125;/static/images/logo/p1_2.png&#x27;&gt;&quot;</span>;</span><br><span class="line">                        $(<span class="string">&quot;.usernameTips&quot;</span>).append(imgNode + successMsg);</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123; <span class="comment">// 存在表示不可用</span></span><br><span class="line">                        <span class="keyword">var</span> errorMsg = res.message; <span class="comment">//获取输入提示框的值</span></span><br><span class="line">                        <span class="keyword">var</span> imgNode = <span class="string">&quot;&lt;img src=&#x27;$&#123;APP_PATH &#125;/static/images/logo/x.png&#x27;&gt;&quot;</span>;</span><br><span class="line">                        $(<span class="string">&quot;.usernameTips&quot;</span>).append(imgNode + errorMsg);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//验证密码</span></span><br><span class="line">    <span class="keyword">if</span> ($(<span class="built_in">this</span>).is($password)) &#123;</span><br><span class="line">        <span class="keyword">var</span> password = $.trim(<span class="built_in">this</span>.value); <span class="comment">//去空格</span></span><br><span class="line">        <span class="keyword">var</span> regName = <span class="regexp">/^(?=.*[A-Za-z])(?=.*\d)[A-Za-z\d]&#123;8,&#125;$/</span>;</span><br><span class="line">        <span class="keyword">if</span> (!regName.test(password)) &#123;</span><br><span class="line">            <span class="keyword">var</span> errorMsg = <span class="built_in">this</span>.placeholder; <span class="comment">//获取输入提示框的值</span></span><br><span class="line">            <span class="keyword">var</span> imgNode = <span class="string">&quot;&lt;img src=&#x27;$&#123;APP_PATH &#125;/static/images/logo/x.png&#x27;&gt;&quot;</span>;</span><br><span class="line">            $(<span class="string">&quot;.passwordTips&quot;</span>).append(imgNode + errorMsg);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">var</span> imgNode = <span class="string">&quot;&lt;img src=&#x27;$&#123;APP_PATH &#125;/static/images/logo/p1_2.png&#x27;&gt;&quot;</span>;</span><br><span class="line">            $(<span class="string">&quot;.passwordTips&quot;</span>).append(imgNode);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//再次确认密码</span></span><br><span class="line">    <span class="keyword">if</span> ($(<span class="built_in">this</span>).is($repassword)) &#123;</span><br><span class="line">        <span class="keyword">var</span> password = $(<span class="string">&quot;#password&quot;</span>).val(); <span class="comment">//原密码值</span></span><br><span class="line">        <span class="keyword">var</span> repassword = $.trim(<span class="built_in">this</span>.value); <span class="comment">//去空格</span></span><br><span class="line">        <span class="keyword">if</span> (password != repassword || repassword == <span class="string">&#x27;&#x27;</span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> errorMsg = <span class="string">&quot;两次输入的密码不一致&quot;</span>;</span><br><span class="line">            <span class="keyword">var</span> imgNode = <span class="string">&quot;&lt;img src=&#x27;$&#123;APP_PATH &#125;/static/images/logo/x.png&#x27;&gt;&quot;</span>;</span><br><span class="line">            $(<span class="string">&quot;.repasswordTips&quot;</span>).append(imgNode + errorMsg);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">var</span> imgNode = <span class="string">&quot;&lt;img src=&#x27;$&#123;APP_PATH &#125;/static/images/logo/p1_2.png&#x27;&gt;&quot;</span>;</span><br><span class="line">            $(<span class="string">&quot;.repasswordTips&quot;</span>).append(imgNode);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//验证邮箱</span></span><br><span class="line">    <span class="keyword">if</span> ($(<span class="built_in">this</span>).is($email)) &#123;</span><br><span class="line">        <span class="keyword">var</span> email = $.trim(<span class="built_in">this</span>.value); <span class="comment">//去空格</span></span><br><span class="line">        <span class="keyword">var</span> regName = <span class="regexp">/^([A-Za-z0-9_\-\.])+\@([A-Za-z0-9_\-\.])+\.([A-Za-z]&#123;2,4&#125;)$/</span>;</span><br><span class="line">        <span class="keyword">if</span> (!regName.test(email)) &#123;</span><br><span class="line">            <span class="keyword">var</span> errorMsg = <span class="built_in">this</span>.placeholder; <span class="comment">//获取输入提示框的值</span></span><br><span class="line">            <span class="keyword">var</span> imgNode = <span class="string">&quot;&lt;img src=&#x27;$&#123;APP_PATH &#125;/static/images/logo/x.png&#x27;&gt;&quot;</span>;</span><br><span class="line">            $(<span class="string">&quot;.emailTips&quot;</span>).append(imgNode + errorMsg);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">var</span> imgNode = <span class="string">&quot;&lt;img src=&#x27;$&#123;APP_PATH &#125;/static/images/logo/p1_2.png&#x27;&gt;&quot;</span>;</span><br><span class="line">            $(<span class="string">&quot;.emailTips&quot;</span>).append(imgNode);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="异步检测"><a href="#异步检测" class="headerlink" title="异步检测"></a>异步检测</h2><ul><li>创建控制器处理用户失去焦点后，发送异步请求校验用户名</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//异步验证用户名是否存在</span></span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/verifyUsername&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> ReturnMsg <span class="title">verifyUsername</span><span class="params">(String username)</span> </span>&#123;</span><br><span class="line">   <span class="comment">//后端校验</span></span><br><span class="line">   String regName = <span class="string">&quot;(^[a-zA-Z0-9_-]&#123;6,16&#125;$)|(^[\\u2E80-\\u9FFF]&#123;2,5&#125;)&quot;</span>;</span><br><span class="line">   <span class="comment">//如果不匹配</span></span><br><span class="line">   ReturnMsg returnMsg = <span class="keyword">new</span> ReturnMsg();</span><br><span class="line">   <span class="keyword">if</span>(!username.matches(regName))&#123;</span><br><span class="line">      returnMsg.fail(<span class="string">&quot;用户名必须是6-16数字或字母的组合，或者2-5位汉字&quot;</span>);</span><br><span class="line">   &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      User user = userService.queryUserByUsername(username);</span><br><span class="line">      <span class="keyword">if</span> (user != <span class="keyword">null</span>) &#123;</span><br><span class="line">         <span class="comment">//用户已存在</span></span><br><span class="line">         returnMsg.fail(<span class="string">&quot;此用户已存在&quot;</span>);</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">         returnMsg.isSuccess(<span class="string">&quot;此用户名可用&quot;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">    <span class="keyword">return</span>  returnMsg;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="邮箱验证"><a href="#邮箱验证" class="headerlink" title="邮箱验证"></a>邮箱验证</h1><h2 id="JS部分"><a href="#JS部分" class="headerlink" title="JS部分"></a>JS部分</h2><ul><li>点击发送按钮，先判断邮箱是否为空，不为空就发送请求</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//发送邮箱</span></span><br><span class="line">$(<span class="string">&#x27;#sendEmail&#x27;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> ($(<span class="string">&quot;#email&quot;</span>).val() != <span class="string">&#x27;&#x27;</span>) &#123;</span><br><span class="line">        time(<span class="built_in">this</span>)</span><br><span class="line">        $.ajax(&#123;</span><br><span class="line">            url: <span class="string">&quot;$&#123;APP_PATH&#125;/sendEmail&quot;</span>,</span><br><span class="line">            type: <span class="string">&quot;get&quot;</span>,</span><br><span class="line">            data: &#123;</span><br><span class="line">                email: $email.val()</span><br><span class="line">            &#125;,</span><br><span class="line">            dataType: <span class="string">&#x27;json&#x27;</span>,</span><br><span class="line">            success: <span class="function"><span class="keyword">function</span> (<span class="params">res</span>) </span>&#123;</span><br><span class="line">                <span class="keyword">if</span> (res.flag == <span class="number">1</span>) &#123;</span><br><span class="line">                    layer.msg(<span class="string">&#x27;发送成功！请注意查收&#x27;</span>, &#123;</span><br><span class="line">                        icon: <span class="number">1</span></span><br><span class="line">                    &#125;);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    layer.msg(<span class="string">&#x27;res.message&#x27;</span>, &#123;</span><br><span class="line">                        time: <span class="number">600</span>,</span><br><span class="line">                        icon: <span class="number">2</span></span><br><span class="line">                    &#125;);</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        layer.msg(<span class="string">&#x27;邮箱不能为空!&#x27;</span>, &#123;</span><br><span class="line">            time: <span class="number">600</span>,</span><br><span class="line">            icon: <span class="number">2</span></span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ul><li>点击按钮后出现倒计时效果，当time为0时，发送请求情况验证码code</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//倒计时效果</span></span><br><span class="line"><span class="keyword">var</span> wait = <span class="number">60</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">time</span>(<span class="params">obj</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (wait == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="comment">//也可在此处ajax去清空验证码</span></span><br><span class="line">        $.ajax(&#123;</span><br><span class="line">            url: <span class="string">&quot;$&#123;APP_PATH&#125;/clearcode&quot;</span>,</span><br><span class="line">            dataType: <span class="string">&#x27;json&#x27;</span>,</span><br><span class="line">            type: <span class="string">&#x27;get&#x27;</span>,</span><br><span class="line">            success: <span class="function"><span class="keyword">function</span> (<span class="params">res</span>) </span>&#123;</span><br><span class="line">                <span class="keyword">if</span> (res.flag == <span class="number">1</span>) &#123;</span><br><span class="line">                    layer.msg(<span class="string">&#x27;验证码已失效，请重新发送!&#x27;</span>, &#123;</span><br><span class="line">                        time: <span class="number">600</span>,</span><br><span class="line">                        icon: <span class="number">2</span></span><br><span class="line">                    &#125;);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    layer.msg(<span class="string">&#x27;验证码重失败置&#x27;</span>, &#123;</span><br><span class="line">                        time: <span class="number">600</span>,</span><br><span class="line">                        icon: <span class="number">2</span></span><br><span class="line">                    &#125;);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            error: <span class="function"><span class="keyword">function</span> (<span class="params">msg</span>) </span>&#123;</span><br><span class="line">                layer.msg(<span class="string">&#x27;服务跑到火星去了，用户登录信息获取失败!&#x27;</span>, &#123;</span><br><span class="line">                    icon: <span class="number">2</span></span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">        obj.removeAttribute(<span class="string">&quot;disabled&quot;</span>);</span><br><span class="line">        obj.innerHTML = <span class="string">&quot;再次发送&quot;</span>;</span><br><span class="line">        obj.style.backgroundColor = <span class="string">&quot;#fe9900&quot;</span>;</span><br><span class="line">        wait = <span class="number">60</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        obj.setAttribute(<span class="string">&quot;disabled&quot;</span>, <span class="literal">true</span>);</span><br><span class="line">        obj.innerHTML = wait + <span class="string">&quot;秒后重新获取&quot;</span>;</span><br><span class="line">        obj.style.backgroundColor = <span class="string">&quot;#8f8b8b&quot;</span>;</span><br><span class="line">        wait--;</span><br><span class="line">        <span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            time(obj)</span><br><span class="line">        &#125;, <span class="number">1000</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="邮箱工具类"><a href="#邮箱工具类" class="headerlink" title="邮箱工具类"></a>邮箱工具类</h2><ul><li>创建一个邮箱工具类用于发送邮箱</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.netease.utils;</span><br><span class="line"><span class="keyword">import</span> com.sun.mail.util.MailSSLSocketFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.mail.*;</span><br><span class="line"><span class="keyword">import</span> javax.mail.internet.InternetAddress;</span><br><span class="line"><span class="keyword">import</span> javax.mail.internet.MimeMessage;</span><br><span class="line"><span class="keyword">import</span> com.netease.pojo.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"></span><br><span class="line"><span class="comment">//网站3秒原则：一个网页白屏加载超过3秒以上用户体验差</span></span><br><span class="line"><span class="comment">//多线程实现用户体验 （异步处理）</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">sendEmail</span></span>&#123;</span><br><span class="line">    <span class="comment">//发件人邮箱地址</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String senderAddress = <span class="string">&quot;2312057536@qq.com&quot;</span>;</span><br><span class="line">    <span class="comment">//收件人邮箱地址</span></span><br><span class="line">    <span class="comment">//public static String recipientAddress = &quot;2312057536@qq.com&quot;;</span></span><br><span class="line">    <span class="comment">//发件人邮箱账户名</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String senderAccount = <span class="string">&quot;网易云工作室&quot;</span>;</span><br><span class="line">    <span class="comment">//发件人邮箱账户密码(独立密码或者授权码)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String senderPassword = <span class="string">&quot;npbhecqfbnmieaae&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//传入邮箱正文和收件人邮箱</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span>  <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">sendTo</span><span class="params">(String body,String recipientAddress)</span><span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">//连接邮件服务器的参数配置</span></span><br><span class="line">        Properties prop = <span class="keyword">new</span> Properties();</span><br><span class="line">        prop.setProperty(<span class="string">&quot;mail.host&quot;</span>, <span class="string">&quot;smtp.qq.com&quot;</span>); <span class="comment">//设置qq邮箱服务器</span></span><br><span class="line">        prop.setProperty(<span class="string">&quot;mail.transport.protocol&quot;</span>, <span class="string">&quot;smtp&quot;</span>); <span class="comment">//邮件发送协议</span></span><br><span class="line">        prop.setProperty(<span class="string">&quot;mail.smtp.auth&quot;</span>, <span class="string">&quot;true&quot;</span>); <span class="comment">//需要验证用户名密码</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//关于qq邮箱，还要设置ssl加密，加上一下代码即可,大厂，其他邮箱不需要</span></span><br><span class="line">        MailSSLSocketFactory sf = <span class="keyword">new</span> MailSSLSocketFactory();</span><br><span class="line">        sf.setTrustAllHosts(<span class="keyword">true</span>);</span><br><span class="line">        prop.put(<span class="string">&quot;mail.smtp.ssl.enable&quot;</span>, <span class="string">&quot;true&quot;</span>);</span><br><span class="line">        prop.put(<span class="string">&quot;mail.smtp.ssl.socketFactory&quot;</span>, sf);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//1.创建定义整个程序所需要的环境信息的Session 对象</span></span><br><span class="line">        <span class="comment">//其他:Session session = Session.getInstance(props);</span></span><br><span class="line">        <span class="comment">//qq才有！其他邮箱就不用</span></span><br><span class="line">        Session session = Session.getDefaultInstance(prop, <span class="keyword">new</span> Authenticator() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">protected</span> PasswordAuthentication <span class="title">getPasswordAuthentication</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                <span class="comment">//发件人邮箱用户名、授权码</span></span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">new</span> PasswordAuthentication(senderAddress, senderPassword);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">//开启Session的debug模式，这样就可以看到程序发送Email的运行状态</span></span><br><span class="line">        session.setDebug(<span class="keyword">true</span>); <span class="comment">//开启后可以看到进程</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//2.创建邮件的实例对象(利用封装的方法)</span></span><br><span class="line">        Message message = getMimeMessage(session,senderAddress,recipientAddress,body);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//3.通过session得到transport对象</span></span><br><span class="line">        Transport transport = session.getTransport();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//4.使用邮箱的账户名和授权码连接上邮箱服务器</span></span><br><span class="line">        transport.connect(senderAccount, senderPassword);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//5.发送邮件</span></span><br><span class="line">        transport.sendMessage(message, message.getAllRecipients());</span><br><span class="line"></span><br><span class="line">        <span class="comment">//如果只想发送给指定的人，可以如下写法</span></span><br><span class="line">        <span class="comment">//transport.sendMessage(message, new Address[]&#123;new InternetAddress(&quot;xxx@qq.com&quot;)&#125;);</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//6.关闭连接</span></span><br><span class="line">        transport.close();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> MimeMessage <span class="title">getMimeMessage</span><span class="params">(Session session,String senderAddress,String recipientAddress,String body)</span><span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">// 1. 创建一封邮件</span></span><br><span class="line">        MimeMessage message = <span class="keyword">new</span> MimeMessage(session);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2. From: 发件人</span></span><br><span class="line">        message.setFrom(<span class="keyword">new</span> InternetAddress(senderAddress));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3. To: 收件人（可以增加多个收件人、抄送、密送）</span></span><br><span class="line">        message.setRecipient(MimeMessage.RecipientType.TO, <span class="keyword">new</span> InternetAddress(recipientAddress));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 4. Subject: 邮件主题</span></span><br><span class="line">        message.setSubject(<span class="string">&quot;网易云用户账户验证&quot;</span>, <span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 5. Content: 邮件正文（可以使用html标签）</span></span><br><span class="line">        message.setContent(body, <span class="string">&quot;text/html;charset=UTF-8&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 6. 设置发件时间</span></span><br><span class="line">        message.setSentDate(<span class="keyword">new</span> Date());</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 7. 保存设置</span></span><br><span class="line">        message.saveChanges();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> message;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="控制层"><a href="#控制层" class="headerlink" title="控制层"></a>控制层</h2><ul><li>首先创建自定义返回前端的消息工具类</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.netease.utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * controller等接收ajax调用，返回消息体</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span></span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ReturnMsg</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">2017120301</span>;</span><br><span class="line">    <span class="keyword">private</span> Integer flag;  <span class="comment">//1 成功 0 失败</span></span><br><span class="line">    <span class="keyword">private</span> String message; <span class="comment">//提示信息 OK成功</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">static</span> <span class="keyword">int</span> OK=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">static</span> <span class="keyword">int</span> FAIL = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">private</span> HashMap&lt;String,Object&gt; hashMap = <span class="keyword">new</span> HashMap&lt;&gt;(); <span class="comment">//用于存储键值对</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> HashMap&lt;String, Object&gt; <span class="title">getHashMap</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> hashMap;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//获取session对象 hashMap.userInfo.属性名  放入键值对</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">(String str,Object obj)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.hashMap.put(str,obj);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ReturnMsg</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.flag = OK;  <span class="comment">//1</span></span><br><span class="line">        <span class="keyword">this</span>.message = <span class="string">&quot;OK&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//成功不带信息</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ReturnMsg <span class="title">isSuccess</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.flag = OK; <span class="comment">//1</span></span><br><span class="line">        <span class="keyword">this</span>.message = <span class="string">&quot;OK&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//成功带信息</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ReturnMsg <span class="title">isSuccess</span><span class="params">(String message)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.flag = OK; <span class="comment">//1</span></span><br><span class="line">        <span class="keyword">this</span>.message = message;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ReturnMsg <span class="title">fail</span><span class="params">(String message)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.flag = FAIL; <span class="comment">//0</span></span><br><span class="line">        <span class="keyword">this</span>.message = message;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getFlag</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> flag;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setFlag</span><span class="params">(Integer flag)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.flag = flag;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getMessage</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> message;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setMessage</span><span class="params">(String message)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.message = message;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ReturnMsg</span><span class="params">(Integer flag, String message, HashMap&lt;String, Object&gt; hashMap)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.flag = flag;</span><br><span class="line">        <span class="keyword">this</span>.message = message;</span><br><span class="line">        <span class="keyword">this</span>.hashMap = hashMap;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>创建一个<code>UserController</code>用于处理用户请求，通过UUID生成4位数的验证码，存到用户属性<code>code</code>中，全局定义了一个User对象，用于持久化数据</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">User user = <span class="keyword">new</span> User();</span><br><span class="line"></span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/sendEmail&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> ReturnMsg <span class="title">sendEmail</span><span class="params">(String email)</span> </span>&#123;</span><br><span class="line">   <span class="comment">//逻辑是 传入收件人邮箱，然后发送验证码，验证码存入数据库，然后注册按钮进行验证</span></span><br><span class="line">   <span class="comment">//倒计时，再发送请求情况验证码</span></span><br><span class="line">   String code = UUIDUtils.getUUID(<span class="number">4</span>);<span class="comment">//生成四位验证码 存入用户 并发送邮件</span></span><br><span class="line">   user.setCode(code); <span class="comment">//存入User</span></span><br><span class="line">   String emailBody = <span class="string">&quot;您的邮箱验证码为&lt;h1&gt;&quot;</span> + code + <span class="string">&quot;&lt;/h1&gt;请在60s&quot;</span> +</span><br><span class="line">                <span class="string">&quot;内完成验证，感谢您的支持！&quot;</span>;</span><br><span class="line">   String recipientAddress = email;</span><br><span class="line">   ReturnMsg returnMsg = <span class="keyword">new</span> ReturnMsg();</span><br><span class="line">   <span class="keyword">try</span> &#123;</span><br><span class="line">      sendEmail.sendTo(emailBody, recipientAddress);</span><br><span class="line">      returnMsg.isSuccess();</span><br><span class="line">      <span class="keyword">return</span> returnMsg;</span><br><span class="line">   &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">      System.out.println(<span class="string">&quot;发送失败&quot;</span>);</span><br><span class="line">      returnMsg.fail(<span class="string">&quot;发送失败！请重新发送&quot;</span>);</span><br><span class="line">      <span class="keyword">return</span> returnMsg;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>60S后再发送请求情况验证码</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//清空验证码 验证码失效</span></span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="meta">@RequestMapping(value = &quot;/clearcode&quot;, method = RequestMethod.GET)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> ReturnMsg <span class="title">clearcode</span><span class="params">()</span> </span>&#123;</span><br><span class="line">   user.setCode(<span class="string">&quot;&quot;</span>);</span><br><span class="line">   ReturnMsg returnMsg = <span class="keyword">new</span> ReturnMsg();</span><br><span class="line">   <span class="keyword">if</span> (user.getCode().equals(<span class="string">&quot;&quot;</span>)) &#123;</span><br><span class="line">      returnMsg.isSuccess();</span><br><span class="line">      <span class="keyword">return</span> returnMsg;</span><br><span class="line">   &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      returnMsg.fail(<span class="string">&quot;验证码未清空&quot;</span>);</span><br><span class="line">      <span class="keyword">return</span> returnMsg;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="表单提交"><a href="#表单提交" class="headerlink" title="表单提交"></a>表单提交</h1><h2 id="JS部分-1"><a href="#JS部分-1" class="headerlink" title="JS部分"></a>JS部分</h2><ul><li>表单提交的条件<ul><li> 首先确保<code>tips</code>没有子元素<code>img</code>才能提交发ajax，及没有提示信息</li><li> 确保勾选了阅读协议</li><li> 然后发送<code>addUser</code>请求，邮箱验证码进行校验后再添加用户到数据库</li></ul></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//表单提交验证 主要对验证码进行验证</span></span><br><span class="line">$(<span class="string">&#x27;#submit&#x27;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">//首先确保tips没有子元素img才能提交发ajax</span></span><br><span class="line">    <span class="comment">//&lt;label class=&quot;tips repasswordTips&quot;&gt;&lt;img src=&quot;&quot;&gt;文字&lt;/label&gt;</span></span><br><span class="line">    <span class="keyword">if</span> ($(<span class="string">&#x27;label.tips:has(img)&#x27;</span>).length) &#123;</span><br><span class="line">        <span class="comment">//含有子元素 不提交</span></span><br><span class="line">        layer.msg(<span class="string">&#x27;请正确填写注册信息&#x27;</span>, &#123;</span><br><span class="line">            time: <span class="number">600</span>,</span><br><span class="line">            icon: <span class="number">2</span></span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    $(<span class="string">&quot;.checkboxTips&quot;</span>).empty();</span><br><span class="line">    <span class="comment">//验证码校验</span></span><br><span class="line">    <span class="comment">//阅读协议</span></span><br><span class="line">    <span class="keyword">if</span> ($(<span class="string">&quot;input:checkbox&quot;</span>).prop(<span class="string">&quot;checked&quot;</span>)) &#123;</span><br><span class="line">        <span class="comment">//已勾选就发ajax请求</span></span><br><span class="line">        $.ajax(&#123;</span><br><span class="line">            url: <span class="string">&quot;$&#123;APP_PATH&#125;/addUser&quot;</span>,</span><br><span class="line">            type: <span class="string">&#x27;post&#x27;</span>,</span><br><span class="line">            data: &#123;</span><br><span class="line">                username: $username.val(),</span><br><span class="line">                password: $password.val(),</span><br><span class="line">                email: $email.val(),</span><br><span class="line">                code: $code.val()</span><br><span class="line">            &#125;,</span><br><span class="line">            dataType: <span class="string">&#x27;json&#x27;</span>,</span><br><span class="line">            success: <span class="function"><span class="keyword">function</span> (<span class="params">res</span>) </span>&#123;</span><br><span class="line">                <span class="keyword">if</span> (res.flag == <span class="number">1</span>) &#123;</span><br><span class="line">                    <span class="comment">//注册成功</span></span><br><span class="line">                    layer.alert(<span class="string">&#x27;恭喜注册成功，3秒后跳转到登录页面或者点击确定立即跳转&#x27;</span>, &#123;</span><br><span class="line">                        time: <span class="number">3</span> * <span class="number">1000</span>,</span><br><span class="line">                        icon: <span class="number">1</span>,</span><br><span class="line">                        success: <span class="function"><span class="keyword">function</span> (<span class="params">layero, index</span>) </span>&#123;</span><br><span class="line">                            <span class="keyword">var</span> timeNum = <span class="built_in">this</span>.time / <span class="number">1000</span>,</span><br><span class="line">                                setText = <span class="function"><span class="keyword">function</span> (<span class="params">start</span>) </span>&#123;</span><br><span class="line">                                    layer.title((start ? timeNum : --timeNum) + <span class="string">&#x27; 秒后关闭&#x27;</span>, index);</span><br><span class="line">                                &#125;;</span><br><span class="line">                            setText(!<span class="number">0</span>);</span><br><span class="line">                            <span class="built_in">this</span>.timer = <span class="built_in">setInterval</span>(setText, <span class="number">1000</span>);</span><br><span class="line">                            <span class="keyword">if</span> (timeNum &lt;= <span class="number">0</span>) <span class="built_in">clearInterval</span>(<span class="built_in">this</span>.timer);</span><br><span class="line">                        &#125;,</span><br><span class="line">                        end: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                            <span class="built_in">window</span>.location.href = <span class="string">&quot;$&#123;APP_PATH&#125;/user/login&quot;</span></span><br><span class="line">                            <span class="built_in">clearInterval</span>(<span class="built_in">this</span>.timer);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;);</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    layer.msg(res.message, &#123;</span><br><span class="line">                        time: <span class="number">600</span>,</span><br><span class="line">                        icon: <span class="number">2</span></span><br><span class="line">                    &#125;);</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span>; <span class="comment">//type=button 回调就不会重新刷新页面了</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="function"><span class="title">error</span>(<span class="params">e</span>)</span> &#123;</span><br><span class="line">                layer.msg(<span class="string">&#x27;不好意思，服务器跑到火星去了，注册异常！&#x27;</span>, &#123;</span><br><span class="line">                    time: <span class="number">600</span>,</span><br><span class="line">                    icon: <span class="number">2</span></span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">//alert(&quot;请勾选相关协议&quot;)</span></span><br><span class="line">        <span class="keyword">var</span> errorMsg = <span class="string">&quot;请勾选有关协议&quot;</span>; <span class="comment">//获取输入提示框的值</span></span><br><span class="line">        <span class="keyword">var</span> imgNode = <span class="string">&quot;&lt;img src=&#x27;$&#123;APP_PATH &#125;/static/images/logo/x.png&#x27;&gt;&quot;</span>;</span><br><span class="line">        $(<span class="string">&quot;.checkboxTips&quot;</span>).append(imgNode + errorMsg);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="控制层-1"><a href="#控制层-1" class="headerlink" title="控制层"></a>控制层</h2><ul><li>处理用户注册的请求，需要邮箱验证码正确后才能执行用户添加操作</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//添加注册用户，需要进行邮箱验证码的验证</span></span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="meta">@RequestMapping(value = &quot;/addUser&quot;, method = RequestMethod.POST)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> ReturnMsg <span class="title">addUser</span><span class="params">(String username, String email, String password, String code)</span> </span>&#123;</span><br><span class="line">   <span class="comment">//存入用户名，密码，邮箱</span></span><br><span class="line">   Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">   map.put(<span class="string">&quot;username&quot;</span>, username);</span><br><span class="line">   map.put(<span class="string">&quot;password&quot;</span>, password);</span><br><span class="line">   map.put(<span class="string">&quot;email&quot;</span>, email);</span><br><span class="line">   ReturnMsg returnMsg = <span class="keyword">new</span> ReturnMsg();</span><br><span class="line">   <span class="comment">//邮箱验证正确</span></span><br><span class="line">   <span class="keyword">if</span> (code.equals(user.getCode())) &#123;</span><br><span class="line">      <span class="keyword">int</span> result = userService.addUserSelective(map);</span><br><span class="line">      System.out.println(result);</span><br><span class="line">      <span class="keyword">if</span> (result &gt; <span class="number">0</span>) &#123; <span class="comment">//注册成功</span></span><br><span class="line">         returnMsg.isSuccess();</span><br><span class="line">         <span class="keyword">return</span> returnMsg;</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">         returnMsg.fail(<span class="string">&quot;注册失败&quot;</span>);</span><br><span class="line">         <span class="keyword">return</span> returnMsg;</span><br><span class="line">      &#125;</span><br><span class="line">   &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">         returnMsg.fail(<span class="string">&quot;邮箱验证码不正确或已失效!&quot;</span>);</span><br><span class="line">         <span class="keyword">return</span> returnMsg;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;注册视图&quot;&gt;&lt;a href=&quot;#注册视图&quot; class=&quot;headerlink&quot; title=&quot;注册视图&quot;&gt;&lt;/a&gt;注册视图&lt;/h1&gt;&lt;h2 id=&quot;HTML结构&quot;&gt;&lt;a href=&quot;#HTML结构&quot; class=&quot;headerlink&quot; title=&quot;HTML结</summary>
      
    
    
    
    <category term="项目案例" scheme="http://xiaoliblog.cn/categories/%E9%A1%B9%E7%9B%AE%E6%A1%88%E4%BE%8B/"/>
    
    <category term="全栈实例" scheme="http://xiaoliblog.cn/categories/%E9%A1%B9%E7%9B%AE%E6%A1%88%E4%BE%8B/%E5%85%A8%E6%A0%88%E5%AE%9E%E4%BE%8B/"/>
    
    
    <category term="项目案例" scheme="http://xiaoliblog.cn/tags/%E9%A1%B9%E7%9B%AE%E6%A1%88%E4%BE%8B/"/>
    
  </entry>
  
  <entry>
    <title>SSM项目🎯网易云音乐实战之环境搭建</title>
    <link href="http://xiaoliblog.cn/page/neteaseshop02.html"/>
    <id>http://xiaoliblog.cn/page/neteaseshop02.html</id>
    <published>2021-06-18T14:27:41.005Z</published>
    <updated>2021-06-21T09:17:42.576Z</updated>
    
    <content type="html"><![CDATA[<h1 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h1><div class="btns rounded center grid5">            <a href="https://gitee.com/xiaoliblog/netease-cloudmusic" title="下载源码"><i class="fas fa-download"></i>下载源码</a>          </div><h2 id="数据库设计"><a href="#数据库设计" class="headerlink" title="数据库设计"></a>数据库设计</h2><ul><li>首先创建数据库，本系统暂时失效了用户模块的功能，只需创建用户表即可。</li><li>每个人用户都有一个默认的头像avatar</li><li>增加code，用于后面邮箱验证码的操作，status字段可以实现邮箱激活</li></ul><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@36365946f7ec9ea4e6d28412b871cf536545646c/2021/06/18/7e5e512db56fdd17b3a68703883cde79.png"></p><h2 id="项目结构"><a href="#项目结构" class="headerlink" title="项目结构"></a>项目结构</h2><ul><li>项目结构按照MVC模式搭建</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">|--main</span><br><span class="line">   |--java</span><br><span class="line">      | com.netease</span><br><span class="line">         |--controller # 控制器</span><br><span class="line">         |--dao     # 持久层</span><br><span class="line">         |--interceptor  # 拦截器</span><br><span class="line">         |--pojo   # 实体类</span><br><span class="line">         |--service  # 业务层</span><br><span class="line">         |--utils  # 工具类</span><br><span class="line">   |--resources</span><br><span class="line">      |--mapper  # 存放Mapper配置文件</span><br><span class="line">      |--applicationContext.xml</span><br><span class="line">      |--db.properties</span><br><span class="line">      |--mybatis-config.xml </span><br><span class="line">      |--springmvc-servlet.xml</span><br><span class="line">   |--webapp</span><br><span class="line">      |--CSS，JS，图片等静态文件</span><br><span class="line">      |--WEB-INF</span><br><span class="line">         |--admin  # 管理员页面</span><br><span class="line">         |--pages  # 用户访问页面</span><br><span class="line">         |--web.xml</span><br><span class="line">      |--index.jsp</span><br><span class="line">|--test</span><br><span class="line">   |--java</span><br><span class="line">      |--MapperTest.java  #Spring单元测试</span><br><span class="line">      |--MvcTest.java  # MVC测试，可以使用Postman代替</span><br><span class="line">      |--UtilsTest.java  #工具类测试</span><br><span class="line">|--pom.xml</span><br></pre></td></tr></table></figure><h2 id="导入依赖"><a href="#导入依赖" class="headerlink" title="导入依赖"></a>导入依赖</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--Spring核心依赖--&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.3.7.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-beans<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.3.7.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.3.7.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-expression<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.3.7.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!--Spring AOP--&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-aop<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.3.7.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-aspects<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.3.7.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.aspectj<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aspectjrt<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.8.13<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.aspectj<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aspectjweaver<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.8.13<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>aopalliance<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aopalliance<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!--SpringAOP--&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-aspects<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.3.7.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.3.7.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-tx<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.3.7.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!--Spring WEB--&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.3.7.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-webmvc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.3.7.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!--Spring Test--&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.3.7.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!--MyBatis--&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.4.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!--MyBatis-Spring--&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!--数据库--&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.mchange<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>c3p0<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.9.5.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.41<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!--JSTL--&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>jstl<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jstl<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!--Servlet--&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javax.servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.0.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span> <span class="comment">&lt;!--服务器上有就剔除掉--&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!--JSP--&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet.jsp<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javax.servlet.jsp-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.3.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!--Junit--&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!--引入pageHelper分页插件--&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.pagehelper<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>pagehelper<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.0.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!--JSON字符串转换--&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.8.8<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!--JSR303数据校验--&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.hibernate<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>hibernate-validator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.4.1.Final<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!--Lombok--&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.18.18<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!--邮件工具包--&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.mail<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mail<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.4.7<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-codec<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-codec<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.10<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!-- https://mvnrepository.com/artifact/javax.activation/activation --&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.activation<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>activation<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!-- 腾讯云滑动验证码--&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.tencentcloudapi<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>tencentcloud-sdk-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.0.11<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!-- 支付宝支付 --&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alipay.sdk<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>alipay-sdk-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.13.58.ALL<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!-- 阿里云oss --&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.aliyun.oss<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aliyun-sdk-oss<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.10.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!--文件上传--&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-fileupload<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-fileupload<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!-- https://mvnrepository.com/artifact/commons-io/commons-io --&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-io<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-io<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!--上传阿里云OSS--&gt;</span></span><br><span class="line">       <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.jdom/jdom --&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.jdom<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jdom<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="SSM整合"><a href="#SSM整合" class="headerlink" title="SSM整合"></a>SSM整合</h1><h2 id="Web-xml配置"><a href="#Web-xml配置" class="headerlink" title="Web.xml配置"></a>Web.xml配置</h2><ul><li>首先配置<code>Web.xml</code></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://xmlns.jcp.org/xml/ns/javaee&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">version</span>=<span class="string">&quot;4.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--首次启动访问index.jsp--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">welcome-file-list</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>index.jsp<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">welcome-file-list</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--404 500 错误页面--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    &lt;error-page&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        &lt;error-code&gt;404&lt;/error-code&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        &lt;location&gt;404.jsp&lt;/location&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    &lt;/error-page&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    &lt;error-page&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        &lt;location&gt;500&lt;/location&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        &lt;location&gt;500.jsp&lt;/location&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    &lt;/error-page&gt;--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">session-config</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--session永不过期--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">session-timeout</span>&gt;</span>-1<span class="tag">&lt;/<span class="name">session-timeout</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">session-config</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--启动spring的容器--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context-param</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:applicationContext.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">context-param</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--配置会报错--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">listener</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">listener-class</span>&gt;</span>org.springframework.web.context.ContextLoaderListener<span class="tag">&lt;/<span class="name">listener-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">listener</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--配置视图控制器--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>dispatcherServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--加载springmvc-servlet.xml配置文件--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:springmvc-servlet.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">load-on-startup</span>&gt;</span>1<span class="tag">&lt;/<span class="name">load-on-startup</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--最大文件上传配置--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">multipart-config</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">max-file-size</span>&gt;</span>10000000000<span class="tag">&lt;/<span class="name">max-file-size</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">multipart-config</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>dispatcherServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--字符编码过滤器--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.springframework.web.filter.CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>encoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>utf-8<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>forceRequestEncoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>true<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>forceResponseEncoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>true<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="SpringMVC配置"><a href="#SpringMVC配置" class="headerlink" title="SpringMVC配置"></a>SpringMVC配置</h2><ul><li>即<code>springmvc-servlet.xml</code>配置文件</li><li>在<code>WEB-INF</code>下的页面是不能直接访问的，只能通过请求跳转<ul><li>第一种方式：请求可以通过Controller里写方法跳转</li><li>第二种方式：使用<code>&lt;mvc:view-controller path=&quot;&quot; view-name=&quot;&quot;/&gt;</code>标签实现，<code>path</code>里填请求名称，<code>view-name</code>为页面的真实路径</li></ul></li><li><code>&lt;mvc:cors&gt;</code>用于解决跨域请求，因为本项目使用了Vue请求网易云接口，会出现跨域现象</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:mvc</span>=<span class="string">&quot;http://www.springframework.org/schema/mvc&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--SpringMVC的配置文件，包含网站跳转逻辑的控制，配置  --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;com.netease&quot;</span> <span class="attr">use-default-filters</span>=<span class="string">&quot;false&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--只扫描控制器。  --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">context:include-filter</span> <span class="attr">type</span>=<span class="string">&quot;annotation&quot;</span> <span class="attr">expression</span>=<span class="string">&quot;org.springframework.stereotype.Controller&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">context:component-scan</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--不经过控制器跳转页面，path为请求路径,view-name为WEB-INF下的视图路径--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--user 用户跳转--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:view-controller</span> <span class="attr">path</span>=<span class="string">&quot;/user/login&quot;</span> <span class="attr">view-name</span>=<span class="string">&quot;pages/login&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:view-controller</span> <span class="attr">path</span>=<span class="string">&quot;/user/register&quot;</span> <span class="attr">view-name</span>=<span class="string">&quot;pages/register&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:view-controller</span> <span class="attr">path</span>=<span class="string">&quot;/user/shop&quot;</span> <span class="attr">view-name</span>=<span class="string">&quot;pages/shop&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:view-controller</span> <span class="attr">path</span>=<span class="string">&quot;/user/findpw&quot;</span> <span class="attr">view-name</span>=<span class="string">&quot;pages/findpw&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:view-controller</span> <span class="attr">path</span>=<span class="string">&quot;/user/songlist&quot;</span> <span class="attr">view-name</span>=<span class="string">&quot;pages/songlist&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:view-controller</span> <span class="attr">path</span>=<span class="string">&quot;/user/setting&quot;</span> <span class="attr">view-name</span>=<span class="string">&quot;pages/setting&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:view-controller</span> <span class="attr">path</span>=<span class="string">&quot;/index&quot;</span> <span class="attr">view-name</span>=<span class="string">&quot;../index&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:view-controller</span> <span class="attr">path</span>=<span class="string">&quot;user/goodsinfo&quot;</span> <span class="attr">view-name</span>=<span class="string">&quot;pages/GoodsInfo&quot;</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--admin 管理员跳转--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:view-controller</span> <span class="attr">path</span>=<span class="string">&quot;/admin/index&quot;</span> <span class="attr">view-name</span>=<span class="string">&quot;admin/index&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:view-controller</span> <span class="attr">path</span>=<span class="string">&quot;/admin/tologin&quot;</span> <span class="attr">view-name</span>=<span class="string">&quot;admin/login&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:view-controller</span> <span class="attr">path</span>=<span class="string">&quot;/admin/user_password&quot;</span> <span class="attr">view-name</span>=<span class="string">&quot;admin/user_password&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:view-controller</span> <span class="attr">path</span>=<span class="string">&quot;/admin/web_info&quot;</span> <span class="attr">view-name</span>=<span class="string">&quot;admin/web_info&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:view-controller</span> <span class="attr">path</span>=<span class="string">&quot;/admin/web_adv&quot;</span> <span class="attr">view-name</span>=<span class="string">&quot;admin/web_adv&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:view-controller</span> <span class="attr">path</span>=<span class="string">&quot;/admin/order_table&quot;</span> <span class="attr">view-name</span>=<span class="string">&quot;admin/order_table&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:view-controller</span> <span class="attr">path</span>=<span class="string">&quot;/admin/user_table&quot;</span> <span class="attr">view-name</span>=<span class="string">&quot;admin/user_table&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:view-controller</span> <span class="attr">path</span>=<span class="string">&quot;/admin/product_table&quot;</span> <span class="attr">view-name</span>=<span class="string">&quot;admin/product_table&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:view-controller</span> <span class="attr">path</span>=<span class="string">&quot;/admin/song_table&quot;</span> <span class="attr">view-name</span>=<span class="string">&quot;admin/song_table&quot;</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--配置视图解析器，方便页面返回  --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.web.servlet.view.InternalResourceViewResolver&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;prefix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;/WEB-INF/&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;suffix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;.jsp&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--两个标准配置  --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 将springmvc不能处理的请求交给tomcat --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:default-servlet-handler</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 能支持springmvc更高级的一些功能，JSR303校验，快捷的ajax...映射动态请求 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:annotation-driven</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--配置视图解析器--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:interceptors</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mvc:interceptor</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--包含/user/请求下面的所有请求，最好取一个父路径--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">mvc:mapping</span> <span class="attr">path</span>=<span class="string">&quot;/user/**&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;loginInterceptor&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.netease.interceptor.LoginInterceptor&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">mvc:interceptor</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mvc:interceptors</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--解决跨域问题--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:cors</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mvc:mapping</span> <span class="attr">path</span>=<span class="string">&quot;/**&quot;</span></span></span><br><span class="line"><span class="tag">                     <span class="attr">allowed-origins</span>=<span class="string">&quot;*&quot;</span></span></span><br><span class="line"><span class="tag">                     <span class="attr">allowed-methods</span>=<span class="string">&quot;POST, GET, OPTIONS, DELETE, PUT,PATCH&quot;</span></span></span><br><span class="line"><span class="tag">                     <span class="attr">allowed-headers</span>=<span class="string">&quot;Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With&quot;</span></span></span><br><span class="line"><span class="tag">                     <span class="attr">allow-credentials</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mvc:cors</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Spring配置"><a href="#Spring配置" class="headerlink" title="Spring配置"></a>Spring配置</h2><ul><li>数据库配置文件<code>db.properties</code></li></ul><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">jdbc.driverClass</span>=<span class="string">com.mysql.jdbc.Driver</span></span><br><span class="line"><span class="meta">jdbc.jdbcUrl</span>=<span class="string">jdbc:mysql://localhost:3306/music?useSSL=true&amp;useUnicode=true&amp;characterEncoding=UTF-8</span></span><br><span class="line"><span class="meta">jdbc.user</span>=<span class="string">root</span></span><br><span class="line"><span class="meta">jdbc.password</span>=<span class="string">123456</span></span><br></pre></td></tr></table></figure><ul><li><code>applicrionContext.xml</code>配置</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:aop</span>=<span class="string">&quot;http://www.springframework.org/schema/aop&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:tx</span>=<span class="string">&quot;http://www.springframework.org/schema/tx&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Spring配置文件的核心点（数据源、与mybatis的整合，事务控制） --&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;com.netease&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">context:exclude-filter</span> <span class="attr">type</span>=<span class="string">&quot;annotation&quot;</span></span></span><br><span class="line"><span class="tag">                                <span class="attr">expression</span>=<span class="string">&quot;org.springframework.stereotype.Controller&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">context:component-scan</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- Spring的配置文件，这里主要配置和业务逻辑有关的 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--=================== 数据源，事务控制，xxx ================--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:property-placeholder</span> <span class="attr">location</span>=<span class="string">&quot;classpath:db.properties&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;pooledDataSource&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.mchange.v2.c3p0.ComboPooledDataSource&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;jdbcUrl&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.jdbcUrl&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driverClass&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.driverClass&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;user&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.user&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.password&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--================== 配置和MyBatis的整合=============== --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;sqlSessionFactory&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.mybatis.spring.SqlSessionFactoryBean&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 指定mybatis全局配置文件的位置 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;configLocation&quot;</span> <span class="attr">value</span>=<span class="string">&quot;classpath:mybatis-config.xml&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;pooledDataSource&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 指定mybatis，mapper文件的位置 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;mapperLocations&quot;</span> <span class="attr">value</span>=<span class="string">&quot;classpath:mapper/*.xml&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 配置扫描器，将mybatis接口的实现加入到ioc容器中 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.mybatis.spring.mapper.MapperScannerConfigurer&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--扫描所有dao接口的实现，加入到ioc容器中 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;basePackage&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.netease.dao&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 配置一个可以执行批量的sqlSession --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;sqlSession&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.mybatis.spring.SqlSessionTemplate&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">&quot;sqlSessionFactory&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;sqlSessionFactory&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">constructor-arg</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--设置为SIMPLE 结果不出现负数--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">&quot;executorType&quot;</span> <span class="attr">value</span>=<span class="string">&quot;SIMPLE&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">constructor-arg</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--=============================================  --&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- ===============事务控制的配置 ================--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;transactionManager&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.jdbc.datasource.DataSourceTransactionManager&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--控制住数据源  --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;pooledDataSource&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--开启基于注解的事务，使用xml配置形式的事务（必要主要的都是使用配置式）  --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aop:config</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 切入点表达式 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">aop:pointcut</span> <span class="attr">expression</span>=<span class="string">&quot;execution(* com.netease.service..*(..))&quot;</span> <span class="attr">id</span>=<span class="string">&quot;txPoint&quot;</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 配置事务增强 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">aop:advisor</span> <span class="attr">advice-ref</span>=<span class="string">&quot;txAdvice&quot;</span> <span class="attr">pointcut-ref</span>=<span class="string">&quot;txPoint&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">aop:config</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--配置事务增强，事务如何切入  --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tx:advice</span> <span class="attr">id</span>=<span class="string">&quot;txAdvice&quot;</span> <span class="attr">transaction-manager</span>=<span class="string">&quot;transactionManager&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tx:attributes</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 所有方法都是事务方法 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">&quot;*&quot;</span>/&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--以get开始的所有方法  --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">&quot;get*&quot;</span> <span class="attr">read-only</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tx:attributes</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tx:advice</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--SpringMVC默认是关闭fileupload功能的，开启该能够并验证文件上传--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;multipartResolver&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">class</span>=<span class="string">&quot;org.springframework.web.multipart.commons.CommonsMultipartResolver&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--请求的编码格式，必须和JSP的pageEncoding属性一致，以便正确读取表单内容，默认为ISO-8859-1--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;defaultEncoding&quot;</span> <span class="attr">value</span>=<span class="string">&quot;utf-8&quot;</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--上传文件大小上限，单位为字节（10485760=10M)--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;maxUploadSize&quot;</span> <span class="attr">value</span>=<span class="string">&quot;10485760&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;maxInMemorySize&quot;</span> <span class="attr">value</span>=<span class="string">&quot;40960&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="MyBatis配置"><a href="#MyBatis配置" class="headerlink" title="MyBatis配置"></a>MyBatis配置</h2><ul><li><code>mybatis-config.xml</code>配置文件</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">configuration</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">settings</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">&quot;mapUnderscoreToCamelCase&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">&quot;logImpl&quot;</span> <span class="attr">value</span>=<span class="string">&quot;STDOUT_LOGGING&quot;</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 对于批量更新操作缓存SQL以提高性能  --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">&quot;defaultExecutorType&quot;</span> <span class="attr">value</span>=<span class="string">&quot;SIMPLE&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">settings</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">&quot;com.netease.pojo&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span> <span class="attr">interceptor</span>=<span class="string">&quot;com.github.pagehelper.PageInterceptor&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--分页参数合理化  --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;reasonable&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="单元测试"><a href="#单元测试" class="headerlink" title="单元测试"></a>单元测试</h1><h2 id="工具类"><a href="#工具类" class="headerlink" title="工具类"></a>工具类</h2><ul><li>创建一个得到UUID，日期及随机数的工具类</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.netease.utils;</span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.UUID;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UUIDUtils</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getUUID</span><span class="params">()</span></span>&#123;</span><br><span class="line">        String uuid = UUID.randomUUID().toString().replace(<span class="string">&quot;-&quot;</span>,<span class="string">&quot;&quot;</span>).toLowerCase();</span><br><span class="line">        <span class="keyword">return</span> uuid;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getUUID</span><span class="params">(<span class="keyword">int</span> length)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(length&lt;=<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        String uuid = getUUID();</span><br><span class="line">        StringBuffer str = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i&lt;length;i++)&#123;</span><br><span class="line">            str.append(uuid.charAt(i));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> str.toString();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getTime</span><span class="params">()</span></span>&#123;</span><br><span class="line">        SimpleDateFormat sdf = <span class="keyword">new</span> SimpleDateFormat(<span class="string">&quot;yyyy年MM月dd日HH:mm:ss&quot;</span>);</span><br><span class="line">        Date date = <span class="keyword">new</span> Date();</span><br><span class="line">        String str = sdf.format(date);<span class="comment">//2021年05月21日23:04:12</span></span><br><span class="line">        <span class="keyword">return</span> str;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Integer <span class="title">getRandom</span><span class="params">(<span class="keyword">int</span> start,<span class="keyword">int</span> end)</span></span>&#123;</span><br><span class="line">        <span class="comment">//num以内的随机</span></span><br><span class="line">        <span class="keyword">int</span> randomnum = (<span class="keyword">int</span>)(<span class="number">1</span>+Math.random()*(end-start+start));</span><br><span class="line">        <span class="keyword">return</span> randomnum;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="实体类"><a href="#实体类" class="headerlink" title="实体类"></a>实体类</h2><ul><li>实体类User，用到了JSR303校验</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.netease.pojo;</span><br><span class="line"><span class="keyword">import</span> lombok.AllArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> lombok.NoArgsConstructor;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.validation.constraints.Pattern;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">    <span class="comment">//JSR303后端校验，需要导入Hibernate-Validator包</span></span><br><span class="line">    <span class="meta">@Pattern(regexp=&quot;(^[a-zA-Z0-9_-]&#123;6,16&#125;$)|(^[\u2E80-\u9FFF]&#123;2,5&#125;)&quot;</span></span><br><span class="line"><span class="meta">            ,message=&quot;用户名必须是2-5位中文或者6-16位英文和数字的组合&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line">    <span class="meta">@Pattern(regexp = &quot;^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]&#123;8,&#125;$&quot;</span></span><br><span class="line"><span class="meta">            ,message=&quot;至少8位并包含大小写和数字,不能包含特殊字符&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line">    <span class="meta">@Pattern(regexp=&quot;^([a-z0-9_\\.-]+)@([\\da-z\\.-]+)\\.([a-z\\.]&#123;2,6&#125;)$&quot;,</span></span><br><span class="line"><span class="meta">            message=&quot;用户名@域名（域名后缀至少2个字符）&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String email;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> state;</span><br><span class="line">    <span class="keyword">private</span> String code;</span><br><span class="line">    <span class="keyword">private</span> String avatar;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Dao层"><a href="#Dao层" class="headerlink" title="Dao层"></a>Dao层</h2><ul><li><code>UserMapper</code>接口·</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.netease.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.netease.pojo.User;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Param;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserMapper</span> </span>&#123;</span><br><span class="line">    <span class="comment">//查询用户信息 多个结果用List</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">queryAllUser</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//根据用户名查询</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">queryUserByUsername</span><span class="params">(String username)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//根据用户名和密码查询 单个结果</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">queryUserBynameAndpwd</span><span class="params">(<span class="meta">@Param(&quot;username&quot;)</span> String username, <span class="meta">@Param(&quot;password&quot;)</span>String password)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//根据用户名和邮箱查询密码</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">queryPassword</span><span class="params">(<span class="meta">@Param(&quot;username&quot;)</span> String username, <span class="meta">@Param(&quot;email&quot;)</span>String email)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//增加用户 用户名参数过多 使用Map 有选择的增加用户信息</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">addUserSelective</span><span class="params">(Map&lt;String,Object&gt; map)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//清空表格数据</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">clearUserInfo</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="comment">//根据id删除用户</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">deleteUserByID</span><span class="params">(<span class="keyword">int</span> id)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//根据id查询用户 单个</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">queryUserByID</span><span class="params">(<span class="keyword">int</span> id)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//根据id更新用户信息</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">updateUserSelective</span><span class="params">(Map&lt;String,Object&gt; map)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//根据ID集合批量删除</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">deleteBatch</span><span class="params">(List&lt;Integer&gt; ids)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><code>UserMapperxml</code></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--namespace指定Dao/Mapper的完整路径--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.netease.dao.UserMapper&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--自定义映射--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;UserMap&quot;</span> <span class="attr">type</span>=<span class="string">&quot;com.netease.pojo.User&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">&quot;id&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;INTEGER&quot;</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;username&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;VARCHAR&quot;</span> <span class="attr">property</span>=<span class="string">&quot;username&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;password&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;VARCHAR&quot;</span> <span class="attr">property</span>=<span class="string">&quot;password&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;email&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;VARCHAR&quot;</span> <span class="attr">property</span>=<span class="string">&quot;email&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;state&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;INTEGER&quot;</span> <span class="attr">property</span>=<span class="string">&quot;state&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;code&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;VARCHAR&quot;</span> <span class="attr">property</span>=<span class="string">&quot;code&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;avatar&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;VARCHAR&quot;</span> <span class="attr">property</span>=<span class="string">&quot;avatar&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--自定义SQL片段--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">sql</span> <span class="attr">id</span>=<span class="string">&quot;User_Column_List&quot;</span>&gt;</span></span><br><span class="line">        id,username,password,email,state,code,avatar</span><br><span class="line">    <span class="tag">&lt;/<span class="name">sql</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--根据用户名查询--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;queryUserByUsername&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;String&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;UserMap&quot;</span>&gt;</span></span><br><span class="line">        select</span><br><span class="line">        <span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">&quot;User_Column_List&quot;</span>/&gt;</span></span><br><span class="line">        from t_user where username = #&#123;username&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--查询所有用户--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;queryAllUser&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;UserMap&quot;</span>&gt;</span></span><br><span class="line">        select</span><br><span class="line">        <span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">&quot;User_Column_List&quot;</span>/&gt;</span></span><br><span class="line">        from t_user</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--查询所有用户--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;queryUserByID&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;UserMap&quot;</span>&gt;</span></span><br><span class="line">        select</span><br><span class="line">        <span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">&quot;User_Column_List&quot;</span>/&gt;</span></span><br><span class="line">        from t_user where id = #&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--增加用户 主键回填 有则更新，无则插入--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">&quot;addUserSelective&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;map&quot;</span> <span class="attr">useGeneratedKeys</span>=<span class="string">&quot;true&quot;</span> <span class="attr">keyProperty</span>=<span class="string">&quot;id&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        alter table tablename auot_increnment = 1;--&gt;</span></span><br><span class="line">        insert into t_user</span><br><span class="line">        <span class="tag">&lt;<span class="name">trim</span> <span class="attr">prefix</span>=<span class="string">&quot;(&quot;</span> <span class="attr">suffix</span>=<span class="string">&quot;)&quot;</span> <span class="attr">suffixOverrides</span>=<span class="string">&quot;,&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;username != null&quot;</span>&gt;</span></span><br><span class="line">                username,</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;password != null&quot;</span>&gt;</span></span><br><span class="line">                password,</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;email != null&quot;</span>&gt;</span></span><br><span class="line">                email,</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;state != null&quot;</span>&gt;</span></span><br><span class="line">                state,</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;code != null&quot;</span>&gt;</span></span><br><span class="line">                code,</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;avatar != null&quot;</span>&gt;</span></span><br><span class="line">                avatar</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">trim</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">trim</span> <span class="attr">prefix</span>=<span class="string">&quot;values (&quot;</span> <span class="attr">suffix</span>=<span class="string">&quot;)&quot;</span> <span class="attr">suffixOverrides</span>=<span class="string">&quot;,&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;username != null&quot;</span>&gt;</span></span><br><span class="line">                #&#123;username&#125;,</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;password != null&quot;</span>&gt;</span></span><br><span class="line">                #&#123;password&#125;,</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;email != null&quot;</span>&gt;</span></span><br><span class="line">                #&#123;email&#125;,</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;state != null&quot;</span>&gt;</span></span><br><span class="line">                #&#123;state&#125;,</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;code != null&quot;</span>&gt;</span></span><br><span class="line">                #&#123;code&#125;,</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;avatar != null&quot;</span>&gt;</span></span><br><span class="line">                #&#123;avatar&#125;,</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">trim</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--根据ID删除用户--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">delete</span> <span class="attr">id</span>=<span class="string">&quot;deleteUserByID&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;int&quot;</span>&gt;</span></span><br><span class="line">        delete from t_user where id = #&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">delete</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--根据用户名和密码查询--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;queryUserBynameAndpwd&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;String&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;UserMap&quot;</span>&gt;</span></span><br><span class="line">        select  <span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">&quot;User_Column_List&quot;</span>/&gt;</span></span><br><span class="line">        from t_user where username = #&#123;username&#125; and password = #&#123;password&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--根据邮箱和用户名查询密码--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;queryPassword&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;UserMap&quot;</span>&gt;</span></span><br><span class="line">        select</span><br><span class="line">        <span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">&quot;User_Column_List&quot;</span>/&gt;</span></span><br><span class="line">        from t_user where username = #&#123;username&#125; and email = #&#123;email&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--更新用户信息动态SQL实现 只更新有值的数据--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">&quot;updateUserSelective&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;map&quot;</span>&gt;</span></span><br><span class="line">        update t_user</span><br><span class="line">        <span class="tag">&lt;<span class="name">set</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;username != null&quot;</span>&gt;</span></span><br><span class="line">                username = #&#123;username&#125;,</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;password != null&quot;</span>&gt;</span></span><br><span class="line">                password = #&#123;password&#125;,</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;email != null&quot;</span>&gt;</span></span><br><span class="line">                email = #&#123;email&#125;,</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;state != null&quot;</span>&gt;</span></span><br><span class="line">                state = #&#123;state&#125;,</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;code != null&quot;</span>&gt;</span></span><br><span class="line">                code = #&#123;code&#125;,</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;avatar != null&quot;</span>&gt;</span></span><br><span class="line">                avatar = #&#123;avatar&#125;,</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br><span class="line">        where id = #&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--清空用户数据,包含主键ID--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">&quot;clearUserInfo&quot;</span>&gt;</span></span><br><span class="line">        truncate table t_user;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--根据ID集合批量删除--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">delete</span> <span class="attr">id</span>=<span class="string">&quot;deleteBatch&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;list&quot;</span>&gt;</span></span><br><span class="line">        delete from t_user where id in</span><br><span class="line">        <span class="tag">&lt;<span class="name">foreach</span> <span class="attr">collection</span>=<span class="string">&quot;list&quot;</span> <span class="attr">item</span>=<span class="string">&quot;list&quot;</span> <span class="attr">index</span>=<span class="string">&quot;no&quot;</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">open</span>=<span class="string">&quot;(&quot;</span> <span class="attr">separator</span>=<span class="string">&quot;,&quot;</span> <span class="attr">close</span>=<span class="string">&quot;)&quot;</span>&gt;</span></span><br><span class="line">            #&#123;id&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">foreach</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">            delete from t_user where id in (1,2,3,4,5,...)</span></span><br><span class="line"><span class="comment">            foreach用来循环，collection用于指定循环的数据类型:arraylist,map</span></span><br><span class="line"><span class="comment">            item为每一个循环的数据指定一个别名，index为循环中的下标</span></span><br><span class="line"><span class="comment">            open为开始，close为结束，separator为数组之间的分隔符</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">delete</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Service层"><a href="#Service层" class="headerlink" title="Service层"></a>Service层</h2><ul><li><code>UserService</code>接口</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.netease.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.netease.pojo.User;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Param;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line">    <span class="comment">//查询用户信息</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">queryAllUser</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//根据用户名和密码查询</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">queryUserBynameAndpwd</span><span class="params">(<span class="meta">@Param(&quot;username&quot;)</span> String username, <span class="meta">@Param(&quot;password&quot;)</span>String password)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//根据用户名查询</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">queryUserByUsername</span><span class="params">(String username)</span></span>;</span><br><span class="line">    <span class="comment">//根据用户名和邮箱查询密码</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">queryPassword</span><span class="params">(<span class="meta">@Param(&quot;username&quot;)</span> String username, <span class="meta">@Param(&quot;email&quot;)</span>String email)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//增加用户</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">addUserSelective</span><span class="params">(Map&lt;String,Object&gt; map)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//根据id删除用户</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">deleteUserByID</span><span class="params">(<span class="keyword">int</span> id)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//清空表格数据</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">clearUserInfo</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//根据id查询用户</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">queryUserByID</span><span class="params">(<span class="keyword">int</span> id)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//更新用户信息</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">updateUserSelective</span><span class="params">(Map&lt;String,Object&gt; map)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//根据ID集合批量删除</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">deleteBatch</span><span class="params">(List&lt;Integer&gt; ids)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><code>UserServiceImpl</code></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.netease.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.netease.dao.UserMapper;</span><br><span class="line"><span class="keyword">import</span> com.netease.pojo.User;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Repository;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Repository</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title">UserService</span></span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserMapper userMapper;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">queryAllUser</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> userMapper.queryAllUser();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">queryUserByUsername</span><span class="params">(String username)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> userMapper.queryUserByUsername(username);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">queryUserBynameAndpwd</span><span class="params">(String username, String password)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> userMapper.queryUserBynameAndpwd(username,password);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">queryPassword</span><span class="params">(String username, String email)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> userMapper.queryPassword(username,email);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">addUserSelective</span><span class="params">(Map&lt;String,Object&gt; map)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> userMapper.addUserSelective(map);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">deleteUserByID</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> userMapper.deleteUserByID(id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">clearUserInfo</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> userMapper.clearUserInfo();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">queryUserByID</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> userMapper.queryUserByID(id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">updateUserSelective</span><span class="params">(Map&lt;String,Object&gt; map)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> userMapper.updateUserSelective(map);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">deleteBatch</span><span class="params">(List&lt;Integer&gt; ids)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> userMapper.deleteBatch(ids);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Spring单元测试"><a href="#Spring单元测试" class="headerlink" title="Spring单元测试"></a>Spring单元测试</h2><ul><li>Spring单元测试需要导入<code>Spring-test</code>包</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.netease.dao.*;</span><br><span class="line"><span class="keyword">import</span> com.netease.pojo.*;</span><br><span class="line"><span class="keyword">import</span> com.netease.utils.UUIDUtils;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSession;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"><span class="keyword">import</span> org.junit.runner.RunWith;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.test.context.ContextConfiguration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.test.context.junit4.SpringJUnit4ClassRunner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Auther</span>: http://xiaoliblog.cn</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span>: 2021/6/3</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: PACKAGE_NAME</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span>: 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RunWith(SpringJUnit4ClassRunner.class)</span></span><br><span class="line"><span class="meta">@ContextConfiguration(locations=&#123;&quot;classpath:applicationContext.xml&quot;&#125;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MapperTest</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    UserMapper userMapper;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    AdministratorMapper administratorMapper;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    SqlSession sqlSession;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//测试UserMapper</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testUserMapper</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">//1. 测试是否拿到了IOC容器里的Bean</span></span><br><span class="line">        System.out.println(userMapper);</span><br><span class="line">        <span class="comment">//清空所有用户数据 慎用</span></span><br><span class="line"><span class="comment">//        int result = userMapper.clearUserInfo();</span></span><br><span class="line"><span class="comment">//        System.out.println(result);</span></span><br><span class="line"><span class="comment">//        if(result == 0)&#123;</span></span><br><span class="line"><span class="comment">//            System.out.println(&quot;清空数据成功&quot;);</span></span><br><span class="line"><span class="comment">//        &#125;else&#123;</span></span><br><span class="line"><span class="comment">//            System.out.println(&quot;清空数据失败&quot;);</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//2. 插入用户数据</span></span><br><span class="line"><span class="comment">//        Map&lt;String,Object&gt; map = new HashMap&lt;&gt;();</span></span><br><span class="line"><span class="comment">//        map.put(&quot;username&quot;,&quot;廖文龙12&quot;);</span></span><br><span class="line"><span class="comment">//        map.put(&quot;password&quot;,&quot;12345&quot;);</span></span><br><span class="line"><span class="comment">//        map.put(&quot;email&quot;,&quot;231312313@1.com&quot;);</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//        try&#123;</span></span><br><span class="line"><span class="comment">//            int result1 =  userMapper.addUserSelective(map);</span></span><br><span class="line"><span class="comment">//            System.out.println(result1);</span></span><br><span class="line"><span class="comment">//            if(result1 &gt; 0)&#123;</span></span><br><span class="line"><span class="comment">//                System.out.println(&quot;插入成功----- &quot;);</span></span><br><span class="line"><span class="comment">//            &#125;else&#123;</span></span><br><span class="line"><span class="comment">//                System.out.println(&quot;插入失败&quot;);</span></span><br><span class="line"><span class="comment">//            &#125;</span></span><br><span class="line"><span class="comment">//        &#125;catch (Exception e)&#123;</span></span><br><span class="line"><span class="comment">//            System.out.println(&quot;用户名已存在，不能插入&quot;);</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//3. 删除用户</span></span><br><span class="line"><span class="comment">//        int result = userMapper.deleteUserByID(50);</span></span><br><span class="line"><span class="comment">//        System.out.println(result);</span></span><br><span class="line"><span class="comment">//        if(result &gt; 0)&#123;</span></span><br><span class="line"><span class="comment">//            System.out.println(&quot;删除成功&quot;);</span></span><br><span class="line"><span class="comment">//        &#125;else&#123;</span></span><br><span class="line"><span class="comment">//            System.out.println(&quot;删除失败，用户id不存在&quot;);</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line">        <span class="comment">//4. 查询所有用户</span></span><br><span class="line"><span class="comment">//        List&lt;User&gt; userList = userMapper.queryAllUser();</span></span><br><span class="line"><span class="comment">//        for (User user1 : userList) &#123;</span></span><br><span class="line"><span class="comment">//            System.out.println(user1);</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//5. 根据用户名和邮箱查询用户密码 //可能返回多条会报错</span></span><br><span class="line"><span class="comment">//        User upassword = userMapper.queryPassword(&quot;小明&quot;,&quot;123231@123.com&quot;);</span></span><br><span class="line"><span class="comment">//        if(upassword!=null) &#123;</span></span><br><span class="line"><span class="comment">//            System.out.println(upassword.getPassword());</span></span><br><span class="line"><span class="comment">//        &#125;else&#123;</span></span><br><span class="line"><span class="comment">//            System.out.println(&quot;查询未找到&quot;);</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line">        <span class="comment">//6. 根据用户名和密码查询用户</span></span><br><span class="line"><span class="comment">//        User user = userMapper.queryUserBynameAndpwd(&quot;小亮&quot;,&quot;12345&quot;);</span></span><br><span class="line"><span class="comment">//        System.out.println(user);</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//7. 根据id查询用户</span></span><br><span class="line"><span class="comment">//        User user1 = userMapper.queryUserByID(1);</span></span><br><span class="line"><span class="comment">//        if(user1!=null) &#123;</span></span><br><span class="line"><span class="comment">//            System.out.println(user1);</span></span><br><span class="line"><span class="comment">//        &#125;else&#123;</span></span><br><span class="line"><span class="comment">//            System.out.println(&quot;查询未找到&quot;);</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line"><span class="comment">//        //8. 更新用户</span></span><br><span class="line"><span class="comment">//        Map&lt;String,Object&gt; map1 = new HashMap&lt;&gt;();</span></span><br><span class="line"><span class="comment">//        map1.put(&quot;id&quot;,168); //根据id=3进行更新</span></span><br><span class="line"><span class="comment">//        map1.put(&quot;username&quot;,&quot;小廖1&quot;);</span></span><br><span class="line"><span class="comment">//        map1.put(&quot;password&quot;,&quot;0000&quot;);</span></span><br><span class="line"><span class="comment">//        int res = userMapper.updateUserSelective(map1);</span></span><br><span class="line"><span class="comment">//        System.out.println(res);</span></span><br><span class="line"><span class="comment">//        System.out.println(map1);</span></span><br><span class="line"><span class="comment">//        if (res != 0)&#123;</span></span><br><span class="line"><span class="comment">//            System.out.println(&quot;更新成功&quot;);</span></span><br><span class="line"><span class="comment">//        &#125;else&#123;</span></span><br><span class="line"><span class="comment">//            System.out.println(&quot;更新失败&quot;);</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line">        <span class="comment">//9. 批量初始化用户表</span></span><br><span class="line"><span class="comment">//        UserMapper mapper = sqlSession.getMapper(UserMapper.class);</span></span><br><span class="line"><span class="comment">//        for(int i=0;i&lt;50;i++)&#123;</span></span><br><span class="line"><span class="comment">//            Map&lt;String,Object&gt; map3 = new HashMap&lt;&gt;();</span></span><br><span class="line"><span class="comment">//            map3.put(&quot;username&quot;, UUIDUtils.getUUID(6));</span></span><br><span class="line"><span class="comment">//            map3.put(&quot;password&quot;,UUIDUtils.getUUID(8));</span></span><br><span class="line"><span class="comment">//            map3.put(&quot;email&quot;,UUIDUtils.getUUID(8)+&quot;@qq.com&quot;);</span></span><br><span class="line"><span class="comment">//            map3.put(&quot;code&quot;,UUIDUtils.getUUID(4));</span></span><br><span class="line"><span class="comment">//            map3.put(&quot;avatar&quot;,&quot;https://cdn.jsdelivr.net/gh/xiaoliblog/MyCDNRepo/img/headerimg.png&quot;);</span></span><br><span class="line"><span class="comment">//            mapper.addUserSelective(map3);</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line"><span class="comment">//        System.out.println(&quot;批量初始化员工成功&quot;);</span></span><br><span class="line"><span class="comment">//        //10. 根据用户名查询</span></span><br><span class="line"><span class="comment">//        User user2 = userMapper.queryUserByUsername(&quot;小亮&quot;);</span></span><br><span class="line"><span class="comment">//        if(user2!=null)&#123;</span></span><br><span class="line"><span class="comment">//            System.out.println(user2);</span></span><br><span class="line"><span class="comment">//        &#125;else&#123;</span></span><br><span class="line"><span class="comment">//            System.out.println(&quot;查无此人&quot;);</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testAdministartorMapper</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(administratorMapper);</span><br><span class="line">        <span class="comment">//1. 查询用户</span></span><br><span class="line">        Administrator administrator = administratorMapper.queryUserByUsernameAndPwd(<span class="string">&quot;admin&quot;</span>,<span class="string">&quot;12345&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span>(administrator != <span class="keyword">null</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;匹配成功&quot;</span>+administrator);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;未找到&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//2. 更新密码</span></span><br><span class="line"><span class="comment">//        int i = administratorMapper.updateUserSelective(&quot;admin&quot;,&quot;12345&quot;);</span></span><br><span class="line"><span class="comment">//        if(i&gt;0)&#123;</span></span><br><span class="line"><span class="comment">//            System.out.println(&quot;更新成功&quot;);</span></span><br><span class="line"><span class="comment">//        &#125;else&#123;</span></span><br><span class="line"><span class="comment">//            System.out.println(&quot;更新失败&quot;);</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;环境搭建&quot;&gt;&lt;a href=&quot;#环境搭建&quot; class=&quot;headerlink&quot; title=&quot;环境搭建&quot;&gt;&lt;/a&gt;环境搭建&lt;/h1&gt;&lt;div class=&quot;btns rounded center grid5&quot;&gt;
            &lt;a href=&quot;http</summary>
      
    
    
    
    <category term="项目案例" scheme="http://xiaoliblog.cn/categories/%E9%A1%B9%E7%9B%AE%E6%A1%88%E4%BE%8B/"/>
    
    <category term="全栈实例" scheme="http://xiaoliblog.cn/categories/%E9%A1%B9%E7%9B%AE%E6%A1%88%E4%BE%8B/%E5%85%A8%E6%A0%88%E5%AE%9E%E4%BE%8B/"/>
    
    
    <category term="项目案例" scheme="http://xiaoliblog.cn/tags/%E9%A1%B9%E7%9B%AE%E6%A1%88%E4%BE%8B/"/>
    
  </entry>
  
  <entry>
    <title>SSM项目🎯网易云音乐实战之轮播图</title>
    <link href="http://xiaoliblog.cn/page/neteaseshop01.html"/>
    <id>http://xiaoliblog.cn/page/neteaseshop01.html</id>
    <published>2021-06-17T16:00:00.000Z</published>
    <updated>2021-06-18T14:26:41.086Z</updated>
    
    <content type="html"><![CDATA[<h1 id="首页轮播图"><a href="#首页轮播图" class="headerlink" title="首页轮播图"></a>首页轮播图</h1><ul><li>使用CSS滤镜实现背景虚化</li><li>轮播图会自适应窗口的宽度变化，两侧箭头也会随屏幕尺寸改变位置</li><li>使用Javascript的定时器实现自动翻页，自动翻页会有渐隐和渐显的过渡效果</li><li>两侧按钮和小圆点都可以点击切换，鼠标移入会停止自动切换</li></ul><div class="btns rounded center grid5">            <a href="https://gitee.com/xiaoliblog/HTML_CSS_JS/tree/master/%E7%BD%91%E6%98%93%E4%BA%91%E9%9F%B3%E4%B9%90%E8%BD%AE%E6%92%AD%E5%9B%BE" title="下载源码"><i class="fas fa-download"></i>下载源码</a>          </div><h2 id="HTML结构"><a href="#HTML结构" class="headerlink" title="HTML结构"></a>HTML结构</h2><ul><li>图片链接等通过JS动态生成。小圆点数量也通过JS根据图片数量动态生成</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;banner&quot;</span> <span class="attr">id</span>=<span class="string">&quot;banner&quot;</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--创建背景区域来实现虚化背景--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;banner_bg&quot;</span> <span class="attr">class</span>=<span class="string">&quot;bg&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--轮播图内容--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">section</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!--存放图片--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;banner_picture&quot;</span> <span class="attr">class</span>=<span class="string">&quot;picture&quot;</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">id</span>=<span class="string">&quot;banner_link&quot;</span> <span class="attr">class</span>=<span class="string">&quot;link&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">id</span>=<span class="string">&quot;banner_image&quot;</span> <span class="attr">class</span>=<span class="string">&quot;image&quot;</span> <span class="attr">src</span>=<span class="string">&quot;&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br><span class="line">         <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!--选择指示小白点区域--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;banner_select&quot;</span> <span class="attr">class</span>=<span class="string">&quot;select&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!--左右翻页按钮，使用字体图标--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;banner_bt_left&quot;</span> <span class="attr">class</span>=<span class="string">&quot;bt left&quot;</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;iconfont icon-Left&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;banner_bt_right&quot;</span> <span class="attr">class</span>=<span class="string">&quot;bt right&quot;</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;iconfont icon-Right&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="CSS样式"><a href="#CSS样式" class="headerlink" title="CSS样式"></a>CSS样式</h2><ul><li>首先引入字体图标，来源于Iconfont</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 字体图标，来自于iconfont.cn */</span></span><br><span class="line"><span class="keyword">@font-face</span> &#123;</span><br><span class="line">    <span class="attribute">font-family</span>: <span class="string">&quot;iconfont&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">src</span>: <span class="built_in">url</span>(<span class="string">&#x27;data:application/x-font-woff2;charset=utf-8;base64,d09GMgABAAAAAAKUAAsAAAAABmAAAAJJAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHEIGVgCCfgpQYwE2AiQDDAsIAAQgBYRtBzYboQXIrjGFMXYtSYlaOMcguOy7+/WSGRu8A8TD0xrr/ZnZRS1BEo1E0WiSNJFohGKJBLGRAt0zCe52v+nv/mQsYfN8t/yKvW1ncr12p2FrnEYphAThUBQAc9XWl4dsCcZWH2sjJHCl/5/L6U2gs6P57eyc1srGGnblR70A44AC3AujIyuRzFOQ3RGoJT8n0G6MZbR5eH6vlhXOukBcGx2r5VJFUaR+q1C3HC3iWaU1PaaUp/j78S2IZZIqc7buXR1kavvNW1u+bW6dhogqgZ6ukDFPKcRJa2fPREjURHtnapw61rzgrabhTRgTR6UT8dd5/k4wTbuJN75I8NYJCWRQl3udGGHkYAgh6vqGrjG7+bjN8I7+1Xfr4baPuzHuU9vskkIz/eSF+BcjBL2/E24t1lHA6yPlZoHHtO4oG/wUDRwppuFEc9FVX7VzWQ2kElSW8xpOod/v9MgQPExoNTQh12I0h6zVOFrI+Wqlw3X81FqtUGg35+h0hwFsIkobZn0SCL2+IOn2Almvb7SQP1AZ9ge13phAu5MYuLLDZJjVDcZYMIPkDUzaNuTFZTUZvEX9VMVcNGLmEXkwdfAdr9o/wgZ5iR3Dsw5ECIjbGg7Ja1hVLXTcFpiKk4t0C9eltpCctK3Vqg0MxQTKgMQbYKRaDQoni9Xa528h7Uklxj2BhvQRYgMzO/A5PAA9chso8CjvDJ5pASEIIKxVA4dkEapUWqBrX1RAKeHIJ7Q6C647jlDX2T5S/98paOfclyNFjqI6MDqX6RaSKAUA&#x27;</span>) <span class="built_in">format</span>(<span class="string">&#x27;woff2&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.iconfont</span> &#123;</span><br><span class="line">    <span class="attribute">font-family            </span>: <span class="string">&quot;iconfont&quot;</span> <span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">font-size              </span>: <span class="number">16px</span>;</span><br><span class="line">    <span class="attribute">font-style             </span>: normal;</span><br><span class="line">    <span class="attribute">-webkit-font-smoothing </span>: antialiased;</span><br><span class="line">    <span class="attribute">-moz-osx-font-smoothing</span>: grayscale;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 右箭头 */</span></span><br><span class="line"><span class="selector-class">.icon-Right</span><span class="selector-pseudo">:before</span> &#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">&quot;\e608&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 左箭头 */</span></span><br><span class="line"><span class="selector-class">.icon-Left</span><span class="selector-pseudo">:before</span> &#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">&quot;\e609&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>常用颜色模板变量定义，其中<code>:root</code>是一个伪类，用于声明全局属性，使用<code>var(attr)</code>来引用</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 常用模板 */</span></span><br><span class="line"><span class="selector-pseudo">:root</span> &#123;</span><br><span class="line">    <span class="attribute">--background-color</span>: <span class="number">#2c3e50</span>;</span><br><span class="line">    <span class="attribute">--border-color    </span>: <span class="number">#7591AD</span>;</span><br><span class="line">    <span class="attribute">--text-color      </span>: <span class="number">#34495e</span>;</span><br><span class="line">    <span class="attribute">--color1          </span>: <span class="number">#EC3E27</span>;</span><br><span class="line">    <span class="attribute">--color2          </span>: <span class="number">#fd79a8</span>;</span><br><span class="line">    <span class="attribute">--color3          </span>: <span class="number">#0984e3</span>;</span><br><span class="line">    <span class="attribute">--color4          </span>: <span class="number">#00b894</span>;</span><br><span class="line">    <span class="attribute">--color5          </span>: <span class="number">#fdcb6e</span>;</span><br><span class="line">    <span class="attribute">--color6          </span>: <span class="number">#e056fd</span>;</span><br><span class="line">    <span class="attribute">--color7          </span>: <span class="number">#F97F51</span>;</span><br><span class="line">    <span class="attribute">--color8          </span>: <span class="number">#BDC581</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">html</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">    <span class="attribute">margin   </span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding  </span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">margin          </span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding         </span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">var</span>(--background-color);</span><br><span class="line">    <span class="attribute">display         </span>: flex;</span><br><span class="line">    <span class="attribute">justify-content </span>: center;</span><br><span class="line">    <span class="attribute">align-items     </span>: center;</span><br><span class="line">    <span class="attribute">font-family     </span>: <span class="string">&#x27;Montserrat&#x27;</span>, sans-serif, Arial, <span class="string">&#x27;Microsoft Yahei&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><code>banner</code>轮播图盒子，宽度为100%，根据屏幕自适应，超出部分隐藏</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* banner区域 */</span></span><br><span class="line"><span class="comment">/* 相对定位 */</span></span><br><span class="line"><span class="comment">/* 宽度100% */</span></span><br><span class="line"><span class="comment">/* 高度根据section区域自动适应 */</span></span><br><span class="line"><span class="selector-class">.banner</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">width   </span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>背景虚化效果与原效果不同，原效果直接使用虚化的图片做背景，这里使用CSS滤镜进行背景虚化。背景图片与轮播图的当前图片相同，通过JS控制</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 背景图地址要根据前端显示的图片进行变化 */</span></span><br><span class="line"><span class="comment">/* 透明度变化同时更换背景，1-0.2更换背景-1显示新背景 */</span></span><br><span class="line"><span class="selector-class">.banner</span> <span class="selector-class">.bg</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute; <span class="comment">/* 绝对定位，让背景浮动起来 */</span></span><br><span class="line">    <span class="attribute">width </span>: <span class="number">200%</span>; <span class="comment">/* 宽度和高度200% */</span></span><br><span class="line">    <span class="attribute">height</span>: <span class="number">200%</span>;</span><br><span class="line">    <span class="attribute">z-index</span>: <span class="number">1</span>;   <span class="comment">/*设置为1，以后只要&gt;1就会出现在其上方*/</span></span><br><span class="line">    <span class="comment">/* background-image   : url(./images/4.jpg); */</span> <span class="comment">/*方便调试*/</span></span><br><span class="line">    <span class="attribute">background-size    </span>: <span class="number">4000px</span>; <span class="comment">/*宽度占满屏幕*/</span></span><br><span class="line">    <span class="attribute">background-position</span>: center center;</span><br><span class="line">    <span class="attribute">filter</span>: <span class="built_in">blur</span>(<span class="number">20px</span>); <span class="comment">/*虚化*/</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@65ce92011d2ba69d79d56483ef95279659f4ce3b/2021/06/18/03b0a35c8db4577ff97d4f1957d6182b.png"></p><ul><li><code>section</code>内容区域，即图片、翻页、选择区域</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*内容区域*/</span></span><br><span class="line"><span class="selector-class">.banner</span> <span class="selector-tag">section</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">width    </span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">max-width</span>: <span class="number">990px</span>; <span class="comment">/* 宽度为100%，最大为990 */</span></span><br><span class="line">    <span class="attribute">height   </span>: <span class="number">300px</span>; <span class="comment">/* 高度为300px，整个轮播的最大高度 */</span></span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> auto; <span class="comment">/* margin实现居中 */</span></span><br><span class="line">    <span class="comment">/* background-color: #00b894; */</span></span><br><span class="line">    <span class="attribute">z-index</span>: <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 图片区域 */</span></span><br><span class="line"><span class="comment">/* 等于section区域 */</span></span><br><span class="line"><span class="selector-class">.banner</span> <span class="selector-tag">section</span> <span class="selector-class">.picture</span> &#123;</span><br><span class="line">    <span class="attribute">width </span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 图片区域内的图片实用object-fit进行自适应大小裁切 */</span></span><br><span class="line"><span class="selector-class">.banner</span> <span class="selector-tag">section</span> <span class="selector-class">.picture</span> <span class="selector-class">.image</span> &#123;</span><br><span class="line">    <span class="attribute">width </span>: <span class="number">100%</span>; <span class="comment">/*100%是相对于section区域*/</span></span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">object-fit</span>: cover;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@f58068e95c90d1687bcd38f482822ab4ffcd8a53/2021/06/18/f59aaf00e8071c788d4963a88d88548c.png"></p><ul><li><code>select</code>选择点区域</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 轮播图选择 */</span></span><br><span class="line"><span class="selector-class">.select</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">width </span>: <span class="number">100%</span>; <span class="comment">/* 宽度100%自适应 */</span></span><br><span class="line">    <span class="attribute">height</span>: <span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">bottom</span>: <span class="number">30px</span>; <span class="comment">/* 利用bottom实现定位 */</span></span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#FFFFFF44</span>; <span class="comment">/* 增加一个有透明度控制的背景色 */</span></span><br><span class="line">    <span class="attribute">text-align </span>: center; <span class="comment">/* 利用text-align=center,line-height=30px居中 */</span></span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">30px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@67132aff22369ca9e8dd292cf6216d8dd3c6c80f/2021/06/18/22e408015fcb85c660bf48d4f626f76a.png"></p><ul><li><code>select</code>区域中选择点的样式</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 轮播图选择的元素 */</span></span><br><span class="line"><span class="comment">/* 初始化时界面上没有，初始化完成后根据数据自动生成 */</span></span><br><span class="line"><span class="selector-class">.select</span> <span class="selector-class">.item</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: inline-block; <span class="comment">/* 使用inline-block方式显示 */</span></span><br><span class="line">    <span class="attribute">width </span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#fff</span>; <span class="comment">/* 背景色用白色 */</span></span><br><span class="line">    <span class="attribute">box-shadow      </span>: <span class="number">2px</span> <span class="number">2px</span> <span class="number">5px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.2</span>); <span class="comment">/* 增加一个投影 */</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 选择元素的鼠标移入样式 */</span></span><br><span class="line"><span class="selector-class">.select</span> <span class="selector-class">.item</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#ff4400</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 选择元素选中的样式 */</span></span><br><span class="line"><span class="selector-class">.select</span> <span class="selector-class">.item</span><span class="selector-class">.checked</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#ff4400</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>左右翻页按钮实现</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 左右翻页按钮默认样式 */</span></span><br><span class="line"><span class="selector-class">.bt</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">width </span>: <span class="number">40px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">80px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">top      </span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translateY</span>(-<span class="number">50%</span>);</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.05</span>);</span><br><span class="line">    <span class="attribute">transition      </span>: all <span class="number">0.3s</span>;</span><br><span class="line">    <span class="attribute">display        </span>: flex;</span><br><span class="line">    <span class="attribute">justify-content</span>: center;</span><br><span class="line">    <span class="attribute">align-items    </span>: center;</span><br><span class="line">    <span class="attribute">cursor</span>: pointer;</span><br><span class="line">    <span class="attribute">z-index</span>: <span class="number">3</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.bt</span><span class="selector-class">.left</span> &#123;</span><br><span class="line">    <span class="attribute">left</span>: -<span class="number">60px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.bt</span><span class="selector-class">.right</span> &#123;</span><br><span class="line">    <span class="attribute">right</span>: -<span class="number">60px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.bt</span> <span class="selector-tag">i</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">40px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.bt</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.2</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>左右按钮响应式显示实现</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 屏幕尺寸小于1110时以下代码生效，目的时让两个按钮移动到图片主体内部，因为当小于1110时 */</span></span><br><span class="line"><span class="comment">/* 加上图片最大为990，这时候就看不到两侧的按钮了 */</span></span><br><span class="line"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">max-width:</span><span class="number">1110px</span>) &#123;</span><br><span class="line">    <span class="selector-class">.bt</span><span class="selector-class">.left</span> &#123;</span><br><span class="line">        <span class="attribute">left</span>: <span class="number">20px</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.bt</span><span class="selector-class">.right</span> &#123;</span><br><span class="line">        <span class="attribute">right</span>: <span class="number">20px</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="JS部分"><a href="#JS部分" class="headerlink" title="JS部分"></a>JS部分</h2><ul><li>定义全局通用变量</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 当前轮播图的编号,记录了当前显示中的轮播图的索引编号</span></span><br><span class="line"><span class="keyword">let</span> currentIndex = -<span class="number">1</span>;</span><br><span class="line"><span class="comment">// 自动翻转定时器</span></span><br><span class="line"><span class="keyword">let</span> bannerTimer = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 轮播图的图片地址与链接信息</span></span><br><span class="line"><span class="keyword">let</span> links = [</span><br><span class="line">    &#123; <span class="string">&#x27;image&#x27;</span>: <span class="string">&#x27;./images/1.jpg&#x27;</span>, <span class="string">&#x27;target&#x27;</span>: <span class="string">&#x27;#1&#x27;</span> &#125;,</span><br><span class="line">    &#123; <span class="string">&#x27;image&#x27;</span>: <span class="string">&#x27;./images/2.jpg&#x27;</span>, <span class="string">&#x27;target&#x27;</span>: <span class="string">&#x27;#2&#x27;</span> &#125;,</span><br><span class="line">    &#123; <span class="string">&#x27;image&#x27;</span>: <span class="string">&#x27;./images/3.jpg&#x27;</span>, <span class="string">&#x27;target&#x27;</span>: <span class="string">&#x27;#3&#x27;</span> &#125;,</span><br><span class="line">    &#123; <span class="string">&#x27;image&#x27;</span>: <span class="string">&#x27;./images/4.jpg&#x27;</span>, <span class="string">&#x27;target&#x27;</span>: <span class="string">&#x27;#4&#x27;</span> &#125;,</span><br><span class="line">    &#123; <span class="string">&#x27;image&#x27;</span>: <span class="string">&#x27;./images/5.jpg&#x27;</span>, <span class="string">&#x27;target&#x27;</span>: <span class="string">&#x27;#5&#x27;</span> &#125;</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 找到操作的元素</span></span><br><span class="line"><span class="keyword">let</span> banner = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;banner&#x27;</span>);</span><br><span class="line"><span class="keyword">let</span> bannerBG = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;banner_bg&#x27;</span>);</span><br><span class="line"><span class="keyword">let</span> bannerPicture = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;banner_picture&#x27;</span>);</span><br><span class="line"><span class="keyword">let</span> bannerLink = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;banner_link&#x27;</span>);</span><br><span class="line"><span class="keyword">let</span> bannerImage = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;banner_image&#x27;</span>);</span><br><span class="line"><span class="keyword">let</span> bannerSelect = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;banner_select&#x27;</span>);</span><br><span class="line"><span class="keyword">let</span> bannerBTLeft = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;banner_bt_left&#x27;</span>);</span><br><span class="line"><span class="keyword">let</span> bannerBTRight = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;banner_bt_right&#x27;</span>);</span><br></pre></td></tr></table></figure><ul><li>轮播图选择动作方法，分手动选择和自动选择两种</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 轮播图选择动作方法</span></span><br><span class="line"><span class="comment">// select手动选择</span></span><br><span class="line"><span class="comment">//index为图片索引编号，从0开始为第一张</span></span><br><span class="line"><span class="keyword">let</span> select = <span class="function">(<span class="params">index</span>) =&gt;</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// select用于手动播放，所以停止自动播放</span></span><br><span class="line">    banner_stop();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 点击选择指示点时获取的为文本类型，需要转数字</span></span><br><span class="line">    index = <span class="built_in">Number</span>(index);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 越界超过 最大数量 links越界，直接返回</span></span><br><span class="line">    <span class="keyword">if</span> (index &gt;= links.length) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 选中当前已选中的的直接返回</span></span><br><span class="line">    <span class="keyword">if</span> (currentIndex == index) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 取消当前的指示点选中状态，只处理非初始状态的情况</span></span><br><span class="line">    <span class="keyword">if</span> (currentIndex &gt; -<span class="number">1</span>) &#123;</span><br><span class="line">        bannerSelect.children[currentIndex].classList.remove(<span class="string">&#x27;checked&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 变更当前轮播图编号</span></span><br><span class="line">    currentIndex = index;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 找到当前元素</span></span><br><span class="line">    currentLink = links[currentIndex];</span><br><span class="line">    <span class="comment">// 背景变化</span></span><br><span class="line">    bannerBG.style.backgroundImage = <span class="string">&#x27;url(&#x27;</span> + currentLink.image + <span class="string">&#x27;)&#x27;</span>;</span><br><span class="line">    <span class="comment">// 前景变化</span></span><br><span class="line">    bannerImage.setAttribute(<span class="string">&#x27;src&#x27;</span>, currentLink.image);</span><br><span class="line">    <span class="comment">// 链接变化</span></span><br><span class="line">    bannerLink.setAttribute(<span class="string">&#x27;href&#x27;</span>, currentLink.target);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 增加新的指示点选中状态</span></span><br><span class="line">    bannerSelect.children[currentIndex].classList.add(<span class="string">&#x27;checked&#x27;</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 选择（自动）</span></span><br><span class="line"><span class="comment">// index 为编号 从0到links.length - 1</span></span><br><span class="line"><span class="keyword">let</span> auto_select = <span class="function">(<span class="params">index</span>) =&gt;</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 转数字</span></span><br><span class="line">    index = <span class="built_in">Number</span>(index);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 越界超过 最大数量 links越界，直接返回</span></span><br><span class="line">    <span class="keyword">if</span> (index &gt;= links.length) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 选中当前已选中的的直接返回</span></span><br><span class="line">    <span class="keyword">if</span> (currentIndex == index) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 取消当前的指示点选中状态</span></span><br><span class="line">    bannerSelect.children[currentIndex].classList.remove(<span class="string">&#x27;checked&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 变更当前轮播图编号</span></span><br><span class="line">    currentIndex = index;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 找到当前元素</span></span><br><span class="line">    currentLink = links[currentIndex];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 前景图片，第一步调整过度时间为1s</span></span><br><span class="line">    bannerImage.style.transition = <span class="string">&#x27;opacity 0.5s ease-in 0s&#x27;</span>;</span><br><span class="line">    <span class="comment">// 前景图片，第二步调整不透明度到0.2</span></span><br><span class="line">    bannerImage.style.opacity = <span class="number">0.2</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 第三步延迟变换img图片，并重新定义透明度以及过度时间和过渡方式</span></span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">// 背景变化</span></span><br><span class="line">        bannerBG.style.backgroundImage = <span class="string">&#x27;url(&#x27;</span> + currentLink.image + <span class="string">&#x27;)&#x27;</span>;</span><br><span class="line">        <span class="comment">// 前景变化</span></span><br><span class="line">        bannerImage.setAttribute(<span class="string">&#x27;src&#x27;</span>, currentLink.image);</span><br><span class="line">        <span class="comment">// 链接变化</span></span><br><span class="line">        bannerLink.setAttribute(<span class="string">&#x27;href&#x27;</span>, currentLink.target);</span><br><span class="line">        <span class="comment">// 不透明度变化</span></span><br><span class="line">        bannerImage.style.transition = <span class="string">&#x27;opacity 0.5s ease-out 0s&#x27;</span>;</span><br><span class="line">        bannerImage.style.opacity = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 增加新的指示点选中状态</span></span><br><span class="line">        <span class="comment">// 如果已经通过手动点击了选中则此处不再执行</span></span><br><span class="line">        <span class="keyword">if</span> (!<span class="built_in">document</span>.querySelector(<span class="string">&#x27;.banner .checked&#x27;</span>)) &#123;</span><br><span class="line">            bannerSelect.children[currentIndex].style.transition = <span class="string">&#x27;background-color .5s&#x27;</span>;</span><br><span class="line">            bannerSelect.children[currentIndex].classList.add(<span class="string">&#x27;checked&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;, <span class="number">500</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>自动翻转播放与停止</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 播放</span></span><br><span class="line"><span class="keyword">let</span> banner_play = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 3000 执行1次，这里与右翻逻辑一致</span></span><br><span class="line">    bannerTimer = <span class="built_in">setInterval</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">// 获取新的index</span></span><br><span class="line">        <span class="keyword">let</span> index = currentIndex + <span class="number">1</span>;</span><br><span class="line">        <span class="comment">// 右翻越界等于最左侧元素</span></span><br><span class="line">        <span class="keyword">if</span> (index &gt;= links.length) &#123;</span><br><span class="line">            index = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 加载新图片（这里选择自动，增加切换效果）</span></span><br><span class="line">        auto_select(index);</span><br><span class="line">    &#125;, <span class="number">3000</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 停止</span></span><br><span class="line"><span class="keyword">let</span> banner_stop = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (bannerTimer) &#123;</span><br><span class="line">        <span class="built_in">clearInterval</span>(bannerTimer);</span><br><span class="line">        bannerTimer = <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>页面初始化方法</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> init = <span class="function">() =&gt;</span> &#123;</span><br><span class="line"></span><br><span class="line">   <span class="comment">// 1. 首先根据links数组，动态生成指示点附加到页面中</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> index = <span class="number">0</span>; index &lt; links.length; index++) &#123;</span><br><span class="line">       <span class="comment">//动态创建&lt;a class=&quot;item&quot; href=&quot;#&quot; data-index = index&gt;&lt;/a&gt;标签</span></span><br><span class="line">        <span class="keyword">let</span> item = <span class="built_in">document</span>.createElement(<span class="string">&#x27;a&#x27;</span>);</span><br><span class="line">        <span class="comment">// 修改属性</span></span><br><span class="line">        item.setAttribute(<span class="string">&#x27;class&#x27;</span>, <span class="string">&#x27;item&#x27;</span>);</span><br><span class="line">        item.setAttribute(<span class="string">&#x27;href&#x27;</span>, <span class="string">&#x27;#&#x27;</span>);</span><br><span class="line">        item.setAttribute(<span class="string">&#x27;data-index&#x27;</span>, index);</span><br><span class="line">        <span class="comment">// 追加元素</span></span><br><span class="line">        bannerSelect.appendChild(item);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//2. 调用手动选择和自动选择的方法</span></span><br><span class="line">    select(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//这个方法用于绑定所有需要监听的事件</span></span><br><span class="line">    bind();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 自动翻转播放</span></span><br><span class="line">    banner_play();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>事件绑定方法</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">let</span> bind = <span class="function">() =&gt;</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 左翻页事件监听</span></span><br><span class="line">    bannerBTLeft.addEventListener(<span class="string">&#x27;click&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">// 获取新的index</span></span><br><span class="line">        <span class="keyword">let</span> index = currentIndex - <span class="number">1</span>;</span><br><span class="line">        <span class="comment">// 左翻越界等于最右元素</span></span><br><span class="line">        <span class="keyword">if</span> (index &lt; <span class="number">0</span>) &#123;</span><br><span class="line">            index = links.length - <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 加载新图片</span></span><br><span class="line">        select(index);</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 右翻页事件监听</span></span><br><span class="line">    bannerBTRight.addEventListener(<span class="string">&#x27;click&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">// 获取新的index</span></span><br><span class="line">        <span class="keyword">let</span> index = currentIndex + <span class="number">1</span>;</span><br><span class="line">        <span class="comment">// 右翻越界等于最左侧元素</span></span><br><span class="line">        <span class="keyword">if</span> (index &gt;= links.length) &#123;</span><br><span class="line">            index = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 加载新图片</span></span><br><span class="line">        select(index);</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 绑定select选择指示点的点击事件</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">const</span> key <span class="keyword">in</span> bannerSelect.children) &#123;</span><br><span class="line">        <span class="keyword">if</span> (bannerSelect.children.hasOwnProperty(key)) &#123;</span><br><span class="line">            <span class="keyword">const</span> element = bannerSelect.children[key];</span><br><span class="line">            element.addEventListener(<span class="string">&#x27;click&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">                <span class="comment">// 取消默认点击跳转</span></span><br><span class="line">                e.preventDefault();</span><br><span class="line">                <span class="comment">// 跳转到当前指示点中data-index所指定的图片，获取的为文本类型</span></span><br><span class="line">                select(e.target.dataset.index);</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 绑定鼠标移入事件</span></span><br><span class="line">    banner.addEventListener(<span class="string">&#x27;mouseover&#x27;</span>, <span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">// 防止鼠标从子元素移出时触发</span></span><br><span class="line">        <span class="keyword">if</span> (e.relatedTarget &amp;&amp; banner.compareDocumentPosition(e.relatedTarget) == <span class="number">10</span>) &#123;</span><br><span class="line">            banner_stop();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 绑定鼠标移出事件</span></span><br><span class="line">    banner.addEventListener(<span class="string">&#x27;mouseout&#x27;</span>, <span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">// 防止鼠标从子元素移出时触发</span></span><br><span class="line">        <span class="keyword">if</span> (e.relatedTarget &amp;&amp; banner.compareDocumentPosition(e.relatedTarget) == <span class="number">10</span>) &#123;</span><br><span class="line">            banner_play();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 绑定鼠标移动事件</span></span><br><span class="line">    banner.addEventListener(<span class="string">&#x27;mousemove&#x27;</span>, <span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">        banner_stop();</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>页面加载</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 页面加载完毕</span></span><br><span class="line"><span class="built_in">window</span>.addEventListener(<span class="string">&#x27;load&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 初始化方法</span></span><br><span class="line">    init();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;首页轮播图&quot;&gt;&lt;a href=&quot;#首页轮播图&quot; class=&quot;headerlink&quot; title=&quot;首页轮播图&quot;&gt;&lt;/a&gt;首页轮播图&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;使用CSS滤镜实现背景虚化&lt;/li&gt;
&lt;li&gt;轮播图会自适应窗口的宽度变化，两侧箭头也会随屏幕尺寸改变位</summary>
      
    
    
    
    <category term="项目案例" scheme="http://xiaoliblog.cn/categories/%E9%A1%B9%E7%9B%AE%E6%A1%88%E4%BE%8B/"/>
    
    <category term="全栈实例" scheme="http://xiaoliblog.cn/categories/%E9%A1%B9%E7%9B%AE%E6%A1%88%E4%BE%8B/%E5%85%A8%E6%A0%88%E5%AE%9E%E4%BE%8B/"/>
    
    
    <category term="项目案例" scheme="http://xiaoliblog.cn/tags/%E9%A1%B9%E7%9B%AE%E6%A1%88%E4%BE%8B/"/>
    
  </entry>
  
  <entry>
    <title>Web开发常用插件分享</title>
    <link href="http://xiaoliblog.cn/page/plugins.html"/>
    <id>http://xiaoliblog.cn/page/plugins.html</id>
    <published>2021-06-14T12:04:08.952Z</published>
    <updated>2021-06-16T08:35:31.703Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Anime-js"><a href="#Anime-js" class="headerlink" title="Anime.js"></a>Anime.js</h1><ul><li>anime.js 是一款功能强大的Javascript 动画库插件。anime.js 可以和CSS3 属性，SVG，DOM 元素和JS 对象一起工作，制作出各种高性能，平滑过渡的动画效果</li><li>Animejs中文文档：<a href="https://www.animejs.cn/documentation/">https://www.animejs.cn/documentation/</a></li></ul><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><ul><li>第一种方法是使用npm下载</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm init -y <span class="comment"># 初始化项目</span></span><br><span class="line">npm install animejs </span><br></pre></td></tr></table></figure><ul><li>第二种方法是下载到本地引入【推荐】</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/anime.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>第三种是引入CDN</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdnjs.cloudflare.com/ajax/libs/animejs/3.2.1/anime.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="目标属性"><a href="#目标属性" class="headerlink" title="目标属性"></a>目标属性</h2><ul><li>首先确保引入了anime的js文件</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;plugins/animejs/anime.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>简单搭建测试环境</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">   <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">   <span class="attribute">height</span>: <span class="number">100vh</span>;</span><br><span class="line">   <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">68</span>, <span class="number">64</span>, <span class="number">92</span>);</span><br><span class="line">   <span class="attribute">display</span>: flex;</span><br><span class="line">   <span class="attribute">justify-content</span>: center;</span><br><span class="line">   <span class="attribute">align-items</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.demo</span> &#123;</span><br><span class="line">   <span class="attribute">width</span>: <span class="number">50px</span>;</span><br><span class="line">   <span class="attribute">height</span>: <span class="number">50px</span>;</span><br><span class="line">   <span class="attribute">background-color</span>: cornflowerblue;</span><br><span class="line">   <span class="attribute">border-radius</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;demo&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>通过<code>anime()</code> 方法来构造一个对象实例，以<code>json</code> 对象的方式传入需要的参数：</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">anime(&#123;</span><br><span class="line">   targets:<span class="string">&#x27;.demo&#x27;</span>,</span><br><span class="line">   translateX: <span class="number">200</span>,</span><br><span class="line">   loop: <span class="literal">true</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@08457c84d2a67075840ba499456d2ef821f37ae2/2021/06/15/72304f2b1adb46f623ddb894d1d0d263.png"></p><ul><li><code>targets</code>也可以指向DOM元素</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> demo = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;.demo&#x27;</span>)</span><br><span class="line">anime(&#123;</span><br><span class="line">   targets: demo,</span><br><span class="line">   translateX: <span class="number">200</span>,</span><br><span class="line">   loop: <span class="literal">true</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ul><li>包含数值的任何Object属性都可以设置动画，比如对JavaScript对象属性进行设置动画</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> demo = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;.demo&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> myObject = &#123;</span><br><span class="line">   prop1: <span class="number">0</span>,</span><br><span class="line">   prop2: <span class="string">&#x27;0%&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">anime(&#123;</span><br><span class="line">   targets: myObject,</span><br><span class="line">   prop1: <span class="number">50</span>,</span><br><span class="line">   prop2: <span class="string">&#x27;100%&#x27;</span>,</span><br><span class="line">   easing: <span class="string">&#x27;linear&#x27;</span>,</span><br><span class="line">   round: <span class="number">1</span>,</span><br><span class="line">   update: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">      demo.innerHTML = <span class="built_in">JSON</span>.stringify(myObject);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@27f05900f6280dc312c6f439929e0ee3a8811aa8/2021/06/15/53f7f5740243c14afa577ab80e907df0.png"></p><ul><li>也可以通过数组来指定多个DOM元素</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;demo1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;demo2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> demo = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;.demo1&#x27;</span>)</span><br><span class="line">anime(&#123;</span><br><span class="line">   targets: [demo,<span class="string">&#x27;.demo2&#x27;</span>],</span><br><span class="line">   rotate: <span class="number">180</span>,</span><br><span class="line">   loop: <span class="literal">true</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h1 id="Swiper"><a href="#Swiper" class="headerlink" title="Swiper"></a>Swiper</h1><ul><li> Swiper中文官方网址：<a href="https://www.swiper.com.cn/">https://www.swiper.com.cn/</a></li><li> Swiper使用官方教程：<a href="https://www.swiper.com.cn/usage/index.html">https://www.swiper.com.cn/usage/index.html</a></li></ul><h2 id="Swiper使用"><a href="#Swiper使用" class="headerlink" title="Swiper使用"></a>Swiper使用</h2><ul><li>可以<a href="https://www.swiper.com.cn/download/index.html#file1">下载Swiper</a>本地引入也可以引入CDN</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://unpkg.com/swiper/swiper-bundle.min.css&quot;</span>&gt;</span>   </span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://unpkg.com/swiper/swiper-bundle.min.js&quot;</span>&gt;</span> <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;swiper-container&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;swiper-wrapper&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;swiper-slide&quot;</span>&gt;</span>Slide 1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;swiper-slide&quot;</span>&gt;</span>Slide 2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;swiper-slide&quot;</span>&gt;</span>Slide 3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!-- 如果需要分页器 --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;swiper-pagination&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="comment">&lt;!-- 如果需要导航按钮 --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;swiper-button-prev&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;swiper-button-next&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="comment">&lt;!-- 如果需要滚动条 --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;swiper-scrollbar&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.swiper-container</span> &#123;</span><br><span class="line">   <span class="attribute">width</span>: <span class="number">600px</span>;</span><br><span class="line">   <span class="attribute">height</span>: <span class="number">300px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>初始化，SwiperAPI参考官方文档：<a href="https://www.swiper.com.cn/api/index.html">https://www.swiper.com.cn/api/index.html</a></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> mySwiper = <span class="keyword">new</span> Swiper(<span class="string">&#x27;.swiper-container&#x27;</span>, &#123;</span><br><span class="line">   direction: <span class="string">&#x27;vertical&#x27;</span>, <span class="comment">// 垂直切换选项</span></span><br><span class="line">   loop: <span class="literal">true</span>, <span class="comment">// 循环模式选项</span></span><br><span class="line"></span><br><span class="line">   <span class="comment">// 如果需要分页器</span></span><br><span class="line">   pagination: &#123;</span><br><span class="line">      el: <span class="string">&#x27;.swiper-pagination&#x27;</span>,</span><br><span class="line">      type: <span class="string">&#x27;progressbar&#x27;</span><span class="comment">//将分页的类型改为进度条就行</span></span><br><span class="line">   &#125;,</span><br><span class="line"></span><br><span class="line">   <span class="comment">// 如果需要前进后退按钮</span></span><br><span class="line">   navigation: &#123;</span><br><span class="line">      nextEl: <span class="string">&#x27;.swiper-button-next&#x27;</span>,</span><br><span class="line">      prevEl: <span class="string">&#x27;.swiper-button-prev&#x27;</span>,</span><br><span class="line">   &#125;,</span><br><span class="line"></span><br><span class="line">   <span class="comment">// 如果需要滚动条</span></span><br><span class="line">   scrollbar: &#123;</span><br><span class="line">      el: <span class="string">&#x27;.swiper-scrollbar&#x27;</span>,</span><br><span class="line">   &#125;,</span><br><span class="line">   autoplay: &#123;</span><br><span class="line">      delay: <span class="number">2500</span>,</span><br><span class="line">      disableOnInteraction: <span class="literal">false</span>,</span><br><span class="line">   &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h1 id="Impress-js"><a href="#Impress-js" class="headerlink" title="Impress.js"></a>Impress.js</h1><ul><li>Impressjs插件可以实现网页版PPT的功能，项目地址：<a href="https://github.com/bartaz/impress.js/archive/master.zip">https://github.com/bartaz/impress.js/archive/master.zip</a></li><li>在线预览地址：<a href="https://static.runoob.com/assets/impress-demo/index.html">https://static.runoob.com/assets/impress-demo/index.html</a>，使用空格键或者方向键进行控制</li></ul><h2 id="数据属性"><a href="#数据属性" class="headerlink" title="数据属性"></a>数据属性</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">data-x = 幻灯片的x坐标</span><br><span class="line">data-y = 幻灯片的y坐标</span><br><span class="line">data-scale = 通过指定一个值来进行缩放，data-scale为5则将会在你幻灯片原始尺寸基础放大5倍</span><br><span class="line">data-rotate = 通过一个数字度数来确定旋转你的幻灯片</span><br><span class="line">data-rotate-x = 为3D用，这个数字度数是它应该相对x轴旋转多少度。（前倾/后仰）</span><br><span class="line">data-rotate-y = 为3D用，这个数字度数是它应该相对y轴旋转多少度。 （左摆/右摆）</span><br><span class="line">data-rotate-z = 为3D用，这个数字度数是它应该相对z轴旋转多少度。</span><br></pre></td></tr></table></figure><h2 id="插件使用"><a href="#插件使用" class="headerlink" title="插件使用"></a>插件使用</h2><ul><li>引入impress插件</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;plugins/impressjs/impress.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>HTML结构</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;impress&quot;</span> <span class="attr">data-transition-duration</span>=<span class="string">&quot;2000&quot;</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--第一页 每个幻灯片是一个&lt;div&gt;元素，其class名称叫做’step’---&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;step shadow&quot;</span> <span class="attr">data-x</span>=<span class="string">&quot;0&quot;</span> <span class="attr">data-y</span>=<span class="string">&quot;0&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img01.jpg&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;step shadow&quot;</span> <span class="attr">data-x</span>=<span class="string">&quot;800&quot;</span> <span class="attr">data-y</span>=<span class="string">&quot;50&quot;</span> <span class="attr">data-rotate-z</span>=<span class="string">&quot;30&quot;</span> <span class="attr">data-rotate-x</span>=<span class="string">&quot;30&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img01.jpg&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;step shadow&quot;</span> <span class="attr">data-x</span>=<span class="string">&quot;1600&quot;</span> <span class="attr">data-y</span>=<span class="string">&quot;100&quot;</span> <span class="attr">data-rotate-z</span>=<span class="string">&quot;60&quot;</span> <span class="attr">data-rotate-x</span>=<span class="string">&quot;40&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img01.jpg&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;step shadow&quot;</span> <span class="attr">data-x</span>=<span class="string">&quot;3200&quot;</span> <span class="attr">data-y</span>=<span class="string">&quot;150&quot;</span> <span class="attr">data-rotate-z</span>=<span class="string">&quot;90&quot;</span> <span class="attr">data-rotate-x</span>=<span class="string">&quot;80&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img01.jpg&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;step shadow&quot;</span> <span class="attr">data-x</span>=<span class="string">&quot;-1000&quot;</span> <span class="attr">data-y</span>=<span class="string">&quot;200&quot;</span> <span class="attr">data-rotate-z</span>=<span class="string">&quot;120&quot;</span> <span class="attr">data-rotate-x</span>=<span class="string">&quot;80&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img01.jpg&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;step shadow&quot;</span> <span class="attr">data-x</span>=<span class="string">&quot;-2000&quot;</span> <span class="attr">data-y</span>=<span class="string">&quot;200&quot;</span> <span class="attr">data-rotate-z</span>=<span class="string">&quot;120&quot;</span> <span class="attr">data-rotate-x</span>=<span class="string">&quot;80&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img01.jpg&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;step shadow&quot;</span> <span class="attr">data-x</span>=<span class="string">&quot;-3000&quot;</span> <span class="attr">data-y</span>=<span class="string">&quot;200&quot;</span> <span class="attr">data-rotate-z</span>=<span class="string">&quot;120&quot;</span> <span class="attr">data-rotate-x</span>=<span class="string">&quot;80&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img01.jpg&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;step shadow&quot;</span> <span class="attr">data-x</span>=<span class="string">&quot;-4000&quot;</span> <span class="attr">data-y</span>=<span class="string">&quot;200&quot;</span> <span class="attr">data-rotate-z</span>=<span class="string">&quot;120&quot;</span> <span class="attr">data-rotate-x</span>=<span class="string">&quot;80&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img01.jpg&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;step shadow&quot;</span> <span class="attr">data-x</span>=<span class="string">&quot;-5000&quot;</span> <span class="attr">data-y</span>=<span class="string">&quot;200&quot;</span> <span class="attr">data-rotate-z</span>=<span class="string">&quot;120&quot;</span> <span class="attr">data-rotate-x</span>=<span class="string">&quot;80&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img01.jpg&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;step shadow&quot;</span> <span class="attr">data-x</span>=<span class="string">&quot;-6000&quot;</span> <span class="attr">data-y</span>=<span class="string">&quot;200&quot;</span> <span class="attr">data-rotate-z</span>=<span class="string">&quot;120&quot;</span> <span class="attr">data-rotate-x</span>=<span class="string">&quot;80&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img01.jpg&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;step shadow&quot;</span> <span class="attr">data-x</span>=<span class="string">&quot;-7000&quot;</span> <span class="attr">data-y</span>=<span class="string">&quot;200&quot;</span> <span class="attr">data-rotate-z</span>=<span class="string">&quot;120&quot;</span> <span class="attr">data-rotate-x</span>=<span class="string">&quot;80&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img01.jpg&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;step shadow&quot;</span> <span class="attr">data-x</span>=<span class="string">&quot;-8000&quot;</span> <span class="attr">data-y</span>=<span class="string">&quot;200&quot;</span> <span class="attr">data-rotate-z</span>=<span class="string">&quot;120&quot;</span> <span class="attr">data-rotate-x</span>=<span class="string">&quot;80&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img01.jpg&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>在JS中进行初始化</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">impress().init();</span><br></pre></td></tr></table></figure><ul><li>CSS样式</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">img</span>&#123;</span><br><span class="line">   <span class="attribute">width</span>: <span class="number">650px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">body</span>&#123;</span><br><span class="line">   <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,.<span class="number">9</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.shadow</span>&#123;</span><br><span class="line">   <span class="attribute">box-shadow</span>:<span class="number">0px</span> <span class="number">0px</span> <span class="number">30px</span> <span class="number">#fff</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="iTypedJS"><a href="#iTypedJS" class="headerlink" title="iTypedJS"></a>iTypedJS</h1><ul><li>iTypedJS项目地址：<a href="https://github.com/luisvinicius167/ityped">https://github.com/luisvinicius167/ityped</a></li><li>在线演示地址：<a href="https://ityped.surge.sh/">https://ityped.surge.sh/</a></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://unpkg.com/ityped@0.0.5&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;ityped&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ityped.init(<span class="string">&#x27;#ityped&#x27;</span>, &#123;</span><br><span class="line">   strings: [<span class="string">&#x27;我是文字一哦&#x27;</span>, <span class="string">&#x27;我是文字二哦&#x27;</span>, <span class="string">&#x27;我是文字3哦&#x27;</span>, <span class="string">&#x27;没有文字啦。。。&#x27;</span>],</span><br><span class="line">   startDelay: <span class="number">200</span>,</span><br><span class="line">   loop: <span class="literal">true</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@4d3e4ffbfe742e7709663440445cb9158a4964db/2021/06/16/cb293016b264c11a4f96868e0907cdbf.png"></p><h1 id="Hover-css"><a href="#Hover-css" class="headerlink" title="Hover.css"></a>Hover.css</h1><ul><li>Hover.CSS官方地址：<a href="https://ianlunn.github.io/Hover/">https://ianlunn.github.io/Hover/</a></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/hover.css/2.3.1/css/hover-min.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>给普通元素加</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--class=&quot;hvr-xxx&quot; 有空格用-隔开--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;demo hvr-curl-top-right&quot;</span>&gt;</span>Hover Me!<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;demo hvr-float-shadow&quot;</span>&gt;</span>Hover Me!<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>给Icon图表加。首先给图标加<code>class=hvr-icon</code>类名，然后给父元素加<code>class=hvr-icon-xx</code></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;demo hvr-icon-float-away&quot;</span>&gt;</span></span><br><span class="line">   Hover </span><br><span class="line">   <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-user hvr-icon&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@3ca95c2ddbec7b6c5978f13bedc209df6c6b9f62/2021/06/16/374624e358ae4a8212b4c96dfbb9e260.png"></p><h1 id="Animate-CSS"><a href="#Animate-CSS" class="headerlink" title="Animate.CSS"></a>Animate.CSS</h1><ul><li>AnimateCSS官方网址：<a href="https://daneden.github.io/animate.css/">https://daneden.github.io/animate.css/</a></li><li>AnimateCSS中文网址：<a href="http://www.animate.net.cn/">http://www.animate.net.cn/</a></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/animate.css/4.1.1/animate.compat.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--class=&quot;animated xxx&quot;--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;demo animated fadeInUp infinite&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@f8b166636b05cb5016c95d0a27d1e0d356b2cde7/2021/06/16/d02f26e6e23bb0cfba5dcd72f7899c57.png"></p><h1 id="CSShake"><a href="#CSShake" class="headerlink" title="CSShake"></a>CSShake</h1><ul><li>CSShake官方网址：<a href="http://elrumordelaluz.github.io/csshake/">http://elrumordelaluz.github.io/csshake/</a></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://csshake.surge.sh/csshake.min.css&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--class=&quot;shake shake-xxx&quot; 其中demo为自定义的样式--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;demo shake&quot;</span>&gt;</span>Foo<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;demo shake shake-hard&quot;</span>&gt;</span>Bar<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;demo shake shake-slow&quot;</span>&gt;</span>Baz<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;demo shake shake-little&quot;</span>&gt;</span>Qux<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;demo shake shake-horizontal&quot;</span>&gt;</span>Egg<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;demo shake shake-vertical&quot;</span>&gt;</span>Ham<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;demo shake shake-rotate&quot;</span>&gt;</span>Snake<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;demo shake shake-opacity&quot;</span>&gt;</span>Apple<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;demo shake shake-crazy&quot;</span>&gt;</span>Orange<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@5d365713dbfdb80b046da32c6df86074cefc066d/2021/06/16/923a882dd5cc2572ca135c4bc0d167c8.png"></p><ul><li>还可以通过增加class来控制动画的状态（比如一直摇晃，还是光标放上去摇晃）</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 鼠标经过就抖动 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;demo shake shake-freeze&quot;</span>&gt;</span>Hello<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 不停的抖动 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;demo shake shake-constant&quot;</span>&gt;</span>Hola<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 不停的抖动 鼠标经过停止 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;demo shake shake-constant shake-constant--hover&quot;</span>&gt;</span>Halo<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@60cd3e2bbdd1f6cecfca5bb0b320a263ab4aaf9f/2021/06/16/733649aabdd9ab594998632f02cbbe6a.png"></p><h1 id="Animista"><a href="#Animista" class="headerlink" title="Animista"></a>Animista</h1><ul><li>Animista轻松构建酷CSS动画，在线调试并生成源代码</li><li>Animista官网地址：<a href="https://animista.net/play/basic">https://animista.net/play/basic</a></li><li>选择并调试好动画后，点击生成源代码<img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@1b8c6c856c43c3861165722307b71e6384ec2628/2021/06/16/f7391e89a6448c8497643c548eaaf729.png"></li><li>复制类样式和关键帧</li></ul><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@31a841af2b30f979c58a9a2f8487989a3bbd233d/2021/06/16/5c76dc9a7cb8309e020c453ea7bd9d49.png"></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.shadow-drop-2-bottom</span> &#123;</span><br><span class="line"><span class="attribute">-webkit-animation</span>: shadow-drop-<span class="number">2</span>-bottom <span class="number">0.4s</span> <span class="built_in">cubic-bezier</span>(<span class="number">0.250</span>, <span class="number">0.460</span>, <span class="number">0.450</span>, <span class="number">0.940</span>) both;</span><br><span class="line">        <span class="attribute">animation</span>: shadow-drop-<span class="number">2</span>-bottom <span class="number">0.4s</span> <span class="built_in">cubic-bezier</span>(<span class="number">0.250</span>, <span class="number">0.460</span>, <span class="number">0.450</span>, <span class="number">0.940</span>) both;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@-webkit-keyframes</span> shadow-drop-<span class="number">2</span>-bottom &#123;</span><br><span class="line">  0% &#123;</span><br><span class="line">    <span class="attribute">-webkit-transform</span>: <span class="built_in">translateZ</span>(<span class="number">0</span>) <span class="built_in">translateY</span>(<span class="number">0</span>);</span><br><span class="line">            <span class="attribute">transform</span>: <span class="built_in">translateZ</span>(<span class="number">0</span>) <span class="built_in">translateY</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="attribute">-webkit-box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">            <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  100% &#123;</span><br><span class="line">    <span class="attribute">-webkit-transform</span>: <span class="built_in">translateZ</span>(<span class="number">50px</span>) <span class="built_in">translateY</span>(-<span class="number">12px</span>);</span><br><span class="line">            <span class="attribute">transform</span>: <span class="built_in">translateZ</span>(<span class="number">50px</span>) <span class="built_in">translateY</span>(-<span class="number">12px</span>);</span><br><span class="line">    <span class="attribute">-webkit-box-shadow</span>: <span class="number">0</span> <span class="number">12px</span> <span class="number">20px</span> -<span class="number">12px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.35</span>);</span><br><span class="line">            <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">12px</span> <span class="number">20px</span> -<span class="number">12px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.35</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@keyframes</span> shadow-drop-<span class="number">2</span>-bottom &#123;</span><br><span class="line">  0% &#123;</span><br><span class="line">    <span class="attribute">-webkit-transform</span>: <span class="built_in">translateZ</span>(<span class="number">0</span>) <span class="built_in">translateY</span>(<span class="number">0</span>);</span><br><span class="line">            <span class="attribute">transform</span>: <span class="built_in">translateZ</span>(<span class="number">0</span>) <span class="built_in">translateY</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="attribute">-webkit-box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">            <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  100% &#123;</span><br><span class="line">    <span class="attribute">-webkit-transform</span>: <span class="built_in">translateZ</span>(<span class="number">50px</span>) <span class="built_in">translateY</span>(-<span class="number">12px</span>);</span><br><span class="line">            <span class="attribute">transform</span>: <span class="built_in">translateZ</span>(<span class="number">50px</span>) <span class="built_in">translateY</span>(-<span class="number">12px</span>);</span><br><span class="line">    <span class="attribute">-webkit-box-shadow</span>: <span class="number">0</span> <span class="number">12px</span> <span class="number">20px</span> -<span class="number">12px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.35</span>);</span><br><span class="line">            <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">12px</span> <span class="number">20px</span> -<span class="number">12px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.35</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>然后把类名添加到你需要的DOM元素上即可</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;shadow-drop-2-bottom&quot;</span>&gt;</span>Hello<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Anime-js&quot;&gt;&lt;a href=&quot;#Anime-js&quot; class=&quot;headerlink&quot; title=&quot;Anime.js&quot;&gt;&lt;/a&gt;Anime.js&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;anime.js 是一款功能强大的Javascript 动画库插件。anime.</summary>
      
    
    
    
    <category term="Web前端" scheme="http://xiaoliblog.cn/categories/Web%E5%89%8D%E7%AB%AF/"/>
    
    <category term="常用插件" scheme="http://xiaoliblog.cn/categories/Web%E5%89%8D%E7%AB%AF/%E5%B8%B8%E7%94%A8%E6%8F%92%E4%BB%B6/"/>
    
    
    <category term="常用插件" scheme="http://xiaoliblog.cn/tags/%E5%B8%B8%E7%94%A8%E6%8F%92%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot🍃JSR303数据校验及多环境切换</title>
    <link href="http://xiaoliblog.cn/page/SpringBoot04.html"/>
    <id>http://xiaoliblog.cn/page/SpringBoot04.html</id>
    <published>2021-06-14T10:45:39.617Z</published>
    <updated>2021-06-14T11:18:07.016Z</updated>
    
    <content type="html"><![CDATA[<h1 id="JSR303数据校验"><a href="#JSR303数据校验" class="headerlink" title="JSR303数据校验"></a>JSR303数据校验</h1><h2 id="JSR303"><a href="#JSR303" class="headerlink" title="JSR303"></a>JSR303</h2><ul><li>Springboot中可以用<code>@validated</code>来校验数据，如果数据异常则会统一抛出异常，方便异常中心统一处理</li><li>先添加相关依赖</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-validation<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>来写个注解让我们的name只能支持Email格式；</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@ConfigurationProperties(prefix = &quot;person&quot;)</span></span><br><span class="line"><span class="meta">@Validated</span> <span class="comment">//数据校验</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Email(message = &quot;邮箱格式不正确&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>然后在yml中赋值，可以看到并不是一个邮箱格式</li></ul><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 给实体类赋值</span></span><br><span class="line"><span class="attr">Person:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">xiaoli</span></span><br></pre></td></tr></table></figure><ul><li>然后运行测试类，发现报错</li></ul><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@f7cd154081e5a1e36b1888c7e48aa314bfc941d6/2021/06/14/62b437b8e2ca1e8ec783c670dca116bc.png"></p><div class="note success simple"><p>使用数据校验，可以保证数据的正确性； </p></div><h2 id="常见参数"><a href="#常见参数" class="headerlink" title="常见参数"></a>常见参数</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@NotNull(message=&quot;名字不能为空&quot;)</span></span><br><span class="line"><span class="keyword">private</span> String userName;</span><br><span class="line"><span class="meta">@Max(value=120,message=&quot;年龄最大不能查过120&quot;)</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line"><span class="meta">@Email(message=&quot;邮箱格式错误&quot;)</span></span><br><span class="line"><span class="keyword">private</span> String email;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">空检查</span><br><span class="line"><span class="meta">@Null</span>       验证对象是否为<span class="keyword">null</span></span><br><span class="line"><span class="meta">@NotNull</span>    验证对象是否不为<span class="keyword">null</span>, 无法查检长度为<span class="number">0</span>的字符串</span><br><span class="line"><span class="meta">@NotBlank</span>   检查约束字符串是不是Null还有被Trim的长度是否大于<span class="number">0</span>,只对字符串,且会去掉前后空格.</span><br><span class="line"><span class="meta">@NotEmpty</span>   检查约束元素是否为NULL或者是EMPTY.</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Booelan检查</span><br><span class="line"><span class="meta">@AssertTrue</span>     验证 Boolean 对象是否为 <span class="keyword">true</span>  </span><br><span class="line"><span class="meta">@AssertFalse</span>    验证 Boolean 对象是否为 <span class="keyword">false</span>  </span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">长度检查</span><br><span class="line"><span class="meta">@Size(min=, max=)</span> 验证对象（Array,Collection,Map,String）长度是否在给定的范围之内  </span><br><span class="line"><span class="meta">@Length(min=, max=)</span> string is between min and max included.</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">日期检查</span><br><span class="line"><span class="meta">@Past</span>       验证 Date 和 Calendar 对象是否在当前时间之前  </span><br><span class="line"><span class="meta">@Future</span>     验证 Date 和 Calendar 对象是否在当前时间之后  </span><br><span class="line"><span class="meta">@Pattern</span>    验证 String 对象是否符合正则表达式的规则</span><br></pre></td></tr></table></figure><h1 id="多环境切换"><a href="#多环境切换" class="headerlink" title="多环境切换"></a>多环境切换</h1><ul><li><code>profile</code>是Spring对不同环境提供不同配置功能的支持，可以通过激活不同的环境版本，实现快速切换环境；</li></ul><h2 id="多配置文件"><a href="#多配置文件" class="headerlink" title="多配置文件"></a>多配置文件</h2><ul><li>我们在主配置文件编写的时候，文件名可以是 <code>application-&#123;profile&#125;.properties/yml </code>, 用来指定多个环境版本；</li><li>例如：<ul><li><code>application-test.properties</code> 代表测试环境配置</li><li><code>application-dev.properties</code> 代表开发环境配置</li></ul></li><li>但是Springboot并不会直接启动这些配置文件，它默认使用<code>application.properties</code>主配置文件；</li><li>我们需要通过一个配置来选择需要激活的环境：</li></ul><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#比如在配置文件中指定使用dev环境，我们可以通过设置不同的端口号进行测试；</span></span><br><span class="line"><span class="comment">#我们启动SpringBoot，就可以看到已经切换到dev下的配置了；</span></span><br><span class="line"><span class="meta">spring.profiles.active</span>=<span class="string">dev</span></span><br></pre></td></tr></table></figure><h2 id="yaml的多文档块"><a href="#yaml的多文档块" class="headerlink" title="yaml的多文档块"></a>yaml的多文档块</h2><ul><li>和properties配置文件中一样，但是使用yml去实现不需要创建多个配置文件，更加方便了 !</li></ul><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8081</span></span><br><span class="line"><span class="comment">#选择要激活那个环境块</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">profiles:</span></span><br><span class="line">    <span class="attr">active:</span> <span class="string">prod</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8083</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">profiles:</span> <span class="string">dev</span> <span class="comment">#配置环境的名称</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8084</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">profiles:</span> <span class="string">prod</span>  <span class="comment">#配置环境的名称</span></span><br></pre></td></tr></table></figure><ul><li>注意：如果yml和properties同时都配置了端口，并且没有激活其他环境 ， 默认会使用<code>properties</code>配置文件的！</li></ul><h2 id="配置文件加载位置"><a href="#配置文件加载位置" class="headerlink" title="配置文件加载位置"></a>配置文件加载位置</h2><ul><li><p>外部加载配置文件的方式十分多，我们选择最常用的即可，在开发的资源文件中进行配置！</p><ul><li>在项目根目录下创建<code>config</code>文件夹存放：<code>file:./config/</code></li><li>直接存放在项目根目录下：<code>file:/</code></li><li>存在类路径的<code>config</code>文件中，也可以是<code>resources</code>文件夹：<code>classpath:/config/</code></li><li>直接存放在类路径下：<code>classpath:/</code></li></ul></li><li><p>springboot 启动会扫描以下位置的<code>application.properties</code>或者<code>application.yml</code>文件作为Spring boot的默认配置文件：</p><ul><li>优先级1：项目路径下的<code>config</code>文件夹配置文件</li><li>优先级2：项目路径下配置文件</li><li>优先级3：资源路径下的<code>config</code>文件夹配置文件</li><li>优先级4：资源路径下配置文件</li></ul></li><li><p>优先级由高到底，高优先级的配置会覆盖低优先级的配置；</p></li><li><p>SpringBoot会从这四个位置全部加载主配置文件；互补配置；</p></li></ul><h2 id="指定位置加载配置文件"><a href="#指定位置加载配置文件" class="headerlink" title="指定位置加载配置文件"></a>指定位置加载配置文件</h2><ul><li>我们还可以通过<code>spring.config.location</code>来改变默认的配置文件位置</li><li>项目打包好以后，我们可以使用命令行参数的形式，启动项目的时候来指定配置文件的新位置；这种情况，一般是后期运维做的多，相同配置，外部指定的配置文件优先级最高</li></ul><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar spring-boot-config.jar --spring.config.location=F:/application.properties</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;JSR303数据校验&quot;&gt;&lt;a href=&quot;#JSR303数据校验&quot; class=&quot;headerlink&quot; title=&quot;JSR303数据校验&quot;&gt;&lt;/a&gt;JSR303数据校验&lt;/h1&gt;&lt;h2 id=&quot;JSR303&quot;&gt;&lt;a href=&quot;#JSR303&quot; class=&quot;</summary>
      
    
    
    
    <category term="Java后端" scheme="http://xiaoliblog.cn/categories/Java%E5%90%8E%E7%AB%AF/"/>
    
    <category term="SpringBoot" scheme="http://xiaoliblog.cn/categories/Java%E5%90%8E%E7%AB%AF/SpringBoot/"/>
    
    
    <category term="SpringBoot" scheme="http://xiaoliblog.cn/tags/SpringBoot/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot🍃yaml配置注入</title>
    <link href="http://xiaoliblog.cn/page/SpringBoot03.html"/>
    <id>http://xiaoliblog.cn/page/SpringBoot03.html</id>
    <published>2021-06-14T09:00:34.883Z</published>
    <updated>2021-06-14T11:06:50.745Z</updated>
    
    <content type="html"><![CDATA[<h1 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h1><ul><li>SpringBoot使用一个全局的配置文件 ， 配置文件名称是固定的</li><li>第一种配置文件：<code>application.properties</code><ul><li>语法结构 ：<code>key=value</code></li></ul></li><li>第二章配置文件：<code>application.yml</code>【官方推荐】<ul><li>语法结构 ：<code>key：空格 value</code></li></ul></li><li>配置文件的作用 ：修改SpringBoot自动配置的默认值，因为SpringBoot在底层都给我们自动配置好了；</li><li>比如我们可以在配置文件中修改Tomcat 默认启动的端口号！测试一下-</li></ul><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">server.port</span>=<span class="string">8081</span></span><br></pre></td></tr></table></figure><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8081</span></span><br></pre></td></tr></table></figure><ul><li>Springboot各版本的各个功能点官方教程地址：<a href="https://docs.spring.io/spring-boot/docs/">https://docs.spring.io/spring-boot/docs/</a></li></ul><div class="note success simple"><p>更多配置可以参考<a href="https://docs.spring.io/spring-boot/docs/current/reference/html/application-properties.html">官方配置文档</a></p></div><h1 id="yaml概述"><a href="#yaml概述" class="headerlink" title="yaml概述"></a>yaml概述</h1><ul><li><code>YAML</code>是 “YAML Ain’t a Markup Language” （YAML不是一种标记语言）的递归缩写。在开发的这种语言时，YAML 的意思其实是：”Yet Another Markup Language”（仍是一种标记语言）</li><li><strong>这种语言以数据作为中心，而不是以标记语言为重点！</strong></li><li>以前的配置文件，大多数都是使用xml来配置；比如一个简单的端口配置，我们来对比下yaml和xml</li><li>传统xml配置：</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">server</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">port</span>&gt;</span>8081<span class="tag">&lt;<span class="name">port</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">server</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>yaml配置：</li></ul><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">server：</span></span><br><span class="line">  <span class="attr">prot:</span> <span class="number">8080</span></span><br></pre></td></tr></table></figure><h2 id="yaml基础语法"><a href="#yaml基础语法" class="headerlink" title="yaml基础语法"></a>yaml基础语法</h2><ul><li><p>空格不能省略</p></li><li><p>以缩进来控制层级关系，只要是左边对齐的一列数据都是同一个层级的</p></li><li><p>属性和值的大小写都是十分敏感的</p></li><li><p><strong>字面量：普通的值  [ 数字，布尔值，字符串  ]</strong></p><ul><li>字面量直接写在后面就可以 ， 字符串默认不用加上双引号或者单引号； </li></ul></li></ul><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">k:</span> <span class="string">v</span></span><br><span class="line"><span class="attr">name:</span> <span class="string">xiaoli</span></span><br></pre></td></tr></table></figure><ul><li><p><code>&quot;&quot;</code> 双引号，不会转义字符串里面的特殊字符 ， 特殊字符会作为本身想表示的意思；</p><ul><li>比如 ：name: “xiao \n li”   输出 ：xiao  换行   li</li></ul></li><li><p><code>&#39;</code>单引号，会转义特殊字符 ， 特殊字符最终会变成和普通字符一样输出</p><ul><li>比如 ：name: ‘xiao \n li’   输出 ：xiao  \n   li</li></ul></li><li><p><strong>对象、Map键值对</strong></p></li></ul><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#对象、Map格式</span></span><br><span class="line"><span class="attr">k:</span> </span><br><span class="line">    <span class="attr">v1:</span></span><br><span class="line">    <span class="attr">v2:</span></span><br></pre></td></tr></table></figure><ul><li>在下一行来写对象的属性和值得关系，注意缩进；比如：</li></ul><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">student:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">xiaoli</span></span><br><span class="line">    <span class="attr">age:</span> <span class="number">3</span></span><br></pre></td></tr></table></figure><ul><li>行内写法</li></ul><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">student:</span> &#123;<span class="attr">name:</span> <span class="string">xiaoli</span>,<span class="attr">age:</span> <span class="number">3</span>&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>数组（ List、set ）</strong><ul><li>用 <code>-</code> 值表示数组中的一个元素，比如：</li></ul></li></ul><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">pets:</span></span><br><span class="line"> <span class="bullet">-</span> <span class="string">cat</span></span><br><span class="line"> <span class="bullet">-</span> <span class="string">dog</span></span><br><span class="line"> <span class="bullet">-</span> <span class="string">pig</span></span><br></pre></td></tr></table></figure><ul><li>行内写法</li></ul><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">pets:</span> [<span class="string">cat</span>,<span class="string">dog</span>,<span class="string">pig</span>]</span><br></pre></td></tr></table></figure><ul><li>修改SpringBoot的默认端口号<ul><li>配置文件中添加，端口号的参数，就可以切换端口；</li></ul></li></ul><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8082</span></span><br></pre></td></tr></table></figure><h2 id="注入配置文件"><a href="#注入配置文件" class="headerlink" title="注入配置文件"></a>注入配置文件</h2><ul><li><code>yaml</code>文件更强大的地方在于，他可以给我们的实体类直接注入匹配值！</li><li>编写一个实体类 Dog</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span>  <span class="comment">//注册bean到容器中</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Dog</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//有参无参构造、get、set方法、toString()方法  </span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>原来是通过<code>@Value</code>注入属性值的</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@Component</span> <span class="comment">//注册bean</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Dog</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Value(&quot;旺财&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="meta">@Value(&quot;3&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>在SpringBoot的测试类下注入Dog类测试一下</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DemoApplicationTests</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span> <span class="comment">//将狗狗自动注入进来</span></span><br><span class="line">    Dog dog;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">contextLoads</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(dog); <span class="comment">//打印看下狗狗对象</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>运行结果，@Value注入成功<img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@36c6f00aa2f60e9dfb90404c6e3d09518be8914d/2021/06/14/43ddd8b05afe947173cc8a035f9f5453.png"></p></li><li><p>我们在编写一个复杂一点的实体类：Person 类</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span> <span class="comment">//注册bean到容器中</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">    <span class="keyword">private</span> Boolean happy;</span><br><span class="line">    <span class="keyword">private</span> Date birth;</span><br><span class="line">    <span class="keyword">private</span> Map&lt;String,Object&gt; map;</span><br><span class="line">    <span class="keyword">private</span> List&lt;Object&gt; list;</span><br><span class="line">    <span class="keyword">private</span> Dog dog;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//有参无参构造、get、set方法、toString()方法  </span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>在<code>resources</code>下创建<code>application.yml</code>配置文件，使用yaml配置的方式进行注入</li></ul><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 给实体类赋值</span></span><br><span class="line"><span class="attr">Person:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">xiaoli</span></span><br><span class="line">  <span class="attr">age:</span> <span class="number">21</span></span><br><span class="line">  <span class="attr">happy:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">birth:</span> <span class="number">1999</span><span class="string">/11/12</span></span><br><span class="line">  <span class="attr">map:</span> &#123;<span class="attr">k1:</span> <span class="string">v1</span>,<span class="attr">k2:</span> <span class="string">v2</span>&#125;</span><br><span class="line">  <span class="attr">list:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">code</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">music</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">guitar</span></span><br><span class="line">  <span class="attr">dog:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">旺财</span></span><br><span class="line">    <span class="attr">age:</span> <span class="number">3</span></span><br></pre></td></tr></table></figure><ul><li>person这个对象的所有值在<code>yml</code>配置文件都写好了，现在来注入到我们的类中！</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">@ConfigurationProperties作用：</span></span><br><span class="line"><span class="comment">将配置文件中配置的每一个属性的值，映射到这个组件中；</span></span><br><span class="line"><span class="comment">告诉SpringBoot将本类中的所有属性和配置文件中相关的配置进行绑定</span></span><br><span class="line"><span class="comment">参数 prefix = “person” : 将配置文件中的person下面的所有属性一一对应</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">@Component</span> <span class="comment">//注册bean</span></span><br><span class="line"><span class="meta">@ConfigurationProperties(prefix = &quot;person&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">    <span class="keyword">private</span> Boolean happy;</span><br><span class="line">    <span class="keyword">private</span> Date birth;</span><br><span class="line">    <span class="keyword">private</span> Map&lt;String,Object&gt; map;</span><br><span class="line">    <span class="keyword">private</span> List&lt;Object&gt; list;</span><br><span class="line">    <span class="keyword">private</span> Dog dog;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>此时IDEA 提示，springboot配置注解处理器没有找到，查看文档，配置一个依赖即可，爆红不会影响程序的运行</li></ul><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@eb4bd22033874e38d64a4719e85dc8d44d2d7cb4/2021/06/14/1e088ffa1b81fffacf4c56dc8e9cf8e9.png"></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 导入配置文件处理器，配置文件进行绑定就会有提示，需要重启 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-configuration-processor<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>确认以上配置都OK之后，去测试类中测试一下：</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SpringbootDemoApplicationTests</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> Person person;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">contextLoads</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(person);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@97b6abaaba0f1c7a6ac9c36f50ea2f139124582c/2021/06/14/cfead688d17e174cf8705684bca5563f.png"></p><h2 id="加载指定的配置文件"><a href="#加载指定的配置文件" class="headerlink" title="加载指定的配置文件"></a>加载指定的配置文件</h2><ul><li><code>@PropertySource</code> ：加载指定的配置文件；</li><li><code>@configurationProperties</code>：默认从全局配置文件中获取值；</li><li>比如再创建一个<code>person.properties</code>文件</li></ul><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">name</span>=<span class="string">xiaoli</span></span><br></pre></td></tr></table></figure><ul><li>然后在实体类中指定加载<code>person.properties</code>文件，通过EL表达式赋值</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//加载指定的配置文件</span></span><br><span class="line"><span class="meta">@PropertySource(value = &quot;classpath:person.properties&quot;)</span></span><br><span class="line"><span class="meta">@Component</span> <span class="comment">//注册bean</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line">   <span class="comment">//SPEL表达式取出配置文件的值</span></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;name&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    ......  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="配置文件占位符"><a href="#配置文件占位符" class="headerlink" title="配置文件占位符"></a>配置文件占位符</h2><ul><li>配置文件还可以编写占位符生成随机数</li></ul><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">person:</span></span><br><span class="line">   <span class="attr">name:</span> <span class="string">xiaoli$&#123;random.uuid&#125;</span> <span class="comment"># 随机uuid</span></span><br><span class="line">   <span class="attr">age:</span> <span class="string">$&#123;random.int&#125;</span>  <span class="comment"># 随机int</span></span><br><span class="line">   <span class="attr">happy:</span> <span class="literal">false</span></span><br><span class="line">   <span class="attr">birth:</span> <span class="number">2000</span><span class="string">/01/01</span></span><br><span class="line">   <span class="attr">map:</span> &#123;<span class="attr">k1:</span> <span class="string">v1</span>,<span class="attr">k2:</span> <span class="string">v2</span>&#125;</span><br><span class="line">   <span class="attr">list:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">code</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">girl</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">music</span></span><br><span class="line">   <span class="attr">dog:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">$&#123;person.hello:other&#125;_旺财</span></span><br><span class="line">      <span class="attr">age:</span> <span class="number">1</span></span><br></pre></td></tr></table></figure><h2 id="对比"><a href="#对比" class="headerlink" title="对比"></a>对比</h2><ul><li>对比一个读取yml文件使用<code>@ConfigurationProperties</code>和读取properties文件使用<code>@Value</code>的区别</li></ul><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@ce7c1881012c74363b99f0781aaf34e5c68f7e83/2021/06/14/15889f3849e9f594f520ffa414d4b221.png"></p><ul><li><code>@ConfigurationProperties</code>只需要写一次即可 ，<code> @Value</code>则需要每个字段都添加</li><li>松散绑定：这个什么意思呢? 比如我的yml中写的last-name，这个和lastName是一样的，<code>-</code> 后面跟着的字母默认是大写的。这就是松散绑定。可以测试一下</li><li>JSR303数据校验 ， 这个就是我们可以在字段是增加一层过滤器验证 ， 可以保证数据的合法性</li><li>复杂类型封装，yml中可以封装对象 ， 使用value就不支持</li><li>配置yml和配置properties都可以获取到值 ， 强烈推荐 <code>yml</code>；</li><li>如果我们在某个业务中，只需要获取配置文件中的某个值，可以使用一下 <code>@value</code>；</li><li>如果说，我们专门编写了一个JavaBean来和配置文件进行一一映射，就直接<code>@configurationProperties</code>，不要犹豫</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;配置文件&quot;&gt;&lt;a href=&quot;#配置文件&quot; class=&quot;headerlink&quot; title=&quot;配置文件&quot;&gt;&lt;/a&gt;配置文件&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;SpringBoot使用一个全局的配置文件 ， 配置文件名称是固定的&lt;/li&gt;
&lt;li&gt;第一种配置文件：&lt;cod</summary>
      
    
    
    
    <category term="Java后端" scheme="http://xiaoliblog.cn/categories/Java%E5%90%8E%E7%AB%AF/"/>
    
    <category term="SpringBoot" scheme="http://xiaoliblog.cn/categories/Java%E5%90%8E%E7%AB%AF/SpringBoot/"/>
    
    
    <category term="SpringBoot" scheme="http://xiaoliblog.cn/tags/SpringBoot/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot🍃SpringBoot原理探究</title>
    <link href="http://xiaoliblog.cn/page/SpringBoot02.html"/>
    <id>http://xiaoliblog.cn/page/SpringBoot02.html</id>
    <published>2021-06-14T06:41:42.049Z</published>
    <updated>2021-06-14T08:55:45.284Z</updated>
    
    <content type="html"><![CDATA[<h1 id="自动装配原理"><a href="#自动装配原理" class="headerlink" title="自动装配原理"></a>自动装配原理</h1><h2 id="pom-xml"><a href="#pom-xml" class="headerlink" title="pom.xml"></a>pom.xml</h2><ul><li>首先看一下<code>pom.xml</code>文件，<code>parent</code>核心依赖都在父工程中！主要是管理项目的资源过滤及插件！</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.5.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>以后我们导入依赖默认是不需要写版本；但是如果导入的包没有在依赖中管理着就需要手动配置版本了</li></ul><h2 id="启动器"><a href="#启动器" class="headerlink" title="启动器"></a>启动器</h2><ul><li><code>springboot-boot-starter-xxx</code>：就是spring-boot的场景启动器</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><code>spring-boot-starter-web</code>：帮我们导入了web模块正常运行所依赖的组件；</li><li>SpringBoot将所有的功能场景都抽取出来，做成一个个的<code>starter</code> （启动器），只需要在项目中引入这些<code>starter</code>即可，所有相关的依赖都会导入进来 ， 我们要用什么功能就导入什么样的场景启动器即可 ；也可以自己自定义 <code>starter</code>；</li></ul><h2 id="主启动类"><a href="#主启动类" class="headerlink" title="主启动类"></a>主启动类</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//@SpringBootApplication 来标注一个主程序类</span></span><br><span class="line"><span class="comment">//说明这是一个Spring Boot应用</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringbootDemoApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(SpringbootDemoApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="注解"><a href="#注解" class="headerlink" title="注解"></a>注解</h1><h2 id="SpringBootApplication"><a href="#SpringBootApplication" class="headerlink" title="@SpringBootApplication"></a>@SpringBootApplication</h2><ul><li>作用：标注在某个类上说明这个类是SpringBoot的主配置类 ， SpringBoot就应该运行这个类的main方法来启动SpringBoot应用；</li><li>进入这个注解：可以看到上面还有很多其他注解！</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootConfiguration</span></span><br><span class="line"><span class="meta">@EnableAutoConfiguration</span></span><br><span class="line"><span class="meta">@ComponentScan(</span></span><br><span class="line"><span class="meta">    excludeFilters = &#123;@Filter(</span></span><br><span class="line"><span class="meta">    type = FilterType.CUSTOM,</span></span><br><span class="line"><span class="meta">    classes = &#123;TypeExcludeFilter.class&#125;</span></span><br><span class="line"><span class="meta">), @Filter(</span></span><br><span class="line"><span class="meta">    type = FilterType.CUSTOM,</span></span><br><span class="line"><span class="meta">    classes = &#123;AutoConfigurationExcludeFilter.class&#125;</span></span><br><span class="line"><span class="meta">)&#125;</span></span><br><span class="line"><span class="meta">)</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> SpringBootApplication &#123;</span><br><span class="line">   <span class="comment">//....</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="ComponentScan"><a href="#ComponentScan" class="headerlink" title="@ComponentScan"></a>@ComponentScan</h2><ul><li>这个注解在Spring中很重要 ,它对应XML配置中的元素。</li><li>作用：自动扫描并加载符合条件的组件或者bean ， 将这个bean定义加载到IOC容器中</li></ul><h2 id="SpringBootConfiguration"><a href="#SpringBootConfiguration" class="headerlink" title="@SpringBootConfiguration"></a>@SpringBootConfiguration</h2><ul><li>作用：SpringBoot的配置类 ，标注在某个类上 ， 表示这是一个SpringBoot的配置类；</li><li>我们继续进去这个注解查看</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 点进去得到下面的 @Component</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> SpringBootConfiguration &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> Configuration &#123;&#125;</span><br></pre></td></tr></table></figure><ul><li>这里的 <code>@Configuration</code>，说明这是一个配置类 ，配置类就是对应Spring的xml 配置文件；</li><li>里面的 <code>@Component</code> 这就说明，启动类本身也是Spring中的一个组件而已，负责启动应用！</li></ul><h2 id="EnableAutoConfiguration"><a href="#EnableAutoConfiguration" class="headerlink" title="@EnableAutoConfiguration"></a>@EnableAutoConfiguration</h2><ul><li>@EnableAutoConfiguration ：开启自动配置功能。告诉SpringBoot开启自动配置功能，这样自动配置才能生效；</li><li>点进注解继续查看：</li><li><code>@AutoConfigurationPackage</code> ：自动配置包</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Import(&#123;Registrar.class&#125;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> AutoConfigurationPackage &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><code>@import</code> ：Spring底层注解@import ， 给容器中导入一个组件</li><li><code>Registrar.class</code> 作用：将主启动类的所在包及包下面所有子包里面的所有组件扫描到Spring容器 ；</li><li>这个分析完了，退到上一步，继续看</li><li><code>@Import(&#123;AutoConfigurationImportSelector.class&#125;)</code> ：给容器导入组件 ；</li><li>AutoConfigurationImportSelector ：自动配置导入选择器，那么它会导入哪些组件的选择器呢？我们点击去这个类看源码：</li><li>这个类中有一个这样的方法</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获得候选的配置</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> List&lt;String&gt; <span class="title">getCandidateConfigurations</span><span class="params">(AnnotationMetadata metadata, AnnotationAttributes attributes)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//这里的getSpringFactoriesLoaderFactoryClass（）方法</span></span><br><span class="line">    <span class="comment">//返回的就是我们最开始看的启动自动导入配置文件的注解类；EnableAutoConfiguration</span></span><br><span class="line">    List&lt;String&gt; configurations = SpringFactoriesLoader.loadFactoryNames(<span class="keyword">this</span>.getSpringFactoriesLoaderFactoryClass(), <span class="keyword">this</span>.getBeanClassLoader());</span><br><span class="line">    Assert.notEmpty(configurations, <span class="string">&quot;No auto configuration classes found in META-INF/spring.factories. If you are using a custom packaging, make sure that file is correct.&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> configurations;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>这个方法又调用了  SpringFactoriesLoader 类的静态方法！我们进入SpringFactoriesLoader类loadFactoryNames() 方法</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> List&lt;String&gt; <span class="title">loadFactoryNames</span><span class="params">(Class&lt;?&gt; factoryClass, <span class="meta">@Nullable</span> ClassLoader classLoader)</span> </span>&#123;</span><br><span class="line">    String factoryClassName = factoryClass.getName();</span><br><span class="line">    <span class="comment">//这里它又调用了 loadSpringFactories 方法</span></span><br><span class="line">    <span class="keyword">return</span> (List)loadSpringFactories(classLoader).getOrDefault(factoryClassName, Collections.emptyList());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>我们继续点击查看 loadSpringFactories 方法</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> Map&lt;String, List&lt;String&gt;&gt; loadSpringFactories(<span class="meta">@Nullable</span> ClassLoader classLoader) &#123;</span><br><span class="line">    <span class="comment">//获得classLoader ， 我们返回可以看到这里得到的就是EnableAutoConfiguration标注的类本身</span></span><br><span class="line">    MultiValueMap&lt;String, String&gt; result = (MultiValueMap)cache.get(classLoader);</span><br><span class="line">    <span class="keyword">if</span> (result != <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//去获取一个资源 &quot;META-INF/spring.factories&quot;</span></span><br><span class="line">            Enumeration&lt;URL&gt; urls = classLoader != <span class="keyword">null</span> ? classLoader.getResources(<span class="string">&quot;META-INF/spring.factories&quot;</span>) : ClassLoader.getSystemResources(<span class="string">&quot;META-INF/spring.factories&quot;</span>);</span><br><span class="line">            LinkedMultiValueMap result = <span class="keyword">new</span> LinkedMultiValueMap();</span><br><span class="line"></span><br><span class="line">            <span class="comment">//将读取到的资源遍历，封装成为一个Properties</span></span><br><span class="line">            <span class="keyword">while</span>(urls.hasMoreElements()) &#123;</span><br><span class="line">                URL url = (URL)urls.nextElement();</span><br><span class="line">                UrlResource resource = <span class="keyword">new</span> UrlResource(url);</span><br><span class="line">                Properties properties = PropertiesLoaderUtils.loadProperties(resource);</span><br><span class="line">                Iterator var6 = properties.entrySet().iterator();</span><br><span class="line"></span><br><span class="line">                <span class="keyword">while</span>(var6.hasNext()) &#123;</span><br><span class="line">                    Entry&lt;?, ?&gt; entry = (Entry)var6.next();</span><br><span class="line">                    String factoryClassName = ((String)entry.getKey()).trim();</span><br><span class="line">                    String[] var9 = StringUtils.commaDelimitedListToStringArray((String)entry.getValue());</span><br><span class="line">                    <span class="keyword">int</span> var10 = var9.length;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">for</span>(<span class="keyword">int</span> var11 = <span class="number">0</span>; var11 &lt; var10; ++var11) &#123;</span><br><span class="line">                        String factoryName = var9[var11];</span><br><span class="line">                        result.add(factoryClassName, factoryName.trim());</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            cache.put(classLoader, result);</span><br><span class="line">            <span class="keyword">return</span> result;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException var13) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">&quot;Unable to load factories from location [META-INF/spring.factories]&quot;</span>, var13);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>发现一个多次出现的文件：<code>spring.factories</code>，全局搜索它</li></ul><h2 id="spring-factories"><a href="#spring-factories" class="headerlink" title="spring.factories"></a>spring.factories</h2><ul><li>我们根据源头打开<code>spring.factories</code> ， 看到了很多自动配置的文件；这就是自动配置根源所在！</li></ul><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@b6240e3183f626d491ec065a1ee5ffa9400bb5db/2021/06/14/07f412f1b18ddcac1e759ed58c66900a.png"></p><ul><li>我们在上面的自动配置类随便找一个打开看看，比如 ：<code>WebMvcAutoConfiguration</code></li></ul><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@d2d5048f444dcde8f82c5b5069428bd5c10b5db7/2021/06/14/ec2fc9711a58adbe348e6deccd85acf9.png"></p><ul><li>可以看到这些一个个的都是JavaConfig配置类，而且都注入了一些Bean，可以找一些自己认识的类，看着熟悉一下！</li><li>所以，自动配置真正实现是从<code>classpath</code>中搜寻所有的<code>META-INF/spring.factories</code>配置文件 ，并将其中对应的 <code>org.springframework.boot.autoconfigure</code>. 包下的配置项，通过反射实例化为对应标注了 <code>@Configuration</code>的<code>JavaConfig</code>形式的IOC容器配置类 ， 然后将这些都汇总成为一个实例并加载到IOC容器中</li></ul><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ul><li>SpringBoot在启动的时候从类路径下的<code>META-INF/spring.factories</code>中获取<code>EnableAutoConfiguration</code>指定的值</li><li>将这些值作为自动配置类导入容器 ， 自动配置类就生效 ， 帮我们进行自动配置工作；</li><li>整个J2EE的整体解决方案和自动配置都在<code>springboot-autoconfigure</code>的jar包中；</li><li>它会给容器中导入非常多的自动配置类 （<code>xxxAutoConfiguration</code>）, 就是给容器中导入这个场景需要的所有组件 ， 并配置好这些组件 ；</li><li>有了自动配置类 ， 免去了我们手动编写配置注入功能组件等的工作；</li></ul><h1 id="主启动类-1"><a href="#主启动类-1" class="headerlink" title="主启动类"></a>主启动类</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringbootApplication</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(SpringbootApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>该方法主要分两部分，一部分是<code>SpringApplication</code>的实例化，二是<code>run</code>方法的执行；</li></ul><h2 id="SpringApplication"><a href="#SpringApplication" class="headerlink" title="SpringApplication"></a>SpringApplication</h2><ul><li>这个类主要做了以下四件事情：<ul><li>推断应用的类型是普通的项目还是Web项目</li><li>查找并加载所有可用初始化器 ， 设置到<code>initializers</code>属性中</li><li>找出所有的应用程序监听器，设置到<code>listeners</code>属性中</li><li>推断并设置<code>main</code>方法的定义类，找到运行的主类</li></ul></li><li>查看构造器</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">SpringApplication</span><span class="params">(ResourceLoader resourceLoader, Class... primarySources)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// ......</span></span><br><span class="line">    <span class="keyword">this</span>.webApplicationType = WebApplicationType.deduceFromClasspath();</span><br><span class="line">    <span class="keyword">this</span>.setInitializers(<span class="keyword">this</span>.getSpringFactoriesInstances();</span><br><span class="line">    <span class="keyword">this</span>.setListeners(<span class="keyword">this</span>.getSpringFactoriesInstances(ApplicationListener.class));</span><br><span class="line">    <span class="keyword">this</span>.mainApplicationClass = <span class="keyword">this</span>.deduceMainApplicationClass();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="run方法流程分析"><a href="#run方法流程分析" class="headerlink" title="run方法流程分析"></a>run方法流程分析</h2><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@6046991cc7394f81babd7c153b490290e93c2bc1/2021/06/14/fba67064ed663d2864c4c265be86eee5.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;自动装配原理&quot;&gt;&lt;a href=&quot;#自动装配原理&quot; class=&quot;headerlink&quot; title=&quot;自动装配原理&quot;&gt;&lt;/a&gt;自动装配原理&lt;/h1&gt;&lt;h2 id=&quot;pom-xml&quot;&gt;&lt;a href=&quot;#pom-xml&quot; class=&quot;headerlink&quot; ti</summary>
      
    
    
    
    <category term="Java后端" scheme="http://xiaoliblog.cn/categories/Java%E5%90%8E%E7%AB%AF/"/>
    
    <category term="SpringBoot" scheme="http://xiaoliblog.cn/categories/Java%E5%90%8E%E7%AB%AF/SpringBoot/"/>
    
    
    <category term="SpringBoot" scheme="http://xiaoliblog.cn/tags/SpringBoot/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot🍃微服务架构介绍</title>
    <link href="http://xiaoliblog.cn/page/SpringBoot01.html"/>
    <id>http://xiaoliblog.cn/page/SpringBoot01.html</id>
    <published>2021-06-14T06:40:36.375Z</published>
    <updated>2021-06-23T09:04:08.866Z</updated>
    
    <content type="html"><![CDATA[<h1 id="微服务架构"><a href="#微服务架构" class="headerlink" title="微服务架构"></a>微服务架构</h1><ul><li>微服务架构（Microservice Architecture）是一种架构概念，旨在通过将功能分解到各个离散的服务中以实现对解决方案的解耦。它要求我们在开发一个应用的时候，这个应用必须构建成一系列小服务的组合：可以通过HTTP的方式进行互通。要学习微服务架构先了解一下过去的单体应用架构</li></ul><h2 id="单体应用架构"><a href="#单体应用架构" class="headerlink" title="单体应用架构"></a>单体应用架构</h2><ul><li>所谓单体应用架构（all in one）是指，我们将一个应用的中的所有应用服务都封装在一个应用中</li><li>无论是ERP、CRM或是其他什么系统，你都把数据库访问，web访问， 等等各个功能放到一个war包内</li><li>这样做的好处是，易于开发和测试；也十分方便部署；当需要扩展时，只需要将war复制多份，然后放到多个服务器上，再做个负载均衡就可以了</li><li>单体应用架构的缺点是，哪怕我要修改一个非常小的地方，我都需要停掉整个服务，重新打包、部署这个应用war包。特别是对于一个大型应用，我们不可能吧所有内容都放在一个应用里面，如何维护、如何分工合作都是问题</li></ul><h2 id="微服务架构-1"><a href="#微服务架构-1" class="headerlink" title="微服务架构"></a>微服务架构</h2><ul><li>all in one的架构方式，我们把所有的功能单元放在一个应用里面。然后我们把整个应用部署到服务器上。如果负载能力不行，我们将整个应用进行水平复制，进行扩展，然后在负载均衡</li><li>所谓微服务架构，就是打破之前all in one的架构方式，把每个功能元素独立出来。把独立出来的功能元素的动态组合，需要的功能元素才去拿来组合，需要多一些时可以整合多个功能元素。所以微服务架构是对功能元索进行复制，而没有对整个应用进行复制</li></ul><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@28c732cb27407cc491740fde2f92e2e007c1c6f5/2021/05/11/a327f7b66998c7f52b1b3643fccc4ae9.png" width="20%"><ul><li>微服务架构思想由<code>Martin Fowler</code>（马丁富勒）提出，他国际著名的OO专家，敏捷开发方法的创始人之一，现为ThoughtWorks公司的首席科学家。在面向对象分析设计、UML、模式、软件开发方法学、XP、重构等方面，都是世界顶级的专家，现为Thought Works公司的首席科学家</li><li>关于微服务架构可以查阅他的论文：<a href="https://martinfowler.com/articles/microservices.html">https://martinfowler.com/articles/microservices.html</a></li></ul><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@f25289db752b2df986adcd9d759d71613c8a9ad4/2021/05/11/626fcdb7a38dc2a61c40c4286e0a3301.png"></p><h2 id="如何构建"><a href="#如何构建" class="headerlink" title="如何构建"></a>如何构建</h2><ul><li>一个大型系统的微服务架构，就像一个复杂交织的神经网络，每一个神经元就是一个功能元素，它们各自完成自己的功能，然后通过http相互请求调用</li><li>比如一个电商系统，查缓存、连数据库、浏览页面、结账、支付等服务都是一个个独立的功能服务，都被微化了，它们作为一个个微服务共同构建了一个庞大的系统。如果修改其中的一个功能，只需要更新升级其中一个功能服务单元即可</li><li>但是这种庞大的系统架构给部署和运维带来很大的难度。于是, Spring为我们带来了构建大型分布式微服务的全套、全程产品:<ul><li>构建一个个功能独立的微服务应用单元，可以使用<code>SpringBoot</code>, 可以帮我们快速构建一个应用</li><li>大型分布式网络服务的调用，这部分由<code>Spring Cloud</code>来完成，实现分布式</li><li>在分布式中间,进行流式数据计算、批处理，我们有<code>spring cloud data flow</code>.</li><li><code>Spring</code>为我们想清楚了整个从开始构建应用到大型分布式应用全流程方案</li></ul></li></ul><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@27233c186da60e06b9caaf4fa732fca25c0f4fe7/2021/03/21/04b9862db19c7014885fbe73f97ed935.png"></p><h1 id="SpringBoot"><a href="#SpringBoot" class="headerlink" title="SpringBoot"></a>SpringBoot</h1><h2 id="SpringBoot简介"><a href="#SpringBoot简介" class="headerlink" title="SpringBoot简介"></a>SpringBoot简介</h2><ul><li><code>SpringBoot</code>就是一个javaweb的开发框架，和SpringMVC类似，对比其他javaweb框架的好处，官方说是简化开发，约定大于配置，  you can “just run”，能迅速的开发web应用，几行代码开发一个HTTP接口</li><li>随着 Spring 不断的发展，涉及的领域越来越多，项目整合开发需要配合各种各样的文件，慢慢变得不那么易用简单，违背了最初的理念，甚至人称配置地狱。<code>Spring Boot</code> 正是在这样的一个背景下被抽象出来的开发框架，目的为了让大家更容易的使用 Spring 、更容易的集成各种常用的中间件、开源软件</li><li><code>Spring Boot</code> 基于 Spring 开发，<code>Spirng Boot</code> 本身并不提供 Spring 框架的核心及扩展功能，只是用于快速、敏捷地开发新一代基于 Spring 框架的应用程序。也就是说，它并不是用来替代 Spring 的解决方案，而是和 Spring 框架紧密结合用于提升 Spring 开发者体验的工具。<code>Spring Boot</code> 以<strong>约定大于配置</strong>的核心思想，默认帮我们进行了很多设置，多数 <code>Spring Boot</code> 应用只需要很少的 Spring 配置。同时它集成了大量常用的第三方库配置（例如 Redis、MongoDB、Jpa、RabbitMQ、Quartz 等等），<code>Spring Boot</code> 应用中这些第三方库几乎可以零配置的开箱即用</li><li>简单来说就是<code>SpringBoot</code>其实不是什么新的框架，它默认配置了很多框架的使用方式，就像maven整合了所有的jar包，<code>Spring Boot</code>整合了所有的框架 </li></ul><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@e7d80aaad7f25a31b9399988e07f700ffc4cdf3d/2021/05/11/f639a14e5cb4169610211f09b9b8ac32.png"></p><h2 id="SpringBoot项目创建"><a href="#SpringBoot项目创建" class="headerlink" title="SpringBoot项目创建"></a>SpringBoot项目创建</h2><ul><li>Spring官方提供了非常方便的工具让我们快速构建应用<ul><li><code>Spring Initializr</code>：<a href="https://start.spring.io/">https://start.spring.io/</a></li></ul></li><li><strong>项目创建方式一</strong>：使用<code>Spring Initializr</code> 的 Web页面创建项目<ul><li>打开 <a href="https://start.spring.io/">https://start.spring.io/</a></li><li>填写项目信息</li><li>点击【Generate Project】按钮生成项目；下载此项目</li><li>解压项目包，并用IDEA以Maven项目导入，一路下一步即可，直到项目导入完毕</li><li>如果是第一次使用，可能速度会比较慢，包比较多、需要耐心等待一切就绪</li></ul></li></ul><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@88098a5704296a0cea91c4eb13303a4740b86eed/2021/05/11/f0db94f650d18832962c421cace44314.png"></p><ul><li><strong>项目创建方式二</strong>：使用 IDEA 直接创建项目<ul><li>创建一个新项目</li><li>在右侧选择<code>spring initalizr</code> ， 可以看到默认就是去官网的快速构建工具那里实现</li><li>填写项目信息，注意包名最好改一下比较好</li><li>选择初始化的组件（初学勾选 Web 即可）</li><li>填写项目路径</li><li>等待项目构建成功</li></ul></li></ul><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@e7b1c819d643257314974bc19c362e1d32389657/2021/06/14/6b03857519b4eb23851900927073727b.png" width="80%"><div class="note success simple"><p>使用Spring官网创建项目可能会出现网络连接问题，可以自定义URL使用<code>http://start.aliyun.com</code> 阿里云的链接进行项目创建</p></div><h2 id="项目结构"><a href="#项目结构" class="headerlink" title="项目结构"></a>项目结构</h2><ul><li>如果没有勾选Web，只需导入web依赖即可</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>随便建立一个Controller进行测试</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/hello&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@GetMapping(&quot;/hello&quot;)</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">hello</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;hello&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>然后重新启动项目，访问<code>http://localhost:8080/hello/hello</code></li></ul><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@98e5f66fcc19189d49fef60b064224249a4f6b43/2021/06/14/a5f87651b7bf1a6792856531185a1b39.png"></p><ul><li>在<code>resources</code>下有一个<code>application.properties</code>可以修改端口号和其他配置信息</li></ul><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 更改项目的端口号</span></span><br><span class="line"><span class="meta">sever.port</span>=<span class="string">8081</span></span><br></pre></td></tr></table></figure><ul><li>还可以修改SpringBoot启动的Banner字符图，可以参考网站：<a href="https://www.bootschool.net/ascii/">https://www.bootschool.net/ascii/</a>，复制字符图，在<code>resources</code>下新建一个<code>banner.txt</code>文件，然后粘贴进去，重启项目即可</li></ul><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@f27b01fc31ba768aa4bd26db766fe03d4b9f5860/2021/06/14/4874302bcb90003243cd93a685d295e2.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;微服务架构&quot;&gt;&lt;a href=&quot;#微服务架构&quot; class=&quot;headerlink&quot; title=&quot;微服务架构&quot;&gt;&lt;/a&gt;微服务架构&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;微服务架构（Microservice Architecture）是一种架构概念，旨在通过将功能分解到各个</summary>
      
    
    
    
    <category term="Java后端" scheme="http://xiaoliblog.cn/categories/Java%E5%90%8E%E7%AB%AF/"/>
    
    <category term="SpringBoot" scheme="http://xiaoliblog.cn/categories/Java%E5%90%8E%E7%AB%AF/SpringBoot/"/>
    
    
    <category term="SpringBoot" scheme="http://xiaoliblog.cn/tags/SpringBoot/"/>
    
  </entry>
  
  <entry>
    <title>Figma前端UI设计工具</title>
    <link href="http://xiaoliblog.cn/page/Figma.html"/>
    <id>http://xiaoliblog.cn/page/Figma.html</id>
    <published>2021-06-14T02:40:54.286Z</published>
    <updated>2021-06-14T05:55:15.678Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Figma"><a href="#Figma" class="headerlink" title="Figma"></a>Figma</h1><ul><li>Figma是一个直接在浏览器中运行的设计软件，具有多人协作的功能</li><li>Figma官方网站：<a href="https://www.figma.com/">https://www.figma.com/</a></li><li>Figma中文网站：<a href="https://figmachina.com/">https://figmachina.com/</a></li><li>Figma中文文档：<a href="https://figmachina.com/guide/">https://figmachina.com/guide/</a></li></ul><h2 id="登录及注册"><a href="#登录及注册" class="headerlink" title="登录及注册"></a>登录及注册</h2><ul><li>前往 <a href="https://www.figma.com/">Figma.com</a>，点击右上角的 Sign up，或者直接点击 <a href="https://www.figma.com/signup">注册链接</a></li></ul><h2 id="Figma使用"><a href="#Figma使用" class="headerlink" title="Figma使用"></a>Figma使用</h2><ul><li>首先创建一个工程项目project，然后了解其工作栏</li></ul><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@03c514228ed7289ceba653188aad7860c9fb6b9f/2021/06/14/426cfd5a16c27a6f5c8e96bfe34c7d9a.png"></p><ul><li>在右侧<code>Frame</code>中可以选择各种设备，比如移动端和PC端，我们设计网页一般都需要考虑不同的界面尺寸</li><li>首先就是创建一个画框<code>frame</code>，然后往里面添加元素，按空白键可以变成小手移动。按住<code>Ctrl</code>，可以通过鼠标滚轮进行缩放</li><li>按住<code>Alt</code>键，鼠标移到到组件边框外可以显示边距，在右边可以进行修改。按住<code>AIt</code>键也可以进行元素复制</li></ul><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@8beb631610f15ba2f3d6d4f5032f1ad70bfed54d/2021/06/14/357e807d38993d11e5da3249c02053e4.png"></p><ul><li>右边可以对选中的元素样式进行修改，比如背景颜色，文字大小等等</li></ul><h2 id="样式设置"><a href="#样式设置" class="headerlink" title="样式设置"></a>样式设置</h2><ul><li>鼠标移动到边角处，拖动可以改变为圆角。当然也可以在右边预设栏进行修改</li></ul><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@555cb30ea50dc228642c50291569f9d9e42065bf/2021/06/14/447e6adedabc9d7d289fa586bd1552e3.png"></p><ul><li>也可以对单个角进行修改</li></ul><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@f2eb0850b1592ba3139a56b0b2be927a16c5ca97/2021/06/14/3b3c2ebffe02c0c11880109f7450ea4a.png"></p><ul><li>在右边<code>Effects</code>中点击<code>+</code>号会出现盒子阴影<img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@3882ce3d29d7f90eecff09ece1c93517a209a37b/2021/06/14/0e2345e1e870a42fcf4da567c436f7fe.png"></li></ul><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@94d68a25a291821d56159a1ba093cf9058cf7f2a/2021/06/14/cb75f4d07d8888df08bb115dee904d7b.png"></p><ul><li>也可以对其进行一些微调</li></ul><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@832b37ae16b51adc0be3d3af11fa369a79b8f6d7/2021/06/14/392760949c423e7f62823e76e5353b2c.png"></p><ul><li>点击左上角的文字工具添加文字，然后可以在右边进行文字样式的设置</li><li>在右侧<code>Fill</code>点击<code>+</code>号可以添加渐变色</li></ul><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@80c952ba205dc201c311d2d920079095e1c2fc3d/2021/06/14/0fe466b49178dd3d9001c4fa4cc059b9.png"></p><h2 id="Code预览"><a href="#Code预览" class="headerlink" title="Code预览"></a>Code预览</h2><ul><li>选择选制作的元素，点击右侧选项卡上<code>Inspect</code>，在下面可以看到CSS代码<img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@77b151f24e7c1bae5e8b1a630b5b742001080973/2021/06/14/68e43259c6c654a4bfe27573989e09e8.png"></li></ul><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@8a625b41219b16a4aeb4296a0b35a5a0dce32009/2021/06/14/1e5812cf5226fec47d0bb2653bda09ee.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Figma&quot;&gt;&lt;a href=&quot;#Figma&quot; class=&quot;headerlink&quot; title=&quot;Figma&quot;&gt;&lt;/a&gt;Figma&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;Figma是一个直接在浏览器中运行的设计软件，具有多人协作的功能&lt;/li&gt;
&lt;li&gt;Figma官方网站：</summary>
      
    
    
    
    <category term="Web前端" scheme="http://xiaoliblog.cn/categories/Web%E5%89%8D%E7%AB%AF/"/>
    
    <category term="Figma" scheme="http://xiaoliblog.cn/categories/Web%E5%89%8D%E7%AB%AF/Figma/"/>
    
    
    <category term="Figma" scheme="http://xiaoliblog.cn/tags/Figma/"/>
    
  </entry>
  
  <entry>
    <title>前端面试题🎯图片懒加载及defer和async</title>
    <link href="http://xiaoliblog.cn/page/FrontInterview01.html"/>
    <id>http://xiaoliblog.cn/page/FrontInterview01.html</id>
    <published>2021-06-14T02:36:17.177Z</published>
    <updated>2021-06-14T05:07:31.083Z</updated>
    
    <content type="html"><![CDATA[<h1 id="图片懒加载"><a href="#图片懒加载" class="headerlink" title="图片懒加载"></a>图片懒加载</h1><ul><li>一个页面会有许多的图片，浏览器的可视区域是有限的，当我们点进页面但没有滑动全部展示时，其实下面的图片是没有作用的，这个时候如果说加载了也相当于白加载，而且还降低了网页的加载速度</li><li>而懒加载就是延迟加载，只有滚动到可视区域时才加载当前的图片，不是一次性加载所有的图片，从而在一程度减少服务端的请求及带宽;</li></ul><h2 id="监听scroll滚动事件"><a href="#监听scroll滚动事件" class="headerlink" title="监听scroll滚动事件"></a>监听scroll滚动事件</h2><ul><li>首先我们需要监听scroll滚动事件，来进行判断用户滚动，然后再对图片进行处理。这里就需要知道两个参数窗口显示区的高度<code>window.innerHeight</code>和图片距离视窗顶部的距离<code>getBoundingClientRect().top</code></li><li>如果图片距离视窗顶部的距离 <code>&gt;</code> 浏览器可视窗口的距离，说明图片在下面，可以延迟加载 </li></ul><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@6607a6a55fb27a33e3601ab3db9ca60b84b775b7/2021/06/14/278c4cfc0bac3c7d4f48abe0ab16f48c.png"></p><ul><li>图片的加载是由<code>src</code>的值引起的，当对<code>src</code>赋值时浏览器会请求因片资源， 基于这个，可以利用htmI5的自定义属性<code>data-xxx</code>来保存图片的路径，当我们需要加载图片的时候才将<code>data-xxx</code>的值赋予src，就能实现图片的按需加载，也就是懒加载了;</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--data-src可以用于保存属性值，其不会被浏览器执行--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">data-src</span>=<span class="string">&quot;真实路径&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>Londoners are under starter&#x27;s orders as the city gets ready for the Olympic Games<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>Londoners are under starter&#x27;s orders as the city gets ready for the Olympic Games<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>Londoners are under starter&#x27;s orders as the city gets ready for the Olympic Games<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>Londoners are under starter&#x27;s orders as the city gets ready for the Olympic Games<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>Londoners are under starter&#x27;s orders as the city gets ready for the Olympic Games<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>Londoners are under starter&#x27;s orders as the city gets ready for the Olympic Games<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">data-src</span>=<span class="string">&quot;img/pig.jpg&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">data-src</span>=<span class="string">&quot;img/pig.jpg&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">data-src</span>=<span class="string">&quot;img/pig.jpg&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>Londoners are under starter&#x27;s orders as the city gets ready for the Olympic Games<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>Londoners are under starter&#x27;s orders as the city gets ready for the Olympic Games<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取图片元素</span></span><br><span class="line"><span class="keyword">const</span> images = <span class="built_in">document</span>.querySelectorAll(<span class="string">&#x27;img&#x27;</span>)</span><br><span class="line"><span class="built_in">window</span>.addEventListener(<span class="string">&#x27;scroll&#x27;</span>,<span class="function">(<span class="params">e</span>)=&gt;</span>&#123;</span><br><span class="line">   images.forEach(<span class="function"><span class="params">image</span>=&gt;</span>&#123;</span><br><span class="line">      <span class="comment">//获取距离可视窗口的高度</span></span><br><span class="line">      <span class="keyword">const</span> imageTop = image.getBoundingClientRect().top;</span><br><span class="line">      <span class="comment">//图片距离视窗顶部的距离 &lt; 浏览器可视窗口的距离，说明出现在可视窗口，赋予真正的src</span></span><br><span class="line">      <span class="function"><span class="title">if</span>(<span class="params">imageTop &lt; <span class="built_in">window</span>.innerHeight</span>)</span>&#123;</span><br><span class="line">         <span class="comment">//图片处理</span></span><br><span class="line">         <span class="keyword">const</span> data_src = image.getAttribute(<span class="string">&#x27;data-src&#x27;</span>);</span><br><span class="line">         image.setAttribute(<span class="string">&#x27;src&#x27;</span>, data_src);</span><br><span class="line">      &#125;</span><br><span class="line">   <span class="built_in">console</span>.log(<span class="string">&#x27;scroll触发&#x27;</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ul><li>打开F12设置禁止缓存和Fast 3G进行测试</li></ul><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@0dae2cb7f990bfaa4a7c444f03685a4138fd5558/2021/06/14/e0476cdf8ad1d2aaae3c4dd0e0f10ba9.png"></p><ul><li>但是会发现其触发了多次<code>scroll</code>滚动事件，到需要加载很多内容时就会导致任务的堆积。而且即使图片已经加载了还是会不断触发事件，非常消耗资源</li></ul><h2 id="IntersectionObserver接口"><a href="#IntersectionObserver接口" class="headerlink" title="IntersectionObserver接口"></a>IntersectionObserver接口</h2><ul><li>项目地址：<a href="https://github.com/tuupola/lazyload">https://github.com/tuupola/lazyload</a></li><li><code>IntersectionObserver</code>（交叉观察）是<strong>监听目标元素与其祖先或视窗交叉状态</strong>的手段，如果目标元素未定义(为null)的话默认是根据浏览器视图框可见范围，其效率要比监听scroll滚动事件快</li></ul><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@6ef0a25fe4ba04c6232b28b7b8b6c0986db8e16f/2021/06/14/0c56c5c5f92b89c16cdd82ba03d3d7b0.png"></p><ul><li>可以看到，交叉了就是说明当前元素在视窗里，当前就是可见的了</li><li>其就是一个简单的构造函数，需要<code>new</code>一个实例</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> observer = <span class="keyword">new</span> IntersectionObserver(callback, options)</span><br></pre></td></tr></table></figure><ul><li>以上代码会返回一个<code>IntersectionObserver</code>实例，<code>callback</code>是当元素的可见性变化时候的回调函数，<code>options</code>是一些配置项（可选），相关配置参考：<a href="https://www.jianshu.com/p/84a86e41eb2b">https://www.jianshu.com/p/84a86e41eb2b</a></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取图片元素</span></span><br><span class="line"><span class="keyword">const</span> images = <span class="built_in">document</span>.querySelectorAll(<span class="string">&#x27;img&#x27;</span>)</span><br><span class="line">   <span class="comment">//entries为数组</span></span><br><span class="line">   <span class="keyword">const</span> callback = <span class="function"><span class="params">entries</span> =&gt;</span>&#123;</span><br><span class="line">      <span class="built_in">console</span>.log(entries)</span><br><span class="line">      entries.forEach(<span class="function"><span class="params">entry</span> =&gt;</span>&#123;</span><br><span class="line">         <span class="function"><span class="title">if</span>(<span class="params">entry.isIntersecting</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">const</span> image = entry.target;</span><br><span class="line">            <span class="keyword">const</span> data_src = image.getAttribute(<span class="string">&#x27;data-src&#x27;</span>);</span><br><span class="line">            image.setAttribute(<span class="string">&#x27;src&#x27;</span>, data_src);</span><br><span class="line">            <span class="comment">//observer.unobserve(DOM节点); 表示取消观察</span></span><br><span class="line">            observer.unobserve(image); <span class="comment">//取消观察,不再调用回调函数</span></span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">&#x27;触发&#x27;</span>)  <span class="comment">//只触发三次，不再触发</span></span><br><span class="line">         &#125;</span><br><span class="line">      &#125;)</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">const</span> observer = <span class="keyword">new</span> IntersectionObserver(callback);</span><br><span class="line">      images.forEach(<span class="function"><span class="params">image</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="comment">//observer.observe(DOM节点) 方法表示观察</span></span><br><span class="line">      observer.observe(image);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ul><li>封装成一个函数</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">data-src</span>=<span class="string">&quot;真实路径&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 图片懒加载</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;*&#125;</span> </span>img 需要懒加载的img元素(标签)</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;*&#125;</span> </span>attr 图片的真实url地址</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ImgLazyLoad</span>(<span class="params">img,attr</span>)</span>&#123;</span><br><span class="line">   <span class="keyword">var</span> imgLazyLoad = <span class="built_in">document</span>.querySelectorAll(img) <span class="comment">// 获取全部需要加载的图片</span></span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">LazyLoad</span>(<span class="params">target</span>)</span>&#123;</span><br><span class="line">      <span class="keyword">const</span> io = <span class="keyword">new</span> IntersectionObserver(<span class="function">(<span class="params">entries,Observer</span>)=&gt;</span>&#123;</span><br><span class="line">         entries.forEach(<span class="function"><span class="params">entry</span>=&gt;</span>&#123;</span><br><span class="line">            <span class="function"><span class="title">if</span>(<span class="params">entry.isIntersecting</span>)</span>&#123;</span><br><span class="line">               <span class="keyword">const</span> img = entry.target</span><br><span class="line">               <span class="keyword">const</span> src = img.getAttribute(attr)</span><br><span class="line">               img.setAttribute(<span class="string">&quot;src&quot;</span>,src)</span><br><span class="line">               Observer.disconnect()</span><br><span class="line">            &#125;   </span><br><span class="line">         &#125;)</span><br><span class="line">      &#125;)</span><br><span class="line">   io.observe(target)</span><br><span class="line">   &#125;</span><br><span class="line">   imgLazyLoad.forEach(LazyLoad)</span><br><span class="line">&#125;</span><br><span class="line">ImgLazyLoad(<span class="string">&quot;body img[data-src]&quot;</span>,<span class="string">&quot;data-src&quot;</span>)</span><br></pre></td></tr></table></figure><h1 id="defer和async"><a href="#defer和async" class="headerlink" title="defer和async"></a>defer和async</h1><h2 id="相关概念"><a href="#相关概念" class="headerlink" title="相关概念"></a>相关概念</h2><ul><li>同步：同步就比如两个人过独木桥，后面的人速度受前面人速度影响</li><li>异步<code>async</code>：异步就比如两条道路一个出口，速度快的可以优先出去</li><li>推迟<code>defer</code>：推迟也是两条道路一个出口，但速度快的要等速度慢的</li></ul><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@62f50d11282ff7097b7f444cc35cf26e65a28705/2021/06/14/4bed8ee9f0f6fb535ddcd22ace3827d4.png"></p><ul><li>同步在<code>Javascript</code>中是一个很重要的概念，因为当浏览器加载HTML的时候一旦遇到了<code>script</code>标签，就会停下来先把<code>script</code>标签里面的内容给执行掉。</li><li>如果<code>script</code>标签里面有外部文件，那就必须等待下载和执行的步骤，这样浏览器才会继续往下加载。如果外部文件刚好在一个网络情况比较差的服务器上，这样整个网页的加载都会受到很大的影响，这就是同步带来的阻塞弊端。异步和推迟是解决同步的两个方法</li></ul><h2 id="异步async"><a href="#异步async" class="headerlink" title="异步async"></a>异步async</h2><ul><li><code>async</code>即异步执行，浏览器在加载页面的时候，如果遇到了<code>async</code>属性，浏览器就会立即进行下载，与此同时继续加载页面</li></ul><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@d20c4d10eb983f67b2fd5868122b556b240bed13/2021/06/14/05c35b86156baec6e7e73e75ef42a8b7.png"></p><ul><li>虽然没有阻塞的情况，但是<code>async</code>下的脚本具体什么时候执行就说不定了，有时页面还没加载完就执行了，也有可能页面加载后才会执行</li><li>因为这种不确定性，如果脚本是需要修改DOM的，那么就又可能出错。因此<code>async</code>比较适合第三方脚本</li></ul><h2 id="推迟defer"><a href="#推迟defer" class="headerlink" title="推迟defer"></a>推迟defer</h2><ul><li><code>defer</code>即推迟执行，浏览器在加载页面的时候，如果遇到了<code>defer</code>属性，浏览器就会立即进行下载，与此同时继续加载页面</li></ul><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@fabb3ada2e9b670c26c23077c05d24dbdc818ad5/2021/06/14/2770865cb6b9b3008e6f68fc6e36366f.png"></p><ul><li>但是不管脚本是否下载完了，都会等到浏览器解析完HTML以后再执行脚本。因此<code>defer</code>比较适合与DOM有关联的脚本</li><li>但是有一点要注意，不管是<code>async</code>还是<code>defer</code>，两者都只适用于外部脚本，而且还要注意兼容性问题。如果浏览器不能识别这两个属性，那还是把<code>script</code>内容放在页面底部比较好</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;图片懒加载&quot;&gt;&lt;a href=&quot;#图片懒加载&quot; class=&quot;headerlink&quot; title=&quot;图片懒加载&quot;&gt;&lt;/a&gt;图片懒加载&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;一个页面会有许多的图片，浏览器的可视区域是有限的，当我们点进页面但没有滑动全部展示时，其实下面的图片是没</summary>
      
    
    
    
    <category term="Web前端" scheme="http://xiaoliblog.cn/categories/Web%E5%89%8D%E7%AB%AF/"/>
    
    <category term="前端面试题" scheme="http://xiaoliblog.cn/categories/Web%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E9%A2%98/"/>
    
    
    <category term="前端面试题" scheme="http://xiaoliblog.cn/tags/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E9%A2%98/"/>
    
  </entry>
  
</feed>
