<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>小李博客</title>
  
  
  <link href="http://xiaoliblog.cn/atom.xml" rel="self"/>
  
  <link href="http://xiaoliblog.cn/"/>
  <updated>2021-04-30T12:24:49.114Z</updated>
  <id>http://xiaoliblog.cn/</id>
  
  <author>
    <name>小李博客</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>前端实例🥳响应式网站首页</title>
    <link href="http://xiaoliblog.cn/page/project01.html"/>
    <id>http://xiaoliblog.cn/page/project01.html</id>
    <published>2021-04-30T11:50:53.094Z</published>
    <updated>2021-04-30T12:24:49.114Z</updated>
    
    
    
    
    <category term="项目案例" scheme="http://xiaoliblog.cn/categories/%E9%A1%B9%E7%9B%AE%E6%A1%88%E4%BE%8B/"/>
    
    <category term="前端实例" scheme="http://xiaoliblog.cn/categories/%E9%A1%B9%E7%9B%AE%E6%A1%88%E4%BE%8B/%E5%89%8D%E7%AB%AF%E5%AE%9E%E4%BE%8B/"/>
    
    
    <category term="HTML+CSS" scheme="http://xiaoliblog.cn/tags/HTML-CSS/"/>
    
  </entry>
  
  <entry>
    <title>微信支付对接</title>
    <link href="http://xiaoliblog.cn/page/WeChatpay.html"/>
    <id>http://xiaoliblog.cn/page/WeChatpay.html</id>
    <published>2021-04-29T12:20:48.070Z</published>
    <updated>2021-04-30T11:47:10.849Z</updated>
    
    <content type="html"><![CDATA[<h1 id="微信支付"><a href="#微信支付" class="headerlink" title="微信支付"></a>微信支付</h1><h2 id="申请流程"><a href="#申请流程" class="headerlink" title="申请流程"></a>申请流程</h2><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@30508a99571bc6e311abc31814916b1e0987b074/2021/04/29/bed2ff9950d6016fa6cc836b9c99fd3c.png"></p><ul><li>官方网址：<a href="https://pay.weixin.qq.com/index.php/">https://pay.weixin.qq.com/index.php/</a></li><li>官方文档：<a href="https://pay.weixin.qq.com/wiki/doc/apiv3/wxpay/pages/index.shtml">https://pay.weixin.qq.com/wiki/doc/apiv3/wxpay/pages/index.shtml</a></li><li>PC端微信小程序Navtive文档：<a href="https://pay.weixin.qq.com/wiki/doc/apiv3/open/pay/chapter2_7_0.shtml">https://pay.weixin.qq.com/wiki/doc/apiv3/open/pay/chapter2_7_0.shtml</a></li><li>微信小程序支付对接文档：<a href="https://pay.weixin.qq.com/wiki/doc/apiv3/open/pay/chapter2_8_0.shtml">https://pay.weixin.qq.com/wiki/doc/apiv3/open/pay/chapter2_8_0.shtml</a></li></ul><h2 id="业务流程"><a href="#业务流程" class="headerlink" title="业务流程"></a>业务流程</h2><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@141e2dbcc5bbb666f1fc1ae09115ebf2061734b5/2021/04/29/8f48a0f545f77d54f371c67a39e36773.png"></p><h2 id="微信支付SDK"><a href="#微信支付SDK" class="headerlink" title="微信支付SDK"></a>微信支付SDK</h2><ul><li>注册成为微信支付的商户，然后下载微信支付的SDK</li></ul><div class="btns rounded center grid5">            <a href="https://wws.lanzous.com/iStZhon2x8f" title="密码:3ary"><i class="fas fa-download"></i>密码:3ary</a>          </div><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@5ab3d9fec9b0d64197d586ef76e4849500954d52/2021/04/29/ba57e4ed0d5719007156bd52cd55eaab.png"></p><ul><li>查阅<code>README.md</code>文件</li><li><code>com.github.wxpay.sdk.WXPay</code>类下提供了对应的方法：</li></ul><table><thead><tr><th align="center">方法名</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center"><code>microPay</code></td><td align="center">刷卡支付</td></tr><tr><td align="center"><code>unifiedOrder</code></td><td align="center">统一下单</td></tr><tr><td align="center"><code>orderQuery</code></td><td align="center">查询订单</td></tr><tr><td align="center"><code>reverse</code></td><td align="center">撤销订单</td></tr><tr><td align="center"><code>closeOrder</code></td><td align="center">关闭订单</td></tr><tr><td align="center"><code>refund</code></td><td align="center">申请退款</td></tr><tr><td align="center"><code>refundQuery</code></td><td align="center">查询退款</td></tr><tr><td align="center"><code>downloadBill</code></td><td align="center">下载对账单</td></tr><tr><td align="center"><code>report</code></td><td align="center">交易保障</td></tr><tr><td align="center"><code>shortUrl</code></td><td align="center">转换短链接</td></tr><tr><td align="center"><code>authCodeToOpenid</code></td><td align="center">授权码查询openid</td></tr></tbody></table><ul><li>证书文件不能放在web服务器虚拟目录，应放在有访问权限控制的目录中，防止被他人下载</li><li>建议将证书文件名改为复杂且不容易猜测的文件名</li><li>商户服务器要做好病毒和木马防护工作，不被非法侵入者窃取证书文件</li><li>请妥善保管商户支付密钥、公众帐号SECRET，避免密钥泄露</li><li>参数为<code>Map&lt;String, String&gt;</code>对象，返回类型也是<code>Map&lt;String, String&gt;</code></li><li>方法内部会将参数会转换成含有<code>appid</code>、<code>mch_id</code>、<code>nonce_str</code>、<code>sign\_type</code>和<code>sign</code>的XML</li><li>可选HMAC-SHA256算法和MD5算法签名</li><li>通过HTTPS请求得到返回数据后会对其做必要的处理（例如验证签名，签名错误则抛出异常）</li><li>对于downloadBill，无论是否成功都返回Map，且都含有<code>return_code</code>和<code>return_msg</code>，若成功，其中<code>return_code</code>为<code>SUCCESS</code>，另外<code>data</code>对应对账单数据</li></ul><h1 id="支付开发"><a href="#支付开发" class="headerlink" title="支付开发"></a>支付开发</h1><ul><li>使用idea打开拥有微信支付sdk的项目，推荐把微信支付的sdk复制到自己的项目里面</li><li>创建一个类实现  <code>IWXPayDomain</code> ，指明一个域名</li><li>创建一个配置类  <code>MyWXPayConfig  extends WXPayConfig</code></li><li>编写场景类，实现下单</li></ul><h2 id="实现接口"><a href="#实现接口" class="headerlink" title="实现接口"></a>实现接口</h2><ul><li>在项目中创建一个类实现<code>IWXPayDomain</code>接口</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.github.wxpay.sdk;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyWXPayDomain</span> <span class="keyword">implements</span> <span class="title">IWXPayDomain</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">report</span><span class="params">(String domain, <span class="keyword">long</span> elapsedTimeMillis, Exception ex)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 返回微信的域名</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> config 配置</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> DomainInfo <span class="title">getDomain</span><span class="params">(WXPayConfig config)</span> </span>&#123;</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 参数1：微信支付域名</span></span><br><span class="line"><span class="comment">         * 参数2：是否主域名</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        DomainInfo domainInfo = <span class="keyword">new</span> DomainInfo(<span class="string">&quot;api.mch.weixin.qq.com&quot;</span>,<span class="keyword">true</span>);</span><br><span class="line">        <span class="keyword">return</span> domainInfo;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="创建配置类"><a href="#创建配置类" class="headerlink" title="创建配置类"></a>创建配置类</h2><div class="tip">    <p>本示例采用千锋教育的商户信息！在此感谢千峰教育</p></div><ul><li>在项目里面创建一个配置类，继承<code>WXpayConfig</code>类，在该类中填写商家信息</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.github.wxpay.sdk;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 微信支付的配置类，包含收款商家的账号ID等信息</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 注意：</span></span><br><span class="line"><span class="comment"> * 下面的这些账号和ID是需要公司注册的</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyWXPayConfig</span> <span class="keyword">extends</span> <span class="title">WXPayConfig</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 商家注册微信支付之后会生成一个应用ID</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function">String <span class="title">getAppID</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;wx632c8f211f8122c6&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 商户ID</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function">String <span class="title">getMchID</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;1497984412&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function">String <span class="title">getKey</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;sbNCm1JnevqI36LrEaxFwcaT0hkGxFnC&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function">InputStream <span class="title">getCertStream</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function">IWXPayDomain <span class="title">getWXPayDomain</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//上面创建的MyWXPayDomain类</span></span><br><span class="line">        MyWXPayDomain myWXPayDomain = <span class="keyword">new</span> MyWXPayDomain();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> myWXPayDomain;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="下单测试"><a href="#下单测试" class="headerlink" title="下单测试"></a>下单测试</h2><ul><li>另外创建一个测试包<code>com.lzy.wxpay</code>，创建一个测试类</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.qf.wxpay;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.github.wxpay.sdk.MyWXPayConfig;</span><br><span class="line"><span class="keyword">import</span> com.github.wxpay.sdk.WXPay;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestWXPay</span> </span>&#123;</span><br><span class="line">    <span class="comment">//下单</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//1.创建配置类对象</span></span><br><span class="line">        MyWXPayConfig config = <span class="keyword">new</span> MyWXPayConfig();</span><br><span class="line">        <span class="comment">//2.创建支付对象</span></span><br><span class="line">        WXPay wxpay = <span class="keyword">new</span> WXPay(config);</span><br><span class="line">        <span class="comment">//3.将一些元数据存入到map集合中</span></span><br><span class="line">        Map&lt;String, String&gt; data = <span class="keyword">new</span> HashMap&lt;String, String&gt;();</span><br><span class="line">        data.put(<span class="string">&quot;body&quot;</span>, <span class="string">&quot;今晚的小费&quot;</span>); <span class="comment">//商品标题</span></span><br><span class="line">        data.put(<span class="string">&quot;out_trade_no&quot;</span>, <span class="string">&quot;2019070226045900020012&quot;</span>);<span class="comment">//订单编号</span></span><br><span class="line">        data.put(<span class="string">&quot;device_info&quot;</span>, <span class="string">&quot;&quot;</span>);<span class="comment">//设备信息</span></span><br><span class="line">        data.put(<span class="string">&quot;fee_type&quot;</span>, <span class="string">&quot;CNY&quot;</span>);<span class="comment">//货币单位： 分</span></span><br><span class="line">        data.put(<span class="string">&quot;total_fee&quot;</span>, <span class="string">&quot;1&quot;</span>);<span class="comment">// 1分</span></span><br><span class="line">        data.put(<span class="string">&quot;spbill_create_ip&quot;</span>, <span class="string">&quot;123.12.12.123&quot;</span>);<span class="comment">//对于这样123.12.12.123IP地址将会被记录并过滤掉，防止其攻击</span></span><br><span class="line">        <span class="comment">//******需要有一个回调的接口，获取此次微信支付的信息。</span></span><br><span class="line">        <span class="comment">//重点：回调地址，用来通知支付结果的地址</span></span><br><span class="line">        data.put(<span class="string">&quot;notify_url&quot;</span>, <span class="string">&quot;http://www.example.com/wxpay/notify&quot;</span>);</span><br><span class="line">        data.put(<span class="string">&quot;trade_type&quot;</span>, <span class="string">&quot;NATIVE&quot;</span>);  <span class="comment">// 此处指定为扫码支付</span></span><br><span class="line">        data.put(<span class="string">&quot;product_id&quot;</span>, <span class="string">&quot;12&quot;</span>);<span class="comment">//商品ID</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//向微信后台发起支付请求</span></span><br><span class="line">            <span class="comment">//返回值：下单成功之后的支付地址</span></span><br><span class="line">            Map&lt;String, String&gt; resp = wxpay.unifiedOrder(data);</span><br><span class="line">            <span class="comment">//二维码的链接   code_url</span></span><br><span class="line">            System.out.println(resp);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>运行<code>TestWXPay</code>测试类，得到如下结果</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;nonce_str&#x3D;DiFzPBLTcPmfr2WZ, code_url&#x3D;weixin:&#x2F;&#x2F;wxpay&#x2F;bizpayurl?pr&#x3D;ud7oouF,appid&#x3D;wx632c8f211f8122c6, sign&#x3D;71EA44DAC29A86D461DABF918E644594212D417EB1D099D5F69FEDB360206FC2, err_code&#x3D;ORDERPAID, return_msg&#x3D;OK, result_code&#x3D;FAIL, err_code_des&#x3D;该订单已支付, mch_id&#x3D;1497984412, return_code&#x3D;SUCCESS&#125;</span><br></pre></td></tr></table></figure><ul><li>复制<code>code_url</code>二维码链接到<a href="https://cli.im/text">草料二维码</a>中粘贴并生成二维码</li></ul><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@203e5e943fe83d6c36fe2dcd6cb021d0a3e1eb83/2021/04/29/0029c8511bbe910ca1b56077bffd4563.png"></p><ul><li>以上示例只是一个小的Demo，可以知道二维码中<code>url_code</code>二维码链接是需要自动生成的，以下是微信支付流程图</li></ul><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@0311c02293fe78fe9bf51aa6bb6965d0f71e1de2/2021/04/29/4743cabb93bb398c97ee1fafd8211dce.png"></p><h2 id="编写回调接口"><a href="#编写回调接口" class="headerlink" title="编写回调接口"></a>编写回调接口</h2><ul><li>搭建一个SSM后台项目，提供一个回调的接口</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;localhost:8080&#x2F;wxpay&#x2F;notify_url</span><br></pre></td></tr></table></figure><ul><li>创建一个<code>WXPaycontroller</code>做为回调接口</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;wxpay&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WXPaycontroller</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;notify_url&quot;)</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getNotifyURL</span><span class="params">(HttpServletResponse response)</span></span>&#123;</span><br><span class="line">     </span><br><span class="line">        System.out.println(response);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;success&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>微信下单demo中</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//1.创建配置类对象</span></span><br><span class="line">    MyWXPayConfig config = <span class="keyword">new</span> MyWXPayConfig();</span><br><span class="line">    <span class="comment">//2.创建支付对象</span></span><br><span class="line">    WXPay wxpay = <span class="keyword">new</span> WXPay(config);</span><br><span class="line">    <span class="comment">//3.将一些元数据存入到map集合中</span></span><br><span class="line">    Map&lt;String, String&gt; data = <span class="keyword">new</span> HashMap&lt;String, String&gt;();</span><br><span class="line">    data.put(<span class="string">&quot;body&quot;</span>, <span class="string">&quot;今晚的小费&quot;</span>);</span><br><span class="line">    data.put(<span class="string">&quot;out_trade_no&quot;</span>, <span class="string">&quot;2019070226045900020012&quot;</span>);<span class="comment">//订单编号</span></span><br><span class="line">    data.put(<span class="string">&quot;device_info&quot;</span>, <span class="string">&quot;&quot;</span>);<span class="comment">//设备信息</span></span><br><span class="line">    data.put(<span class="string">&quot;fee_type&quot;</span>, <span class="string">&quot;CNY&quot;</span>);<span class="comment">//货币单位： 分</span></span><br><span class="line">    data.put(<span class="string">&quot;total_fee&quot;</span>, <span class="string">&quot;1&quot;</span>);<span class="comment">// 1分</span></span><br><span class="line">    data.put(<span class="string">&quot;spbill_create_ip&quot;</span>, <span class="string">&quot;123.12.12.123&quot;</span>);<span class="comment">//对于这样123.12.12.123IP地址将会被记录</span></span><br><span class="line">    <span class="comment">//******需要有一个回调的接口，获取此次微信支付的信息。</span></span><br><span class="line">    <span class="comment">//http://86xe6q.natappfree.cc/ 此域名通过内网穿透获得</span></span><br><span class="line">    data.put(<span class="string">&quot;notify_url&quot;</span>, <span class="string">&quot;http://86xe6q.natappfree.cc/wxpay/notify_url&quot;</span>);</span><br><span class="line">    data.put(<span class="string">&quot;trade_type&quot;</span>, <span class="string">&quot;NATIVE&quot;</span>);  <span class="comment">// 此处指定为扫码支付</span></span><br><span class="line">    data.put(<span class="string">&quot;product_id&quot;</span>, <span class="string">&quot;12&quot;</span>);<span class="comment">//商品ID</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">//向微信后台发起支付请求</span></span><br><span class="line">        Map&lt;String, String&gt; resp = wxpay.unifiedOrder(data);</span><br><span class="line">        <span class="comment">//二维码的链接   code_url</span></span><br><span class="line">        System.out.println(resp);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>回应消息给微信后台</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;notify_url&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getNotifyURL</span><span class="params">(HttpServletResponse response, HttpServletRequest request)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">    <span class="comment">//获得微信发送来的请求，从请求消息中获得数据。</span></span><br><span class="line">    ServletInputStream is = request.getInputStream();</span><br><span class="line">    <span class="keyword">byte</span>[] b = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">    <span class="keyword">int</span> len=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>((len = is.read(b))!=-<span class="number">1</span>)&#123;</span><br><span class="line">        String str = <span class="keyword">new</span> String(b,<span class="number">0</span>,len);</span><br><span class="line">        System.out.print(str);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//返回一个标准格式的回信</span></span><br><span class="line">    response.getWriter().write(<span class="string">&quot;&lt;xml&gt;&lt;return_code&gt;&lt;![CDATA[SUCCESS]]&gt;&lt;/return_code&gt;&lt;return_msg&gt;&lt;![CDATA[OK]]&gt;&lt;/return_msg&gt;&lt;/xml&gt;&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="完整流程"><a href="#完整流程" class="headerlink" title="完整流程"></a>完整流程</h1><h2 id="整合WXPay依赖"><a href="#整合WXPay依赖" class="headerlink" title="整合WXPay依赖"></a>整合WXPay依赖</h2><ul><li>整合WXPay的pom中的相关依赖到项目中</li><li>把sdk中的类和接口引进来</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.qf<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>my-wxpay-demo2<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>war<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>my-wxpay-demo2 Maven Webapp<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- FIXME change it to the project&#x27;s website --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://www.example.com<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- https://mvnrepository.com/artifact/javax.servlet/javax.servlet-api --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javax.servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-webmvc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.3.8.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.3.8.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- https://mvnrepository.com/artifact/com.google.code.gson/gson --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.google.code.gson<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>gson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.8.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.apache.httpcomponents/httpclient --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.httpcomponents<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>httpclient<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.5.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>slf4j-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.7.21<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>slf4j-simple<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.7.21<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.goeasy<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>goeasy-sdk<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.3.8<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.46<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.10<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.2.8<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">repositories</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">repository</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">id</span>&gt;</span>goeasy<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">name</span>&gt;</span>goeasy<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://maven.goeasy.io/content/repositories/releases/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">repository</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">repositories</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>调整sdk中相关包的路径</li></ul><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@9ab1f40faaf0ca4a379607f3b704e07915f710b1/2021/04/30/2d60e03a1c2699417ddc4abbfd2ad673.png"></p><h2 id="编写微信支付接口"><a href="#编写微信支付接口" class="headerlink" title="编写微信支付接口"></a>编写微信支付接口</h2><ul><li>编写微信支付接口，整合<code>Zxing</code> 二维码生成工具</li><li>导入相关依赖</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/com.google.zxing/core --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.google.zxing<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.3.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- https://mvnrepository.com/artifact/com.google.zxing/javase --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.google.zxing<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javase<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.3.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>在代码中使用Zxing实现二维码的生成</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//编写下单接口</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;doPay&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doPay</span><span class="params">(HttpServletResponse response)</span></span>&#123;</span><br><span class="line">        <span class="comment">//用于生成订单编号的随机数</span></span><br><span class="line">        Date date = <span class="keyword">new</span> Date();</span><br><span class="line">        SimpleDateFormat sdf = <span class="keyword">new</span> SimpleDateFormat(<span class="string">&quot;yyyyMMddHHssmm&quot;</span>);</span><br><span class="line">        String orderIdPrefix = sdf.format(date);<span class="comment">//创建订单编号的前缀</span></span><br><span class="line">        String pid = <span class="string">&quot;2011&quot;</span>;<span class="comment">//商品id</span></span><br><span class="line">        String orderId = orderIdPrefix+pid;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//1.创建配置类对象</span></span><br><span class="line">        MyWXPayConfig config = <span class="keyword">new</span> MyWXPayConfig();</span><br><span class="line">        <span class="comment">//2.创建支付对象</span></span><br><span class="line">        WXPay wxpay = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            wxpay = <span class="keyword">new</span> WXPay(config);</span><br><span class="line">            <span class="comment">//3.将一些元数据存入到map集合中</span></span><br><span class="line">            Map&lt;String, String&gt; data = <span class="keyword">new</span> HashMap&lt;String, String&gt;();</span><br><span class="line">            data.put(<span class="string">&quot;body&quot;</span>, <span class="string">&quot;今晚的小费&quot;</span>);</span><br><span class="line">            data.put(<span class="string">&quot;out_trade_no&quot;</span>, orderId);<span class="comment">//订单编号</span></span><br><span class="line">            data.put(<span class="string">&quot;device_info&quot;</span>, <span class="string">&quot;&quot;</span>);<span class="comment">//设备信息</span></span><br><span class="line">            data.put(<span class="string">&quot;fee_type&quot;</span>, <span class="string">&quot;CNY&quot;</span>);<span class="comment">//货币单位： 分</span></span><br><span class="line">            data.put(<span class="string">&quot;total_fee&quot;</span>, <span class="string">&quot;1&quot;</span>);<span class="comment">// 1分</span></span><br><span class="line">            data.put(<span class="string">&quot;spbill_create_ip&quot;</span>, <span class="string">&quot;123.12.12.123&quot;</span>);<span class="comment">//对于这样123.12.12.123IP地址将会被记录</span></span><br><span class="line">            <span class="comment">//******需要有一个回调的接口，获取此次微信支付的信息。</span></span><br><span class="line">            data.put(<span class="string">&quot;notify_url&quot;</span>, <span class="string">&quot;http://4tzgju.natappfree.cc/wxpay/notify_url&quot;</span>);</span><br><span class="line">            data.put(<span class="string">&quot;trade_type&quot;</span>, <span class="string">&quot;NATIVE&quot;</span>);  <span class="comment">// 此处指定为扫码支付</span></span><br><span class="line">            data.put(<span class="string">&quot;product_id&quot;</span>, pid);<span class="comment">//商品ID</span></span><br><span class="line"></span><br><span class="line">            Map&lt;String, String&gt; resp = wxpay.unifiedOrder(data);</span><br><span class="line">            <span class="comment">//二维码的链接   code_url</span></span><br><span class="line"><span class="comment">//            System.out.println(resp);</span></span><br><span class="line"></span><br><span class="line">            String code_url = resp.get(<span class="string">&quot;code_url&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//生成二维码</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//二维码需要包含的文本内容</span></span><br><span class="line">            HashMap&lt;EncodeHintType, Object&gt; hints = <span class="keyword">new</span> HashMap&lt;EncodeHintType, Object&gt;();</span><br><span class="line">            hints.put(EncodeHintType.CHARACTER_SET, <span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">            hints.put(EncodeHintType.ERROR_CORRECTION, ErrorCorrectionLevel.M);</span><br><span class="line">            hints.put(EncodeHintType.MARGIN, <span class="number">2</span>);</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                BitMatrix bitMatrix = <span class="keyword">new</span> MultiFormatWriter().encode(code_url, BarcodeFormat.QR_CODE, <span class="number">200</span>, <span class="number">200</span>, hints);</span><br><span class="line">                MatrixToImageWriter.writeToStream(bitMatrix, <span class="string">&quot;PNG&quot;</span>, response.getOutputStream());</span><br><span class="line">                System.out.println(<span class="string">&quot;创建二维码完成&quot;</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="使用goeasy实现异步调用"><a href="#使用goeasy实现异步调用" class="headerlink" title="使用goeasy实现异步调用"></a>使用goeasy实现异步调用</h2><ul><li>让服务端异步地让客户端去实现js的函数（跳转）</li><li>goeasy官网：<a href="http://www.goeasy.io/">http://www.goeasy.io</a></li><li>注册，并购买应用，进入到应用管理平台</li></ul><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@0c66de3f5f280f37ac2417afa84127d9eb4e9417/2021/04/30/aae6598dfc263e19e7defbfb6b914018.png"></p><ul><li>导包</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.goeasy<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>goeasy-sdk<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.3.8<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">repositories</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">repository</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span>&gt;</span>goeasy<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>goeasy<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://maven.goeasy.io/content/repositories/releases/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">repository</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">repositories</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>在微信的回调函数中，创建对象，发布某个隧道的指定信息。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">GoEasy goEasy = <span class="keyword">new</span> GoEasy(<span class="string">&quot;http://rest-hangzhou.goeasy.io&quot;</span>, <span class="string">&quot;BC-13372467cbde47cb8fa70538dbab4755&quot;</span>);</span><br><span class="line"><span class="comment">//推送</span></span><br><span class="line">goEasy.publish(<span class="string">&quot;Java1902&quot;</span>, <span class="string">&quot;success&quot;</span>);<span class="comment">//隧道名可以使用订单编号，解决一次推送所有客户端都会被推送的问题。</span></span><br></pre></td></tr></table></figure><ul><li>在前端页面中加入以下js</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">&quot;text/javascript&quot;</span> src=<span class="string">&quot;http://cdn-hangzhou.goeasy.io/goeasy.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;script type=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="line">    <span class="keyword">var</span> goEasy = <span class="keyword">new</span> GoEasy(&#123;</span><br><span class="line">        appkey: <span class="string">&#x27;BC-13372467cbde47cb8fa70538dbab4755&#x27;</span></span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="comment">//GoEasy-OTP可以对appkey进行有效保护，详情请参考：GoEasy-Reference</span></span><br><span class="line"></span><br><span class="line">    goEasy.subscribe(&#123;</span><br><span class="line">        channel:<span class="string">&#x27;Java1902&#x27;</span>,</span><br><span class="line">        onMessage: <span class="function"><span class="keyword">function</span>(<span class="params">message</span>)</span>&#123;</span><br><span class="line">            alert(<span class="string">&#x27;收到：&#x27;</span>+message.content);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.qf.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.google.zxing.BarcodeFormat;</span><br><span class="line"><span class="keyword">import</span> com.google.zxing.EncodeHintType;</span><br><span class="line"><span class="keyword">import</span> com.google.zxing.MultiFormatWriter;</span><br><span class="line"><span class="keyword">import</span> com.google.zxing.client.j2se.MatrixToImageWriter;</span><br><span class="line"><span class="keyword">import</span> com.google.zxing.common.BitMatrix;</span><br><span class="line"><span class="keyword">import</span> com.google.zxing.qrcode.decoder.ErrorCorrectionLevel;</span><br><span class="line"><span class="keyword">import</span> com.qf.sdk.MyWXPayConfig;</span><br><span class="line"><span class="keyword">import</span> com.qf.sdk.WXPay;</span><br><span class="line"><span class="keyword">import</span> io.goeasy.GoEasy;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletInputStream;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;wxpay&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WXPaycontroller</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;showpay&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">showPay</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;MyPay&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//编写下单接口</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;doPay&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doPay</span><span class="params">(HttpServletResponse response)</span></span>&#123;</span><br><span class="line">        <span class="comment">//用于生成订单编号的随机数</span></span><br><span class="line">        Date date = <span class="keyword">new</span> Date();</span><br><span class="line">        SimpleDateFormat sdf = <span class="keyword">new</span> SimpleDateFormat(<span class="string">&quot;yyyyMMddHHssmm&quot;</span>);</span><br><span class="line">        String orderIdPrefix = sdf.format(date);<span class="comment">//创建订单编号的前缀</span></span><br><span class="line">        String pid = <span class="string">&quot;2011&quot;</span>;<span class="comment">//商品id</span></span><br><span class="line">        String orderId = orderIdPrefix+pid;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//1.创建配置类对象</span></span><br><span class="line">        MyWXPayConfig config = <span class="keyword">new</span> MyWXPayConfig();</span><br><span class="line">        <span class="comment">//2.创建支付对象</span></span><br><span class="line">        WXPay wxpay = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            wxpay = <span class="keyword">new</span> WXPay(config);</span><br><span class="line">            <span class="comment">//3.将一些元数据存入到map集合中</span></span><br><span class="line">            Map&lt;String, String&gt; data = <span class="keyword">new</span> HashMap&lt;String, String&gt;();</span><br><span class="line">            data.put(<span class="string">&quot;body&quot;</span>, <span class="string">&quot;今晚的小费&quot;</span>);</span><br><span class="line">            data.put(<span class="string">&quot;out_trade_no&quot;</span>, orderId);<span class="comment">//订单编号</span></span><br><span class="line">            data.put(<span class="string">&quot;device_info&quot;</span>, <span class="string">&quot;&quot;</span>);<span class="comment">//设备信息</span></span><br><span class="line">            data.put(<span class="string">&quot;fee_type&quot;</span>, <span class="string">&quot;CNY&quot;</span>);<span class="comment">//货币单位： 分</span></span><br><span class="line">            data.put(<span class="string">&quot;total_fee&quot;</span>, <span class="string">&quot;1&quot;</span>);<span class="comment">// 1分</span></span><br><span class="line">            data.put(<span class="string">&quot;spbill_create_ip&quot;</span>, <span class="string">&quot;123.12.12.123&quot;</span>);<span class="comment">//对于这样123.12.12.123IP地址将会被记录</span></span><br><span class="line">            <span class="comment">//******需要有一个回调的接口，获取此次微信支付的信息。</span></span><br><span class="line">            data.put(<span class="string">&quot;notify_url&quot;</span>, <span class="string">&quot;http://4tzgju.natappfree.cc/wxpay/notify_url&quot;</span>);</span><br><span class="line">            data.put(<span class="string">&quot;trade_type&quot;</span>, <span class="string">&quot;NATIVE&quot;</span>);  <span class="comment">// 此处指定为扫码支付</span></span><br><span class="line">            data.put(<span class="string">&quot;product_id&quot;</span>, pid);<span class="comment">//商品ID</span></span><br><span class="line"></span><br><span class="line">            Map&lt;String, String&gt; resp = wxpay.unifiedOrder(data);</span><br><span class="line">            <span class="comment">//二维码的链接   code_url</span></span><br><span class="line"><span class="comment">//            System.out.println(resp);</span></span><br><span class="line">            String code_url = resp.get(<span class="string">&quot;code_url&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//生成二维码</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//二维码需要包含的文本内容</span></span><br><span class="line">            HashMap&lt;EncodeHintType, Object&gt; hints = <span class="keyword">new</span> HashMap&lt;EncodeHintType, Object&gt;();</span><br><span class="line">            hints.put(EncodeHintType.CHARACTER_SET, <span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">            hints.put(EncodeHintType.ERROR_CORRECTION, ErrorCorrectionLevel.M);</span><br><span class="line">            hints.put(EncodeHintType.MARGIN, <span class="number">2</span>);</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                BitMatrix bitMatrix = <span class="keyword">new</span> MultiFormatWriter().encode(code_url, BarcodeFormat.QR_CODE, <span class="number">200</span>, <span class="number">200</span>, hints);</span><br><span class="line">                MatrixToImageWriter.writeToStream(bitMatrix, <span class="string">&quot;PNG&quot;</span>, response.getOutputStream());</span><br><span class="line">                System.out.println(<span class="string">&quot;创建二维码完成&quot;</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;notify_url&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getNotifyURL</span><span class="params">(HttpServletResponse response, HttpServletRequest request)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        <span class="comment">//获得微信发送来的请求，从请求消息中获得数据。</span></span><br><span class="line">        ServletInputStream is = request.getInputStream();</span><br><span class="line">        <span class="keyword">byte</span>[] b = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">        <span class="keyword">int</span> len=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>((len = is.read(b))!=-<span class="number">1</span>)&#123;</span><br><span class="line">            String str = <span class="keyword">new</span> String(b,<span class="number">0</span>,len);</span><br><span class="line">            System.out.print(str);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//返回一个标准格式的回信</span></span><br><span class="line">        response.getWriter().write(<span class="string">&quot;&lt;xml&gt;&lt;return_code&gt;&lt;![CDATA[SUCCESS]]&gt;&lt;/return_code&gt;&lt;return_msg&gt;&lt;![CDATA[OK]]&gt;&lt;/return_msg&gt;&lt;/xml&gt;&quot;</span>);</span><br><span class="line"></span><br><span class="line">        GoEasy goEasy = <span class="keyword">new</span> GoEasy(<span class="string">&quot;http://rest-hangzhou.goeasy.io&quot;</span>, <span class="string">&quot;BC-13372467cbde47cb8fa70538dbab4755&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//推送</span></span><br><span class="line">        goEasy.publish(<span class="string">&quot;Java1902&quot;</span>, <span class="string">&quot;success&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;微信支付&quot;&gt;&lt;a href=&quot;#微信支付&quot; class=&quot;headerlink&quot; title=&quot;微信支付&quot;&gt;&lt;/a&gt;微信支付&lt;/h1&gt;&lt;h2 id=&quot;申请流程&quot;&gt;&lt;a href=&quot;#申请流程&quot; class=&quot;headerlink&quot; title=&quot;申请流程&quot;&gt;&lt;/a</summary>
      
    
    
    
    <category term="企业常用技术" scheme="http://xiaoliblog.cn/categories/%E4%BC%81%E4%B8%9A%E5%B8%B8%E7%94%A8%E6%8A%80%E6%9C%AF/"/>
    
    <category term="微信支付宝支付对接" scheme="http://xiaoliblog.cn/categories/%E4%BC%81%E4%B8%9A%E5%B8%B8%E7%94%A8%E6%8A%80%E6%9C%AF/%E5%BE%AE%E4%BF%A1%E6%94%AF%E4%BB%98%E5%AE%9D%E6%94%AF%E4%BB%98%E5%AF%B9%E6%8E%A5/"/>
    
    
    <category term="企业常用技术" scheme="http://xiaoliblog.cn/tags/%E4%BC%81%E4%B8%9A%E5%B8%B8%E7%94%A8%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>支付宝支付对接</title>
    <link href="http://xiaoliblog.cn/page/Alipay.html"/>
    <id>http://xiaoliblog.cn/page/Alipay.html</id>
    <published>2021-04-27T16:00:00.000Z</published>
    <updated>2021-04-30T07:11:08.976Z</updated>
    
    
    
    
    <category term="企业常用技术" scheme="http://xiaoliblog.cn/categories/%E4%BC%81%E4%B8%9A%E5%B8%B8%E7%94%A8%E6%8A%80%E6%9C%AF/"/>
    
    <category term="微信支付宝支付对接" scheme="http://xiaoliblog.cn/categories/%E4%BC%81%E4%B8%9A%E5%B8%B8%E7%94%A8%E6%8A%80%E6%9C%AF/%E5%BE%AE%E4%BF%A1%E6%94%AF%E4%BB%98%E5%AE%9D%E6%94%AF%E4%BB%98%E5%AF%B9%E6%8E%A5/"/>
    
    
    <category term="企业常用技术" scheme="http://xiaoliblog.cn/tags/%E4%BC%81%E4%B8%9A%E5%B8%B8%E7%94%A8%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>Vue.js前端框架🎯Pagination+PageHelper实现分页</title>
    <link href="http://xiaoliblog.cn/page/Vuejs11.html"/>
    <id>http://xiaoliblog.cn/page/Vuejs11.html</id>
    <published>2021-04-26T14:48:39.701Z</published>
    <updated>2021-04-28T14:35:09.012Z</updated>
    
    <content type="html"><![CDATA[<h1 id="分页"><a href="#分页" class="headerlink" title="分页"></a>分页</h1><h2 id="分页的原理"><a href="#分页的原理" class="headerlink" title="分页的原理"></a>分页的原理</h2><ul><li>任何分页都有五个部分组成<ul><li>记录的总条数</li><li>每页显示的记录条数</li><li>总页数</li><li>当前是第几页</li><li>当前页的所有记录 </li></ul></li></ul><h2 id="真假分页的区别"><a href="#真假分页的区别" class="headerlink" title="真假分页的区别"></a>真假分页的区别</h2><ul><li><strong>真分页</strong>：每一页都去后端发送请求，请求当前页的数据。适用于大数据量，能缓解后端接口的压力</li><li><strong>假分页</strong>：一开始就从获取所有数据，前端通过组件的方式对数据进行分页，在点击分页按钮时，数据已经都在浏览器缓存中了，不需要再请求后端接口。不适合大数据量</li></ul><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@d7f8a14a3826ef3b52ca8f48b13dbd3516d2f287/2021/04/28/84be0e4096c7b286650233a18ef0bd04.png"></p><div class="note success simple"><p><code>Pagination</code>为真分页</p></div><h1 id="PageHelper"><a href="#PageHelper" class="headerlink" title="PageHelper"></a>PageHelper</h1><ul><li>PageHelper是第三方组件，用于提供后端的分页数据</li><li>MyBatis 分页插件 PageHelper官方文档：<a href="https://pagehelper.github.io/">https://pagehelper.github.io/</a></li></ul><h2 id="PageHelper使用"><a href="#PageHelper使用" class="headerlink" title="PageHelper使用"></a>PageHelper使用</h2><ul><li>官方介绍👉<a href="https://github.com/pagehelper/Mybatis-PageHelper/blob/master/wikis/zh/HowToUse.md">使用方法</a></li><li>在pom.xml中导入依赖</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/com.github.pagehelper/pagehelper --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.pagehelper<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>pagehelper<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.10<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="配置拦截器插件"><a href="#配置拦截器插件" class="headerlink" title="配置拦截器插件"></a>配置拦截器插件</h2><ul><li>在<code>mybatis-config.xml</code>中添加插件，该插件中的键值对的含义请参考<a href="https://github.com/pagehelper/Mybatis-PageHelper/blob/master/wikis/zh/HowToUse.md">官方文档</a></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- com.github.pagehelper为PageHelper类所在包名 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugin</span> <span class="attr">interceptor</span>=<span class="string">&quot;com.github.pagehelper.PageInterceptor&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 使用下面的方式配置参数，后面会有所有的参数介绍 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;helperDialect&quot;</span> <span class="attr">value</span>=<span class="string">&quot;mysql&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;reasonable&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>另一种方法是在 <code>Spring</code> 配置文件中配置拦截器插件，在<code>sqlSessionFactory</code>配置里面加入</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;sqlSessionFactory&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.mybatis.spring.SqlSessionFactoryBean&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;dataSource&quot;</span>/&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 注意其他配置 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;plugins&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">array</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;com.github.pagehelper.PageInterceptor&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;properties&quot;</span>&gt;</span></span><br><span class="line">          <span class="comment">&lt;!--使用下面的方式配置参数，一行配置一个 --&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">value</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;helperDialect&quot;</span> <span class="attr">value</span>=<span class="string">&quot;mysql&quot;</span>/&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;reasonable&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">array</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><div class="note success simple"><p>两种方法选一种即可</p></div><h2 id="编写接口"><a href="#编写接口" class="headerlink" title="编写接口"></a>编写接口</h2><ul><li>在<code>controller</code>包下ProductController类中编写方法</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.github.pagehelper.PageHelper;</span><br><span class="line"><span class="keyword">import</span> com.github.pagehelper.PageInfo;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 获得分页对象，里面封装了分页需要用到的所有信息</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> pageNum  当前是第几页</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> pageSize 当前页一共显示多少条记录</span></span><br><span class="line"><span class="comment">* <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">@RequestMapping(value=&quot;pageInfo&quot;,method = RequestMethod.GET)</span></span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> PageInfo&lt;TProduct&gt; <span class="title">getPageInfo</span><span class="params">(<span class="keyword">int</span> pageNum, <span class="keyword">int</span> pageSize)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="comment">//1.通过调用PageHelper的静态方法开始获取分页数据</span></span><br><span class="line">   <span class="comment">//指定当前是第几页， 以及每页显示的记录条数</span></span><br><span class="line">   PageHelper.startPage(pageNum,pageSize);</span><br><span class="line"></span><br><span class="line">   <span class="comment">//2.获得所有的商品记录</span></span><br><span class="line">   List&lt;TProduct&gt; list = productService.getList();</span><br><span class="line"></span><br><span class="line">   <span class="comment">//3.获得当前分页对象</span></span><br><span class="line">   PageInfo&lt;TProduct&gt; pageInfo = <span class="keyword">new</span> PageInfo&lt;TProduct&gt;(list);</span><br><span class="line"></span><br><span class="line">   <span class="keyword">return</span> pageInfo;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="note success simple"><p>通过<code>PageHelper</code>得到一个<code>PageInfo</code>对象，该对象中封装了分页所必须的数据</p></div><ul><li>然后通过PostMan进行后端接口测试</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;localhost:8080&#x2F;pageInfo?pageNum&#x3D;1&amp;pageSize&#x3D;10</span><br></pre></td></tr></table></figure><ul><li>测试结果</li></ul><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;pageNum&quot;</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="attr">&quot;pageSize&quot;</span>: <span class="number">5</span>,</span><br><span class="line">    <span class="attr">&quot;size&quot;</span>: <span class="number">5</span>,</span><br><span class="line">    <span class="attr">&quot;startRow&quot;</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="attr">&quot;endRow&quot;</span>: <span class="number">5</span>,</span><br><span class="line">    <span class="attr">&quot;pages&quot;</span>: <span class="number">3</span>,</span><br><span class="line">    <span class="attr">&quot;prePage&quot;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="attr">&quot;nextPage&quot;</span>: <span class="number">2</span>,</span><br><span class="line">    <span class="attr">&quot;isFirstPage&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;isLastPage&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">&quot;hasPreviousPage&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">&quot;hasNextPage&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;navigatePages&quot;</span>: <span class="number">8</span>,</span><br><span class="line">    <span class="attr">&quot;navigatepageNums&quot;</span>: [</span><br><span class="line">        <span class="number">1</span>,</span><br><span class="line">        <span class="number">2</span>,</span><br><span class="line">        <span class="number">3</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">&quot;navigateFirstPage&quot;</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="attr">&quot;navigateLastPage&quot;</span>: <span class="number">3</span>,</span><br><span class="line">    <span class="attr">&quot;total&quot;</span>: <span class="number">14</span>,</span><br><span class="line">    <span class="attr">&quot;list&quot;</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">&quot;id&quot;</span>: <span class="number">8</span>,</span><br><span class="line">            <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;M10&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;images&quot;</span>: <span class="string">&quot;aaaa&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;price&quot;</span>: <span class="number">2199</span>,</span><br><span class="line">            <span class="attr">&quot;salePrice&quot;</span>: <span class="number">222</span>,</span><br><span class="line">            <span class="attr">&quot;salePoint&quot;</span>: <span class="string">&quot;sdf&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;typeId&quot;</span>: <span class="number">1</span>,</span><br><span class="line">            <span class="attr">&quot;typeName&quot;</span>: <span class="string">&quot;sss&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;flag&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">            <span class="attr">&quot;createTime&quot;</span>: <span class="string">&quot;Jun 5, 2019 12:10:29 AM&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;updateTime&quot;</span>: <span class="string">&quot;Jun 21, 2019 12:10:34 AM&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;createUser&quot;</span>: <span class="number">1</span>,</span><br><span class="line">            <span class="attr">&quot;updateUser&quot;</span>: <span class="number">1</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">&quot;id&quot;</span>: <span class="number">9</span>,</span><br><span class="line">            <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;M11&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;images&quot;</span>: <span class="string">&quot;aaaa&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;price&quot;</span>: <span class="number">1333</span>,</span><br><span class="line">            <span class="attr">&quot;salePrice&quot;</span>: <span class="number">222</span>,</span><br><span class="line">            <span class="attr">&quot;salePoint&quot;</span>: <span class="string">&quot;sdf&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;typeId&quot;</span>: <span class="number">1</span>,</span><br><span class="line">            <span class="attr">&quot;typeName&quot;</span>: <span class="string">&quot;sss&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;flag&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">            <span class="attr">&quot;createTime&quot;</span>: <span class="string">&quot;Jun 5, 2019 12:10:29 AM&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;updateTime&quot;</span>: <span class="string">&quot;Jun 21, 2019 12:10:34 AM&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;createUser&quot;</span>: <span class="number">1</span>,</span><br><span class="line">            <span class="attr">&quot;updateUser&quot;</span>: <span class="number">1</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">&quot;id&quot;</span>: <span class="number">11</span>,</span><br><span class="line">            <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;M13&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;images&quot;</span>: <span class="string">&quot;aaaa&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;price&quot;</span>: <span class="number">3333</span>,</span><br><span class="line">            <span class="attr">&quot;salePrice&quot;</span>: <span class="number">222</span>,</span><br><span class="line">            <span class="attr">&quot;salePoint&quot;</span>: <span class="string">&quot;sdf&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;typeId&quot;</span>: <span class="number">1</span>,</span><br><span class="line">            <span class="attr">&quot;typeName&quot;</span>: <span class="string">&quot;sss&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;flag&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">            <span class="attr">&quot;createTime&quot;</span>: <span class="string">&quot;Jun 5, 2019 12:10:29 AM&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;updateTime&quot;</span>: <span class="string">&quot;Jun 21, 2019 12:10:34 AM&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;createUser&quot;</span>: <span class="number">1</span>,</span><br><span class="line">            <span class="attr">&quot;updateUser&quot;</span>: <span class="number">1</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">&quot;id&quot;</span>: <span class="number">12</span>,</span><br><span class="line">            <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;M14&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;images&quot;</span>: <span class="string">&quot;aaaa&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;price&quot;</span>: <span class="number">4333</span>,</span><br><span class="line">            <span class="attr">&quot;salePrice&quot;</span>: <span class="number">222</span>,</span><br><span class="line">            <span class="attr">&quot;salePoint&quot;</span>: <span class="string">&quot;sdf&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;typeId&quot;</span>: <span class="number">1</span>,</span><br><span class="line">            <span class="attr">&quot;typeName&quot;</span>: <span class="string">&quot;sss&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;flag&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">            <span class="attr">&quot;createTime&quot;</span>: <span class="string">&quot;Jun 5, 2019 12:10:29 AM&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;updateTime&quot;</span>: <span class="string">&quot;Jun 21, 2019 12:10:34 AM&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;createUser&quot;</span>: <span class="number">1</span>,</span><br><span class="line">            <span class="attr">&quot;updateUser&quot;</span>: <span class="number">1</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">&quot;id&quot;</span>: <span class="number">15</span>,</span><br><span class="line">            <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;M15&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;images&quot;</span>: <span class="string">&quot;aaaa&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;price&quot;</span>: <span class="number">555</span>,</span><br><span class="line">            <span class="attr">&quot;salePrice&quot;</span>: <span class="number">222</span>,</span><br><span class="line">            <span class="attr">&quot;salePoint&quot;</span>: <span class="string">&quot;sdf&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;typeId&quot;</span>: <span class="number">1</span>,</span><br><span class="line">            <span class="attr">&quot;typeName&quot;</span>: <span class="string">&quot;sss&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;flag&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">            <span class="attr">&quot;createTime&quot;</span>: <span class="string">&quot;Jun 5, 2019 12:10:29 AM&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;updateTime&quot;</span>: <span class="string">&quot;Jun 21, 2019 12:10:34 AM&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;createUser&quot;</span>: <span class="number">1</span>,</span><br><span class="line">            <span class="attr">&quot;updateUser&quot;</span>: <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="note success simple"><p><code>pageHelper</code>可以配合<code>Pagination</code>使用，进行前后端分离</p></div><h1 id="Pagination"><a href="#Pagination" class="headerlink" title="Pagination"></a>Pagination</h1><ul><li>分页可以通过Element UI的内置组件<a href="https://panjiachen.github.io/vue-element-admin-site/zh/feature/component/pagination.html#%E4%BD%BF%E7%94%A8%E6%96%B9%E5%BC%8F">Pagination</a>实现</li><li><a href="https://panjiachen.github.io/vue-element-admin/#/table/complex-table">在线演示地址</a></li><li><a href="https://github.com/PanJiaChen/vue-element-admin/blob/master/src/components/Pagination/index.vue">在线源码</a></li></ul><h2 id="Pagination原理"><a href="#Pagination原理" class="headerlink" title="Pagination原理"></a>Pagination原理</h2><ul><li>通过分析综合模板，找到<code>src\views\table\complex-table.vue</code></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--父组件--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">pagination</span> <span class="attr">v-show</span>=<span class="string">&quot;total&gt;0&quot;</span> <span class="attr">:total</span>=<span class="string">&quot;total&quot;</span> <span class="attr">:page.sync</span>=<span class="string">&quot;listQuery.page&quot;</span> <span class="attr">:limit.sync</span>=<span class="string">&quot;listQuery.limit&quot;</span> @<span class="attr">pagination</span>=<span class="string">&quot;getList&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><ul><li>找到<code>src\components\Pageination\index.vue</code>源码</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--子组件--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">:class</span>=<span class="string">&quot;&#123;&#x27;hidden&#x27;:hidden&#125;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;pagination-container&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-pagination</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:background</span>=<span class="string">&quot;background&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:current-page.sync</span>=<span class="string">&quot;currentPage&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:page-size.sync</span>=<span class="string">&quot;pageSize&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:layout</span>=<span class="string">&quot;layout&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:page-sizes</span>=<span class="string">&quot;pageSizes&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:total</span>=<span class="string">&quot;total&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">v-bind</span>=<span class="string">&quot;$attrs&quot;</span></span></span><br><span class="line"><span class="tag">      @<span class="attr">size-change</span>=<span class="string">&quot;handleSizeChange&quot;</span></span></span><br><span class="line"><span class="tag">      @<span class="attr">current-change</span>=<span class="string">&quot;handleCurrentChange&quot;</span></span></span><br><span class="line"><span class="tag">    /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> &#123; scrollTo &#125; <span class="keyword">from</span> <span class="string">&#x27;@/utils/scroll-to&#x27;</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">  name: <span class="string">&#x27;Pagination&#x27;</span>,</span></span><br><span class="line">  props: &#123;</span><br><span class="line">    total: &#123;</span><br><span class="line"><span class="javascript">      required: <span class="literal">true</span>,</span></span><br><span class="line"><span class="javascript">      type: <span class="built_in">Number</span></span></span><br><span class="line">    &#125;,</span><br><span class="line">    page: &#123;</span><br><span class="line"><span class="javascript">      type: <span class="built_in">Number</span>,</span></span><br><span class="line"><span class="javascript">      <span class="keyword">default</span>: <span class="number">1</span></span></span><br><span class="line">    &#125;,</span><br><span class="line">    limit: &#123;</span><br><span class="line"><span class="javascript">      type: <span class="built_in">Number</span>,</span></span><br><span class="line"><span class="javascript">      <span class="keyword">default</span>: <span class="number">20</span></span></span><br><span class="line">    &#125;,</span><br><span class="line">    pageSizes: &#123;</span><br><span class="line"><span class="javascript">      type: <span class="built_in">Array</span>,</span></span><br><span class="line"><span class="javascript">      <span class="function"><span class="title">default</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">return</span> [<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>, <span class="number">50</span>]</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    layout: &#123;</span><br><span class="line"><span class="javascript">      type: <span class="built_in">String</span>,</span></span><br><span class="line"><span class="javascript">      <span class="keyword">default</span>: <span class="string">&#x27;total, sizes, prev, pager, next, jumper&#x27;</span></span></span><br><span class="line">    &#125;,</span><br><span class="line">    background: &#123;</span><br><span class="line"><span class="javascript">      type: <span class="built_in">Boolean</span>,</span></span><br><span class="line"><span class="javascript">      <span class="keyword">default</span>: <span class="literal">true</span></span></span><br><span class="line">    &#125;,</span><br><span class="line">    autoScroll: &#123;</span><br><span class="line"><span class="javascript">      type: <span class="built_in">Boolean</span>,</span></span><br><span class="line"><span class="javascript">      <span class="keyword">default</span>: <span class="literal">true</span></span></span><br><span class="line">    &#125;,</span><br><span class="line">    hidden: &#123;</span><br><span class="line"><span class="javascript">      type: <span class="built_in">Boolean</span>,</span></span><br><span class="line"><span class="javascript">      <span class="keyword">default</span>: <span class="literal">false</span></span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  computed: &#123;</span><br><span class="line">    currentPage: &#123;</span><br><span class="line"><span class="javascript">      <span class="function"><span class="title">get</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">return</span> <span class="built_in">this</span>.page</span></span><br><span class="line">      &#125;,</span><br><span class="line"><span class="javascript">      <span class="function"><span class="title">set</span>(<span class="params">val</span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">this</span>.$emit(<span class="string">&#x27;update:page&#x27;</span>, val)</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    pageSize: &#123;</span><br><span class="line"><span class="javascript">      <span class="function"><span class="title">get</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">return</span> <span class="built_in">this</span>.limit</span></span><br><span class="line">      &#125;,</span><br><span class="line"><span class="javascript">      <span class="function"><span class="title">set</span>(<span class="params">val</span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">this</span>.$emit(<span class="string">&#x27;update:limit&#x27;</span>, val)</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line"><span class="javascript">    <span class="function"><span class="title">handleSizeChange</span>(<span class="params">val</span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">      <span class="built_in">this</span>.$emit(<span class="string">&#x27;pagination&#x27;</span>, &#123; <span class="attr">page</span>: <span class="built_in">this</span>.currentPage, <span class="attr">limit</span>: val &#125;)</span></span><br><span class="line"><span class="javascript">      <span class="keyword">if</span> (<span class="built_in">this</span>.autoScroll) &#123;</span></span><br><span class="line">        scrollTo(0, 800)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line"><span class="javascript">    <span class="function"><span class="title">handleCurrentChange</span>(<span class="params">val</span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">      <span class="built_in">this</span>.$emit(<span class="string">&#x27;pagination&#x27;</span>, &#123; <span class="attr">page</span>: val, <span class="attr">limit</span>: <span class="built_in">this</span>.pageSize &#125;)</span></span><br><span class="line"><span class="javascript">      <span class="keyword">if</span> (<span class="built_in">this</span>.autoScroll) &#123;</span></span><br><span class="line">        scrollTo(0, 800)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scoped</span>&gt;</span></span><br><span class="line"><span class="css"><span class="selector-class">.pagination-container</span> &#123;</span></span><br><span class="line"><span class="css">  <span class="selector-tag">background</span>: <span class="selector-id">#fff</span>;</span></span><br><span class="line">  padding: 32px 16px;</span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-class">.pagination-container</span><span class="selector-class">.hidden</span> &#123;</span></span><br><span class="line">  display: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><code>Pagination</code>实际上是一个组件，组件里设置了分页常用到的参数。通过父组件使用Pagination组件，向该组件中传递参数，让Pagination组件得到分页常用到的参数值，这就能够实现分页，那么这样的组件之间的参数传递（父传子） </li></ul><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@40651669df5c393418b0467ac3357ae115356ffc/2021/04/28/8910205b2433923f07de1e8f3323ba7f.png"></p><h2 id="Pagination使用"><a href="#Pagination使用" class="headerlink" title="Pagination使用"></a>Pagination使用</h2><ul><li>首先在对应文件夹下导入Pagination内容，以下内容可以在综合模块里找<ul><li><code>components/Pagination</code></li><li><code>utils/scroll-to.js</code></li></ul></li></ul><h2 id="页面中使用Pagination"><a href="#页面中使用Pagination" class="headerlink" title="页面中使用Pagination"></a>页面中使用Pagination</h2><table><thead><tr><th align="center">参数</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center"><code>total</code></td><td align="center">记录的总条数</td></tr><tr><td align="center"><code>listQuery.page</code></td><td align="center">当前是第几页</td></tr><tr><td align="center"><code>listQuery.limit</code></td><td align="center">每页显示的数量</td></tr><tr><td align="center"><code>getList()</code></td><td align="center">当前页的所有记录（数据）</td></tr></tbody></table><div class="note success simple"><p>总页数？发现不用我们设置</p></div><ul><li>步骤一： 使用<code>Pagination</code>组件，在需要分页的组件中加入<code>Pagination</code></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">pagination</span> <span class="attr">v-show</span>=<span class="string">&quot;total&gt;0&quot;</span> <span class="attr">:total</span>=<span class="string">&quot;total&quot;</span> <span class="attr">:page.sync</span>=<span class="string">&quot;listQuery.page&quot;</span> <span class="attr">:limit.sync</span>=<span class="string">&quot;listQuery.limit&quot;</span> @<span class="attr">pagination</span>=<span class="string">&quot;getList&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>步骤二：在<code>script</code>里注册<code>Pagination</code>，并声明相应的参数</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="comment">//本地注册</span></span><br><span class="line"><span class="keyword">import</span> Pagination <span class="keyword">from</span> <span class="string">&#x27;@/components/Pagination&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">   <span class="comment">//使用组件</span></span><br><span class="line">  components: &#123; Pagination &#125;,</span><br><span class="line">  <span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      total: <span class="number">0</span>,</span><br><span class="line">      listQuery: &#123;</span><br><span class="line">        page: <span class="number">1</span>,</span><br><span class="line">        limit: <span class="number">10</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    <span class="function"><span class="title">getList</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">      <span class="comment">// 获取数据</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><ul><li>步骤三：声明<code>getList</code>函数，该函数用于获取后端提供的<code>PageInfo</code>对象，该对象里封装了分页所需要的所有的数据</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">created</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="comment">// this.fetchData()</span></span><br><span class="line">    <span class="built_in">this</span>.getList() <span class="comment">//注意。此时使用分页的方法</span></span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    <span class="function"><span class="title">getList</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">var</span> vm = <span class="built_in">this</span>;</span><br><span class="line">      <span class="built_in">this</span>.axios(&#123;</span><br><span class="line">        method: <span class="string">&#x27;GET&#x27;</span>,</span><br><span class="line">        url: <span class="string">&#x27;http://localhost:8080//pageInfo?pageNum=&#x27;</span>+vm.listQuery.page+<span class="string">&#x27;&amp;pageSize=&#x27;</span>+vm.listQuery.limit</span><br><span class="line">      &#125;).then(<span class="function"><span class="keyword">function</span>(<span class="params">response</span>)</span>&#123;</span><br><span class="line">        <span class="comment">//得到一个PageInfo对象</span></span><br><span class="line">         vm.total = response.data.total;<span class="comment">// 将PageInfo中的total赋给vm的total</span></span><br><span class="line">         vm.list = response.data.list;<span class="comment">//当前页显示的所有数据</span></span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;,</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;分页&quot;&gt;&lt;a href=&quot;#分页&quot; class=&quot;headerlink&quot; title=&quot;分页&quot;&gt;&lt;/a&gt;分页&lt;/h1&gt;&lt;h2 id=&quot;分页的原理&quot;&gt;&lt;a href=&quot;#分页的原理&quot; class=&quot;headerlink&quot; title=&quot;分页的原理&quot;&gt;&lt;/a&gt;分页的原</summary>
      
    
    
    
    <category term="Web前端" scheme="http://xiaoliblog.cn/categories/Web%E5%89%8D%E7%AB%AF/"/>
    
    <category term="Vue.js" scheme="http://xiaoliblog.cn/categories/Web%E5%89%8D%E7%AB%AF/Vue-js/"/>
    
    
    <category term="Vue.js" scheme="http://xiaoliblog.cn/tags/Vue-js/"/>
    
  </entry>
  
  <entry>
    <title>Vue.js前端框架🎯Vue-Element-admin模版</title>
    <link href="http://xiaoliblog.cn/page/Vuejs10.html"/>
    <id>http://xiaoliblog.cn/page/Vuejs10.html</id>
    <published>2021-04-19T16:00:00.000Z</published>
    <updated>2021-04-26T14:42:55.460Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Vue-Element-admin"><a href="#Vue-Element-admin" class="headerlink" title="Vue-Element-admin"></a>Vue-Element-admin</h1><ul><li><code>admin-element-vue</code>是一个后台前端解决方案，它基于 <code>Webpack</code> 、<code>Vue</code>和 <code>element-ui</code>实现。它使用了最新的前端技术栈，动态路由，权限验证，它可以帮助你快速搭建企业级中后台产品原型。</li><li>中文文档地址：<a href="https://panjiachen.gitee.io/vue-element-admin-site/zh/guide/">https://panjiachen.gitee.io/vue-element-admin-site/zh/guide/</a></li><li>Github：<a href="https://github.com/PanJiaChen/vue-element-admin">https://github.com/PanJiaChen/vue-element-admin</a></li><li>集成模板在线预览地址：<a href="https://github.com/PanJiaChen/vue-element-admin">https://github.com/PanJiaChen/vue-element-admin</a></li><li>基础模板在线预览地址：<a href="https://panjiachen.github.io/vue-admin-template/#/dashboard">https://panjiachen.github.io/vue-admin-template/#/dashboard</a></li></ul><h2 id="克隆模板到本地"><a href="#克隆模板到本地" class="headerlink" title="克隆模板到本地"></a>克隆模板到本地</h2><ul><li>你需要在本地安装 <a href="https://nodejs.org/en/">node</a> 和 <a href="https://git-scm.com/">git</a>。本项目技术栈基于 <a href="https://es6.ruanyifeng.com/">ES2015+</a>、<a href="https://cn.vuejs.org/index.html">vue</a>、<a href="https://vuex.vuejs.org/zh/guide/">vuex</a>、<a href="https://router.vuejs.org/zh/">vue-router</a> 、<a href="https://github.com/vuejs/vue-cli">vue-cli</a> 、<a href="https://github.com/axios/axios">axios</a> 和 <a href="https://github.com/ElemeFE/element">element-ui</a>，所有的请求数据都使用<a href="https://github.com/nuysoft/Mock/">Mock.js</a>进行模拟</li><li>克隆 <a href="https://github.com/PanJiaChen/vue-element-admin">vue-element-admin</a> 完整模板到本地，主要作用是方便我们直接拿组件到项目中使用</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/PanJiaChen/vue-element-admin.git</span><br></pre></td></tr></table></figure><ul><li>克隆 <a href="https://github.com/PanJiaChen/vue-admin-template">vue-admin-template</a> 基础模板到本地，主要作用是创建一个最简单的项目后台，再根据需求慢慢完善功能</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/PanJiaChen/vue-admin-template.git</span><br></pre></td></tr></table></figure><ul><li>克隆后项目后，进入项目目录，安装依赖</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 进入项目目录</span></span><br><span class="line">cd vue-element-admin</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 安装依赖</span></span><br><span class="line">npm install</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 建议不要用 cnpm 安装  可以通过如下操作解决 npm 下载速度慢的问题</span></span><br><span class="line">npm install --registry=https://registry.npm.taobao.org</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 本地开发 启动项目</span></span><br><span class="line">npm run dev</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@dc46f51719461467f6e45186b177c658e87e4250/2021/04/18/dc2993840c6c8003b330526e86873f58.png"></p><ul><li>IDEA在使用vue-element-admin 模板时会默认开启<code>ESLint</code>代码质量管理工具。为了开发方便，关闭<code>ESLint</code></li></ul><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@e8fff5eeadf1ffd848ee2895369c259c22b28a29/2021/04/26/e0274c8f50a51aae24d9a8580109aee1.png"></p><h2 id="项目结构"><a href="#项目结构" class="headerlink" title="项目结构"></a>项目结构</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">├── build                      # 构建相关</span><br><span class="line">├── mock                       # 项目mock 模拟数据</span><br><span class="line">├── plop-templates             # 基本模板</span><br><span class="line">├── public                     # 静态资源</span><br><span class="line">│   │── favicon.ico            # favicon图标</span><br><span class="line">│   └── index.html             # html模板</span><br><span class="line">├── src                        # 源代码</span><br><span class="line">│   ├── api                    # 所有请求</span><br><span class="line">│   ├── assets                 # 主题 字体等静态资源</span><br><span class="line">│   ├── components             # 全局公用组件</span><br><span class="line">│   ├── directive              # 全局指令</span><br><span class="line">│   ├── filters                # 全局 filter</span><br><span class="line">│   ├── icons                  # 项目所有 svg icons</span><br><span class="line">│   ├── lang                   # 国际化 language</span><br><span class="line">│   ├── layout                 # 全局 layout</span><br><span class="line">│   ├── router                 # 路由</span><br><span class="line">│   ├── store                  # 全局 store管理</span><br><span class="line">│   ├── styles                 # 全局样式</span><br><span class="line">│   ├── utils                  # 全局公用方法</span><br><span class="line">│   ├── vendor                 # 公用vendor</span><br><span class="line">│   ├── views                  # views 所有页面</span><br><span class="line">│   ├── App.vue                # 入口页面</span><br><span class="line">│   ├── main.js                # 入口文件 加载组件 初始化等</span><br><span class="line">│   └── permission.js          # 权限管理</span><br><span class="line">├── tests                      # 测试</span><br><span class="line">├── .env.xxx                   # 环境变量配置</span><br><span class="line">├── .eslintrc.js               # eslint 配置项</span><br><span class="line">├── .babelrc                   # babel-loader 配置</span><br><span class="line">├── .travis.yml                # 自动化CI配置</span><br><span class="line">├── vue.config.js              # vue-cli 配置</span><br><span class="line">├── postcss.config.js          # postcss 配置</span><br><span class="line">└── package.json               # package.json</span><br></pre></td></tr></table></figure><ul><li>修改侧边栏参考官方文档<a href="https://panjiachen.gitee.io/vue-element-admin-site/zh/guide/essentials/router-and-nav.html#%E9%85%8D%E7%BD%AE%E9%A1%B9">路由||侧边栏</a></li><li>本项目侧边栏和路由是绑定在一起的，所以你只有在 <code>@/router/index.js</code> 下面配置对应的路由，侧边栏就能动态的生成了</li><li>其中的<code>@</code>就是<code>src</code>目录，你可以在<code>vue.config.js</code>中看到</li></ul><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@94c0e59a588a1d6645dd5793d445564b93b07b64/2021/04/26/0d2390355342c73d272ee62df40b6fe3.png" width="50%"><ul><li>一般侧边栏有两种形式即：<code>submenu</code> 和 直接 <code>el-menu-item</code>。 一个是嵌套子菜单，另一个则是直接一个链接。如下图：<img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@5838e5aa38f25d519dc4f4238ba11b87a3dac421/2021/04/26/d55e94d443df74706e2c573d09217d8e.png"></li><li>在 Sidebar 中已经帮你做了判断，当你一个路由下面的 children 声明的路由大于<code>&gt;1</code> 个时，自动会变成嵌套的模式。</li><li>如果子路由正好等于一个就会默认将<strong>子路由</strong>作为根路由显示在侧边栏中，若不想这样，可以通过设置在根路由中设置<code>alwaysShow: true</code>来取消这一特性</li><li>在路由中修改如下，图标可以去<a href="https://panjiachen.github.io/vue-element-admin/#/icon/index">官方文档</a>查找</li></ul><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@b6b56582bef81176310e27e4cc8e6cbd07899ca5/2021/04/26/7daf8bd987f1ead0c9aa8bcf975ddf31.png" width="50%"><h1 id="实现商品列表展示"><a href="#实现商品列表展示" class="headerlink" title="实现商品列表展示"></a>实现商品列表展示</h1><h2 id="安装axios模块"><a href="#安装axios模块" class="headerlink" title="安装axios模块"></a>安装axios模块</h2><ul><li>下载axios模块</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save vue-axios</span><br></pre></td></tr></table></figure><ul><li>首先在<code>main.js</code>中引入<code>axios</code>模块</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&#x27;axios&#x27;</span></span><br><span class="line"><span class="keyword">import</span> VueAxios <span class="keyword">from</span> <span class="string">&#x27;vue-axios&#x27;</span></span><br><span class="line"></span><br><span class="line">Vue.use(VueAxios, axios)</span><br></pre></td></tr></table></figure><h2 id="mock数据"><a href="#mock数据" class="headerlink" title="mock数据"></a>mock数据</h2><ul><li>使用mock模拟后端传来的数据，fastmock官网：<a href="https://www.fastmock.site/#/">https://www.fastmock.site/#/</a></li></ul><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;product&quot;</span>:[</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>:<span class="number">01</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>:<span class="string">&quot;手机&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;images&quot;</span>:<span class="string">&quot;img01&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;price&quot;</span>:<span class="number">999</span>,</span><br><span class="line">    <span class="attr">&quot;salePrice&quot;</span>:<span class="number">100</span>,</span><br><span class="line">    <span class="attr">&quot;salePoint&quot;</span>:<span class="number">200</span>,</span><br><span class="line">  &#125;,&#123;</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>:<span class="number">02</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>:<span class="string">&quot;相机&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;images&quot;</span>:<span class="string">&quot;img02&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;price&quot;</span>:<span class="number">1999</span>,</span><br><span class="line">    <span class="attr">&quot;salePrice&quot;</span>:<span class="number">100</span>,</span><br><span class="line">    <span class="attr">&quot;salePoint&quot;</span>:<span class="number">200</span>,</span><br><span class="line">  &#125;,&#123;</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>:<span class="number">03</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>:<span class="string">&quot;电脑&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;images&quot;</span>:<span class="string">&quot;img03&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;price&quot;</span>:<span class="number">10099</span>,</span><br><span class="line">    <span class="attr">&quot;salePrice&quot;</span>:<span class="number">100</span>,</span><br><span class="line">    <span class="attr">&quot;salePoint&quot;</span>:<span class="number">200</span>,</span><br><span class="line">  &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="note warning simple"><p>属性名中不能带有特殊符号，例如<code>sale_Point</code>是无法取到值的</p></div><ul><li>复制接口然后前端调用</li></ul><h2 id="修改路由"><a href="#修改路由" class="headerlink" title="修改路由"></a>修改路由</h2><ul><li>修改<code>src/router/index.js</code>路由</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//商品管理</span></span><br><span class="line">  &#123;</span><br><span class="line">    path: <span class="string">&#x27;/example&#x27;</span>,</span><br><span class="line">    component: Layout,</span><br><span class="line">    alwaysShow:<span class="literal">true</span>,  <span class="comment">//取消子路由作为根路由显示在侧边栏中</span></span><br><span class="line">    redirect: <span class="string">&#x27;/example/table&#x27;</span>,</span><br><span class="line">    name: <span class="string">&#x27;Example&#x27;</span>,</span><br><span class="line">    meta: &#123; <span class="attr">title</span>: <span class="string">&#x27;商品管理&#x27;</span>, <span class="attr">icon</span>: <span class="string">&#x27;el-icon-s-help&#x27;</span> &#125;,</span><br><span class="line">    children: [</span><br><span class="line">      &#123;</span><br><span class="line">        path: <span class="string">&#x27;products&#x27;</span>,</span><br><span class="line">        name: <span class="string">&#x27;products&#x27;</span>,</span><br><span class="line">        <span class="comment">//路由的路径</span></span><br><span class="line">        component: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&#x27;@/views/products/index&#x27;</span>),</span><br><span class="line">        meta: &#123; <span class="attr">title</span>: <span class="string">&#x27;商品列表&#x27;</span>, <span class="attr">icon</span>: <span class="string">&#x27;table&#x27;</span> &#125;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure><ul><li>在<code>views</code>下创建<code>products/index.vue</code>，直接复制原table文件夹里的index.vue路由，然后修改即可</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;app-container&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-table</span> <span class="attr">:data</span>=<span class="string">&quot;list&quot;</span> <span class="attr">border</span> <span class="attr">fit</span> <span class="attr">highlight-current-row</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!--第一列--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span> <span class="attr">label</span>=<span class="string">&quot;序号&quot;</span> <span class="attr">width</span>=<span class="string">&quot;95&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">template</span> <span class="attr">slot-scope</span>=<span class="string">&quot;scope&quot;</span>&gt;</span></span><br><span class="line">          &#123;&#123; scope.$index+1 &#125;&#125; <span class="comment">&lt;!--索引,会根据数据自动加1,默认为0--&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">&lt;!--第二列--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">label</span>=<span class="string">&quot;商品ID&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">template</span> <span class="attr">slot-scope</span>=<span class="string">&quot;scope&quot;</span>&gt;</span></span><br><span class="line">          &#123;&#123; scope.row.id &#125;&#125; <span class="comment">&lt;!--id对应json或者数据库表中的字段--&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line">     </span><br><span class="line">      <span class="comment">&lt;!--第三列--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">label</span>=<span class="string">&quot;商品名称&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">template</span> <span class="attr">slot-scope</span>=<span class="string">&quot;scope&quot;</span>&gt;</span></span><br><span class="line">          &#123;&#123; scope.row.name &#125;&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">el-table</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">  <span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">return</span> &#123;</span></span><br><span class="line">      list: &#123;&#125;</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line"><span class="javascript">  <span class="function"><span class="title">created</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">this</span>.fetchData();</span></span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line"><span class="javascript">    <span class="function"><span class="title">fetchData</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> vm = <span class="built_in">this</span>;</span></span><br><span class="line"><span class="javascript">      <span class="comment">//axios请求</span></span></span><br><span class="line"><span class="javascript">      <span class="built_in">this</span>.axios(&#123;</span></span><br><span class="line"><span class="javascript">        method:<span class="string">&#x27;get&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        url:<span class="string">&#x27;https://www.fastmock.site/mock/00daa94229c45f62263030ffe4b715db/myVuedemo/getProductList&#x27;</span>,</span></span><br><span class="line"><span class="javascript">      &#125;).then(<span class="function"><span class="keyword">function</span>(<span class="params">resp</span>)</span>&#123;</span></span><br><span class="line">        vm.list=resp.data.product</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>使用<code>npm run dev</code>查看运行结果</li></ul><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@c5d5cbaa053bbd54d8c3e2d6c3b73c9302918d68/2021/04/26/274450b1a2f1e0b85515d0ebd77aa0da.png"></p><h1 id="实现编辑商品"><a href="#实现编辑商品" class="headerlink" title="实现编辑商品"></a>实现编辑商品</h1><h2 id="路由跳转"><a href="#路由跳转" class="headerlink" title="路由跳转"></a>路由跳转</h2><ul><li>在商品列表中提供编辑按钮，可以取复杂模板获取</li></ul><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@be56801fd77fd73a5da3d9e637c2c53ab608480d/2021/04/26/ba9e6ed18c62049ad1042fa5c8185016.png"></p><ul><li>在<code>views/editproduct</code>下创建一个商品编辑页（<code>index.vue</code>）</li><li>在<code>router/index.js</code>路由表中注册商品编辑页</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    path: <span class="string">&quot;/editproduct&quot;</span>,</span><br><span class="line">    hidden: <span class="literal">true</span>, <span class="comment">//不在侧边栏出现</span></span><br><span class="line">    component: Layout,</span><br><span class="line">    children: [</span><br><span class="line">      &#123;</span><br><span class="line">        path: <span class="string">&quot;index/:id&quot;</span>,  <span class="comment">//注意带了一个参数</span></span><br><span class="line">        name: <span class="string">&quot;editproduct&quot;</span>,</span><br><span class="line">        component: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/editproduct/index&quot;</span>),</span><br><span class="line">        meta: &#123; <span class="attr">title</span>: <span class="string">&quot;编辑商品&quot;</span>, <span class="attr">icon</span>: <span class="string">&quot;form&quot;</span> &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure><ul><li>通过商品列表的编辑按钮跳转到商品编辑页，但是如何标识唯一商品呢，我们可以通过获取商品ID做为路由参数传递</li><li>在商品列表<code>product/index.vue</code>中给按钮添加事件</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span> <span class="attr">slot-scope</span>=<span class="string">&quot;scope&quot;</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> <span class="attr">size</span>=<span class="string">&quot;mini&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;editproduct(scope.row.id)&quot;</span>&gt;</span></span><br><span class="line">   编辑</span><br><span class="line"> <span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">  <span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">return</span> &#123;</span></span><br><span class="line">      list: &#123;&#125;</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line"><span class="javascript">    <span class="comment">//点击编辑按钮</span></span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="title">editproduct</span>(<span class="params">id</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">      <span class="comment">//跳转路由</span></span></span><br><span class="line"><span class="javascript">      <span class="built_in">this</span>.$router.push(<span class="string">&quot;/editproduct/index/&quot;</span>+id);</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>然后在<code>editproduct/index.vue</code>页面取值</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123; this.$route.params.id &#125;&#125;</span><br></pre></td></tr></table></figure><ul><li>或者创建SSM项目，java代码如下</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;list&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;TProduct&gt; <span class="title">getList</span><span class="params">()</span></span>&#123;</span><br><span class="line">   <span class="keyword">return</span> productService.getList(); <span class="comment">//编写查询全部</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="根据ID获取后端数据"><a href="#根据ID获取后端数据" class="headerlink" title="根据ID获取后端数据"></a>根据ID获取后端数据</h2><ul><li>通过<code>id</code>，发送请求，让后端提供该id的商品对象，并展示在页面中</li><li>修改<code>editproduct/index.vue</code>页面，通过<code>v-model</code>双向绑定数据</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;app-container&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-form</span> <span class="attr">ref</span>=<span class="string">&quot;form&quot;</span> <span class="attr">:model</span>=<span class="string">&quot;product&quot;</span> <span class="attr">label-width</span>=<span class="string">&quot;120px&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;商品名称&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">&quot;product.name&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;商品价格&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">&quot;product.price&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;onsubmit()&quot;</span>&gt;</span>编辑<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">el-form</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>创建生命周期钩子函数，用于发送axios请求给后端，实时获取数据</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">  <span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">return</span> &#123;</span></span><br><span class="line">      product: &#123;</span><br><span class="line">        id: 1,</span><br><span class="line"><span class="javascript">        name: <span class="string">&quot;手机&quot;</span>,</span></span><br><span class="line"><span class="javascript">        images: <span class="string">&quot;img01&quot;</span>,</span></span><br><span class="line">        price: 999,</span><br><span class="line">        salePrice: 100,</span><br><span class="line">        salePoint: 200</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line"><span class="javascript">  <span class="function"><span class="title">created</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">this</span>.fetchDataById();</span></span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line"><span class="javascript">    <span class="function"><span class="title">fetchDataById</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> id = <span class="built_in">this</span>.$route.params.id;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> vm = <span class="built_in">this</span>;</span></span><br><span class="line"><span class="javascript">      <span class="built_in">this</span>.axios(&#123;</span></span><br><span class="line"><span class="javascript">        method: <span class="string">&quot;GET&quot;</span>,</span></span><br><span class="line">        url:</span><br><span class="line"><span class="javascript">          <span class="string">&quot;https://localhost:8080/getProductList?id=&quot;</span> +id</span></span><br><span class="line"><span class="javascript">      &#125;).then(<span class="function"><span class="keyword">function</span>(<span class="params">resp</span>) </span>&#123;</span></span><br><span class="line">        vm.product = resp.data;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line"><span class="javascript">    <span class="function"><span class="title">onsubmit</span>(<span class="params"></span>)</span> &#123;&#125;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>Java代码</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;getProductById&quot;)</span></span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> TProduct <span class="title">getProductById</span><span class="params">(Long id)</span></span>&#123;</span><br><span class="line">   <span class="keyword">return</span> productService.getProductById(id); <span class="comment">//编写通过id查询</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="编辑内容发送给后端"><a href="#编辑内容发送给后端" class="headerlink" title="编辑内容发送给后端"></a>编辑内容发送给后端</h2><ul><li>点编辑按钮时，获得所有编辑的数据，传送给后端接口，实现修改数据的效果</li><li>请求方式是用POST， 编辑完后，要跳转到商品列表 </li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;onsubmit()&quot;</span>&gt;</span>编辑<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">  <span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">return</span> &#123;</span></span><br><span class="line">      product: &#123;</span><br><span class="line">        id: 1,</span><br><span class="line"><span class="javascript">        name: <span class="string">&quot;手机&quot;</span>,</span></span><br><span class="line"><span class="javascript">        images: <span class="string">&quot;img01&quot;</span>,</span></span><br><span class="line">        price: 999,</span><br><span class="line">        salePrice: 100,</span><br><span class="line">        salePoint: 200</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line"><span class="javascript">    <span class="function"><span class="title">onsubmit</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> vm = <span class="built_in">this</span>;</span></span><br><span class="line"><span class="javascript">      <span class="built_in">this</span>.axios(&#123;</span></span><br><span class="line"><span class="javascript">        method:<span class="string">&quot;post&quot;</span>,</span></span><br><span class="line"><span class="javascript">        url: <span class="string">&quot;http://localhost:8080/product/editproduct&quot;</span>,</span></span><br><span class="line"><span class="javascript">        data: vm.product <span class="comment">//发送的数据类型为一个JSON对象</span></span></span><br><span class="line"><span class="javascript">      &#125;).then(<span class="function"><span class="keyword">function</span>(<span class="params">resp</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">        vm.$router.push(<span class="string">&quot;/products&quot;</span>)  <span class="comment">//跳转到显示页面</span></span></span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>注意：前端传来的是JSON数据对象，后端参数要加<code>@RequestBody</code>注解</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(value=&quot;editproduct&quot;,method = RequestMethod.POST)</span></span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">editProductById</span><span class="params">(<span class="meta">@RequestBody</span> TProduct tProduct)</span></span>&#123;</span><br><span class="line">   productService.editProductById(tProductp); <span class="comment">//接到这个对象更新到数据库里面</span></span><br><span class="line">   <span class="keyword">return</span> <span class="string">&quot;success&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="删除商品"><a href="#删除商品" class="headerlink" title="删除商品"></a>删除商品</h1><ul><li>前端</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//点击删除商品</span></span><br><span class="line">    <span class="function"><span class="title">delproduct</span>(<span class="params">id</span>)</span>&#123;</span><br><span class="line">      <span class="keyword">var</span> vm = <span class="built_in">this</span>;</span><br><span class="line">      <span class="comment">//axios请求</span></span><br><span class="line">      <span class="built_in">this</span>.axios(&#123;</span><br><span class="line">        method: <span class="string">&quot;get&quot;</span>,</span><br><span class="line">        url:</span><br><span class="line">          <span class="string">&quot;https://localhost:8080/delproduct?id=&quot;</span>+id</span><br><span class="line">      &#125;).then(<span class="function"><span class="keyword">function</span>(<span class="params">resp</span>) </span>&#123;</span><br><span class="line">        <span class="function"><span class="title">if</span>(<span class="params">resp.data == <span class="string">&quot;success&quot;</span></span>)</span>&#123;</span><br><span class="line">          alert(<span class="string">&quot;成功!&quot;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        vm.fetchData(); <span class="comment">//更新商品列表</span></span><br><span class="line">      &#125;).catch(<span class="function"><span class="keyword">function</span>(<span class="params">error</span>) </span>&#123;</span><br><span class="line">        alert(<span class="string">&quot;失败!&quot;</span>)</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><ul><li>后端代码</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(value=&quot;delproduct&quot;,method = RequestMethod.GET)</span></span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">delProductById</span><span class="params">(<span class="keyword">int</span> id)</span></span>&#123;</span><br><span class="line">   productService.delProductById(id); <span class="comment">//根据id删除</span></span><br><span class="line">   <span class="keyword">return</span> <span class="string">&quot;success&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="添加商品"><a href="#添加商品" class="headerlink" title="添加商品"></a>添加商品</h1><h2 id="创建路由"><a href="#创建路由" class="headerlink" title="创建路由"></a>创建路由</h2><ul><li>在<code>product/inde.vue</code>商品列表增加添加商品的按钮</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">align</span>=<span class="string">&quot;right&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;success&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;addproduct()&quot;</span>&gt;</span></span><br><span class="line">      添加</span><br><span class="line">   <span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span></span></span><br></pre></td></tr></table></figure><ul><li>在<code>views/addproduct</code>下创建<code>index.vue</code>路由</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;app-container&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-form</span> <span class="attr">ref</span>=<span class="string">&quot;form&quot;</span> <span class="attr">:model</span>=<span class="string">&quot;product&quot;</span> <span class="attr">label-width</span>=<span class="string">&quot;120px&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;商品名称&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">&quot;product.name&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;商品价格&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">&quot;product.price&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;addproduct()&quot;</span>&gt;</span>添加<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">el-form</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>在<code>router/index.js</code>中配置路由</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">   path: <span class="string">&quot;/addproduct&quot;</span>,</span><br><span class="line">   hidden: <span class="literal">true</span>, <span class="comment">//不再侧边栏出现</span></span><br><span class="line">   component: Layout,</span><br><span class="line">   children: [</span><br><span class="line">     &#123;</span><br><span class="line">       path: <span class="string">&quot;index&quot;</span>,</span><br><span class="line">       name: <span class="string">&quot;addproduct&quot;</span>,</span><br><span class="line">       component: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/addproduct/index&quot;</span>),</span><br><span class="line">       meta: &#123; <span class="attr">title</span>: <span class="string">&quot;添加商品&quot;</span>, <span class="attr">icon</span>: <span class="string">&quot;form&quot;</span> &#125;</span><br><span class="line">     &#125;</span><br><span class="line">   ]</span><br><span class="line"> &#125;,</span><br></pre></td></tr></table></figure><h2 id="post请求如何传递数据"><a href="#post请求如何传递数据" class="headerlink" title="post请求如何传递数据"></a>post请求如何传递数据</h2><h3 id="qs插件"><a href="#qs插件" class="headerlink" title="qs插件"></a>qs插件</h3><ul><li><code>qs</code>是一个流行的查询参数序列化和解析库。可以将一个普通的object序列化成一个查询字符串，或者反过来将一个查询字符串解析成一个object,帮助我们查询字符串解析和序列化字符串</li><li>需要使用qs内置库，首先安装qs</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install qs</span><br></pre></td></tr></table></figure><ul><li>然后在<code>main.js</code>中引入qs内置库</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> qs <span class="keyword">from</span> <span class="string">&#x27;qs&#x27;</span></span><br></pre></td></tr></table></figure><ul><li>在<code>main.js</code>中配置全局属性</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Vue.prototype.$qs = qs</span><br></pre></td></tr></table></figure><h3 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h3><ul><li><code>qs.parse()</code>是将URL解析成对象的形式</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> str = <span class="string">&quot;username=&#x27;admin&#x27;&amp;password=&#x27;admin&#x27;&quot;</span> </span><br><span class="line"><span class="built_in">console</span>.log(qs.parse(str)) <span class="comment">// Object &#123; username: &quot;admin&quot;, password: &quot;admin&quot; &#125;</span></span><br></pre></td></tr></table></figure><ul><li><code>qs.stringify()</code>是将对象 序列化成URL的形式，以<code>&amp;</code>进行拼接</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">qs.stringify(&#123;<span class="attr">username</span>:<span class="string">&#x27;admin&#x27;</span>, <span class="attr">password</span>:<span class="string">&#x27;admin&#x27;</span>&#125;)</span><br><span class="line"><span class="comment">//username=admin&amp;password=admin</span></span><br></pre></td></tr></table></figure><ul><li>解决Vue中POST请求无法携带数据的问题</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">onSubmit</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> vm = <span class="built_in">this</span>;</span><br><span class="line">  <span class="built_in">this</span>.axios(&#123;</span><br><span class="line">    method: <span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line">    url: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">    <span class="comment">//=========解决POST请求无法携带数据的问题===========</span></span><br><span class="line">    transformRequest: [<span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> Qs.stringify(data)</span><br><span class="line">    &#125;],</span><br><span class="line">    <span class="comment">//===============================</span></span><br><span class="line">    data:vm.product</span><br><span class="line">  &#125;).then();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="跳转并发送请求"><a href="#跳转并发送请求" class="headerlink" title="跳转并发送请求"></a>跳转并发送请求</h2><ul><li>在<code>product/inde.vue</code>商品列表中点击添加商品的按钮就跳转到<code>addproduct</code>下的路由</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">addproduct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">      <span class="built_in">this</span>.$router.push(<span class="string">&quot;/addproduct/index&quot;</span>)</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><ul><li>在<code>views/addproduct/index.vue</code>路由中发送axios请求</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">methods: &#123;</span><br><span class="line">   <span class="function"><span class="title">addproduct</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">     <span class="keyword">var</span> vm = <span class="built_in">this</span>;</span><br><span class="line">     <span class="built_in">this</span>.axios(&#123;</span><br><span class="line">       method: <span class="string">&quot;post&quot;</span>,</span><br><span class="line">       url: <span class="string">&quot;http://localhost:8080/product/addproduct&quot;</span>,</span><br><span class="line">       <span class="comment">//=========解决POST请求无法携带数据的问题===========</span></span><br><span class="line">       transformRequest: [</span><br><span class="line">         <span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">           <span class="keyword">return</span> Qs.stringify(data);</span><br><span class="line">         &#125;</span><br><span class="line">       ],</span><br><span class="line">       <span class="comment">//===============================</span></span><br><span class="line">       data: vm.product <span class="comment">//发送的数据类型为一个JSON对象</span></span><br><span class="line">     &#125;).then(<span class="function"><span class="keyword">function</span>(<span class="params">resp</span>) </span>&#123;</span><br><span class="line">       <span class="comment">//添加成功后，前往商品列表页面</span></span><br><span class="line">       vm.$router.push(<span class="string">&quot;/products&quot;</span>);</span><br><span class="line">     &#125;);</span><br><span class="line">   &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><ul><li>后端</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(value=&quot;addproduct&quot;,method = RequestMethod.POST)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">addProduct</span><span class="params">(TProduct tProduct)</span></span>&#123;</span><br><span class="line">   ProductService.addProduct(tProduct); <span class="comment">//添加数据</span></span><br><span class="line">   <span class="keyword">return</span> <span class="string">&quot;success&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Vue-Element-admin&quot;&gt;&lt;a href=&quot;#Vue-Element-admin&quot; class=&quot;headerlink&quot; title=&quot;Vue-Element-admin&quot;&gt;&lt;/a&gt;Vue-Element-admin&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;cod</summary>
      
    
    
    
    <category term="Web前端" scheme="http://xiaoliblog.cn/categories/Web%E5%89%8D%E7%AB%AF/"/>
    
    <category term="Vue.js" scheme="http://xiaoliblog.cn/categories/Web%E5%89%8D%E7%AB%AF/Vue-js/"/>
    
    
    <category term="Vue.js" scheme="http://xiaoliblog.cn/tags/Vue-js/"/>
    
  </entry>
  
  <entry>
    <title>Vue.js前端框架🎯Webpack-Vue模块</title>
    <link href="http://xiaoliblog.cn/page/Vuejs09.html"/>
    <id>http://xiaoliblog.cn/page/Vuejs09.html</id>
    <published>2021-04-18T16:00:00.000Z</published>
    <updated>2021-04-26T10:47:10.814Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Webpack-Vue"><a href="#Webpack-Vue" class="headerlink" title="Webpack-Vue"></a>Webpack-Vue</h1><h2 id="创建工程"><a href="#创建工程" class="headerlink" title="创建工程"></a>创建工程</h2><ul><li>创建一个名为 <code>Webpack-vue-demo</code> 的工程，根据需求选择</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 使用 webpack 打包工具初始化一个名为 Webpack-vue-demo 的工程</span></span><br><span class="line">vue init webpack Webpack-vue-demo</span><br></pre></td></tr></table></figure><h2 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h2><ul><li>我们需要安装 <code>vue-router</code>、<code>element-ui</code>、<code>sass-loader</code> 和 <code>node-sass</code> 四个插件</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 进入工程目录</span></span><br><span class="line">cd Webpack-vue-demo</span><br><span class="line"><span class="meta">#</span><span class="bash"> 安装 vue-router</span></span><br><span class="line">npm install vue-router --save-dev</span><br><span class="line"><span class="meta">#</span><span class="bash"> 安装 element-ui</span></span><br><span class="line">npm i element-ui -S</span><br><span class="line"><span class="meta">#</span><span class="bash"> 安装 SASS 加载器</span></span><br><span class="line">npm install sass-loader node-sass --save-dev</span><br></pre></td></tr></table></figure><ul><li>安装依赖</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 安装依赖</span></span><br><span class="line">npm install</span><br></pre></td></tr></table></figure><ul><li>启动工程</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run dev</span><br></pre></td></tr></table></figure><ul><li>附：NPM相关命令说明</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">npm install moduleName #安装模块到项目目录下</span><br><span class="line">npm install -g moduleName #-g的意思是将模块安装到全局，具体安装到磁盘哪个位置，要看 npm config prefix 的位置</span><br><span class="line">npm install -save moduleName #--save 的意思是将模块安装到项目目录下，并在 package 文件的 dependencies 节点写入依赖，`-S` 为该命令的缩写</span><br><span class="line">npm install -save-dev moduleName #--save-dev 的意思是将模块安装到项目目录下，并在 package 文件的 devDependencies 节点写入依赖，`-D` 为该命令的缩写</span><br></pre></td></tr></table></figure><h1 id="Element-UI搭建登录页"><a href="#Element-UI搭建登录页" class="headerlink" title="Element UI搭建登录页"></a>Element UI搭建登录页</h1><ul><li>Element UI官方文档：<a href="https://element.eleme.cn/#/">https://element.eleme.cn/#/</a></li><li>在源码<code>src</code>目录下创建如下结构，有则忽略<ul><li> <code>views</code>文件夹：用于存放Vue视图组件</li><li> <code>router</code>文件夹：用于存放vue-router配置</li><li> <code>components</code>文件夹：用于存放Vue功能组件</li><li> <code>assets</code>文件夹：用于存放资源文件<img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@054c70fd9e13a262300c2396d6c32878409c6f91/2021/04/17/872b8de19c37e3bbab1175fea9069969.png"></li></ul></li></ul><h2 id="创建视图"><a href="#创建视图" class="headerlink" title="创建视图"></a>创建视图</h2><ul><li>在 <code>views</code> 目录下创建一个名为 <code>Main.vue</code> 的视图组件；用于登录后展示登录成功的跳转效果；</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-container</span> <span class="attr">style</span>=<span class="string">&quot;height: 500px; border: 1px solid #eee&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-aside</span> <span class="attr">width</span>=<span class="string">&quot;200px&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background-color: rgb(238, 241, 246)&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--默认打开1--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-menu</span> <span class="attr">:default-openeds</span>=<span class="string">&quot;[&#x27;1&#x27;]&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-submenu</span> <span class="attr">index</span>=<span class="string">&quot;1&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">template</span> <span class="attr">slot</span>=<span class="string">&quot;title&quot;</span></span></span><br><span class="line"><span class="tag">              &gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;el-icon-message&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span>商品管理<span class="tag">&lt;/<span class="name">template</span></span></span><br><span class="line"><span class="tag">            &gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-menu-item-group</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">el-menu-item</span> <span class="attr">index</span>=<span class="string">&quot;1-1&quot;</span>&gt;</span>商品列表<span class="tag">&lt;/<span class="name">el-menu-item</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">el-menu-item</span> <span class="attr">index</span>=<span class="string">&quot;1-2&quot;</span>&gt;</span>商品信息<span class="tag">&lt;/<span class="name">el-menu-item</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">el-menu-item-group</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">el-submenu</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-menu</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-aside</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-container</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-header</span> <span class="attr">style</span>=<span class="string">&quot;text-align: right; font-size: 12px&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-dropdown</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;el-icon-setting&quot;</span> <span class="attr">style</span>=<span class="string">&quot;margin-right: 15px&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-dropdown-menu</span> <span class="attr">slot</span>=<span class="string">&quot;dropdown&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">el-dropdown-item</span>&gt;</span>查看<span class="tag">&lt;/<span class="name">el-dropdown-item</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">el-dropdown-item</span>&gt;</span>新增<span class="tag">&lt;/<span class="name">el-dropdown-item</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">el-dropdown-item</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">el-dropdown-item</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">el-dropdown-menu</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">el-dropdown</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">span</span>&gt;</span>王小虎<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-header</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-main</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-table</span> <span class="attr">:data</span>=<span class="string">&quot;tableData&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">&quot;date&quot;</span> <span class="attr">label</span>=<span class="string">&quot;日期&quot;</span> <span class="attr">width</span>=<span class="string">&quot;140&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">&quot;name&quot;</span> <span class="attr">label</span>=<span class="string">&quot;姓名&quot;</span> <span class="attr">width</span>=<span class="string">&quot;120&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">&quot;address&quot;</span> <span class="attr">label</span>=<span class="string">&quot;地址&quot;</span>&gt;</span> <span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">el-table</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-main</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-container</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">el-container</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  </span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">  name: <span class="string">&quot;Main&quot;</span></span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">  <span class="selector-class">.el-header</span> &#123;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">background-color</span>: <span class="selector-id">#B3C0D1</span>;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">color</span>: <span class="selector-id">#333</span>;</span></span><br><span class="line">    line-height: 60px;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line"><span class="css">  <span class="selector-class">.el-aside</span> &#123;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">color</span>: <span class="selector-id">#333</span>;</span></span><br><span class="line">  &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>在 <code>views</code> 目录下创建一个名为 <code>Login.vue</code> 的视图组件，其中 <code>el-*</code> 的元素为 ElementUI 组件；</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-form</span> <span class="attr">ref</span>=<span class="string">&quot;loginForm&quot;</span> <span class="attr">:model</span>=<span class="string">&quot;form&quot;</span> <span class="attr">:rules</span>=<span class="string">&quot;rules&quot;</span> <span class="attr">label-width</span>=<span class="string">&quot;80px&quot;</span> <span class="attr">class</span>=<span class="string">&quot;login-box&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h3</span> <span class="attr">class</span>=<span class="string">&quot;login-title&quot;</span>&gt;</span>欢迎登录<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;账号&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;username&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入账号&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;form.username&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;密码&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;password&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入密码&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;form.password&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> <span class="attr">v-on:click</span>=<span class="string">&quot;onSubmit(&#x27;loginForm&#x27;)&quot;</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">el-form</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-dialog</span></span></span><br><span class="line"><span class="tag">      <span class="attr">title</span>=<span class="string">&quot;温馨提示&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:visible.sync</span>=<span class="string">&quot;dialogVisible&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">width</span>=<span class="string">&quot;30%&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:before-close</span>=<span class="string">&quot;handleClose&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">span</span>&gt;</span>请输入账号和密码<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">span</span> <span class="attr">slot</span>=<span class="string">&quot;footer&quot;</span> <span class="attr">class</span>=<span class="string">&quot;dialog-footer&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;dialogVisible = false&quot;</span>&gt;</span>确 定<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">el-dialog</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">    name: <span class="string">&quot;Login&quot;</span>,</span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">return</span> &#123;</span></span><br><span class="line">        form: &#123;</span><br><span class="line"><span class="javascript">          username: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">          password: <span class="string">&#x27;&#x27;</span></span></span><br><span class="line">        &#125;,</span><br><span class="line"></span><br><span class="line"><span class="javascript">        <span class="comment">// 表单验证，需要在 el-form-item 元素中增加 prop 属性</span></span></span><br><span class="line">        rules: &#123;</span><br><span class="line">          username: [</span><br><span class="line"><span class="javascript">            &#123;<span class="attr">required</span>: <span class="literal">true</span>, <span class="attr">message</span>: <span class="string">&#x27;账号不可为空&#x27;</span>, <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span>&#125;</span></span><br><span class="line">          ],</span><br><span class="line">          password: [</span><br><span class="line"><span class="javascript">            &#123;<span class="attr">required</span>: <span class="literal">true</span>, <span class="attr">message</span>: <span class="string">&#x27;密码不可为空&#x27;</span>, <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span>&#125;</span></span><br><span class="line">          ]</span><br><span class="line">        &#125;,</span><br><span class="line"></span><br><span class="line"><span class="javascript">        <span class="comment">// 对话框显示和隐藏</span></span></span><br><span class="line"><span class="javascript">        dialogVisible: <span class="literal">false</span></span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line"><span class="javascript">      <span class="function"><span class="title">onSubmit</span>(<span class="params">formName</span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 为表单绑定验证功能</span></span></span><br><span class="line"><span class="javascript">        <span class="built_in">this</span>.$refs[formName].validate(<span class="function">(<span class="params">valid</span>) =&gt;</span> &#123;</span></span><br><span class="line">          if (valid) &#123;</span><br><span class="line"><span class="javascript">            <span class="comment">// 使用 vue-router 路由到指定页面，该方式称之为编程式导航</span></span></span><br><span class="line"><span class="javascript">            <span class="built_in">this</span>.$router.push(<span class="string">&quot;/main&quot;</span>);</span></span><br><span class="line"><span class="javascript">          &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">this</span>.dialogVisible = <span class="literal">true</span>;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> <span class="literal">false</span>;</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>  <span class="attr">scoped</span>&gt;</span></span><br><span class="line"><span class="css">  <span class="selector-class">.login-box</span> &#123;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">border</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#DCDFE6</span>;</span></span><br><span class="line">    width: 350px;</span><br><span class="line">    margin: 180px auto;</span><br><span class="line">    padding: 35px 35px 15px 35px;</span><br><span class="line">    border-radius: 5px;</span><br><span class="line">    -webkit-border-radius: 5px;</span><br><span class="line">    -moz-border-radius: 5px;</span><br><span class="line"><span class="css">    <span class="selector-tag">box-shadow</span>: 0 0 25<span class="selector-tag">px</span> <span class="selector-id">#909399</span>;</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">  <span class="selector-class">.login-title</span> &#123;</span></span><br><span class="line">    text-align: center;</span><br><span class="line">    margin: 0 auto 40px auto;</span><br><span class="line"><span class="css">    <span class="selector-tag">color</span>: <span class="selector-id">#303133</span>;</span></span><br><span class="line">  &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="创建路由"><a href="#创建路由" class="headerlink" title="创建路由"></a>创建路由</h2><ul><li>在 <code>router</code> 目录下创建一个名为 <code>index.js</code> 的 vue-router 路由配置文件，这就是一个路由表</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> Router <span class="keyword">from</span> <span class="string">&quot;vue-router&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> Login <span class="keyword">from</span> <span class="string">&quot;../views/Login&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> Main <span class="keyword">from</span> <span class="string">&quot;../views/main&quot;</span>;</span><br><span class="line"><span class="comment">//安装路由</span></span><br><span class="line">Vue.use(Router);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">new</span> Router(&#123;</span><br><span class="line">  routes: [</span><br><span class="line">    &#123;</span><br><span class="line">      path: <span class="string">&quot;/Login&quot;</span>,  <span class="comment">//到时候地址栏会显示的路径</span></span><br><span class="line">      name: <span class="string">&quot;Login&quot;</span>,</span><br><span class="line">      component: Login <span class="comment">// Login是组件的名字，这个路由对应跳转到的组件</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      path: <span class="string">&quot;/main&quot;</span>,  </span><br><span class="line">      name: <span class="string">&quot;main&quot;</span>,</span><br><span class="line">      component: Main </span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="配置路由"><a href="#配置路由" class="headerlink" title="配置路由"></a>配置路由</h2><ul><li>修改 <code>main.js</code> 入口代码，导入路由模块和ElementUI</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">&#x27;./App&#x27;</span></span><br><span class="line"><span class="comment">//导入路由配置目录</span></span><br><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">&#x27;./router&#x27;</span></span><br><span class="line"><span class="keyword">import</span> VueRouter <span class="keyword">from</span> <span class="string">&#x27;vue-router&#x27;</span> <span class="comment">//全局使用路由模块</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 导入 ElementUI</span></span><br><span class="line"><span class="keyword">import</span> ElementUI <span class="keyword">from</span> <span class="string">&#x27;element-ui&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;element-ui/lib/theme-chalk/index.css&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//引入Axios</span></span><br><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&#x27;axios&#x27;</span></span><br><span class="line"><span class="keyword">import</span> VueAxios <span class="keyword">from</span> <span class="string">&quot;vue-axios&quot;</span>;</span><br><span class="line"> </span><br><span class="line">Vue.use(VueAxios, axios)</span><br><span class="line"></span><br><span class="line"><span class="comment">//使用路由和ElementUI</span></span><br><span class="line">Vue.use(VueRouter)</span><br><span class="line">Vue.use(ElementUI);</span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  el: <span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line">  <span class="comment">//配置路由</span></span><br><span class="line">  router,</span><br><span class="line">  render: <span class="function"><span class="params">h</span> =&gt;</span> h(App)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ul><li>在<code>App.vue</code>中使用</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">router-view</span>&gt;</span><span class="tag">&lt;/<span class="name">router-view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">  name: <span class="string">&#x27;App&#x27;</span></span></span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@0f380e9f27afe52910009c3df901c0928424d90f/2021/04/17/cf2d216cdf3ac2be9478242e66a761e9.png"></p><h1 id="Mock数据"><a href="#Mock数据" class="headerlink" title="Mock数据"></a>Mock数据</h1><ul><li>每次前端测试的时候，都需要搭建一个后端环境，很麻烦，这时候可以使用Mock假数据，即提供假数据，可以让前端不需要等待后端的接口，而直接进行下一步的开发。一个常用的工具：Easy-Mock或者fastmock</li><li>Gitee地址：<a href="https://gitee.com/mirrors/Easy-Mock">https://gitee.com/mirrors/Easy-Mock</a></li><li>由于Esay-Mock最近好像崩了，推荐另一款在线工具<code>fastmock</code>：<a href="https://www.fastmock.site/#/">https://www.fastmock.site/#/</a></li><li>fastmock使用文档：<a href="https://marvengong.gitee.io/fastmock/#/default">https://marvengong.gitee.io/fastmock/#/default</a></li><li>fastmock可以让你在没有后端程序的情况下能真实地在线模拟ajax请求，你可以用fatmock实现项目初期纯前端的效果演示，也可以用fastmock实现开发中的数据模拟从而实现前后端分离</li></ul><h2 id="注册登录"><a href="#注册登录" class="headerlink" title="注册登录"></a>注册登录</h2><ul><li>进入<a href="https://www.fastmock.site/#/register">注册页面</a>进行注册</li><li>用户名备忘：<psw>li1234</psw></li></ul><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@610f815edd7a1a79a47c8a42b640735173afe90f/2021/04/18/015e3f4ea8154a38bb9e7cc2fb75c295.png" width="50%"><h2 id="创建接口"><a href="#创建接口" class="headerlink" title="创建接口"></a>创建接口</h2><ul><li>点击【创建项目】，自定义名称和接口</li></ul><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@b6429cd88f6748b7ce0e6b100f9651f69a170423/2021/04/18/c3847d85745d540d1e09001f87eb8f8e.png" width="50%"><ul><li>项目如下所示，点击【新增接口】</li></ul><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@36a1b9a2856c64377efec7c642eeceb2891f6fdd/2021/04/18/e506c6aa9a1d8205ac29bec5f46af273.png"></p><ul><li>填写接口相关信息，创建一个<code>users</code>的JSON数组</li></ul><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@50c397070f352295fd8f6fccee3f63808ad406b2/2021/04/18/63eb0db0d6959cb8d50b46162828cc99.png" width="100%"><ul><li>复制好完整接口地址，用于前端发送Ajax</li></ul><h2 id="测试接口"><a href="#测试接口" class="headerlink" title="测试接口"></a>测试接口</h2><ul><li>通过<code>main.vue</code>测试接口</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-container</span> <span class="attr">style</span>=<span class="string">&quot;height: 500px; border: 1px solid #eee&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-aside</span> <span class="attr">width</span>=<span class="string">&quot;200px&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background-color: rgb(238, 241, 246)&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--默认打开1--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-menu</span> <span class="attr">:default-openeds</span>=<span class="string">&quot;[&#x27;1&#x27;]&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-submenu</span> <span class="attr">index</span>=<span class="string">&quot;1&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">template</span> <span class="attr">slot</span>=<span class="string">&quot;title&quot;</span></span></span><br><span class="line"><span class="tag">              &gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;el-icon-message&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span>商品管理<span class="tag">&lt;/<span class="name">template</span></span></span><br><span class="line"><span class="tag">            &gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-menu-item-group</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">el-menu-item</span> <span class="attr">index</span>=<span class="string">&quot;1-1&quot;</span>&gt;</span>商品列表<span class="tag">&lt;/<span class="name">el-menu-item</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">el-menu-item</span> <span class="attr">index</span>=<span class="string">&quot;1-2&quot;</span>&gt;</span>商品信息<span class="tag">&lt;/<span class="name">el-menu-item</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">el-menu-item-group</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">el-submenu</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-menu</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-aside</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-container</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-header</span> <span class="attr">style</span>=<span class="string">&quot;text-align: right; font-size: 12px&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-dropdown</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;el-icon-setting&quot;</span> <span class="attr">style</span>=<span class="string">&quot;margin-right: 15px&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-dropdown-menu</span> <span class="attr">slot</span>=<span class="string">&quot;dropdown&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">el-dropdown-item</span>&gt;</span>查看<span class="tag">&lt;/<span class="name">el-dropdown-item</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">el-dropdown-item</span>&gt;</span>新增<span class="tag">&lt;/<span class="name">el-dropdown-item</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">el-dropdown-item</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">el-dropdown-item</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">el-dropdown-menu</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">el-dropdown</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">span</span>&gt;</span>王小虎<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-header</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--数据显示，从后端拿取,:data为创建一个属性对应值为users--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-main</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-table</span> <span class="attr">:data</span>=<span class="string">&quot;users&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">&quot;uid&quot;</span> <span class="attr">label</span>=<span class="string">&quot;用户ID&quot;</span> <span class="attr">width</span>=<span class="string">&quot;140&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">&quot;name&quot;</span> <span class="attr">label</span>=<span class="string">&quot;姓名&quot;</span> <span class="attr">width</span>=<span class="string">&quot;120&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">&quot;age&quot;</span> <span class="attr">label</span>=<span class="string">&quot;年龄&quot;</span>&gt;</span> <span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">el-table</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-main</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-container</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">el-container</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">  name: <span class="string">&quot;Main&quot;</span>,</span></span><br><span class="line"><span class="javascript">  <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">          <span class="comment">//users对应:data,是一个JSON数组，对应Mock接口里的数据</span></span></span><br><span class="line">          users:[</span><br><span class="line">            </span><br><span class="line">          ]</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;,</span><br><span class="line"><span class="javascript">  <span class="comment">//调用生命周期钩子函数，页面加载完就调用</span></span></span><br><span class="line"><span class="javascript">  <span class="function"><span class="title">created</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">      <span class="comment">//axios内部的then是调用不到this</span></span></span><br><span class="line"><span class="javascript">      <span class="comment">//因为this是当前axios对象，而不是当前Vue对象，因此把当前Vue对象用vm来指明，这样this不会冲突</span></span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> vm = <span class="built_in">this</span>;</span></span><br><span class="line"><span class="javascript">      <span class="built_in">this</span>.axios(&#123;</span></span><br><span class="line"><span class="javascript">          method:<span class="string">&quot;get&quot;</span>,</span></span><br><span class="line"><span class="javascript">          <span class="comment">//mock接口地址</span></span></span><br><span class="line"><span class="javascript">          url:<span class="string">&quot;https://www.fastmock.site/mock/00daa94229c45f62263030ffe4b715db/myVuedemo/getUserList&quot;</span>,</span></span><br><span class="line"><span class="javascript">      &#125;).then(<span class="function"><span class="keyword">function</span>(<span class="params">resp</span>)</span>&#123;  <span class="comment">//请求成功后的回调函数</span></span></span><br><span class="line"><span class="javascript">          vm.users = resp.data.users  <span class="comment">//后端的值赋给Vue实例对象的users</span></span></span><br><span class="line">      &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">  <span class="selector-class">.el-header</span> &#123;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">background-color</span>: <span class="selector-id">#B3C0D1</span>;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">color</span>: <span class="selector-id">#333</span>;</span></span><br><span class="line">    line-height: 60px;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line"><span class="css">  <span class="selector-class">.el-aside</span> &#123;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">color</span>: <span class="selector-id">#333</span>;</span></span><br><span class="line">  &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>可以看到拿到了mock的假数据</li></ul><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@ac328754fbd8dc4609202f74acf5703fa683c9e4/2021/04/18/8352516083825b2e5f808d51681bd761.png"></p><ul><li>重点：在发送axios请求时，如何调用到当前vue对象中的内容<ul><li><strong>因为axios内部的then内的this是当前axios对象，而不是当前vue对象，因此把当前vue对象用vm来指明。这样this不会冲突</strong></li></ul></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  name: <span class="string">&quot;Main&quot;</span>,</span><br><span class="line">  <span class="comment">//调用生命周期钩子函数，页面加载完就调用</span></span><br><span class="line">  <span class="function"><span class="title">created</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">      <span class="comment">//axios内部的then是调用不到this</span></span><br><span class="line">      <span class="comment">//因为this是当前axios对象，而不是当前Vue对象，因此把当前Vue对象用vm来指明，这样this不会冲突</span></span><br><span class="line">      <span class="keyword">var</span> vm = <span class="built_in">this</span>;</span><br><span class="line">      <span class="built_in">this</span>.axios(&#123;</span><br><span class="line">          method:<span class="string">&quot;get&quot;</span>,</span><br><span class="line">          <span class="comment">//mock接口地址</span></span><br><span class="line">          url:<span class="string">&quot;https://www.fastmock.site/mock/00daa94229c45f62263030ffe4b715db/myVuedemo/getUserList&quot;</span>,</span><br><span class="line">      &#125;).then(<span class="function"><span class="keyword">function</span>(<span class="params">resp</span>)</span>&#123;  <span class="comment">//请求成功后的回调函数</span></span><br><span class="line">          vm.users = resp.data.users  <span class="comment">//后端的值赋给Vue实例对象的users</span></span><br><span class="line">          <span class="built_in">console</span>.log = (resp.data.users)</span><br><span class="line">      &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h1 id="嵌套路由"><a href="#嵌套路由" class="headerlink" title="嵌套路由"></a>嵌套路由</h1><ul><li>在路由显示的组件内部，又嵌套着路由，称为嵌套路由也叫子路由。在实际应用中，通常由多层嵌套的组件组合而成。同样地，URL 中各段动态路径也按某种结构对应嵌套的各层组件，例如：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;user&#x2F;foo&#x2F;profile                     &#x2F;user&#x2F;foo&#x2F;posts</span><br><span class="line">+------------------+                  +-----------------+</span><br><span class="line">| User             |                  | User            |</span><br><span class="line">| +--------------+ |                  | +-------------+ |</span><br><span class="line">| | Profile      | |  +------------&gt;  | | Posts       | |</span><br><span class="line">| |              | |                  | |             | |</span><br><span class="line">| +--------------+ |                  | +-------------+ |</span><br><span class="line">+------------------+                  +-----------------+</span><br></pre></td></tr></table></figure><h2 id="配置路由表"><a href="#配置路由表" class="headerlink" title="配置路由表"></a>配置路由表</h2><ul><li>环境场景是<code>main.vue</code>下有两个子路由<code>ProductInfo.vue</code>和<code>ProductList.vue</code></li><li>首先配置子路由<code>ProductInfo.vue</code></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        商品信息...</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> (&#123;</span></span><br><span class="line"><span class="javascript">    name:<span class="string">&quot;ProductInfo&quot;</span></span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scoped</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>配置子路由<code>ProductList.vue</code></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        商品列表...</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> (&#123;</span></span><br><span class="line"><span class="javascript">    name:<span class="string">&quot;ProductList&quot;</span></span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scoped</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>在<code>route/index.js</code>中引入，在父路由下配置路由表</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> Router <span class="keyword">from</span> <span class="string">&quot;vue-router&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> Login <span class="keyword">from</span> <span class="string">&quot;../views/Login&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> Main <span class="keyword">from</span> <span class="string">&quot;../views/main&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> ProductInfo <span class="keyword">from</span> <span class="string">&quot;../views/ProductInfo&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> ProductList <span class="keyword">from</span> <span class="string">&quot;../views/ProductList&quot;</span>;</span><br><span class="line"><span class="comment">//安装路由</span></span><br><span class="line">Vue.use(Router);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">new</span> Router(&#123;</span><br><span class="line">  routes: [</span><br><span class="line">    &#123;</span><br><span class="line">      path: <span class="string">&quot;/Login&quot;</span>,  <span class="comment">//到时候地址栏会显示的路径</span></span><br><span class="line">      name: <span class="string">&quot;Login&quot;</span>,</span><br><span class="line">      component: Login <span class="comment">// Login是组件的名字，这个路由对应跳转到的组件</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      path: <span class="string">&quot;/main&quot;</span>,  <span class="comment">//到时候地址栏会显示的路径</span></span><br><span class="line">      name: <span class="string">&quot;main&quot;</span>,</span><br><span class="line">      component: Main, <span class="comment">// Login是组件的名字，这个路由对应跳转到的组件</span></span><br><span class="line">      <span class="comment">// main主页面下有两个子路由</span></span><br><span class="line">      children:[</span><br><span class="line">        &#123;</span><br><span class="line">          path:<span class="string">&quot;/ProductList&quot;</span>, <span class="comment">//注意,使用路由时的地址:/productlist</span></span><br><span class="line">          name:<span class="string">&quot;ProductList&quot;</span>,</span><br><span class="line">          component: ProductList, <span class="comment">//显示在main的&lt;routerview&gt;&lt;/routerview&gt;标签里面</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          path:<span class="string">&quot;/ProductInfo&quot;</span>,</span><br><span class="line">          name:<span class="string">&quot;ProductLInfo&quot;</span>,</span><br><span class="line">          component: ProductInfo,</span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="使用嵌套路由"><a href="#使用嵌套路由" class="headerlink" title="使用嵌套路由"></a>使用嵌套路由</h2><ul><li>在父路由<code>main.vue</code>中使用<ul><li> 通过<code>&lt;router-link to=&quot;/ProductInfo&quot;&gt;商品信息&lt;/router-link&gt;</code>跳转</li><li> 通过<code>&lt;router-view&gt;&lt;/router-view&gt;</code>显示</li></ul></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">el-menu-item-group</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!--跳转有两种实现方法：1.to=&quot;/路径&quot; 2. 通过@click点击事件--&gt;</span></span><br><span class="line">      <span class="comment">&lt;!--跳转到ProductList,不需要带/main/--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-menu-item</span> <span class="attr">index</span>=<span class="string">&quot;1-1&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">&quot;/ProductList&quot;</span>&gt;</span>商品列表<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span><span class="tag">&lt;/<span class="name">el-menu-item</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-menu-item</span> <span class="attr">index</span>=<span class="string">&quot;1-2&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">&quot;/ProductInfo&quot;</span>&gt;</span>商品信息<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span><span class="tag">&lt;/<span class="name">el-menu-item</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">el-menu-item-group</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">   <span class="comment">&lt;!--数据显示，从后端拿取,:data为创建一个属性对应值为users--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">el-main</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!--显示商品列表--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">router-view</span>&gt;</span><span class="tag">&lt;/<span class="name">router-view</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">el-main</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">  name: <span class="string">&quot;Main&quot;</span>,</span></span><br><span class="line">  methods:&#123;</span><br><span class="line"><span class="javascript">  <span class="comment">//方法跳转</span></span></span><br><span class="line"><span class="javascript">     toProductInfo:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">         <span class="built_in">this</span>.$router.push(<span class="string">&quot;/ProductInfo&quot;</span>)</span></span><br><span class="line">     &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>测试结果，可以看到在父路由页面不改变的情况下，切换页面</li></ul><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@42e026e9e4b17acb737dd608d205b1aa54b06a85/2021/04/18/347b8027c32a7921a7d5929a9618666c.png"></p><h1 id="组件重定向"><a href="#组件重定向" class="headerlink" title="组件重定向"></a>组件重定向</h1><ul><li>Vue 中的重定向是作用在路径不同但组件相同的情况下</li></ul><h2 id="配置重定向"><a href="#配置重定向" class="headerlink" title="配置重定向"></a>配置重定向</h2><ul><li>直接调用另一个已配置好的路由对象即可</li><li>比如实现一个退出功能，访问<code>/logout</code>就跳转到<code>/Login</code>登录页面</li><li>跳转就需要用到路由，去<code>router/index.js</code>中配置路由，使用<code>redirect</code>设置跳转路径</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">new</span> Router(&#123;</span><br><span class="line">  routes: [</span><br><span class="line">    &#123;</span><br><span class="line">      path: <span class="string">&quot;/Login&quot;</span>,  <span class="comment">//到时候地址栏会显示的路径</span></span><br><span class="line">      name: <span class="string">&quot;Login&quot;</span>,</span><br><span class="line">      component: Login <span class="comment">// Login是组件的名字，这个路由对应跳转到的组件</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      path:<span class="string">&quot;/logout&quot;</span>,</span><br><span class="line">      redirect:<span class="string">&quot;/Login&quot;</span> <span class="comment">//重定向到登录页面</span></span><br><span class="line">    &#125;,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><ul><li>在<code>main.vue</code>中使用</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">&quot;/logout&quot;</span>&gt;</span>退出<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@54654d5e45313ed487d2610ac9800a25cbbb47e7/2021/04/18/f609fbbce416425657babea9828544de.png"></p><h1 id="参数传递"><a href="#参数传递" class="headerlink" title="参数传递"></a>参数传递</h1><ul><li>我们经常需要把某种模式匹配到的所有路由，全都映射到同个组件。例如，我们有一个 User 组件，对于所有 ID 各不相同的用户，都要使用这个组件来渲染。此时我们就需要传递参数了；</li></ul><h2 id="使用路径匹配方式"><a href="#使用路径匹配方式" class="headerlink" title="使用路径匹配方式"></a>使用路径匹配方式</h2><ul><li>此方法有局限性，<code>/ProductInfo/1</code>后面一定要接一个参数才能访问，而且只能接一个参数</li></ul><h3 id="配置路由-1"><a href="#配置路由-1" class="headerlink" title="配置路由"></a>配置路由</h3><ul><li>修改<code>ProductInfo</code>路由配置</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"> &#123;</span><br><span class="line">   path:<span class="string">&quot;/ProductInfo/:id&quot;</span>,</span><br><span class="line">   name:<span class="string">&quot;ProductLInfo&quot;</span>,</span><br><span class="line">   component: ProductInfo,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="note success simple"><p>说明：主要是在 <code>path</code> 属性中增加了 <code>:id</code> 这样的占位符</p></div><h3 id="传递参数"><a href="#传递参数" class="headerlink" title="传递参数"></a>传递参数</h3><ul><li>在<code>main.vue</code>中配置<code>router-link</code></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">&quot;/ProductInfo/1&quot;</span>&gt;</span>商品信息<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="取得参数"><a href="#取得参数" class="headerlink" title="取得参数"></a>取得参数</h3><ul><li>在<code>ProductInfo.vue</code>中通过插值表达式取值</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">      商品信息...参数为：&#123;&#123;this.$route.params.id&#125;&#125;</span><br><span class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>运行结果取得参数1</li></ul><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@2dda7614359c65b3acc01ae36a99d28c6d0b8fb3/2021/04/18/1459bcaee885c106517516146419d98d.png" width="80%"><ul><li>运行原理</li></ul><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@32faa2def4a8ddd3304ef832519e821efdc22ba2/2021/04/18/7b666edf2cf8aa35d70f133876966d63.png"></p><h2 id="使用-props的方式"><a href="#使用-props的方式" class="headerlink" title="使用 props的方式"></a>使用 props的方式</h2><ul><li>第二种方法参用对象方式的传递，只在传参部分不同</li></ul><h3 id="配置路由-2"><a href="#配置路由-2" class="headerlink" title="配置路由"></a>配置路由</h3><ul><li>修改<code>ProductInfo</code>路由，配置和第一种方法相同</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"> &#123;</span><br><span class="line">   path:<span class="string">&quot;/ProductInfo/:id&quot;</span>,</span><br><span class="line">   name:<span class="string">&quot;ProductInfo&quot;</span>, <span class="comment">//注意这个name参数，后面传参要用到</span></span><br><span class="line">   component: ProductInfo,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="传递参数-1"><a href="#传递参数-1" class="headerlink" title="传递参数"></a>传递参数</h3><ul><li><code>router-link</code></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--params指定参数,可以指定多个参数,以键值对形式存在--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">router-link</span> <span class="attr">:to</span>=<span class="string">&quot;&#123;name:&#x27;ProductInfo&#x27;,params:&#123;id:1001&#125;&#125;&quot;</span>&gt;</span>商品信息<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br></pre></td></tr></table></figure><div class="note success simple"><p>说明：此时我们将 <code>to</code> 改为了 <code>:to</code>，是为了将这一属性当成对象使用，注意 <strong>router-link 中的 name 属性名称</strong> 一定要和 <strong>路由中的 name 属性名称</strong> 匹配，因为这样 Vue 才能找到对应的路由路径；</p></div><h3 id="接收参数"><a href="#接收参数" class="headerlink" title="接收参数"></a>接收参数</h3><ul><li>在目标组件中使用以下来接收参数，接参不变</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">      商品信息...参数为：&#123;&#123;this.$route.params.id&#125;&#125;</span><br><span class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>运行结果取得参数1001</li></ul><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@ab8d7ef6717faa4e5caaee6d91783378c66c1ecb/2021/04/18/e5c835dd0141d90f65db01bace79713d.png" width="60%"><ul><li>运行原理</li></ul><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@6a68b1575e948dca1e337e7efabd9371340f54ab/2021/04/18/306a9dfac1b61b2989757c2c2f1feb0b.png"></p><h1 id="路由钩子与异步请求"><a href="#路由钩子与异步请求" class="headerlink" title="路由钩子与异步请求"></a>路由钩子与异步请求</h1><h2 id="路由中的钩子函数"><a href="#路由中的钩子函数" class="headerlink" title="路由中的钩子函数"></a>路由中的钩子函数</h2><ul><li><code>beforeRouteEnter</code>：在进入路由前执行</li><li><code>beforeRouteLeave</code>：在离开路由前执行</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  props: [<span class="string">&#x27;id&#x27;</span>],</span><br><span class="line">  name: <span class="string">&quot;UserProfile&quot;</span>,</span><br><span class="line">  beforeRouteEnter: <span class="function">(<span class="params">to, <span class="keyword">from</span>, next</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;准备进入个人信息页&quot;</span>);</span><br><span class="line">    next();</span><br><span class="line">  &#125;,</span><br><span class="line">  beforeRouteLeave: <span class="function">(<span class="params">to, <span class="keyword">from</span>, next</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;准备离开个人信息页&quot;</span>);</span><br><span class="line">    next();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>参数说明：</li><li><code>to</code>：路由将要跳转的路径信息</li><li><code>from</code>：路径跳转前的路径信息</li><li><code>next</code>：路由的控制参数<ul><li><code>next()</code> 跳入下一个页面</li><li><code>next(&#39;/path&#39;)</code> 改变路由的跳转方向，使其跳到另一个路由</li><li><code>next(false)</code>  返回原来的页面</li><li><code>next((vm)=&gt;&#123;&#125;)</code>  <strong>仅在 beforeRouteEnter 中可用，vm 是组件实例</strong></li></ul></li></ul><h2 id="在钩子函数中使用异步请求"><a href="#在钩子函数中使用异步请求" class="headerlink" title="在钩子函数中使用异步请求"></a>在钩子函数中使用异步请求</h2><ul><li>安装 Axios</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install axios -s</span><br></pre></td></tr></table></figure><ul><li>引用 Axios</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&#x27;axios&#x27;</span></span><br><span class="line">Vue.prototype.axios = axios;</span><br></pre></td></tr></table></figure><ul><li>在 <code>beforeRouteEnter</code> 中进行异步请求，案例代码如下：</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">    props: [<span class="string">&#x27;id&#x27;</span>],</span><br><span class="line">    name: <span class="string">&quot;UserProfile&quot;</span>,</span><br><span class="line">    beforeRouteEnter: <span class="function">(<span class="params">to, <span class="keyword">from</span>, next</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">&quot;准备进入个人信息页&quot;</span>);</span><br><span class="line">      <span class="comment">// 注意，一定要在 next 中请求，因为该方法调用时 Vue 实例还没有创建，此时无法获取到 this 对象，在这里使用官方提供的回调函数拿到当前实例</span></span><br><span class="line">      next(<span class="function"><span class="params">vm</span> =&gt;</span> &#123;</span><br><span class="line">        vm.getData();</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">    beforeRouteLeave: <span class="function">(<span class="params">to, <span class="keyword">from</span>, next</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">&quot;准备离开个人信息页&quot;</span>);</span><br><span class="line">      next();</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">      getData: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.axios(&#123;</span><br><span class="line">          method: <span class="string">&#x27;get&#x27;</span>,</span><br><span class="line">          url: <span class="string">&#x27;http://localhost:8080/data.json&#x27;</span></span><br><span class="line">        &#125;).then(<span class="function"><span class="keyword">function</span> (<span class="params">repos</span>) </span>&#123;</span><br><span class="line">          <span class="built_in">console</span>.log(repos);</span><br><span class="line">        &#125;).catch(<span class="function"><span class="keyword">function</span> (<span class="params">error</span>) </span>&#123;</span><br><span class="line">          <span class="built_in">console</span>.log(error);</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Webpack-Vue&quot;&gt;&lt;a href=&quot;#Webpack-Vue&quot; class=&quot;headerlink&quot; title=&quot;Webpack-Vue&quot;&gt;&lt;/a&gt;Webpack-Vue&lt;/h1&gt;&lt;h2 id=&quot;创建工程&quot;&gt;&lt;a href=&quot;#创建工程&quot; class=&quot;</summary>
      
    
    
    
    <category term="Web前端" scheme="http://xiaoliblog.cn/categories/Web%E5%89%8D%E7%AB%AF/"/>
    
    <category term="Vue.js" scheme="http://xiaoliblog.cn/categories/Web%E5%89%8D%E7%AB%AF/Vue-js/"/>
    
    
    <category term="Vue.js" scheme="http://xiaoliblog.cn/tags/Vue-js/"/>
    
  </entry>
  
  <entry>
    <title>Vue.js前端框架🎯路由模块</title>
    <link href="http://xiaoliblog.cn/page/Vuejs08.html"/>
    <id>http://xiaoliblog.cn/page/Vuejs08.html</id>
    <published>2021-04-17T16:00:00.000Z</published>
    <updated>2021-04-18T11:42:05.892Z</updated>
    
    <content type="html"><![CDATA[<h1 id="路由模块"><a href="#路由模块" class="headerlink" title="路由模块"></a>路由模块</h1><ul><li>官方文档：<a href="https://router.vuejs.org/zh/">https://router.vuejs.org/zh/</a></li><li>路由器的功能：在数据通信时 帮你选择通信的路线</li><li>在vue中的路由，能够帮助我们在一个vue组件中<strong>实现其他组件的相互切换</strong>。也就是说，可以通过<strong>路由模块</strong>，再创建<strong>路由表</strong>，将制定的组件显示在<strong>路由视图</strong>中</li></ul><h2 id="安装路由模块"><a href="#安装路由模块" class="headerlink" title="安装路由模块"></a>安装路由模块</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install vue-router -s</span><br></pre></td></tr></table></figure><h2 id="设计路由界面"><a href="#设计路由界面" class="headerlink" title="设计路由界面"></a>设计路由界面</h2><ul><li>创建<code>components</code>文件夹，文件夹内分别创建<code>Products</code>、<code>Home</code>组件</li><li>Products.vue</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span>&gt;</span>商品列表<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>Home.vue</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@b197048ed0ad2c79566dc697dfb605e9a56f5b8b/2021/04/16/5713fe281d93aec83911ff723b41960e.png" width="80%"><h2 id="创建静态路由表"><a href="#创建静态路由表" class="headerlink" title="创建静态路由表"></a>创建静态路由表</h2><ul><li>在<code>src</code>下创建<code>routes.js</code>（原webpack-simple模版）</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Home <span class="keyword">from</span> <span class="string">&#x27;./component/Home.vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> Products <span class="keyword">from</span> <span class="string">&#x27;./component/Products.vue&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//创建路由表,path值即为路由链接的to值,component用于标识一个组件</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> routes = [</span><br><span class="line">   &#123;<span class="attr">path</span>:<span class="string">&#x27;/Home&#x27;</span>,<span class="attr">component</span>:Home&#125;,</span><br><span class="line">   &#123;<span class="attr">path</span>:<span class="string">&#x27;/Products&#x27;</span>,<span class="attr">component</span>:Products&#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h2 id="引入路由模块并使用"><a href="#引入路由模块并使用" class="headerlink" title="引入路由模块并使用"></a>引入路由模块并使用</h2><ul><li>在<code>main.js</code>中引入路由模块并使用，如果在一个模块化工程中使用它，必须要通过 <code>Vue.use()</code> 明确地安装路由功能：</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">&#x27;./App.vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> VueRouter <span class="keyword">from</span> <span class="string">&#x27;vue-router&#x27;</span> <span class="comment">//1.引入路由模块</span></span><br><span class="line"><span class="keyword">import</span> &#123;routes&#125; <span class="keyword">from</span> <span class="string">&#x27;./route.js&#x27;</span>  <span class="comment">//2.引入静态路由表</span></span><br><span class="line"></span><br><span class="line">Vue.use(VueRouter)<span class="comment">//3.使用路由模块</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//4.创建一个VueRouter模块的实例</span></span><br><span class="line"><span class="keyword">const</span> router = <span class="keyword">new</span> VueRouter(&#123;</span><br><span class="line">  routes:routes</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  el: <span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line">  router,<span class="comment">//5.把router实例放入到vue实例中</span></span><br><span class="line">  render: <span class="function"><span class="params">h</span> =&gt;</span> h(App)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="路由初体验"><a href="#路由初体验" class="headerlink" title="路由初体验"></a>路由初体验</h2><ul><li>修改App.vue</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">router-view</span>&gt;</span><span class="tag">&lt;/<span class="name">router-view</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">  name:<span class="string">&quot;app&quot;</span></span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>改变url，发现<code>&lt;router-view&gt;&lt;/router-view&gt;</code>中的内容发生改变<ul><li><a href="http://localhost:8080/#/Home">http://localhost:8080/#/Home</a>    显示home首页</li><li><a href="http://localhost:8080/#/Products">http://localhost:8080/#/Products</a>     显示produtcs商品列表</li></ul></li></ul><div class="note success simple"><p>在项目模板下使用启动项目命令：<code>npm run dev</code></p></div><h2 id="链接路由的实现"><a href="#链接路由的实现" class="headerlink" title="链接路由的实现"></a>链接路由的实现</h2><ul><li>修改App.vue</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--to的参数就是route.js路由表里的path--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">&quot;./Home&quot;</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">&quot;./Products&quot;</span>&gt;</span>商品列表<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!--显示组件的内容--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">router-view</span>&gt;</span><span class="tag">&lt;/<span class="name">router-view</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">  name:<span class="string">&quot;app&quot;</span></span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>可以发现像两个a标签，<code>&lt;router-view&gt;&lt;/router-view&gt;</code>就是页面的内容</li><li>路由过程分析：</li></ul><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@8e7af3107ee189637f3c008db65853a6248a2c0b/2021/04/16/01e110d1e65a820fafde25a029ec3220.png"></p><h1 id="路由之间的参数传递"><a href="#路由之间的参数传递" class="headerlink" title="路由之间的参数传递"></a>路由之间的参数传递</h1><h2 id="设参"><a href="#设参" class="headerlink" title="设参"></a>设参</h2><ul><li>通过<code>route.js</code>路由表，设置路由参数</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//创建路由表,添加:mid</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> routes = [</span><br><span class="line">&#123;<span class="attr">path</span>:<span class="string">&#x27;/Home&#x27;</span>,<span class="attr">component</span>:Home&#125;,</span><br><span class="line">&#123;<span class="attr">path</span>:<span class="string">&#x27;/Products/:mid&#x27;</span>,<span class="attr">component</span>:Products&#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h2 id="传参"><a href="#传参" class="headerlink" title="传参"></a>传参</h2><ul><li>通过<code>router-link</code>的<code>to</code>访问路径时携带参数</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">&quot;/Products/1&quot;</span> <span class="attr">tag</span>=<span class="string">&quot;li&quot;</span> <span class="attr">active-class</span>=<span class="string">&quot;active&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span>&gt;</span>手机<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="接参"><a href="#接参" class="headerlink" title="接参"></a>接参</h2><ul><li>在目标<code>Products.vue</code>中，通过vue中的<code>$route.params.mid</code></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        &#123;&#123;id&#125;&#125;商品列表，此时这个页面要得到一个商品分类的ID，然后根据商品分离的ID，去数据库查询所有是该分离的商品，再显示在这个页面上</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">    name:<span class="string">&quot;Product&quot;</span>,</span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="javascript">            id:<span class="built_in">this</span>.$route.params.mid</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>实际改变的还是同一个页面，这种机制只能每一个参数对应一个Vue组件</li></ul><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@7d3e9fb3f44f840a0429015c3ac071c06669cdc4/2021/04/16/88a5f31f714a53f0b2f390bc808f6adb.png"></p><h1 id="路由跳转的两种方式"><a href="#路由跳转的两种方式" class="headerlink" title="路由跳转的两种方式"></a>路由跳转的两种方式</h1><ul><li>通过HTML中的路由<code>&lt;router-link to=&quot;路由地址&quot;&gt;</code>链接进行跳转</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">&quot;./Home&quot;</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>通过js实现路由的跳转</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;button type=<span class="string">&quot;button&quot;</span> @click=<span class="string">&quot;btnfn&quot;</span>&gt;点我&lt;/button&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  name: <span class="string">&quot;app&quot;</span>,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    btnfn:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">      <span class="built_in">this</span>.$router.push(<span class="string">&quot;/Products&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;路由模块&quot;&gt;&lt;a href=&quot;#路由模块&quot; class=&quot;headerlink&quot; title=&quot;路由模块&quot;&gt;&lt;/a&gt;路由模块&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;官方文档：&lt;a href=&quot;https://router.vuejs.org/zh/&quot;&gt;https://rout</summary>
      
    
    
    
    <category term="Web前端" scheme="http://xiaoliblog.cn/categories/Web%E5%89%8D%E7%AB%AF/"/>
    
    <category term="Vue.js" scheme="http://xiaoliblog.cn/categories/Web%E5%89%8D%E7%AB%AF/Vue-js/"/>
    
    
    <category term="Vue.js" scheme="http://xiaoliblog.cn/tags/Vue-js/"/>
    
  </entry>
  
  <entry>
    <title>Vue.js前端框架🎯Axios发送Ajax</title>
    <link href="http://xiaoliblog.cn/page/Vuejs07.html"/>
    <id>http://xiaoliblog.cn/page/Vuejs07.html</id>
    <published>2021-04-16T16:00:00.000Z</published>
    <updated>2021-04-16T13:58:01.086Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Axios发送Ajax"><a href="#Axios发送Ajax" class="headerlink" title="Axios发送Ajax"></a>Axios发送Ajax</h1><ul><li>Axios 是一个开源的可以用在浏览器端和 NodeJS 的异步通信框架，她的主要作用就是实现 AJAX 异步通信，其功能特点如下：<ul><li>从浏览器中创建 <code>XMLHttpRequests</code></li><li>从 <code>node.js</code> 创建 <code>http</code> 请求</li><li>支持 <code>Promise API</code></li><li>拦截请求和响应</li><li>转换请求数据和响应数据</li><li>取消请求</li><li>自动转换 <code>JSON</code> 数据</li><li>客户端支持防御 <code>XSRF</code>（跨站请求伪造）</li></ul></li><li>GitHub：<a href="https://github.com/axios/axios">https://github.com/axios/axios</a></li><li>由于 Vue.js 是一个 <strong>视图层框架</strong> 并且作者（尤雨溪）严格准守 <code>SoC</code> （关注度分离原则），所以 Vue.js 并不包含 AJAX 的通信功能，为了解决通信问题，作者单独开发了一个名为 <code>vue-resource</code> 的插件，不过在进入 2.0 版本以后停止了对该插件的维护并推荐了 Axios 框架</li></ul><h1 id="引入Boostrap"><a href="#引入Boostrap" class="headerlink" title="引入Boostrap"></a>引入Boostrap</h1><ul><li>引入Boostrap等外部文件的CDN都在<code>index.html</code>中引入，因为vue组件最后都有经过index页面</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>vue-cli-demo<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/bootstrap@3.3.7/dist/css/bootstrap.min.css&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;/dist/build.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">     <span class="comment">&lt;!-- jQuery (Bootstrap 的所有 JavaScript 插件都依赖 jQuery，所以必须放在前边) --&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/jquery@1.12.4/dist/jquery.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">     <span class="comment">&lt;!-- 加载 Bootstrap 的所有 JavaScript 插件。你也可以根据需要只加载单个插件。 --&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/bootstrap@3.3.7/dist/js/bootstrap.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>修改<code>App.vue</code>，创建表单，并通过<code>v-model</code>绑定<code>data</code>中的属性，此表单用于提交测试</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;width:50%&quot;</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">h3</span>&gt;</span>Regist<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">h5</span>&gt;</span>Email<span class="tag">&lt;/<span class="name">h5</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span> <span class="attr">v-model.trim</span>=<span class="string">&quot;mail&quot;</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">          &#123;&#123;mail&#125;&#125;</span><br><span class="line">          <span class="tag">&lt;<span class="name">h5</span>&gt;</span>Password<span class="tag">&lt;/<span class="name">h5</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span> <span class="attr">v-model.lazy</span>=<span class="string">&quot;password&quot;</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">          &#123;&#123;password&#125;&#125;</span><br><span class="line">          <span class="tag">&lt;<span class="name">h5</span>&gt;</span>Gender<span class="tag">&lt;/<span class="name">h5</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;gender&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;gender&quot;</span> <span class="attr">value</span>=<span class="string">&quot;female&quot;</span> /&gt;</span>男</span><br><span class="line">          <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;gender&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;gender&quot;</span> <span class="attr">value</span>=<span class="string">&quot;male&quot;</span> /&gt;</span>女<span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">h5</span>&gt;</span>Hobby<span class="tag">&lt;/<span class="name">h5</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;hobby&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;hobby&quot;</span> <span class="attr">value</span>=<span class="string">&quot;music&quot;</span>&gt;</span>音乐</span><br><span class="line">          <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;hobby&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;hobby&quot;</span> <span class="attr">value</span>=<span class="string">&quot;movie&quot;</span>&gt;</span>电影</span><br><span class="line">          <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;hobby&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;hobby&quot;</span> <span class="attr">value</span>=<span class="string">&quot;sport&quot;</span>&gt;</span>运动</span><br><span class="line">          &#123;&#123;hobby&#125;&#125;</span><br><span class="line">         <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-success&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;registbtn&quot;</span>&gt;</span></span><br><span class="line">          注册</span><br><span class="line">        <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">   <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">         mail:<span class="string">&quot;xxx@126.com&quot;</span>,</span></span><br><span class="line"><span class="javascript">         password:<span class="string">&quot;&quot;</span>,</span></span><br><span class="line"><span class="javascript">         gender:<span class="string">&quot;&quot;</span>,</span></span><br><span class="line">         hobby:[]</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;,</span><br><span class="line">   methods:&#123;</span><br><span class="line"><span class="javascript">      changeName:<span class="function"><span class="keyword">function</span>(<span class="params">name</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">         <span class="built_in">this</span>.name = name</span></span><br><span class="line"><span class="javascript">      &#125;,<span class="comment">//点击注册就发送Ajax请求</span></span></span><br><span class="line"><span class="javascript">      <span class="comment">//方法可以改成created()，即在创建的时候发送Ajax请求</span></span></span><br><span class="line"><span class="javascript">      registbtn: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">         <span class="built_in">this</span>.axios(&#123;</span></span><br><span class="line"><span class="javascript">         method: <span class="string">&quot;get&quot;</span>,</span></span><br><span class="line"><span class="javascript">         <span class="comment">//url为SSM框架的controller接口</span></span></span><br><span class="line"><span class="javascript">         url:<span class="string">&#x27;http://bit.ly/2mTM3nY&#x27;</span>,</span></span><br><span class="line">         data: &#123;&#125;</span><br><span class="line"><span class="javascript">      &#125;).then(<span class="function"><span class="keyword">function</span>(<span class="params">response</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(response.data);</span></span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@45bc68bb3ac92aceebbf96e15c1590cc3e70ee36/2021/04/15/98d8e10830cbb6cffb3d8e38f5c335f8.png" width="50%"><ul><li>使用<code>v-model</code>绑定表单控件，<code>v-model</code>修饰符<ul><li><code>lazy</code>：失去焦点时才会绑定内容</li><li><code>trim</code>： 绑定的内容自动去除开头和结尾的所有的空格，字符串内部的空格不去除</li></ul></li></ul><h1 id="Axios的使用"><a href="#Axios的使用" class="headerlink" title="Axios的使用"></a>Axios的使用</h1><ul><li>安装<code>vue axios</code></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save axios vue-axios</span><br></pre></td></tr></table></figure><ul><li>在<code>main.js</code>中引入，在项目中使用axios模块</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&#x27;axios&#x27;</span></span><br><span class="line"><span class="keyword">import</span> VueAxios <span class="keyword">from</span> <span class="string">&#x27;vue-axios&#x27;</span></span><br><span class="line"></span><br><span class="line">Vue.use(VueAxios, axios)</span><br></pre></td></tr></table></figure><ul><li>发送<code>Ajax</code>请求</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">this</span>.axios(&#123;</span><br><span class="line">  method:<span class="string">&#x27;get&#x27;</span>,</span><br><span class="line">  <span class="comment">//url应为SSM框架的controller接口</span></span><br><span class="line">  url:<span class="string">&#x27;http://bit.ly/2mTM3nY&#x27;</span>,</span><br><span class="line">  data:&#123;&#125;</span><br><span class="line">&#125;)</span><br><span class="line">  .then(<span class="function"><span class="keyword">function</span> (<span class="params">response</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(response.data)</span><br><span class="line">  &#125;);</span><br></pre></td></tr></table></figure><h1 id="后端接口"><a href="#后端接口" class="headerlink" title="后端接口"></a>后端接口</h1><ul><li>简单搭建一个SpringMVC项目</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.lzy.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@RequestMapping(value=&quot;regist&quot;,method=RequestMethod.GET)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">regist</span><span class="params">(String mail,String password)</span></span>&#123;</span><br><span class="line">        System.out.println(mail);</span><br><span class="line">        System.out.println(password);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;regist success&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>并提供<code>postman</code>进行接口测试</li></ul><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@a5a667cf4816eafcdb996bceafe2a08321e4855d/2021/04/15/994a68e955cb296cabf6fbfe86cc050b.png"></p><ul><li>服务端解决跨域问题，在<code>spring-mvc.xml</code>中加入上述这一段。其中，<code>allowed-origins</code>指的是允许的访问源的域名，”<code>*</code>“表示任何人都可以访问，也可以指明具体的域名</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mvc:cors</span>&gt;</span>  </span><br><span class="line">   <span class="tag">&lt;<span class="name">mvc:mapping</span> <span class="attr">path</span>=<span class="string">&quot;/**&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">allowed-origins</span>=<span class="string">&quot;*&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">allowed-methods</span>=<span class="string">&quot;POST, GET, OPTIONS, DELETE, PUT,PATCH&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">allowed-headers</span>=<span class="string">&quot;Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">allow-credentials</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mvc:cors</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>在<code>App.vue</code>中修改后端接口，提供注册按钮发送Ajax的 get请求</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      mail: <span class="string">&quot;xxx@126.com&quot;</span>,</span><br><span class="line">      password: <span class="string">&quot;&quot;</span>,</span><br><span class="line">      gender: <span class="string">&quot;&quot;</span>,</span><br><span class="line">      hobby: []</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    changeName: <span class="function"><span class="keyword">function</span>(<span class="params">name</span>) </span>&#123;</span><br><span class="line">      <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">//点击注册就发送Ajax请求</span></span><br><span class="line">    registbtn: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="built_in">this</span>.axios(&#123;</span><br><span class="line">        method: <span class="string">&quot;get&quot;</span>,</span><br><span class="line">        <span class="comment">//url为SSM框架的controller接口</span></span><br><span class="line">        url: <span class="string">&#x27;http://localhost:8080/regist?mail=&#x27;</span>+<span class="built_in">this</span>.mail+<span class="string">&#x27;&amp;password=&#x27;</span>+<span class="built_in">this</span>.password, <span class="comment">//注意 get请求的参数一定是在url之后</span></span><br><span class="line">        data: &#123;&#125;</span><br><span class="line">      &#125;).then(<span class="function"><span class="keyword">function</span>(<span class="params">response</span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(response.data);  <span class="comment">//返回的结果在response里</span></span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><ul><li>发送<code>Post</code>请求</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">this</span>.axios(&#123;</span><br><span class="line">  method:<span class="string">&#x27;post&#x27;</span>,</span><br><span class="line">  url:<span class="string">&#x27;http://localhost:8090/regist,</span></span><br><span class="line"><span class="string">data:&#123;</span></span><br><span class="line"><span class="string">   mail:this.mail,</span></span><br><span class="line"><span class="string">   password:this.password</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&#125;).then(function (response) &#123;</span></span><br><span class="line"><span class="string">    console.log(response.data)</span></span><br><span class="line"><span class="string">  &#125;);</span></span><br></pre></td></tr></table></figure><ul><li>解决axios无法传递data中的参数问题<ul><li>原因：默认情况下发送axios时请求头中的内容类型为：</li></ul></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Content-Type:application/json;charset=UTF-8</span><br></pre></td></tr></table></figure><ul><li>而实际服务端需要的是：</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Content-Type:application/x-www-form-urlencoded</span><br></pre></td></tr></table></figure><ul><li>因此，使用axios的qs内置库中的方法进行内容类型的转换。</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Qs <span class="keyword">from</span> <span class="string">&#x27;qs&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">this</span>.axios(&#123;</span><br><span class="line">   method:<span class="string">&#x27;post&#x27;</span>,</span><br><span class="line">   url:<span class="string">&#x27;http://localhost:8081/regist&#x27;</span>,</span><br><span class="line">   transformRequest: [<span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> Qs.stringify(data)</span><br><span class="line">&#125;],</span><br><span class="line">   data:&#123;</span><br><span class="line">      email:<span class="built_in">this</span>.email</span><br><span class="line">   &#125;</span><br><span class="line">&#125;)</span><br><span class="line">.then(<span class="function"><span class="keyword">function</span> (<span class="params">response</span>) </span>&#123;</span><br><span class="line">   alert(response.data.message)</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Axios发送Ajax&quot;&gt;&lt;a href=&quot;#Axios发送Ajax&quot; class=&quot;headerlink&quot; title=&quot;Axios发送Ajax&quot;&gt;&lt;/a&gt;Axios发送Ajax&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;Axios 是一个开源的可以用在浏览器端和 NodeJS</summary>
      
    
    
    
    <category term="Web前端" scheme="http://xiaoliblog.cn/categories/Web%E5%89%8D%E7%AB%AF/"/>
    
    <category term="Vue.js" scheme="http://xiaoliblog.cn/categories/Web%E5%89%8D%E7%AB%AF/Vue-js/"/>
    
    
    <category term="Vue.js" scheme="http://xiaoliblog.cn/tags/Vue-js/"/>
    
  </entry>
  
  <entry>
    <title>Vue.js前端框架🎯跨域问题</title>
    <link href="http://xiaoliblog.cn/page/Vuejs06.html"/>
    <id>http://xiaoliblog.cn/page/Vuejs06.html</id>
    <published>2021-04-16T13:38:03.112Z</published>
    <updated>2021-04-16T13:44:07.369Z</updated>
    
    <content type="html"><![CDATA[<h1 id="跨域问题"><a href="#跨域问题" class="headerlink" title="跨域问题"></a>跨域问题</h1><ul><li>在浏览器端进行 Ajax 请求时会出现跨域问题，那么什么是跨域，如何解决跨域呢？先看浏览器端出现跨域问题的现象，如下图所示</li></ul><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@0404df6a7c0ec1aa335bc17b111d53b2eec3a677/2021/04/16/791b95db8f1792854f7bc36d8588f4da.png"></p><h2 id="跨域与同源"><a href="#跨域与同源" class="headerlink" title="跨域与同源"></a>跨域与同源</h2><ul><li>跨域，指的是浏览器不能执行其他网站的脚本。它是由浏览器的同源策略造成的，是浏览器对JavaScript施加的安全限制。</li><li>跨域问题是浏览器对js的一种安全限制，也就是说浏览器的页面内去访问其他服务器上的资源的时候，就会出现跨域。同源策略明确了什么情况是属于跨域。<strong>所谓的同源策略，指的是协议、域名、端口完全相同，才是安全的</strong></li><li>所谓同源是指，域名,协议，端口均相同<ul><li><a href="http://www.qf.com/">http://www.qf.com/</a> -&gt; <a href="http://admin.qf.com/">http://admin.qf.com/</a> 跨域</li><li><a href="http://www.qf.com/">http://www.qf.com/</a> -&gt; <a href="http://www.qf.com/">http://www.qf.com/</a> 非跨域</li><li><a href="http://www.qf.com/">http://www.qf.com/</a> -&gt; <a href="http://www.qf.com:8080/">http://www.qf.com:8080/</a> 跨域</li><li><a href="http://www.qf.com/">http://www.qf.com/</a> -&gt; <a href="https://www.qf.com/">https://www.qf.com/</a> 跨域</li></ul></li><li>跨域有以下解决方法<ul><li>使用<code>CORS</code>（跨资源共享）解决跨域问题 </li><li>使用<code>JSONP</code>解决跨域问题</li><li>使用<code>Nginx</code>反向代理解决跨域问题</li></ul></li></ul><h2 id="CORS请求原理"><a href="#CORS请求原理" class="headerlink" title="CORS请求原理"></a>CORS请求原理</h2><ul><li><code>CORS</code>是一个W3C标准，全称是”跨域资源共享”（Cross-origin resource sharing）。它允许浏览器向跨源服务器，发出<code>XMLHttpRequest</code>请求，从而克服了<code>AJAX</code>只能同源使用的限制</li><li>CORS需要浏览器和服务器同时支持。目前，所有浏览器都支持该功能，IE 浏览器不能低于IE10。整个CORS通信过程，都是浏览器自动完成，不需要用户参与。对于开发者来说，CORS通信与同源的AJAX通信没有差别，代码完全一样。浏览器一旦发现AJAX请求跨源，就会自动添加一些附加的头信息，有时还会多出一次附加的请求，但用户不会有感觉。</li><li>因此，实现CORS通信的关键是服务器。只要服务器实现了CORS接口，就可以跨源通信（在<code>header</code>中设置: <code>&quot;Access-Control-Allow-0rigin&quot;,&quot;*&quot;)</code>，比如在<code>spring-mvc.xml</code>中配置</li><li>这个跨域访问的解决方案的安全基础是基<strong>JavaScript无法控制该HTTP头</strong>，它需要通过目标域返回的HTTP头来授权是否允许跨域访问。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">response.addHeader(‘Access-Control-Allow-Origin:*’);<span class="comment">//允许所有来源访问 </span></span><br><span class="line">response.addHeader(‘Access-Control-Allow-Method:POST,GET’);<span class="comment">//允许访问的方式</span></span><br></pre></td></tr></table></figure><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@7e68e26949a20147d1911cf9eef48f1451f22715/2021/04/16/f27f94f3c32ddc976e747adb52e67f1e.png" width="60%"><ul><li>关于CORS，强烈推荐阅读👉<a href="https://segmentfault.com/a/1190000012469713">跨域资源共享 CORS 详解(阮一峰)</a></li></ul><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@243a9574146b73eac73ffad84267e5ee1506ee57/2021/04/16/709b2f56657eee68a963be80cb0802bc.png"></p><h2 id="JSONP方法"><a href="#JSONP方法" class="headerlink" title="JSONP方法"></a>JSONP方法</h2><ul><li>JSONP （JSON with Padding）是JSON的一种“使用模式”，可用于解决主流浏览器的跨域数据访问的问题</li><li>在同源策略下，在某个服务器下的页面是无法获取到该服务器以外的数据的，即一般的<code>ajax</code>是不能进行跨域请求的。但 <code>img</code>、<code>iframe</code> 、<code>script</code>等标签是个例外，这些标签可以通过<code>src</code>属性请求到其他服务器上的数据</li><li>利用<code>&lt;script&gt;</code>标签的开放策略，我们可以实现跨域请求数据，当然这需要服务器端的配合。 Jquery中ajax的核心是通过 <code>XmlHttpRequest</code>获取非本页内容，<strong>而<code>jsonp</code>的核心则是动态添加<code>&lt;script&gt;</code>标签来调用服务器提供的 js脚本</strong></li><li>当我们正常地请求一个JSON数据的时候，服务端返回的是一串JSON类型的数据，而我们使用 JSONP模式来请求数据的时候服务端返回的是一段可执行的JavaScript代码。因为jsonp跨域的原理就是用的动态加载<code>&lt;script&gt;</code>的<code>src</code> ，所以我们只能把参数通过<code>url</code>的方式传递，<strong>所以jsonp的 <code>type</code>类型只能是<code>get</code> ！</strong></li><li>JSONP之所以能够用来解决跨域方案,主要是因为<code> &lt;script&gt;</code> 脚本拥有跨域能力，而JSONP正是利用这一点来实现。具体原理如图</li></ul><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@8dac79bb1ccc286052316b9f27b33a27d2a6b8ee/2021/04/16/0837346cc76b1310af9cc6e862b60833.png"></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//前端</span></span><br><span class="line">$.ajax(&#123;</span><br><span class="line">   type : <span class="string">&quot;GET&quot;</span>,</span><br><span class="line">   <span class="keyword">async</span> : <span class="literal">false</span>,</span><br><span class="line">   url : <span class="string">&quot;http://a.a.com/a/FromServlet?userName=644064&quot;</span>,</span><br><span class="line">   dataType : <span class="string">&quot;jsonp&quot;</span>,<span class="comment">//数据类型为jsonp  </span></span><br><span class="line">   jsonp : <span class="string">&quot;jsonpCallback&quot;</span>,<span class="comment">//服务端用于接收callback调用的function名的参数</span></span><br><span class="line">   success : <span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">      alert(data[<span class="string">&quot;userName&quot;</span>]);</span><br><span class="line">   &#125;,</span><br><span class="line">   error : <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">      alert(<span class="string">&#x27;fail&#x27;</span>);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//后端</span></span><br><span class="line">   String jsonpCallback = request.getParameter(<span class="string">&quot;jsonpCallback&quot;</span>);</span><br><span class="line">   <span class="comment">//构造回调函数格式jsonpCallback(数据)</span></span><br><span class="line">   resp.getWriter().println(jsonpCallback+<span class="string">&quot;(&quot;</span>+jsonObject.toJSONString()+<span class="string">&quot;)&quot;</span>);</span><br></pre></td></tr></table></figure><div class="note success simple"><p>推荐使用CORS解决跨域问题，其他解决方法请参考：<a href="https://blog.csdn.net/itcats_cn/article/details/82318092">https://blog.csdn.net/itcats_cn/article/details/82318092</a></p></div><h2 id="Nginx反向代理"><a href="#Nginx反向代理" class="headerlink" title="Nginx反向代理"></a>Nginx反向代理</h2><ul><li>以上跨域问题解决方案都需要服务器支持，当服务器无法设置<code>header</code>或提供<code>callback</code> 时我们就可以采用Nginx反向代理的方式解决跨域问题。</li><li>Nginx配置跨域案例，在<code>nginx.conf</code>的<code>location</code> 中增加如下配置:</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">add_ header Access -Control -Allow-Origin *或域名;</span><br><span class="line">add_ header Access-Control -Allow-Headers X- Requested-With;</span><br><span class="line">add_ header Access-Control -Allow-Methods GET, POST, OPTIONS; </span><br></pre></td></tr></table></figure><ul><li>比如</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">user  nginx;</span><br><span class="line">worker_processes  1;</span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections  1024;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">    include       mime.types;</span><br><span class="line">    default_type  application&#x2F;octet-stream;</span><br><span class="line"></span><br><span class="line">    sendfile        on;</span><br><span class="line"></span><br><span class="line">    keepalive_timeout  65;</span><br><span class="line"></span><br><span class="line">    server &#123;</span><br><span class="line">        listen 80;</span><br><span class="line">        server_name 192.168.75.128;</span><br><span class="line">        location &#x2F; &#123;</span><br><span class="line">            add_header Access-Control-Allow-Origin *;</span><br><span class="line">            add_header Access-Control-Allow-Headers X-Requested-With;</span><br><span class="line">            add_header Access-Control-Allow-Methods GET,POST,OPTIONS;</span><br><span class="line"></span><br><span class="line">            root &#x2F;usr&#x2F;share&#x2F;nginx&#x2F;wwwroot&#x2F;cdn;</span><br><span class="line">            index index.jsp index.html index.htm;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="SpringMVC-配置-CORS"><a href="#SpringMVC-配置-CORS" class="headerlink" title="SpringMVC 配置 CORS"></a>SpringMVC 配置 CORS</h1><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mvc:cors</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:mapping</span> <span class="attr">path</span>=<span class="string">&quot;/**&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">allowed-origins</span>=<span class="string">&quot;*&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">allowed-methods</span>=<span class="string">&quot;POST, GET, OPTIONS, DELETE, PUT,PATCH&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">allowed-headers</span>=<span class="string">&quot;Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">allow-credentials</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mvc:cors</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>在<code>spring-mvc.xml</code>中加入上述这一段。其中，<code>allowed-origins</code>指的是允许的访问源的域名，”<code>*</code>“表示任何人都可以访问，也可以指明具体的域名，比如下图：</li></ul><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@79ff49bcacac36e840be6f25a12d5c6e404eadee/2021/04/16/d47a2f9bfbd850913d0e51ab0508543c.png"></p><h1 id="拦截器的方式配置解决跨域"><a href="#拦截器的方式配置解决跨域" class="headerlink" title="拦截器的方式配置解决跨域"></a>拦截器的方式配置解决跨域</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.HandlerInterceptor;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.ModelAndView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CorsInterceptor</span> <span class="keyword">implements</span> <span class="title">HandlerInterceptor</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">preHandle</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object o)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;CorsInterceptor.preHandle&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">postHandle</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object o, ModelAndView modelAndView)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">// Access-Control-Allow-Origin</span></span><br><span class="line">        String origin = request.getHeader(<span class="string">&quot;Origin&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;origin..........&quot;</span>+origin);</span><br><span class="line"></span><br><span class="line">        response.setHeader(<span class="string">&quot;Access-Control-Allow-Origin&quot;</span>, origin);</span><br><span class="line">        response.setHeader(<span class="string">&quot;Vary&quot;</span>, <span class="string">&quot;Origin&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Access-Control-Max-Age</span></span><br><span class="line">        response.setHeader(<span class="string">&quot;Access-Control-Max-Age&quot;</span>, <span class="string">&quot;3600&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Access-Control-Allow-Credentials</span></span><br><span class="line">        response.setHeader(<span class="string">&quot;Access-Control-Allow-Credentials&quot;</span>, <span class="string">&quot;true&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Access-Control-Allow-Methods</span></span><br><span class="line">        response.setHeader(<span class="string">&quot;Access-Control-Allow-Methods&quot;</span>, <span class="string">&quot;POST, GET, OPTIONS, DELETE&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Access-Control-Allow-Headers</span></span><br><span class="line">        response.setHeader(<span class="string">&quot;Access-Control-Allow-Headers&quot;</span>,</span><br><span class="line">                <span class="string">&quot;Origin, X-Requested-With, Content-Type,Accept,X-Custom-Header,Set-Cookie&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">afterCompletion</span><span class="params">(HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse, Object o, Exception e)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;CorsInterceptor.afterCompletion&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="Spring-Boot-配置-CORS"><a href="#Spring-Boot-配置-CORS" class="headerlink" title="Spring Boot 配置 CORS"></a>Spring Boot 配置 CORS</h1><h2 id="使用-Java-配置的方式"><a href="#使用-Java-配置的方式" class="headerlink" title="使用 Java 配置的方式"></a>使用 Java 配置的方式</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 跨域配置</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;Title: CorsConfiguration&lt;/p&gt;</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;Description: &lt;/p&gt;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CORSConfiguration</span> <span class="keyword">extends</span> <span class="title">WebMvcConfigurerAdapter</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addCorsMappings</span><span class="params">(CorsRegistry registry)</span> </span>&#123;</span><br><span class="line">        registry.addMapping(<span class="string">&quot;/**&quot;</span>).allowedOrigins(<span class="string">&quot;*&quot;</span>)</span><br><span class="line">                .allowedMethods(<span class="string">&quot;GET&quot;</span>, <span class="string">&quot;HEAD&quot;</span>, <span class="string">&quot;POST&quot;</span>, <span class="string">&quot;PUT&quot;</span>, <span class="string">&quot;DELETE&quot;</span>, <span class="string">&quot;OPTIONS&quot;</span>)</span><br><span class="line">                .allowCredentials(<span class="keyword">false</span>).maxAge(<span class="number">3600</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="使用注解的方式"><a href="#使用注解的方式" class="headerlink" title="使用注解的方式"></a>使用注解的方式</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@CrossOrigin(origins = &quot;*&quot;, maxAge = 3600)</span></span><br></pre></td></tr></table></figure><h2 id="解决跨域后的效果图"><a href="#解决跨域后的效果图" class="headerlink" title="解决跨域后的效果图"></a>解决跨域后的效果图</h2><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@17bd07843282fdf7989329303db5fd44bd1a09e8/2021/04/16/1c2287f977a333c127a51ce7c19941db.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;跨域问题&quot;&gt;&lt;a href=&quot;#跨域问题&quot; class=&quot;headerlink&quot; title=&quot;跨域问题&quot;&gt;&lt;/a&gt;跨域问题&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;在浏览器端进行 Ajax 请求时会出现跨域问题，那么什么是跨域，如何解决跨域呢？先看浏览器端出现跨域问题的现象，</summary>
      
    
    
    
    <category term="Web前端" scheme="http://xiaoliblog.cn/categories/Web%E5%89%8D%E7%AB%AF/"/>
    
    <category term="Vue.js" scheme="http://xiaoliblog.cn/categories/Web%E5%89%8D%E7%AB%AF/Vue-js/"/>
    
    
    <category term="Vue.js" scheme="http://xiaoliblog.cn/tags/Vue-js/"/>
    
  </entry>
  
  <entry>
    <title>Vue.js前端框架🎯Axios网络应用</title>
    <link href="http://xiaoliblog.cn/page/Vuejs05.html"/>
    <id>http://xiaoliblog.cn/page/Vuejs05.html</id>
    <published>2021-04-15T16:00:00.000Z</published>
    <updated>2021-04-15T14:20:38.166Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Axios网络应用"><a href="#Axios网络应用" class="headerlink" title="Axios网络应用"></a>Axios网络应用</h1><h2 id="axios基础"><a href="#axios基础" class="headerlink" title="axios基础"></a>axios基础</h2><ul><li><p><strong>axios是功能强大的网络前求库</strong></p></li><li><p><strong>导入JS库</strong></p></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://unpkg.com/axios/dist/axios.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>基本语法</strong></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">axios.get(地址?key=value&amp;key2=values).then(function(response)&#123;&#125;,function(err)&#123;&#125;)</span><br><span class="line">axios.post(地址,&#123;key:value,key2:value2&#125;).then(function(response)&#123;&#125;,function(err)&#123;&#125;)</span><br></pre></td></tr></table></figure><ul><li><code>axios</code>必须先导入才可以使用</li><li>使用<code>get</code>或<code>post</code>方法即可发送对应的请求</li><li><code>then</code>方法中的回调函数会在请求成功或失败时触发</li><li>通过回调函数的形参可以获取响应内容，或错误信息</li><li>文档传送门：<a href="https://github.com/axios/axios">https://github.com/axios/axios</a></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>axios基本使用<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;get请求&quot;</span> <span class="attr">class</span>=<span class="string">&quot;get&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;post请求&quot;</span> <span class="attr">class</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 官网提供的 axios 在线地址 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://unpkg.com/axios/dist/axios.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line">        /*</span><br><span class="line">            接口1:随机笑话</span><br><span class="line"><span class="javascript">            请求地址:https:<span class="comment">//autumnfish.cn/api/joke/list</span></span></span><br><span class="line">            请求方法:get</span><br><span class="line">            请求参数:num(笑话条数,数字)</span><br><span class="line">            响应内容:随机笑话</span><br><span class="line">        */</span><br><span class="line"><span class="javascript">        <span class="built_in">document</span>.querySelector(<span class="string">&quot;.get&quot;</span>).onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            axios.get(<span class="string">&quot;https://autumnfish.cn/api/joke/list?num=6&quot;</span>) <span class="comment">//获取6条笑话</span></span></span><br><span class="line"><span class="javascript">            .then(<span class="function"><span class="keyword">function</span> (<span class="params">response</span>) </span>&#123; </span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(response);</span></span><br><span class="line"><span class="javascript">              &#125;,<span class="function"><span class="keyword">function</span>(<span class="params">err</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                  <span class="built_in">console</span>.log(err);</span></span><br><span class="line">              &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">        /*</span><br><span class="line">             接口2:用户注册</span><br><span class="line"><span class="javascript">             请求地址:https:<span class="comment">//autumnfish.cn/api/user/reg</span></span></span><br><span class="line">             请求方法:post</span><br><span class="line">             请求参数:username(用户名,字符串)</span><br><span class="line">             响应内容:注册成功或失败</span><br><span class="line">         */</span><br><span class="line"><span class="javascript">        <span class="built_in">document</span>.querySelector(<span class="string">&quot;.post&quot;</span>).onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            axios.post(<span class="string">&quot;https://autumnfish.cn/api/user/reg&quot;</span>,&#123;<span class="attr">username</span>:<span class="string">&quot;小李博客&quot;</span>&#125;)</span></span><br><span class="line"><span class="javascript">            .then(<span class="function"><span class="keyword">function</span>(<span class="params">response</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(response);</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="built_in">this</span>.skill);</span></span><br><span class="line"><span class="javascript">            &#125;,<span class="function"><span class="keyword">function</span> (<span class="params">err</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(err);</span></span><br><span class="line">              &#125;)</span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@b79b83226146ece816273075d2e8c3c979c42400/2021/02/26/fa36ea81707bb6403ccb1f736efed199.png"></p><h2 id="axios-vue"><a href="#axios-vue" class="headerlink" title="axios+vue"></a>axios+vue</h2><ul><li>语法</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">   el: <span class="string">&quot;#app&quot;</span>,</span><br><span class="line">   data: &#123;</span><br><span class="line">      joke: <span class="string">&quot;搞笑的笑话&quot;</span></span><br><span class="line">   &#125;,</span><br><span class="line">   methods: &#123;</span><br><span class="line">      getJokes: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="comment">// this.joke</span></span><br><span class="line">      axios.get(<span class="string">&quot;地址&quot;</span>).then(<span class="function"><span class="keyword">function</span>(<span class="params">response</span>) </span>&#123;</span><br><span class="line">      <span class="comment">// this.joke ?</span></span><br><span class="line">     &#125;, <span class="function"><span class="keyword">function</span>(<span class="params">err</span>) </span>&#123;&#125;);</span><br><span class="line">   &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ul><li><code>axios</code>回调函数中的<code>this</code>已经改变，无法访问到<code>data</code>中数据</li><li>把<code>this</code>保存起来，回调函数中直接使用保存的<code>this</code>即可</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>axios+vue<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;获取笑话&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;getJoke&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span> &#123;&#123; joke &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 官网提供的 axios 在线地址 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://unpkg.com/axios/dist/axios.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 开发环境版本，包含了有帮助的命令行警告 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line">        /*</span><br><span class="line">            接口:随机获取一条笑话</span><br><span class="line"><span class="javascript">            请求地址:https:<span class="comment">//autumnfish.cn/api/joke</span></span></span><br><span class="line">            请求方法:get</span><br><span class="line">            请求参数:无</span><br><span class="line">            响应内容:随机笑话</span><br><span class="line">        */</span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">            el:<span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line">            data:&#123;</span><br><span class="line"><span class="javascript">                joke:<span class="string">&quot;很好笑的笑话&quot;</span></span></span><br><span class="line">            &#125;,</span><br><span class="line">            methods: &#123;</span><br><span class="line"><span class="javascript">                getJoke:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="comment">// console.log(this.joke);</span></span></span><br><span class="line"><span class="javascript">                    <span class="keyword">var</span> that = <span class="built_in">this</span>;</span></span><br><span class="line"><span class="javascript">                    axios.get(<span class="string">&quot;https://autumnfish.cn/api/joke&quot;</span>).then(<span class="function"><span class="keyword">function</span>(<span class="params">response</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                        <span class="comment">// console.log(response)</span></span></span><br><span class="line"><span class="javascript">                        <span class="built_in">console</span>.log(response.data);</span></span><br><span class="line"><span class="javascript">                        <span class="comment">// console.log(this.joke);</span></span></span><br><span class="line">                        that.joke = response.data;</span><br><span class="line"><span class="javascript">                    &#125;,<span class="function"><span class="keyword">function</span> (<span class="params">err</span>) </span>&#123;  &#125;)</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">        &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@768af3a20b0e003a4999fdc2769d07f8ce72b8a7/2021/02/26/e43eea42690a78fbf6c6e4f5f32fc0d2.png"></p><h2 id="天知道案例"><a href="#天知道案例" class="headerlink" title="天知道案例"></a>天知道案例</h2><ul><li><p>按下回车(<code>v-on .enter</code>)</p></li><li><p>查询数据(<code>axios 接口 v-model</code> )</p></li><li><p>渲染数据(<code>v-for 数组 that</code>)</p></li><li><p>应用的逻辑代码建议和页面分离，使用单独的js文件编写</p></li><li><p><code>axios</code>回调函数中<code>this</code>指向改变了，需要额外的保存一份</p></li><li><p>服务器返回的数据比较复杂时，获取的时候需要注意<code>层级</code>结构</p></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>天知道<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;css/reset.css&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;css/index.css&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;wrap&quot;</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;search_form&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form_group&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">class</span>=<span class="string">&quot;input_txt&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入查询的天气&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;city&quot;</span></span></span><br><span class="line"><span class="tag">                    @<span class="attr">keyup.enter</span>=<span class="string">&quot;queryWeather&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;input_sub&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;queryWeather&quot;</span>&gt;</span></span><br><span class="line">                    搜 索</span><br><span class="line">                <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;hotkey&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span> <span class="attr">v-for</span>=<span class="string">&quot;city in hotCitys&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;clickSearch(city)&quot;</span>&gt;</span>&#123;&#123; city &#125;&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;weather_list&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(item,index) in forecastList&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;item.date&quot;</span> <span class="attr">:style</span>=<span class="string">&quot;&#123;transitionDelay:index*100+&#x27;ms&#x27;&#125;&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;info_type&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;iconfont&quot;</span>&gt;</span>&#123;&#123; item.type &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;info_temp&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">b</span>&gt;</span>&#123;&#123; item.low&#125;&#125;<span class="tag">&lt;/<span class="name">b</span>&gt;</span></span><br><span class="line">                    ~</span><br><span class="line">                    <span class="tag">&lt;<span class="name">b</span>&gt;</span>&#123;&#123; item.high&#125;&#125;<span class="tag">&lt;/<span class="name">b</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;info_date&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123; item.date &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 开发环境版本，包含了有帮助的命令行警告 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 官网提供的 axios 在线地址 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://unpkg.com/axios/dist/axios.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line">        /*</span><br><span class="line"><span class="javascript">         请求地址:http:<span class="comment">//wthrcdn.etouch.cn/weather_mini</span></span></span><br><span class="line">         请求方法:get</span><br><span class="line">         请求参数:city(城市名)</span><br><span class="line">         响应内容:天气信息</span><br><span class="line"></span><br><span class="line">            1. 点击回车</span><br><span class="line">            2. 查询数据</span><br><span class="line">            3. 渲染数据</span><br><span class="line">         */</span><br><span class="line"><span class="javascript">        <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">            el: <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line">            data: &#123;</span><br><span class="line"><span class="javascript">                city: <span class="string">&quot;武汉&quot;</span>,</span></span><br><span class="line">                forecastList: [],</span><br><span class="line"><span class="javascript">                hotCitys: [<span class="string">&quot;北京&quot;</span>, <span class="string">&quot;上海&quot;</span>, <span class="string">&quot;广州&quot;</span>, <span class="string">&quot;深圳&quot;</span>]</span></span><br><span class="line">            &#125;,</span><br><span class="line">            methods: &#123;</span><br><span class="line"><span class="javascript">                <span class="function"><span class="title">queryWeather</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.forecastList = [];</span></span><br><span class="line">                    axios</span><br><span class="line"><span class="javascript">                        .get(<span class="string">`http://wthrcdn.etouch.cn/weather_mini?city=<span class="subst">$&#123;<span class="built_in">this</span>.city&#125;</span>`</span>)</span></span><br><span class="line"><span class="javascript">                        .then(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">                            <span class="built_in">console</span>.log(res);</span></span><br><span class="line"><span class="javascript">                            <span class="built_in">this</span>.forecastList = res.data.data.forecast;</span></span><br><span class="line">                        &#125;)</span><br><span class="line"><span class="javascript">                        .catch(<span class="function"><span class="params">err</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">                            <span class="built_in">console</span>.log(err);</span></span><br><span class="line">                        &#125;)</span><br><span class="line"><span class="javascript">                        .finally(<span class="function">() =&gt;</span> &#123; &#125;);</span></span><br><span class="line">                &#125;,</span><br><span class="line"><span class="javascript">                <span class="function"><span class="title">clickSearch</span>(<span class="params">city</span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.city = city;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.queryWeather();</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@c2dc068daddebd363a8ee5a7e6c55266580c48c1/2021/02/26/6cafe60035f1c8f72826da666613bdb5.png"></p><h1 id="综合应用"><a href="#综合应用" class="headerlink" title="综合应用"></a>综合应用</h1><ul><li><p><strong>教程地址</strong><br>  <a href="https://www.bilibili.com/video/BV12J411m7MG?p=30">https://www.bilibili.com/video/BV12J411m7MG?p=30</a></p></li><li><p><strong>歌曲搜索</strong></p><ol><li>按下回车(<code>v-on .enter</code>)</li><li>查询数据(<code>axios接口v-model</code> )</li><li>渲染数据(<code>v-for数组that</code>)</li></ol></li><li><p><strong>接口说明</strong></p><ol><li>歌曲搜索接口<br> 请求地址：<a href="https://autumnfish.cn/search">https://autumnfish.cn/search</a><br> 请求方法：get<br> 请求参数：keywords(查询关键字)<br> 响应内容：歌曲搜索结果</li><li>歌曲url获取接口<br> 请求地址：<a href="https://autumnfish.cn/song/url">https://autumnfish.cn/song/url</a><br> 请求方法：get<br> 请求参数：id(歌曲id)<br> 响应内容：歌曲url地址</li><li>歌曲详情获取<br> 请求地址：<a href="https://autumnfish.cn/song/detail">https://autumnfish.cn/song/detail</a><br> 请求方法：get<br> 请求参数：ids(歌曲id)<br> 响应内容:歌曲详情(包括封面信息)</li><li>热门评论获取<br> 请求地址：<a href="https://autumnfish.cn/comment/hot?type=0">https://autumnfish.cn/comment/hot?type=0</a><br> 请求方法：get<br> 请求参数：id(歌曲id,地址中的type固定为0)<br> 响应内容:歌曲的热门评论</li><li>mv地址获取<br> 请求地址：<a href="https://autumnfish.cn/mv/url">https://autumnfish.cn/mv/url</a><br> 请求方法：get<br> 请求参数：id(mvid,为0表示没有mv)<br> 响应内容：mv的地址</li></ol></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">&quot;en&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">  &lt;meta charset=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span><br><span class="line">  &lt;meta name=<span class="string">&quot;viewport&quot;</span> content=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span><br><span class="line">  &lt;meta http-equiv=<span class="string">&quot;X-UA-Compatible&quot;</span> content=<span class="string">&quot;ie=edge&quot;</span> /&gt;</span><br><span class="line">  &lt;title&gt;Document&lt;/title&gt;</span><br><span class="line">  &lt;!-- 样式 --&gt;</span><br><span class="line">  &lt;link rel=<span class="string">&quot;stylesheet&quot;</span> href=<span class="string">&quot;./css/index.css&quot;</span>&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;wrap&quot;</span>&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;play_wrap&quot;</span> id=<span class="string">&quot;player&quot;</span>&gt;</span><br><span class="line">      &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;search_bar&quot;</span>&gt;</span><br><span class="line">        &lt;img src=<span class="string">&quot;images/player_title.png&quot;</span> alt=<span class="string">&quot;&quot;</span> /&gt;</span><br><span class="line">        &lt;!-- 搜索歌曲 --&gt;</span><br><span class="line">        &lt;input type=<span class="string">&quot;text&quot;</span> autocomplete=<span class="string">&quot;off&quot;</span> v-model=<span class="string">&#x27;query&#x27;</span> @keyup.enter=<span class="string">&quot;searchMusic();&quot;</span> /&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;center_con&quot;</span>&gt;</span><br><span class="line">        &lt;!-- 搜索歌曲列表 --&gt;</span><br><span class="line">        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&#x27;song_wrapper&#x27;</span> ref=<span class="string">&#x27;song_wrapper&#x27;</span>&gt;</span><br><span class="line">          &lt;ul <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;song_list&quot;</span>&gt;</span><br><span class="line">            &lt;li v-<span class="keyword">for</span>=<span class="string">&quot;item in musicList&quot;</span>&gt;</span><br><span class="line">              &lt;!-- 点击放歌 --&gt;</span><br><span class="line">              &lt;a href=<span class="string">&quot;javascript:;&quot;</span> @click=<span class="string">&#x27;playMusic(item.id)&#x27;</span>&gt;&lt;/a&gt;</span><br><span class="line">              &lt;b&gt;&#123;&#123;item.name&#125;&#125;&lt;/b&gt;</span><br><span class="line">              &lt;span&gt;</span><br><span class="line">                &lt;i @click=<span class="string">&quot;playMv(item.mvid)&quot;</span> v-<span class="keyword">if</span>=<span class="string">&quot;item.mvid!=0&quot;</span>&gt;&lt;/i&gt;</span><br><span class="line">              &lt;/span&gt;</span><br><span class="line">            &lt;/li&gt;</span><br><span class="line"></span><br><span class="line">          &lt;/ul&gt;</span><br><span class="line">          &lt;img src=<span class="string">&quot;images/line.png&quot;</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;switch_btn&quot;</span> alt=<span class="string">&quot;&quot;</span>&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;!-- 歌曲信息容器 --&gt;</span><br><span class="line">        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;player_con&quot;</span> :<span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;&#123;playing:isPlay&#125;&quot;</span>&gt;</span><br><span class="line">          &lt;img src=<span class="string">&quot;images/player_bar.png&quot;</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;play_bar&quot;</span> /&gt;</span><br><span class="line">          &lt;!-- 黑胶碟片 --&gt;</span><br><span class="line">          &lt;img src=<span class="string">&quot;images/disc.png&quot;</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;disc autoRotate&quot;</span> /&gt;</span><br><span class="line">          &lt;img :src=<span class="string">&quot;coverUrl==&#x27;&#x27;?&#x27;./images/cover.png&#x27;:coverUrl&quot;</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;cover autoRotate&quot;</span> /&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;!-- 评论容器 --&gt;</span><br><span class="line">        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;comment_wrapper&quot;</span> ref=<span class="string">&#x27;comment_wrapper&#x27;</span>&gt;</span><br><span class="line">          &lt;h5 <span class="class"><span class="keyword">class</span></span>=<span class="string">&#x27;title&#x27;</span>&gt;热门留言&lt;/h5&gt;</span><br><span class="line">          &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&#x27;comment_list&#x27;</span>&gt;</span><br><span class="line"></span><br><span class="line">            &lt;dl v-<span class="keyword">for</span>=<span class="string">&quot;item in hotComments&quot;</span>&gt;</span><br><span class="line">              &lt;dt&gt;</span><br><span class="line">                &lt;img :src=<span class="string">&quot;item.user.avatarUrl&quot;</span> alt=<span class="string">&quot;&quot;</span> /&gt;</span><br><span class="line">              &lt;/dt&gt;</span><br><span class="line">              &lt;dd <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;name&quot;</span>&gt;&#123;&#123;item.user.nickname&#125;&#125;&lt;/dd&gt;</span><br><span class="line">              &lt;dd <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;detail&quot;</span>&gt;</span><br><span class="line">                &#123;&#123;item.content&#125;&#125;</span><br><span class="line">              &lt;/dd&gt;</span><br><span class="line">            &lt;/dl&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">          &lt;img src=<span class="string">&quot;images/line.png&quot;</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;right_line&quot;</span>&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;audio_con&quot;</span>&gt;</span><br><span class="line">        &lt;audio ref=<span class="string">&#x27;audio&#x27;</span> @play=<span class="string">&quot;play&quot;</span> @pause=<span class="string">&quot;pause&quot;</span> :src=<span class="string">&quot;musicUrl&quot;</span> controls autoplay loop <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;myaudio&quot;</span>&gt;&lt;/audio&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;video_con&quot;</span> v-show=<span class="string">&quot;showVideo&quot;</span>&gt;</span><br><span class="line">        &lt;video ref=<span class="string">&#x27;video&#x27;</span> :src=<span class="string">&quot;mvUrl&quot;</span> controls=<span class="string">&quot;controls&quot;</span>&gt;&lt;/video&gt;</span><br><span class="line">        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;mask&quot;</span> @click=<span class="string">&quot;closeMv&quot;</span>&gt;&lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">  &lt;!-- 开发环境版本，包含了有帮助的命令行警告 --&gt;</span><br><span class="line">  &lt;script src=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">  &lt;!-- 官网提供的 axios 在线地址 --&gt;</span><br><span class="line">  &lt;script src=<span class="string">&quot;https://unpkg.com/axios/dist/axios.min.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">  &lt;script type=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="line">    <span class="comment">// 设置axios的基地址</span></span><br><span class="line">    axios.defaults.baseURL = <span class="string">&#x27;https://autumnfish.cn&#x27;</span>;</span><br><span class="line">    <span class="comment">// axios.defaults.baseURL = &#x27;http://localhost:3000&#x27;;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 实例化vue</span></span><br><span class="line">    <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">      el: <span class="string">&quot;#player&quot;</span>,</span><br><span class="line">      data: &#123;</span><br><span class="line">        <span class="comment">// 搜索关键字</span></span><br><span class="line">        query: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">        <span class="comment">// 歌曲列表</span></span><br><span class="line">        musicList: [],</span><br><span class="line">        <span class="comment">// 歌曲url</span></span><br><span class="line">        musicUrl: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">        <span class="comment">// 是否正在播放</span></span><br><span class="line">        isPlay: <span class="literal">false</span>,</span><br><span class="line">        <span class="comment">// 歌曲热门评论</span></span><br><span class="line">        hotComments: [],</span><br><span class="line">        <span class="comment">// 歌曲封面地址</span></span><br><span class="line">        coverUrl: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">        <span class="comment">// 显示视频播放</span></span><br><span class="line">        showVideo: <span class="literal">false</span>,</span><br><span class="line">        <span class="comment">// mv地址</span></span><br><span class="line">        mvUrl: <span class="string">&#x27;&#x27;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="comment">// 方法</span></span><br><span class="line">      methods: &#123;</span><br><span class="line">        <span class="comment">// 搜索歌曲</span></span><br><span class="line">        <span class="function"><span class="title">searchMusic</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">          <span class="keyword">if</span> (<span class="built_in">this</span>.query == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">          &#125;</span><br><span class="line">          axios.get(<span class="string">&#x27;/search?keywords=&#x27;</span> + <span class="built_in">this</span>.query).then(<span class="function"><span class="params">response</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="comment">// 保存内容</span></span><br><span class="line">            <span class="built_in">this</span>.musicList = response.data.result.songs;</span><br><span class="line"></span><br><span class="line">          &#125;)</span><br><span class="line"></span><br><span class="line">          <span class="comment">// 清空搜索</span></span><br><span class="line">          <span class="built_in">this</span>.query = <span class="string">&#x27;&#x27;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="comment">// 播放歌曲</span></span><br><span class="line">        <span class="function"><span class="title">playMusic</span>(<span class="params">musicId</span>)</span> &#123;</span><br><span class="line">          <span class="comment">// 获取歌曲url</span></span><br><span class="line">          axios.get(<span class="string">&#x27;/song/url?id=&#x27;</span> + musicId).then(<span class="function"><span class="params">response</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="comment">// 保存歌曲url地址</span></span><br><span class="line">            <span class="built_in">this</span>.musicUrl = response.data.data[<span class="number">0</span>].url</span><br><span class="line">          &#125;)</span><br><span class="line">          <span class="comment">// 获取歌曲热门评论</span></span><br><span class="line">          axios.get(<span class="string">&#x27;/comment/hot?type=0&amp;id=&#x27;</span> + musicId).then(<span class="function"><span class="params">response</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="comment">// console.log(response)</span></span><br><span class="line">            <span class="comment">// 保存热门评论</span></span><br><span class="line">            <span class="built_in">this</span>.hotComments = response.data.hotComments</span><br><span class="line"></span><br><span class="line">          &#125;)</span><br><span class="line">          <span class="comment">// 获取歌曲封面</span></span><br><span class="line">          axios.get(<span class="string">&#x27;/song/detail?ids=&#x27;</span> + musicId).then(<span class="function"><span class="params">response</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="comment">// console.log(response)</span></span><br><span class="line">            <span class="comment">// 设置封面</span></span><br><span class="line">            <span class="built_in">this</span>.coverUrl = response.data.songs[<span class="number">0</span>].al.picUrl</span><br><span class="line">          &#125;)</span><br><span class="line"></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="comment">// audio的play事件</span></span><br><span class="line">        <span class="function"><span class="title">play</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">          <span class="built_in">this</span>.isPlay = <span class="literal">true</span></span><br><span class="line">          <span class="comment">// 清空mv的信息</span></span><br><span class="line">          <span class="built_in">this</span>.mvUrl = <span class="string">&#x27;&#x27;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="comment">// audio的pause事件</span></span><br><span class="line">        <span class="function"><span class="title">pause</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">          <span class="built_in">this</span>.isPlay = <span class="literal">false</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="comment">// 播放mv</span></span><br><span class="line">        <span class="function"><span class="title">playMv</span>(<span class="params">vid</span>)</span> &#123;</span><br><span class="line">          <span class="keyword">if</span> (vid) &#123;</span><br><span class="line">            <span class="built_in">this</span>.showVideo = <span class="literal">true</span>;</span><br><span class="line">            <span class="comment">// 获取mv信息</span></span><br><span class="line">            axios.get(<span class="string">&#x27;/mv/url?id=&#x27;</span> + vid).then(<span class="function"><span class="params">response</span> =&gt;</span> &#123;</span><br><span class="line">              <span class="comment">// console.log(response)</span></span><br><span class="line">              <span class="comment">// 暂停歌曲播放</span></span><br><span class="line">              <span class="built_in">this</span>.$refs.audio.pause()</span><br><span class="line">              <span class="comment">// 获取mv地址</span></span><br><span class="line">              <span class="built_in">this</span>.mvUrl = response.data.data.url</span><br><span class="line">            &#125;)</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="comment">// 关闭mv界面</span></span><br><span class="line">        <span class="function"><span class="title">closeMv</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">          <span class="built_in">this</span>.showVideo = <span class="literal">false</span></span><br><span class="line">          <span class="built_in">this</span>.$refs.video.pause()</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="comment">// 搜索历史记录中的歌曲</span></span><br><span class="line">        <span class="function"><span class="title">historySearch</span>(<span class="params">history</span>)</span> &#123;</span><br><span class="line">          <span class="built_in">this</span>.query = history</span><br><span class="line">          <span class="built_in">this</span>.searchMusic()</span><br><span class="line">          <span class="built_in">this</span>.showHistory = <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line"></span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">  &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@4c001f749a7f3890cdeb70c6e1bd5f21103006aa/2021/02/26/183cf5cfc0470782e9de9c195083755f.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Axios网络应用&quot;&gt;&lt;a href=&quot;#Axios网络应用&quot; class=&quot;headerlink&quot; title=&quot;Axios网络应用&quot;&gt;&lt;/a&gt;Axios网络应用&lt;/h1&gt;&lt;h2 id=&quot;axios基础&quot;&gt;&lt;a href=&quot;#axios基础&quot; class=&quot;he</summary>
      
    
    
    
    <category term="Web前端" scheme="http://xiaoliblog.cn/categories/Web%E5%89%8D%E7%AB%AF/"/>
    
    <category term="Vue.js" scheme="http://xiaoliblog.cn/categories/Web%E5%89%8D%E7%AB%AF/Vue-js/"/>
    
    
    <category term="Vue.js" scheme="http://xiaoliblog.cn/tags/Vue-js/"/>
    
  </entry>
  
  <entry>
    <title>Vue.js前端框架🎯Vue开发模式</title>
    <link href="http://xiaoliblog.cn/page/Vuejs04.html"/>
    <id>http://xiaoliblog.cn/page/Vuejs04.html</id>
    <published>2021-04-15T09:33:37.099Z</published>
    <updated>2021-04-16T15:38:10.862Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Vue-cil"><a href="#Vue-cil" class="headerlink" title="Vue-cil"></a>Vue-cil</h1><ul><li>我们后端使用<code>maven</code>来创建项目，有两个目的，一是通过maven的依赖机制，能够快速的管理依赖。二是通过maven来确定项目的结构，所谓项目的结构就是项目里有哪些文件和文件夹，文件夹是一个怎样的层级关系</li><li>问题来了？  一个vue项目里的项目结构应该是什么样的？ 我们能不能快速的获得这样的项目结构呢？</li><li>可以通过<code>vue-cli</code>这种脚手架工具来解决这样的问题。  vue-cli里存放了很多常用的项目骨架，直接拿来用就可以搭建出一个拥有比较成熟的项目结构的项目</li><li><code>CLI</code>（command line interfaces ）命令行接口。在进行Vue项目开发时，可以选择不同的Vue模板（骨架）进行项目的搭建，比如simple、webpack-simple、webpack、browserify/browserify-simple等；vue-cli是官方提供的一个脚手架（预先定义好的目录结构及基础代码，咱们在创建 Maven 项目时可以选择创建一个骨架项目，这个骨架项目就是脚手架），用于快速生成一个 vue 的项目模板</li></ul><h2 id="安装使用"><a href="#安装使用" class="headerlink" title="安装使用"></a>安装使用</h2><ul><li>下载安装node.js：<a href="https://nodejs.org/en/download/">https://nodejs.org/en/download/</a></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br></pre></td></tr></table></figure><ul><li>建议先下载淘宝镜像</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config set registry https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><ul><li>打开<code>cmd</code>，通过以下命令下载<code>vue-cli</code></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install vue-cli -g</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@bf9c4e1b123273d8f6b38e845f3913e376ea4084/2021/04/15/05679a94d1de878c97ea88ab0a016bcf.png"></p><ul><li>创建vue项目文件夹并打开，比如创建<code>vuedemo</code>文件夹</li><li>进入新建的文件夹，并使用<code>vue list</code>命令查看当前可用的vue骨架</li></ul><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@8424fca2cff7c593e495646aa689cc9e06895df6/2021/04/15/745f90750f8d4d0f4fd7c0542db319ac.png"></p><ul><li>使用vue命令创建基于<code>vue-webpack-simple</code>骨架的项目，<code>vue-cli-demo</code>是项目名，过程中需要输入一些参数，回车是使用提示的值</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vue init webpack-simple vue-cli-demo</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@d3b8e0eb7fb08939cd1c2a1b28bc34d37e1b665a/2021/04/15/2d553e8af56b3361666cfe57013b466a.png"></p><ul><li>进入生成的<code>vue-cli-demo</code>文件夹，按以下命令下载依赖</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install  #安装依赖环境</span><br></pre></td></tr></table></figure><ul><li>启动项目</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run dev #进入开发模式</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@8db644c9341869d38969d3bb389562f8081dbadc/2021/04/15/d88e4feda05a0b9f10081d7f910521ee.png"></p><ul><li>启动后，会出现index首页，默认端口为<code>8080</code></li></ul><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@1970cb898f55f62a803cbc445f9a5039f8193fdf/2021/04/15/525edd0c337f0d33c487042fc76b53ce.png"></p><ul><li>通过以下命令打包并发布项目</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run build #发布项目</span><br></pre></td></tr></table></figure><h2 id="关于资源打包"><a href="#关于资源打包" class="headerlink" title="关于资源打包"></a>关于资源打包</h2><ul><li>开发一个vue项目，标准的步骤：<ol><li>用vue-cli拉取一个项目骨架</li><li>安装依赖</li><li>使用<code>npm  run  dev</code>  进入开发者模式</li><li>使用<code>npm run  build</code>命令来构建资源</li></ol></li><li>此时在开发中模式中，各种修改都能看到实时效果，那么这些内容实际上是由vue-cli进行打包并发布在node.js上的。那么，最后开发完以后，要上生产，这些资源是需要我们手动部署在自己的服务器上的。那么，哪些资源是需要我们手动部署的，因此，通过<code>npm run build</code>命令来构建资源。会产生一个dist文件夹。 里面包含静态资源。</li><li>因此，在开发环境下，要想使用静态资源，在src下存放静态文件是访问不到的，首先通过<code>npm run  build</code>命令来创建<code>dist</code>文件夹，然后将静态资源放入，再在vue的代码中，去该<code>/dist/</code>文件夹内取资源即可</li></ul><h2 id="webpack-simple模板结构"><a href="#webpack-simple模板结构" class="headerlink" title="webpack-simple模板结构"></a>webpack-simple模板结构</h2><ul><li>无论前端页面内容有多复杂，<code>index.html</code>都只有11行，其实际的内容已经被打包进了 <code>/dist/build.js</code></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>vue-cli-demo<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;/dist/build.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><code>main.js</code>文件是整个vue项目的入口js</li></ul><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@2f5d4d4d8f1948d7d8172be49d3414d65803352c/2021/04/15/a33a72d0d2478ae5e8de340a33df9157.png" width="50%"><ul><li><code>App.vue</code>  这种以“<code>.vue</code>”为扩展名的内容（文件），实际上就是一个Vue对象。在这里这种文件，也称为Vue组件，里面是页面的源码</li></ul><h1 id="App-vue文件"><a href="#App-vue文件" class="headerlink" title="App.vue文件"></a>App.vue文件</h1><h2 id="IDEA配置"><a href="#IDEA配置" class="headerlink" title="IDEA配置"></a>IDEA配置</h2><ul><li>使用idea开发需要下载一个插件<code>Vue.js</code><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@e74033ecd7045629683fc1b3c32a8c13190841fb/2021/04/15/51196718793bb8bd1461c32f3738b868.png"></li><li>在idea中配置，能够操作<code>.vue</code>文件</li></ul><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@0de33cdb131a120dcd154915820d14c15abbcabb/2021/04/15/992c2ff6ff052585012d4c9372fad904.png"></p><h2 id="修改App-vue"><a href="#修改App-vue" class="headerlink" title="修改App.vue"></a>修改App.vue</h2><ul><li><code>App.vue</code>大体结构如下</li></ul><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@95cf5b14db84485beafe22b978c222105e29dcab/2021/04/15/66ddae88fcc3e674a812d71df467af06.png" width="50%"><ul><li>注意<code>template</code>必须有一个根节点，以下会报错</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">  &#123;&#123;title&#125;&#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="多个vue组件"><a href="#多个vue组件" class="headerlink" title="多个vue组件"></a>多个vue组件</h2><ul><li>在<code>App.vue</code>组件中使用多个<code>vue</code>组件搭建一个页面`</li></ul><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@1fe60744a25f8c0e5741d23ab936efa26c1cea9d/2021/04/15/4de152bb3686aa7663bffe2e5146293a.png" width="50%"><ul><li>创建<code>component</code>文件夹用于存放vue组件，在其下创建<code>Header.vue</code></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123;title&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">    name:<span class="string">&quot;Header&quot;</span>,</span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="javascript">            title:<span class="string">&quot;宝淘专业的个人用品分享网站&quot;</span></span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>在<code>component</code>文件夹创建<code>Content.vue</code></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        商品列表...</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">    name:<span class="string">&quot;Content&quot;</span></span></span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li> 在<code>component</code>文件夹创建<code>Bottom.vue</code></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>版权所有<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">    name:<span class="string">&quot;Bottom&quot;</span></span></span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="全局注册"><a href="#全局注册" class="headerlink" title="全局注册"></a>全局注册</h2><ul><li>创建好三个vue组件后，在<code>main.js</code>中进行全局注册。通过<code>import</code> 和 <code>Vue.component</code>配合，来将一个<code>.vue</code>文件注册成为一个标签。该标签就可以在整个项目中使用</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">&#x27;./App.vue&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> Header <span class="keyword">from</span> <span class="string">&#x27;./component/Header.vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> Content <span class="keyword">from</span> <span class="string">&#x27;./component/Content.vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> Bottom <span class="keyword">from</span> <span class="string">&#x27;./component/Bottom.vue&#x27;</span></span><br><span class="line"></span><br><span class="line">Vue.component(<span class="string">&quot;MyHeader&quot;</span>,Header);</span><br><span class="line">Vue.component(<span class="string">&quot;MyContent&quot;</span>,Content);</span><br><span class="line">Vue.component(<span class="string">&quot;MyBottom&quot;</span>,Bottom);</span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  el: <span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line">  render: <span class="function"><span class="params">h</span> =&gt;</span> h(App)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ul><li>在<code>App.vue</code>中使用</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">MyHeader</span>&gt;</span><span class="tag">&lt;/<span class="name">MyHeader</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">MyContent</span>&gt;</span><span class="tag">&lt;/<span class="name">MyContent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">MyBottom</span>&gt;</span><span class="tag">&lt;/<span class="name">MyBottom</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">  name: <span class="string">&#x27;app&#x27;</span>,</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@e6d02023c0d8e5f95f857be043112daada5f2de6/2021/04/15/384a920f0c7baea9cd3c9ad193512583.png" width="50%"><h2 id="本地注册"><a href="#本地注册" class="headerlink" title="本地注册"></a>本地注册</h2><ul><li>在组件的内部去注册另外一个组件，成为一个标签，这个标签，只在该组件的内部使用，而不能在其他组件内使用</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">MHeader</span>&gt;</span><span class="tag">&lt;/<span class="name">MHeader</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> MHeader <span class="keyword">from</span> <span class="string">&#x27;./component/Header&#x27;</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">  name: <span class="string">&#x27;app&#x27;</span>,</span></span><br><span class="line">  components:&#123;</span><br><span class="line"><span class="javascript">    <span class="string">&quot;MHeader&quot;</span>:MHeader</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="各组件之间的参数传递"><a href="#各组件之间的参数传递" class="headerlink" title="各组件之间的参数传递"></a>各组件之间的参数传递</h1><h2 id="父传子"><a href="#父传子" class="headerlink" title="父传子"></a>父传子</h2><ul><li>父组件为<code>App.vue</code>，子组件为<code>Content.vue</code>，前提<code>Content.vue</code>已经进行全局注册</li><li>通过父vue的标签属性传递参数：</li></ul><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@04780ac97aabd8975ceafbc46931caab5a1ebdda/2021/04/15/87930cf22282d92813a774cb71471f74.png"></p><ul><li>通过子组件的props部分，来指明可以接收的参数，父组件通过在标签中写明参数的键值对来传递参数</li><li>props是表示一个组件的参数部分，那么props的写法有两种：<ol><li><code>props:[参数列表]</code><br> 比如： props:[‘MyProp1’,’MyProp2’,…]</li><li><code>props:&#123;参数名1:&#123;type:String,required:true,default:&#39;XX&#39;&#125;,参数名2:&#123;...&#125;&#125;</code></li></ol></li></ul><h2 id="子传父"><a href="#子传父" class="headerlink" title="子传父"></a>子传父</h2><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@78a91f60049f264103e4d4bb3ba625d926426e5b/2021/04/15/17ae76f3610097b588323cf8e6fc6e44.png"></p><ul><li><p>是以事件发射的方式来实现子传父的效果。</p><ul><li>在子组件中，使用 <code>this.$emit(&quot;键&quot;,&quot;值&quot;)</code></li><li>在父组件中，子组件的标签中 使用<code> @键=&quot; msg=$event&quot;</code>  其中<code>$event</code>就能得到值，<code>msg</code>是父组件中vue属性</li></ul></li><li><p>子组件</p></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">methods:&#123;</span><br><span class="line">   <span class="function"><span class="title">doClick</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">      <span class="built_in">this</span>.$emit(<span class="string">&#x27;newName&#x27;</span>,<span class="string">&#x27;hello js&#x27;</span>)</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>父组件</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">MyContent</span> <span class="attr">:MyTitle</span>=<span class="string">&quot;msg&quot;</span> @<span class="attr">newName</span>=<span class="string">&quot;msg=$event&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">MyContent</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Vue-cil&quot;&gt;&lt;a href=&quot;#Vue-cil&quot; class=&quot;headerlink&quot; title=&quot;Vue-cil&quot;&gt;&lt;/a&gt;Vue-cil&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;我们后端使用&lt;code&gt;maven&lt;/code&gt;来创建项目，有两个目的，一是通过mave</summary>
      
    
    
    
    <category term="Web前端" scheme="http://xiaoliblog.cn/categories/Web%E5%89%8D%E7%AB%AF/"/>
    
    <category term="Vue.js" scheme="http://xiaoliblog.cn/categories/Web%E5%89%8D%E7%AB%AF/Vue-js/"/>
    
    
    <category term="Vue.js" scheme="http://xiaoliblog.cn/tags/Vue-js/"/>
    
  </entry>
  
  <entry>
    <title>Vue.js前端框架🎯Vue组件</title>
    <link href="http://xiaoliblog.cn/page/Vuejs03.html"/>
    <id>http://xiaoliblog.cn/page/Vuejs03.html</id>
    <published>2021-04-14T13:48:03.901Z</published>
    <updated>2021-04-16T15:28:35.695Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Vue实例"><a href="#Vue实例" class="headerlink" title="Vue实例"></a>Vue实例</h1><ul><li>可以有多个Vue对象，即实例</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> v1 = <span class="keyword">new</span> Vue(&#123;&#125;)</span><br><span class="line"><span class="keyword">var</span> v2 = <span class="keyword">new</span> Vue(&#123;&#125;)</span><br><span class="line">...</span><br></pre></td></tr></table></figure><h2 id="实例之间操作"><a href="#实例之间操作" class="headerlink" title="实例之间操作"></a>实例之间操作</h2><ul><li>在一个实例中，通过调用另一个实例的属性，来操作其属性</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app1&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123;message&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app2&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;changMsg&quot;</span> <span class="attr">value</span>=<span class="string">&quot;改变&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="line">   <span class="keyword">var</span> v1 = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">        el: <span class="string">&quot;#app1&quot;</span>,</span><br><span class="line">        data: &#123;</span><br><span class="line">            message:<span class="string">&quot;HELLO VUE!&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">   <span class="keyword">var</span> va2 = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">        el: <span class="string">&quot;#app2&quot;</span>,</span><br><span class="line">        methods: &#123;</span><br><span class="line">          changMsg:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            v1.message=<span class="string">&quot;hello vue!&quot;</span>;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@ed1ef1ea37ffb76028fbc8d031b803a9673601ac/2021/04/15/68814f9ccf4cc532d1a5e9027652cb8a.png"></p><h2 id="实例外操作"><a href="#实例外操作" class="headerlink" title="实例外操作"></a>实例外操作</h2><ul><li>在Vue外面操作Vue实例——操作属性</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">   v1.message = <span class="string">&quot;st title&quot;</span>;</span><br><span class="line">&#125;, <span class="number">2000</span>);</span><br></pre></td></tr></table></figure><ul><li>调用vue实例中的方法——操作方法</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">   v1.btnclick();</span><br><span class="line">&#125;,<span class="number">2000</span>);</span><br></pre></td></tr></table></figure><h2 id="实例属性"><a href="#实例属性" class="headerlink" title="实例属性"></a>实例属性</h2><ul><li>直接通过对象.的方式调用的属性，是来自与data或computed中的属性，但是Vue对象中的el、data等等这些键也称为属性，这些属性就是vue对象中的实例属性</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">v1.$data  </span><br><span class="line">v1.$el</span><br></pre></td></tr></table></figure><ul><li>设置实例属性</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=<span class="string">&quot;app1&quot;</span>&gt;</span><br><span class="line">   &lt;span&gt;&#123;&#123;message&#125;&#125;&lt;/span&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> data = &#123;</span><br><span class="line">   message: <span class="string">&quot;args data&quot;</span>,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">var</span> v1 = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">   el: <span class="string">&quot;#app1&quot;</span>,</span><br><span class="line">   data: data,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><ul><li><code>v1.$data.message</code>  相当于 <code>v1.message</code></li></ul><h1 id="Vue组件"><a href="#Vue组件" class="headerlink" title="Vue组件"></a>Vue组件</h1><ul><li>组件化是Vue的一大特性，也就是可以将vue对象作为一个组件，被反复使用</li><li>要想实现组件化，需要在页面中注册组件:关于注册的方式有两种，分别是全局注册和本地注册</li></ul><h2 id="全局注册"><a href="#全局注册" class="headerlink" title="全局注册"></a>全局注册</h2><ul><li>注册组件</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Vue.component(<span class="string">&quot;组件名&quot;</span>,&#123;vue 对象&#125;)</span><br></pre></td></tr></table></figure><ul><li>使用组件<ul><li>在被vue绑定了的html元素中才能使用组件</li></ul></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">button-counter</span>&gt;</span><span class="tag">&lt;/<span class="name">button-counter</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">button-counter</span>&gt;</span><span class="tag">&lt;/<span class="name">button-counter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="line">   <span class="comment">// 定义一个名为 button-counter 的新组件,可以使用在Vue挂载的实例里</span></span><br><span class="line">   Vue.component(<span class="string">&quot;button-counter&quot;</span>, &#123;</span><br><span class="line">      <span class="comment">//template内容为显示的内容</span></span><br><span class="line">      template:<span class="string">&quot;&lt;h1&gt;Hello Vue!&lt;/h1&gt;&quot;</span>,</span><br><span class="line">   &#125;);</span><br><span class="line">   <span class="comment">//必须使用在Vue挂载的实例里</span></span><br><span class="line">   <span class="keyword">new</span> Vue(&#123; </span><br><span class="line">      el: <span class="string">&quot;#app&quot;</span></span><br><span class="line">   &#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@dc66377980a59bd8b381245175a9dfba1b3066a8/2021/04/15/80ef0f936e5a658e9f168c054c9f3847.png"></p><ul><li>使用插值表达式和方法</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="line">   <span class="comment">// 定义一个名为 button-counter 的新组件,可以使用在Vue挂载的实例里</span></span><br><span class="line">   Vue.component(<span class="string">&quot;button-counter&quot;</span>, &#123;</span><br><span class="line">      template:<span class="string">&quot;&lt;div&gt;&#123;&#123;title&#125;&#125;&lt;button type=&#x27;button&#x27; @click=&#x27;btnFn&#x27;&gt;点我&lt;/button&gt;&lt;/div&gt;&quot;</span>,</span><br><span class="line">      <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">         <span class="keyword">return</span> &#123;</span><br><span class="line">            title:<span class="string">&quot;Hello Vue!&quot;</span></span><br><span class="line">         &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      methods: &#123;</span><br><span class="line">         btnFn:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            alert(<span class="string">&quot;Hello&quot;</span>);</span><br><span class="line">         &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">   &#125;);</span><br><span class="line">   <span class="comment">//必须使用在Vue挂载的实例里</span></span><br><span class="line">   <span class="keyword">new</span> Vue(&#123; </span><br><span class="line">      el: <span class="string">&quot;#app&quot;</span></span><br><span class="line">   &#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@723f71113575b94e2e5435ae4262d69b577e77ec/2021/04/15/4e3ec1ac87002d3fc0debed393253991.png"></p><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><ul><li><code>Vue.componet(&quot;组件名&quot;,&#123;vue 对象&#125;)</code>，这个vue对象和之前的vue对象的data实例属性的写法是有区别的</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">   data:&#123;</span><br><span class="line">      title:<span class="string">&quot;value&quot;</span></span><br><span class="line">   &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">Vue.componet(<span class="string">&quot;mybutton&quot;</span>,&#123;</span><br><span class="line">   data:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">      <span class="keyword">return</span>&#123;</span><br><span class="line">         title:<span class="string">&quot;value&quot;</span></span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;)</span><br><span class="line">&lt;!--然后通过&#123;&#123;title&#125;&#125;取值--&gt;</span><br></pre></td></tr></table></figure><ul><li><code>template</code>是将内容展现在页面商的一个键。值是一个字符串。一定要注意一点：**<code>template</code>里必须有且只能有一个根元素**</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--错误写法--&gt;</span><br><span class="line">template:<span class="string">&quot;&lt;span&gt;&#123;&#123;title&#125;&#125;&lt;/span&gt;&lt;button type=&#x27;button&#x27; @click=&#x27;btnFn&#x27;&gt;点我&lt;/button&gt;&quot;</span>,</span><br><span class="line">&lt;!--正确写法--&gt;</span><br><span class="line">template:<span class="string">&quot;&lt;div&gt;&#123;&#123;title&#125;&#125;&lt;button type=&#x27;button&#x27; @click=&#x27;btnFn&#x27;&gt;点我&lt;/button&gt;&lt;/div&gt;&quot;</span>,</span><br></pre></td></tr></table></figure><h2 id="生命周期函数"><a href="#生命周期函数" class="headerlink" title="生命周期函数"></a>生命周期函数</h2><ul><li>一个Vue对象会经历 初始化、创建、绑定、更新、销毁等阶段，不同的阶段，都会有相应的生命周期钩子函数被调用</li></ul><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@e1989e2a6384ab1a14d7aec5f5835dc8b1260373/2021/04/15/c2abbbce464db51c012de1cca9a04071.png"></p><h2 id="本地注册"><a href="#本地注册" class="headerlink" title="本地注册"></a>本地注册</h2><ul><li>vue的全局注册，也就意味着在页面的任意一个被vue绑定过的div中，都可以使用全局注册了的vue组件。但是，如果是对vue组件进行本地注册，那么在<strong>其他被vue绑定的div中，不能使用该组件</strong></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">model11</span>&gt;</span><span class="tag">&lt;/<span class="name">model11</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app1&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">model11</span>&gt;</span><span class="tag">&lt;/<span class="name">model11</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="comment">// var model1 =</span></span><br><span class="line">    <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">      el: <span class="string">&quot;#app&quot;</span>, <span class="comment">//只有id是app的div才能使用model11组件</span></span><br><span class="line">      components: &#123;</span><br><span class="line">        model11: &#123;</span><br><span class="line">          template:</span><br><span class="line">            <span class="string">&quot;&lt;div&gt;&lt;h1&gt;&#123;&#123;title&#125;&#125;&lt;/h1&gt;&lt;button type=&#x27;button&#x27; @click=&#x27;btnfn&#x27;&gt;点我&lt;/button&gt;&lt;/div&gt;&quot;</span>,</span><br><span class="line">          data: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> &#123;</span><br><span class="line">              title: <span class="string">&quot;hello vue&quot;</span>,</span><br><span class="line">            &#125;;</span><br><span class="line">          &#125;,</span><br><span class="line">          methods: &#123;</span><br><span class="line">            btnfn: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">              alert(<span class="string">&quot;hello !!!&quot;</span>);</span><br><span class="line">            &#125;,</span><br><span class="line">          &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">      el: <span class="string">&quot;#app1&quot;</span>, <span class="comment">//这个div不能使用model11组件</span></span><br><span class="line">    &#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@03a34c11a6d56ca883de6e2edc5aa7039d5f0bcd/2021/04/15/e6dd549d1332b140c820e07b937470fe.png"></p><h2 id="样式表作用范围"><a href="#样式表作用范围" class="headerlink" title="样式表作用范围"></a>样式表作用范围</h2><ul><li>如果vue组件中的<code>style</code>标签没有带上<code>scoped</code>属性，那么这个style的样式将会作用在整个页面中，而不是当前组件中，那么因此加上<code>scoped</code>，让样式只作用在当前组件中</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">style</span> <span class="selector-tag">scoped</span>&gt;</span><br><span class="line"><span class="selector-tag">div</span>&#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid red;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h1 id="首页实例"><a href="#首页实例" class="headerlink" title="首页实例"></a>首页实例</h1><ul><li>使用<code>Vue</code>和<code>Bootstrap</code>搭建首页</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;zh-CN&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1&quot;</span> /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 上述3个meta标签*必须*放在最前面，任何其他内容都*必须*跟随其后！ --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Bootstrap 101 Template<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Bootstrap --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span></span></span><br><span class="line"><span class="tag">      <span class="attr">href</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/bootstrap@3.3.7/dist/css/bootstrap.min.css&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span></span></span><br><span class="line"><span class="tag">    /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!--导航条--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;nav nav-pills&quot;</span>&gt;</span></span><br><span class="line">          <span class="comment">&lt;!--循环读取数组navigateData的值并创建li,role为Bootstrap属性--&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;nav in navigateData&quot;</span> <span class="attr">role</span>=<span class="string">&quot;presentation&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>&#123;&#123;nav&#125;&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">&lt;!--轮播图--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;width: 100%; height: 300px&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">id</span>=<span class="string">&quot;carousel-example-generic&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">class</span>=<span class="string">&quot;carousel slide&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">data-ride</span>=<span class="string">&quot;carousel&quot;</span></span></span><br><span class="line"><span class="tag">      &gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- Indicators --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ol</span> <span class="attr">class</span>=<span class="string">&quot;carousel-indicators&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">li</span></span></span><br><span class="line"><span class="tag">            <span class="attr">data-target</span>=<span class="string">&quot;#carousel-example-generic&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">data-slide-to</span>=<span class="string">&quot;0&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">class</span>=<span class="string">&quot;active&quot;</span></span></span><br><span class="line"><span class="tag">          &gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">li</span> <span class="attr">data-target</span>=<span class="string">&quot;#carousel-example-generic&quot;</span> <span class="attr">data-slide-to</span>=<span class="string">&quot;1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- Wrapper for slides --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;carousel-inner&quot;</span> <span class="attr">role</span>=<span class="string">&quot;listbox&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span></span></span><br><span class="line"><span class="tag">            <span class="attr">v-for</span>=<span class="string">&quot;(myimg,i) in banner_imgs&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">:key</span>=<span class="string">&quot;i&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">:class</span>=<span class="string">&quot;i==0?&#x27;active&#x27;:&#x27;&#x27;&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">class</span>=<span class="string">&quot;item&quot;</span></span></span><br><span class="line"><span class="tag">          &gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">style</span>=<span class="string">&quot;width: 100%; height: 300px&quot;</span> <span class="attr">:src</span>=<span class="string">&quot;myimg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;...&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;carousel-caption&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- Controls --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span></span></span><br><span class="line"><span class="tag">          <span class="attr">class</span>=<span class="string">&quot;left carousel-control&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">href</span>=<span class="string">&quot;#carousel-example-generic&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">role</span>=<span class="string">&quot;button&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">data-slide</span>=<span class="string">&quot;prev&quot;</span></span></span><br><span class="line"><span class="tag">        &gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">span</span></span></span><br><span class="line"><span class="tag">            <span class="attr">class</span>=<span class="string">&quot;glyphicon glyphicon-chevron-left&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">aria-hidden</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">          &gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;sr-only&quot;</span>&gt;</span>Previous<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span></span></span><br><span class="line"><span class="tag">          <span class="attr">class</span>=<span class="string">&quot;right carousel-control&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">href</span>=<span class="string">&quot;#carousel-example-generic&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">role</span>=<span class="string">&quot;button&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">data-slide</span>=<span class="string">&quot;next&quot;</span></span></span><br><span class="line"><span class="tag">        &gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">span</span></span></span><br><span class="line"><span class="tag">            <span class="attr">class</span>=<span class="string">&quot;glyphicon glyphicon-chevron-right&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">aria-hidden</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">          &gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;sr-only&quot;</span>&gt;</span>Next<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- jQuery (Bootstrap 的所有 JavaScript 插件都依赖 jQuery，所以必须放在前边) --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/jquery@1.12.4/dist/jquery.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 加载 Bootstrap 的所有 JavaScript 插件。你也可以根据需要只加载单个插件。 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/bootstrap@3.3.7/dist/js/bootstrap.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcss.com/vue/2.6.10/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el: <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line">        data: &#123;</span><br><span class="line"><span class="javascript">          navigateData: [<span class="string">&quot;首页&quot;</span>, <span class="string">&quot;最新商品&quot;</span>, <span class="string">&quot;搜索&quot;</span>, <span class="string">&quot;购物车&quot;</span>, <span class="string">&quot;我的订单&quot;</span>],</span></span><br><span class="line"><span class="javascript">          banner_imgs: [<span class="string">&quot;./img/bg1.png&quot;</span>, <span class="string">&quot;./img/bg2.png&quot;</span>],</span></span><br><span class="line">          pros: [</span><br><span class="line">            &#123;</span><br><span class="line"><span class="javascript">              proname: <span class="string">&quot;&quot;</span>,</span></span><br><span class="line"><span class="javascript">              pro_img: <span class="string">&quot;&quot;</span>,</span></span><br><span class="line"><span class="javascript">              pro_price: <span class="string">&quot;&quot;</span>,</span></span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;&#125;,</span><br><span class="line">            &#123;&#125;,</span><br><span class="line">          ],</span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;);</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@0e4f9411796926999f162f43146ab94847814ffb/2021/04/15/46940f43d334360feaa522a956a5294d.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Vue实例&quot;&gt;&lt;a href=&quot;#Vue实例&quot; class=&quot;headerlink&quot; title=&quot;Vue实例&quot;&gt;&lt;/a&gt;Vue实例&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;可以有多个Vue对象，即实例&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight j</summary>
      
    
    
    
    <category term="Web前端" scheme="http://xiaoliblog.cn/categories/Web%E5%89%8D%E7%AB%AF/"/>
    
    <category term="Vue.js" scheme="http://xiaoliblog.cn/categories/Web%E5%89%8D%E7%AB%AF/Vue-js/"/>
    
    
    <category term="Vue.js" scheme="http://xiaoliblog.cn/tags/Vue-js/"/>
    
  </entry>
  
  <entry>
    <title>Vue.js前端框架🎯Vue指令</title>
    <link href="http://xiaoliblog.cn/page/Vuejs02.html"/>
    <id>http://xiaoliblog.cn/page/Vuejs02.html</id>
    <published>2021-04-13T15:12:31.340Z</published>
    <updated>2021-04-14T15:24:37.122Z</updated>
    
    <content type="html"><![CDATA[<h1 id="内容绑定-事件绑定"><a href="#内容绑定-事件绑定" class="headerlink" title="内容绑定/事件绑定"></a>内容绑定/事件绑定</h1><h2 id="v-text指令"><a href="#v-text指令" class="headerlink" title="v-text指令"></a>v-text指令</h2><ul><li>语法</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">v-text</span>=<span class="string">&quot;content&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><code>v-text</code>指令的作用是：设置标签的内容(textContent)</li><li>默认写法会替换全部内容，使用<code>差值表达式&#123;&#125;</code>可以替换指定内容</li><li>内部支持写<strong>表达式</strong></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-text</span>=<span class="string">&quot;message+&#x27;!&#x27;&quot;</span>&gt;</span>全部替换<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-text</span>=<span class="string">&quot;info+&#x27;!&#x27;&quot;</span>&gt;</span>全部替换<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>&#123;&#123; message+&#x27;!&#x27; &#125;&#125;替换部分<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 开发环境版本，包含了有帮助的命令行警告 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">           el: <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line">           data:&#123;</span><br><span class="line"><span class="javascript">               message: <span class="string">&quot;小李博客&quot;</span>,</span></span><br><span class="line"><span class="javascript">               info:<span class="string">&quot;Hello Vue！&quot;</span></span></span><br><span class="line">           &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@c26d3ccd6a33f7dc30ac3d16cbe48b799b7e19d2/2021/02/25/9715976b87b1a9d467ddda2f20558860.png"></p><h2 id="v-html指令"><a href="#v-html指令" class="headerlink" title="v-html指令"></a>v-html指令</h2><ul><li>语法</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">v-html</span>=<span class="string">&quot;content&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><code>v-html</code>指令的作用是：设置元素的<code>innerHTML</code></li><li>内容中有<code>htm|</code>结构会被解析为<code>标签</code></li><li><code>v-text</code>指令无论内容是什么,只会解析为<code>文本</code></li><li>解析文本使用<code>v-text</code>，需要解析<code>html</code>结构使用<code>v-html</code></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--2. html结构--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-html</span>=<span class="string">&quot;content&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-text</span>=<span class="string">&quot;content&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span> <span class="comment">&lt;!--普通文本和text指令一样--&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 1. 开发环境版本，包含了有帮助的命令行警告 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--3. 创建Vue实例--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">           el: <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line">           data:&#123;</span><br><span class="line"><span class="handlebars"><span class="xml">               content:&quot;<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;https://xiaoliblog.cn&#x27;</span>&gt;</span>小李博客<span class="tag">&lt;/<span class="name">a</span>&gt;</span>&quot;</span></span></span><br><span class="line">           &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@2203ecd390b400a59b1d9bf27dfe5de119a4f837/2021/02/25/60a281021502e84242205f6a7f4e88fa.png"></p><h2 id="v-on指令"><a href="#v-on指令" class="headerlink" title="v-on指令"></a>v-on指令</h2><ul><li>语法</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">v-on:click</span>=<span class="string">&quot;doSomething方法&quot;</span>&gt;</span>...<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> @<span class="attr">click</span>=<span class="string">&quot;doSomething方法&quot;</span>&gt;</span>...<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><code>v-on</code>指令的作用是：为元素绑定<code>事件</code></li><li>事件名不需要写<code>on</code></li><li>指令可以简写为<code>@</code></li><li>绑定的方法定义 在<code>methods</code>属性中</li><li>方法内部通过<code>this</code>关键字可以访问定义在<code>data</code>中数据</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--2. html结构--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;v-on指令完整&quot;</span> <span class="attr">v-on:click</span>=<span class="string">&quot;doit&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;v-on指令简写&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;doit&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;双击&quot;</span> @<span class="attr">dblclick</span>=<span class="string">&quot;doit&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span> @<span class="attr">click</span>=<span class="string">&quot;changeFood&quot;</span>&gt;</span>&#123;&#123; food &#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 1. 开发环境版本，包含了有帮助的命令行警告 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--3. 创建Vue实例--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">           el: <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line">           data:&#123;</span><br><span class="line"><span class="javascript">               food:<span class="string">&quot;西红柿&quot;</span></span></span><br><span class="line">           &#125;,</span><br><span class="line">           methods: &#123;</span><br><span class="line"><span class="javascript">               doit:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                   alert(<span class="string">&quot;做IT&quot;</span>);</span></span><br><span class="line">               &#125;,</span><br><span class="line"><span class="javascript">               changeFood:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                   <span class="built_in">this</span>.food+=<span class="string">&quot;好好吃！&quot;</span></span></span><br><span class="line">               &#125;</span><br><span class="line">           &#125;,</span><br><span class="line">        &#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>如果带参数<code>event</code>，可以利用<code>event.target.value</code>当前事件对象的值</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">text</span>=<span class="string">&quot;text&quot;</span> @<span class="attr">keyup.enter</span>=<span class="string">&quot;sayHi&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123; message &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 开发环境版本，包含了有帮助的命令行警告 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">            el: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line">            data: &#123;</span><br><span class="line"><span class="javascript">                message: <span class="string">&quot; &quot;</span>,</span></span><br><span class="line">            &#125;,</span><br><span class="line">            methods: &#123;</span><br><span class="line"><span class="javascript">                sayHi:<span class="function"><span class="keyword">function</span>(<span class="params">event</span>)</span>&#123;</span></span><br><span class="line"><span class="handlebars"><span class="xml">                <span class="comment">&lt;!--this.message表示当前Vue对象的message属性--&gt;</span></span></span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.message=event.target.value;</span></span><br><span class="line">                &#125;,</span><br><span class="line">            &#125;,</span><br><span class="line">        &#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@ea11c1af368c967409f56a60daab6fadf5f6eae2/2021/04/14/cf67f22230a0b0805b1da63ae4b58ede.png"></p><ul><li>this表示当前Vue对象”new Vue()”，可以通过”<code>this.</code>“来调用当前Vue对象的属性和方法”</li></ul><h2 id="v-once指令"><a href="#v-once指令" class="headerlink" title="v-once指令"></a>v-once指令</h2><ul><li><code>v-once</code>指明此元素的数据只出现一次，数据内容的修改不影响此元素</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">v-once</span>&gt;</span>&#123;&#123;titile&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-once</span>&gt;</span>&#123;&#123;message&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123; message &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">text</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;message&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">input</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 开发环境版本，包含了有帮助的命令行警告 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">            el: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line">            data: &#123;</span><br><span class="line"><span class="javascript">                message: <span class="string">&quot;第一次内容就不变了&quot;</span>,</span></span><br><span class="line">                </span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line">````</span><br><span class="line"></span><br><span class="line">![](https://cdn.jsdelivr.net/gh/xiaoliblog/image@9fffd29bdfc596ba9164e51b5c1aa2836c264597/2021/04/14/646a12b5c2ea7531d7e8e778c34f81c5.png)</span><br><span class="line"></span><br><span class="line">## 计数器</span><br><span class="line">- `data`中定义数据:比如`num`</span><br><span class="line">- `methods`中添加两个方法:比如`add`(递增),`sub`(递减)</span><br><span class="line">- 使用`v-text`将`num`设置给`span`标签</span><br><span class="line">- 使用`v-on`将`add`,`sub`分别绑定给`+`,`-`按钮</span><br><span class="line">- 累加的逻辑：小于`10`累加,否则提示</span><br><span class="line">- 递减的逻辑：大于`0`递减,否则提示</span><br><span class="line"></span><br><span class="line">```html</span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>计数器<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        body &#123;</span><br><span class="line"><span class="css">            <span class="selector-tag">background-color</span>: <span class="selector-id">#f5f5f5</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-id">#app</span> &#123;</span></span><br><span class="line">            width: 480px;</span><br><span class="line">            height: 80px;</span><br><span class="line">            margin: 200px auto;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.input-num</span> &#123;</span></span><br><span class="line">            margin-top: 20px;</span><br><span class="line">            height: 100%;</span><br><span class="line">            display: flex;</span><br><span class="line">            border-radius: 10px;</span><br><span class="line">            overflow: hidden;</span><br><span class="line"><span class="css">            <span class="selector-tag">box-shadow</span>: 4<span class="selector-tag">px</span> 4<span class="selector-tag">px</span> 4<span class="selector-tag">px</span> <span class="selector-id">#adadad</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">border</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#c7c7c7</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">background-color</span>: <span class="selector-id">#c7c7c7</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.input-num</span> <span class="selector-tag">button</span> &#123;</span></span><br><span class="line">            width: 150px;</span><br><span class="line">            height: 100%;</span><br><span class="line">            font-size: 40px;</span><br><span class="line"><span class="css">            <span class="selector-tag">color</span>: <span class="selector-id">#ad2a27</span>;</span></span><br><span class="line">            cursor: pointer;</span><br><span class="line">            border: none;</span><br><span class="line">            outline: none;</span><br><span class="line">            background-color: rgba(0, 0, 0, 0);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.input-num</span> <span class="selector-tag">span</span> &#123;</span></span><br><span class="line">            height: 100%;</span><br><span class="line">            font-size: 40px;</span><br><span class="line">            flex: 1;</span><br><span class="line">            text-align: center;</span><br><span class="line">            line-height: 80px;</span><br><span class="line">            font-family: auto;</span><br><span class="line">            background-color: white;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        img &#123;</span><br><span class="line">            float: right;</span><br><span class="line">            margin-top: 50px;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 计数器 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;input-num&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;sub&quot;</span>&gt;</span></span><br><span class="line">                -</span><br><span class="line">            <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123; num &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;add&quot;</span>&gt;</span></span><br><span class="line">                +</span><br><span class="line">            <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 开发环境版本，包含了有帮助的命令行警告 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 编码 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="comment">// 创建Vue实例</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el: <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line">        data: &#123;</span><br><span class="line">            num: 1,</span><br><span class="line">            min: 0,</span><br><span class="line">            max: 10</span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line"><span class="javascript">            sub:<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">if</span> (<span class="built_in">this</span>.num &gt; <span class="built_in">this</span>.min) &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.num--;</span></span><br><span class="line"><span class="javascript">                &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">                    alert(<span class="string">&quot;别点啦,到底啦&quot;</span>);</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line"><span class="javascript">            add:<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">if</span> (<span class="built_in">this</span>.num &lt; <span class="built_in">this</span>.max) &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.num++;</span></span><br><span class="line"><span class="javascript">                &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">                    alert(<span class="string">&quot;别点啦,到头啦&quot;</span>);</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@d9475108ddf40cfe543a2ee6603bc2530cd2ef91/2021/02/25/8e6a31a1bcc5872e90cd0d8455344755.png"></p><h1 id="显示切换-属性绑定"><a href="#显示切换-属性绑定" class="headerlink" title="显示切换/属性绑定"></a>显示切换/属性绑定</h1><h2 id="v-show指令"><a href="#v-show指令" class="headerlink" title="v-show指令"></a>v-show指令</h2><ul><li>语法</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img.jpg&quot;</span> <span class="attr">v-show</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img.jpg&quot;</span> <span class="attr">v-show</span>=<span class="string">&quot;isShow&quot;</span>&gt;</span> <span class="comment">&lt;!--布尔变量--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img.jpg&quot;</span> <span class="attr">v-show</span>=<span class="string">&quot;age&gt;=18&quot;</span>&gt;</span> <span class="comment">&lt;!--变量判断--&gt;</span></span><br></pre></td></tr></table></figure><ul><li><code>v-show</code>指令的作用是：根据真假切换元素的显示状态</li><li>原理是修改元素的display，实现显示隐藏</li><li>指令后面的内容最终都会解析为<code>布尔值</code></li><li>值为<code>true</code>元素显示，值为<code>false</code>元素隐藏</li><li>数据改变之后，对应元素的显示状态会<code>同步更新</code></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>vue<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;切换显示状态&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;changIsShow&quot;</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;logo.png&quot;</span> <span class="attr">v-show</span>=<span class="string">&quot;isShow&quot;</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;累加年龄&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;addage&quot;</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;logo.png&quot;</span> <span class="attr">v-show</span>=<span class="string">&quot;age&gt;=18&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 开发环境版本，包含了有帮助的命令行警告 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 编码 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="comment">// 创建Vue实例</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el: <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line">        data:&#123;</span><br><span class="line"><span class="javascript">            isShow:<span class="literal">false</span>,</span></span><br><span class="line">            age:17</span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line"><span class="javascript">            changIsShow:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.isShow=!<span class="built_in">this</span>.isShow;</span></span><br><span class="line">            &#125;,</span><br><span class="line"><span class="javascript">            addage:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.age++</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@040473200e316e9919c39c773979ce4117d0ed8e/2021/02/25/e0d49757eb5d3e1bfdcc889611dd1e98.png"></p><h2 id="v-if指令"><a href="#v-if指令" class="headerlink" title="v-if指令"></a>v-if指令</h2><ul><li>语法</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">v-if</span>=<span class="string">&quot;true&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">v-if</span>=<span class="string">&quot;isShow&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">v-if</span>=<span class="string">&quot;表达式&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><code>v-if</code>指令的作用是：根据表达式的真假切换元素的显示状态</li><li>本质是通过操纵<code>dom</code>元素来切换显示状态</li><li>表达式的值为<code>true</code>，元素存在于<code>dom</code>树中，为<code>false</code>，从<code>dom</code>树中移除</li><li>频繁的切换<code>v-show</code>，反之使用<code>v-if</code>，前者的切换消耗小</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>vue<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;切换显示&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;changIsShow&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-if</span>=<span class="string">&quot;isShow&quot;</span>&gt;</span>小李博客<span class="tag">&lt;/<span class="name">p</span>&gt;</span>  <span class="comment">&lt;!--直接从DOM中消除--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-show</span>=<span class="string">&quot;isShow&quot;</span>&gt;</span>小李博客 --v-show修饰<span class="tag">&lt;/<span class="name">p</span>&gt;</span>   <span class="comment">&lt;!--只更改display--&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 开发环境版本，包含了有帮助的命令行警告 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 编码 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="comment">// 创建Vue实例</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el: <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line">        data:&#123;</span><br><span class="line"><span class="javascript">            isShow:<span class="literal">false</span>,</span></span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line"><span class="javascript">            changIsShow:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.isShow=!<span class="built_in">this</span>.isShow; <span class="comment">//取反</span></span></span><br><span class="line">            &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@af478a746846dfca479449e8e8fb47f46050a06c/2021/02/25/dc03c7d61205e89f5aebcec7d8f1f418.png"></p><h2 id="v-bind指令"><a href="#v-bind指令" class="headerlink" title="v-bind指令"></a>v-bind指令</h2><ul><li>插值表达式不能用于属性中，可以通过<code>v-bind</code>实现属性值的绑定</li><li>语法</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img.jpg&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--v-bind:属性名=表达式--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">v-bind:src</span>=<span class="string">&quot;imgSrc&quot;</span>&gt;</span> <span class="comment">&lt;!--imgSrc=img.jpg--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">v-bind:title</span>=<span class="string">&quot;imgtitle+‘!！！’&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">v-bind:class</span>=<span class="string">&quot;isActive?&#x27;active&#x27;:&#x27;&#x27;&quot;</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">v-bind:class</span>=<span class="string">&quot;&#123;active:isActive&#125;&quot;</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">v-bind:href</span>=<span class="string">&quot;link&quot;</span>&gt;</span>baidu<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--v-bind可以省略--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">:src</span>=<span class="string">&quot;imgSrc&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><code>v-bind</code>指令的作用是：为元素绑定属性</li><li>完整写法是<code>v-bind:属性名</code></li><li>简写的话可以直接省略<code>v- bind</code>,只保留<code>:属性名</code></li><li>需要动态的增删<code>class</code>建议使用对象的方式{active:isActive}</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>vue<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.active</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">border</span><span class="selector-pseudo">:1px</span> <span class="selector-tag">solid</span> <span class="selector-tag">red</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">img</span> <span class="attr">v-bind:src</span>=<span class="string">&quot;imgSrc&quot;</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!--绑定事件和切换类名（三元表达式的方法）--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">img</span> <span class="attr">v-bind:src</span>=<span class="string">&quot;imgSrc&quot;</span> <span class="attr">:class</span>=<span class="string">&quot;isActive?&#x27;active&#x27;:&#x27;&#x27;&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;changeActive&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">img</span> <span class="attr">:src</span>=<span class="string">&quot;imgSrc&quot;</span> <span class="attr">:title</span>=<span class="string">&quot;imgTitle+&#x27;!&#x27; &quot;</span>&gt;</span> <span class="comment">&lt;!--简写--&gt;</span></span><br><span class="line">      <span class="comment">&lt;!--绑定事件和切换类名（对象的方法）--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">img</span> <span class="attr">:src</span>=<span class="string">&quot;imgSrc&quot;</span> <span class="attr">:title</span>=<span class="string">&quot;imgTitle+&#x27;!&#x27; &quot;</span>  <span class="attr">:class</span>=<span class="string">&quot;&#123;active:isActive&#125;&quot;</span>  @<span class="attr">click</span>=<span class="string">&quot;changeActive&quot;</span>&gt;</span> <span class="comment">&lt;!--简写--&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 开发环境版本，包含了有帮助的命令行警告 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 编码 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="comment">// 创建Vue实例</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el: <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line">        data:&#123;</span><br><span class="line"><span class="javascript">            imgSrc:<span class="string">&quot;logo.png&quot;</span>,</span></span><br><span class="line"><span class="javascript">            imgTitle:<span class="string">&quot;小李博客&quot;</span>,</span></span><br><span class="line"><span class="javascript">            isActive:<span class="literal">false</span></span></span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line"><span class="javascript">            changeActive:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.isActive=!<span class="built_in">this</span>.isActive;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="图片切换"><a href="#图片切换" class="headerlink" title="图片切换"></a>图片切换</h2><ul><li>定义图片数组</li><li>添加图片索引</li><li>绑定src属性</li><li>图片切换用<code>v-show</code></li><li>显示状态切换</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        * &#123;</span><br><span class="line">            margin: 0;</span><br><span class="line">            padding: 0;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        html,</span><br><span class="line">        body,</span><br><span class="line"><span class="css">        <span class="selector-id">#mask</span> &#123;</span></span><br><span class="line">            width: 100%;</span><br><span class="line">            height: 100%;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-id">#mask</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">background-color</span>: <span class="selector-id">#c9c9c9</span>;</span></span><br><span class="line">            position: relative;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-id">#mask</span> <span class="selector-class">.center</span> &#123;</span></span><br><span class="line">            position: absolute;</span><br><span class="line"><span class="css">            <span class="selector-tag">background-color</span>: <span class="selector-id">#fff</span>;</span></span><br><span class="line">            left: 50%;</span><br><span class="line">            top: 50%;</span><br><span class="line">            transform: translate(-50%, -50%);</span><br><span class="line">            padding: 10px;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-id">#mask</span> <span class="selector-class">.center</span> <span class="selector-class">.title</span> &#123;</span></span><br><span class="line">            position: absolute;</span><br><span class="line">            display: flex;</span><br><span class="line">            align-items: center;</span><br><span class="line">            height: 56px;</span><br><span class="line">            top: -61px;</span><br><span class="line">            left: 0;</span><br><span class="line">            padding: 5px;</span><br><span class="line">            padding-left: 10px;</span><br><span class="line">            padding-bottom: 0;</span><br><span class="line"><span class="css">            <span class="selector-tag">color</span>: <span class="selector-tag">rgba</span>(175, 47, 47, 0<span class="selector-class">.8</span>);</span></span><br><span class="line">            font-size: 26px;</span><br><span class="line">            font-weight: normal;</span><br><span class="line">            background-color: white;</span><br><span class="line">            padding-right: 50px;</span><br><span class="line">            z-index: 2;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-id">#mask</span> <span class="selector-class">.center</span> <span class="selector-class">.title</span> <span class="selector-tag">img</span> &#123;</span></span><br><span class="line">            height: 40px;</span><br><span class="line">            margin-right: 10px;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-id">#mask</span> <span class="selector-class">.center</span> <span class="selector-class">.title</span><span class="selector-pseudo">::before</span> &#123;</span></span><br><span class="line">            content: &quot;&quot;;</span><br><span class="line">            position: absolute;</span><br><span class="line">            width: 0;</span><br><span class="line">            height: 0;</span><br><span class="line">            border: 65px solid;</span><br><span class="line">            border-color: transparent transparent white;</span><br><span class="line">            top: -65px;</span><br><span class="line">            right: -65px;</span><br><span class="line">            z-index: 1;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-id">#mask</span> <span class="selector-class">.center</span>&gt;<span class="selector-tag">img</span> &#123;</span></span><br><span class="line">            display: block;</span><br><span class="line">            width: 700px;</span><br><span class="line">            height: 458px;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-id">#mask</span> <span class="selector-class">.center</span> <span class="selector-tag">a</span> &#123;</span></span><br><span class="line">            text-decoration: none;</span><br><span class="line">            width: 45px;</span><br><span class="line">            height: 100px;</span><br><span class="line">            position: absolute;</span><br><span class="line">            top: 179px;</span><br><span class="line">            vertical-align: middle;</span><br><span class="line"><span class="css">            <span class="selector-tag">opacity</span>: 0<span class="selector-class">.5</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-id">#mask</span> <span class="selector-class">.center</span> <span class="selector-tag">a</span> <span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">opacity</span>: 0<span class="selector-class">.8</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-id">#mask</span> <span class="selector-class">.center</span> <span class="selector-class">.left</span> &#123;</span></span><br><span class="line">            left: 15px;</span><br><span class="line">            text-align: left;</span><br><span class="line">            padding-right: 10px;</span><br><span class="line">            border-top-right-radius: 10px;</span><br><span class="line">            border-bottom-right-radius: 10px;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-id">#mask</span> <span class="selector-class">.center</span> <span class="selector-class">.right</span> &#123;</span></span><br><span class="line">            right: 15px;</span><br><span class="line">            text-align: right;</span><br><span class="line">            padding-left: 10px;</span><br><span class="line">            border-top-left-radius: 10px;</span><br><span class="line">            border-bottom-left-radius: 10px;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;mask&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;center&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h2</span> <span class="attr">class</span>=<span class="string">&quot;title&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./images/logo.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span> </span><br><span class="line">                深圳创维校区环境</span><br><span class="line">            <span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--图片--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">:src</span>=<span class="string">&quot;imgList[index]&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--左箭头--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:void(0)&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;prev&quot;</span> <span class="attr">class</span>=<span class="string">&quot;left&quot;</span> <span class="attr">v-show</span>=<span class="string">&quot;index&gt;0&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./images/prev.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">             <span class="comment">&lt;!--右箭头--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:void(0)&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;next&quot;</span> <span class="attr">class</span>=<span class="string">&quot;right&quot;</span> <span class="attr">v-show</span>=<span class="string">&quot;index&lt;imgList.length-1&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./images/next.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">            el: <span class="string">&quot;#mask&quot;</span>,</span></span><br><span class="line">            data: &#123;</span><br><span class="line">                imgList: [</span><br><span class="line"><span class="javascript">                    <span class="string">&quot;./images/00.jpg&quot;</span>,</span></span><br><span class="line"><span class="javascript">                    <span class="string">&quot;./images/01.jpg&quot;</span>,</span></span><br><span class="line"><span class="javascript">                    <span class="string">&quot;./images/02.jpg&quot;</span>,</span></span><br><span class="line"><span class="javascript">                    <span class="string">&quot;./images/03.jpg&quot;</span>,</span></span><br><span class="line"><span class="javascript">                    <span class="string">&quot;./images/04.jpg&quot;</span>,</span></span><br><span class="line"><span class="javascript">                    <span class="string">&quot;./images/05.jpg&quot;</span>,</span></span><br><span class="line"><span class="javascript">                    <span class="string">&quot;./images/06.jpg&quot;</span>,</span></span><br><span class="line"><span class="javascript">                    <span class="string">&quot;./images/07.jpg&quot;</span>,</span></span><br><span class="line"><span class="javascript">                    <span class="string">&quot;./images/08.jpg&quot;</span>,</span></span><br><span class="line"><span class="javascript">                    <span class="string">&quot;./images/09.jpg&quot;</span>,</span></span><br><span class="line"><span class="javascript">                    <span class="string">&quot;./images/10.jpg&quot;</span>,</span></span><br><span class="line">                ],</span><br><span class="line">                index: 0</span><br><span class="line">            &#125;,</span><br><span class="line">            methods: &#123;</span><br><span class="line"><span class="javascript">                <span class="comment">// 上一张</span></span></span><br><span class="line"><span class="javascript">                prev: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.index--;</span></span><br><span class="line">                &#125;,</span><br><span class="line"><span class="javascript">                <span class="comment">// 下一张</span></span></span><br><span class="line"><span class="javascript">                next: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.index++;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="列表循环-表单元素绑定"><a href="#列表循环-表单元素绑定" class="headerlink" title="列表循环/表单元素绑定"></a>列表循环/表单元素绑定</h1><h2 id="v-for指令"><a href="#v-for指令" class="headerlink" title="v-for指令"></a>v-for指令</h2><ul><li>语法</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;item in arr&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(it,index) in arr&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><code>v-for</code>指令的作用是：根据数据生成列表结构</li><li>数组经常和<code>v-for</code>结合使用</li><li>语法是<code>( item,index) in数据</code></li><li><code>item</code>和<code>index</code>可以结合其他指令一起使用</li><li>数组长度的更新会同步到页面上，是响应式的</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>v-for指令<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;添加数据&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;add&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;移除数据&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;remove&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(it,index) in arr&quot;</span>&gt;</span></span><br><span class="line">                &#123;&#123; index+1 &#125;&#125;校区:&#123;&#123; it &#125;&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-for</span>=<span class="string">&quot;item in vegetables&quot;</span> <span class="attr">v-bind:title</span>=<span class="string">&quot;item.name&quot;</span>&gt;</span></span><br><span class="line">            &#123;&#123; item.name &#125;&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 1.开发环境版本，包含了有帮助的命令行警告 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">            el:<span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line">            data:&#123;</span><br><span class="line"><span class="javascript">                arr:[<span class="string">&quot;北京&quot;</span>,<span class="string">&quot;上海&quot;</span>,<span class="string">&quot;广州&quot;</span>,<span class="string">&quot;深圳&quot;</span>],</span></span><br><span class="line">                vegetables:[</span><br><span class="line"><span class="javascript">                    &#123;<span class="attr">name</span>:<span class="string">&quot;西兰花炒蛋&quot;</span>&#125;,</span></span><br><span class="line"><span class="javascript">                    &#123;<span class="attr">name</span>:<span class="string">&quot;蛋炒西蓝花&quot;</span>&#125;</span></span><br><span class="line">                ]</span><br><span class="line">            &#125;,</span><br><span class="line">            methods: &#123;</span><br><span class="line"><span class="javascript">                add:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.vegetables.push(&#123; <span class="attr">name</span>:<span class="string">&quot;花菜炒蛋&quot;</span> &#125;);</span></span><br><span class="line">                &#125;,</span><br><span class="line"><span class="javascript">                remove:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.vegetables.shift();</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">        &#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@75bf74fe189a276e7916d3e69a037c583a04212f/2021/02/25/38d55d6c28aaa842b52ca3b626a24775.png"></p><h2 id="v-on补充"><a href="#v-on补充" class="headerlink" title="v-on补充"></a>v-on补充</h2><ul><li>语法<br>  相关修饰符查看<a href="https://cn.vuejs.org/v2/api/#v-on">官方文档</a></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> @<span class="attr">keyup.enter</span>=<span class="string">&quot;sayHi&quot;</span>&gt;</span> <span class="comment">&lt;!--按下回车键才触发--&gt;</span></span><br></pre></td></tr></table></figure><ul><li>事件绑定的方法写成<code>函数调用</code>的形式，可以传入自定义参数</li><li>定义方法时需要定义<code>形参</code>来接收传入的实参</li><li>事件的后面跟上<code>.修饰符</code>可以对事件进行限制</li><li><code>.enter</code>可以限制触发的按键为回车</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>v-on补充<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;点击&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;doIt(666,&#x27;老铁&#x27;)&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> @<span class="attr">keyup.enter</span>=<span class="string">&quot;sayHi&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 1.开发环境版本，包含了有帮助的命令行警告 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">            el:<span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line">            methods: &#123;</span><br><span class="line"><span class="javascript">                doIt:<span class="function"><span class="keyword">function</span>(<span class="params">p1,p2</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">console</span>.log(<span class="string">&quot;做it&quot;</span>);</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">console</span>.log(p1);</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">console</span>.log(p2);</span></span><br><span class="line">                &#125;,</span><br><span class="line"><span class="javascript">                sayHi:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                    alert(<span class="string">&quot;吃了没&quot;</span>);</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">        &#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="v-model指令"><a href="#v-model指令" class="headerlink" title="v-model指令"></a>v-model指令</h2><ul><li>语法</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;message&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><ul><li><code>v-model</code>指令的作用是便捷的设置和获取表单元素的值</li><li>绑定的数据会和表单元素<code>值</code>相关联</li><li>绑定的数据<code>等价于</code>表单元素的值</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>v-model指令<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;修改message&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;setM&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;message&quot;</span> @<span class="attr">keyup.enter</span>=<span class="string">&quot;getM&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>&#123;&#123; message &#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 开发环境版本，包含了有帮助的命令行警告 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">            el:<span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line">            data:&#123;</span><br><span class="line"><span class="javascript">                message:<span class="string">&quot;小李博客&quot;</span></span></span><br><span class="line">            &#125;,</span><br><span class="line">            methods: &#123;</span><br><span class="line"><span class="javascript">                getM:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                    alert(<span class="built_in">this</span>.message);</span></span><br><span class="line">                &#125;,</span><br><span class="line"><span class="javascript">                setM:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.message =<span class="string">&quot;酷丁鱼&quot;</span>;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">        &#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@9a1fb6454b604218538fe4988c80caf2ebab4749/2021/02/26/b66df47b7af720755b3b43cfbb31d2fd.png"></p><h2 id="记事本"><a href="#记事本" class="headerlink" title="记事本"></a>记事本</h2><ul><li><p><strong>新增</strong></p><ol><li>生成列表结构(<code>v-for</code>数组)</li><li>获取用户输入(<code>v-model</code>)</li><li>回车，新增数据(<code>v-on .enter</code> 添加数据)</li></ol></li><li><p><strong>删除</strong></p><ol><li>点击删除指定内容(<code>v-on splice</code>索引)</li></ol></li><li><p><strong>统计</strong></p><ol><li>统计信息个数(<code>v-text length</code>)，即数组长度</li></ol></li><li><p><strong>清空</strong></p><ol><li>点击清除所有信息(<code>v-on</code> 清空数组)</li></ol></li><li><p><strong>隐藏</strong></p><ol><li>没有数据时，隐藏元素(<code>v-show v-if</code> 数组非空)</li></ol></li><li><p>列表结构可以通过<code>v-for</code>指令结合数据生成</p></li><li><p><code>v-on</code>结合事件修饰符可以对事件进行限制比如<code>.enter</code></p></li><li><p><code>v-on</code>在绑定事件时可以传递自定义参数</p></li><li><p>通过<code>v-model</code>可以快速的设置和获取表单元素的值</p></li><li><p>基于数据的开发方式</p></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>记事本<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">href</span>=<span class="string">&quot;./css/index.css&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 主体区域 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">section</span> <span class="attr">id</span>=<span class="string">&quot;todoapp&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 输入框 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">header</span> <span class="attr">class</span>=<span class="string">&quot;header&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h1</span>&gt;</span>记事本<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--增加--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">v-model</span>=<span class="string">&quot;inputValue&quot;</span> @<span class="attr">keyup.enter</span>=<span class="string">&quot;add&quot;</span> <span class="attr">autofocus</span>=<span class="string">&quot;autofocus&quot;</span> <span class="attr">autocomplete</span>=<span class="string">&quot;off&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入任务&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">class</span>=<span class="string">&quot;new-todo&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 列表区域 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">section</span> <span class="attr">class</span>=<span class="string">&quot;main&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;todo-list&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;todo&quot;</span> <span class="attr">v-for</span>=<span class="string">&quot;(item,index) in list&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;view&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;index&quot;</span>&gt;</span>&#123;&#123; index+1 &#125;&#125;.<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">label</span>&gt;</span>&#123;&#123; item &#125;&#125;<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                        <span class="comment">&lt;!--删除--&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;destroy&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;remove(index)&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 统计和清空 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">footer</span> <span class="attr">class</span>=<span class="string">&quot;footer&quot;</span> <span class="attr">v-show</span>=<span class="string">&quot;list.length!=0&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--显示与隐藏--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;todo-count&quot;</span> <span class="attr">v-if</span>=<span class="string">&quot;list.length!=0&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">strong</span>&gt;</span>&#123;&#123; list.length &#125;&#125;<span class="tag">&lt;/<span class="name">strong</span>&gt;</span> items left</span><br><span class="line">            <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-show</span>=<span class="string">&quot;list.length!=0&quot;</span> <span class="attr">class</span>=<span class="string">&quot;clear-completed&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;clear&quot;</span>&gt;</span></span><br><span class="line">                Clear</span><br><span class="line">            <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 开发环境版本，包含了有帮助的命令行警告 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">            el: <span class="string">&quot;#todoapp&quot;</span>,</span></span><br><span class="line">            data: &#123;</span><br><span class="line"><span class="javascript">                list: [<span class="string">&quot;写代码&quot;</span>, <span class="string">&quot;吃饭饭&quot;</span>, <span class="string">&quot;睡觉觉&quot;</span>],</span></span><br><span class="line"><span class="javascript">                inputValue: <span class="string">&quot;好好学习,天天向上&quot;</span>  </span></span><br><span class="line">            &#125;,</span><br><span class="line">            methods: &#123;</span><br><span class="line"><span class="javascript">                <span class="comment">//添加</span></span></span><br><span class="line"><span class="javascript">                add: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.list.push(<span class="built_in">this</span>.inputValue); <span class="comment">//数组追加元素</span></span></span><br><span class="line">                &#125;,</span><br><span class="line"><span class="javascript">                <span class="comment">//删除</span></span></span><br><span class="line"><span class="javascript">                remove: <span class="function"><span class="keyword">function</span> (<span class="params">index</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">console</span>.log(<span class="string">&quot;删除&quot;</span>);</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">console</span>.log(index);</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.list.splice(index, <span class="number">1</span>);</span></span><br><span class="line">                &#125;,</span><br><span class="line"><span class="javascript">                <span class="comment">//清空</span></span></span><br><span class="line"><span class="javascript">                clear: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.list = []; <span class="comment">//清空数组</span></span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">        &#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@ce29871b68107546eaee0ab02fb03cfd90e82935/2021/02/26/095663324c54ac5c7e9a7a0654f1f28d.png" width="50%"><h1 id="改变样式的方法"><a href="#改变样式的方法" class="headerlink" title="改变样式的方法"></a>改变样式的方法</h1><h2 id="第一种方法"><a href="#第一种方法" class="headerlink" title="第一种方法"></a>第一种方法</h2><ul><li>通过给html元素的class属性绑定vue中的属性值，得到样式的动态绑定</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.mydiv</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">background-color</span><span class="selector-pseudo">:black</span>;</span></span><br><span class="line">            width: 100px;</span><br><span class="line">            height: 100px;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.red</span>&#123;</span></span><br><span class="line">            background-color: red;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-bind:class</span>=<span class="string">&quot;&#123;red:temp&#125;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;mydiv&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">v-on:click</span>=<span class="string">&quot;temp=!temp&quot;</span> <span class="attr">value</span>=<span class="string">&quot;改变颜色&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> v1 = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el: <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line">        data: &#123;</span><br><span class="line"><span class="javascript">            temp:<span class="literal">true</span></span></span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;);</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@300acd9bb288a4b4bab79ccc52c98dfc089867bd/2021/04/14/dd90c3000829b06e101d2b9d8d760503.png"></p><h2 id="第二种方法"><a href="#第二种方法" class="headerlink" title="第二种方法"></a>第二种方法</h2><ul><li>通过computed返回一个对象，对象里放着多个键值对</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.mydiv</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">background-color</span><span class="selector-pseudo">:black</span>;</span></span><br><span class="line">            width: 100px;</span><br><span class="line">            height: 100px;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.red</span>&#123;</span></span><br><span class="line">            background-color: red;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.mywidth</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">width</span><span class="selector-pseudo">:450px</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--v-bind绑定属性--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">:class</span>=<span class="string">&quot;myClassStyle&quot;</span> <span class="attr">class</span>=<span class="string">&quot;mydiv&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">hr</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">v-on:click</span>=<span class="string">&quot;temp=!temp&quot;</span> <span class="attr">value</span>=<span class="string">&quot;改变颜色&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> v1 = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el: <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line">        data: &#123;</span><br><span class="line"><span class="javascript">            temp:<span class="literal">true</span></span></span><br><span class="line">        &#125;,</span><br><span class="line">        computed:&#123;</span><br><span class="line"><span class="javascript">            myClassStyle:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">return</span> &#123;  <span class="comment">//返回一个JSON对象</span></span></span><br><span class="line"><span class="javascript">                    red:<span class="built_in">this</span>.temp,</span></span><br><span class="line"><span class="javascript">                    mywidth:<span class="built_in">this</span>.temp</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@c2355d5f0512e67850b65688f8c849c0bd320ddc/2021/04/14/8d4b18daff06fa7690a3bdf9cb7b5f58.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;内容绑定-事件绑定&quot;&gt;&lt;a href=&quot;#内容绑定-事件绑定&quot; class=&quot;headerlink&quot; title=&quot;内容绑定/事件绑定&quot;&gt;&lt;/a&gt;内容绑定/事件绑定&lt;/h1&gt;&lt;h2 id=&quot;v-text指令&quot;&gt;&lt;a href=&quot;#v-text指令&quot; class=&quot;</summary>
      
    
    
    
    <category term="Web前端" scheme="http://xiaoliblog.cn/categories/Web%E5%89%8D%E7%AB%AF/"/>
    
    <category term="Vue.js" scheme="http://xiaoliblog.cn/categories/Web%E5%89%8D%E7%AB%AF/Vue-js/"/>
    
    
    <category term="Vue.js" scheme="http://xiaoliblog.cn/tags/Vue-js/"/>
    
  </entry>
  
  <entry>
    <title>Vue.js前端框架🎯Vue概述及属性</title>
    <link href="http://xiaoliblog.cn/page/Vuejs01.html"/>
    <id>http://xiaoliblog.cn/page/Vuejs01.html</id>
    <published>2021-04-12T16:00:00.000Z</published>
    <updated>2021-04-15T13:27:25.295Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Vue简介"><a href="#Vue简介" class="headerlink" title="Vue简介"></a>Vue简介</h1><ul><li><code>Vue</code>是一个<strong>渐进式的JavaScript框架</strong>，<strong>只注重视图层</strong>，结合了HTML+CSS+JS，非常的易用，并且有很好的生态系统。而且vue体积很小，速度很快，优化很到位</li><li>可以用来简化Dom操作和响应式数据驱动</li><li>官方文档：<a href="https://cn.vuejs.org/v2/guide/">https://cn.vuejs.org/v2/guide/</a></li><li>视频教程强力推荐：<a href="https://www.bilibili.com/video/BV1YE411A746">VUE+Element UI+Vue Element Admin+SSM+微信支付实现前后端完整电商闭环</a></li></ul><h2 id="MVVM模式"><a href="#MVVM模式" class="headerlink" title="MVVM模式"></a>MVVM模式</h2><ul><li><code>MVVM</code>模式即双向数据绑定模式<ul><li><code>Model</code>：模型层，在这里表示JavaScript对象</li><li><code>View</code>：视图层，在这是表示DOM（HTML操作的元素）</li><li><code>ViewModel</code>：连接视图和数据的中间件，<strong>Vue.js技术MVVM中的ViewModel层的实现者</strong></li></ul></li></ul><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@998681f053ff53f78098d54c15727836c2c78b81/2021/04/14/1e6185dac9611144442d818ce8a49923.png" width="90%"><ul><li>在MVVM架构中，是不允许<strong>数据</strong>和<strong>视图</strong>直接通信的，只能通过<code>ViewModel</code>来通信，而ViewModel就是定义了一个<code>Observer</code>观察者<ul><li>ViewModel能够观察到数据的变化，并对视图对应的内容进行更新</li><li>ViewModel能够监听到视图的变化，并能够通知数据发生改变</li></ul></li><li>Vue.js就是一个MVVM的实现者，他的核心就是实现了<code>DOM监听</code>和<code>数据绑定</code></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123; message &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">text</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;message&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 开发环境版本，包含了有帮助的命令行警告 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">   <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">       el: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line">       data: &#123;</span><br><span class="line"><span class="javascript">           message: <span class="string">&#x27;Hello Vue!&#x27;</span></span></span><br><span class="line">       &#125;</span><br><span class="line">   &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@e6d330f13b14d9b5f913b8a7ee8178a6f77a0077/2021/04/13/e73260fe48a0cdcadf8e0af3ce32ba45.png"></p><h2 id="两大核心要素"><a href="#两大核心要素" class="headerlink" title="两大核心要素"></a>两大核心要素</h2><h3 id="数据驱动"><a href="#数据驱动" class="headerlink" title="数据驱动"></a>数据驱动</h3><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@0ed682d5ca13867d770d81748adfb72a76c5be24/2021/04/14/b92142fae0207d64e0e024c657a9241c.png" width="80%"><ul><li><p>当你把一个普通的 JavaScript 对象传给 Vue 实例的 <code>data</code> 选项，Vue 将遍历此对象所有的属性，并使用 <code>Object.defineProperty</code> 把这些属性全部转为 <code>getter/setter</code>。<strong>Object.defineProperty 是 ES5 中一个无法 shim 的特性，这也就是为什么 Vue 不支持 IE8 以及更低版本浏览器</strong>。</p></li><li><p>这些 getter/setter 对用户来说是不可见的，但是在内部它们让 Vue 追踪依赖，在属性被访问和修改时通知变化。这里需要注意的问题是浏览器控制台在打印数据对象时 getter/setter 的格式化并不同，所以你可能需要安装 <code>vue-devtools</code> 来获取更加友好的检查接口。</p></li><li><p>每个组件实例都有相应的 <strong>watcher</strong> 实例对象，它会在组件渲染的过程中把属性记录为依赖，之后当依赖项的 <code>setter</code> 被调用时，会通知 <code>watcher</code> 重新计算，从而致使它关联的组件得以更新</p></li></ul><h3 id="组件化"><a href="#组件化" class="headerlink" title="组件化"></a>组件化</h3><ul><li>页面上每个独立的可交互的区域视为一个组件</li><li>每个组件对应一个工程目录，组件所需的各种资源在这个目录下就近维护</li><li>页面不过是组件的容器，组件可以嵌套自由组合（复用）形成完整的页面</li></ul><h2 id="CDN加速策略"><a href="#CDN加速策略" class="headerlink" title="CDN加速策略"></a>CDN加速策略</h2><ul><li><code>CDN</code>的全称是Content Delivery Network，即内容分发网络。其目的是通过在现有的Internet中增加一层新的网络架构，将网站的内容发布到最接近用户的网络“边缘”，使用户可以就近取得所需的内容，提高用户访问网站的响应速度。</li><li>说白了就是一种加速策略，能够从离自己最近的服务器上快速的获得外部的资源</li><li>比如当你需要Vue框架时，其服务器架在国外，光访问就花费不少时间，大大影响了用户体验。而CDN，其已经在全世界各地建立了内容分发服务器，当你引入Vue的CDN链接，就会从周边最近的内容分发服务器访问，大大提高了访问速率</li></ul><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@dbe97a37eb58b41f5bcb4083875ec9c7d52a6d9e/2021/04/13/3b32e148a8a039939ad9af81e59116ba.png"></p><h2 id="Vue快速开始"><a href="#Vue快速开始" class="headerlink" title="Vue快速开始"></a>Vue快速开始</h2><ul><li>导入开发版本的Vue.js</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>创建HTML的DOM元素，用ID选择，且值为<code>app</code></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">   &#123;&#123; message &#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>创建Vue实例对象，设置<code>el</code>属性用于绑定DOM和<code>data</code>属性设置显示数据</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">   <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">      el: <span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line">      data: &#123;  <span class="comment">//以后，数据就是通过发送ajax请求，来获得的</span></span><br><span class="line">            message: <span class="string">&#x27;Hello Vue!&#x27;</span></span><br><span class="line">      &#125;</span><br><span class="line">   &#125;)<span class="comment">//json格式的对象  使用大括号包裹，里面放了键值对，在js中键可以没有引号,多个键值对之间使用‘,’分隔</span></span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@d791a9666927237b9fe3f6658baeae6a5bf6a693/2021/02/25/0ccb8f1957db0826b15289bb655f94c6.png"></p><h2 id="插值表达式"><a href="#插值表达式" class="headerlink" title="插值表达式"></a>插值表达式</h2><ul><li>差值表达式是用在html中被绑定的元素中的，目的是通过差值表达式来获取vue对象中的<strong>属性</strong>和<strong>方法</strong></li><li>语法格式：  <code>&#123;&#123;vue的内容&#125;&#125;</code></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span>  Vue(&#123;</span><br><span class="line">   data:&#123;&#125;   &lt;== 这个data就提供了属性</span><br><span class="line">   methods:&#123;  &lt;== 这各methods就是提供方法的</span><br><span class="line">      sayHi:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        alert(<span class="string">&quot;hello  vue&quot;</span>)</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ul><li>插值表达式另一种用法</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=<span class="string">&quot;app&quot;</span>&gt;</span><br><span class="line">   &#123;&#123;title&#125;&#125;</span><br><span class="line">   &#123;&#123;[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>][<span class="number">2</span>]&#125;&#125;</span><br><span class="line">   &#123;&#123; &#123;<span class="string">&quot;name&quot;</span>:<span class="string">&quot;xiaoyu&quot;</span>,<span class="string">&quot;age&quot;</span>:<span class="number">20</span>&#125;.age &#125;&#125;</span><br><span class="line">   &#123;&#123; sayHello()&#125;&#125;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><h1 id="Vue属性"><a href="#Vue属性" class="headerlink" title="Vue属性"></a>Vue属性</h1><h2 id="el挂载点"><a href="#el挂载点" class="headerlink" title="el挂载点"></a>el挂载点</h2><ul><li><strong>el是用来设置Vue实例挂载(管理)的元素</strong></li><li>Vue会管理el选项<strong>命中的元素</strong>及其内部的<strong>后代元素</strong></li><li>可以使用其他的选择器，但是建议使用<strong>ID选择器</strong></li><li>可以使用其他的双标签，不能使用<code>HTML</code>和<code>BODY</code></li></ul><h2 id="data数据对象"><a href="#data数据对象" class="headerlink" title="data数据对象"></a>data数据对象</h2><ul><li><strong>Vue中用到的数据定义在<code>data</code>中</strong></li><li>data中可以写复杂类型的数据</li><li>渲染复杂类型数据时，遵守<code>js</code>的语法即可</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        &#123;&#123; message &#125;&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>&#123;&#123; school.name &#125;&#125; &#123;&#123; school.mobile &#125;&#125; <span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>&#123;&#123; campus[0] &#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>&#123;&#123; campus[1] &#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 开发环境版本，包含了有帮助的命令行警告 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">            el: <span class="string">&#x27;#app&#x27;</span>, <span class="comment">//推荐ID选择器，只支持单标签</span></span></span><br><span class="line">            data: &#123;</span><br><span class="line"><span class="javascript">                message: <span class="string">&#x27;Hello Vue!&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                school: &#123;   <span class="comment">//对象</span></span></span><br><span class="line"><span class="javascript">                    name: <span class="string">&quot;xiaoli&quot;</span>,</span></span><br><span class="line"><span class="javascript">                    mobile: <span class="string">&quot;123456&quot;</span></span></span><br><span class="line">                &#125;,</span><br><span class="line"><span class="javascript">                campus: [<span class="string">&quot;北京&quot;</span>, <span class="string">&quot;上海&quot;</span>]  <span class="comment">//数组</span></span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@83a96c5de4bafbc7c0073a7c249ba809e209b05a/2021/02/25/c258d47cbd684dcef8e6111fd4290607.png"></p><h2 id="methods属性"><a href="#methods属性" class="headerlink" title="methods属性"></a>methods属性</h2><ul><li><code>methods</code>用于放置页面中的业务逻辑，js方法一般都放置在methods中</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">      el: <span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line">      data: &#123;</span><br><span class="line">            message: <span class="string">&quot;&lt;a href=&#x27;https://xiaoliblog.cn&#x27;&gt;小李博客&lt;/a&gt;&quot;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      methods: &#123;</span><br><span class="line">            alert(<span class="string">&quot;你好&quot;</span>);</span><br><span class="line">      &#125;,</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="computed属性"><a href="#computed属性" class="headerlink" title="computed属性"></a>computed属性</h2><ul><li><code>computed</code>是计算属性</li><li>计算属性的重点突出在 <code>属性</code> 两个字上（<strong>属性是名词</strong>），首先它是个 <code>属性</code> 其次这个属性有 <code>计算</code> 的能力（<strong>计算是动词</strong>），这里的 <code>计算</code> 就是个函数；简单点说，它就是一个能够将计算结果缓存起来的属性（<strong>将行为转化成了静态的属性</strong>），仅此而已；</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;vue&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>调用当前时间的方法：&#123;&#123;currentTime1()&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>当前时间的计算属性：&#123;&#123;currentTime2&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">            el: <span class="string">&#x27;#vue&#x27;</span>,</span></span><br><span class="line">            data: &#123;</span><br><span class="line"><span class="javascript">                message: <span class="string">&#x27;Hello Vue&#x27;</span></span></span><br><span class="line">            &#125;,</span><br><span class="line">            methods: &#123;</span><br><span class="line"><span class="javascript">                currentTime1: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">return</span> <span class="built_in">Date</span>.now();</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            computed: &#123;</span><br><span class="line"><span class="javascript">                currentTime2: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.message;</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">return</span> <span class="built_in">Date</span>.now();</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><code>methods</code>：定义方法，调用方法使用 <code>currentTime1()</code>，需要带括号</li><li><code>computed</code>：定义计算属性，调用属性使用 <code>currentTime2</code>，不需要带括号；<code>this.message</code> 是为了能够让 <code>currentTime2</code> 观察到数据变化而变化</li><li><strong>注意：<code>methods</code> 和 <code>computed</code> 里不能重名</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@1638bb8a5c78c2c094508db51efad87a711e6734/2021/04/14/fec691d8576aa6706dfeb311a9fc0f5e.png"></p><ul><li>调用方法时，每次都需要进行计算，既然有计算过程则必定产生系统开销，那如果这个结果是不经常变化的呢？此时就可以考虑将这个结果缓存起来，采用计算属性可以很方便的做到这一点；<strong>计算属性的主要特性就是为了将不经常变化的计算结果进行缓存，以节约我们的系统开销</strong></li></ul><h2 id="watch属性"><a href="#watch属性" class="headerlink" title="watch属性"></a>watch属性</h2><ul><li><code>watch</code>用于监控参数的变化，并调用函数，newVal是能获得参数新的值，oldVal是参数老的值</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">      &#123;&#123;title&#125;&#125;</span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;title&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> v1 = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el: <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line">        data: &#123;</span><br><span class="line"><span class="javascript">          title: <span class="string">&quot;hello vue&quot;</span>,</span></span><br><span class="line">        &#125;,</span><br><span class="line">        watch: &#123;</span><br><span class="line"><span class="javascript">          title: <span class="function"><span class="keyword">function</span> (<span class="params">newValue, oldValue</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(newValue + <span class="string">&quot;:&quot;</span> + oldValue);</span></span><br><span class="line">          &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;);</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@b5778ebff071176fd081c76eb5e84f0b812b5a64/2021/04/14/fccbe823506396254eac775c11e1d714.png"></p><h1 id="虚拟DOM和diff算法"><a href="#虚拟DOM和diff算法" class="headerlink" title="虚拟DOM和diff算法"></a>虚拟DOM和diff算法</h1><ul><li>vue的高效的核心，就是虚拟的<code>dom</code>和<code>diff</code>算法，vue不通过修改<code>dom</code>树来达到修改的效果，而是直接在页面上改那个元素，此时这个元素就是一个虚拟的<code>dom</code></li><li>那么vue怎么去改呢？ 通过<code>diff</code>算法，计算出虚拟的<code>dom</code>修改后和修改前的区别，然后在虚拟<code>dom</code>的原基础上进行修改，这样的效率就大大提升了</li></ul><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@c3b52d647987134db25c08a2a45c4ea3e7aed842/2021/04/15/ab357f651d85ae602255df0b6d38980e.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Vue简介&quot;&gt;&lt;a href=&quot;#Vue简介&quot; class=&quot;headerlink&quot; title=&quot;Vue简介&quot;&gt;&lt;/a&gt;Vue简介&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Vue&lt;/code&gt;是一个&lt;strong&gt;渐进式的JavaScript框架&lt;/strong&gt;</summary>
      
    
    
    
    <category term="Web前端" scheme="http://xiaoliblog.cn/categories/Web%E5%89%8D%E7%AB%AF/"/>
    
    <category term="Vue.js" scheme="http://xiaoliblog.cn/categories/Web%E5%89%8D%E7%AB%AF/Vue-js/"/>
    
    
    <category term="Vue.js" scheme="http://xiaoliblog.cn/tags/Vue-js/"/>
    
  </entry>
  
  <entry>
    <title>Oracle📦Oracle数据库的安装与配置</title>
    <link href="http://xiaoliblog.cn/page/Oracle01.html"/>
    <id>http://xiaoliblog.cn/page/Oracle01.html</id>
    <published>2021-04-11T16:00:00.000Z</published>
    <updated>2021-04-13T15:11:58.793Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Oracle简介"><a href="#Oracle简介" class="headerlink" title="Oracle简介"></a>Oracle简介</h1><ul><li><p>Oracle 11g是甲骨文公司在2007年7月12日推出的数据库软件，有400多项功能，经过了1500多个小时的测试，开发工作量达到3.6万人/月，，相当于1000名员工连续研发3年。Oracle 11g提供了高性能、伸展性、可用性和安全性，并能更方便地在低成本服务器和存储设备组成的网络上运行，相对过往版本而言，Oracle 11g具有了与众不同的特性。</p></li><li><p>针对不同的开发好部署环境，oracle公司将Oracle 11g分成三个版本：标准版、企业版、个人版。</p><ol><li><strong>标准版</strong>：适用于工作组或部门级别的应用程序。</li><li><strong>企业版</strong>：适用于对于高端应用程序的数据管理，如大容量的联机事务处理环境、查询密集型的数据仓库和要求较高的Internet应用程序。</li><li><strong>个人版</strong>：只提供基本数据库管理服务，适用于单用户开发和部署。</li></ol></li></ul><h1 id="安装及配置"><a href="#安装及配置" class="headerlink" title="安装及配置"></a>安装及配置</h1><h2 id="下载Oracle-11g"><a href="#下载Oracle-11g" class="headerlink" title="下载Oracle 11g"></a>下载Oracle 11g</h2><ul><li>先到<a href="http://www.oracle.com/technetwork/database/enterprise-edition/downloads/index.html">Oracle官网</a>上下载11g，适用于 Microsoft Windows (<code>x64</code>) 的 Oracle Database 11g 第 2 版 (11.2.0.1.0)下载地址如下：<ul><li><a href="http://download.oracle.com/otn/nt/oracle11g/112010/win64_11gR2_database_1of2.zip">http://download.oracle.com/otn/nt/oracle11g/112010/win64_11gR2_database_1of2.zip</a></li><li><a href="http://download.oracle.com/otn/nt/oracle11g/112010/win64_11gR2_database_2of2.zip">http://download.oracle.com/otn/nt/oracle11g/112010/win64_11gR2_database_2of2.zip</a></li></ul></li><li>打开网址后需要注册Oracle官网账号，才能下载，并且这两个压缩包都需要下载<img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@6e32c54ccd6c3eea3e3d7c7f6d39ee0b75c9e840/2021/03/10/e0cdf7634443569ca0190413048ee565.png"></li></ul><div class="note success simple"><p>不想注册Oracle账号可以从百度云资源下载：<a href="https://pan.baidu.com/s/1C3OYsxb1bSZJtlBQtq5SlA">https://pan.baidu.com/s/1C3OYsxb1bSZJtlBQtq5SlA</a> 提取码：<code>34x7</code></p></div><ul><li>将两个文件一起解压到<strong>同一目录下的同一文件夹内</strong>，也就是把两个压缩包合并解压到同一文件夹下面， 路径名称中<strong>不要出现中文，也不要出现空格等不规则字符</strong>，可以先解压<code>database_1of2</code>再解压<code>database_2of2.zip</code><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@534de3fe266b5c62c2787d45618ac9c0b8e4b264/2021/03/10/bc9383a419429138f8cf7f931976eb08.png"></li></ul><div class="note warning simple"><p>注意如果你的Window用户名带有中文，Oracle默认的安装路径也是中文，所以安装时需要修改</p></div><h2 id="安装配置"><a href="#安装配置" class="headerlink" title="安装配置"></a>安装配置</h2><ul><li>解压完成后，到相应路径下，找到【<code>setup.exe</code>】，双击运行，安装Oracle 11g</li><li>后续安装配置可以查看👉<a href="https://blog.csdn.net/west_xia_616/article/details/79791139">Oracle11g数据库的下载与安装</a></li><li><strong>典型安装</strong>步骤最重要，<strong>目录路径不要含有中文或其它的特殊字符</strong>，全局数据库名建议默认，口令密码必须要牢记。Oracel建议的密码规则必须是<strong>大写字母加小写字母加数字，而且必须是8位以上</strong>，比如 <span class="hide-inline"><button type="button" class="hide-button button--animated" style>密码备忘可忽略  </button><span class="hide-content">Li19991112</span></span></li></ul><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@b18bf7818098d7bf1ce58194877f74c24bb7a1f9/2021/03/10/e6e7b1f9f19fba906b115d55aa3c3850.png" width="70%"><ul><li>耐心等待安装和复制完成之后。会弹出DBCA(Database Configuration Assistant)，如下图所示，点击<strong>口令管理</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@830502d42bbf4520b1a794278f0c26a6b5f57381/2021/03/10/23df5ab312f5de7f0059f060086cc2c7.png"></p><ul><li>打开口令管理界面，如下图，找到用户名<code>SCOTT</code>（普通用户），<strong>解除锁定账户</strong>，即将SCOTT后面的勾去掉，然后【新口令】和【确认口令】都输入重复口令即可（比如“123”，前期练习，不用担心别人看你的数据，可以忽略）然后点击【确定】，退出到DBCA界面，点击【确定】<img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@9bd0ffb7c7f1fae67e0601268aff6e3d570b3498/2021/03/10/29b887e7cf35c4e87ad8510bcd4db787.png"></li></ul><h2 id="启动Oracle服务"><a href="#启动Oracle服务" class="headerlink" title="启动Oracle服务"></a>启动Oracle服务</h2><ul><li>一般会默认开启，可以通过Cmd命令进行操作<ul><li><code>net start oracleserviceorcl</code></li><li><code>net stop oracleserviceorcl</code></li></ul></li></ul><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@0e7af44f893175501cb364fa15d07cd5af476c3b/2021/03/10/9640e48901836932a7b6ea1b0a2a8c77.png" width="70%"><h2 id="SQL-Plus登陆创建用户"><a href="#SQL-Plus登陆创建用户" class="headerlink" title="SQL Plus登陆创建用户"></a>SQL Plus登陆创建用户</h2><ul><li>数据库安装成功后，点击【开始菜单】，找到<code>Oracle-OraDb11g_home1</code>文件展开，找到<code>SQL Plus</code>，点击打开，界面如下：</li></ul><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@ad324805e1e054a918b7d2d4a6c8900cbb06dfd7/2021/03/10/6e6c577731987d841b1b8e887cc71454.png" width="60%"><ul><li>输入用户名：<code>system</code>，回车，【输入口令】：即之前设置的口令（注意：输入过程是不显示密码的），进行连接，连接成功的界面如下图</li></ul><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@ae5acad257c6a9fcf6b2a429fa0ad0118e3eac73/2021/03/10/08ce7ad0764851497f80c9913338b6d3.png" width="60%"><ul><li>接下修改SCOTT用户的口令，当第一次使用SCOTT用户时，会因为未设置口令而不能连接，在管理员用户system下，输入<code>alter user scott account unlock;</code>解锁scott用户，回车会显示用户已更改，如下图<img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@55eb6e21c23d0fe759487632d9b0b0be44784835/2021/03/10/a5f900e18232b7c5c854720c929d4a77.png"></li><li>再输入<code>alter user scott identified by tiger;</code>为scott用户设置口令为tiger，回车，会显示用户已更改，如下图<img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@4873011028903fbca51fdf72f556daa694c7ceb8/2021/03/10/634adda05da3862ddcf561953614e449.png"></li><li>输入<code>conn scott/tiger</code> ,不要加分号，回车，显示已连接，如下图<img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@cf45522d873f5c92b74d628f81cd8590a5f89703/2021/03/10/adda5dedb71454ef7a5436e55d52e333.png"></li></ul><h1 id="Oracle-SQL-Developer"><a href="#Oracle-SQL-Developer" class="headerlink" title="Oracle SQL Developer"></a>Oracle SQL Developer</h1><div class="note success simple"><p>参考👉<a href="https://www.cnblogs.com/jepson6669/p/9429763.html">sqldeveloper的安装及其使用教程</a></p></div><ul><li>Oracle编写SQL语句可以使用SQL Plus、SQL Developer、OAD 或者 PLSQL Developer，新手推荐SQL Developer<ul><li><code>Oracle SQL Developer</code> 免费，一般开发使用足矣，常用。</li><li><code>PL/SQL DEVELOPER</code> 比较适合开发人员，界面简单易用，常用。收费可你可使用30天或下载个破解版。</li><li><code>Toad</code> 比较专业一些，适合DBA人员使用，功能强大，主要是数据分析(Toad for Data Analysts 2.7)，使用也是很容易上手的</li><li>假设可以分级别话：初级SQL Developer&gt;中级PL/SQL&gt;高级Toad</li></ul></li><li>Oracle SQL Developer 是非常强悍的开源的SQL开发工具,面前市面上流行的数据库都支持连接，可以在SQL Developer里直接连接Oracle 和 Mysql 了</li></ul><h2 id="下载及连接Oracle"><a href="#下载及连接Oracle" class="headerlink" title="下载及连接Oracle"></a>下载及连接Oracle</h2><ul><li>Oracle SQL Developer官网下载地址：<a href="https://www.oracle.com/tools/downloads/sqldev-downloads.html">https://www.oracle.com/tools/downloads/sqldev-downloads.html</a></li><li>解压之后，运行目录下面的<code>sqldeveloper.exe</code>文件即可</li><li>安装后界面如下</li></ul><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@8e635e5f12e3f5a500052dae075bae40bb5dfec0/2021/03/10/8b39032f1948a4d680c247a47ea67c38.png"></p><ul><li> SQL Developer是基于JDBC的，所以需要创建连接。打开【SQL工作表】–&gt;【工具】–&gt;【SQL工作表】  或者使用快捷键Alt+F10，然后点击绿色加号创建新连接</li></ul><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@58216cb05229e6c67fe583089ba4588e85d0aa13/2021/03/10/99eec6a226f436e450d653aa8c3ae5c5.png"></p><h1 id="PL-SQL-Developer"><a href="#PL-SQL-Developer" class="headerlink" title="PL/SQL Developer"></a>PL/SQL Developer</h1><div class="note success simple"><p>参考👉<a href="https://www.cnblogs.com/yuxiaole/p/9349601.html">安装pl/sql developer（内附下载地址）</a></p></div><h2 id="下载安装"><a href="#下载安装" class="headerlink" title="下载安装"></a>下载安装</h2><ul><li><p>PL/SQL Developer 13.0.1.1893 绿色版 下载地址：<a href="https://www.onlinedown.net/soft/4902.htm">https://www.onlinedown.net/soft/4902.htm</a></p></li><li><p>网盘资料含汉化包：链接：<a href="https://pan.baidu.com/s/1LicyLCnplmvHE6oH-fkQaQ">https://pan.baidu.com/s/1LicyLCnplmvHE6oH-fkQaQ</a> ，提取码：<code>mzhf </code><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@f01c0773438a63ef387fbac498db274cc3302bf6/2021/03/10/9ea5abd99f67b3dc64f41c7601de241c.png"></p></li><li><p>双击 <code>plsqldev1302x64.msi</code>文件，然后下一步</p></li><li><p>修改安装地址，选择<strong>注册码</strong>的方式，下一步。<img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@eb2c4a468ca76bbd520cad3001500c0c7f020b39/2021/03/10/79d1cf4673bb3962da5a1f6692cb66ff.png"></p></li><li><p><strong>安装汉化语言包</strong></p><ul><li>双击 <code>chinese.exe</code> 文件，点击确定，</li><li><strong>选择汉化工具安装路径，与PLSQL同路径就好</strong></li><li>然后默认无脑下一步即可</li></ul></li><li><p>安装后启动需要输入<strong>注册码</strong>，可以上网百度最新的注册码！以下提供一个，不保证成功</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">PLSQL Developer 12.0.7 注册码</span><br><span class="line">product code： 4vkjwhfeh3ufnqnmpr9brvcuyujrx3n3le </span><br><span class="line">serial Number：226959 </span><br><span class="line">password: xs374ca</span><br></pre></td></tr></table></figure><h2 id="配置PL-SQL-Developer首选项"><a href="#配置PL-SQL-Developer首选项" class="headerlink" title="配置PL/SQL Developer首选项"></a>配置PL/SQL Developer首选项</h2><div class="note success simple"><p>参考👉<a href="https://blog.csdn.net/tiantangdizhibuxiang/article/details/81408018">PL/Sql developer开发工具连接Oracle数据库</a></p></div><ul><li>PL/SQL Developer需要配合<code>Oracle Instant Client</code>客户端使用，Oracle Instant Client是免安装的Oracle客户端，在连接远程主机或虚拟机时很有必要<ul><li>官网下载地址：<a href="https://www.oracle.com/database/technologies/instant-client/downloads.html">https://www.oracle.com/database/technologies/instant-client/downloads.html</a></li></ul></li><li>下载好之后，解压，可以放在任意盘符，我放在D盘中</li><li>打开PLSQL Developer，登录界面如下，点击Cancel【取消】按钮<img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@e71dfcdcb90b398108353a0bf71bdf56727d746f/2021/03/11/1ae7ffed1c79cd0ba21ed6af75045926.png"></li><li>点击菜单栏右上角按钮，或选择Configure-Preferences<img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@8ebd4d3de439297a14aacce6a6ac1d3c7e759fba/2021/03/11/4f0cd2d9218bdf082107728729fe638b.png"> </li><li>打开的Preferences窗口中，配置Oracle Home主目录名路径为<strong>Oracle Instant Client解压安装路径</strong> ，OCI libraryOCI 库为<strong>Oracle Instant Client解压安装路径下的oci.dll文件</strong><ul><li><code>D:\Oracle instance client\instantclient_19_10</code></li><li><code>D:\Oracle instance client\instantclient_19_10\oci.dll</code><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@cdfd2a2e2b93388117419b17c423bb3ce1132bd1/2021/03/11/5abcba123bab90da4ed5bede8b575486.png"></li></ul></li><li>点击Apply【应用】，然后点击OK【确定】，使配置生效</li><li>关闭PLSQL Developer，重新打开，多出了Connect as选项 <img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@99a542c86b7d8bd9818a621e117381255a27a76b/2021/03/11/27dfa74057a9c841eec559a1e4c9a0c9.png"></li></ul><h2 id="配置Oracle-Instant-Client"><a href="#配置Oracle-Instant-Client" class="headerlink" title="配置Oracle Instant Client"></a>配置Oracle Instant Client</h2><ul><li><p>PLSQL Developer的登录界面没有数据库的初始化内容</p><ul><li>在Oracle Instant Client解压安装目录下<code>\newwork\admin</code>新建<code>tnsnames.ora</code>文件，instantclient_12_2下没有newwork\admin目录，也要新建<img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@4b411a49baf03a6d239a22b0aee7580695a1257e/2021/03/11/f84059330faef4489664c1e225ece275.png"></li></ul></li><li><p><code>tnsnames.ora</code>内容如下</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">myDB &#x3D;</span><br><span class="line">  (DESCRIPTION &#x3D;</span><br><span class="line">    (ADDRESS &#x3D; (PROTOCOL &#x3D; TCP)(HOST &#x3D; localhost)(PORT &#x3D; 1521))</span><br><span class="line">    (CONNECT_DATA &#x3D;</span><br><span class="line">      (SERVICE_NAME &#x3D; orcl)</span><br><span class="line">    )</span><br><span class="line">  )</span><br></pre></td></tr></table></figure><ul><li><code>myDB</code>为连接数据库别名</li><li><code>HOST</code> 为远程数据库服务的主机IP地址，本地为127.0.0.1，即<code>localhost</code></li><li><code>PORT</code> = 1521为你数据的端口</li><li><code>SERVICE_NAME</code> = orcl为你数据库实例</li><li>配置完成后，关闭PLSQL Developer，重新启动</li></ul><h2 id="配置系统变量"><a href="#配置系统变量" class="headerlink" title="配置系统变量"></a>配置系统变量</h2><ul><li>右击【我的电脑】选【属性】-&gt;【高级】-&gt;【环境变量】-&gt;【系统变量】</li><li>新增下面两个变量</li></ul><table><thead><tr><th align="center">变量</th><th align="center">值</th></tr></thead><tbody><tr><td align="center"><code>TNS_ADMIN</code></td><td align="center">D:\Oracle instance client\instantclient_19_10\network\admin</td></tr><tr><td align="center"><code>NLS_LANG</code></td><td align="center">SIMPLIFIED CHINESE_CHINA.ZHS16GBK</td></tr></tbody></table><ul><li><code>TNS_ADMIN</code>环境变量，要求在该变量指定的路径下能找到tnsnames.ora文件</li><li><code>NLS_LANG</code>设置必要的 Oracle全球化语言环境变量，NLS_LANG中文对应的字符集是<code>SIMPLIFIEDCHINESE_CHINA.ZHS16GBK</code></li></ul><div class="note warning simple"><p>注意NLS_LANG变量，如果错误设置或没有设置，会引起<code> ORA-12705</code> 错误。</p></div><ul><li>打开PL/SQL Developer，可以看到刚刚创建的数据库<code>My DB</code>，然后输入用户名：<code>system</code>，口令为安装Oracle时设置的口令密码，然后【确定】即可<img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@dd696d0553f9bd837de9c28f79d87a5b0d8c6936/2021/03/11/ae4fd41167ea3d6157f64efe3a949a4b.png"></li></ul><h1 id="Oracle基础操作"><a href="#Oracle基础操作" class="headerlink" title="Oracle基础操作"></a>Oracle基础操作</h1><h2 id="创建库"><a href="#创建库" class="headerlink" title="创建库"></a>创建库</h2><div class="note success simple"><p>参考👉<a href="https://www.cnblogs.com/rensheng/p/10013865.html">oracle数据库怎么创建数据库实例</a></p></div><ul><li>点击【开始菜单】，找到<code>Oracle-OraDb11g_home1</code>文件展开，找到<code>Database Configuration Assistant</code>打开</li><li>默认下一步至步骤3，填写要创建的数据库名</li></ul><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@367be21f7f263a39c979d4b53356337c7ae30464/2021/03/10/8dfc68a8aed8d700ff438271ce5af222.png" width="70%"><ul><li>步骤5是设置不同用户名称的登录密码，也可以同一管理口令统一管理</li></ul><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@31b22df5caf7eb8a3575568490518fa4a1189b11/2021/03/10/bdb1e57320fc55dd1ac9907499f69966.png" width="70%"><h1 id="Oracle卸载"><a href="#Oracle卸载" class="headerlink" title="Oracle卸载"></a>Oracle卸载</h1><div class="note success simple"><p>参考👉<a href="https://blog.csdn.net/Ninewind/article/details/89520400">完全卸载Oracle方法(超详细)</a></p></div><ul><li>如果安装路径出现中文或者其他问题导致安装失败，可以选择重装，提一下Oracle卸载的方法</li></ul><h2 id="关闭服务"><a href="#关闭服务" class="headerlink" title="关闭服务"></a>关闭服务</h2><ul><li>首先Windows左下角搜索【服务】，关闭所有<code>Oracle</code>开头的服务</li></ul><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@3b143bf2fa6bed88de6a40eb34247d512b58b3fc/2021/03/11/fb9b0df93704513d84ffae37e398d400.png"></p><h2 id="Universal-Installer卸载"><a href="#Universal-Installer卸载" class="headerlink" title="Universal Installer卸载"></a>Universal Installer卸载</h2><ul><li>找到Oracle安装路径下<code>D:\Oracle\product\11.2.0\dbhome_1\oui\bin</code>的<code>setup.exe</code>文件点击卸载产品</li></ul><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@6cf95afb609c7155b71fe7ed541e458d333e156c/2021/03/11/552f776705c6315f14543b6056720340.png"></p><h2 id="删除注册表"><a href="#删除注册表" class="headerlink" title="删除注册表"></a>删除注册表</h2><ul><li><p>Win+R，输入<code>regedit</code>，在注册表中删除以下指定的key</p><ul><li>删除<code>HKEY_LOCAL_MACHINE/SOFTWARE/ORACLE</code>目录</li><li>删除<code>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services</code>中所有以Oracle和OraWeb开头的键</li><li>删除<code>HKEY_LOCAL_MACHINE/SYSTEM/CurrentControlSet/Services/Eventlog/Application</code>中所有以Oracle开头的键</li><li>删除<code>HKEY_CLASSES_ROOT</code>目录下所有以Ora，Oravcle，Orcl，EnumOra为前缀的键</li><li>删除<code>HKEY_CURRENT_USER/Software/Microsoft/Windows/CurrentVersion/Explorer/MenuOrder/Start menu/Programs</code>中以Oracle开头的键</li><li>删除<code>HKEY_LOCAL_MACHINE/SOFTWARE/ODBC/ODBCINST.INI</code>中除MicrosoftODB forOracle以外的所有韩Oracle的键</li><li>注：有些可能已经删除</li></ul></li><li><p>删除环境变量中path和classpath中含Oracle的路径。</p></li><li><p>在开始中和桌面删除所有oracle图标和文件夹</p></li><li><p>删除所有oracle目录，包括c：//program files/oracle目录。你的oracle安装目录</p></li><li><p>重启电脑便可重装oracle</p></li></ul><h1 id="其他问题"><a href="#其他问题" class="headerlink" title="其他问题"></a>其他问题</h1><h2 id="Oracle账户解锁"><a href="#Oracle账户解锁" class="headerlink" title="Oracle账户解锁"></a>Oracle账户解锁</h2><ul><li>打开命令提示符，不要登录直接输入下面：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlplus sys/tiger as sysdba</span><br></pre></td></tr></table></figure><ul><li>以dba方式进入sys帐户；给scott用户解锁；</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">user</span> scott <span class="keyword">account</span> <span class="keyword">unlock</span>;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@e398bc507d22a44a5260bf02088ab89df6a4f8c8/2021/03/10/aeb399cc0b27dedceb7dc8c7768e5704.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Oracle简介&quot;&gt;&lt;a href=&quot;#Oracle简介&quot; class=&quot;headerlink&quot; title=&quot;Oracle简介&quot;&gt;&lt;/a&gt;Oracle简介&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Oracle 11g是甲骨文公司在2007年7月12日推出的数据库软件，有</summary>
      
    
    
    
    <category term="数据库" scheme="http://xiaoliblog.cn/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    <category term="Oracle" scheme="http://xiaoliblog.cn/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/Oracle/"/>
    
    
    <category term="Oracle" scheme="http://xiaoliblog.cn/tags/Oracle/"/>
    
  </entry>
  
  <entry>
    <title>Oracle📦Oracle体系结构</title>
    <link href="http://xiaoliblog.cn/page/Oracle02.html"/>
    <id>http://xiaoliblog.cn/page/Oracle02.html</id>
    <published>2021-04-11T16:00:00.000Z</published>
    <updated>2021-04-13T15:13:24.701Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Oracle体系结构"><a href="#Oracle体系结构" class="headerlink" title="Oracle体系结构"></a>Oracle体系结构</h1><ul><li>Oracle Database，又名Oracle RDBMS，或简称Oracle.。是甲骨文公司的一款关系数据库管理系统。它是在数据库领域一直处于领先地位的产品。可以说Oracle数据库系统是目前世界上流行的关系数据库管理系统，系统可移植性好、使用方便、功能强，适用于各类大、中、小、微机环境。它是一种高效率、可靠性好的适应高吞吐量的数据库解决方案</li></ul><h2 id="Oracle实例"><a href="#Oracle实例" class="headerlink" title="Oracle实例"></a>Oracle实例</h2><ul><li>Oracle数据库基于<code>客户端/服务器</code>技术，数据库服务器对数据库表进行管理，处理多个客户端对同一数据的并发访问。全面地保持数据完整性，并控制数据库访问权限等安全性需求</li><li>Oracle 数据库是物理操作系统文件或磁盘的集合，即一个数据的集合，该集合被视为一个逻辑单元</li><li>Oracle服务器提供开放、全面和综合的信息管理，它由<strong>Oracle数据库</strong>和<strong>Oracle实例</strong>组成<img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@7ad3328eb04b773272775b2964ced5220b318e01/2021/04/13/3acfd3d19bc641b8196ffc52705ee073.png" width="50%"></li></ul><div class="note success simple"><p><strong>实例用于管理和控制数据库，而数据库为实例提供数据</strong></p></div><ul><li><strong>Oracle实例</strong>：位于物理内存的数据结构，它由操作系统的多个后台进程和一个共享的内存池所组成，共享的内存可以被所有进程访问。Oracle用它们来管理数据库访问。用户如果要存取数据库(也就是硬盘上的文件)里的数据，必须通过Oracle实例才能实现，不能直接读取硬盘上的文件。实际上，Oracle实例就是平常所说的数据库服务(service) 。 <strong>在任何时刻，一个实例只能与一个数据库关联，访问一个数据库；而同一个数据库可由多个实例访问(RAC)</strong></li></ul><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@3e4db3126d4906574a8975c9d398ff159b37d55f/2021/04/13/5945aaa2b062c36545c270e5e0f7ce88.png" width="70%"><div class="note success simple"><p><strong>实例由内存和后台进程结构所组成</strong></p></div><h2 id="Oracle存储结构"><a href="#Oracle存储结构" class="headerlink" title="Oracle存储结构"></a>Oracle存储结构</h2><ul><li>Oracle 的内存结构包含以下两个内存区 <ul><li>系统全局区 (SGA) </li><li>程序全局区 (PGA) </li></ul></li><li>当服务器进程启动时分配程序全局区，数据库信息存储于SGA，由多个数据库进程共享</li><li>Oracle 实例有几种不同类型的进程 <ul><li>用户进程</li><li>服务器进程</li><li>后台进程</li></ul></li><li>后台进程是Oracle数据库为了保持最佳系统性能和协调多个用户请求而设置的。 Oracle 实例启动时即创建一系列后台进程。 </li><li>Oracle 数据库由操作系统文件组成，这些文件为数据库信息提供实际物理存储区。</li><li>Oracle 数据库存储结构包括逻辑结构和物理结构</li></ul><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@6adc2548bcbe63e2abd243ae48e7c2c8bdfde4c5/2021/04/13/17186f714f927a0451093f95fabde856.png" width="70%"><ul><li>Oracle数据库总体结构可分解为三种结构<ul><li>存储结构：物理存储结构、逻辑存储结构</li><li>内存结构：系统全局区（SGA）和程序全局区（PGA）</li><li>进程结构：用户进程、服务器进程和后台进程</li></ul></li></ul><h2 id="Oracle物理存储结构"><a href="#Oracle物理存储结构" class="headerlink" title="Oracle物理存储结构"></a>Oracle物理存储结构</h2><ul><li>Oracle数据库的存储结构分为<strong>物理存储结构</strong>和<strong>逻辑存储结构</strong>两种，分别描述了在操作系统中和数据库系统内部数据的组织与管理方式<ul><li><strong>物理存储结构</strong>主要描述Oracle数据库外部存储结构，即在操作系统中的数据存在形式。它与操作系统平台相关，以<strong>操作系统的文件形式</strong>存在</li><li><strong>逻辑存储结构</strong>主要描述Oracle数据库的内部存储结构，即描述Oracle数据库中如何组织，管理数据。主要包括<strong>表空间，段，区和数据块</strong></li><li>ORACLE数据库中的数据逻辑存储在<strong>表空间</strong>中，物理存储在<strong>数据文件</strong>中 </li></ul></li></ul><table><thead><tr><th align="center">物理结构包含的文件</th><th align="center">说明</th><th align="center">后缀</th><th align="center">存放内容</th></tr></thead><tbody><tr><td align="center">数据文件</td><td align="center">存放数据库数据的物理文件</td><td align="center"><code>.DBF</code></td><td align="center">表中的数据；索引数据；数据字典</td></tr><tr><td align="center">控制文件</td><td align="center">记录数据库的物理结构</td><td align="center"><code>.CTL</code></td><td align="center">数据库名;数据库数据文件和日志文件的名字和位置;</td></tr><tr><td align="center">日志文件</td><td align="center">记录对数据所作的修改</td><td align="center"><code>.LOG</code></td><td align="center">联机重做日志文件和归档日志文件</td></tr></tbody></table><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@d4a25edcd38b38ee36f61f24b395b90770434042/2021/04/13/9225dace2133f26e8f4d1c18a6d30e74.png" width="80%"><h2 id="Oracle逻辑存储结构"><a href="#Oracle逻辑存储结构" class="headerlink" title="Oracle逻辑存储结构"></a>Oracle逻辑存储结构</h2><ul><li>一个数据库在物理上包含多个数据文件，在逻辑上包含多个表空间</li><li>一个表空间包含一个或多个数据文件，一个数据文件只能从属于某个表空间</li><li>数据库的逻辑块由一个或多个操作系统块构成</li><li>一个逻辑区只能从属于某一个数据文件，而一个数据文件可包含一个或多个逻辑区</li></ul><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@22d7d92fada0460ccaef2c55223b6dfb737540bb/2021/04/13/e093a3867ca5c7f14d4c86c80a5b3fc9.png" width="50%"><ul><li>表空间是Oracle数据库中数据的逻辑组织单位，通过表空间来组织数据库中的数据</li><li>数据库逻辑上由一个或多个表空间组成，表空间物理上是由一个或多个数据文件组成</li></ul><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@fdcab7cf65ed7d04a33559cb72388fa2e7cb09ba/2021/04/13/3a11c8789f696ebc6f127435c2b4c80d.png" width="80%"><div class="note success simple"><p><strong>一个表空间由一组段组成，一个段由一组区组成，一个区由一批数据块组成，一个数据块对应一个或多个物理块</strong></p></div><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@0b56f481b1e0a4a245d0da852e895d9bb6f7c91d/2021/04/13/0e9a477c4fea4f3a8d51cf0dc9ad3db5.png" width="60%"><ul><li>Oracle有以下默认表空间</li></ul><table><thead><tr><th align="center">表空间名称</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">CWMLITE</td><td align="center">联机分析处理（OLAP)</td></tr><tr><td align="center">DRSYS</td><td align="center">存放与工作空间设置有关的信息</td></tr><tr><td align="center">EXAMPLE</td><td align="center">存放实例（Instance）信息</td></tr><tr><td align="center">INDEX</td><td align="center">存放数据库中的索引信息</td></tr><tr><td align="center"><code>SYSTEM</code></td><td align="center">每个Oracle数据库都必须具备的部分</td></tr><tr><td align="center"><code>TEMP</code></td><td align="center">存储临时表</td></tr><tr><td align="center">TOOLS</td><td align="center">存放数据库工具软件所需的数据库对象</td></tr><tr><td align="center"><code>UNDOTBS</code></td><td align="center">保存回滚段为RBS</td></tr><tr><td align="center"><code>USERS</code></td><td align="center">存放用户私有信息</td></tr></tbody></table><ul><li><strong>段（Segment）</strong>是为特定的数据对象（表、索引、回滚等）分配的一系列数据区，由一个或者多个区组成<ul><li>数据段：存储表中的所有数据</li><li>索引段：存储表上最佳查询的所有索引数据</li><li>临时段：存储表排序操作期间建立的临时表的数据</li><li>回滚段：存储修改之前的位置和值，是Oracle的撤销机制</li></ul></li><li><strong>区（Extent）</strong>是由连续的数据块结合而成，是数据库存储空间分配的逻辑单位<ul><li>区是由段分配的，分配的第一个区称初始区，以后分配的区称增量区</li><li>使用数据区的目的是用来保存特定数据类型的数据，也是表中数据增长的基本单位</li></ul></li><li><strong>数据块（Data Blocks）</strong>是数据库使用的IO最小单元，一个数据块对应一个或者多个物理块，大小由参数DB_BLOCK_SIZE设置<ul><li>数据块的结构包括块头和存储区的两个部分</li></ul></li><li><strong>用户</strong><ul><li>用户是在实例下建立的用户是在实例下建立的。不同实例可以建相同名字的用户。</li><li>Oracle数据库建好后，要想在数据库里建表，必须先为数据库建立用户，并为用户指定表空间。</li></ul></li></ul><div class="note success simple"><p>Oracle里面有两个默认的账号，一个是<code>system</code>（超级用户），一个是<code>sys</code>（超级管理员）</p></div><ul><li><p><strong>表</strong></p><ul><li>有了数据库，表空间和用户，就可以用自定义的用户在自己的表空间中创建表了。有了表就可以存储数据了。</li></ul></li><li><p>表的数据，是由用户放入某一个表空间的， 而这个表空间会随机把这些表数据放到一个或者多个数据文件中。由于oracle的数据库不是普通的概念，oracle是 由用户和表空间对数据进行管理和存放的。但是表不是由表空间去查询的，而是由用户去查的。因为不同用户可以在同一个表空间建立同一个名字的表!这里的区分就是用户了! ! ! !</p></li></ul><h1 id="创建用户和表空间"><a href="#创建用户和表空间" class="headerlink" title="创建用户和表空间"></a>创建用户和表空间</h1><ul><li>打开<code>cmd</code>命令窗口后，按以下步骤操作<ol><li>以超级管理员身份登录</li><li>创建表空间</li><li>创建用户</li><li>给用户授权</li><li>查询测试</li></ol></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--启动sqlplus不登录</span></span><br><span class="line">sqlplus /nolog;</span><br><span class="line"><span class="comment">--1. 通过超级管理员以dba身份登录</span></span><br><span class="line">conn sys/口令密码 as sysdba;</span><br><span class="line"><span class="comment">-- 查询实例</span></span><br><span class="line"><span class="keyword">select</span> instance_name <span class="keyword">from</span> v$<span class="keyword">instance</span>;</span><br><span class="line"><span class="comment">--2. 创建表空间</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">tablespace</span> 表空间名 <span class="keyword">datafile</span> <span class="string">`文件路径\文件名.dbf`</span> <span class="keyword">size</span> 空间大小; </span><br><span class="line"><span class="comment">--3. 创建用户并指定表空间</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">user</span> 用户名 <span class="keyword">identified</span> <span class="keyword">by</span>密码 <span class="keyword">default</span> <span class="keyword">tablespace</span> 表空间; </span><br><span class="line"><span class="comment">--4. 给用户授予dba的权限</span></span><br><span class="line"><span class="keyword">grant</span> dba <span class="keyword">to</span> 用户; </span><br><span class="line"><span class="comment">-- 退出</span></span><br><span class="line">exit;</span><br><span class="line"><span class="comment">-- 用新创建的用户登录</span></span><br><span class="line">conn 用户名/密码</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">sqlplus /nolog;</span><br><span class="line">conn sys/口令密码 as sysdba;</span><br><span class="line"><span class="comment">-- 查找实例,可以看到有一个humandb实例,是通过DBCA创建的,就在这个实例下创建用户</span></span><br><span class="line"><span class="keyword">select</span> instance_name <span class="keyword">from</span> v$<span class="keyword">instance</span>;</span><br><span class="line">INSTANCE_NAME</span><br><span class="line"><span class="comment">----------------</span></span><br><span class="line">humandb</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">tablespace</span> scott_tb_space <span class="keyword">datafile</span> <span class="string">&#x27;d:/tbspace/scott_tb_space.dbf&#x27;</span>  <span class="keyword">size</span> <span class="number">200</span>m; </span><br><span class="line"><span class="keyword">create</span> <span class="keyword">user</span> scott_user <span class="keyword">identified</span> <span class="keyword">by</span> <span class="number">123</span> <span class="keyword">default</span> <span class="keyword">tablespace</span> scott_tb_space; </span><br><span class="line"><span class="keyword">grant</span> dba <span class="keyword">to</span> scott_user; </span><br><span class="line">exit;</span><br><span class="line">conn scott_user/123</span><br></pre></td></tr></table></figure><ul><li>连接到sql developer可视化工具</li></ul><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@1f8b1551d484840c719cd72c79f1640642582b86/2021/04/13/43122e9bbcf02b8ca79fc1777dd9e63e.png" width="60%"><ul><li>打开【SQL工作表】，进行测试</li></ul><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@5afefa0708ae319db1dbf7e144a7d95ecf2dd43c/2021/04/13/7557da549d74ac7f2e9271393ddcf437.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Oracle体系结构&quot;&gt;&lt;a href=&quot;#Oracle体系结构&quot; class=&quot;headerlink&quot; title=&quot;Oracle体系结构&quot;&gt;&lt;/a&gt;Oracle体系结构&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;Oracle Database，又名Oracle RDBMS，或</summary>
      
    
    
    
    <category term="数据库" scheme="http://xiaoliblog.cn/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    <category term="Oracle" scheme="http://xiaoliblog.cn/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/Oracle/"/>
    
    
    <category term="Oracle" scheme="http://xiaoliblog.cn/tags/Oracle/"/>
    
  </entry>
  
  <entry>
    <title>Nginx🎯Nginx安装及使用</title>
    <link href="http://xiaoliblog.cn/page/Nginx02.html"/>
    <id>http://xiaoliblog.cn/page/Nginx02.html</id>
    <published>2021-04-11T04:46:45.684Z</published>
    <updated>2021-04-11T06:13:05.721Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Windows下安装"><a href="#Windows下安装" class="headerlink" title="Windows下安装"></a>Windows下安装</h1><h2 id="下载Nginx"><a href="#下载Nginx" class="headerlink" title="下载Nginx"></a>下载Nginx</h2><ul><li>访问Nginx官网下载稳定版本：<a href="http://nginx.org/en/download.html">http://nginx.org/en/download.html</a></li></ul><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@6d1855f191403783057b0b22811668f11acb47b5/2021/04/11/3ba71998b0e5eac45c6bbc2b9a4d74e6.png" width="50%"><ul><li>以nginx/Windows-1.18.0为例，直接下载压缩包，解压后如下</li></ul><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@c0b2278bd82dc184a4be357dfc1366d8c586c300/2021/04/11/fbcc335ae7590834fa92c7461af399bf.png" width="80%"><h2 id="启动Nginx"><a href="#启动Nginx" class="headerlink" title="启动Nginx"></a>启动Nginx</h2><ul><li><p>第一种方式：直接双击<code>nginx.exe</code>，双击后一个黑色的弹窗一闪而过</p></li><li><p>第二种方式：打开cmd命令窗口，切换到nginx解压目录下，输入命令<code>nginx.exe</code>，回车即可</p></li><li><p>小诀窍，在指定目录下按<code>Shift+鼠标右键</code>用Powershell窗口打开，可以输入<code>start cmd</code>打开命令窗口，也可以直接使用</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@fdcc467a4c0de39c32e9bf0b99131a03645bfc0b/2021/04/11/19d9951a7c988e365acbba3beeba3953.png"></p><ul><li>当出现窗口一闪而过时，可以检查Nginx压缩目录下<code>logs\error.log</code>，出现如下表示默认80端口被占用</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2021&#x2F;04&#x2F;11 13:04:48 [emerg] 10728#19784: bind() to 0.0.0.0:80 failed (10013: An attempt was made to access a socket in a way forbidden by its access permissions)</span><br></pre></td></tr></table></figure><ul><li>解决方法，修改<code>conf/nginx.conf</code>配置文件，修改成如下</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">     listen       8100;</span><br><span class="line">     server_name  localhost;</span><br><span class="line"></span><br><span class="line">     #charset koi8-r;</span><br><span class="line"></span><br><span class="line">     #access_log  logs&#x2F;host.access.log  main;</span><br><span class="line"></span><br><span class="line">     location &#x2F; &#123;</span><br><span class="line">         root   html;</span><br><span class="line">         index  index.html index.htm;</span><br><span class="line">     &#125;</span><br></pre></td></tr></table></figure><ul><li>这时候再点击开启nginx，这时候会出现是否出现安全提示，然后在浏览器中输入<code>127.0.0.1:8100</code>，出现如下页面，表示安装成功</li></ul><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@5836d8642d8240c73ed83c50d303362d9f842b0d/2021/04/11/d1f3927dafa8e313c92a0f03f316b11f.png"></p><h1 id="Linux下安装"><a href="#Linux下安装" class="headerlink" title="Linux下安装"></a>Linux下安装</h1><div class="note success simple"><p>可以通过宝塔可视化界面在软件商店下载，以下介绍命令行下载方法</p></div><ul><li>访问Nginx官网下载稳定版本：<a href="http://nginx.org/en/download.html">http://nginx.org/en/download.html</a></li></ul><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@493212c5bdcc6400686fef8001b9868895440ba8/2021/04/11/9ef659c915d7564f3ff790bc90d932af.png" width="50%"><ul><li>下载压缩包后，通过<code>Xftp</code>上传到Linux服务器，移动到<code>/usr/local/</code>下</li><li>上传后通过命令进行解压</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxcf nignx-1.18.0.tar.gz</span><br></pre></td></tr></table></figure><ul><li>进行Nginx目录进行配置安装</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">#进入nginx目录</span></span></span><br><span class="line">cd nginx-1.9.9</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 自动配置</span></span><br><span class="line">./configure</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> make</span></span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><ul><li>启动Nginx</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 进入</span></span><br><span class="line">cd /usr/local/nginx/sbin</span><br><span class="line"><span class="meta">#</span><span class="bash"> 执行</span></span><br><span class="line">./nginx</span><br></pre></td></tr></table></figure><ul><li>端口修改，通过vim修改</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cd conf/</span><br><span class="line">cat nginx.conf</span><br><span class="line"><span class="meta">#</span><span class="bash"> 修改</span></span><br><span class="line">vim nginx.conf</span><br><span class="line"><span class="meta">#</span><span class="bash"> 重新加载</span></span><br><span class="line">./nginx -s reload</span><br></pre></td></tr></table></figure><h1 id="Nginx常用命令"><a href="#Nginx常用命令" class="headerlink" title="Nginx常用命令"></a>Nginx常用命令</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/nginx/sbin/</span><br><span class="line">./nginx # 启动</span><br><span class="line">./nginx -s stop  # 停止</span><br><span class="line">./nginx -s quit  # 安全退出</span><br><span class="line">./nginx -s reload  # 重新加载配置文件</span><br><span class="line">ps aux|grep nginx  # 查看Nginx进程</span><br></pre></td></tr></table></figure><h1 id="Nginx实例"><a href="#Nginx实例" class="headerlink" title="Nginx实例"></a>Nginx实例</h1><ul><li>假设有一个项目，比如博客网站（<code>https://xiaoliblog.cn</code>)，开了两个服务器，分别是<code>8080</code>和<code>8081</code>端口，但是用户只想通过<code>80</code>端口就可以访问服务，且每个服务器权重不一样，这就需要Nginx进行反向代理和负载均衡了</li></ul><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@ad85d595a9e07b59e56e0833bc7d7bb77c0004bf/2021/04/11/9c555f2c21f029f27f5bf9a59fdd43ae.png" width="50%"><h2 id="Nginx配置文件"><a href="#Nginx配置文件" class="headerlink" title="Nginx配置文件"></a>Nginx配置文件</h2><ul><li>Nginx的设置都在<code>\conf\nginx.conf</code>中进行，其结构大致分为如下</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">全局配置模块</span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections  1024;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">    http 配置</span><br><span class="line">    upstream xx&#123;</span><br><span class="line">        &#x2F;&#x2F; 负载均衡配置</span><br><span class="line">    &#125;</span><br><span class="line">    server &#123;</span><br><span class="line">        listen       80;</span><br><span class="line">        server_name  localhost;</span><br><span class="line">        &#x2F;&#x2F;服务80端口的代理服务器配置</span><br><span class="line">        location &#x2F;&#123;   #根目录下的请求发送到128服务器</span><br><span class="line">           &#x2F;&#x2F;xxx  128.xxx</span><br><span class="line">        &#125;</span><br><span class="line">        location &#x2F;admin&#123; #admin下面的请求发送到47服务器</span><br><span class="line">           &#x2F;&#x2F;xxx 47</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    server &#123;</span><br><span class="line">        listen       443;</span><br><span class="line">        server_name  localhost;</span><br><span class="line">        &#x2F;&#x2F;代理</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>配置文件详情请参考<a href="https://www.runoob.com/w3cnote/nginx-setup-intro.html">https://www.runoob.com/w3cnote/nginx-setup-intro.html</a></li><li>修改<code>conf</code>文件，让80端口服务器代理8081和8080服务</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">events &#123;</span><br><span class="line">    worker_connections  1024;</span><br><span class="line">&#125;</span><br><span class="line">http &#123;</span><br><span class="line">    #用于设置负载均衡,名称自定义</span><br><span class="line">    upstream xiaoliblog &#123;</span><br><span class="line">        #weight设置权重</span><br><span class="line">        server 127.0.0.1:8080  wegiht&#x3D;3;</span><br><span class="line">        server 127.0.0.1:8081  wegiht&#x3D;1;</span><br><span class="line">    &#125;</span><br><span class="line">    server &#123;</span><br><span class="line">        listen       80;</span><br><span class="line">        server_name  localhost;</span><br><span class="line">        </span><br><span class="line">        location &#x3D; &#x2F;50x.html &#123;</span><br><span class="line">            root   html;</span><br><span class="line">            index index.html index.html;</span><br><span class="line">            proxy_pass http:&#x2F;&#x2F;xiaoliblog;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>修改后在cmd命令输入重新加载配置文件命令</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nginx -s reload  # 重新加载配置文件</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Windows下安装&quot;&gt;&lt;a href=&quot;#Windows下安装&quot; class=&quot;headerlink&quot; title=&quot;Windows下安装&quot;&gt;&lt;/a&gt;Windows下安装&lt;/h1&gt;&lt;h2 id=&quot;下载Nginx&quot;&gt;&lt;a href=&quot;#下载Nginx&quot; class</summary>
      
    
    
    
    <category term="Linux运维" scheme="http://xiaoliblog.cn/categories/Linux%E8%BF%90%E7%BB%B4/"/>
    
    <category term="Nginx" scheme="http://xiaoliblog.cn/categories/Linux%E8%BF%90%E7%BB%B4/Nginx/"/>
    
    
    <category term="Nginx" scheme="http://xiaoliblog.cn/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>Nginx🎯反向代理及负载均衡</title>
    <link href="http://xiaoliblog.cn/page/Nginx01.html"/>
    <id>http://xiaoliblog.cn/page/Nginx01.html</id>
    <published>2021-04-11T03:03:40.625Z</published>
    <updated>2021-04-11T04:45:44.558Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Nginx"><a href="#Nginx" class="headerlink" title="Nginx"></a>Nginx</h1><h2 id="应用场景"><a href="#应用场景" class="headerlink" title="应用场景"></a>应用场景</h2><ul><li>我们公司项目刚刚上线的时候，并发量小，用户使用的少，所以在低并发的情况下，一个jar包启动应用就够了，然后内部tomcat返回内容给用户</li></ul><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@911ca2e6e9fdc859be17890e9f4a2a1991929119/2021/04/11/9c3e74be21a2248894b40d92f938d0b8.png" width="50%"><ul><li>但是慢慢的，使用我们平台的用户越来越多，并发量慢慢增大了，这时候一台服务器满足不了我们的需求了</li></ul><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@e349144ff55be909033d17ff13f132624ee5fda9/2021/04/11/61114c3345e425e8c2d44d957d8c94ff.png" width="50%"><ul><li>于是我们横向扩展，又增加了服务器。这个时候几个项目启动在不同的服务器上，用户要访问，就需要增加一个代理服务器了，通过代理服务器来帮我们转发和处理请求</li></ul><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@6ffd554d24cdd8748cba77b9231e32b2c492576c/2021/04/11/5882690a0cbc9f7234e6aa3654897532.png" width="50%"><div class="note success simple"><p>架构：没有加一层解决不了的问题</p></div><ul><li>我们希望这个代理服务器可以帮助我们接收用户的请求，然后将用户的请求按照规则帮我们转发到不同的服务器节点之上。这个过程用户是无感知的，用户并不知道是哪个服务器返回的结果，我们还希望他可以按照服务器的性能提供不同的权重选择，保证最佳体验！所以引出了<code>Nginx</code></li></ul><h2 id="Nginx简介"><a href="#Nginx简介" class="headerlink" title="Nginx简介"></a>Nginx简介</h2><ul><li><strong><code>Nginx</code> (engine x)是一个高性能的HTTP和反向代理web服务器</strong> ，同时也提供了IMAP/POP3/SMTP服务</li><li>Nginx是由伊戈尔·赛索耶夫为俄罗斯访问量第二的Rambler.ru站点(俄文: Pam6nep) 开发的，第一个公开版本0.1.0发布于2004年10月4日。2011年6月1日, nginx 1.0.4发布</li><li><strong>其特点是占有内存少，并发能力强</strong>，实上nginx的并发能力在同类型的网页服务器中表现较好，中国大陆使用nginx网站用户有：百度、东新浪、网易、腾讯、淘宝等。在全球活跃的网站中有12.18%的使用比率，大约为2220万个网站</li><li>Nginx是一个安装非常的简单、 配置文件非常简洁(还能够支持peri语法)、Bug非常少的服务。Nginx 启动特别容易，并且几乎可以做到<code>7 *24</code>不间断运行，即使运行数个月也不需要重新启动。你还能够不间断服务的情况下进行软件版本的升级</li><li>Nginx代码完全用C语言从头写成。官方数据测试表明能够支持高达<code>50,000</code> 个并发连接数的响应</li></ul><h1 id="Nginx作用"><a href="#Nginx作用" class="headerlink" title="Nginx作用"></a>Nginx作用</h1><h2 id="正向代理"><a href="#正向代理" class="headerlink" title="正向代理"></a>正向代理</h2><ul><li>首先了解一下正向代理，正向代理类似一个跳板机，代理访问外部资源，即代理客户端的</li><li>比如我们国内访问谷歌，直接访问访问不到，我们可以通过一个正向代理服务器，比如VPN，请求发到代理服服务器，代理服务器能够访问谷歌，这样由代理去谷歌取到返回数据，再返回给我们，这样我们就能访问谷歌了</li></ul><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@4f0c5ff932895c925322a832754590c428f37b9b/2021/04/11/fc765e677c7ee81a8937bcb5326b6a63.png" width="70%"><ul><li>正向代理的用途：<ul><li>访问原来无法访问的资源，如google</li><li>可以做缓存，加速访问资源</li><li>对客户端访问授权，上网进行认证</li><li>代理可以记录用户访问记录（上网行为管理），对外隐藏用户信息</li></ul></li></ul><h2 id="反向代理"><a href="#反向代理" class="headerlink" title="反向代理"></a>反向代理</h2><ul><li>反向代理（Reverse Proxy）实际运行方式是指以代理服务器来接受internet上的连接请求，然后将请求转发给内部网络上的服务器，并将从服务器上得到的结果返回给internet上请求连接的客户端，此时代理服务器对外就表现为一个服务器</li></ul><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@40fdbb511a19c8c0e7abc7a8efc19d926c37bf85/2021/04/11/8f211529492c34cd7331ffd74753effa.png" width="70%"><ul><li>反向代理的作用：<ul><li>保证内网的安全，阻止web攻击，大型网站，通常将反向代理作为公网访问地址，Web服务器是内网</li><li>负载均衡，通过反向代理服务器来优化网站的负载</li></ul></li><li><strong>正向代理即是客户端代理, 代理客户端, 服务端不知道实际发起请求的客户端</strong></li><li><strong>反向代理即是服务端代理, 代理服务端, 客户端不知道实际提供服务的服务端</strong></li></ul><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@cc67e5063fb2a099bc087448faf3ffcc74c5a6f9/2021/04/11/4eba39723099f2e82344f0b28e42e9c9.png" width="70%"><h2 id="负载均衡"><a href="#负载均衡" class="headerlink" title="负载均衡"></a>负载均衡</h2><ul><li>Nginx提供的负载均衡策略有两种<ul><li><strong>内置策略</strong>，比如轮询，加权轮询，Ip hash</li><li><strong>扩展策略</strong>，就天马行空，只有你想不到的没有他做不到的</li></ul></li><li><strong>轮询</strong></li></ul><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@e0c87fa738dab812bd553052d3d0a466b2f32dee/2021/04/11/9a9b39ed027ff2be11e1216829a81f65.png" width="70%"><ul><li><strong>加权轮询</strong></li></ul><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@7a4fc505d883229027923d1942d4f4bcee690240/2021/04/11/c9638b9f38894388b7112eeeb76bad3d.png" width="70%"><ul><li><strong>Ip hashi对客户端请求的ip进行hash操作，然后根据hash结果将同一个客户端ip的请求分发给同一台服务器进行处理， 可以解决session不共享的问题</strong></li></ul><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@c32fb2d469b601cb2ff7a249a980a547e45da073/2021/04/11/62b06b2f80ee3298ed5bff22cced5299.png" width="70%"><h2 id="动静分离"><a href="#动静分离" class="headerlink" title="动静分离"></a>动静分离</h2><ul><li>动静分离，在我们的软件开发中，有些请求是需要后台处理的，有些请求是不需要经过后台处理的(如: CSS、 html、 jpg、 js等等文件)，这些不需要经过后台处理的文件称为静态文件。让动态网站里的动态网页根据一定规则把不变的资源和经常变的资源区分开来，动静资源做好了拆分以后，我们就可以根据静态资源的特点将其做缓存操作。提高资源响应的速度</li></ul><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@024f3c90782695fb62ab2937821d5d4a9e3a7661/2021/04/11/2026271827a36c16774033110e0c74bd.png" width="70%">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Nginx&quot;&gt;&lt;a href=&quot;#Nginx&quot; class=&quot;headerlink&quot; title=&quot;Nginx&quot;&gt;&lt;/a&gt;Nginx&lt;/h1&gt;&lt;h2 id=&quot;应用场景&quot;&gt;&lt;a href=&quot;#应用场景&quot; class=&quot;headerlink&quot; title=&quot;应用场景&quot;</summary>
      
    
    
    
    <category term="Linux运维" scheme="http://xiaoliblog.cn/categories/Linux%E8%BF%90%E7%BB%B4/"/>
    
    <category term="Nginx" scheme="http://xiaoliblog.cn/categories/Linux%E8%BF%90%E7%BB%B4/Nginx/"/>
    
    
    <category term="Nginx" scheme="http://xiaoliblog.cn/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>ECMAScript 6🌞Babel转码及ES6模块化</title>
    <link href="http://xiaoliblog.cn/page/ECMAScript01.html"/>
    <id>http://xiaoliblog.cn/page/ECMAScript01.html</id>
    <published>2021-04-10T16:00:00.000Z</published>
    <updated>2021-04-19T09:46:47.522Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Babel"><a href="#Babel" class="headerlink" title="Babel"></a>Babel</h1><ul><li>ES6的某些高级语法在浏览器环境甚至是Node.js环境中无法执行。而<code>Babel</code>是一个广泛使用的转码器，可以将ES6代码转为ES5代码，从而在现有环境中执行。这意味着你可以用ES6编写程序，而不用担心环境是否支持</li><li>Babel官方文档：<a href="https://www.babeljs.cn/">https://www.babeljs.cn/</a></li></ul><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><ul><li>Babel提供<code>babel-cli</code>工具，用于命令行转码，它的安装命令如下</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">npm install -g babel-cli</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看是否安装成功</span></span><br><span class="line">babel --version</span><br></pre></td></tr></table></figure><h2 id="Babel的使用"><a href="#Babel的使用" class="headerlink" title="Babel的使用"></a>Babel的使用</h2><ul><li>创建<code>babel</code>文件夹，做为工程目录</li><li>初始化项目</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm init -y</span><br></pre></td></tr></table></figure><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@135e5281772a0210fab36b948ef74c2a00fcd5fa/2021/04/19/19eb8aa20f706fcc92bd4c64fe2baef3.png" width="50%"><ul><li>在项目目录下创建文件夹<code>src/example.js</code>，以下是ES6代码</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//转换前</span></span><br><span class="line"><span class="comment">//定义变量</span></span><br><span class="line"><span class="keyword">let</span> input = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line"><span class="comment">//将数组的每个元素+1</span></span><br><span class="line">input = input.map(<span class="function"><span class="params">item</span> =&gt;</span> item+<span class="number">1</span>)</span><br><span class="line"><span class="built_in">console</span>.log(input)</span><br></pre></td></tr></table></figure><ul><li>创建一个<code>.babelrc</code>配置文件，存放在项目的根目录下，该文件用来设置转码规则和插件，基本格式如下<img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@4c1804ac445596e0c4c352d424acb3260005cf02/2021/04/19/673b0af4c51b826c94dfbed3f177e8a3.png"></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;presets&quot;: [&quot;es2015&quot;],</span><br><span class="line">    &quot;plugins&quot;: []</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="note success simple"><p><code>presets</code>字段设定转码规则，将ES2015规则加入<code>.babelrc</code></p></div><ul><li>安装转码器，在项目中安装</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save-dev babel-preset-es2015</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@c852cba93ec31aaaa5677d5b5bded2c9ed6bf243/2021/04/19/70c99a6ad6ad27b2d9482c5e1fe836a5.png"></p><div class="note success simple"><p>转换器其实就是一个映射器，把let=&gt;var，const=&gt;var，=&gt; 转为function()</p></div><ul><li>进行转换</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">babel src -d dist</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@2ad965be92a016eed3646a3bb49051ef3e7f2497/2021/04/19/477a2271d46d9fcff6d903756615e70f.png"></p><ul><li>可以看到生成了一个<code>dist\example.js</code>文件，其内容就是ES2015的语法</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&quot;use strict&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//转换前</span></span><br><span class="line"><span class="comment">//定义变量</span></span><br><span class="line"><span class="keyword">var</span> input = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</span><br><span class="line"><span class="comment">//将数组的每个元素+1</span></span><br><span class="line">input = input.map(<span class="function"><span class="keyword">function</span> (<span class="params">item</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> item + <span class="number">1</span>;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="built_in">console</span>.log(input);</span><br></pre></td></tr></table></figure><h2 id="Babel自定义脚本"><a href="#Babel自定义脚本" class="headerlink" title="Babel自定义脚本"></a>Babel自定义脚本</h2><ul><li>通过<code>package.json</code>进行包管理，不需要输入命令进行转换，改写<code>package.json</code></li></ul><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="comment">//...</span></span><br><span class="line"> <span class="attr">&quot;scripts&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;dev&quot;</span>:<span class="string">&quot;babel src -d dist&quot;</span></span><br><span class="line">    <span class="comment">//命令名：命令值</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">//...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>转码的时候，执行下面的命令</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run dev</span><br></pre></td></tr></table></figure><h1 id="ES6模块化"><a href="#ES6模块化" class="headerlink" title="ES6模块化"></a>ES6模块化</h1><ul><li>ES6使用<code>expert</code>和<code>import</code>来导入、导出模块</li></ul><h2 id="第一种写法"><a href="#第一种写法" class="headerlink" title="第一种写法"></a>第一种写法</h2><ul><li>创建<code>model-es6</code>文件夹</li><li>创建<code>src/UserAPI.js</code>文件·，导出模块</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">getList</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">//在真实业务中，异步获取数据</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;获取数据列表&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">save</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;保存数据&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>创建<code>src/UserComponent.js</code>文件，导入上面的模块</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//只取需要的方法即可，多个方法用逗号隔开</span></span><br><span class="line"><span class="keyword">import</span> &#123;getList,save&#125; <span class="keyword">from</span> <span class="string">&#x27;./UserAPI.js&#x27;</span>;</span><br><span class="line">getList()</span><br><span class="line">save()</span><br><span class="line"></span><br><span class="line"><span class="comment">//默认不支持ES6 语法的 import</span></span><br></pre></td></tr></table></figure><ul><li>不支持ES6，使用Babel初始化项目，在项目目录下执行以下命令</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm npm init -y</span><br></pre></td></tr></table></figure><ul><li>在根目录下创建<code>.babelrc</code>的配置文件，注意文件后缀为babelrc，然后添加信息</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;presets&quot;: [&quot;es2015&quot;],</span><br><span class="line">    &quot;plugins&quot;: []</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>修改<code>package.json</code>文件，或者直接输入命令</li></ul><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">   <span class="attr">&quot;scripts&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;build&quot;</span>:<span class="string">&quot;babel src -d dist&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>执行添加的命令</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run build</span><br></pre></td></tr></table></figure><ul><li>运行<code>dist</code>目录下的<code>UserComponent.js</code></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node UserComponent.js</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@c031980505fcef150fe55f5216d97eb42d84685a/2021/04/19/9071631ec2cada14ef290a29168d7bde.png"></p><h2 id="第二种方式"><a href="#第二种方式" class="headerlink" title="第二种方式"></a>第二种方式</h2><ul><li>其余都一样，只是导入导出模块更加简化了</li><li>改写<code>UserAPI.js</code>导出模块，可以看到做为一个对象全部导出</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span>&#123;</span><br><span class="line">    <span class="function"><span class="title">getList</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="comment">//在真实业务中，异步获取数据</span></span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&quot;获取数据列表&quot;</span>)</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="function"><span class="title">save</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&quot;保存数据&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>改写<code>UserComponent.js</code>导入模块</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//所有方法赋给一个对象user</span></span><br><span class="line"><span class="keyword">import</span> user <span class="keyword">from</span> <span class="string">&#x27;./UserAPI.js&#x27;</span>;</span><br><span class="line">user.getList()</span><br><span class="line">user.save()</span><br><span class="line"></span><br><span class="line"><span class="comment">//默认不支持ES6 语法的 import</span></span><br></pre></td></tr></table></figure><ul><li>然后继续使用Babel执行即可</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Babel&quot;&gt;&lt;a href=&quot;#Babel&quot; class=&quot;headerlink&quot; title=&quot;Babel&quot;&gt;&lt;/a&gt;Babel&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;ES6的某些高级语法在浏览器环境甚至是Node.js环境中无法执行。而&lt;code&gt;Babel&lt;/code</summary>
      
    
    
    
    <category term="Web前端" scheme="http://xiaoliblog.cn/categories/Web%E5%89%8D%E7%AB%AF/"/>
    
    <category term="ECMAScript 6" scheme="http://xiaoliblog.cn/categories/Web%E5%89%8D%E7%AB%AF/ECMAScript-6/"/>
    
    
    <category term="ECMAScript 6" scheme="http://xiaoliblog.cn/tags/ECMAScript-6/"/>
    
  </entry>
  
  <entry>
    <title>ECMAScript 6🌞ES6基础语法</title>
    <link href="http://xiaoliblog.cn/page/ECMAScript01.html"/>
    <id>http://xiaoliblog.cn/page/ECMAScript01.html</id>
    <published>2021-04-09T16:00:00.000Z</published>
    <updated>2021-04-19T09:47:27.883Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ECMAScript-6"><a href="#ECMAScript-6" class="headerlink" title="ECMAScript 6"></a>ECMAScript 6</h1><ul><li>ECMAScript 6.0（以下简称 ES6）是 JavaScript 语言的下一代标准，已经在 2015 年 6 月正式发布了。它的目标，是使得 JavaScript 语言可以用来编写复杂的大型应用程序，成为企业级开发语言</li><li>参考阮一峰《ECMAScript 6入门》：<a href="https://es6.ruanyifeng.com/">https://es6.ruanyifeng.com/</a></li><li>ECMAScript的快速发展</li></ul><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@44a889db027fa4134c99e8cbad75cff772e03b0f/2021/04/18/b4f352719961026633968827bdd358db.png"></p><h2 id="let和const命令"><a href="#let和const命令" class="headerlink" title="let和const命令"></a>let和const命令</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//传统的定义变量和常量的方式 都使用var</span></span><br><span class="line"><span class="keyword">var</span> name1 = <span class="string">&quot;es6&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> PI1 = <span class="built_in">Math</span>.PI;</span><br><span class="line"></span><br><span class="line"><span class="comment">//ES6定义方式</span></span><br><span class="line"><span class="keyword">let</span> name2 = <span class="string">&quot;es6&quot;</span>;</span><br><span class="line">    </span><br><span class="line"><span class="comment">//定义常量</span></span><br><span class="line"><span class="keyword">const</span> PI2 = <span class="built_in">Math</span>.PI;</span><br></pre></td></tr></table></figure><ul><li><code>let</code>和<code>const</code>的使用可以为我们解决两大问题<ol><li>var变量穿透（<code>let</code>)</li><li>常量修改（<code>const</code>)</li></ol></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">for</span>(<span class="params"><span class="keyword">var</span> i =<span class="number">0</span>;i&lt;<span class="number">5</span>;i++</span>)</span>&#123;</span><br><span class="line">   <span class="built_in">console</span>.log(i);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//这里就会造成变量穿透</span></span><br><span class="line"><span class="built_in">console</span>.log(i);</span><br></pre></td></tr></table></figure><ul><li>如下运行结果，5的出现不符合规范</li></ul><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@5849ddcdf3d3b1b7956432e4421823ea30322887/2021/04/18/eddc21ca469a65b21088d0fd00cf69e3.png"></p><ul><li>如果<code>var</code>改为<code>let</code>，就会报错，提醒我们出现变量穿透</li></ul><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@c91b9756acdc71ff67546168d6caeaa4bcb85675/2021/04/18/20689dd2e32b2caf9d9cb6b96dda9939.png"></p><ul><li>如下使用<code>var</code>定义常量，常量可以被修改</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> PI = <span class="built_in">Math</span>.PI;</span><br><span class="line"><span class="built_in">console</span>.log(PI);</span><br><span class="line"><span class="comment">//常量被修改</span></span><br><span class="line">PI = <span class="number">100</span>;</span><br><span class="line"><span class="built_in">console</span>.log(PI);</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@333aeb075cb92eb65f5e65b607c25d55dcc27146/2021/04/18/84f7d2ed1db2392dacb83b61ca668378.png"></p><ul><li>修改为<code>const</code>定义，修改就会报错</li></ul><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@280f68b2e52b960fb09fed739d51dd9baebb9168/2021/04/18/ab1d3308b1084fd32c78e7bfa4dc3805.png"></p><div class="note success simple"><p>在实际开发中，如果是小程序，uniapp或者一些脚手架中，可以大胆的去使用<code>let</code>和<code>const</code><br>但是如果是web开发，建议函数使用var，因为一些低版本浏览器并不支持<code>let</code>和<code>const</code></p></div><h2 id="模板字符串"><a href="#模板字符串" class="headerlink" title="模板字符串"></a>模板字符串</h2><ul><li>以前：都是使用单引号<code>&#39;</code>或者双引号<code>&quot; &quot;</code>来进行字符串拼接</li><li>现在：使用``反引号进行字符串拼接，通过${value}区别值</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//字符串会牵涉到动态部分</span></span><br><span class="line"><span class="keyword">var</span> person = &#123;</span><br><span class="line">   name : <span class="string">&quot;小李&quot;</span>,</span><br><span class="line">   address : <span class="string">&quot;长沙&quot;</span>,</span><br><span class="line">   link : <span class="string">&quot;https://xiaoliblog.cn&quot;</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">let</span> address = <span class="string">&quot;我是&quot;</span>  + person.name + <span class="string">&quot;,现居&quot;</span> + person.address + <span class="string">&quot;,我的博客网站:&quot;</span> + person.link;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;传统&quot;</span>+address);</span><br><span class="line"></span><br><span class="line"><span class="comment">//ES6的语法模板字符串</span></span><br><span class="line"><span class="keyword">let</span> address1 = <span class="string">`我是<span class="subst">$&#123;person.name&#125;</span>,现居<span class="subst">$&#123;person.address&#125;</span>,我的博客网站:<span class="subst">$&#123;person.link&#125;</span>`</span>;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;ES6&quot;</span>+address1);</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@5a564c0eedd96e6638cb0f9c07a35ace9bee861d/2021/04/18/46b2018518e2b7fcf1056ddb80b698a1.png"></p><h2 id="默认参数"><a href="#默认参数" class="headerlink" title="默认参数"></a>默认参数</h2><ul><li>函数默认参数：在方法的参数后面加上一个默认值即可</li><li>比如以下函数，我只传单个参数或者不传，控制台就会输出<code>NaN</code></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//不传参数，默认为undefined</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sum</span>(<span class="params">a,b</span>)</span>&#123;</span><br><span class="line">   <span class="keyword">return</span> a+b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> result = sum(<span class="number">100</span>)</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;result=&quot;</span>+result)</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@bbe5bb406ea408e2b41f7701848645c51ca08847/2021/04/18/5d7f7e1844491dae27542b40dbcf51ae.png"></p><ul><li>这个时候可以使用默认参数，可以不用传值，手动传值优先级更高</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 函数默认参数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sum</span>(<span class="params">a=<span class="number">100</span>,b=<span class="number">100</span></span>)</span>&#123;</span><br><span class="line">   <span class="keyword">return</span> a+b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> result = sum(<span class="number">100</span>)</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;result=&quot;</span>+result)</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@0273c07b58a173cddc32c255199f46e832f2bc7a/2021/04/18/f0920de7fdbf1ac2146228a90d77e950.png"></p><h2 id="箭头函数"><a href="#箭头函数" class="headerlink" title="箭头函数"></a>箭头函数</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 传统函数</span></span><br><span class="line"><span class="keyword">var</span> sum = <span class="function"><span class="keyword">function</span> (<span class="params">a, b</span>) </span>&#123;</span><br><span class="line">   <span class="keyword">return</span> a + b;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//箭头函数 - 改进1</span></span><br><span class="line"><span class="keyword">var</span> sum = <span class="function">(<span class="params">a, b</span>) =&gt;</span> &#123;</span><br><span class="line">   <span class="keyword">return</span> a + b;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//箭头函数 - 改进2</span></span><br><span class="line"><span class="keyword">var</span> sum = <span class="function">(<span class="params">a, b</span>) =&gt;</span> a + b; </span><br></pre></td></tr></table></figure><ul><li>可以发现有以下规律<ul><li>去掉<code>function</code></li><li>在括号后面加箭头</li><li>如果逻辑代码仅有<code>return</code>可以直接省去</li><li>如果参数只有一个，可以把括号也省去</li></ul></li><li>通过箭头函数可以简化一些复杂的函数</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>];</span><br><span class="line"><span class="keyword">var</span> newarr1 = arr.map(<span class="function"><span class="keyword">function</span>(<span class="params">obj</span>)</span>&#123;</span><br><span class="line">   <span class="keyword">return</span> obj+<span class="number">2</span>;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="built_in">console</span>.log(newarr1);</span><br><span class="line"></span><br><span class="line"><span class="comment">//箭头函数简化</span></span><br><span class="line"><span class="keyword">var</span> newarr2 = arr.map(<span class="function">(<span class="params">obj</span>)=&gt;</span>obj+<span class="number">2</span>)</span><br><span class="line"><span class="built_in">console</span>.log(newarr2);</span><br></pre></td></tr></table></figure><h2 id="对象初始化简写"><a href="#对象初始化简写" class="headerlink" title="对象初始化简写"></a>对象初始化简写</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> info = &#123;</span><br><span class="line">   title:<span class="string">&quot;小李博客&quot;</span>,</span><br><span class="line">   link:<span class="string">&quot;https://xiaoliblog.cn&quot;</span>,</span><br><span class="line">   go:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">&quot;加油！&quot;</span>)</span><br><span class="line">   &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//ES6简写</span></span><br><span class="line"><span class="comment">//因为对象是key：value存在</span></span><br><span class="line"><span class="comment">//1. 如果key和变量的名字一致，可以只定义一次即可</span></span><br><span class="line"><span class="comment">//2. 如果value是一个函数，可以把&quot;:function&quot;去掉，只剩下()即可</span></span><br><span class="line"><span class="keyword">var</span> title1 = <span class="string">&quot;小李博客&quot;</span></span><br><span class="line"><span class="keyword">var</span> link1 = <span class="string">&quot;https://xiaoliblog.cn&quot;</span></span><br><span class="line"><span class="keyword">let</span> info2 = &#123;</span><br><span class="line">   title1,</span><br><span class="line">   link1,</span><br><span class="line">   <span class="function"><span class="title">go</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">&quot;加油！&quot;</span>)</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(info2)</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@0182cdd6a7b2390406d8e41afe01629833abaeea/2021/04/18/da35afb4fe779e9afa75d1fd5f12ded0.png"></p><ul><li>应用场景</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> username = <span class="string">&quot;admin&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> password = <span class="string">&quot;123&quot;</span>;</span><br><span class="line">$.ajax(&#123;</span><br><span class="line">   type:<span class="string">&quot;post&quot;</span>,</span><br><span class="line">   url:<span class="string">&quot;xxx&quot;</span>,</span><br><span class="line">   data:&#123;</span><br><span class="line">      username : username,</span><br><span class="line">      password : password</span><br><span class="line">   &#125;,</span><br><span class="line">   success:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">//简化</span></span><br><span class="line"><span class="keyword">var</span> params = &#123;username,password&#125;;</span><br><span class="line">$.ajax(&#123;</span><br><span class="line">   type:<span class="string">&quot;post&quot;</span>,</span><br><span class="line">   url:<span class="string">&quot;xxx&quot;</span>,</span><br><span class="line">   data:params,</span><br><span class="line">   <span class="function"><span class="title">success</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">         </span><br><span class="line">   &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="对象解构"><a href="#对象解构" class="headerlink" title="对象解构"></a>对象解构</h2><ul><li>对象解构能快捷获取对象属性和行为方式</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//因为对象是key：value存在，获取的方式有两种</span></span><br><span class="line"><span class="comment">//1. 通过.</span></span><br><span class="line"><span class="comment">//2. 通过[]</span></span><br><span class="line"><span class="keyword">var</span> title = <span class="string">&quot;小李博客&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> link = <span class="string">&quot;https://xiaoliblog.cn&quot;</span>;</span><br><span class="line"><span class="keyword">let</span> info = &#123;</span><br><span class="line">   title,</span><br><span class="line">   link,</span><br><span class="line">   <span class="function"><span class="title">go</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">       <span class="built_in">console</span>.log(<span class="string">&quot;加油！&quot;</span>);</span><br><span class="line">   &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//通过.和[]方式</span></span><br><span class="line"><span class="built_in">console</span>.log(info.title)</span><br><span class="line"><span class="built_in">console</span>.log(info[<span class="string">&quot;title&quot;</span>])</span><br><span class="line">info[<span class="string">&quot;go&quot;</span>]();</span><br><span class="line"></span><br><span class="line"><span class="comment">//ES6对象结构 --快速获取属性和方法的形式-</span></span><br><span class="line"><span class="keyword">var</span> &#123;title,link,go&#125; = info;</span><br><span class="line"><span class="comment">// 还原代码,以上等价于</span></span><br><span class="line"><span class="comment">//var title = info.title</span></span><br><span class="line"><span class="comment">//var link = info.link</span></span><br><span class="line"><span class="built_in">console</span>.log(title,link)</span><br><span class="line">go()</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@420b274c9b032668877762992f1f23192c2039b2/2021/04/18/c7106f0294c63c248450accb22f16f2e.png"></p><h2 id="传播操作符"><a href="#传播操作符" class="headerlink" title="传播操作符"></a>传播操作符</h2><ul><li>传播操作符可以把一个对象的属性传播到另外一个对象中</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> person = &#123;</span><br><span class="line">   name: <span class="string">&quot;小李博客&quot;</span>,</span><br><span class="line">   address:<span class="string">&quot;长沙&quot;</span>,</span><br><span class="line">   link:<span class="string">&quot;https://xiaoliblog.cn&quot;</span>,</span><br><span class="line">   phone:<span class="number">12134</span>,</span><br><span class="line">   <span class="function"><span class="title">go</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">&quot;加油&quot;</span>)</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//对象解构,person传播给person2</span></span><br><span class="line"><span class="comment">//name,address已经解构出来了,剩下的也会传播给person2</span></span><br><span class="line"><span class="keyword">var</span> &#123;name,address,...person2&#125; = person;</span><br><span class="line"><span class="built_in">console</span>.log(name);</span><br><span class="line"><span class="built_in">console</span>.log(address);</span><br><span class="line"><span class="built_in">console</span>.log(person2);</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@661ac998b3cf77b0d22eebe34ddd5ab2627188c9/2021/04/18/ae93f36bfb449ed72eb7889a93e6e519.png"></p><h2 id="数组Map"><a href="#数组Map" class="headerlink" title="数组Map"></a>数组Map</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//对arr数组中每个元素*2</span></span><br><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>]</span><br><span class="line"><span class="comment">//传统方式</span></span><br><span class="line"><span class="keyword">var</span> newarr = [];</span><br><span class="line"><span class="function"><span class="title">for</span>(<span class="params"><span class="keyword">let</span> i=<span class="number">0</span>;i&lt;arr.length;i++</span>)</span>&#123;</span><br><span class="line">   newarr.push(arr[i]*<span class="number">2</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(newarr);</span><br><span class="line"></span><br><span class="line"><span class="comment">//map -- 自带的循环功能,并且会把处理的值回填到原来的位置</span></span><br><span class="line"><span class="keyword">var</span> newarr2 = arr.map(<span class="function"><span class="keyword">function</span>(<span class="params">ele</span>)</span>&#123;</span><br><span class="line">   <span class="keyword">return</span> ele*<span class="number">2</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">//var newarr2 = arr.map((ele)=&gt;ele*2)</span></span><br><span class="line"><span class="built_in">console</span>.log(newarr2)</span><br><span class="line"></span><br><span class="line"><span class="comment">//map --处理对象中的数据</span></span><br><span class="line"><span class="comment">//需求:每个年龄+1</span></span><br><span class="line"><span class="keyword">var</span> users = [</span><br><span class="line">   &#123;<span class="attr">age</span>:<span class="number">10</span>,<span class="attr">name</span>:<span class="string">&quot;小李&quot;</span>&#125;,</span><br><span class="line">   &#123;<span class="attr">age</span>:<span class="number">12</span>,<span class="attr">name</span>:<span class="string">&quot;小王&quot;</span>&#125;,</span><br><span class="line">   &#123;<span class="attr">age</span>:<span class="number">14</span>,<span class="attr">name</span>:<span class="string">&quot;小刘&quot;</span>&#125;</span><br><span class="line">]</span><br><span class="line"><span class="keyword">var</span> newusers = users.map(<span class="function"><span class="keyword">function</span>(<span class="params">ele</span>)</span>&#123;</span><br><span class="line">   ele.age = ele.age+<span class="number">1</span>;</span><br><span class="line">   <span class="keyword">return</span> ele;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="built_in">console</span>.log(newusers)</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@b9786ecfb4b25ffe4bf04850af4a4458ebb794ab/2021/04/18/c0b757692151dc41e0de9274adce5371.png"></p><h2 id="数组Reduce"><a href="#数组Reduce" class="headerlink" title="数组Reduce"></a>数组Reduce</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">var</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>]</span><br><span class="line"><span class="comment">//第一次取值,a=1,b=2,a+b=3,取代[1,2]的位置</span></span><br><span class="line"><span class="comment">//第二次,a=3,b=3,a+b=6,去掉[3,3]的位置</span></span><br><span class="line"><span class="comment">//依此类推</span></span><br><span class="line"><span class="keyword">var</span> result = arr.reduce(<span class="function"><span class="keyword">function</span>(<span class="params">a,b</span>)</span>&#123;</span><br><span class="line">   <span class="keyword">return</span> a+b</span><br><span class="line">&#125;)</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;result = &quot;</span>,result);</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;ECMAScript-6&quot;&gt;&lt;a href=&quot;#ECMAScript-6&quot; class=&quot;headerlink&quot; title=&quot;ECMAScript 6&quot;&gt;&lt;/a&gt;ECMAScript 6&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;ECMAScript 6.0（以下简称 ES6）</summary>
      
    
    
    
    <category term="Web前端" scheme="http://xiaoliblog.cn/categories/Web%E5%89%8D%E7%AB%AF/"/>
    
    <category term="ECMAScript 6" scheme="http://xiaoliblog.cn/categories/Web%E5%89%8D%E7%AB%AF/ECMAScript-6/"/>
    
    
    <category term="ECMAScript 6" scheme="http://xiaoliblog.cn/tags/ECMAScript-6/"/>
    
  </entry>
  
</feed>
