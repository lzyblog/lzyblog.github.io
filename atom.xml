<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Lzy_Blog</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2020-11-24T12:38:51.603Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>Lzy_Blog</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>网页设计与网站建设</title>
    <link href="http://example.com/2020/11/24/%E7%BD%91%E9%A1%B5%E8%AE%BE%E8%AE%A1%E4%B8%8E%E7%BD%91%E7%AB%99%E5%BB%BA%E8%AE%BE/"/>
    <id>http://example.com/2020/11/24/%E7%BD%91%E9%A1%B5%E8%AE%BE%E8%AE%A1%E4%B8%8E%E7%BD%91%E7%AB%99%E5%BB%BA%E8%AE%BE/</id>
    <published>2020-11-24T12:25:37.343Z</published>
    <updated>2020-11-24T12:38:51.603Z</updated>
    
    
    
    
    <category term="前端" scheme="http://example.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="前端" scheme="http://example.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>C++程序设计</title>
    <link href="http://example.com/2020/11/24/C++%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/"/>
    <id>http://example.com/2020/11/24/C++%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/</id>
    <published>2020-11-24T12:18:07.334Z</published>
    <updated>2020-11-24T12:18:45.175Z</updated>
    
    
    
    
    <category term="后端" scheme="http://example.com/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
    <category term="后端" scheme="http://example.com/tags/%E5%90%8E%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode每日一道</title>
    <link href="http://example.com/2020/11/24/LeetCode%E6%AF%8F%E6%97%A5%E4%B8%80%E9%81%93/"/>
    <id>http://example.com/2020/11/24/LeetCode%E6%AF%8F%E6%97%A5%E4%B8%80%E9%81%93/</id>
    <published>2020-11-24T12:16:51.310Z</published>
    <updated>2020-11-24T12:17:50.226Z</updated>
    
    
    
    
    <category term="LeetCode" scheme="http://example.com/categories/LeetCode/"/>
    
    
    <category term="LeetCode" scheme="http://example.com/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>Linux学习笔记</title>
    <link href="http://example.com/2020/11/24/Linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>http://example.com/2020/11/24/Linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2020-11-24T12:16:02.604Z</published>
    <updated>2020-11-24T12:16:40.307Z</updated>
    
    
    
    
    <category term="Linux" scheme="http://example.com/categories/Linux/"/>
    
    
    <category term="Linux" scheme="http://example.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Python程序设计项目</title>
    <link href="http://example.com/2020/11/24/Python%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/"/>
    <id>http://example.com/2020/11/24/Python%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/</id>
    <published>2020-11-24T12:15:02.582Z</published>
    <updated>2020-11-24T12:15:45.892Z</updated>
    
    
    
    
    <category term="后端" scheme="http://example.com/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>计算机组成原理笔记</title>
    <link href="http://example.com/2020/11/24/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E7%AC%94%E8%AE%B0/"/>
    <id>http://example.com/2020/11/24/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E7%AC%94%E8%AE%B0/</id>
    <published>2020-11-24T12:14:13.807Z</published>
    <updated>2020-11-24T12:14:44.020Z</updated>
    
    
    
    
    <category term="笔记" scheme="http://example.com/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="笔记" scheme="http://example.com/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>计算机网络笔记</title>
    <link href="http://example.com/2020/11/24/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%AC%94%E8%AE%B0/"/>
    <id>http://example.com/2020/11/24/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%AC%94%E8%AE%B0/</id>
    <published>2020-11-24T12:13:43.190Z</published>
    <updated>2020-11-24T12:14:09.708Z</updated>
    
    
    
    
    <category term="笔记" scheme="http://example.com/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="笔记" scheme="http://example.com/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>操作系统笔记</title>
    <link href="http://example.com/2020/11/24/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%AC%94%E8%AE%B0/"/>
    <id>http://example.com/2020/11/24/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%AC%94%E8%AE%B0/</id>
    <published>2020-11-24T12:12:48.878Z</published>
    <updated>2020-11-24T12:13:35.747Z</updated>
    
    
    
    
    <category term="笔记" scheme="http://example.com/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="笔记" scheme="http://example.com/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>HTML+CSS+JavaScript</title>
    <link href="http://example.com/2020/11/24/HTML+CSS+JavaScript/"/>
    <id>http://example.com/2020/11/24/HTML+CSS+JavaScript/</id>
    <published>2020-11-24T12:11:59.134Z</published>
    <updated>2020-11-24T12:12:42.123Z</updated>
    
    
    
    
    <category term="前端" scheme="http://example.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="前端" scheme="http://example.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>蓝桥杯C语言组</title>
    <link href="http://example.com/2020/11/24/%E8%93%9D%E6%A1%A5%E6%9D%AFC%E8%AF%AD%E8%A8%80%E7%BB%84/"/>
    <id>http://example.com/2020/11/24/%E8%93%9D%E6%A1%A5%E6%9D%AFC%E8%AF%AD%E8%A8%80%E7%BB%84/</id>
    <published>2020-11-24T12:11:03.333Z</published>
    <updated>2020-11-24T12:11:51.786Z</updated>
    
    
    
    
    <category term="算法" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="算法" scheme="http://example.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>C语言程序设计</title>
    <link href="http://example.com/2020/11/24/C%E8%AF%AD%E8%A8%80%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/"/>
    <id>http://example.com/2020/11/24/C%E8%AF%AD%E8%A8%80%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/</id>
    <published>2020-11-24T12:10:10.816Z</published>
    <updated>2020-11-24T12:10:58.586Z</updated>
    
    
    
    
    <category term="后端" scheme="http://example.com/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
    <category term="后端" scheme="http://example.com/tags/%E5%90%8E%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>软件工程</title>
    <link href="http://example.com/2020/11/24/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E7%AC%94%E8%AE%B0/"/>
    <id>http://example.com/2020/11/24/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E7%AC%94%E8%AE%B0/</id>
    <published>2020-11-24T12:09:17.802Z</published>
    <updated>2020-11-24T12:13:18.035Z</updated>
    
    
    
    
    <category term="笔记" scheme="http://example.com/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="笔记" scheme="http://example.com/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>数据结构和算法</title>
    <link href="http://example.com/2020/11/21/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%92%8C%E7%AE%97%E6%B3%95/"/>
    <id>http://example.com/2020/11/21/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%92%8C%E7%AE%97%E6%B3%95/</id>
    <published>2020-11-21T05:03:03.282Z</published>
    <updated>2020-11-23T05:18:21.642Z</updated>
    
    
    
    
    <category term="数据结构和算法" scheme="http://example.com/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%92%8C%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="数据结构和算法" scheme="http://example.com/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%92%8C%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript程序设计项目</title>
    <link href="http://example.com/2020/11/21/JavaScript%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E9%A1%B9%E7%9B%AE/"/>
    <id>http://example.com/2020/11/21/JavaScript%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E9%A1%B9%E7%9B%AE/</id>
    <published>2020-11-21T04:49:14.050Z</published>
    <updated>2020-11-23T12:51:18.640Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.liaoxuefeng.com/wiki/1022910821149312">JavaSript教程</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.liaoxuefeng.com/wiki/1022910821149312&quot;&gt;JavaSript教程&lt;/a&gt;&lt;/p&gt;
</summary>
      
    
    
    
    <category term="前端" scheme="http://example.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="JavaSctipt" scheme="http://example.com/tags/JavaSctipt/"/>
    
  </entry>
  
  <entry>
    <title>JavaWeb程序设计项目</title>
    <link href="http://example.com/2020/11/19/JavaWeb%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E9%A1%B9%E7%9B%AE/"/>
    <id>http://example.com/2020/11/19/JavaWeb%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E9%A1%B9%E7%9B%AE/</id>
    <published>2020-11-19T09:55:17.745Z</published>
    <updated>2020-11-25T13:45:00.782Z</updated>
    
    <content type="html"><![CDATA[<h1 id="JavaWeb概述"><a href="#JavaWeb概述" class="headerlink" title="JavaWeb概述"></a>JavaWeb概述</h1><p>Java Web 其实就是一个技术的总和,把<code>Web</code>看成一个容器而已主要使用<code>JavaEE</code>技术来实现.再加上各种中间件。</p><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/20/4c1f2fae25ee652b3d52c3bba84fa862.png"></p><h2 id="Web应用程序"><a href="#Web应用程序" class="headerlink" title="Web应用程序"></a>Web应用程序</h2><p>一个web应用由多个<code>静态web资源</code>和<code>动态web资源</code>组成，如:html、css、js文件，Jsp文件、java程序、支持jar包、配置文件等等。</p><blockquote><p>Web应用开发好后，若想供外界访问，需要把web应用所在目录交给web服务器管理，这个过程称之为<code>虚似目录的映射</code>。</p></blockquote><h2 id="Web服务器"><a href="#Web服务器" class="headerlink" title="Web服务器"></a>Web服务器</h2><p>1、<code>Web服务器</code>是指驻留于因特网上某种类型计算机的<code>程序</code>，是可以向发出请求的浏览器提供文档的程序。当Web浏览器（客户端）连到服务器上并请求文件时，服务器将处理该请求并将文件反馈到该浏览器上，附带的信息会告诉浏览器如何查看该文件（即文件类型）。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/25/5514c816b54a022ae6dc13f8e179d40e.png"><br>2、服务器是一种<code>被动程序</code>：只有当Internet上运行在其他计算机中的浏览器发出请求时，服务器才会响应。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/25/56e0a7ee29c9e3b138360427eed39a82.png"></p><h2 id="Tomcat"><a href="#Tomcat" class="headerlink" title="Tomcat"></a>Tomcat</h2><p>在本地计算机上随便创建一个web页面，用户是无法访问到的，但是如果启动tomcat服务器，把web页面放在tomcat服务器中，用户就可以访问了。这说明什么问题？<br>　　1、不管什么web资源，想被远程计算机访问，都必须有一个<code>与之对应的网络通信程序</code>，当用户来访问时，这个网络通信程序读取web资源数据，并把数据发送给来访者。<br>　　2、WEB服务器就是这样一个程序，它用于完成<code>底层网络通迅</code>。使用这些服务器，We应用的开发者只需要关注web资源怎么编写，而不需要关心资源如何发送到客户端手中，从而极大的减轻了开发者的开发工作量。<br><code>启动Tomcat</code>:<br>1.找到Tomcat目录<code>\bin\startup.bat</code>文件双击<br>2.DOS命令:<code>catalina  run</code><br>关闭Tomcat：<code>bin\shutdown.bat</code><br><code>常见问题</code>:<br>1.Tomcat依赖Java环境，需要在<code>JAVA_HOME</code>配好<code>JDK</code>的路径。<br>2.Tomcat默认端口8080，当出现端口被占用时(<code>netstat -ano</code>命令查看)，去Tomcat目录找到<code>conf\server.xml</code>文件里找到<code>port</code>修改</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Connector</span> <span class="attr">executor</span>=<span class="string">&quot;tomcatThreadPool&quot;</span></span></span><br><span class="line"><span class="tag">               <span class="attr">port</span>=<span class="string">&quot;8080&quot;</span> <span class="attr">protocol</span>=<span class="string">&quot;HTTP/1.1&quot;</span></span></span><br><span class="line"><span class="tag">               <span class="attr">connectionTimeout</span>=<span class="string">&quot;20000&quot;</span></span></span><br><span class="line"><span class="tag">               <span class="attr">redirectPort</span>=<span class="string">&quot;8443&quot;</span> /&gt;</span></span><br><span class="line">    --&gt;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/25/362a7ed85ead6d40a2e35ee22ab9be4a.png"><br><a href="http://tomcat.apache.org/">Tomcat下载地址</a><br><a href="https://blog.csdn.net/qq_30336433/article/details/81287828?utm_source=app">安装配置教程</a><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/25/0b5277e159859911bb33e3558b2b252b.png"><br><a href="https://www.cnblogs.com/mharvay/p/13700291.html">Tomcat目录详解</a></p><h2 id="动态Web资源"><a href="#动态Web资源" class="headerlink" title="动态Web资源"></a>动态Web资源</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">website</span><br><span class="line">         |------静态页面（HTML、CSS、JS、图片）</span><br><span class="line"></span><br><span class="line">         |------JSP页面</span><br><span class="line"></span><br><span class="line">         |------WEB-INF</span><br><span class="line"></span><br><span class="line">                            |-----web.xml   （必须的,需要用的一些相关配置文件）</span><br><span class="line"></span><br><span class="line">                            |-----classes       (可选的,java类编写成class文件）</span><br><span class="line"></span><br><span class="line">                            |-----lib            （可选的,第三方的需要用的jar包，数据库的连接）</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="配置Web默认页面"><a href="#配置Web默认页面" class="headerlink" title="配置Web默认页面"></a>配置Web默认页面</h2><p>当访问一个Web应用程序时，通常需要指定访问的资源名称，如果没有指定资源名称，则会访问默认页面。例如，访问<a href="http://www.w3school.com.cn/index.htm">http://www.w3school.com.cn/index.htm</a> ,如果想输入<a href="http://www.w3school.com.cn/">http://www.w3school.com.cn</a> 就能访问，需要配置WEB-INF目录下的<code>web.xml</code>文件，即虚拟目录的映射。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">welcome-file-list</span>&gt;</span> </span><br><span class="line">     <span class="tag">&lt;<span class="name">welcome-flie</span>&gt;</span>index.html<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">welcome-flie</span>&gt;</span>index.htm<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">welcome-flie</span>&gt;</span>index.jsp<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">welcome-flie</span>&gt;</span>资源名.后缀<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">welcome-flie-list</span>&gt;</span></span><br><span class="line"> 上述代码中，<span class="tag">&lt;<span class="name">welcome-file-list</span>&gt;</span>用于配置默认页面列表，它包含多个<span class="tag">&lt;<span class="name">welcome-flie</span>&gt;</span>子元素，</span><br><span class="line"> 每个<span class="tag">&lt;<span class="name">welcome-flie</span>&gt;</span>都指定一个页面文件。当用户没有指定具体要访问的页面资源时，Tomcat会</span><br><span class="line"> 依次查找这些默认列表，如果找到，则返回给用户，停止查找。如果找不到，则返回错误信息。</span><br></pre></td></tr></table></figure><h1 id="Servlet基础"><a href="#Servlet基础" class="headerlink" title="Servlet基础"></a>Servlet基础</h1><h3 id="第一个Servlet程序"><a href="#第一个Servlet程序" class="headerlink" title="第一个Servlet程序"></a>第一个Servlet程序</h3><blockquote><p>继承GenericServlet后，除了service()方法，其他方法都已经实现。可见，继承GenericServlet类比实现Servlet接口更加简便。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloWorldServlet</span> <span class="keyword">extends</span> <span class="title">GenericServlet</span></span>&#123;</span><br><span class="line">       <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">service</span><span class="params">(ServletRequest request,ServletResponse response)</span><span class="keyword">throws</span> ServletException,IOException</span>&#123;</span><br><span class="line">       <span class="comment">//得到输出流PrinterWriter对象,Servlet使用输出流来产生响应</span></span><br><span class="line">       PrintWriter out=response.getWriter();</span><br><span class="line">       <span class="comment">//使用输出流对象向客户端发送字符数据</span></span><br><span class="line">       out.println(<span class="string">&quot;Hello World&quot;</span>);</span><br><span class="line">       &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>配置web.xml文件,虚拟路径的映射</code></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- servlet标签给Tomcat配置Servlet程序 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- servlet-name标签给Servlet程序起一个别名(一般是类名) --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>HelloServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- servlet-class是Servlet程序的全类名(一般为包名.类名) --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>Review.HelloServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!-- servlet-mapping标签给Tomcat配置访问地址，用于映射一个对外访问的路径 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- servlet-name标签告诉服务器，我当前配置的地址给哪个Servlet程序使用 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>HelloServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- url-pattern标签配置访问地址</span></span><br><span class="line"><span class="comment">    / 斜杠在服务器解析时，表示地址为:http://ip:port/工程路径</span></span><br><span class="line"><span class="comment">    /HelloServlet表示http://ip:port/工程路径/HelloServlet)</span></span><br><span class="line"><span class="comment">     --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/HelloServlet<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><p> 运行结果<img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/21/418f2a4cabf96e3d271477b5ecf41bb9.png"></p><hr><h3 id="Servlet的生命周期"><a href="#Servlet的生命周期" class="headerlink" title="Servlet的生命周期"></a>Servlet的生命周期</h3><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/21/67467565def82d9d1c4c90f792d34809.png"></p><ul><li>init()初始化阶段</li><li>service()处理客户端请求阶段</li><li>destroy()终止阶段<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Review;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloServlet</span> <span class="keyword">extends</span> <span class="title">GenericServlet</span></span>&#123;</span><br><span class="line">     <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(ServletConfig config)</span><span class="keyword">throws</span> ServletException</span>&#123;</span><br><span class="line">     System.out.println(<span class="string">&quot;----init()----&quot;</span>);</span><br><span class="line">     &#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">service</span><span class="params">(ServletRequest arg0, ServletResponse arg1)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"> System.out.println(<span class="string">&quot;----service()----&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line"> System.out.println(<span class="string">&quot;----destroy()----&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/21/992f2d62dc60a007cb5afd5cf04d7d69.png"></li></ul><h3 id="自动加载Servlet程序"><a href="#自动加载Servlet程序" class="headerlink" title="自动加载Servlet程序"></a>自动加载Servlet程序</h3><p>当希望某些Servlet程序可以在Tomcat启动时<code>随即启动</code>，可以使用<load-on-startup>元素,最常使用在<code>配置数据库</code>时。</load-on-startup></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>HelloServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>chapter04.HelloServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">load-on-startup</span>&gt;</span>1<span class="tag">&lt;/<span class="name">load-on-startup</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>HelloServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/HelloServlet<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>load-on-startup用于指定Servlet被加载的时机和顺序，所设置的值必须为一个<code>整数</code>,如果为<code>负数或者没有设</code>，Servlet容器将在客户端首次请求这个Servlet时加载它。如果为<code>整数或0</code>，Servlet容器将在Web应用<code>启动时加载并初始化Servlet其值越小，对应Servlet就越先被加载</code>。</p></blockquote><hr><h3 id="ServletConfig接口"><a href="#ServletConfig接口" class="headerlink" title="ServletConfig接口"></a>ServletConfig接口</h3><p>Servlet程序的<code>配置信息类</code>,有三大作用:</p><ul><li>可以区号Servlet程序的别名<code>servlet-name</code>的值</li><li>获取初始化参数<code>ini-param</code></li><li>获取<code>ServletContext对象</code></li></ul><hr><p>常用方法:</p><ul><li>获取servlet的初始化<code>参数的值</code>：String  <code>getInitParameter</code>（String name）</li><li> 获取servlet的初始化<code>参数的名称</code>：Enumeratrion <code> getInitParameterNames</code>（）</li><li>得到当前Web应用的<code>ServletContext对象</code>：ServletContext <code>getServletContext</code>（）</li><li>获取servlet的名称,即web.xml中<code>servlet-name</code>元素的值：String <code>getServletName</code>（）</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Review;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestServletConfig</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"><span class="comment">//1.首先得到servletconfig对象</span></span><br><span class="line">ServletConfig config=<span class="keyword">this</span>.getServletConfig();</span><br><span class="line"><span class="comment">//2.获取servlet的名称，对应web.xml里面</span></span><br><span class="line">String servletName=config.getServletName();</span><br><span class="line">System.out.println(<span class="string">&quot;servlet的名称&quot;</span>+servletName);</span><br><span class="line"><span class="comment">//3.获取servlet的初始化参数</span></span><br><span class="line">String value=config.getInitParameter(<span class="string">&quot;encoding&quot;</span>);</span><br><span class="line">System.out.println(<span class="string">&quot;初始化参数值：&quot;</span>+value);</span><br><span class="line"><span class="comment">//4.获取servlet的初始化参数的名称</span></span><br><span class="line">Enumeration&lt;String&gt; er=config.getInitParameterNames();</span><br><span class="line"><span class="keyword">while</span>(er.hasMoreElements()) &#123;</span><br><span class="line"><span class="comment">//获取初始化参数的名称</span></span><br><span class="line">String name=er.nextElement();</span><br><span class="line"><span class="comment">//根据初始化参数的名称，获取对应的值</span></span><br><span class="line">String value2=config.getInitParameter(name);</span><br><span class="line">System.out.println(<span class="string">&quot;初始化参数的名称：&quot;</span>+name);</span><br><span class="line">System.out.println(<span class="string">&quot;该名称的值:&quot;</span>+value2);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.doGet(request, response);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>TestServletConfig<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>Review.TestServletConfig<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- servlet的初始化参数的配置 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>encoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>username<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>lizhenye<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>TestServletConfig<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/TestServletConfig<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/21/2ee772c543a40806ff1d5c0d080acd91.png"></p><h3 id="ServletContext接口"><a href="#ServletContext接口" class="headerlink" title="ServletContext接口"></a>ServletContext接口</h3><p>ServletContext对象代表<code>当前Web应用</code>，该对象不仅封装了当前Web应用的所有信息，而且实现了多个Servle之间数据共享。一个Web工程，只有<code>一个ServletContext对象实例</code>。ServletContext对象是一个<code>域对象</code>。<br><code>域</code>是指存取数据的<code>操作范围</code>。域对象是可以向Map一样存取数据的对象。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/21/ea35bfe40ab46cad2fa83661edb496e1.png"></p><hr><p>ServletContext接口的作用:<br>1.获取Web应用程序的<code>初始化参数:</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Review;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.*;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestServletContext</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">response.setContentType(<span class="string">&quot;text/html;charset=utf-8&quot;</span>);</span><br><span class="line">PrintWriter out=response.getWriter();</span><br><span class="line"><span class="comment">//1.首先得到ServletContext对象</span></span><br><span class="line">ServletContext context=<span class="keyword">this</span>.getServletContext();</span><br><span class="line"><span class="comment">//2.得到包含所有初始化参数名的Enumberation对象</span></span><br><span class="line">Enumeration&lt;String&gt; er=context.getInitParameterNames();</span><br><span class="line">out.println(<span class="string">&quot;所有的参数名和参数值:&quot;</span>+<span class="string">&quot;&lt;br/&gt;&quot;</span>);</span><br><span class="line"><span class="keyword">while</span>(er.hasMoreElements()) &#123;</span><br><span class="line"><span class="comment">//获取初始化参数的名称</span></span><br><span class="line">String name=er.nextElement();</span><br><span class="line"><span class="comment">//根据初始化参数的名称，获取对应的值</span></span><br><span class="line">String value=context.getInitParameter(name);</span><br><span class="line">out.println(name+<span class="string">&quot;:&quot;</span>+value);</span><br><span class="line">out.println(<span class="string">&quot;&lt;br/&gt;&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.doGet(request, response);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">context-param</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>CompanyName<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>itcast<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">context-param</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">context-param</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>address<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>beijing<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">context-param</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"> <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>TestServletContext<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>Review.TestServletContext<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>TestServletContext<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/TestServletContext<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/21/5fd0719196f0f9afb1dfd9dc4d3c7fb2.png"></p><p>2.实现多个Servlet对象<code>共享数据</code><br>ServletContext接口的方法:</p><ul><li>Enumberation getAttributeNames() ： 返回一个Enumberation对象，该对象包含了所有存放在ServletContext中的·所有域属性名·。</li><li>Object <code>getAttribute(String name)</code>：根据指定的参数名返回一个与之匹配的域属性值。</li><li>void removeAttribute(String name)：根据参数指定的域属性名，从ServletContext中·删除·匹配的域属性。</li><li>void <code>setAttribute(String name,Object obj)</code>：设置ServletContext的域属性，其中name是域属性名，obj是域属性值。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Review;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.*;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestServletContext1</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">ServletContext context=<span class="keyword">this</span>.getServletContext();</span><br><span class="line"><span class="comment">//通过setAttribute()方法设置属性值</span></span><br><span class="line">context.setAttribute(<span class="string">&quot;data&quot;</span>, <span class="string">&quot;this servlet save data&quot;</span>);</span><br><span class="line">System.out.println(<span class="string">&quot;运行一下，将数据存入ServletContext对象&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.doGet(request, response);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Review;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.*;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestServletContext2</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">ServletContext context=<span class="keyword">this</span>.getServletContext();</span><br><span class="line">PrintWriter out=response.getWriter();</span><br><span class="line"><span class="comment">//通过getAttribute()方法获得属性值</span></span><br><span class="line">String data=(String) context.getAttribute(<span class="string">&quot;data&quot;</span>);</span><br><span class="line">out.println(data);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.doGet(request, response);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>TestServletContext1<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>Review.TestServletContext1<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>TestServletContext1<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/TestServletContext1<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"> <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>TestServletContext2<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>Review.TestServletContext2<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>TestServletContext2<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/TestServletContext2<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/21/64f4dd4820124509c04f9d8ae19d54a2.png"></p><p> 3.读取Web应用下<code>资源文件</code>。</p><hr><h1 id="请求和响应"><a href="#请求和响应" class="headerlink" title="请求和响应"></a>请求和响应</h1><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/21/5852c2650f9eee2ec369f324552f046f.png"></p><h2 id="HttpServletResponse对象"><a href="#HttpServletResponse对象" class="headerlink" title="HttpServletResponse对象"></a>HttpServletResponse对象</h2><p>HttpServletResponse接口中定义了向客户端发送<code>响应状态码、响应消息头、响应消息体</code> 的方法。</p><h3 id="发送状态码"><a href="#发送状态码" class="headerlink" title="发送状态码"></a>发送状态码</h3><p>1.<code>setStatus(int status)</code>方法<br>该方法用于<code>设置HTTP响应消息的状态码</code>，并生成响应状态行。正常情况下，Web服务器默认产生一个状态码为200的状态行。</p><p>2.<code>sendError(int sc)</code>方法<br>该方法用于<code>发送错误信息的状态码</code>,例如，404状态码表示找不到客户端请求的资源。在response对象中，提供了两个重载sendError(int sc)的方法。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sendError</span><span class="params">(<span class="keyword">int</span> code)</span> <span class="keyword">throws</span> java.io.IOException</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sendError</span><span class="params">(<span class="keyword">int</span> code,String message)</span> <span class="keyword">throws</span> java.io.IOException</span></span><br></pre></td></tr></table></figure><h3 id="发送响应消息头"><a href="#发送响应消息头" class="headerlink" title="发送响应消息头"></a>发送响应消息头</h3><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/21/d9a91c651a1e2435f9e97e601df95bce.png"></p><blockquote><p>addHeader()、setHeader()、addIntHeader()、setIntHeader()方法用于<code>设置各种头字段</code><br>setContType()、setLocale()、setCharacterEncoding()用于<code>设置字符编码</code></p></blockquote><h3 id="发送响应消息体"><a href="#发送响应消息体" class="headerlink" title="发送响应消息体"></a>发送响应消息体</h3><p>1.<code>getOutputStream()</code>方法<br>该方法所获取的<code>字节输出流</code>对象为ServletOutputStream类型。用于ServletOutputStream是OutputStream的子类,它可以直接输出字节数组中的二进制数据。<br>2.<code>getWriter()</code>方法<br>该方法所获取的<code>字符输出流</code>对象为PrintWriter类型。</p><blockquote><p>注意：两种方法不能同时写，不然会报错出500，并且谁在前报谁错。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Review;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PrintServlet1</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">String data=<span class="string">&quot;itcast&quot;</span>;</span><br><span class="line"><span class="comment">//获取字节输出流对象</span></span><br><span class="line">OutputStream out=response.getOutputStream();</span><br><span class="line">out.write(data.getBytes());</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.doGet(request, response);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Review;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PrintServlet2</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">String data=<span class="string">&quot;itcast&quot;</span>;</span><br><span class="line"><span class="comment">//获取字符输出流对象</span></span><br><span class="line">PrintWriter print=response.getWriter();</span><br><span class="line">print.write(data);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.doGet(request, response);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="HttServletResponse应用"><a href="#HttServletResponse应用" class="headerlink" title="HttServletResponse应用"></a>HttServletResponse应用</h3><h4 id="中文输出乱码问题"><a href="#中文输出乱码问题" class="headerlink" title="中文输出乱码问题"></a>中文输出乱码问题</h4><p>由于计算机中的数据都是以二进制形式存储的，因此，当传输文本时，就会发生字符和字节之间的转换。字符与字节之间是通过查<code>码表</code>完成的，字符转换成字节的过程为<code>编码</code>，字节转换成字符的过程为<code>解码</code>。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> chapter04;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ChineseServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"><span class="comment">//response.setCharacterEncoding(&quot;utf-8&quot;);</span></span><br><span class="line">response.setContentType(<span class="string">&quot;text/html;charset=utf-8&quot;</span>);</span><br><span class="line">String data=<span class="string">&quot;中国&quot;</span>;</span><br><span class="line">PrintWriter out=response.getWriter();</span><br><span class="line">out.println(data);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">doGet(request, response);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>当去掉前两行字符编码代码时，浏览器显示内容为”?”,发生了乱码问题，这是因为response对象的字符输出流在编码时，采用的是<code>ISO-8859-1</code>的字符码表，不兼容中文，会将”中国”编码为“63 63”，当浏览器接收解码时，会采用默认的码表<code>GB2312</code>，将”63”解码为”?”。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/21/28f9e1b691b45eeb40ad668e6faad61f.png"></p></blockquote><hr><blockquote><p>当加上<code>response.setCharacterEncoding(&quot;utf-8&quot;);</code>语句时，输出并不是“中国”,这是由于浏览器解码方式为<code>GB2312</code>导致。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/21/6239828b556e8a7005dcc6062a7ce326.png"></p></blockquote><hr><blockquote><p>综上分析，需要设置HttpServletResponse和浏览器都设置为”UTF-8”</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//设置HttpServletResponse使用utf-8</span></span><br><span class="line">response.setCharacterEncoding(<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line"><span class="comment">//设置浏览器使用utf-8</span></span><br><span class="line">response.setHeader(<span class="string">&quot;Content-Type&quot;</span>,<span class="string">&quot;text/html;charset=utf-8&quot;</span>);</span><br><span class="line"><span class="comment">//包含以上两种方式的写法:</span></span><br><span class="line">response.setContentType(<span class="string">&quot;text/html;charset=utf-8&quot;</span>);</span><br></pre></td></tr></table></figure><h4 id="网页定时刷新跳转"><a href="#网页定时刷新跳转" class="headerlink" title="网页定时刷新跳转"></a>网页定时刷新跳转</h4><p>在HTTP协议中，定义了一个Refresh头字段，可以通知浏览器在指定的时间内自动刷新并跳转到其他页面。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> MyProject;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RefreshServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"><span class="comment">//2秒后跳转到我的博客</span></span><br><span class="line">response.setHeader(<span class="string">&quot;Refresh&quot;</span>, <span class="string">&quot;2;URL=http://www.lzyblog.github.io&quot;</span>);</span><br><span class="line"><span class="comment">//每隔3秒定时刷新当前页面</span></span><br><span class="line"><span class="comment">//reponse.setHeader(&quot;Refresh&quot;,&quot;3&quot;);</span></span><br><span class="line"><span class="comment">//response.getWriter().println(new java.util.Date());//输出当前时间</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.doGet(request, response);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="实现请求重定向"><a href="#实现请求重定向" class="headerlink" title="实现请求重定向"></a>实现请求重定向</h4><p>在某些情况下，针对客户端的请求，一个Servlet类可能无法完成全部工作。这时可以使用请求重定向来完成。<br>请求重定向是指web服务器接收到客户端的请求后，可能由于某些条件限制，不能访问当前请求URL所指向的Web资源，而是<code>指定了一个新的资源路径</code>，让客户端重新发送请求。<br>为了实现请求重定向，在HttpServletResponse接口中，定义了一个<code>sendRedirect()</code>方法，该方法用于生成<code>302响应码和Location响应头</code>，从而通知客户端重新访问Location响应头中指定的URL，sendRedirect()方法的完整语法如下:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sendRedirect</span><span class="params">(java.lang.String  Location)</span> <span class="keyword">throws</span> java.io.IOException</span>&#123;</span><br><span class="line">            <span class="comment">//代码</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/21/4917500110d54873a9da063322cea539.png"><br>以下模拟用户登录来帮助理解，创建login.html登录表单和welcome.html欢迎界面(在WebContent下建立)，再创一个LoginServlet的类用于处理用户登录请求。<code>Servlet_Project</code>为包名。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Insert title here<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;/Servlet_Poject/LoginServlet&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">用户名:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">密<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span>码:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;登录&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Insert title here<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">欢迎您,登陆成功！</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> chapter04;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoginServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">response.setContentType(<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line"><span class="comment">//用HttpServletRequest对象的getParameter()方法获取用户名和密码;</span></span><br><span class="line">String username=request.getParameter(<span class="string">&quot;username&quot;</span>);</span><br><span class="line">String password=request.getParameter(<span class="string">&quot;password&quot;</span>);</span><br><span class="line"><span class="comment">//假设用户名和密码分别为：itcase和123</span></span><br><span class="line"><span class="keyword">if</span>((<span class="string">&quot;itcast&quot;</span>).equals(username)&amp;&amp;(<span class="string">&quot;123&quot;</span>).equals(password)) &#123;</span><br><span class="line"><span class="comment">//如果用户名和密码正确，重定位到welcome.html</span></span><br><span class="line">response.sendRedirect(<span class="string">&quot;/Servlet_Poject/welcome.html&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">   <span class="comment">//如果用户名和密码错误，重定位到login.html</span></span><br><span class="line">response.sendRedirect(<span class="string">&quot;/Servlet_Poject/login.html&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">doGet(request, response);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="HttpServletRequest对象"><a href="#HttpServletRequest对象" class="headerlink" title="HttpServletRequest对象"></a>HttpServletRequest对象</h2><p>HttpServletRequest接口中定义了获取<code>请求行、请求头、请求消息体</code>的相关方法。</p><h3 id="获取请求行信息"><a href="#获取请求行信息" class="headerlink" title="获取请求行信息"></a>获取请求行信息</h3><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/25/19681439b47ff60b1a35f37da958ce18.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/22/1f3c1ccf22ca507bb690a4fb647924a3.png"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> MyProject;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.*;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RequestLineServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">response.setContentType(<span class="string">&quot;text/html;charset=utf-8&quot;</span>);</span><br><span class="line">PrintWriter out=response.getWriter();</span><br><span class="line"><span class="comment">//获取请求行的相关信息</span></span><br><span class="line">out.println(<span class="string">&quot;getMethod:&quot;</span>+request.getMethod()+<span class="string">&quot;&lt;br/&gt;&quot;</span>);</span><br><span class="line">out.println(<span class="string">&quot;getRequestURI:&quot;</span>+request.getRequestURI()+<span class="string">&quot;&lt;br/&gt;&quot;</span>);</span><br><span class="line">out.println(<span class="string">&quot;getQueryString:&quot;</span>+request.getQueryString()+<span class="string">&quot;&lt;br/&gt;&quot;</span>);</span><br><span class="line">out.println(<span class="string">&quot;getProtocol:&quot;</span>+request.getProtocol()+<span class="string">&quot;&lt;br/&gt;&quot;</span>);</span><br><span class="line">out.println(<span class="string">&quot;getContextPath:&quot;</span>+request.getContextPath()+<span class="string">&quot;&lt;br/&gt;&quot;</span>);</span><br><span class="line">out.println(<span class="string">&quot;getPathInfo:&quot;</span>+request.getPathInfo()+<span class="string">&quot;&lt;br/&gt;&quot;</span>);</span><br><span class="line">out.println(<span class="string">&quot;getPathTranslated:&quot;</span>+request.getPathTranslated()+<span class="string">&quot;&lt;br/&gt;&quot;</span>);</span><br><span class="line">out.println(<span class="string">&quot;getServletPath:&quot;</span>+request.getServletPath()+<span class="string">&quot;&lt;br/&gt;&quot;</span>);</span><br><span class="line">out.println(<span class="string">&quot;getRemoteAddr:&quot;</span>+request.getRemoteAddr()+<span class="string">&quot;&lt;br/&gt;&quot;</span>);</span><br><span class="line">out.println(<span class="string">&quot;getRemoteHost:&quot;</span>+request.getRemoteHost()+<span class="string">&quot;&lt;br/&gt;&quot;</span>);</span><br><span class="line">out.println(<span class="string">&quot;getLocalAddr:&quot;</span>+request.getLocalAddr()+<span class="string">&quot;&lt;br/&gt;&quot;</span>);</span><br><span class="line">out.println(<span class="string">&quot;getLocalName:&quot;</span>+request.getLocalName()+<span class="string">&quot;&lt;br/&gt;&quot;</span>);</span><br><span class="line">out.println(<span class="string">&quot;getServerName:&quot;</span>+request.getServerName()+<span class="string">&quot;&lt;br/&gt;&quot;</span>);</span><br><span class="line">out.println(<span class="string">&quot;getServerPort:&quot;</span>+request.getServerPort()+<span class="string">&quot;&lt;br/&gt;&quot;</span>);</span><br><span class="line">out.println(<span class="string">&quot;getScheme:&quot;</span>+request.getScheme()+<span class="string">&quot;&lt;br/&gt;&quot;</span>);</span><br><span class="line">out.println(<span class="string">&quot;getRequestURL:&quot;</span>+request.getRequestURL()+<span class="string">&quot;&lt;br/&gt;&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.doGet(request, response);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/22/6293072a469cd6c13bafc1d6c9000866.png"></p><h3 id="获取请求消息头"><a href="#获取请求消息头" class="headerlink" title="获取请求消息头"></a>获取请求消息头</h3><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/22/cd8f0108f9f980b07bb2e6199bc98de9.png"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> MyProject;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RequestHeadersServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">response.setContentType(<span class="string">&quot;text/html;charset=utf-8&quot;</span>);</span><br><span class="line">PrintWriter out=response.getWriter();</span><br><span class="line"><span class="comment">//获取请求消息中所有头字段</span></span><br><span class="line">Enumeration headerNames =request.getHeaderNames();</span><br><span class="line"><span class="comment">//循环遍历所有请求头，并通过getHeader()方法获取一个指定名称的头字段</span></span><br><span class="line"><span class="keyword">while</span>(headerNames.hasMoreElements()) &#123;</span><br><span class="line">String headerName=(String)headerNames.nextElement();</span><br><span class="line">out.print(headerName+<span class="string">&quot;:&quot;</span>+request.getHeader(headerName)+<span class="string">&quot;&lt;br&gt;&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.doGet(request, response);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/22/fc58899708146068305991f61da59086.png"></p><h4 id="Referer防”盗链”"><a href="#Referer防”盗链”" class="headerlink" title="Referer防”盗链”"></a>Referer防”盗链”</h4><blockquote><p>Referer头字段可以用于网站的<code>防盗链</code>。什么是盗链呢？假如A网站并没有某些资源，而是通过HTMl文件中使用<a></a>标签链接到B网站的资源，将其展示给浏览者。A网站提高了自己网站的访问量，却加重了B网站服务器的负担，损害了合法利益。而当你单击一个网页上的超链接时，浏览器会使用<code>Referer头字段标识发出请求的超链接所在网页的URL</code>，从而阻止访问或者跳转到指定的页面。<br><code> 实例描述</code>：在Servlet_Project项目下Myproject包中，编写一个<code>DownManagertServlet</code>的类负责提供下载内容，要求下载请求的链接必须是通过本网站进入的，否则会将请求转发给下载说明的HTML页面（<code>download.html</code>）。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> MyProject;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DownManagertServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">response.setContentType(<span class="string">&quot;text/html;charset=utf-8&quot;</span>);</span><br><span class="line">PrintWriter out=response.getWriter();</span><br><span class="line"><span class="comment">//获取Referer头的值</span></span><br><span class="line">String referer=request.getHeader(<span class="string">&quot;referer&quot;</span>);</span><br><span class="line"><span class="comment">//获取访问地址</span></span><br><span class="line">String sitePart=<span class="string">&quot;http://&quot;</span>+request.getServerName();</span><br><span class="line"><span class="comment">//判断referer头是否为空,这个头的地址是否以sitePart开始</span></span><br><span class="line"><span class="keyword">if</span>(referer !=<span class="keyword">null</span> &amp;&amp; referer.startsWith(sitePart)) &#123;</span><br><span class="line"><span class="comment">//处理正在下载的请求</span></span><br><span class="line">out.println(<span class="string">&quot;dealing download....&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">//非法下载请求跳转到download.html页面</span></span><br><span class="line">RequestDispatcher rd=request.getRequestDispatcher(<span class="string">&quot;/download.html&quot;</span>);</span><br><span class="line">rd.forward(request, response);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.doGet(request, response);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Insert title here<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/Servlet_Project/DownManagertServlet&quot;</span>&gt;</span>download<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>当<code>第一次</code>请求DownManagerServlet时，请求消息中<code>不含Referer请求头</code>，所以DownMagaerServlet将下载请求转发给了download.html页面。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/22/4e288eccd3fc3a86463ea81a1fbf7685.png"><br>单击”download”链接后，请求信息中<code>包含了Referer头字段</code>，并且其值与DownManagerServlet位于<code>同一个Web站点</code>，因此接受下载请求。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/22/1680ba3174d45170c1b4a72387f7aa88.png"></p></blockquote><h2 id="HttpServletRequest应用"><a href="#HttpServletRequest应用" class="headerlink" title="HttpServletRequest应用"></a>HttpServletRequest应用</h2><h3 id="获取请求参数"><a href="#获取请求参数" class="headerlink" title="获取请求参数"></a>获取请求参数</h3><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/22/0d51a43644d612855e127b36d489def4.png"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> MyProject;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ResquestParamsServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">  request.setCharacterEncoding(<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">  String name=request.getParameter(<span class="string">&quot;username&quot;</span>);</span><br><span class="line">  String password=request.getParameter(<span class="string">&quot;password&quot;</span>);</span><br><span class="line">  System.out.println(<span class="string">&quot;用户名:&quot;</span>+name);</span><br><span class="line">  System.out.println(<span class="string">&quot;密码:&quot;</span>+password);</span><br><span class="line">  <span class="comment">//获取参数名为&quot;hobby&quot;的值</span></span><br><span class="line">  String hobby[]=request.getParameterValues(<span class="string">&quot;hobby&quot;</span>);</span><br><span class="line">  System.out.println(<span class="string">&quot;爱好:&quot;</span>);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;hobby.length;i++) &#123;</span><br><span class="line">  System.out.println(hobby[i]+<span class="string">&quot;,&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.doGet(request, response);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Insert title here<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;/Servlet_Project/ResquestParamsServlet&quot;</span> <span class="attr">method</span>=<span class="string">&quot;POST&quot;</span>&gt;</span></span><br><span class="line">用户名:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">密<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span>码:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">爱好:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;hobby&quot;</span> <span class="attr">value</span>=<span class="string">&quot;sing&quot;</span>&gt;</span>唱歌</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;hobby&quot;</span> <span class="attr">value</span>=<span class="string">&quot;dance&quot;</span>&gt;</span>跳舞</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;hobby&quot;</span> <span class="attr">value</span>=<span class="string">&quot;football&quot;</span>&gt;</span>足球<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/22/3fc118d7cf3c48afc36577cfdda7adac.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/22/9e3fbc05610ff87a24b3c1b19c077b15.png"><br> 由于HTML设置了浏览器在传递参数是采用utf-8编码，但在解码是采用默认的ISO-8859-1，会发生乱码问题。<br>解决方案：</p><blockquote><p>POST: request.setCharacterEncoding(“utf-8”); （<code>只对POST有效</code>）<br>GET: name=new String(<code>name.getBytes(&quot;iso8859-1&quot;)</code>,”<code>utf-8</code>“); （先使用错误码表ISO-8859-1将用户名重新编码，再使用UTF-8进行解码）</p></blockquote><h3 id="Request对象传递数据"><a href="#Request对象传递数据" class="headerlink" title="Request对象传递数据"></a>Request对象传递数据</h3><p>1.<code>setAttriute()</code>方法<br>用于将一个对象与一个名称关联后存储进ServletRequest对象中<br>如果ServletRequest对象中已经存在指定名称的属性，会先删除原来的属性，再添加新的属性。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAttribute</span><span class="params">(java.lang.String name,java.lang.Object o)</span></span>;</span><br></pre></td></tr></table></figure><p>2.<code>getAttribute()</code>方法<br>从ServletRequest对象中返回指定名称的属性对象。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> java.lang.<span class="function">Object <span class="title">getAttribute</span><span class="params">(java.lang.String name)</span></span>;</span><br></pre></td></tr></table></figure><p>3.<code>removeAttribute()</code>方法<br>从ServletRequest对象中删除指定名称的属性。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">removeAttribute</span><span class="params">(java.lang.String name)</span></span>;</span><br></pre></td></tr></table></figure><p>4.<code>getAttributeNames()</code>方法<br>返回一个包含ServletRequest对象中所有属性名的Enumeration对象。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> java.util.<span class="function">Enumeration <span class="title">getAttributeNames</span><span class="params">(java.lang.String name)</span></span>;</span><br></pre></td></tr></table></figure><h2 id="RequestDispatcher对象"><a href="#RequestDispatcher对象" class="headerlink" title="RequestDispatcher对象"></a>RequestDispatcher对象</h2><p>当一个Web资源收到客户端的请求后，如果希望服务器通知另外一个资源去处理请求，除了使用sendRedirect()请求重定向外，还可以通过<code>RequestDispatcher接口的实例对象</code>来实现。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/22/06c09c4140efe255ca1c1d1c6ea79aed.png"></p><h3 id="请求转发forward"><a href="#请求转发forward" class="headerlink" title="请求转发forward()"></a>请求转发forward()</h3><p>在Servlet中，如果当前Web资源不想处理请求时，可以通过<code>forward()</code>方法将当前请求<code>传递给其他Web资源</code>进行处理。如图所示，当客户端访问Servlet1时，可以通过foward()方法将请求转发给其他Web资源(如Servlet2)，处理完后，返回客户端。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/22/ebdabe030d389967d8bfddf5f453292b.png"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> chapter04;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RequestForwardServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">response.setContentType(<span class="string">&quot;text/html;charset=utf-8&quot;</span>);</span><br><span class="line"><span class="comment">//将数据存储到request对象中</span></span><br><span class="line">request.setAttribute(<span class="string">&quot;company&quot;</span>, <span class="string">&quot;北京传智播客有限公司&quot;</span>);</span><br><span class="line">RequestDispatcher dispatcher=request.getRequestDispatcher(<span class="string">&quot;/ResultServlet&quot;</span>);</span><br><span class="line"><span class="comment">//用forward()方法将当前Servlet的请求转发到ResultServlet页面。</span></span><br><span class="line">dispatcher.forward(request, response);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">doGet(request, response);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> chapter04;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ResultServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">response.setContentType(<span class="string">&quot;text/html;charset=utf-8&quot;</span>);</span><br><span class="line"><span class="comment">//获取PrintWriter对象用于输出信息</span></span><br><span class="line">PrintWriter out=response.getWriter();</span><br><span class="line"><span class="comment">//获取request请求对象中保存的数据</span></span><br><span class="line">String company=(String) request.getAttribute(<span class="string">&quot;company&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(company!=<span class="keyword">null</span>) &#123;</span><br><span class="line">out.println(<span class="string">&quot;公司名称:&quot;</span>+company+<span class="string">&quot;&lt;br&gt;&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">doGet(request, response);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/23/889ff7ef685e07393bb0ce23c2ae8171.png"></p><blockquote><p>可以看出地址栏是RequestForwardServlet的请求路径，却显示了另一个页面的内容，这是因为请求转发是发生在服务内部的行为，在一次请求中可以使用request进行数据共享。e</p></blockquote><h3 id="请求包含incude"><a href="#请求包含incude" class="headerlink" title="请求包含incude()"></a>请求包含incude()</h3><p>指使用include()方法将Servlet请求转发给其他Web资源进行处理，在请求包含返回的响应消息中，即包含了<code>当前Servlet的响应消息</code>，也包含了<code>其他Web资源所作出的响应消息</code>。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/23/ba75d0e658fbb143a49a0f6456ff556a.png"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> chapter04;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.*;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">IncludingServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">response.setContentType(<span class="string">&quot;text/html;charset=utf-8&quot;</span>);</span><br><span class="line">PrintWriter out=response.getWriter();</span><br><span class="line">RequestDispatcher rd=request.getRequestDispatcher(<span class="string">&quot;/IncludedServlet?p1=abc&quot;</span>);</span><br><span class="line">out.println(<span class="string">&quot;before including&quot;</span>+<span class="string">&quot;&lt;br/&gt;&quot;</span>);</span><br><span class="line">rd.include(request, response);</span><br><span class="line">out.println(<span class="string">&quot;after including&quot;</span>+<span class="string">&quot;&lt;br/&gt;&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">doGet(request, response);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> chapter04;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.*;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">IncludedServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"><span class="comment">//设置响应时使用的字符编码</span></span><br><span class="line">response.setContentType(<span class="string">&quot;text/html;charset=utf-8&quot;</span>);</span><br><span class="line">response.setCharacterEncoding(<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">PrintWriter out=response.getWriter();</span><br><span class="line">out.println(<span class="string">&quot;中国&quot;</span>+<span class="string">&quot;&lt;br/&gt;&quot;</span>);</span><br><span class="line">out.println(<span class="string">&quot;URI:&quot;</span>+request.getRequestURI()+<span class="string">&quot;&lt;br/&gt;&quot;</span>);</span><br><span class="line">out.println(<span class="string">&quot;QueryString:&quot;</span>+request.getQueryString()+<span class="string">&quot;&lt;br/&gt;&quot;</span>);</span><br><span class="line">out.println(<span class="string">&quot;parameter p1:&quot;</span>+request.getParameter(<span class="string">&quot;p1&quot;</span>)+<span class="string">&quot;&lt;br/&gt;&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">doGet(request, response);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/23/91910f1c29dc8020b1ee5b92e1b55d70.png"></p><h1 id="会话及其会话技术"><a href="#会话及其会话技术" class="headerlink" title="会话及其会话技术"></a>会话及其会话技术</h1>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;JavaWeb概述&quot;&gt;&lt;a href=&quot;#JavaWeb概述&quot; class=&quot;headerlink&quot; title=&quot;JavaWeb概述&quot;&gt;&lt;/a&gt;JavaWeb概述&lt;/h1&gt;&lt;p&gt;Java Web 其实就是一个技术的总和,把&lt;code&gt;Web&lt;/code&gt;看成一个</summary>
      
    
    
    
    <category term="前端" scheme="http://example.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="JavaWeb" scheme="http://example.com/tags/JavaWeb/"/>
    
  </entry>
  
  <entry>
    <title>JavaSE程序设计项目</title>
    <link href="http://example.com/2020/11/16/JavaSE%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E9%A1%B9%E7%9B%AE/"/>
    <id>http://example.com/2020/11/16/JavaSE%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E9%A1%B9%E7%9B%AE/</id>
    <published>2020-11-16T13:04:19.834Z</published>
    <updated>2020-11-26T04:28:46.786Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.liaoxuefeng.com/wiki/1252599548343744">Java基础回顾</a></p><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>Java最早是由SUN公司（已被Oracle收购）的<code>詹姆斯·高斯林</code>（高司令，人称Java之父）在上个世纪90年代初开发的一种编程语言，最初被命名为Oak，目标是针对小型家电设备的嵌入式应用，结果市场没啥反响。谁料到互联网的崛起，让Oak重新焕发了生机，于是SUN公司改造了Oak，在1995年以Java的名称正式发布，原因是Oak已经被人注册了，因此SUN注册了Java这个商标。随着互联网的高速发展，Java逐渐成为最重要的网络编程语言。<br><a href="https://www.java.com/zh-CN/download/help/index_installing.html">Java技术帮助</a></p><h2 id="Java的特点"><a href="#Java的特点" class="headerlink" title="Java的特点"></a>Java的特点</h2><p>  1.<code>跨平台性</code>:跨平台性是指软件可以不受计算机硬件和操作系统的约束而在任意计算机环境下正常运行。 Java自带的虚拟机很好地实现了跨平台性。 Java源程序代码经过编译后生成二进制的字节码是与平台无关的，是可被Java虚拟机识别的一种机器码指令，Java虚拟机提供了一个字节码到底层硬件平台及操作系统的屏障，使得Java语言具备跨平台性。</p><p>2.<code>简单</code>:Java语言是一种相当简洁的“面向对象”程序设计语言。Java语言省略了C++语言中所有的难以理解、容易混淆的特性，例如头文件、指针、结构、单元、运算符重载、虚拟基础类等。它更加严谨、简洁。</p><p>3.<code>面向对象</code>:面向对象技术使得应用程序的开发变得简单易用，节省代码。Java是一种面向对象的语言，也继承了面向对象的诸多好处，如代码扩展、代码复用等。</p><p>4.<code>安全性</code>:Java编译时要进行Java语言和语义的检查，保证每个变量对应一个相应的值，编译后生成Java类。运行时Java类需要类加载器载入，并经由字节码校验器校验之后才可以运行。 Java类在网络上使用时，对它的权限进行了设置，保证了被访问用户的安全性。</p><p>5.<code>多线程</code>:是一种轻量级进程，是现代程序设计中必不可少的一种特性。多线程处理能力使得程序能够具有更好的交互性、实时性。</p><h2 id="Java运行机制"><a href="#Java运行机制" class="headerlink" title="Java运行机制"></a>Java运行机制</h2><p>Java语言编写的程序既是编译型的，又是解释型。运行期环境代表着Java平台，开发人员编写Java代码(<code>.java文件</code>)，然后用Java编译器将之编译成字节码(<code>.class文件</code>)，JVM才能识别并运行它（<code>编译只进行一次，而解释在每次运行程序时都会进行</code>），JVM针对每个操作系统开发其对应的解释器，所以只要其操作系统有对应版本的JVM，那么这份Java编译后的代码就能够运行起来，这就是Java能<code>一次编译，到处运行</code>的原因,编译后的字节码采用一种针对JVM优化过的机器码形式保存，虚拟机将<code>字节码</code>解释为<code>机器码</code>，然后在计算机上运行。<br><code>*.java</code>-&gt;<code>*.class</code>-&gt;<code>字节码</code>-&gt;<code>机器码</code><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@d3a99ed6e3318056b293e2a87abbb4ed698fd9b0/2020/11/16/ea50b091a4253c41449ca87dd53389ed.png"></p><h2 id="相关概念"><a href="#相关概念" class="headerlink" title="相关概念"></a>相关概念</h2><p>  1.<code>JVM</code>(Java Virtual Machine)：虚拟机,使用软件在不同操作系统中，模拟相同的环境。<br>  2.<code>JRE</code>(Java Runtime Environment)：Java运行环境,包含<code>JVM和解释器</code>，完整的运行环境.<br>  3.<code>JDK</code>(Java Development Kit)：Java开发工具包，包含<code>JRE+类+开发工具包</code><br>  4.<code>API</code>(Application Programming Interface)：<code>程序编程接口</code>，JavaAPI文档是Java程序员开发不可缺少的编程辞典。<br><a href="https://www.oracle.com/index.html">JDK下载:Oracle公司官方网站</a><br><a href="https://www.eclipse.org/">Eclipse开发工具下载</a></p><h1 id="Java语言基础"><a href="#Java语言基础" class="headerlink" title="Java语言基础"></a>Java语言基础</h1><h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">var</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> x=<span class="number">45</span>;   <span class="comment">//实例变量</span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> y=<span class="number">90</span>;  <span class="comment">//静态变量，有效范围可以跨类。</span></span><br><span class="line"><span class="comment">//静态成员属于类所有，可以使用&quot;类名.静态变量&quot;在其他类中使用。</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Blog_01;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">blog_09</span> </span>&#123;</span><br><span class="line"><span class="keyword">final</span> <span class="keyword">static</span> <span class="keyword">double</span> PI=<span class="number">3.1415</span>;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> id;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">method1</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//do something</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">method2</span><span class="params">()</span> </span>&#123;</span><br><span class="line">System.out.println(blog_09.PI);</span><br><span class="line">System.out.println(blog_09.id);</span><br><span class="line">blog_09.method1();</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Eval</span></span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String []args)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a,b,c;</span><br><span class="line">a=<span class="number">1</span>;b=<span class="number">2</span>;c=<span class="number">2</span>;</span><br><span class="line">a=b+c;  <span class="comment">//&quot;=&quot;为赋值运算符，右边赋给左边</span></span><br><span class="line"><span class="comment">//算术运算符: + - * / %</span></span><br><span class="line"><span class="comment">//自增自减运算符</span></span><br><span class="line"> <span class="comment">// 设a=4</span></span><br><span class="line">              b=a++; <span class="comment">//先将a的值加1，然后赋值给b，此时a=5,b=5</span></span><br><span class="line">              b=++a; <span class="comment">//先将a的值赋给b，再将a的值变为5，此时a=5,b=4</span></span><br><span class="line"><span class="keyword">int</span> n=<span class="number">2</span>;</span><br><span class="line"><span class="keyword">int</span> m=<span class="number">5</span>;</span><br><span class="line"><span class="comment">//逻辑运算符 &amp;&amp;(与)  ||(或) !(非)</span></span><br><span class="line"><span class="keyword">boolean</span> result=((n&gt;m)&amp;&amp;(n!=<span class="number">0</span>)); </span><br><span class="line"><span class="keyword">boolean</span> result2=((n&gt;m)||(n!=m));</span><br><span class="line">System.out.println(result);  <span class="comment">//false</span></span><br><span class="line">System.out.println(result2);  <span class="comment">//true</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="输入与输出"><a href="#输入与输出" class="headerlink" title="输入与输出"></a>输入与输出</h2><p>1.<code>equals()</code> :判断两个字符串是否相等，<code>内容是否一致</code>。要判断引用类型的变量内容是否相等，必须使用equals()方法<br>2. <code>==</code> ：判断两个字符串在内存中的<code>首地址</code>，即是否为同一字符串。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Blog_01;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner; <span class="comment">//输入要导包</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">blog1</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">Scanner s=<span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">System.out.println(<span class="string">&quot;请输入用户名:&quot;</span>);</span><br><span class="line">String name=s.next();</span><br><span class="line">System.out.println(<span class="string">&quot;请输入密码&quot;</span>);</span><br><span class="line"><span class="keyword">int</span> password=s.nextInt();</span><br><span class="line">System.out.println(<span class="string">&quot;请输入工资&quot;</span>);</span><br><span class="line"><span class="keyword">double</span> money=s.nextDouble();</span><br><span class="line"><span class="keyword">if</span>(name.equals(<span class="string">&quot;Tom&quot;</span>)&amp;&amp;password==<span class="number">123</span>) &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;登录成功&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;用户名或密码错误&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="流程控制"><a href="#流程控制" class="headerlink" title="流程控制"></a>流程控制</h2><h3 id="if判断"><a href="#if判断" class="headerlink" title="if判断"></a>if判断</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (条件) &#123;</span><br><span class="line">    <span class="comment">// 条件满足时执行</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//多条件判断</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n = <span class="number">70</span>;</span><br><span class="line">        <span class="keyword">if</span> (n &gt;= <span class="number">90</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;优秀&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (n &gt;= <span class="number">60</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;及格了&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;挂科了&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;END&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="switch多重选择"><a href="#switch多重选择" class="headerlink" title="switch多重选择"></a>switch多重选择</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//判断整数类型</span></span><br><span class="line"><span class="keyword">switch</span> (option) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">    ...</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">    ...</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">    ...</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//判断字符串类型</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        String fruit = <span class="string">&quot;apple&quot;</span>;</span><br><span class="line">        <span class="keyword">switch</span> (fruit) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&quot;apple&quot;</span>:</span><br><span class="line">            System.out.println(<span class="string">&quot;Selected apple&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&quot;pear&quot;</span>:</span><br><span class="line">            System.out.println(<span class="string">&quot;Selected pear&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&quot;mango&quot;</span>:</span><br><span class="line">            System.out.println(<span class="string">&quot;Selected mango&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            System.out.println(<span class="string">&quot;No fruit selected&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="While-循环"><a href="#While-循环" class="headerlink" title="While 循环"></a>While 循环</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> (条件表达式) &#123;   <span class="comment">//条件为true，执行循环语句，条件为false退出循环。</span></span><br><span class="line">    循环语句</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 继续执行后续代码</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> sum = <span class="number">0</span>; <span class="comment">// 累加的和，初始化为0</span></span><br><span class="line">        <span class="keyword">int</span> n = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (n &lt;= <span class="number">100</span>) &#123; <span class="comment">// 循环条件是n &lt;= 100</span></span><br><span class="line">            sum = sum + n; <span class="comment">// 把n累加到sum中</span></span><br><span class="line">            n ++; <span class="comment">// n自身加1</span></span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(sum); <span class="comment">// 5050</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="do-while循环"><a href="#do-while循环" class="headerlink" title="do while循环"></a>do while循环</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">do</span> &#123;                    <span class="comment">//先执行循环，再判断条件</span></span><br><span class="line">    执行循环语句</span><br><span class="line">&#125; <span class="keyword">while</span> (条件表达式);</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> n = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            sum = sum + n;</span><br><span class="line">            n ++;</span><br><span class="line">        &#125; <span class="keyword">while</span> (n &lt;= <span class="number">100</span>);</span><br><span class="line">        System.out.println(sum);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="for循环"><a href="#for循环" class="headerlink" title="for循环"></a>for循环</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (初始条件; 循环检测条件; 循环后更新计数器) &#123;</span><br><span class="line">    <span class="comment">// 执行语句</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[] ns = &#123; <span class="number">1</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">16</span>, <span class="number">25</span> &#125;;</span><br><span class="line">        <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;ns.length; i++) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;i = &quot;</span> + i + <span class="string">&quot;, ns[i] = &quot;</span> + ns[i]);</span><br><span class="line">            sum = sum + ns[i];</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;sum = &quot;</span> + sum);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="for-each循环（增强for）"><a href="#for-each循环（增强for）" class="headerlink" title="for each循环（增强for）"></a>for each循环（增强for）</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[] ns = &#123; <span class="number">1</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">16</span>, <span class="number">25</span> &#125;;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> n : ns) &#123;</span><br><span class="line">            System.out.println(n);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="break"><a href="#break" class="headerlink" title="break"></a>break</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; ; i++) &#123;</span><br><span class="line">            sum = sum + i;</span><br><span class="line">            <span class="keyword">if</span> (i == <span class="number">100</span>) &#123;</span><br><span class="line">                <span class="keyword">break</span>;   <span class="comment">//break语句用于跳出当前循环</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(sum);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="continue"><a href="#continue" class="headerlink" title="continue"></a>continue</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=<span class="number">10</span>; i++) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;begin i = &quot;</span> + i);</span><br><span class="line">            <span class="keyword">if</span> (i % <span class="number">2</span> == <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">continue</span>; <span class="comment">//    continue语句会结束本次循环</span></span><br><span class="line">            &#125;</span><br><span class="line">            sum = sum + i;</span><br><span class="line">            System.out.println(<span class="string">&quot;end i = &quot;</span> + i);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(sum); <span class="comment">// 25</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="String类"><a href="#String类" class="headerlink" title="String类"></a>String类</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Link</span></span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> booktime=<span class="number">4</span>;</span><br><span class="line"><span class="keyword">float</span> practice=<span class="number">2.5f</span>;</span><br><span class="line"><span class="comment">//字符连接符+</span></span><br><span class="line">System.out.println(<span class="string">&quot;我明天花费&quot;</span>+booktime+<span class="string">&quot;小时看书;&quot;</span>+practice+<span class="string">&quot;小时上机练习&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="内置函数"><a href="#内置函数" class="headerlink" title="内置函数"></a>内置函数</h3><p>String str=”I Love China”;<br>str.length():返回字符串<code>长度</code>。<br>str.indexOf(substr):返回指定字符串<code>首次出现</code>的索引位置。没有找到返回-1,字符串下标0~length()-1。<br>str.lastIndexOf(String str):返回指定字符串<code>最后一次出现</code>的索引位置，没有找到返回-1。<br>str.charAt(int index):返回<code>指定索引处</code>的字符。<br>str.substring(int beginIndex):获取从<code>指定位置开始</code>截取到该字符串<code>结尾</code>的子串。<br>str.substring(int beginIndex,int endIndex):获取从<code>指定位置开始截取到某一位置</code>的子串。<br>str.trim()：返回字符串的副本，<code>忽略</code>前后空格。<br>str.replace(char old,char new)：将指定字符串或字符<code>替换</code>为新字符串或字符。<br>str.startsWith(String s)：判断是否以s<code>开头</code>。<br>str.endsWith(String s)：判断是否以s<code>结尾</code>。<br>str1.equals(str2)：比较是否有<code>相同</code>的字符和长度。<br>str1.equalsIgnoreCase(str2)：<code>不区分</code>大小写比较。<br>str.toLowerCase()：转为小写。<br>str.toUpperCase()：转为大写。    </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Blog_01;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">blog_03</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">String str=<span class="string">&quot; Hello World &quot;</span>;</span><br><span class="line"><span class="comment">//获取长度</span></span><br><span class="line">System.out.println(<span class="string">&quot;字符串长度:&quot;</span>+str.length()+<span class="string">&quot;\t&quot;</span>+str.lastIndexOf(<span class="string">&quot;&quot;</span>));</span><br><span class="line"><span class="comment">//字符串查找</span></span><br><span class="line">System.out.println(<span class="string">&quot;字符&#x27;W&#x27;的首次出现索引位置:&quot;</span>+str.indexOf(<span class="string">&#x27;W&#x27;</span>));<span class="comment">//找不到返回-1</span></span><br><span class="line">System.out.println(<span class="string">&quot;字符&#x27;l&#x27;的最后一次出现索引位置:&quot;</span>+str.lastIndexOf(<span class="string">&#x27;l&#x27;</span>));<span class="comment">//找不到返回-1</span></span><br><span class="line">System.out.println(<span class="string">&quot;获取索引为46的字符:&quot;</span>+str.charAt(<span class="number">4</span>));</span><br><span class="line"><span class="comment">//子串获取</span></span><br><span class="line">System.out.println(<span class="string">&quot;返回从索引3开始的子串:&quot;</span>+str.substring(<span class="number">3</span>));</span><br><span class="line">System.out.println(<span class="string">&quot;返回从索引1到6的子串:&quot;</span>+str.substring(<span class="number">1</span>,<span class="number">6</span>));</span><br><span class="line"><span class="comment">//去除空格</span></span><br><span class="line">System.out.println(<span class="string">&quot;忽略前后空格后长度&quot;</span>+str.trim().length());</span><br><span class="line"><span class="comment">//替换</span></span><br><span class="line">System.out.println(<span class="string">&quot;把l替换成~:&quot;</span>+str.replace(<span class="string">&quot;l&quot;</span>, <span class="string">&quot;~&quot;</span>));</span><br><span class="line"><span class="comment">//判断字符串的开始与结尾</span></span><br><span class="line">String num=<span class="string">&quot;2312057536&quot;</span>;</span><br><span class="line">System.out.println(<span class="string">&quot;字符串是否以23开头:&quot;</span>+num.startsWith(<span class="string">&quot;23&quot;</span>));</span><br><span class="line">System.out.println(<span class="string">&quot;字符串是否以23结尾:&quot;</span>+num.endsWith(<span class="string">&quot;23&quot;</span>));</span><br><span class="line"><span class="comment">//比较字符串是否相等</span></span><br><span class="line">String s1=<span class="keyword">new</span> String(<span class="string">&quot;ABC&quot;</span>);</span><br><span class="line">String s2=<span class="keyword">new</span> String(<span class="string">&quot;abc&quot;</span>);</span><br><span class="line">System.out.println(s1+<span class="string">&quot;equals&quot;</span>+s2+<span class="string">&quot;:&quot;</span>+s1.equals(s2));</span><br><span class="line">System.out.println(s1+<span class="string">&quot;equals&quot;</span>+s2+<span class="string">&quot;:&quot;</span>+s1.equalsIgnoreCase(s2));</span><br><span class="line"><span class="comment">//按字典顺序比较,如果按字典属性此String对象位于参数字符串之前，则结果为负整数。否则为正整数。</span></span><br><span class="line">String str1=<span class="string">&quot;A&quot;</span>;</span><br><span class="line">String str2=<span class="string">&quot;B&quot;</span>;</span><br><span class="line">String str3=<span class="string">&quot;C&quot;</span>;</span><br><span class="line">System.out.println(str1+<span class="string">&quot;compareTo&quot;</span>+str2+<span class="string">&quot;:&quot;</span>+str1.compareTo(str2));</span><br><span class="line">System.out.println(str3+<span class="string">&quot;compareTo&quot;</span>+str1+<span class="string">&quot;:&quot;</span>+str3.compareTo(str1));</span><br><span class="line"><span class="comment">//大小写转换</span></span><br><span class="line">String low=<span class="string">&quot;A&quot;</span>;</span><br><span class="line">String Up=<span class="string">&quot;a&quot;</span>;</span><br><span class="line">System.out.println(<span class="string">&quot;大写转小写:&quot;</span>+low.toLowerCase());</span><br><span class="line">System.out.println(<span class="string">&quot;小写转大写:&quot;</span>+Up.toUpperCase());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="日期和时间格式化"><a href="#日期和时间格式化" class="headerlink" title="日期和时间格式化"></a>日期和时间格式化</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Blog_01;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">blog_04</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">Date date=<span class="keyword">new</span> Date();</span><br><span class="line"><span class="comment">//日期格式化</span></span><br><span class="line">String year=String.format(<span class="string">&quot;%tY&quot;</span>, date);</span><br><span class="line">String month =String.format(<span class="string">&quot;%tB&quot;</span>, date);</span><br><span class="line">String day=String.format(<span class="string">&quot;%td&quot;</span>, date);</span><br><span class="line">System.out.println(<span class="string">&quot;今年是:&quot;</span>+year+<span class="string">&quot;年&quot;</span>); <span class="comment">//今年是:2020年</span></span><br><span class="line">System.out.println(<span class="string">&quot;现在是:&quot;</span>+month);  <span class="comment">//现在是:十一月</span></span><br><span class="line">System.out.println(<span class="string">&quot;今天是:&quot;</span>+day+<span class="string">&quot;号&quot;</span>);  <span class="comment">//今天是:24号</span></span><br><span class="line"><span class="comment">//时间格式化</span></span><br><span class="line">String hour=String.format(<span class="string">&quot;%tH&quot;</span>, date);</span><br><span class="line">String minute=String.format(<span class="string">&quot;%tM&quot;</span>, date);</span><br><span class="line">String second=String.format(<span class="string">&quot;%tS&quot;</span>, date);</span><br><span class="line">System.out.println(<span class="string">&quot;现在是:&quot;</span>+hour+<span class="string">&quot;时&quot;</span>+minute+<span class="string">&quot;分&quot;</span>+second+<span class="string">&quot;秒&quot;</span>);<span class="comment">//现在是:14时03分07秒</span></span><br><span class="line"><span class="comment">//日期时间组合</span></span><br><span class="line">String time=String.format(<span class="string">&quot;%tc&quot;</span>, date);</span><br><span class="line">String form=String.format(<span class="string">&quot;%tF&quot;</span>, date);</span><br><span class="line">System.out.println(<span class="string">&quot;全部的时间信息是:&quot;</span>+time);<span class="comment">//全部的时间信息是:星期二 十一月 24 14:03:07 CST 2020</span></span><br><span class="line">System.out.println(<span class="string">&quot;年-月-日格式:&quot;</span>+form); <span class="comment">//年-月-日格式:2020-11-24</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Blog_01;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">blog_02</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line"><span class="keyword">int</span> arr[]=<span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">5</span>];</span><br><span class="line">arr[<span class="number">0</span>]=<span class="number">1</span>;arr[<span class="number">1</span>]=<span class="number">2</span>;arr[<span class="number">2</span>]=<span class="number">3</span>;arr[<span class="number">3</span>]=<span class="number">4</span>;arr[<span class="number">4</span>]=<span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> arr1[]= &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;;</span><br><span class="line">System.out.println(arr[<span class="number">0</span>]);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i : arr) &#123;</span><br><span class="line">System.out.println(i);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="数组排序算法"><a href="#数组排序算法" class="headerlink" title="数组排序算法"></a>数组排序算法</h3><h4 id="冒泡排序"><a href="#冒泡排序" class="headerlink" title="冒泡排序"></a><code>冒泡排序</code></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Blog_01;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 外层循环控制排序轮数，一般要为排序的数组长度减1次，因为最后一次循环只剩一个数组元素，不需要对比，</span></span><br><span class="line"><span class="comment"> * 内层循环主要对比数组中每个相邻元素的大小，是否交换位置。</span></span><br><span class="line"><span class="comment"> * */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">blog_06</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line"><span class="keyword">int</span> arr[]= &#123;<span class="number">63</span>,<span class="number">4</span>,<span class="number">24</span>,<span class="number">1</span>,<span class="number">3</span>,<span class="number">15</span>&#125;;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;arr.length;i++) &#123;  <span class="comment">//循环5轮比较</span></span><br><span class="line"><span class="comment">//比较相邻两个元素，较大的数往后冒泡</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;arr.length-i;j++) &#123;</span><br><span class="line"><span class="keyword">if</span>(arr[j]&gt;arr[j+<span class="number">1</span>]) &#123;</span><br><span class="line"><span class="keyword">int</span> t=arr[j];   <span class="comment">//把第一个元素值保存在临时变量中</span></span><br><span class="line">arr[j]=arr[j+<span class="number">1</span>];  <span class="comment">//把第二个元素值保存在第一个元素中</span></span><br><span class="line">arr[j+<span class="number">1</span>]=t;   <span class="comment">//把临时变量（第一个元素的值）保存到第二个元素中</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> k : arr) &#123;</span><br><span class="line">System.out.println(k);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="直接选择排序"><a href="#直接选择排序" class="headerlink" title="直接选择排序"></a>直接选择排序</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Blog_01;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 直接选择排序</span></span><br><span class="line"><span class="comment"> * 指定排序位置与其他数组元素分别对比，如果满足条件就交换元素，区别于冒泡排序的相邻交换</span></span><br><span class="line"><span class="comment"> * 从每一趟中取出最小(或最大)的一个元素，顺序地放在已排序好的数列后面。</span></span><br><span class="line"><span class="comment"> * 初始数组:[63，4，24，1，3，15]</span></span><br><span class="line"><span class="comment"> * 第一趟排序:[15,4,24,1,3] 63</span></span><br><span class="line"><span class="comment"> * 第二趟排序:[15,4,3,1]24 ,63</span></span><br><span class="line"><span class="comment"> * 第三趟排序:]1,4,3]15,24,63</span></span><br><span class="line"><span class="comment"> *第四趟排序:[1,3]4,15,24,63</span></span><br><span class="line"><span class="comment"> *第五趟排序:[1],3,4,15,24,63</span></span><br><span class="line"><span class="comment"> * */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">blog_07</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line"><span class="keyword">int</span> arr[]=&#123;<span class="number">63</span>,<span class="number">4</span>,<span class="number">24</span>,<span class="number">1</span>,<span class="number">3</span>,<span class="number">15</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> index;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;arr.length;i++) &#123;</span><br><span class="line">index=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;=arr.length-i;j++) &#123;</span><br><span class="line"><span class="keyword">if</span>(arr[j]&gt;arr[index]) &#123;</span><br><span class="line">index=j;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//交换在位置array.length-1和index(最大值)上的两个数</span></span><br><span class="line"><span class="keyword">int</span> t=arr[arr.length-i];</span><br><span class="line">arr[arr.length-i]=arr[index];</span><br><span class="line">arr[index]=t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> k : arr) &#123;</span><br><span class="line">System.out.println(k);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="反转排序"><a href="#反转排序" class="headerlink" title="反转排序"></a>反转排序</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Blog_01;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 反转排序</span></span><br><span class="line"><span class="comment"> * 把数组最后一个元素与第一个元素替换，倒数第二个元素与第一个元素替换，以此类推</span></span><br><span class="line"><span class="comment"> * */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">blog_08</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line"><span class="keyword">int</span> arr[]=&#123;<span class="number">10</span>,<span class="number">20</span>,<span class="number">30</span>,<span class="number">40</span>,<span class="number">50</span>,<span class="number">60</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line"><span class="keyword">int</span> len=arr.length;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len/<span class="number">2</span>;i++) &#123;</span><br><span class="line">t=arr[i];</span><br><span class="line">arr[i]=arr[len-<span class="number">1</span>-i];</span><br><span class="line">arr[len-<span class="number">1</span>-i]=t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> k : arr) &#123;</span><br><span class="line">System.out.println(k);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="对象和类"><a href="#对象和类" class="headerlink" title="对象和类"></a>对象和类</h1><p><code>类</code>实质上是封装对象<code>属性</code>和<code>行为</code>的载体，<code>对象</code>则是类抽象出来的一个<code>实例</code>。<br>面向对象：是一种通过对象的方式，把现实世界<code>映射到计算机模型</code>的一种编程方法。<br>面向过程：是把模型<code>分解成一步一步</code>的过程。<br>面向对象程序设计具有以下特点：<br>1.<code>封装性</code>：解决了数据的安全性问题。<br>2.<code>继承性</code>：解决了代码的重用问题。<br>3.<code>多态性</code>：解决了程序的扩展问题。</p><h2 id="类和对象"><a href="#类和对象" class="headerlink" title="类和对象"></a>类和对象</h2><p><code>成员方法</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">权限修饰符 返回值类型 方法名(参数类型 参数名)&#123;</span><br><span class="line"><span class="comment">//方法体</span></span><br><span class="line"><span class="keyword">return</span> 返回值;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/24/3e1735e6e84a9f9d4e37dd38079f9453.png"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Book</span></span>&#123;</span><br><span class="line"><span class="keyword">private</span> String name;  <span class="comment">//String类型的成员变量</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span></span>&#123;  <span class="comment">//定义了一个方法</span></span><br><span class="line"><span class="keyword">int</span> id=<span class="number">0</span>;<span class="comment">//局部变量</span></span><br><span class="line">setName(<span class="string">&quot;Java&quot;</span>); <span class="comment">//调用类中的其他方法</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span></span>&#123;</span><br><span class="line"><span class="keyword">this</span>.name=name;  <span class="comment">//将参数赋给成员变量</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> Book <span class="title">getBook</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>类的构造方法</code>:<br>1.构造方法<code>没有</code>返回值,用public声明。<br>2.构造方法名称要与<code>本类的名称相同</code>。<br>3.一旦为类编写构造方法,默认的构造方法将会被<code>覆盖</code>。<br>4.编写构造方法的目的是向对象<code>传递参数</code>(一般有参),以及对成员变量进行<code>初始化</code>(一般无参)。<br>5.构造方法同样支持方法<code>重载</code>。<br>6.构造方法不能被static,final,abstract,synchronized,native等修饰符修饰。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">book</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="comment">//构造方法体</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="包装类"><a href="#包装类" class="headerlink" title="包装类"></a>包装类</h1><p>Java为了能将基本数据类型视为对象处理，并能连接相关的方法，为每个数据类型都提供了包装类。</p><h2 id="Integer"><a href="#Integer" class="headerlink" title="Integer"></a>Integer</h2><p>java.lang包中的Integer类、Long类和Short类，分别将int、long和short封装成一个类。<br>1.构造方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Integer(<span class="keyword">int</span> number)</span><br><span class="line">Integer number=<span class="keyword">new</span> Integer(<span class="number">7</span>); <span class="comment">//以一个int型变量作为参数来获取Integer对象</span></span><br><span class="line">Integer(String str)</span><br><span class="line">integer number=<span class="keyword">new</span> Integer(<span class="string">&quot;45&quot;</span>);<span class="comment">//以一个String型变量作为参数来获取Integer对象</span></span><br></pre></td></tr></table></figure><p>2.<code>Integer</code>类常用方法<br>① <code>parseInt(String s)</code>方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">String year = <span class="string">&quot;2018&quot;</span>;</span><br><span class="line"><span class="keyword">int</span> i = Integer.parseInt(year); <span class="comment">//字符串转为int类型</span></span><br><span class="line">System.out.println(i/<span class="number">2</span>);<span class="comment">//1009</span></span><br></pre></td></tr></table></figure><p>② <code>parseInt(String s,int radix)</code>方法<br>解释：将字符串s按照radix进行转换相应的进制数，然后运行的结果都是以十进制的形式打印</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">String year = <span class="string">&quot;1110&quot;</span>;</span><br><span class="line">String age = <span class="string">&quot;A&quot;</span>;</span><br><span class="line"><span class="comment">//指定year的进制为2进制</span></span><br><span class="line"><span class="keyword">int</span> i = Integer.parseInt(year,<span class="number">2</span>);</span><br><span class="line"><span class="comment">//指定age的进制为16进制</span></span><br><span class="line"><span class="keyword">int</span> i2 = Integer.parseInt(age,<span class="number">16</span>);    </span><br><span class="line">System.out.println(i);<span class="comment">//14</span></span><br><span class="line">System.out.println(i2);<span class="comment">//10</span></span><br></pre></td></tr></table></figure><p>③<code> toString()</code>方法<br>解释：Integer类中的静态方法toString()转换成字符串</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> src = <span class="number">50</span>;</span><br><span class="line">String dest = Integer.toString(src);</span><br><span class="line">System.out.println(dest+<span class="number">1</span>);<span class="comment">//501</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Blog_01;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">blog_10</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">String str=Integer.toString(<span class="number">456</span>);  <span class="comment">//获取十进制</span></span><br><span class="line">String str1=Integer.toBinaryString(<span class="number">456</span>); <span class="comment">//获取二进制</span></span><br><span class="line">String str2=Integer.toHexString(<span class="number">456</span>);  <span class="comment">//获取十六进制</span></span><br><span class="line">String str3=Integer.toOctalString(<span class="number">456</span>); <span class="comment">//获取八进制</span></span><br><span class="line">System.out.println(<span class="string">&quot;456的十进制表示:&quot;</span>+str);</span><br><span class="line">System.out.println(<span class="string">&quot;456的二进制表示:&quot;</span>+str1);</span><br><span class="line">System.out.println(<span class="string">&quot;456的十六进制表示:&quot;</span>+str2);</span><br><span class="line">System.out.println(<span class="string">&quot;456的八进制表示:&quot;</span>+str3);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="随机数"><a href="#随机数" class="headerlink" title="随机数"></a>随机数</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> test;</span><br><span class="line"><span class="keyword">import</span> java.util.Random;<span class="comment">//引入随机数包</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test3</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line"><span class="comment">//求随机数方法1</span></span><br><span class="line">Random C=<span class="keyword">new</span> Random();<span class="comment">//声明随机数random</span></span><br><span class="line"><span class="keyword">int</span> number=C.nextInt(<span class="number">100</span>);<span class="comment">//()内为随机数范围</span></span><br><span class="line">System.out.println(<span class="string">&quot;随机数为&quot;</span>+number);</span><br><span class="line"><span class="comment">//求随机数2</span></span><br><span class="line"><span class="keyword">int</span> num=(<span class="keyword">int</span>)(Math.random()*<span class="number">100</span>);</span><br><span class="line">System.out.println(<span class="string">&quot;随机数&quot;</span>+num);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="接口、继承与多态"><a href="#接口、继承与多态" class="headerlink" title="接口、继承与多态"></a>接口、继承与多态</h1><h2 id="类的继承"><a href="#类的继承" class="headerlink" title="类的继承"></a>类的继承</h2><p>子类可以继承父类的属性和方法，也可以增加原来父类所不具备的属性和方法。<br>在java中用<code>extends</code>关键字来标识两个类的继承关系。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Blog_01;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="title">Test</span><span class="params">()</span> </span>&#123;  <span class="comment">//构造方法</span></span><br><span class="line"> <span class="comment">//SomeSentence</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doSomething</span><span class="params">()</span> </span>&#123; <span class="comment">//成员方法 </span></span><br><span class="line"><span class="comment">//SomeSentence</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">protected</span> Test <span class="title">dolt</span><span class="params">()</span> </span>&#123; <span class="comment">//方法返回值类型为Test类型</span></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> Test();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test2</span> <span class="keyword">extends</span> <span class="title">Test</span></span>&#123;  <span class="comment">//继承父类</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Test2</span><span class="params">()</span> </span>&#123;  <span class="comment">//构造方法</span></span><br><span class="line"><span class="keyword">super</span>();   <span class="comment">//调用父类构造方法</span></span><br><span class="line"><span class="keyword">super</span>.doSomething();  <span class="comment">//调用父类成员变量</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">NewdoSomething</span><span class="params">()</span> </span>&#123; <span class="comment">//新增方法</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doSomething</span><span class="params">()</span> </span>&#123; <span class="comment">//重写父类方法</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">protected</span> Test2 <span class="title">dolt</span><span class="params">()</span> </span>&#123;  <span class="comment">//重写父类方法，方法返回值类型为Test2类型</span></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> Test2();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><code>Object类</code>是所有类的父类，java每个类都源于java.lang.Object类。</p><h2 id="方法重载"><a href="#方法重载" class="headerlink" title="方法重载"></a>方法重载</h2><p><code>方法名相同而形参类型、个数、位置不同,。</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Blog_01;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> a+b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">double</span> <span class="title">add</span><span class="params">(<span class="keyword">double</span> a,<span class="keyword">double</span> b)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> a+b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">double</span> b)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">double</span> a,<span class="keyword">int</span> b)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">&quot;调用add(int,int)方法:&quot;</span>+add(<span class="number">1</span>,<span class="number">2</span>));</span><br><span class="line">System.out.println(<span class="string">&quot;调用add(double,double)方法:&quot;</span>+add(<span class="number">1.3</span>,<span class="number">2.2</span>));</span><br><span class="line">System.out.println(<span class="string">&quot;调用add(int)方法:&quot;</span>+add(<span class="number">1</span>));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="多态"><a href="#多态" class="headerlink" title="多态"></a>多态</h2><p>多态是<code>同一个行为具有多个不同表现形式或形态</code>的能力。比如同一个接口，使用不同的实例而执行不同操作。<br>多态存在的三个必要条件<br>    1.<code>继承</code><br>    2.<code>重写</code><br>    3.<code>父类引用指向子类对象：Parent p = new Child();</code><br>多态分方法<code>重载</code>和方法<code>重写</code>。<br>方法重写：需要有<code>继承关系</code>，父类和子类中的方法必须<code>同原型</code>（名称，参数，返回值相同）。<br>方法重载：方法名称相同，<code>参数不同</code>。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">ublic <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">      show(<span class="keyword">new</span> Cat());  <span class="comment">// 以 Cat 对象调用 show 方法</span></span><br><span class="line">      show(<span class="keyword">new</span> Dog());  <span class="comment">// 以 Dog 对象调用 show 方法</span></span><br><span class="line">                </span><br><span class="line">      Animal a = <span class="keyword">new</span> Cat();  <span class="comment">// 向上转型  </span></span><br><span class="line">      a.eat();               <span class="comment">// 调用的是 Cat 的 eat</span></span><br><span class="line">      Cat c = (Cat)a;        <span class="comment">// 向下转型  </span></span><br><span class="line">      c.work();        <span class="comment">// 调用的是 Cat 的 work</span></span><br><span class="line">  &#125;  </span><br><span class="line">            </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">show</span><span class="params">(Animal a)</span>  </span>&#123;</span><br><span class="line">      a.eat();  </span><br><span class="line">        <span class="comment">// 类型判断</span></span><br><span class="line">        <span class="keyword">if</span> (a <span class="keyword">instanceof</span> Cat)  &#123;  <span class="comment">// 猫做的事情 </span></span><br><span class="line">            Cat c = (Cat)a;  </span><br><span class="line">            c.work();  </span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (a <span class="keyword">instanceof</span> Dog) &#123; <span class="comment">// 狗做的事情 </span></span><br><span class="line">            Dog c = (Dog)a;  </span><br><span class="line">            c.work();  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Animal</span> </span>&#123;  </span><br><span class="line">    <span class="function"><span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">eat</span><span class="params">()</span></span>;  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Cat</span> <span class="keyword">extends</span> <span class="title">Animal</span> </span>&#123;  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">eat</span><span class="params">()</span> </span>&#123;  </span><br><span class="line">        System.out.println(<span class="string">&quot;吃鱼&quot;</span>);  </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">work</span><span class="params">()</span> </span>&#123;  </span><br><span class="line">        System.out.println(<span class="string">&quot;抓老鼠&quot;</span>);  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Dog</span> <span class="keyword">extends</span> <span class="title">Animal</span> </span>&#123;  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">eat</span><span class="params">()</span> </span>&#123;  </span><br><span class="line">        System.out.println(<span class="string">&quot;吃骨头&quot;</span>);  </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">work</span><span class="params">()</span> </span>&#123;  </span><br><span class="line">        System.out.println(<span class="string">&quot;看家&quot;</span>);  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*吃鱼</span></span><br><span class="line"><span class="comment">抓老鼠</span></span><br><span class="line"><span class="comment">吃骨头</span></span><br><span class="line"><span class="comment">看家</span></span><br><span class="line"><span class="comment">吃鱼</span></span><br><span class="line"><span class="comment">抓老鼠*/</span></span><br></pre></td></tr></table></figure><h2 id="抽象类"><a href="#抽象类" class="headerlink" title="抽象类"></a>抽象类</h2><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/24/5ae1207065af3cdf0ff1fcdb2cf521f4.png"><br>java中用<code>abstract</code>关键字定义抽象类和抽象方法。<br>抽象方法<code>没有方法体</code>，方法本身没有任何意义，除非被<code>重写</code>，实际上抽象类除了<code>被继承</code>之外没有任何意义。<br>抽象类的特点：<br>1.<code>只要类中有一个抽象方法，此类就被标记为抽象类</code>。<br>2.抽象类<code>不可以创建对象(实例化)</code>，只能用来继承。<br>3.抽象类的子类必须重写抽象类中的<code>所有抽象方法</code>。<br>4.相对于在父类中定义了方法名和参数，在子类中对方法进行实例化。<br>5.抽象类中包含<code>非抽象</code>的方法。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span></span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">testAbstract</span><span class="params">()</span></span>;<span class="comment">//定义抽象方法</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="接口"><a href="#接口" class="headerlink" title="接口"></a>接口</h2><p>某个类中所有方法<code>都为抽象方法</code>，此类可定义为接口。关键字<code>interface</code>。<br>注意，定义为接口类后，无需在每个方法前加abstract关键字，接口中所有变量不需要用<code>final</code>和<code>static</code>。<br>实现接口:接口不可以实例化，只能用关键字<code>interface</code>实现。某个类可以实现<code>多个接口</code>。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">MyInterface</span></span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">sub</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Myclass</span> <span class="keyword">implements</span> <span class="title">MyInterface</span></span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123; <span class="comment">//实现接口中的方法。</span></span><br><span class="line"> <span class="keyword">return</span> x+y; </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">sub</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> x-y;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="异常处理"><a href="#异常处理" class="headerlink" title="异常处理"></a>异常处理</h1><p>异常是一个在程序执行期间发生的事件，它中断了正在执行的程序的正常指令流。<br>Exceptiontype是try代码块传递给catch代码块的变量类型，e是变量名。<br><code>e.getMessage()</code>：用于输出错误性质。<br><code>e.toString()</code>：给出异常的类型和性质。<br><code>e.printStackTrace()</code>; //输出异常的类型、性质、栈层次及出现在程序中的位置。<br><code>finally语句块</code>无论有无异常<code>都会执行</code>。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line"><span class="comment">//程序代码块</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span>(Exceptiontype1 e)&#123;</span><br><span class="line"><span class="comment">//对Exceptiontype1的处理</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span>(Exceptiontype2 e)&#123;</span><br><span class="line"><span class="comment">//对Exceptiontype2的处理</span></span><br><span class="line">&#125;</span><br><span class="line">...</span><br><span class="line"><span class="keyword">finally</span>&#123;</span><br><span class="line"><span class="comment">//程序块</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Blog_02;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">blog_02_01</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line"><span class="keyword">try</span> &#123;    <span class="comment">//try语句中包含可能出现异常的代码</span></span><br><span class="line">String str=<span class="string">&quot;lili&quot;</span>;  <span class="comment">//定义字符变量</span></span><br><span class="line">System.out.println(str+<span class="string">&quot;年龄是:&quot;</span>);</span><br><span class="line"><span class="keyword">int</span> age=Integer.parseInt(<span class="string">&quot;20L&quot;</span>); <span class="comment">//数据类型转换</span></span><br><span class="line">System.out.println(age);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span>(Exception e) &#123;   <span class="comment">//catch语句用来获取异常信息</span></span><br><span class="line">e.printStackTrace(); <span class="comment">//输出异常性质</span></span><br><span class="line">&#125;</span><br><span class="line">System.out.println(<span class="string">&quot;program over&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*lili年龄是：</span></span><br><span class="line"><span class="comment">java.lang.NumberFormatException: For input string: &quot;20L&quot;</span></span><br><span class="line"><span class="comment">program over</span></span><br><span class="line"><span class="comment">at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)</span></span><br><span class="line"><span class="comment">at java.lang.Integer.parseInt(Integer.java:580)</span></span><br><span class="line"><span class="comment">at java.lang.Integer.parseInt(Integer.java:615)</span></span><br><span class="line"><span class="comment">at Blog_02.blog_02_01.main(blog_02_01.java:10)*/</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="自定义异常"><a href="#自定义异常" class="headerlink" title="自定义异常"></a>自定义异常</h2><p>继承<code>Exception</code>类即可自定义异常:<br>1.创建自定义异常类<br>2.在方法中通过<code>throw</code>关键字抛出异常对象<br>3.如果在当前抛出异常的方法中处理异常，可以使用<code>try-catch</code>语句块捕获并处理，否则在方法的声明处通过<code>throws</code>关键字指明要抛出给方法调用者的异常，继续进行下一步操作。<br>4.在出现异常方法的调用者中捕获并处理异常。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Blog_02;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">blog_02_02</span> </span>&#123;   <span class="comment">//创建类</span></span><br><span class="line"> <span class="comment">//定义方法，抛出异常</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">avg</span><span class="params">(<span class="keyword">int</span> num1,<span class="keyword">int</span> num2)</span><span class="keyword">throws</span> MyException</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(num1&lt;<span class="number">0</span> || num2&lt;<span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> MyException(<span class="string">&quot;不可以使用负数&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(num1&gt;<span class="number">100</span> || num2&gt;<span class="number">100</span>) &#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> MyException(<span class="string">&quot;数值太大了&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> (num1+num2)/<span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="keyword">int</span> result=avg(<span class="number">102</span>,<span class="number">150</span>);</span><br><span class="line">&#125;<span class="keyword">catch</span>(MyException e) &#123;</span><br><span class="line">System.out.println(e);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyException</span> <span class="keyword">extends</span> <span class="title">Exception</span></span>&#123;  <span class="comment">//创建自定义异常，继承Exception类</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">MyException</span><span class="params">(String ErrorMessage)</span> </span>&#123; <span class="comment">//构造方法</span></span><br><span class="line"><span class="keyword">super</span>(ErrorMessage);  <span class="comment">//父类构造方法 </span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//Blog_02.MyException: 数值太大了</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="在方法中抛出异常"><a href="#在方法中抛出异常" class="headerlink" title="在方法中抛出异常"></a>在方法中抛出异常</h2><p><code>throws</code>关键字被应用在声明方法时，用来指定方法可能抛出的异常。<br>使用throws关键字将异常抛给上一级后，如果不想处理该异常，可以继续向上抛出，但最终要有能够处理该异常的代码。<br>语法：<code>[(修饰符)](返回值类型)(方法名)([参数列表])[throws(异常类)]&#123;......&#125; </code>    </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">如： <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">function</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;......&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Blog_02;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">blog_02_03</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">pop</span><span class="params">()</span> <span class="keyword">throws</span> NegativeArraySizeException</span>&#123;</span><br><span class="line"><span class="comment">//定义方法并抛出NegativeArraySizeException异常</span></span><br><span class="line"><span class="keyword">int</span> arr[]=<span class="keyword">new</span> <span class="keyword">int</span>[-<span class="number">3</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">pop();</span><br><span class="line">&#125;<span class="keyword">catch</span>(NegativeArraySizeException e) &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;pop()方法抛出的异常&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="使用throw关键字抛出异常"><a href="#使用throw关键字抛出异常" class="headerlink" title="使用throw关键字抛出异常"></a>使用throw关键字抛出异常</h2><p><code>throw</code>关键字通常用于<code>方法体</code>中，并且抛出一个<code>异常对象</code>。<br>程序在执行到throw语句时<code>立即终止</code>，它后面的语句不在执行。<br>通过throw抛出异常后，如果想在上一级代码中捕获并处理异常，则需要在抛出异常的方法中使用<code>throws</code>关键字在方法的声明中指明要抛出的异常；如果要捕捉throw抛出的异常，则必须使用<code>try-catch</code>语句。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//throw是语句抛出一个异常</span></span><br><span class="line"><span class="comment">//   语法：throw（异常对象）；</span></span><br><span class="line"><span class="comment">//throw e；</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> Blog_02;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">blog_02_04</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">String s = <span class="string">&quot;abc&quot;</span>; </span><br><span class="line">    <span class="keyword">if</span>(s.equals(<span class="string">&quot;abc&quot;</span>)) &#123; </span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> NumberFormatException(); </span><br><span class="line">    &#125; <span class="keyword">else</span> &#123; </span><br><span class="line">      System.out.println(s); </span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*Exception in thread &quot;main&quot; java.lang.NumberFormatException</span></span><br><span class="line"><span class="comment">at Blog_02.blog_02_04.main(blog_02_04.java:8)</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><p>throw与throws的区别<br>1、throw用在<code>方法体内</code>，throws用在<code>方法声明后面</code>，表示再抛出异常，由该方法的调用者来处理。<br>2、throw是具体向外抛异常的，抛出的是一个<code>异常实例</code>，throws声明了是<code>哪种类型的异常</code>，使它的调用者可以捕获这个异常。<br>3、throw如果执行了，那么一定是抛出了某种异常了，throws表示可能出现，但不一定。<br>4、同时出现的时候，throws出现在函数头、throw出现在函数体，两种不会由函数去处理，真正的处理由函数的上层调用处理。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Blog_02;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyException</span> <span class="keyword">extends</span> <span class="title">Exception</span></span>&#123;   <span class="comment">//创建自定义异常类</span></span><br><span class="line">String message;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">MyException</span><span class="params">(String ErrorMessage)</span> </span>&#123; <span class="comment">//父类方法</span></span><br><span class="line">message=ErrorMessage;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getMessage</span><span class="params">()</span> </span>&#123;  <span class="comment">//覆盖getMessage()方法</span></span><br><span class="line"><span class="keyword">return</span> message;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">blog_02_05</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">quotient</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span><span class="keyword">throws</span> MyException</span>&#123; <span class="comment">//定义方法抛出异常</span></span><br><span class="line"><span class="keyword">if</span>(y&lt;<span class="number">0</span>) &#123;             <span class="comment">//判断参数是否小于0</span></span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> MyException(<span class="string">&quot;除数不能为负数&quot;</span>); <span class="comment">//异常信息</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> x/y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line"><span class="keyword">try</span> &#123;<span class="comment">//try语句包含肯发生异常的语句</span></span><br><span class="line"><span class="keyword">int</span> result=quotient(<span class="number">3</span>,-<span class="number">1</span>);  <span class="comment">//调用方法</span></span><br><span class="line">&#125;<span class="keyword">catch</span>(MyException e) &#123;   <span class="comment">//处理自定义异常</span></span><br><span class="line">System.out.println(e.getMessage()); <span class="comment">//输出异常信息</span></span><br><span class="line">&#125;<span class="keyword">catch</span>(ArithmeticException e) &#123;  <span class="comment">//处理ArithmeticException异常</span></span><br><span class="line">System.out.println(<span class="string">&quot;除数不能为0&quot;</span>); <span class="comment">//输出提示信息</span></span><br><span class="line">&#125;<span class="keyword">catch</span>(Exception e) &#123;        <span class="comment">//处理其他异常</span></span><br><span class="line">System.out.println(<span class="string">&quot;程序发生了其他的异常&quot;</span>); <span class="comment">//输出提示信息</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/25/f932c67833ff3ed587a88897855fc49f.png"></p><h1 id="Swing程序设计"><a href="#Swing程序设计" class="headerlink" title="Swing程序设计"></a>Swing程序设计</h1><p><code>GUI(图形用户界面)</code>为程序提供图形界面，<code>Swing</code>是AWT组件的增强组件，被称为“<code>轻量级组件</code>”，完全由java语言编写，可以在任何平台上运行，相反，依赖于本地平台的组件被称为“<code>重量级组件</code>”，如<code>AWT</code>。<br>Swng包的层次结构和继承关系：<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/25/51007f38a006bb3bde43c7d9cf60cd39.png"></p><h2 id="常用Swing组件"><a href="#常用Swing组件" class="headerlink" title="常用Swing组件"></a>常用Swing组件</h2><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/25/d2ab88097bc3f749bf007b3a2b19d39c.png"></p><h2 id="常用窗体"><a href="#常用窗体" class="headerlink" title="常用窗体"></a>常用窗体</h2><p><code>JFrame窗体</code>是一个<code>容器</code>，是各个组件的载体，可以通过继承<code>java.swing.JFrame</code>类创建一个窗口，在窗口中添加组件。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//构造方法</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">JFrame</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">JFrame</span><span class="params">(String title)</span></span>;</span><br><span class="line"><span class="comment">//语法格式</span></span><br><span class="line">JFrame f=<span class="keyword">new</span> JFrame(title);  <span class="comment">//f为JFrame类的对象</span></span><br><span class="line">Container c=f.getContentPane(); <span class="comment">//c为Container类的对象，可以使用JFrame对象调用getContentPane()方法获取。</span></span><br><span class="line"><span class="comment">//调用getContentPane()方法将窗体转为容器，然后在容器里添加组件。</span></span><br><span class="line">c.add(<span class="keyword">new</span> JButton(<span class="string">&quot;按钮&quot;</span>));</span><br><span class="line"><span class="comment">//remove()方法将组件从容器里删除</span></span><br><span class="line">c.remove(<span class="keyword">new</span> JButton(<span class="string">&quot;按钮&quot;</span>));</span><br></pre></td></tr></table></figure><p><code>继承JFrame实现:</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Blog_02;  </span><br><span class="line"><span class="keyword">import</span> java.awt.*;    <span class="comment">//导入awt包</span></span><br><span class="line"><span class="keyword">import</span> javax.swing.*; <span class="comment">//导入swing包</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">blog_02_05</span> <span class="keyword">extends</span> <span class="title">JFrame</span></span>&#123;  <span class="comment">//定义一个类继承JFrame</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">CreateJFrame</span><span class="params">(String title)</span> </span>&#123; <span class="comment">//定义一个方法创建JFrame</span></span><br><span class="line">JFrame f=<span class="keyword">new</span> JFrame(title);    <span class="comment">//实例化一个JFrame对象，并设置窗口名</span></span><br><span class="line">Container c=f.getContentPane();  <span class="comment">//获取容器</span></span><br><span class="line">JLabel l1=<span class="keyword">new</span> JLabel(<span class="string">&quot;这是一个JFrame窗体&quot;</span>); <span class="comment">//标签</span></span><br><span class="line"><span class="comment">//使标签上的文字居中</span></span><br><span class="line">l1.setHorizontalAlignment(SwingConstants.CENTER);</span><br><span class="line">c.add(l1);</span><br><span class="line">c.setBackground(Color.white);</span><br><span class="line">f.setVisible(<span class="keyword">true</span>);</span><br><span class="line">f.setSize(<span class="number">400</span>,<span class="number">250</span>); <span class="comment">//setSize(int x,int y)</span></span><br><span class="line"><span class="comment">//设置窗体关闭方式</span></span><br><span class="line">f.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);</span><br><span class="line"><span class="comment">//设置窗口相对于指定组件的位置。 如果组件当前未显示或者 c 为 null，则此窗口将置于屏幕的中央。</span></span><br><span class="line">f.setLocationRelativeTo(<span class="keyword">null</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="keyword">new</span> blog_02_05().CreateJFrame(<span class="string">&quot;创建一个JFrame窗体&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/25/7a0309cfe31e440dcf68c2a567123149.png"><br>关于窗口关闭方式:<br>1.<code>DO_NOTHING</code>_ON_CLOSE：什么都不做就将窗口关闭。<br>2.<code>DISPOSE</code>_ON_CLOSE：代表任何注册监听程序对象后会自动隐藏并释放窗体。<br>3.<code>HIDE</code>_ON_CLOSE：表示隐藏窗口的默认窗口关闭。<br>4.<code>EXIT</code>_ON_CLOSE：退出应用程序默认窗口关闭。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">1.导入包:</span></span><br><span class="line"><span class="comment">import java.awt.*;</span></span><br><span class="line"><span class="comment">import javax.swing;</span></span><br><span class="line"><span class="comment">2.定义类，声明组件。</span></span><br><span class="line"><span class="comment">3.构造方法中new所有组件。</span></span><br><span class="line"><span class="comment">4.主方法main()中，new 构造方法。</span></span><br><span class="line"><span class="comment">5,JFrame为容器，JPanel为面板，组件加到面板，面板再加到容器上。</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">package</span> Blog_02;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 三个JPanel分别对应三行，即用户名、密码、按钮三行，任何网格布局3行1列布局</span></span><br><span class="line"><span class="comment"> * */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">blog_02_06</span> </span>&#123;</span><br><span class="line">JFrame f;</span><br><span class="line">JLabel l1,l2;</span><br><span class="line">JPanel p1,p2,p3;</span><br><span class="line">JButton b1,b2;</span><br><span class="line">JTextField t;</span><br><span class="line">JPasswordField pw;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">blog_02_06</span><span class="params">()</span> </span>&#123;</span><br><span class="line">f=<span class="keyword">new</span> JFrame(<span class="string">&quot;用户登录界面&quot;</span>);</span><br><span class="line">l1=<span class="keyword">new</span> JLabel(<span class="string">&quot;用户名&quot;</span>);</span><br><span class="line">l2=<span class="keyword">new</span> JLabel(<span class="string">&quot;密  码&quot;</span>);</span><br><span class="line">b1=<span class="keyword">new</span> JButton(<span class="string">&quot;登录&quot;</span>);</span><br><span class="line">b2=<span class="keyword">new</span> JButton(<span class="string">&quot;注册&quot;</span>);</span><br><span class="line">t=<span class="keyword">new</span> JTextField(<span class="number">10</span>);</span><br><span class="line">pw=<span class="keyword">new</span> JPasswordField(<span class="number">10</span>);</span><br><span class="line">p1=<span class="keyword">new</span> JPanel();</span><br><span class="line">p2=<span class="keyword">new</span> JPanel();</span><br><span class="line">p3=<span class="keyword">new</span> JPanel();</span><br><span class="line"><span class="comment">//设置按键文本颜色</span></span><br><span class="line">b1.setForeground(Color.BLUE);</span><br><span class="line">b2.setForeground(Color.red);</span><br><span class="line">b1.setBackground(Color.gray);</span><br><span class="line">b2.setBackground(Color.black);</span><br><span class="line"><span class="comment">//第一行</span></span><br><span class="line">p1.add(l1);</span><br><span class="line">p1.add(t);</span><br><span class="line">p1.setLayout(<span class="keyword">new</span> FlowLayout());</span><br><span class="line"><span class="comment">//第二行</span></span><br><span class="line">p2.add(l2);</span><br><span class="line">p2.add(pw);</span><br><span class="line">p2.setLayout(<span class="keyword">new</span> FlowLayout());</span><br><span class="line"><span class="comment">//第三行</span></span><br><span class="line">p3.add(b1);</span><br><span class="line">p3.add(b2);</span><br><span class="line">p3.setLayout(<span class="keyword">new</span> FlowLayout());</span><br><span class="line"><span class="comment">//加到容器</span></span><br><span class="line">f.add(p1);</span><br><span class="line">f.add(p2);</span><br><span class="line">f.add(p3);</span><br><span class="line">f.setLayout(<span class="keyword">new</span> GridLayout(<span class="number">3</span>,<span class="number">1</span>));<span class="comment">//设置网格布局</span></span><br><span class="line">f.setSize(<span class="number">230</span>,<span class="number">150</span>);</span><br><span class="line">f.setLocationRelativeTo(<span class="keyword">null</span>);</span><br><span class="line">f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class="line">f.setResizable(<span class="keyword">false</span>);<span class="comment">//窗口大小是否可变</span></span><br><span class="line">f.setVisible(<span class="keyword">true</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line"><span class="keyword">new</span> blog_02_06();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/25/9ee3ba3cd8b946c7cc1e2bba3680195e.png"></p><hr><p>JDialog窗体是Swing组件中的对话框，它继承了AWT组件中的<code>java.awt.Dialog</code>类。<br>JDialog窗体的功能是<code>从一个窗体中弹出另一个窗体</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;构造方法</span><br><span class="line">public JDialog();  &#x2F;&#x2F;没有标题和父窗口的对话框</span><br><span class="line">public JDialog(Frame f); &#x2F;&#x2F;创建一个指定父窗口的对话框</span><br><span class="line">public JDialog(Frame f,boolean model); &#x2F;&#x2F;创建一个指定类型的对话框，并指定父窗口</span><br><span class="line">public JDialog(Frame f,String title);  &#x2F;&#x2F;指定标题和父窗口</span><br><span class="line">public JDialog(Frame f,String title,boolean model); &#x2F;&#x2F;指定标题、窗体、模式的对话框。</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Blog_02;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.*;</span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyJDialog</span> <span class="keyword">extends</span> <span class="title">JDialog</span></span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">MyJDialog</span><span class="params">(MyFrame frame)</span> </span>&#123;</span><br><span class="line"><span class="comment">//实例化一个JDialog类对象，指定对话框的父窗体、标题和类型</span></span><br><span class="line"><span class="keyword">super</span>(frame,<span class="string">&quot;第一个JDialog窗体&quot;</span>,<span class="keyword">true</span>);</span><br><span class="line">Container c=getContentPane(); <span class="comment">//创建一个容器</span></span><br><span class="line">c.add(<span class="keyword">new</span> JLabel(<span class="string">&quot;这是一个对话框&quot;</span>));</span><br><span class="line">setBounds(<span class="number">120</span>,<span class="number">120</span>,<span class="number">100</span>,<span class="number">100</span>); <span class="comment">//设置对话框大小</span></span><br><span class="line">setLocationRelativeTo(<span class="keyword">null</span>); <span class="comment">//居中</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyFrame</span> <span class="keyword">extends</span> <span class="title">JFrame</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">MyFrame</span><span class="params">()</span> </span>&#123;</span><br><span class="line">Container c=getContentPane(); <span class="comment">//创建容器</span></span><br><span class="line">c.setLayout(<span class="keyword">null</span>);</span><br><span class="line">JLabel l1=<span class="keyword">new</span> JLabel(<span class="string">&quot;这是一个JFrame窗体&quot;</span>);</span><br><span class="line"><span class="comment">//标签居中</span></span><br><span class="line">l1.setHorizontalAlignment(SwingConstants.CENTER);</span><br><span class="line">c.add(l1);</span><br><span class="line">JButton b=<span class="keyword">new</span> JButton(<span class="string">&quot;弹出对话框&quot;</span>);</span><br><span class="line">b.setBounds(<span class="number">10</span>,<span class="number">10</span>,<span class="number">100</span>,<span class="number">21</span>);</span><br><span class="line">b.addActionListener(<span class="keyword">new</span> ActionListener() &#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line"><span class="keyword">new</span> MyJDialog(MyFrame.<span class="keyword">this</span>).setVisible(<span class="keyword">true</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line">c.add(b);</span><br><span class="line">setSize(<span class="number">200</span>,<span class="number">200</span>);</span><br><span class="line">setVisible(<span class="keyword">true</span>);</span><br><span class="line">setLocationRelativeTo(<span class="keyword">null</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line"><span class="keyword">new</span> MyFrame();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/25/4a41eaf54986fd823f9fa08a63af06a0.png"></p><h2 id="组件的使用"><a href="#组件的使用" class="headerlink" title="组件的使用"></a>组件的使用</h2><h3 id="JLabel标签"><a href="#JLabel标签" class="headerlink" title="JLabel标签"></a>JLabel标签</h3><p>标签由JLabel类定义，它的父类为JComponent类。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//构造方法</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">JLabel</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">JLabel</span><span class="params">(Icon icon)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">JLabel</span><span class="params">(Icon icon,<span class="keyword">int</span> aligment)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">JLabel</span><span class="params">(String text,<span class="keyword">int</span> aligment)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">JLabel</span><span class="params">(String text,Icon icon,<span class="keyword">int</span> aligment)</span></span>; <span class="comment">//带文本，带图标的JLabel对象，并设置标签内容的水平对齐方式。</span></span><br></pre></td></tr></table></figure><h3 id="图标的使用"><a href="#图标的使用" class="headerlink" title="图标的使用"></a>图标的使用</h3><p>Swing中图标可以放置在按钮、标签等组件上。<br>``java<br>ImageIcon img=new ImageIcon(“图片URL”);<br>JButton b=new JButton(img);</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">### 文本组件</span><br><span class="line">&#96;&#96;&#96;java</span><br><span class="line">JTextField t&#x3D;new JTextField(10); &#x2F;&#x2F;长度</span><br><span class="line">JTextArea a&#x3D;new JTextArea(5,5);&#x2F;&#x2F;5行5列</span><br><span class="line">JPasswordField &#x3D;p&#x3D;new JPasswordField();</span><br><span class="line">p.setEchoChar(&quot;%&quot;);&#x2F;&#x2F;设置输入密码显示的字符</span><br></pre></td></tr></table></figure><h3 id="按钮组件"><a href="#按钮组件" class="headerlink" title="按钮组件"></a>按钮组件</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">JFrame f=<span class="keyword">new</span> JFrame();</span><br><span class="line">JPanel p=<span class="keyword">new</span> JPanel();</span><br><span class="line"><span class="comment">//1.创建按钮组对象；</span></span><br><span class="line">ButtonGroup bg=<span class="keyword">new</span> ButtonGroup();</span><br><span class="line"><span class="comment">//2.创建若干单选按钮对象</span></span><br><span class="line">JRadioButton b1=<span class="keyword">new</span> JRadoButton(<span class="string">&quot;男&quot;</span>);</span><br><span class="line">JRadioButton b1=<span class="keyword">new</span> JRadoButton(<span class="string">&quot;女&quot;</span>);</span><br><span class="line"><span class="comment">//3.将单选按钮加到按钮组中</span></span><br><span class="line">bg.add(b1);</span><br><span class="line">bg.add(b2);</span><br><span class="line"><span class="comment">//4.将单选按钮加到容器中。</span></span><br><span class="line">p.add(b1);</span><br><span class="line">p.add(b2);</span><br><span class="line">f.add(p);</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Windos;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> 单选和复选按钮 </span>&#123;</span><br><span class="line">JFrame f;</span><br><span class="line">JLabel l,l1;</span><br><span class="line">JButton b1,b2;</span><br><span class="line">JPanel p1,p2,p3;</span><br><span class="line">JCheckBox fx1,fx2,fx3; <span class="comment">//复选按钮</span></span><br><span class="line"></span><br><span class="line">JRadioButton dx1,dx2;  <span class="comment">//单选按钮</span></span><br><span class="line"></span><br><span class="line">ButtonGroup bg;<span class="comment">//把单选按钮放进一个组里,默认功能是组里的按钮只能选一个</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> 单选和复选按钮() &#123;</span><br><span class="line">f=<span class="keyword">new</span> JFrame();</span><br><span class="line">p1=<span class="keyword">new</span> JPanel();</span><br><span class="line">p2=<span class="keyword">new</span> JPanel();</span><br><span class="line">p3=<span class="keyword">new</span> JPanel();</span><br><span class="line">l=<span class="keyword">new</span> JLabel(<span class="string">&quot;特长&quot;</span>);</span><br><span class="line">l1=<span class="keyword">new</span> JLabel(<span class="string">&quot;性别&quot;</span>);</span><br><span class="line"></span><br><span class="line">b1=<span class="keyword">new</span> JButton(<span class="string">&quot;注册&quot;</span>);</span><br><span class="line">b2=<span class="keyword">new</span> JButton(<span class="string">&quot;取消&quot;</span>);</span><br><span class="line"></span><br><span class="line">fx1=<span class="keyword">new</span> JCheckBox(<span class="string">&quot;音乐&quot;</span>);</span><br><span class="line">fx2=<span class="keyword">new</span> JCheckBox(<span class="string">&quot;体育&quot;</span>);</span><br><span class="line">fx3=<span class="keyword">new</span> JCheckBox(<span class="string">&quot;文艺&quot;</span>);</span><br><span class="line"></span><br><span class="line">dx1=<span class="keyword">new</span> JRadioButton(<span class="string">&quot;男&quot;</span>);</span><br><span class="line">dx2=<span class="keyword">new</span> JRadioButton(<span class="string">&quot;女&quot;</span>);</span><br><span class="line"><span class="comment">//按钮组 只能选一个勾选 必须填</span></span><br><span class="line">bg=<span class="keyword">new</span> ButtonGroup();</span><br><span class="line">bg.add(dx1);</span><br><span class="line">bg.add(dx2);</span><br><span class="line"><span class="comment">//</span></span><br><span class="line">p1.add(l);</span><br><span class="line">p1.add(fx1);</span><br><span class="line">p1.add(fx2);</span><br><span class="line">p1.add(fx3);</span><br><span class="line"></span><br><span class="line">p2.add(l1);</span><br><span class="line"><span class="comment">//还是一个一个加不能添加组</span></span><br><span class="line">p2.add(dx1);</span><br><span class="line">p2.add(dx2);</span><br><span class="line"></span><br><span class="line">p3.add(b1);</span><br><span class="line">p3.add(b2);</span><br><span class="line"></span><br><span class="line">f.add(p1);</span><br><span class="line">f.add(p2);</span><br><span class="line">f.add(p3);</span><br><span class="line"><span class="comment">//其余三个面板为流式布局</span></span><br><span class="line">f.setLayout(<span class="keyword">new</span> GridLayout(<span class="number">3</span>,<span class="number">1</span>)); <span class="comment">//网格布局</span></span><br><span class="line">f.setSize(<span class="number">240</span>,<span class="number">150</span>);</span><br><span class="line">f.setLocation(<span class="number">300</span>,<span class="number">280</span>);</span><br><span class="line">f.setResizable(<span class="keyword">false</span>);</span><br><span class="line">f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class="line">f.setLocationRelativeTo(<span class="keyword">null</span>);</span><br><span class="line">f.setVisible(<span class="keyword">true</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line"><span class="keyword">new</span> 单选和复选按钮();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/25/d5a8174eeeac14edb4e1a092aec300b3.png"></p><h3 id="下拉框、下拉列表列表和滚动条"><a href="#下拉框、下拉列表列表和滚动条" class="headerlink" title="下拉框、下拉列表列表和滚动条"></a>下拉框、下拉列表列表和滚动条</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//下拉框</span></span><br><span class="line"><span class="comment">/*getSelectedItem()的方法得到选择的值和一个getSelectedIndex()得到选择值的索引*/</span></span><br><span class="line">String str[]=&#123;<span class="string">&quot;北京&quot;</span>,<span class="string">&quot;天津&quot;</span>,<span class="string">&quot;上海&quot;</span>,<span class="string">&quot;长沙&quot;</span>&#125;;</span><br><span class="line">JComboBox xlk=<span class="keyword">new</span> JComboBox(str);</span><br><span class="line"></span><br><span class="line"><span class="comment">//列表</span></span><br><span class="line">JPanel p=<span class="keyword">new</span> JPanel();</span><br><span class="line">String xl[]= &#123;<span class="string">&quot;高中&quot;</span>,<span class="string">&quot;大专&quot;</span>,<span class="string">&quot;本科&quot;</span>,<span class="string">&quot;硕士&quot;</span>,<span class="string">&quot;博士&quot;</span>&#125;;</span><br><span class="line">JList lb=<span class="keyword">new</span> JList(xl);</span><br><span class="line">lb.setVisibleRowCount(<span class="number">3</span>);<span class="comment">//使其滚动  3表示默认显示几个</span></span><br><span class="line">JScrollPane gd=<span class="keyword">new</span> JScrollPane(lb);   <span class="comment">//列表加入滚动</span></span><br><span class="line">p.add(xlk);</span><br><span class="line">p.add(gd); <span class="comment">//面板是添加滚动条。</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Windos;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="comment">/*下拉</span></span><br><span class="line"><span class="comment"> * JComboBox   创建字符组</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * 滚动条</span></span><br><span class="line"><span class="comment"> * JList  创建字符串组放进去 调用 setVisibleRowCount(3)</span></span><br><span class="line"><span class="comment"> * JScrollPane 放JList</span></span><br><span class="line"><span class="comment"> * 添加滚动</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> 下拉列表和滚动条 </span>&#123;</span><br><span class="line">JFrame f;</span><br><span class="line">JPanel p1,p2;</span><br><span class="line">JLabel l1,l2;</span><br><span class="line"></span><br><span class="line">JComboBox xlk;  <span class="comment">//下拉框</span></span><br><span class="line"><span class="comment">/*getSelectedItem()的方法得到选择的值和一个getSelectedIndex()得到选择值的索引*/</span></span><br><span class="line"></span><br><span class="line">JList lb;   <span class="comment">//列表</span></span><br><span class="line"></span><br><span class="line">JScrollPane gd;  <span class="comment">//滚动条</span></span><br><span class="line"><span class="keyword">public</span> 下拉列表和滚动条() &#123;</span><br><span class="line">f=<span class="keyword">new</span> JFrame();</span><br><span class="line">p1=<span class="keyword">new</span> JPanel();</span><br><span class="line">p2=<span class="keyword">new</span> JPanel();</span><br><span class="line">l1=<span class="keyword">new</span> JLabel(<span class="string">&quot;籍贯&quot;</span>);</span><br><span class="line">l2=<span class="keyword">new</span> JLabel(<span class="string">&quot;学历&quot;</span>);</span><br><span class="line"></span><br><span class="line">String jg[]= &#123;<span class="string">&quot;北京&quot;</span>,<span class="string">&quot;天津&quot;</span>,<span class="string">&quot;长沙&quot;</span>,<span class="string">&quot;湖南&quot;</span>,<span class="string">&quot;安化&quot;</span>,<span class="string">&quot;梅城&quot;</span>&#125;;</span><br><span class="line">xlk=<span class="keyword">new</span> JComboBox(jg);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">String xl[]= &#123;<span class="string">&quot;高中&quot;</span>,<span class="string">&quot;大专&quot;</span>,<span class="string">&quot;本科&quot;</span>,<span class="string">&quot;硕士&quot;</span>,<span class="string">&quot;博士&quot;</span>&#125;;</span><br><span class="line">lb=<span class="keyword">new</span> JList(xl);</span><br><span class="line"></span><br><span class="line">lb.setVisibleRowCount(<span class="number">3</span>);<span class="comment">//使其滚动  3表示默认显示几个</span></span><br><span class="line">gd=<span class="keyword">new</span> JScrollPane(lb);   <span class="comment">//列表加入滚动</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">f.setLayout(<span class="keyword">new</span> GridLayout(<span class="number">2</span>,<span class="number">1</span>));</span><br><span class="line"></span><br><span class="line">p1.add(l1);</span><br><span class="line">p1.add(xlk);</span><br><span class="line">p2.add(l2);</span><br><span class="line">p2.add(gd);<span class="comment">//添加滚动条</span></span><br><span class="line">f.add(p1);</span><br><span class="line">f.add(p2);</span><br><span class="line"></span><br><span class="line">f.setTitle(<span class="string">&quot;用户调查&quot;</span>);</span><br><span class="line">f.setSize(<span class="number">200</span>,<span class="number">190</span>);</span><br><span class="line">f.setLocation(<span class="number">300</span>,<span class="number">200</span>);</span><br><span class="line">f.setResizable(<span class="keyword">false</span>);</span><br><span class="line">f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class="line">f.setVisible(<span class="keyword">true</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line"><span class="keyword">new</span> 下拉列表和滚动条();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/25/3922831dbe80fb1208cc7db445adb582.png"></p><h3 id="拆分窗口"><a href="#拆分窗口" class="headerlink" title="拆分窗口"></a>拆分窗口</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Windos;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="comment">//图片 Ctrl+C 复制 工程文件右击粘贴 可新建一个文件夹放图片</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> 拆分窗口 </span>&#123;</span><br><span class="line">JFrame f;</span><br><span class="line">JSplitPane cf; <span class="comment">//拆分成左右两个界面</span></span><br><span class="line">JList lb;</span><br><span class="line">JLabel l;</span><br><span class="line">String str[]= &#123;<span class="string">&quot;软件开发&quot;</span>,<span class="string">&quot;游戏开发&quot;</span>,<span class="string">&quot;平面设计&quot;</span>,<span class="string">&quot;动画制作&quot;</span>,<span class="string">&quot;室内设计&quot;</span>&#125;;</span><br><span class="line"><span class="keyword">public</span>  拆分窗口() &#123;</span><br><span class="line">f=<span class="keyword">new</span> JFrame();</span><br><span class="line"></span><br><span class="line">lb=<span class="keyword">new</span> JList(str);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">l=<span class="keyword">new</span> JLabel(<span class="keyword">new</span> ImageIcon(<span class="string">&quot;Image/雪花.jpg&quot;</span>)); <span class="comment">//放java工程路径</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">cf=<span class="keyword">new</span> JSplitPane(JSplitPane.HORIZONTAL_SPLIT,lb,l);<span class="comment">//左右拆分</span></span><br><span class="line"><span class="comment">//cf=new JSplitPane(JSplitPane.VERTICAL_SPLIT,lb,l);//上下拆分</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">cf.setOneTouchExpandable(<span class="keyword">true</span>); <span class="comment">//出现两个拉动箭头 可以覆盖或收缩掉一界面</span></span><br><span class="line"></span><br><span class="line">f.add(cf);</span><br><span class="line"></span><br><span class="line">f.setSize(<span class="number">640</span>,<span class="number">480</span>);</span><br><span class="line">f.setLocation(<span class="number">300</span>,<span class="number">280</span>);</span><br><span class="line">f.setResizable(<span class="keyword">false</span>);</span><br><span class="line">f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class="line">f.setVisible(<span class="keyword">true</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line">  <span class="keyword">new</span> 拆分窗口();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/25/f8ed91217debb2e4a113daefc8d04903.png"></p><h2 id="布局管理"><a href="#布局管理" class="headerlink" title="布局管理"></a>布局管理</h2><h3 id="绝对布局"><a href="#绝对布局" class="headerlink" title="绝对布局"></a>绝对布局</h3><p>绝对布局指硬性指定组件在容器中的位置和大小，可以使用绝对坐标的方式来指定组件的位置。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">使用步骤:</span></span><br><span class="line"><span class="comment">1.使用Container.setLayout(null)方法取消布局管理器。</span></span><br><span class="line"><span class="comment">2.使用Container.setBounds()方法设置每个组件的大小与位置。</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">package</span> Blog_02;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">blog_02_07</span> <span class="keyword">extends</span> <span class="title">JFrame</span></span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">blog_02_07</span><span class="params">()</span> </span>&#123;</span><br><span class="line">setTitle(<span class="string">&quot;绝对布局&quot;</span>);</span><br><span class="line">setLayout(<span class="keyword">null</span>);</span><br><span class="line">setBounds(<span class="number">0</span>,<span class="number">0</span>,<span class="number">200</span>,<span class="number">150</span>);</span><br><span class="line">Container c=getContentPane();</span><br><span class="line">JButton b1=<span class="keyword">new</span> JButton(<span class="string">&quot;按钮1&quot;</span>);</span><br><span class="line">JButton b2=<span class="keyword">new</span> JButton(<span class="string">&quot;按钮2&quot;</span>);</span><br><span class="line">b1.setBounds(<span class="number">10</span>,<span class="number">30</span>,<span class="number">80</span>,<span class="number">30</span>);</span><br><span class="line">b2.setBounds(<span class="number">60</span>,<span class="number">70</span>,<span class="number">100</span>,<span class="number">20</span>);</span><br><span class="line">c.add(b1);</span><br><span class="line">c.add(b2);</span><br><span class="line">setVisible(<span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line"><span class="keyword">new</span> blog_02_07();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/25/143377b7b2dc142b6cddbebffb2630c8.png"></p><h3 id="流动布局"><a href="#流动布局" class="headerlink" title="流动布局"></a>流动布局</h3><p>流动布局指组件像“流”一样从左到右摆放组件。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Windos;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FlowLayout_1</span> </span>&#123;</span><br><span class="line">JFrame f;</span><br><span class="line"></span><br><span class="line">JButton b[]; <span class="comment">//按钮数组</span></span><br><span class="line">String str[]= &#123;<span class="string">&quot;话梅&quot;</span>,<span class="string">&quot;果脯&quot;</span>,<span class="string">&quot;薯片&quot;</span>,<span class="string">&quot;饼干&quot;</span>,<span class="string">&quot;巧克力&quot;</span>,<span class="string">&quot;腰果&quot;</span>,<span class="string">&quot;锅巴&quot;</span>,<span class="string">&quot;开心果&quot;</span>&#125;; <span class="comment">//字符串数组</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">FlowLayout_1</span><span class="params">()</span> </span>&#123;</span><br><span class="line">f=<span class="keyword">new</span> JFrame(<span class="string">&quot;流动窗口&quot;</span>);</span><br><span class="line">b=<span class="keyword">new</span> JButton[str.length]; <span class="comment">//等价于 JButton b[]=new JButton[str.length]  相当于创建按键数组</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;str.length;i++) &#123;</span><br><span class="line">b[i]=<span class="keyword">new</span> JButton(str[i]); <span class="comment">//一个一个new</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//网格布局方式  java默认边界布局管理</span></span><br><span class="line">f.setLayout(<span class="keyword">new</span> FlowLayout());</span><br><span class="line"><span class="comment">//f.setLayout(new FlowLayout(FlowLayout.LEFT));//向左对齐</span></span><br><span class="line"><span class="comment">//f.setLayout(new FlowLayout(FlowLayout.RIGHT));//向右看齐</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;str.length;i++) &#123;</span><br><span class="line">f.add(b[i]);</span><br><span class="line">&#125;</span><br><span class="line">f.setSize(<span class="number">300</span>,<span class="number">150</span>);</span><br><span class="line">f.setLocation(<span class="number">200</span>,<span class="number">200</span>);</span><br><span class="line">f.setResizable(<span class="keyword">false</span>);<span class="comment">//不能最大化 拖动</span></span><br><span class="line">f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class="line">f.setVisible(<span class="keyword">true</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line"><span class="keyword">new</span> FlowLayout_1();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/25/91cc9c0cb639ebd1108108d89a2743e5.png"></p><h3 id="边界布局"><a href="#边界布局" class="headerlink" title="边界布局"></a>边界布局</h3><p>边界布局将容器划分东、南、西、北、中五个区域。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Windos;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BorderLayout_1</span> </span>&#123;</span><br><span class="line">JFrame f;</span><br><span class="line">JButton b,b1,b2,b3,b4;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">BorderLayout_1</span><span class="params">()</span> </span>&#123;</span><br><span class="line">f=<span class="keyword">new</span> JFrame(<span class="string">&quot;边界布局&quot;</span>);</span><br><span class="line">b=<span class="keyword">new</span> JButton(<span class="string">&quot;东方&quot;</span>);</span><br><span class="line">b1=<span class="keyword">new</span> JButton(<span class="string">&quot;西方&quot;</span>);</span><br><span class="line">b2=<span class="keyword">new</span> JButton(<span class="string">&quot;南方&quot;</span>);</span><br><span class="line">b3=<span class="keyword">new</span> JButton(<span class="string">&quot;北方&quot;</span>);</span><br><span class="line">b4=<span class="keyword">new</span> JButton(<span class="string">&quot;中方&quot;</span>);</span><br><span class="line"><span class="comment">//边界布局方式</span></span><br><span class="line">f.add(b,BorderLayout.EAST);</span><br><span class="line">f.add(b1,BorderLayout.WEST);</span><br><span class="line">f.add(b2,BorderLayout.SOUTH);</span><br><span class="line">f.add(b3,BorderLayout.NORTH);</span><br><span class="line">f.add(b4,BorderLayout.CENTER);</span><br><span class="line"><span class="comment">//如果不是5个按钮，则会以扩充中部去填补</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//使任务管理器中窗口也关闭 ，不占内存 很重要！！！！！</span></span><br><span class="line">f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<span class="comment">//使运行后的窗口不占内存  起关闭作用</span></span><br><span class="line"><span class="comment">///</span></span><br><span class="line"></span><br><span class="line">f.setSize(<span class="number">300</span>,<span class="number">400</span>);</span><br><span class="line">f.setLocation(<span class="number">200</span>,<span class="number">200</span>);</span><br><span class="line">f.setVisible(<span class="keyword">true</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line"><span class="keyword">new</span> BorderLayout_1();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/25/b1c0d8b1f554da1fc04211f71347eea4.png"></p><h3 id="网格布局"><a href="#网格布局" class="headerlink" title="网格布局"></a>网格布局</h3><p>网格布局将容器划分为网格，所有组件按行和列排列。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Windos;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GridLayout_1</span> </span>&#123;</span><br><span class="line">JFrame f;</span><br><span class="line">JButton b[];</span><br><span class="line">String str[]= &#123;<span class="string">&quot;话梅&quot;</span>,<span class="string">&quot;果脯&quot;</span>,<span class="string">&quot;薯片&quot;</span>,<span class="string">&quot;饼干&quot;</span>,<span class="string">&quot;巧克力&quot;</span>,<span class="string">&quot;腰果&quot;</span>,<span class="string">&quot;锅巴&quot;</span>,<span class="string">&quot;开心果&quot;</span>,<span class="string">&quot;蛋糕&quot;</span>&#125;; <span class="comment">//字符串数组</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">GridLayout_1</span><span class="params">()</span> </span>&#123;</span><br><span class="line">f=<span class="keyword">new</span> JFrame(<span class="string">&quot;网格布局&quot;</span>);</span><br><span class="line"></span><br><span class="line">b=<span class="keyword">new</span> JButton[str.length]; <span class="comment">//等价于JButton b[]=new JButton[大小]  创建数组</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;str.length;i++) &#123;</span><br><span class="line">b[i]=<span class="keyword">new</span> JButton(str[i]);  <span class="comment">//一个一个添加</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//网格布局格式</span></span><br><span class="line">f.setLayout(<span class="keyword">new</span> GridLayout(<span class="number">3</span>,<span class="number">3</span>,<span class="number">12</span>,<span class="number">13</span>)); <span class="comment">//(行，列，长高的像素空间)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;str.length;i++) &#123;</span><br><span class="line">f.add(b[i]);</span><br><span class="line">&#125;</span><br><span class="line">f.setSize(<span class="number">380</span>,<span class="number">320</span>);</span><br><span class="line">    f.setLocation(<span class="number">200</span>,<span class="number">200</span>);</span><br><span class="line">    </span><br><span class="line">    f.setResizable(<span class="keyword">false</span>);<span class="comment">//不能最大化 不能拉伸窗口 使其固定</span></span><br><span class="line">    </span><br><span class="line">    f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class="line">    f.setVisible(<span class="keyword">true</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String []args)</span> </span>&#123;</span><br><span class="line"><span class="keyword">new</span> GridLayout_1();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/25/8fd9c2b221ae6f0801a34bb6d43e119d.png"></p><h3 id="盒式布局"><a href="#盒式布局" class="headerlink" title="盒式布局"></a>盒式布局</h3><p>BoxLayout 可以把控件依次进行水平或者垂直排列布局。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">createHorizontalBox()：返回一个 Box 对象，它采用水平 BoxLayout，即 BoxLayout 沿着水平方向放置组件，让组件在容器内从左到右排列。</span><br><span class="line">createVerticalBox()：返回一个 Box 对象，它采用垂直 BoxLayout，即 BoxLayout 沿着垂直方向放置组件，让组件在容器内从上到下进行排列。</span><br><span class="line">````</span><br><span class="line">```java</span><br><span class="line"><span class="comment">//垂直盒子/水平盒子</span></span><br><span class="line"><span class="keyword">package</span> Swing_Layout;</span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BoxLayout_1</span> </span>&#123;</span><br><span class="line">JFrame f;</span><br><span class="line">JButton b1,b2,b3;</span><br><span class="line">Box box;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">BoxLayout_1</span><span class="params">()</span> </span>&#123;</span><br><span class="line">f=<span class="keyword">new</span> JFrame(<span class="string">&quot;盒式布局&quot;</span>);</span><br><span class="line">b1=<span class="keyword">new</span> JButton(<span class="string">&quot;按钮1&quot;</span>);</span><br><span class="line">b2=<span class="keyword">new</span> JButton(<span class="string">&quot;按钮2&quot;</span>);</span><br><span class="line">b3=<span class="keyword">new</span> JButton(<span class="string">&quot;按钮3&quot;</span>);</span><br><span class="line">box=Box.createVerticalBox();<span class="comment">//垂直盒子</span></span><br><span class="line"><span class="comment">//box=Box.createHorizontalBox()//水平盒子</span></span><br><span class="line">box.add(b1);</span><br><span class="line">box.add(Box.createGlue());</span><br><span class="line"><span class="comment">//box.add(Box.createVerticalStrut(10));</span></span><br><span class="line">box.add(b2);</span><br><span class="line">box.add(Box.createGlue());</span><br><span class="line">box.add(b3);</span><br><span class="line"></span><br><span class="line">f.add(box);</span><br><span class="line"><span class="comment">//f.pack();</span></span><br><span class="line">f.setSize(<span class="number">300</span>,<span class="number">400</span>);</span><br><span class="line">f.setLocationRelativeTo(<span class="keyword">null</span>);</span><br><span class="line">f.setVisible(<span class="keyword">true</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line"><span class="keyword">new</span> BoxLayout_1();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/25/5a7482a37413c82fc2ace16801d75511.png"><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/25/9df4f6c4f24517fb0023317a90010328.png"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//改变间隔</span></span><br><span class="line"><span class="keyword">package</span> Swing_Layout;</span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BoxLayout_3</span> </span>&#123;</span><br><span class="line"> JFrame f;</span><br><span class="line"> JButton b;</span><br><span class="line"> Box box;</span><br><span class="line"> String name[]= &#123;<span class="string">&quot;按钮1&quot;</span>,<span class="string">&quot;按钮2&quot;</span>,<span class="string">&quot;按钮3&quot;</span>&#125;;</span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="title">BoxLayout_3</span><span class="params">()</span> </span>&#123;</span><br><span class="line"> f=<span class="keyword">new</span> JFrame();</span><br><span class="line"> box=Box.createVerticalBox();</span><br><span class="line"> <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;name.length;i++) &#123;</span><br><span class="line"> b=<span class="keyword">new</span> JButton(name[i]);</span><br><span class="line"> <span class="keyword">if</span>(i==<span class="number">1</span>)</span><br><span class="line"> box.add(Box.createVerticalStrut(<span class="number">10</span>));</span><br><span class="line"> <span class="keyword">if</span>(i==<span class="number">2</span>)</span><br><span class="line"> box.add(Box.createVerticalStrut(<span class="number">20</span>));</span><br><span class="line"> box.add(b);</span><br><span class="line"> &#125;</span><br><span class="line"> f.add(box);</span><br><span class="line"> f.setSize(<span class="number">300</span>,<span class="number">400</span>);</span><br><span class="line"> f.setLocationRelativeTo(<span class="keyword">null</span>);</span><br><span class="line"> f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class="line"> f.setVisible(<span class="keyword">true</span>);</span><br><span class="line"> &#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line"><span class="keyword">new</span> BoxLayout_3();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/25/a635d72d75d4c2d0c61cab949c39312e.png"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Swing_Layout;</span><br><span class="line"><span class="keyword">import</span> java.awt.BorderLayout;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BoxLayout_2</span> </span>&#123;</span><br><span class="line">JFrame f;</span><br><span class="line">JTextField t;</span><br><span class="line">JTextArea jt;</span><br><span class="line">JLabel l1,l2;</span><br><span class="line">JButton b;</span><br><span class="line">JScrollPane gd;</span><br><span class="line">Box H1,H2,V1;</span><br><span class="line"><span class="comment">//水平 水平  垂直</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">BoxLayout_2</span><span class="params">()</span> </span>&#123;</span><br><span class="line">f=<span class="keyword">new</span> JFrame();</span><br><span class="line"></span><br><span class="line"><span class="comment">//主题</span></span><br><span class="line">l1=<span class="keyword">new</span> JLabel(<span class="string">&quot;主题:&quot;</span>);</span><br><span class="line">t=<span class="keyword">new</span> JTextField(<span class="number">10</span>);</span><br><span class="line">H1=Box.createHorizontalBox();<span class="comment">//水平盒子</span></span><br><span class="line">H1.add(Box.createHorizontalStrut(<span class="number">5</span>));<span class="comment">//离布局间距</span></span><br><span class="line">H1.add(l1);</span><br><span class="line">H1.add(Box.createHorizontalStrut(<span class="number">5</span>));<span class="comment">//水平间距</span></span><br><span class="line">H1.add(t);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//setAlignmentX()用于使用了BoxLayout.Y_AXIS时，将控件在X轴方向设置为左对齐、右对齐或居中对</span></span><br><span class="line"><span class="comment">//setAlignmentY()将控件在Y轴方向设置为顶对齐、底对齐或居中对齐</span></span><br><span class="line"><span class="comment">//内容</span></span><br><span class="line">l2=<span class="keyword">new</span> JLabel(<span class="string">&quot;内容:&quot;</span>);</span><br><span class="line">jt=<span class="keyword">new</span> JTextArea();</span><br><span class="line">gd=<span class="keyword">new</span> JScrollPane(jt);</span><br><span class="line">H2=Box.createHorizontalBox();<span class="comment">//水平</span></span><br><span class="line">H2.setAlignmentX(<span class="number">1</span>);  <span class="comment">//设置靠右对齐 X水平轴</span></span><br><span class="line">H2.add(Box.createHorizontalStrut(<span class="number">5</span>));<span class="comment">//边界间距</span></span><br><span class="line">l2.setAlignmentY(<span class="number">0</span>);<span class="comment">//设置标签垂直靠上对齐</span></span><br><span class="line">H2.add(l2);</span><br><span class="line">H2.add(Box.createHorizontalStrut(<span class="number">5</span>));<span class="comment">//间距</span></span><br><span class="line">gd.setAlignmentY(<span class="number">0</span>); <span class="comment">//文本域垂直靠上</span></span><br><span class="line">H2.add(gd);</span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//垂直</span></span><br><span class="line"><span class="comment">//H2和按键垂直</span></span><br><span class="line">V1=Box.createVerticalBox();</span><br><span class="line">V1.add(Box.createVerticalStrut(<span class="number">5</span>));<span class="comment">//和H1间距</span></span><br><span class="line">V1.add(H2);</span><br><span class="line"><span class="comment">//确定</span></span><br><span class="line">jt.setLineWrap(<span class="keyword">true</span>);</span><br><span class="line">gd.setViewportView(jt);</span><br><span class="line">V1.add(Box.createVerticalStrut(<span class="number">5</span>));</span><br><span class="line"></span><br><span class="line">b=<span class="keyword">new</span> JButton(<span class="string">&quot;确定&quot;</span>);</span><br><span class="line">b.setAlignmentX(<span class="number">1</span>);  <span class="comment">//水平靠右</span></span><br><span class="line">V1.add(b);</span><br><span class="line"></span><br><span class="line">f.add(H1,BorderLayout.NORTH);<span class="comment">//主题</span></span><br><span class="line">f.add(V1,BorderLayout.CENTER);<span class="comment">//垂直加中间</span></span><br><span class="line"></span><br><span class="line">f.setSize(<span class="number">400</span>,<span class="number">500</span>);</span><br><span class="line">f.setLocationRelativeTo(<span class="keyword">null</span>);</span><br><span class="line">f.setVisible(<span class="keyword">true</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line"><span class="keyword">new</span>  BoxLayout_2();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/25/4783a159c0548e8d5d9d29d6d4fecc67.png"></p><h3 id="卡片布局"><a href="#卡片布局" class="headerlink" title="卡片布局"></a>卡片布局</h3><p>卡片布局可以通过点击窗口中的按钮切换不同的面板。像卡片一样叠加，一张接着一张的显示</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Swing_Layout;</span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionListener;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CardLayout_1</span> </span>&#123;</span><br><span class="line"> JFrame f;</span><br><span class="line"> <span class="comment">//卡片布局面板</span></span><br><span class="line"> JPanel cp;</span><br><span class="line"> CardLayout c;</span><br><span class="line"> JLabel l;</span><br><span class="line"> <span class="comment">//控制面板</span></span><br><span class="line"> JPanel bp; <span class="comment">//按键面板</span></span><br><span class="line"> JButton b; </span><br><span class="line"> </span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="title">CardLayout_1</span><span class="params">()</span> </span>&#123;</span><br><span class="line"> f=<span class="keyword">new</span> JFrame();</span><br><span class="line"> <span class="comment">//卡片布局设置</span></span><br><span class="line"> cp=<span class="keyword">new</span> JPanel();</span><br><span class="line"> c=<span class="keyword">new</span> CardLayout();</span><br><span class="line"> cp.setLayout(c);</span><br><span class="line"> f.add(cp,BorderLayout.CENTER);</span><br><span class="line"> <span class="comment">//标签</span></span><br><span class="line"> String lname[]= &#123;<span class="string">&quot;卡片A&quot;</span>,<span class="string">&quot;卡片B&quot;</span>,<span class="string">&quot;卡片C&quot;</span>&#125;;</span><br><span class="line"> </span><br><span class="line"> <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;lname.length;i++) &#123;</span><br><span class="line"> l=<span class="keyword">new</span> JLabel(lname[i]);</span><br><span class="line"> l.setHorizontalAlignment(SwingConstants.CENTER);</span><br><span class="line"> l.setFont(<span class="keyword">new</span> Font(<span class="string">&quot;楷书&quot;</span>,Font.BOLD,<span class="number">16</span>));</span><br><span class="line"> l.setForeground(<span class="keyword">new</span> Color(<span class="number">255</span>,<span class="number">0</span>,<span class="number">0</span>));</span><br><span class="line"><span class="comment">//像采用卡片布局的面板中加卡片</span></span><br><span class="line">cp.add(l,lname[i]);</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line">  bp=<span class="keyword">new</span> JPanel();</span><br><span class="line"> f.add(bp,BorderLayout.SOUTH);</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> String bname[]= &#123;<span class="string">&quot;第一个&quot;</span>,<span class="string">&quot;前一个&quot;</span>,<span class="string">&quot;卡片A&quot;</span>,<span class="string">&quot;卡片B&quot;</span>,<span class="string">&quot;卡片C&quot;</span>,<span class="string">&quot;后一个&quot;</span>,<span class="string">&quot;最后一个&quot;</span>&#125;;</span><br><span class="line"> <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;bname.length;i++) &#123;</span><br><span class="line"> JButton b=<span class="keyword">new</span> JButton(bname[i]);</span><br><span class="line"> bp.add(b);</span><br><span class="line"> b.addActionListener(<span class="keyword">new</span> ActionListener()&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line">String event=b.getText();</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(event.equals(<span class="string">&quot;第一个&quot;</span>)) &#123;</span><br><span class="line">c.first(cp);</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(event.equals(<span class="string">&quot;前一个&quot;</span>)) &#123;</span><br><span class="line">c.previous(cp);</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(event.equals(<span class="string">&quot;卡片A&quot;</span>)) &#123;</span><br><span class="line">c.show(cp,<span class="string">&quot;卡片A&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(event.equals(<span class="string">&quot;卡片B&quot;</span>)) &#123;</span><br><span class="line">c.show(cp,<span class="string">&quot;卡片B&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(event.equals(<span class="string">&quot;卡片C&quot;</span>)) &#123;</span><br><span class="line">c.show(cp,<span class="string">&quot;卡片C&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(event.equals(<span class="string">&quot;后一个&quot;</span>)) &#123;</span><br><span class="line">c.next(cp);</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(event.equals(<span class="string">&quot;最后一个&quot;</span>)) &#123;</span><br><span class="line">c.last(cp);</span><br><span class="line">&#125;</span><br><span class="line">&#125;&#125;);</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> f.pack();</span><br><span class="line"> f.setLocationRelativeTo(<span class="keyword">null</span>);</span><br><span class="line"> f.setVisible(<span class="keyword">true</span>);</span><br><span class="line"> &#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line"><span class="keyword">new</span> CardLayout_1();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">```java</span><br><span class="line"><span class="comment">//利用卡片布局实训相册</span></span><br><span class="line">![](https:<span class="comment">//cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/25/e348f8e551bc264d616c873b59e80976.png)</span></span><br><span class="line">```java</span><br><span class="line"><span class="keyword">package</span> Swing_Layout;</span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span>  java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionListener;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CardLayout_2</span> </span>&#123;</span><br><span class="line">JFrame f;</span><br><span class="line">JLabel l;</span><br><span class="line">JPanel cp,p;</span><br><span class="line">CardLayout c;</span><br><span class="line">ImageIcon img;</span><br><span class="line">String imgname[]= &#123;<span class="string">&quot;Image/1.jpg&quot;</span>,<span class="string">&quot;Image/2.jpg&quot;</span>,<span class="string">&quot;Image/3.jpg&quot;</span>,<span class="string">&quot;Image/4.jpg&quot;</span>&#125;;</span><br><span class="line">String bname[]= &#123;<span class="string">&quot;第一个&quot;</span>,<span class="string">&quot;前一个&quot;</span>,<span class="string">&quot;图片A&quot;</span>,<span class="string">&quot;图片B&quot;</span>,<span class="string">&quot;图片C&quot;</span>,<span class="string">&quot;图片D&quot;</span>,<span class="string">&quot;后一个&quot;</span>,<span class="string">&quot;最后一个&quot;</span>&#125;;</span><br><span class="line">String imgname2[]= &#123;<span class="string">&quot;图片A&quot;</span>,<span class="string">&quot;图片B&quot;</span>,<span class="string">&quot;图片C&quot;</span>,<span class="string">&quot;图片D&quot;</span>&#125;;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">CardLayout_2</span><span class="params">()</span> </span>&#123;</span><br><span class="line">f=<span class="keyword">new</span> JFrame();</span><br><span class="line">cp=<span class="keyword">new</span> JPanel();</span><br><span class="line">c=<span class="keyword">new</span> CardLayout();</span><br><span class="line">cp.setLayout(c);</span><br><span class="line">f.add(cp);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;imgname.length;i++) &#123;</span><br><span class="line">img=<span class="keyword">new</span> ImageIcon(imgname[i]);<span class="comment">//创建图片</span></span><br><span class="line">l=<span class="keyword">new</span> JLabel(img);<span class="comment">//创建标签</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//像采用卡片布局的面板中加卡片</span></span><br><span class="line"><span class="comment">//并为卡片设置名字</span></span><br><span class="line">cp.add(l,imgname2[i]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">p=<span class="keyword">new</span> JPanel();</span><br><span class="line">f.add(p,BorderLayout.SOUTH);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;bname.length;i++) &#123;</span><br><span class="line">JButton b=<span class="keyword">new</span> JButton(bname[i]);<span class="comment">//防止局部变量</span></span><br><span class="line">p.add(b);</span><br><span class="line">b.addActionListener(<span class="keyword">new</span> ActionListener() &#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line">String event=b.getText();<span class="comment">//按键值</span></span><br><span class="line"><span class="keyword">if</span>(event.equals(<span class="string">&quot;第一个&quot;</span>))&#123;</span><br><span class="line">c.first(cp);</span><br><span class="line">&#125;<span class="keyword">if</span>(event.equals(<span class="string">&quot;前一个&quot;</span>)) &#123;</span><br><span class="line">c.previous(cp);</span><br><span class="line">&#125;<span class="keyword">if</span>(event.equals(<span class="string">&quot;图片A&quot;</span>)) &#123;</span><br><span class="line">c.show(cp,<span class="string">&quot;图片A&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">if</span>(event.equals(<span class="string">&quot;图片B&quot;</span>)) &#123;</span><br><span class="line">c.show(cp, <span class="string">&quot;图片B&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">if</span>(event.equals(<span class="string">&quot;图片C&quot;</span>)) &#123;</span><br><span class="line">c.show(cp, <span class="string">&quot;图片C&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">if</span>(event.equals(<span class="string">&quot;图片D&quot;</span>)) &#123;</span><br><span class="line">c.show(cp, <span class="string">&quot;图片D&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">if</span>(event.equals(<span class="string">&quot;后一个&quot;</span>)) &#123;</span><br><span class="line">c.next(cp);</span><br><span class="line">&#125;<span class="keyword">if</span>(event.equals(<span class="string">&quot;最后一个&quot;</span>)) &#123;</span><br><span class="line">c.last(cp);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br><span class="line">f.pack();</span><br><span class="line">f.setLocationRelativeTo(<span class="keyword">null</span>);</span><br><span class="line">f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class="line">f.setVisible(<span class="keyword">true</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line"><span class="keyword">new</span> CardLayout_2();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/25/26bef4624ae4de3d1529e8584a3d70e7.png"></p><h1 id="事件监听"><a href="#事件监听" class="headerlink" title="事件监听"></a>事件监听</h1><h2 id="ActionListener"><a href="#ActionListener" class="headerlink" title="ActionListener"></a>ActionListener</h2><p>动作事件</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Swing_Exception;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionListener;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Exception_2</span> </span>&#123;</span><br><span class="line">JFrame f;</span><br><span class="line">JButton b;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Exception_2</span><span class="params">()</span> </span>&#123;</span><br><span class="line">f=<span class="keyword">new</span> JFrame(<span class="string">&quot;匿名内部类&quot;</span>);</span><br><span class="line">b=<span class="keyword">new</span> JButton(<span class="string">&quot;我是按钮，请点击&quot;</span>);</span><br><span class="line">b.addActionListener(<span class="keyword">new</span> ActionListener() &#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line">b.setText(<span class="string">&quot;我被点击了&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line">f.add(b);</span><br><span class="line"> f.pack();</span><br><span class="line"> f.setLocationRelativeTo(<span class="keyword">null</span>);</span><br><span class="line"> f.setVisible(<span class="keyword">true</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line"><span class="keyword">new</span> Exception_2();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/25/e4593828130f1643c3b92ecfabe3bbd6.png"><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/25/5965bf0bb48c3ca5290232e90fe5d34d.png"></p><h2 id="ItemListener"><a href="#ItemListener" class="headerlink" title="ItemListener"></a>ItemListener</h2><p>选择监听</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Swing_Exception;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ItemEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ItemListener;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ItemEvent_1</span> </span>&#123;</span><br><span class="line">JFrame f;</span><br><span class="line">JComboBox  xlk;<span class="comment">//下拉框</span></span><br><span class="line">JTextArea t;</span><br><span class="line">JScrollPane gd;</span><br><span class="line">String str[]= &#123;<span class="string">&quot;选项一&quot;</span>,<span class="string">&quot;选项二&quot;</span>,<span class="string">&quot;选项三&quot;</span>,<span class="string">&quot;选项四&quot;</span>,<span class="string">&quot;选项五&quot;</span>&#125;;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">ItemEvent_1</span><span class="params">()</span></span>&#123;</span><br><span class="line">f=<span class="keyword">new</span> JFrame();</span><br><span class="line">xlk=<span class="keyword">new</span> JComboBox(str);</span><br><span class="line">t=<span class="keyword">new</span> JTextArea(<span class="number">5</span>,<span class="number">3</span>);</span><br><span class="line">gd=<span class="keyword">new</span> JScrollPane(t);</span><br><span class="line">xlk.addItemListener(<span class="keyword">new</span> ItemListener() &#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">itemStateChanged</span><span class="params">(ItemEvent e)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line"><span class="keyword">int</span> stateChange=e.getStateChange();<span class="comment">//获得事件类型</span></span><br><span class="line">String item=e.getItem().toString();<span class="comment">//获得触发此次事件的选项</span></span><br><span class="line"><span class="keyword">if</span>(stateChange==ItemEvent.SELECTED) &#123;   <span class="comment">//查看是否由选中选项触发</span></span><br><span class="line">System.out.println(<span class="string">&quot;此次事件由  选中 选项 “&quot;</span>+item+<span class="string">&quot;”触发!&quot;</span>);</span><br><span class="line">t.append(<span class="string">&quot;此次事件由  选中 选项 “&quot;</span>+item+<span class="string">&quot;”触发!&quot;</span>+<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(stateChange==ItemEvent.DESELECTED) &#123;  <span class="comment">//查看是否由取消选中选项触发</span></span><br><span class="line">System.out.println(<span class="string">&quot;此次事件由  取消选中 选项 “&quot;</span>+item+<span class="string">&quot;”触发!&quot;</span>);</span><br><span class="line">t.append(<span class="string">&quot;此次事件由  取消选中 选项 “&quot;</span>+item+<span class="string">&quot;”触发!&quot;</span>+<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;  <span class="comment">//由其他原因触发</span></span><br><span class="line">System.out.println(<span class="string">&quot;此次事件由其他原因触发!&quot;</span>+<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">t.append(<span class="string">&quot;此次事件由其他原因触发!&quot;</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line">f.add(xlk,BorderLayout.NORTH);</span><br><span class="line">f.add(gd,BorderLayout.CENTER);</span><br><span class="line">f.setSize(<span class="number">300</span>,<span class="number">400</span>);</span><br><span class="line">f.setLocationRelativeTo(<span class="keyword">null</span>);</span><br><span class="line">f.setVisible(<span class="keyword">true</span>);</span><br><span class="line">&#125; </span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line"><span class="keyword">new</span> ItemEvent_1() ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/25/06c581b66a5f8d2d6d2382f8f0ebc607.png"></p><h2 id="KeyListener"><a href="#KeyListener" class="headerlink" title="KeyListener"></a>KeyListener</h2><p>键盘事件</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Swing_Exception;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.KeyEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.KeyListener;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">KeyColor_1</span> </span>&#123;</span><br><span class="line">JFrame f;</span><br><span class="line">JButton b1,b2,b3,b4,b5,b6,b7;</span><br><span class="line">JLabel l;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">KeyColor_1</span><span class="params">()</span> </span>&#123;</span><br><span class="line">f=<span class="keyword">new</span> JFrame(<span class="string">&quot;颜色&quot;</span>);</span><br><span class="line">b1=<span class="keyword">new</span> JButton(<span class="string">&quot;1&quot;</span>);</span><br><span class="line">b1.setBackground(Color.WHITE);</span><br><span class="line">b2=<span class="keyword">new</span> JButton(<span class="string">&quot;2&quot;</span>);</span><br><span class="line">b2.setBackground(Color.WHITE);</span><br><span class="line">b3=<span class="keyword">new</span> JButton(<span class="string">&quot;3&quot;</span>);</span><br><span class="line">b3.setBackground(Color.WHITE);</span><br><span class="line">b4=<span class="keyword">new</span> JButton(<span class="string">&quot;4&quot;</span>);</span><br><span class="line">b4.setBackground(Color.WHITE);</span><br><span class="line">b5=<span class="keyword">new</span> JButton(<span class="string">&quot;5&quot;</span>);</span><br><span class="line">b5.setBackground(Color.WHITE);</span><br><span class="line">b6=<span class="keyword">new</span> JButton(<span class="string">&quot;6&quot;</span>);</span><br><span class="line">b6.setBackground(Color.WHITE);</span><br><span class="line">b7=<span class="keyword">new</span> JButton(<span class="string">&quot;7&quot;</span>);</span><br><span class="line">b7.setBackground(Color.WHITE);</span><br><span class="line">l=<span class="keyword">new</span> JLabel(<span class="string">&quot;英文键盘模式&quot;</span>);</span><br><span class="line">f.setLayout(<span class="keyword">new</span> FlowLayout());</span><br><span class="line"><span class="comment">//f.setFocusable(true);//获得焦点</span></span><br><span class="line">b1.addKeyListener(<span class="keyword">new</span> KeyListener() &#123;  <span class="comment">//b1为焦点</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">keyTyped</span><span class="params">(KeyEvent e)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span> </span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">keyPressed</span><span class="params">(KeyEvent e)</span> </span>&#123;  <span class="comment">//按下</span></span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line"><span class="keyword">switch</span>((<span class="keyword">char</span>)e.getKeyCode()) &#123;  <span class="comment">//判断按下的键值</span></span><br><span class="line"><span class="keyword">case</span> KeyEvent.VK_1:</span><br><span class="line">b1.setBackground(Color.red);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> KeyEvent.VK_2: </span><br><span class="line">b2.setBackground(Color.orange);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> KeyEvent.VK_3:</span><br><span class="line">b3.setBackground(Color.YELLOW);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> KeyEvent.VK_4:</span><br><span class="line">b4.setBackground(Color.green);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> KeyEvent.VK_5:</span><br><span class="line">b5.setBackground(Color.cyan);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> KeyEvent.VK_6:</span><br><span class="line">b6.setBackground(Color.blue);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> KeyEvent.VK_7:</span><br><span class="line">b7.setBackground(<span class="keyword">new</span> Color(<span class="number">128</span>,<span class="number">0</span>,<span class="number">255</span>));</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">keyReleased</span><span class="params">(KeyEvent e)</span> </span>&#123;  <span class="comment">//释放</span></span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line"><span class="keyword">switch</span>((<span class="keyword">char</span>)e.getKeyCode()) &#123;</span><br><span class="line"><span class="keyword">case</span> KeyEvent.VK_1:</span><br><span class="line">b1.setBackground(Color.WHITE);  <span class="comment">//null为原来色体</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> KeyEvent.VK_2:</span><br><span class="line">b2.setBackground(Color.WHITE);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> KeyEvent.VK_3:</span><br><span class="line">b3.setBackground(Color.white);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> KeyEvent.VK_4:</span><br><span class="line">b4.setBackground(Color.white);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> KeyEvent.VK_5:</span><br><span class="line">b5.setBackground(Color.white);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> KeyEvent.VK_6:</span><br><span class="line">b6.setBackground(Color.white);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> KeyEvent.VK_7:</span><br><span class="line">b7.setBackground(Color.white);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line">f.add(b1);</span><br><span class="line">f.add(b2);</span><br><span class="line">f.add(b3);</span><br><span class="line">f.add(b4);</span><br><span class="line">f.add(b5);</span><br><span class="line">f.add(b6);</span><br><span class="line">f.add(b7);</span><br><span class="line">f.add(l,BorderLayout.CENTER);</span><br><span class="line">f.pack();</span><br><span class="line">f.setLocationRelativeTo(<span class="keyword">null</span>);</span><br><span class="line">f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class="line">f.setVisible(<span class="keyword">true</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line"><span class="keyword">new</span> KeyColor_1();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/25/8ec4a3c05780f2b3a09ca1202b1c90e7.png"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Swing_Exception;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.KeyAdapter;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.KeyEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.KeyListener;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">KeyListener_1</span>  </span>&#123;</span><br><span class="line">JFrame f;</span><br><span class="line">JLabel l;</span><br><span class="line">JTextArea t;</span><br><span class="line">JScrollPane gd;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">KeyListener_1</span><span class="params">()</span> </span>&#123;</span><br><span class="line">f=<span class="keyword">new</span> JFrame(<span class="string">&quot;键盘事件&quot;</span>);</span><br><span class="line">l=<span class="keyword">new</span> JLabel(<span class="string">&quot;请输入:&quot;</span>);</span><br><span class="line">t=<span class="keyword">new</span> JTextArea(<span class="number">5</span>,<span class="number">3</span>);</span><br><span class="line">t.addKeyListener(<span class="keyword">new</span> KeyListener() &#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">keyPressed</span><span class="params">(KeyEvent e)</span> </span>&#123;  <span class="comment">//键盘输入</span></span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line">String keytext=KeyEvent.getKeyText(e.getKeyCode());<span class="comment">//获得描述keycode的标签</span></span><br><span class="line"><span class="keyword">if</span>(e.isActionKey()) &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;你按下的是动作键“&quot;</span>+keytext+<span class="string">&quot;”&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;你按下的是非动作键“&quot;</span>+keytext+<span class="string">&quot;”&quot;</span>);</span><br><span class="line"><span class="comment">//获得与此事件中的键相关联的字符</span></span><br><span class="line"><span class="keyword">int</span> keycode=e.getKeyCode();</span><br><span class="line"><span class="keyword">switch</span>(keycode) &#123;</span><br><span class="line"><span class="keyword">case</span> KeyEvent.VK_CONTROL:  <span class="comment">//判断按下的是否为ctrl键</span></span><br><span class="line">System.out.println(<span class="string">&quot;,Ctrl键被按下&quot;</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> KeyEvent.VK_ALT:  <span class="comment">//判断是否为ait</span></span><br><span class="line">System.out.println(<span class="string">&quot;,AIt键被按下&quot;</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> KeyEvent.VK_SHIFT:</span><br><span class="line">System.out.println(<span class="string">&quot;,Shift键被按下&quot;</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">System.out.println();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">keyTyped</span><span class="params">(KeyEvent e)</span> </span>&#123; <span class="comment">//键盘按下</span></span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line"><span class="comment">//获得输入的字符</span></span><br><span class="line">System.out.println(<span class="string">&quot;此次输入的是“&quot;</span>+e.getKeyChar()+<span class="string">&quot;”&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">keyReleased</span><span class="params">(KeyEvent e)</span> </span>&#123; <span class="comment">//键盘松开</span></span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line"><span class="comment">//获得描述Keycode的标签</span></span><br><span class="line">String keyText=KeyEvent.getKeyText(e.getKeyCode());</span><br><span class="line">System.out.println(<span class="string">&quot;你释放的是“&quot;</span>+keyText+<span class="string">&quot;”键&quot;</span>);</span><br><span class="line">System.out.println();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line">t.setLineWrap(<span class="keyword">true</span>);</span><br><span class="line">gd=<span class="keyword">new</span> JScrollPane(t);</span><br><span class="line">f.add(l,BorderLayout.WEST);</span><br><span class="line">f.add(gd,BorderLayout.CENTER);</span><br><span class="line">f.setSize(<span class="number">400</span>,<span class="number">400</span>);</span><br><span class="line">f.setLocationRelativeTo(<span class="keyword">null</span>);</span><br><span class="line">f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class="line">f.setVisible(<span class="keyword">true</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line"><span class="keyword">new</span> KeyListener_1();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/25/7dc7641d0ed513e381d08bb4cfef807c.png"></p><h2 id="MouseListener"><a href="#MouseListener" class="headerlink" title="MouseListener"></a>MouseListener</h2><p>鼠标事件</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Swing_Exception;</span><br><span class="line"><span class="keyword">import</span> java.awt.Color;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.MouseEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.MouseListener;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MouseEvent_1</span> </span>&#123;</span><br><span class="line">JFrame f;</span><br><span class="line">JLabel l;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">MouseEvent_1</span><span class="params">()</span> </span>&#123;</span><br><span class="line">f=<span class="keyword">new</span> JFrame(<span class="string">&quot;鼠标事件&quot;</span>);</span><br><span class="line">l=<span class="keyword">new</span> JLabel(<span class="string">&quot;鼠标测试处&quot;</span>);</span><br><span class="line">l.addMouseListener(<span class="keyword">new</span> MouseListener() &#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span><span class="comment">//鼠标发送单机事件触发</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">mouseClicked</span><span class="params">(MouseEvent e)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line">System.out.println(<span class="string">&quot;单击了鼠标按键&quot;</span>);</span><br><span class="line"><span class="keyword">int</span> i=e.getButton();<span class="comment">//通过该值可以判断按下的是哪个键</span></span><br><span class="line"><span class="keyword">if</span>(i==MouseEvent.BUTTON1)</span><br><span class="line">System.out.println(<span class="string">&quot;按下的是鼠标左键&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(i==MouseEvent.BUTTON2)</span><br><span class="line">System.out.println(<span class="string">&quot;按下的是鼠标滚轮&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(i==MouseEvent.BUTTON3)</span><br><span class="line">System.out.println(<span class="string">&quot;按下的是鼠标右键&quot;</span>);</span><br><span class="line"><span class="keyword">int</span> Clickcount=e.getClickCount();<span class="comment">//点击次数</span></span><br><span class="line">System.out.println(<span class="string">&quot;点击次数为&quot;</span>+Clickcount+<span class="string">&quot;下&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span><span class="comment">//鼠标按键被按下时触发</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">mousePressed</span><span class="params">(MouseEvent e)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line">System.out.println(<span class="string">&quot;鼠标按键被按下&quot;</span>);</span><br><span class="line"><span class="keyword">int</span> i=e.getButton();<span class="comment">//通过该值可以判断按下的是哪个键</span></span><br><span class="line"><span class="keyword">if</span>(i==MouseEvent.BUTTON1)</span><br><span class="line">System.out.println(<span class="string">&quot;按下的是鼠标左键&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(i==MouseEvent.BUTTON2)</span><br><span class="line">System.out.println(<span class="string">&quot;按下的是鼠标滚轮&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(i==MouseEvent.BUTTON3)</span><br><span class="line">System.out.println(<span class="string">&quot;按下的是鼠标右键&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">mouseReleased</span><span class="params">(MouseEvent e)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line"><span class="comment">//按下后松下</span></span><br><span class="line">System.out.println(<span class="string">&quot;鼠标已释放&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span><span class="comment">//光标移入组件被触发</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">mouseEntered</span><span class="params">(MouseEvent e)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line">System.out.println(<span class="string">&quot;光标移入组件&quot;</span>);</span><br><span class="line">l.setForeground(Color.red);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">mouseExited</span><span class="params">(MouseEvent e)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line">System.out.println(<span class="string">&quot;光标移出组件&quot;</span>);</span><br><span class="line">l.setForeground(Color.black);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line">f.add(l);</span><br><span class="line">f.pack();</span><br><span class="line">f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class="line"> f.setLocationRelativeTo(<span class="keyword">null</span>);</span><br><span class="line"> f.setVisible(<span class="keyword">true</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line"><span class="keyword">new</span> MouseEvent_1();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/25/71c7048f849f53726c315faccec875d3.png"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Swing_Exception;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.MouseEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.MouseMotionListener;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyMouseMotionListener</span> </span>&#123;</span><br><span class="line">JFrame f;</span><br><span class="line">JPanel p;</span><br><span class="line">JButton b;</span><br><span class="line">JTextArea t;</span><br><span class="line">JScrollPane gd;</span><br><span class="line">JLabel l;</span><br><span class="line"><span class="keyword">int</span> count=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">MyMouseMotionListener</span><span class="params">()</span> </span>&#123;</span><br><span class="line">f=<span class="keyword">new</span> JFrame(<span class="string">&quot;MyMouseMotionListener&quot;</span>);</span><br><span class="line">l=<span class="keyword">new</span> JLabel(<span class="string">&quot;clik and drag the mouse&quot;</span>);</span><br><span class="line">t=<span class="keyword">new</span> JTextArea(<span class="number">10</span>,<span class="number">10</span>);</span><br><span class="line">t.addMouseMotionListener(<span class="keyword">new</span> MouseMotionListener() &#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">mouseDragged</span><span class="params">(MouseEvent e)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line">count++;</span><br><span class="line">t.append(count+<span class="string">&quot;The mouse is dragged:X=&quot;</span>+e.getX()+<span class="string">&quot;Y=&quot;</span>+e.getY()+<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">mouseMoved</span><span class="params">(MouseEvent e)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line">count++;</span><br><span class="line">t.append(count+<span class="string">&quot;The mouse is moving:X=&quot;</span>+e.getX()+<span class="string">&quot;Y=&quot;</span>+e.getY()+<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line">b=<span class="keyword">new</span> JButton(<span class="string">&quot;退出&quot;</span>);</span><br><span class="line">gd=<span class="keyword">new</span> JScrollPane(t);</span><br><span class="line">f.add(l,BorderLayout.NORTH);</span><br><span class="line">f.add(gd,BorderLayout.CENTER);</span><br><span class="line">f.add(b,BorderLayout.SOUTH);</span><br><span class="line">f.setSize(<span class="number">600</span>,<span class="number">600</span>);</span><br><span class="line">f.setLocationRelativeTo(<span class="keyword">null</span>);</span><br><span class="line">f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class="line">f.setVisible(<span class="keyword">true</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line"><span class="keyword">new</span>  MyMouseMotionListener();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/25/c0acc0f468ad183dc557eb980c691f22.png"></p><h2 id="WindowListener"><a href="#WindowListener" class="headerlink" title="WindowListener"></a>WindowListener</h2><p>窗口监听</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Swing_Exception;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.WindowEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.WindowFocusListener;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WindowFocusListener_1</span> </span>&#123;</span><br><span class="line">JFrame f;</span><br><span class="line">JPanel p;</span><br><span class="line">JTextArea t;</span><br><span class="line">JLabel l;</span><br><span class="line">JScrollPane gd;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">WindowFocusListener_1</span><span class="params">()</span></span>&#123;</span><br><span class="line">f=<span class="keyword">new</span> JFrame(<span class="string">&quot;窗口焦点测试&quot;</span>);</span><br><span class="line">p=<span class="keyword">new</span> JPanel();</span><br><span class="line">t=<span class="keyword">new</span> JTextArea(<span class="number">5</span>,<span class="number">3</span>);</span><br><span class="line">gd=<span class="keyword">new</span> JScrollPane(t);</span><br><span class="line">t.setLineWrap(<span class="keyword">true</span>);<span class="comment">//自动换行</span></span><br><span class="line">l=<span class="keyword">new</span> JLabel(<span class="string">&quot;测试区域&quot;</span>);</span><br><span class="line">l.setFont(<span class="keyword">new</span> Font(<span class="string">&quot;宋体&quot;</span>,Font.BOLD,<span class="number">50</span>));</span><br><span class="line">f.addWindowFocusListener(<span class="keyword">new</span> WindowFocusListener() &#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">windowGainedFocus</span><span class="params">(WindowEvent e)</span> </span>&#123;<span class="comment">//获得焦点</span></span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line">t.append(<span class="string">&quot;窗口获得焦点&quot;</span>+<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">System.out.println(<span class="string">&quot;\&quot;窗口获得焦点\&quot;&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">windowLostFocus</span><span class="params">(WindowEvent e)</span> </span>&#123; <span class="comment">//失去焦点</span></span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line">t.append(<span class="string">&quot;窗口失去焦点&quot;</span>+<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">System.out.println(<span class="string">&quot;\&quot;窗口失去焦点\&quot;&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line">p.add(l);</span><br><span class="line">f.add(p,BorderLayout.CENTER);</span><br><span class="line">f.add(gd,BorderLayout.SOUTH);</span><br><span class="line">f.setSize(<span class="number">400</span>,<span class="number">300</span>);</span><br><span class="line">f.setLocationRelativeTo(<span class="keyword">null</span>);</span><br><span class="line">f.setVisible(<span class="keyword">true</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line"><span class="keyword">new</span> WindowFocusListener_1();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/25/85873dfabb0f1fc5f7671bf7c8a35632.png"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Swing_Exception;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.WindowEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.WindowListener;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WindowListener_1</span> </span>&#123;</span><br><span class="line">JFrame f;</span><br><span class="line">JLabel l;</span><br><span class="line">JTextArea t;</span><br><span class="line">JScrollPane gd;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">WindowListener_1</span><span class="params">()</span> </span>&#123;</span><br><span class="line">f=<span class="keyword">new</span> JFrame(<span class="string">&quot;窗口事件&quot;</span>);</span><br><span class="line">l=<span class="keyword">new</span> JLabel(<span class="string">&quot;显示&quot;</span>);</span><br><span class="line">t=<span class="keyword">new</span> JTextArea(<span class="number">5</span>,<span class="number">3</span>);</span><br><span class="line">t.setLineWrap(<span class="keyword">true</span>);</span><br><span class="line">gd=<span class="keyword">new</span> JScrollPane(t);</span><br><span class="line">f.add(l,BorderLayout.NORTH);</span><br><span class="line">f.add(gd,BorderLayout.CENTER);</span><br><span class="line">f.addWindowListener(<span class="keyword">new</span> WindowListener() &#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">windowOpened</span><span class="params">(WindowEvent e)</span> </span>&#123; <span class="comment">//窗口打开时触发</span></span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line">System.out.println(<span class="string">&quot;窗口被打开&quot;</span>);</span><br><span class="line">t.append(<span class="string">&quot;窗口被打开&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">windowClosing</span><span class="params">(WindowEvent e)</span> </span>&#123;  <span class="comment">//窗口将要关闭时触发</span></span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line">System.out.println(<span class="string">&quot;窗口将要被关闭&quot;</span>);</span><br><span class="line">t.append(<span class="string">&quot;窗口将要被关闭&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">windowClosed</span><span class="params">(WindowEvent e)</span> </span>&#123;  <span class="comment">//窗口已经被关闭时触发</span></span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line">System.out.println(<span class="string">&quot;窗口已经被关闭&quot;</span>);</span><br><span class="line">t.append(<span class="string">&quot;窗口已经被关闭&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">windowIconified</span><span class="params">(WindowEvent e)</span> </span>&#123;    <span class="comment">//窗口最小化时触发</span></span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line">System.out.println(<span class="string">&quot;窗口被最小化&quot;</span>);</span><br><span class="line">t.append(<span class="string">&quot;窗口已经被最小化&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">windowDeiconified</span><span class="params">(WindowEvent e)</span> </span>&#123;  <span class="comment">//窗口被非最小化时触发</span></span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line">System.out.println(<span class="string">&quot;窗口被非最小化&quot;</span>);</span><br><span class="line">t.append(<span class="string">&quot;窗口已经被非最小化&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">windowActivated</span><span class="params">(WindowEvent e)</span> </span>&#123;  <span class="comment">//窗口被激活时触发</span></span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line">System.out.println(<span class="string">&quot;窗口被激活&quot;</span>);</span><br><span class="line">t.append(<span class="string">&quot;窗口被激活&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">windowDeactivated</span><span class="params">(WindowEvent e)</span> </span>&#123;  <span class="comment">//窗口不再处于激活状态时触发</span></span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line">System.out.println(<span class="string">&quot;窗口不再处于激活状态&quot;</span>);</span><br><span class="line">t.append(<span class="string">&quot;窗口不再处于激活状态&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line">f.setSize(<span class="number">300</span>,<span class="number">400</span>);</span><br><span class="line">f.setLocationRelativeTo(<span class="keyword">null</span>);</span><br><span class="line">f.setVisible(<span class="keyword">true</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line"> <span class="keyword">new</span> WindowListener_1();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/25/43af51bffeff3e3788c87869823bb4fe.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.liaoxuefeng.com/wiki/1252599548343744&quot;&gt;Java基础回顾&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;</summary>
      
    
    
    
    <category term="后端" scheme="http://example.com/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
    <category term="Java基础" scheme="http://example.com/tags/Java%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>Hexo+GitHub搭建个人博客</title>
    <link href="http://example.com/2020/11/14/Hexo+GitHub%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>http://example.com/2020/11/14/Hexo+GitHub%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</id>
    <published>2020-11-14T05:24:56.200Z</published>
    <updated>2020-11-23T05:17:50.052Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一、背景知识"><a href="#一、背景知识" class="headerlink" title="一、背景知识"></a>一、背景知识</h1><h2 id="什么是GitHub？"><a href="#什么是GitHub？" class="headerlink" title="什么是GitHub？"></a>什么是GitHub？</h2><blockquote><p><code>GitHub Page</code>s 是由 GitHub 官方提供的一种免费的<code>静态站点托管服务</code>，让我们可以在 GitHub 仓库里托管和发布自己的静态网站页面。<br><a href="https://docs.github.com/en/free-pro-team@latest/github/working-with-github-pages/about-github-pages">About GitHub Pages</a></p></blockquote><h2 id="什么是Hexo？"><a href="#什么是Hexo？" class="headerlink" title="什么是Hexo？"></a>什么是Hexo？</h2><blockquote><p><code>Hexo</code> 是一个快速、简洁且高效的<code>静态博客框架</code>，它基于 Node.js 运行，可以将我们撰写的 Markdown 文档解析渲染成静态的 HTML 网页。<br><a href="https://hexo.io/zh-cn/">Hexo官网</a><br><a href="http://coderunthings.com/2017/08/20/howhexoworks/?utm_source=qq&utm_medium=social&utm_oi=619975022605897728">Hexo工作原理</a></p></blockquote><h2 id="什么是Git"><a href="#什么是Git" class="headerlink" title="什么是Git?"></a>什么是Git?</h2><blockquote><p>GIT(<code>分布式版本控制系统</code>),git支持分布式部署，可以有效、高速的处理从很小到非常大的项目版本管理。分布式相比于集中式的最大区别在于开发者可以提交到本地，每个开发者通过克隆（git clone），在本地机器上拷贝一个完整的Git仓库。<br><a href="https://www.liaoxuefeng.com/wiki/896043488029600/896067008724000">Git教程</a></p></blockquote><h2 id="什么是Node-js"><a href="#什么是Node-js" class="headerlink" title="什么是Node.js"></a>什么是Node.js</h2><blockquote><p>Node.js就是一个用于创建服务器端应用程序的<code>运行系统</code>，它可以轻松构建网络或其他事件驱动的应用程序服务器。</p></blockquote><h2 id="Hexo-GitHub文章发布原理"><a href="#Hexo-GitHub文章发布原理" class="headerlink" title="Hexo+GitHub文章发布原理"></a>Hexo+GitHub文章发布原理</h2><blockquote><p>在本地撰写 Markdown 格式文章后，通过 Hexo 解析文档，渲染生成具有主题样式的 HTML 静态网页，再推送到 GitHub 上完成博文的发布。</p></blockquote><h2 id="SSH运行原理及应用"><a href="#SSH运行原理及应用" class="headerlink" title="SSH运行原理及应用"></a>SSH运行原理及应用</h2><blockquote><p>需要使用SSH提供的公钥，可以省去hexo d命令时的密码登录.<br><a href="https://blog.csdn.net/qq_35246620/article/details/54317740?utm_source=qq&utm_medium=social&utm_oi=619975022605897728">SSH运行原理及应用</a></p></blockquote><h2 id="Markdown标记语言"><a href="#Markdown标记语言" class="headerlink" title="Markdown标记语言"></a>Markdown标记语言</h2><blockquote><p>Markdown 是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档。文档后缀为 .md, .markdown。<br><a href="https://www.runoob.com/markdown/md-tutorial.html">Markdown API</a><br><a href="https://blog.csdn.net/witnessai1/article/details/52551362?utm_source=app">Markdown语法手册</a></p></blockquote><hr><h1 id="二、环境搭建"><a href="#二、环境搭建" class="headerlink" title="二、环境搭建"></a>二、环境搭建</h1><h2 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h2><blockquote><p>Hexo 基于 Node.js，搭建过程中还需要使用 <code>npm（Node.js 已带） 和 git</code>，因此先搭建本地操作环境，安装 Node.js 和 Git。<br><a href="https://nodejs.org/zh-cn">Node.js下载网址</a><br><a href="https://blog.csdn.net/antma/article/details/86104068">Node.js安装教程</a></p></blockquote><hr><h2 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h2><blockquote><p><a href="https://git-scm.com/download/win">Git下载地址</a><br><a href="https://www.cnblogs.com/xueweisuoyong/p/11914045.html">Git安装及配置</a><br>安装完成后，在<code>博客文件</code>里右击-&gt;<code>Git Bash</code>(全程用Git Bash,git为linux命令)</p></blockquote><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">node</span> <span class="string">-v</span></span><br></pre></td></tr></table></figure><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">npm</span> <span class="string">-v</span></span><br></pre></td></tr></table></figure><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">git</span> <span class="string">--version</span></span><br></pre></td></tr></table></figure><p>回车，出现程序版本号即可。</p><blockquote><p>注意:如果出现<code>&quot;npm&quot;</code>不是内部指定，说明环境变量没配好,Node.js文件目录复制路径到Path中即可.</p></blockquote><hr><h1 id="三、安装Hexo"><a href="#三、安装Hexo" class="headerlink" title="三、安装Hexo"></a>三、安装Hexo</h1><blockquote><p>1.通过淘宝镜像安装博客框架<br>2.如果出现”cnpm”不是内部指定，说明环境变量没配好,根据提示目录复制路径到<code>Path</code>中即可.</p></blockquote><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">npm</span> <span class="string">install</span> <span class="string">-g</span> <span class="string">cnpm</span> <span class="string">--registry=https://registry.npm.taobao.org</span></span><br><span class="line"><span class="string">cnpm</span> <span class="string">-v</span></span><br></pre></td></tr></table></figure><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">cnpm</span> <span class="string">install</span> <span class="string">-g</span> <span class="string">hexo-cli</span></span><br><span class="line"><span class="string">hexo</span> <span class="string">-v</span></span><br></pre></td></tr></table></figure><h1 id="四、Hexo搭建"><a href="#四、Hexo搭建" class="headerlink" title="四、Hexo搭建"></a>四、Hexo搭建</h1><h2 id="常用cmd操作"><a href="#常用cmd操作" class="headerlink" title="常用cmd操作:"></a>常用cmd操作:</h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">返回根目录:cd/</span></span><br><span class="line"><span class="string">进入某目录:cd</span> <span class="string">目录名</span></span><br><span class="line"><span class="string">返回上一目录:cd</span> <span class="string">..</span></span><br><span class="line"><span class="string">查看文件目录:dir</span></span><br></pre></td></tr></table></figure><h2 id="创建文件夹"><a href="#创建文件夹" class="headerlink" title="创建文件夹"></a>创建文件夹</h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">mkdir</span> <span class="string">文件名</span></span><br></pre></td></tr></table></figure><h2 id="根据命令操作文件夹"><a href="#根据命令操作文件夹" class="headerlink" title="根据命令操作文件夹"></a>根据命令操作文件夹</h2><p>命令进入文件夹下</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">hexo</span> <span class="string">init</span> <span class="string">-----创建一个新的hexo项目放在所创建文件夹下</span></span><br></pre></td></tr></table></figure><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">hexo</span> <span class="string">new</span> <span class="string">xxx</span>  <span class="string">//</span> <span class="string">新建一篇标题为xxx的文章</span></span><br></pre></td></tr></table></figure><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">hexo</span> <span class="string">s(server)</span> <span class="string">-----为hexo在本地起一个http</span> <span class="string">server,</span> <span class="string">然后通过浏览器访问博客</span></span><br></pre></td></tr></table></figure><blockquote><p>文件名/source/_posts/xxxx.md 中修改博客，修改后操作</p></blockquote><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">hexo</span> <span class="string">clean</span> <span class="string">-----清除缓存</span></span><br><span class="line"><span class="string">hexo</span> <span class="string">g(generate)</span> <span class="string">----生成将要发布的博客网站包含html在内的静态资源</span></span><br><span class="line"><span class="string">hexo</span> <span class="string">s</span></span><br></pre></td></tr></table></figure><h1 id="五、部署到GitHub"><a href="#五、部署到GitHub" class="headerlink" title="五、部署到GitHub"></a>五、部署到GitHub</h1><h2 id="1-注册登录GuiHub"><a href="#1-注册登录GuiHub" class="headerlink" title="1.注册登录GuiHub"></a>1.注册登录GuiHub</h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">注意用户名与网址访问域名要`一致`</span></span><br></pre></td></tr></table></figure><h2 id="2-创建GuiHub库-new-repository"><a href="#2-创建GuiHub库-new-repository" class="headerlink" title="2.创建GuiHub库(new repository)"></a>2.创建GuiHub库(new repository)</h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">注意Repository</span> <span class="string">name：`用户名`.guihub.io</span> <span class="string">(格式不能变)</span></span><br></pre></td></tr></table></figure><h2 id="3-SSH登录GitHub远程主机"><a href="#3-SSH登录GitHub远程主机" class="headerlink" title="3.SSH登录GitHub远程主机"></a>3.SSH登录GitHub远程主机</h2><h3 id="生成，密匙"><a href="#生成，密匙" class="headerlink" title="生成，密匙"></a>生成，密匙</h3><blockquote><p>git上传文件到GitHub利用SSH登录远程主机：<br> 登录方式有两种：1.<code>口令登录</code> 2.<code>公钥登录</code>。<br> 区别:口令登录每次都要输入密码，公钥登录不需要输入密码.<br> 安装了 Git Bash，自带了 SSH。检验一下是否安装 SSH，我们在新建的文件夹中右键打开 Git Bash输入命令:</p></blockquote><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">git</span> <span class="string">config</span> <span class="string">--global</span> <span class="string">user.name</span> <span class="string">&quot;Gitub用户名&quot;</span></span><br><span class="line"><span class="string">git</span> <span class="string">config</span> <span class="string">--global</span> <span class="string">user.email</span> <span class="string">&quot;GitHub邮箱&quot;</span> </span><br></pre></td></tr></table></figure><p>然后检查SSH安装和生成密匙</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">ssh</span></span><br><span class="line"><span class="string">ssh-keygen</span> <span class="string">-t</span> <span class="string">rsa</span> <span class="string">-C</span> <span class="string">&quot;GitHub邮箱&quot;</span></span><br></pre></td></tr></table></figure><blockquote><p>敲四次回车就会生成两个文件，分别为秘钥 id_rsa 和公钥<code> id_rsa.pub.</code> （注意：git中的复制粘贴不是 Ctrl+C 和 Ctrl+V，而是 Ctrl+insert 和 Shift+insert.）文件的位置在 Git Bash 上面都有显示，默认生成在以下目录：</p></blockquote><ul><li>Linux 系统：~/.ssh</li><li>Mac 系统：~/.ssh</li><li>Windows 10 ：C:/Users/ASUS/.ssh</li></ul><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">Generating</span> <span class="string">public/private</span> <span class="string">rsa</span> <span class="string">key</span> <span class="string">pair.</span></span><br><span class="line"><span class="string">Enter</span> <span class="string">file</span> <span class="string">in</span> <span class="string">which</span> <span class="string">to</span> <span class="string">save</span> <span class="string">the</span> <span class="string">key</span> <span class="string">(/c/Users/you/.ssh/id_rsa):</span></span><br><span class="line"><span class="string">//到这里可以直接回车将密钥按默认文件进行存储</span></span><br></pre></td></tr></table></figure><p>然后<code>复制公钥 id_rsa.pub</code> 文件里的内容,或者通过命令查找</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">cd</span> <span class="string">~/.ssh</span> </span><br><span class="line"><span class="string">ls</span></span><br><span class="line"><span class="string">cat</span> <span class="string">id_rsa.pub</span></span><br></pre></td></tr></table></figure><h3 id="添加到Github"><a href="#添加到Github" class="headerlink" title="添加到Github"></a>添加到Github</h3><blockquote><p>进入GitHub主页，点击右上角。再点击setting-&gt;SSH and GPG keys-&gt;New SSH key-&gt;将复制的id_rsa.pub内容粘贴到key内点击Add SSH key</p></blockquote><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">验证:ssh</span> <span class="string">-T</span> <span class="string">git@github.com</span></span><br></pre></td></tr></table></figure><h2 id="4-安装GuiHub部署插件"><a href="#4-安装GuiHub部署插件" class="headerlink" title="4.安装GuiHub部署插件"></a>4.安装GuiHub部署插件</h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">cnpm</span> <span class="string">install</span> <span class="string">--save</span> <span class="string">hexo-deployer-git</span></span><br></pre></td></tr></table></figure><h2 id="5-设置-config-yml文件"><a href="#5-设置-config-yml文件" class="headerlink" title="5.设置_config.yml文件"></a>5.设置_config.yml文件</h2><p>   可以使用笔记本编辑，推荐使用<code>sublime  text</code></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">_config.yml文件修改(最下面):</span></span><br><span class="line"> <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line"> <span class="attr">repo:</span>  <span class="string">https://github.com/lzyblog/lzyblog.github.io</span> <span class="string">（仓库url）</span></span><br><span class="line"> <span class="attr">branch:</span> <span class="string">master</span> </span><br></pre></td></tr></table></figure><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">hexo</span> <span class="string">d</span> <span class="string">（部署到Github）</span></span><br></pre></td></tr></table></figure><h3 id="6-修改博客"><a href="#6-修改博客" class="headerlink" title="6.修改博客"></a>6.修改博客</h3><h4 id="博客目录构成介绍"><a href="#博客目录构成介绍" class="headerlink" title="博客目录构成介绍"></a>博客目录构成介绍</h4><p>打开文件夹,可以看到博客的目录结构如下：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="string">node_modules</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">public</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">scaffolds</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">source</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">_posts</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">about</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">archive</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">img</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">tags</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">themes</span></span><br><span class="line"><span class="string">node_modules是node.js各种库的目录，public是生成的网页文件目录，scaffolds里面就三个文件，存储着新文章和新页面的初始设置，source是我们最常用到的一个目录，里面存放着文章、各类页面、图像等文件，themes存放着主题文件，一般也用不到。</span></span><br><span class="line"></span><br><span class="line"><span class="string">我们平时写文章只需要关注source/_posts这个文件夹就行了。</span></span><br><span class="line"></span><br><span class="line"><span class="string">网站图片都保存在D:\study\program\blog\source\img目录下，可以修改成自己的图片。</span></span><br></pre></td></tr></table></figure><p>通过文件名\source_posts目录下<code>xxx.md</code>文件修改</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">hexo</span> <span class="string">clean</span></span><br><span class="line"><span class="string">hexo</span> <span class="string">s</span> <span class="string">（可在本地预览）</span> </span><br><span class="line"><span class="string">hexo</span> <span class="string">g</span>  <span class="string">(部署)</span></span><br><span class="line"><span class="string">hexo</span> <span class="string">d</span>   <span class="string">(提交Github)</span></span><br></pre></td></tr></table></figure><p>输入网址:仓库名.guihub.io<br>(如果发现<code>peployer不存在</code>,需要重新引入部署插件)：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">cnpm</span> <span class="string">install</span> <span class="string">--save</span> <span class="string">hexo-deployer-git</span></span><br></pre></td></tr></table></figure><hr><h1 id="六-修改主题"><a href="#六-修改主题" class="headerlink" title="六.修改主题"></a>六.修改主题</h1><p> <a href="https://hexo.io/themes/">登录Hexo网址</a></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">git</span> <span class="string">clone</span> <span class="string">`主题url`.git</span> <span class="string">themes/主题名</span></span><br><span class="line"><span class="string">然后_config.yml配置:theme:</span> <span class="string">主题名</span></span><br><span class="line"><span class="string">hexo</span> <span class="string">clean</span></span><br><span class="line"><span class="string">hexo</span> <span class="string">g</span></span><br><span class="line"><span class="string">hexo</span> <span class="string">s</span> <span class="string">(预览)</span></span><br><span class="line"><span class="string">hexo</span> <span class="string">d</span></span><br></pre></td></tr></table></figure><p><code>Hexo更改主题后启动服务器</code>，界面显如下字符:</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">extends</span> <span class="string">includes/layout.pug</span> <span class="string">block</span> <span class="string">content</span> <span class="string">include</span> <span class="string">includes/recent-posts.pug</span> <span class="string">include</span> <span class="string">includes/partial</span></span><br></pre></td></tr></table></figure><p><code>解决方案</code></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">npm</span> <span class="string">install</span> <span class="string">--save</span> <span class="string">hexo-renderer-jade</span> <span class="string">hexo-generator-feed</span> <span class="string">hexo-generator-sitemap</span> <span class="string">hexo-browsersync</span> <span class="string">hexo-generator-archive</span></span><br></pre></td></tr></table></figure><p><code>清除缓存</code></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">hexo</span> <span class="string">clean</span></span><br></pre></td></tr></table></figure><p><code>生成静态文件即可</code></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">hexo</span> <span class="string">g</span></span><br></pre></td></tr></table></figure><h1 id="七-主题优化"><a href="#七-主题优化" class="headerlink" title="七.主题优化"></a>七.主题优化</h1><p><a href="https://butterfly.js.org/posts/21cfbf15/">Butterfly官方文档</a></p><h3 id="添加标签、分类、关于页面"><a href="#添加标签、分类、关于页面" class="headerlink" title="添加标签、分类、关于页面"></a>添加标签、分类、关于页面</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">（创建页面）</span></span><br><span class="line"><span class="string">hexo</span> <span class="string">new</span> <span class="string">page</span> <span class="string">&quot;xxx页面名&quot;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/19/88c9b1c1c75ce31f1162ba5b86a70353.png"></p><h3 id="Hexo插件"><a href="#Hexo插件" class="headerlink" title="Hexo插件"></a>Hexo插件</h3><p>感谢：<a href="https://www.antmoe.com/posts/a811d614/index.html?utm_source=qq&utm_medium=social&utm_oi=619975022605897728#%E5%89%8D%E7%BD%AE%E8%AF%B4%E6%98%8E">小康博客</a><br><a href="https://easyhexo.com/0-Intro/">Hexo文档</a><br>感谢：<a href="https://blog.lete114.top/article/Butterfly-config.html#%E5%89%8D%E8%A8%80">Lete博客</a><br><a href="https://www.cnblogs.com/dldbk/p/13530468.html">颜色十六进制表</a><br>感谢：<a href="https://plushine.cn/54808.html#%E5%8D%9A%E5%AE%A2%E5%A4%87%E4%BB%BD">XJHui’s Blog</a></p><h3 id="github-jsDelivr搭建图床"><a href="#github-jsDelivr搭建图床" class="headerlink" title="github+jsDelivr搭建图床"></a>github+jsDelivr搭建图床</h3><p><a href="https://plushine.cn/38834.html#Demo">XJHui’s Blog</a><br>PicGo,Typora下载<br><a href="https://www.lanzous.com/b00zdvy5e">点击下载—密码:6kjr</a></p><h3 id="博客备份"><a href="#博客备份" class="headerlink" title="博客备份"></a>博客备份</h3><p>非常感谢博主<a href="https://plushine.cn/38834.html#Demo">XJHui’s Blog</a>提供的方法<br><a href="https://github.com/coneycode/hexo-git-backup">GitHub项目地址</a><br><a href="https://github.com/coneycode/hexo-git-backup/blob/master/README.md">官方文档</a></p><h4 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h4><p>在博客文件里右击-&gt;Git Bash</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">npm</span> <span class="string">install</span> <span class="string">hexo-git-backup</span> <span class="string">--save</span> </span><br></pre></td></tr></table></figure><blockquote><p>在GuiHub中新建仓库,例如Hexo_Backup，权限为private，分支为master<br>获取所建库 SSH<br>在Hexo配置文件中添加</p></blockquote><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">backup:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">    <span class="attr">repository:</span></span><br><span class="line">       <span class="attr">backup:</span> <span class="string">git@github.com:xingjiahui/Hexo-Backup.git,master(分支名,新库为main)</span></span><br></pre></td></tr></table></figure><p>然后</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">hexo</span> <span class="string">b(back)</span></span><br></pre></td></tr></table></figure><blockquote><p>每次更新博客后，都需要<code>hexo b</code><br>备份的用处:</p></blockquote><ul><li>当hexo g 报错没有头绪时，可以使用备份文件</li><li>当本地文件丢失时，可以使用备份文件</li><li>使用前提，配好环境(已下载<code>Node.js和Git</code>)</li></ul><h3 id="相关素材-图库"><a href="#相关素材-图库" class="headerlink" title="相关素材(图库)"></a>相关素材(图库)</h3><p>感谢：<a href="http://www.mackxin.com/">馨客栈</a></p><blockquote><p>图库：<a href="https://www.pexels.com/zh-cn/">pexels</a> and <a href="https://unsplash.com/">Unsplash</a></p></blockquote><h3 id="valine评论系统"><a href="#valine评论系统" class="headerlink" title="valine评论系统"></a>valine评论系统</h3><p><a href="https://lete114.now.sh/article/Valine-LeanCloud-Config.html#%E5%89%8D%E8%A8%80">Lete保姆级valine教程</a><br><a href="https://www.leancloud.cn/">leancloud管理评论</a><br><a href="https://valine.js.org/">Valine文档</a><br>进入leancloud网站注册，并创建应用，找到应用key<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@1086c981d4982e49807f906e95be603883cef644/2020/11/17/d6a49b1aa90d7450e26c5f426ec117c4.png" width="500px" height="300px"><br>复制<code>AppID</code>和<code>AppKey</code>,找到Hexo配置文件中valine配置即可</p><h4 id="自定义表情（基于valine）"><a href="#自定义表情（基于valine）" class="headerlink" title="自定义表情（基于valine）"></a>自定义表情（基于valine）</h4><p><a href="https://butterfly.js.org/posts/ceeb73f/#%E8%A9%95%E8%AB%96">Butterfly官方文档</a></p><blockquote><p>在博客文件名`source<code>\目录下创建_data文件夹,</code>_data<code>文件夹里面创建</code>valine.json`文件，输入以下格式</p></blockquote><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="attr">&quot;QQ1&quot;:</span> <span class="string">&quot;QQ/aini.gif&quot;</span>,</span><br><span class="line"><span class="attr">&quot;QQ2&quot;:</span> <span class="string">&quot;QQ/aixin.gif&quot;</span>,</span><br><span class="line"><span class="attr">&quot;QQ3&quot;:</span> <span class="string">&quot;QQ/aoman.gif&quot;</span>,</span><br><span class="line"><span class="attr">&quot;QQ4&quot;:</span> <span class="string">&quot;QQ/baiyan.gif&quot;</span>,</span><br><span class="line"><span class="attr">&quot;QQ5&quot;:</span> <span class="string">&quot;QQ/bangbangtang.gif&quot;</span>,</span><br><span class="line"><span class="attr">&quot;QQ6&quot;:</span> <span class="string">&quot;QQ/baojin.gif&quot;</span>,</span><br><span class="line"><span class="attr">&quot;QQ7&quot;:</span> <span class="string">&quot;QQ/baoquan.gif&quot;</span>,</span><br><span class="line"><span class="attr">&quot;QQ8&quot;:</span> <span class="string">&quot;QQ/bishi.gif&quot;</span>,</span><br><span class="line"><span class="attr">&quot;QQ9&quot;:</span> <span class="string">&quot;QQ/bizui.gif&quot;</span>,</span><br><span class="line">&#125;</span><br><span class="line"><span class="string">&gt;</span> <span class="string">然后在Hexo主文件下_config.yml里面找到`valine`下`emojiCDN:`</span> <span class="string">https://cdn.jsdelivr.net/gh/GamerNoTitle/ValineCDN@master/(填入官方文档给的地址)</span></span><br></pre></td></tr></table></figure><p><a href="https://github.com/GamerNoTitle/Valine-Magic">表情开源仓库</a></p><h4 id="代码高亮"><a href="#代码高亮" class="headerlink" title="代码高亮"></a>代码高亮</h4><p><a href="https://blog.csdn.net/shepherd_dirk/article/details/84646379">各语言名称</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">在&#96;&#96;&#96;后面加代码名称</span><br></pre></td></tr></table></figure><h4 id="音乐播放器"><a href="#音乐播放器" class="headerlink" title="音乐播放器"></a>音乐播放器</h4><p><a href="https://github.com/MoePlayer/hexo-tag-aplayer">GitHub项目地址</a><br><a href="https://github.com/MoePlayer/hexo-tag-aplayer/blob/master/docs/README-zh_cn.md">官方文档</a><br>感谢：<a href="https://plushine.cn/52527.html#%E5%89%8D%E8%A8%80">XJHui’s Blog</a></p><blockquote><p>放在音乐页面中</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-tag-aplayer(安装插件)</span><br></pre></td></tr></table></figure><p><a href="https://github.com/MoePlayer/hexo-tag-aplayer">插件文档</a></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">aplayer: true（在Font-Matter中）</span><br><span class="line">&#123;% meting &quot;2751269737&quot; &quot;netease&quot; &quot;playlist&quot; &quot;autoplay&quot; &quot;mutex:false&quot; &quot;listmaxheight:340px&quot; &quot;preload:none&quot; &quot;theme:#ad7a86&quot;%&#125;</span><br><span class="line">参数介绍：</span><br><span class="line"><span class="code">    &quot;narrow&quot;: false,// （可选）播放器袖珍风格</span></span><br><span class="line"><span class="code">    &quot;autoplay&quot;: true,// （可选) 自动播放，移动端浏览器暂时不支持此功能</span></span><br><span class="line"><span class="code">    &quot;mode&quot;: &quot;random&quot;,// （可选）曲目循环类型，有 &#x27;random&#x27;（随机播放）, &#x27;single&#x27; (单曲播放), &#x27;circulation&#x27; (循环播放), &#x27;order&#x27; (列表播放)， 默认：&#x27;circulation&#x27;</span></span><br><span class="line"><span class="code">    &quot;showlrc&quot;: 3,// （可选）歌词显示配置项，可选项有：1,2,3</span></span><br><span class="line"><span class="code">    &quot;mutex&quot;: true,// （可选）该选项开启时，如果同页面有其他 aplayer 播放，该播放器会暂停</span></span><br><span class="line"><span class="code">    &quot;theme&quot;: &quot;#e6d0b2&quot;,// （可选）播放器风格色彩设置，默认：#b7daff</span></span><br><span class="line"><span class="code">    &quot;preload&quot;: &quot;metadata&quot;,// （可选）音乐文件预载入模式，可选项： &#x27;none&#x27; &#x27;metadata&#x27; &#x27;auto&#x27;, 默认: &#x27;auto&#x27;</span></span><br><span class="line"><span class="code">    &quot;listmaxheight&quot;: &quot;513px&quot;,// (可选) 该播放列表的最大长度</span></span><br></pre></td></tr></table></figure><h3 id="CSS和JS引入方式"><a href="#CSS和JS引入方式" class="headerlink" title="CSS和JS引入方式"></a>CSS和JS引入方式</h3><p><a href="https://blog.lete114.top/article/Butterfly-config.html#%E5%89%8D%E8%A8%80">来源</a><br>在<code>主题文件</code>/themes/butterfly/source/找到css和js文件夹，css和js文件写在里面<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/18/20769c4cdc51d61d26f2f5fb2b6a2e68.png"><br>在<code>Hexo配置文件</code>中，找到inject下head(<code>引入css</code>)和bottom(<code>引入js</code>)<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/18/c0f6c14c4ab57267e08f43db3604362e.png"></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">head:</span></span><br><span class="line">     <span class="bullet">-</span> <span class="string">&lt;link</span> <span class="string">rel=&quot;stylesheet&quot;</span> <span class="string">href=&quot;/css/xxx.css&quot;&gt;</span></span><br><span class="line"><span class="attr">bottom:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;link</span> <span class="string">rel=&quot;stylesheet&quot;</span> <span class="string">href=&quot;https://cdn.jsdelivr.net/gh/GitHub用户名/GitHub用户名.github.io/css/Lete.css&quot;&gt;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;script</span> <span class="string">src=&quot;https://cdn.jsdelivr.net/gh/GitHub用户名/GitHub用户名.github.io/js/Lete.js&quot;&gt;&lt;/script&gt;</span></span><br><span class="line">    <span class="comment"># - &lt;script src=&quot;xxxx&quot;&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure><h3 id="使用阿里iconfont图标"><a href="#使用阿里iconfont图标" class="headerlink" title="使用阿里iconfont图标"></a>使用阿里iconfont图标</h3><p>感谢：<a href="https://www.antmoe.com/posts/80c43671/index.html">小康博客</a><br><a href="https://www.iconfont.cn/home/index?spm=a313x.7781069.1998910419.2">阿里云iconfont</a></p><h3 id="添加2D人物模型"><a href="#添加2D人物模型" class="headerlink" title="添加2D人物模型"></a>添加2D人物模型</h3><p>在博客文件夹下右击,Git Bash</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">npm</span> <span class="string">install</span> <span class="string">--save</span> <span class="string">hexo-helper-live2d</span></span><br></pre></td></tr></table></figure><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">npm</span> <span class="string">install</span> <span class="string">live2d-widget-model-hijiki(模型名)</span></span><br></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/wang_123_zy/article/details/87181892">模型名及样式</a></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">在根目录配置文件中添加如下代码：</span></span><br><span class="line"><span class="attr">live2d:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">scriptFrom:</span> <span class="string">local</span></span><br><span class="line">  <span class="attr">pluginRootPath:</span> <span class="string">live2dw/</span></span><br><span class="line">  <span class="attr">pluginJsPath:</span> <span class="string">lib/</span></span><br><span class="line">  <span class="attr">pluginModelPath:</span> <span class="string">assets/</span></span><br><span class="line">  <span class="attr">tagMode:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">log:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">model:</span></span><br><span class="line">    <span class="attr">use:</span> <span class="string">live2d-widget-model-hijiki(模型名)</span></span><br><span class="line">  <span class="attr">display:</span></span><br><span class="line">    <span class="attr">position:</span> <span class="string">right</span></span><br><span class="line">    <span class="attr">width:</span> <span class="number">150</span></span><br><span class="line">    <span class="attr">height:</span> <span class="number">300</span></span><br><span class="line">  <span class="attr">mobile:</span></span><br><span class="line">    <span class="attr">show:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">react:</span></span><br><span class="line">    <span class="attr">opacity:</span> <span class="number">0.7</span></span><br></pre></td></tr></table></figure><h3 id="页脚添加博客运行时间"><a href="#页脚添加博客运行时间" class="headerlink" title="页脚添加博客运行时间"></a>页脚添加博客运行时间</h3><p>来源：<a href="https://blog.hclonely.com/posts/57bd67ce/">HCLonely Blog</a></p><blockquote><p>在博客根目录/themes/Butterfly/layout/includes/<code>footer.pug</code>文件，在最后span=theme.ICP.text下一行添加以下内容：</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#running-time</span><br><span class="line">    script.setInterval(()&#x3D;&gt;&#123;let create_time&#x3D;Math.round(new Date(&#39;2020-01-03 00:00:00&#39;).getTime()&#x2F;1000);let timestamp&#x3D;Math.round((new Date().getTime()+8*60*60*1000)&#x2F;1000);let second&#x3D;timestamp-create_time;let time&#x3D;new Array(0,0,0,0,0);if(second&gt;&#x3D;365*24*3600)&#123;time[0]&#x3D;parseInt(second&#x2F;(365*24*3600));second%&#x3D;365*24*3600;&#125;if(second&gt;&#x3D;24*3600)&#123;time[1]&#x3D;parseInt(second&#x2F;(24*3600));second%&#x3D;24*3600;&#125;if(second&gt;&#x3D;3600)&#123;time[2]&#x3D;parseInt(second&#x2F;3600);second%&#x3D;3600;&#125;if(second&gt;&#x3D;60)&#123;time[3]&#x3D;parseInt(second&#x2F;60);second%&#x3D;60;&#125;if(second&gt;0)&#123;time[4]&#x3D;second;&#125;currentTimeHtml&#x3D;&#39;本站已安全运行 &#39;+time[0]+&#39; 年 &#39;+time[1]+&#39; 天 &#39;+time[2]+&#39; 时 &#39;+time[3]+&#39; 分 &#39;+time[4]+&#39; 秒&#39;;document.getElementById(&quot;running-time&quot;).innerHTML&#x3D;currentTimeHtml;&#125;,1000);</span><br></pre></td></tr></table></figure><blockquote><p>2020-01-03 00:00:00为<code>网站起始时间</code></p></blockquote><h3 id="添加友情链接"><a href="#添加友情链接" class="headerlink" title="添加友情链接"></a>添加友情链接</h3><p>感谢:<a href="https://blog.lete114.top/article/Butterfly-config-2.3.5.html#%E5%88%86%E7%B1%BB">Lete博主</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page link</span><br></pre></td></tr></table></figure><p>在<code>博客文件夹目录\source\link\index.md</code></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 友情链接</span><br><span class="line">date: 2020-06-03 17:53:02</span><br><span class="line">type: link</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p><code>博客文件夹\source\ </code>目录下新建<code>_data </code>文件夹，文件夹内新建 <code>link.yml</code></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">class:</span></span><br><span class="line">  <span class="attr">class_name:</span> <span class="string">友情链接</span></span><br><span class="line">  <span class="attr">class_desc:</span> <span class="string">描述</span></span><br><span class="line">  <span class="attr">link_list:</span></span><br><span class="line">    <span class="attr">1:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">名字</span></span><br><span class="line">      <span class="attr">link:</span> <span class="string">URL</span></span><br><span class="line">      <span class="attr">avatar:</span> <span class="string">图像URL</span></span><br><span class="line">      <span class="attr">descr:</span> <span class="string">描述</span></span><br><span class="line"><span class="attr">class2:</span></span><br><span class="line">   <span class="attr">class_name:</span> <span class="string">架构工具</span></span><br><span class="line">   <span class="attr">class_desc:</span> <span class="string">描述</span></span><br><span class="line">   <span class="attr">link_list:</span></span><br><span class="line">     <span class="attr">1:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">名字</span></span><br><span class="line">      <span class="attr">link:</span> <span class="string">URL</span></span><br><span class="line">      <span class="attr">avatar:</span> <span class="string">图像URL</span></span><br><span class="line">      <span class="attr">descr:</span> <span class="string">描述</span></span><br></pre></td></tr></table></figure><h3 id="添加留言板"><a href="#添加留言板" class="headerlink" title="添加留言板"></a>添加留言板</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page messageboard</span><br></pre></td></tr></table></figure><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 留言板</span><br><span class="line">date: 2020-06-10 10:25:42</span><br><span class="line">type: messageboard</span><br><span class="line">---</span><br><span class="line"><span class="section"># 有什么想和我说的吗？？</span></span><br></pre></td></tr></table></figure><h3 id="添加公告栏装饰"><a href="#添加公告栏装饰" class="headerlink" title="添加公告栏装饰"></a>添加公告栏装饰</h3><blockquote><p>在<code>Butterfly\_config.yml</code>配置文件中查找<code>card_announcement: </code>下的 <code>content: </code>后面添加（有文字直接在文字后加）</p></blockquote><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">card_announcement:</span> <span class="comment">#公告栏</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">content:</span> <span class="string">城市轮廓，你的孤独&lt;img</span> <span class="string">src=&quot;图片URL&quot;&gt;</span></span><br></pre></td></tr></table></figure><h3 id="添加本地搜索"><a href="#添加本地搜索" class="headerlink" title="添加本地搜索"></a>添加本地搜索</h3><p><a href="https://blog.lete114.top/article/eef7397d.html#%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E4%BF%AE%E6%94%B9">Lete搜索配置</a><br>主题配置文件中找到local_search</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">local_search:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">input_placeholder:</span> <span class="string">Search</span> <span class="string">for</span> <span class="string">Posts</span></span><br><span class="line">    <span class="attr">hits_empty:</span> <span class="string">&quot;We didn&#x27;t find any results for the search: $&#123;query&#125;&quot;</span> <span class="comment"># 如果没有查到内容相关内容显示</span></span><br></pre></td></tr></table></figure><p><code>安装插件</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-search --save</span><br></pre></td></tr></table></figure><blockquote><p>当文章过多 search.xml 文件大小会越来越大，会拖慢博客的加载速度<br>找到主题文件\source\js\local-search.js<br>修改<code> url: GLOBAL_CONFIG.root + path,</code> 为 url: “<a href="https://cdn.jsdelivr.net/gh/%60%E4%BD%A0GitHub%E7%9A%84%E7%94%A8%E6%88%B7%E5%90%8D/%E4%BD%A0GitHub%E7%9A%84%E7%94%A8%E6%88%B7%E5%90%8D%60.github.io/search.xml&quot;">https://cdn.jsdelivr.net/gh/`你GitHub的用户名/你GitHub的用户名`.github.io/search.xml&quot;</a>,</p></blockquote><h3 id="修改主题样式颜色"><a href="#修改主题样式颜色" class="headerlink" title="修改主题样式颜色"></a>修改主题样式颜色</h3><p>找到主题配置文件下<code>theme_color</code><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/19/70f357966459c14caa28a36e6d1a9462.png"></p><h3 id="添加页面及图标"><a href="#添加页面及图标" class="headerlink" title="添加页面及图标"></a>添加页面及图标</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page 页面名</span><br></pre></td></tr></table></figure><blockquote><p>主题配置文件中修改：格式为（ 名字: /类型/  || iconURL）<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/20/5440d7e98043788788eddb217f0b8cdc.png"><br>在所创文件下Font_Mater加type：类型名<br>打开<a href="https://fontawesome.com/">Font Awesome</a><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/20/3be5946c06432ec960f4e7aa7aa29db9.png"><br>复制class到主题配置文件中</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;一、背景知识&quot;&gt;&lt;a href=&quot;#一、背景知识&quot; class=&quot;headerlink&quot; title=&quot;一、背景知识&quot;&gt;&lt;/a&gt;一、背景知识&lt;/h1&gt;&lt;h2 id=&quot;什么是GitHub？&quot;&gt;&lt;a href=&quot;#什么是GitHub？&quot; class=&quot;headerli</summary>
      
    
    
    
    <category term="Hexo" scheme="http://example.com/categories/Hexo/"/>
    
    
    <category term="Hexo+GitHub" scheme="http://example.com/tags/Hexo-GitHub/"/>
    
  </entry>
  
</feed>
