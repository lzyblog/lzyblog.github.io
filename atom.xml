<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>小李博客</title>
  
  
  <link href="http://xiaoliblog.cn/atom.xml" rel="self"/>
  
  <link href="http://xiaoliblog.cn/"/>
  <updated>2021-01-18T13:06:48.293Z</updated>
  <id>http://xiaoliblog.cn/</id>
  
  <author>
    <name>小李博客</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>前端三剑客🔗文本样式</title>
    <link href="http://xiaoliblog.cn/2021/01/18/%E5%89%8D%E7%AB%AF/HTML+CSS/%E5%89%8D%E7%AB%AF%E4%B8%89%E5%89%91%E5%AE%A2_%E6%96%87%E6%9C%AC%E6%A0%B7%E5%BC%8F/"/>
    <id>http://xiaoliblog.cn/2021/01/18/%E5%89%8D%E7%AB%AF/HTML+CSS/%E5%89%8D%E7%AB%AF%E4%B8%89%E5%89%91%E5%AE%A2_%E6%96%87%E6%9C%AC%E6%A0%B7%E5%BC%8F/</id>
    <published>2021-01-18T13:05:38.155Z</published>
    <updated>2021-01-18T13:06:48.293Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.antmoe.com/posts/18185251/index.html">https://www.antmoe.com/posts/18185251/index.html</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.antmoe.com/posts/18185251/index.html&quot;&gt;https://www.antmoe.com/posts/18185251/index.html&lt;/a&gt;&lt;/p&gt;
</summary>
      
    
    
    
    <category term="Web前端" scheme="http://xiaoliblog.cn/categories/Web%E5%89%8D%E7%AB%AF/"/>
    
    <category term="HTML+CSS" scheme="http://xiaoliblog.cn/categories/Web%E5%89%8D%E7%AB%AF/HTML-CSS/"/>
    
    
    <category term="HTML+CSS" scheme="http://xiaoliblog.cn/tags/HTML-CSS/"/>
    
  </entry>
  
  <entry>
    <title>前端三剑客🔗颜色与单位</title>
    <link href="http://xiaoliblog.cn/2021/01/18/%E5%89%8D%E7%AB%AF/HTML+CSS/%E5%89%8D%E7%AB%AF%E4%B8%89%E5%89%91%E5%AE%A2_%E9%A2%9C%E8%89%B2%E4%B8%8E%E5%8D%95%E4%BD%8D/"/>
    <id>http://xiaoliblog.cn/2021/01/18/%E5%89%8D%E7%AB%AF/HTML+CSS/%E5%89%8D%E7%AB%AF%E4%B8%89%E5%89%91%E5%AE%A2_%E9%A2%9C%E8%89%B2%E4%B8%8E%E5%8D%95%E4%BD%8D/</id>
    <published>2021-01-18T12:20:46.662Z</published>
    <updated>2021-01-18T13:03:58.140Z</updated>
    
    <content type="html"><![CDATA[<h1 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h1><ul><li><strong>色调</strong>：很接近通俗意义上的颜色。<br>  图像的相对明暗程度，在彩色图像上表现为颜色（简单的理解为颜色）</li><li><strong>饱和度</strong>：是指颜色中灰色的含量。<br>  色彩的纯洁性（颜色中灰色的含量），也叫饱和度 / 彩度。</li><li><strong>亮度</strong>：是指颜色中黑色的含量。<br>  发光体的光源面积之比（黑色的含量）</li><li><strong>对比度</strong>：前景色与背景色之间的差异。<br>  明暗区域最亮的白和最暗的黑之间不同亮度层级的测量，差异范围越大代表对比越大，差异范围越小代表对比越小。</li><li><strong>Web 安全色</strong>：不需要担心颜色在不同硬件环境、操作系统和浏览器之间的差异。<br>不必担心因不同硬件（浏览器）而造成的颜色不同。Web 安全色目前基本具有 216 种颜色，其中色彩为 210 种（开发时使用的颜色），非色彩为 6 种。<br>关于 Web 安全色的具体颜色以及值，可以参考<a href="https://www.bootcss.com/p/websafecolors/">https://www.bootcss.com/p/websafecolors/</a></li></ul><h1 id="前景色与背景色"><a href="#前景色与背景色" class="headerlink" title="前景色与背景色"></a>前景色与背景色</h1><p>CSS 中的前景色和背景色就是 <code>color</code> 和 <code>backgorund-color</code> 两个属性，其中 color 属性表示前景色，background-color 属性表示背景色。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.one</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">color</span><span class="selector-pseudo">:brown</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.two</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">background-color</span><span class="selector-pseudo">:chartreuse</span></span></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;one&quot;</span>&gt;</span>前景色是color属性<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;two&quot;</span>&gt;</span>背景色是background-color属性<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="颜色的表示"><a href="#颜色的表示" class="headerlink" title="颜色的表示"></a>颜色的表示</h1><ul><li><p><strong>色彩关键字</strong><br>色彩关键字是一个不区分大小写的标识符，其表示一个具体的颜色，例如 red 表示红色、blue 表示蓝色等。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.test</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>:blue;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><strong>十六进制表示</strong><br>十六进制表示一共有六位，每两位分别表示红、绿、蓝，取值范围为00~FF(0~255)，数值越大亮度和饱和度越高</p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@72e7845a5be14c873475701d561d85660acfed27/2021/01/18/1d711f2df4b6749ae01a3dab8b07f6be.png" width="70%" height="50%"></li></ul><ul><li><p><strong>RGB色彩模式</strong><br>RGB 是一个简称，全称为Red-Green-Blue，即 红 - 绿 - 蓝。RGB 色彩模式是工业界的一种颜色标准，是通过对红、绿、蓝三个颜色通道的变化以及它们相互之间的叠加来得到各式各样的颜色的。使用十进制的数字，用逗号隔开，分别表示红-绿-蓝三色，取值范围为00~FF(0~255)<br>以下三个表示同一个值</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#p1</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#FFCC33</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#p2</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#FC3</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#p3</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">255</span>, <span class="number">204</span>, <span class="number">51</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><strong>RGBA色彩模式</strong><br>RGBA相较于RGB多了一个alpha，即透明度(取值0-1)</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span>&#123;</span><br><span class="line"><span class="attribute">background-color</span>:<span class="built_in">rgba</span>(<span class="number">230</span>,<span class="number">53</span>,<span class="number">174</span>,<span class="number">0.4</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p><strong>HLS色彩模式</strong><br>HSL 是一个简称，全称为 <strong>Hue-Saturation-Lightness</strong>，即<strong>色调 - 饱和度 - 亮度</strong>。HSL 色彩模式是一种将 RGB 色彩模型中的点在圆柱坐标系中的表示法。<br>在 CSS 中使用 HSL 色彩模式是通过 hsl(H, S, L) 函数实现的，具体含义如下：</p></li><li><p><strong>H</strong> 表示色调，其值范围为 0 ~ 360 之间的一个角度(deg)</p></li><li><p><strong>S</strong>表示饱和度，其值范围为 0% ~ 100% 之间的百分值</p></li><li><p><strong>L</strong> 表示亮度，其值使用百分值表示。0% 表示黑色，50% 表示标准色，100% 表示白色。</p></li><li><p><strong>alpha</strong> 表示透明度，其值范围为 0% ~ 100% 之间的百分值</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">hsl</span>(<span class="number">130</span>, <span class="number">100%</span>, <span class="number">60%</span>,<span class="number">50%</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h1 id="透明度"><a href="#透明度" class="headerlink" title="透明度"></a>透明度</h1><p><code>opacity</code> 属性，介于 0~1 之间，如果大于 1 则当做 1。</p><ul><li><p>如果值为 0 或 0.0 则表示完全透明</p></li><li><p>如果值为 0.5 则表示半透明</p></li><li><p>如果值为 1 或 1.0 则表示不透明</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.light</span> &#123;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">0.2</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>RGB 模式增加了<code>rgba(R,G,B,A)</code>函数，其中 A 为 alpha 表示透明度。</p></li><li><p>HSL 模式增加了 <code>hsl(H,S,L,A)</code> 函数，其中 A 为 alpha 表示透明度。</p></li></ul><h1 id="CSS值与单位"><a href="#CSS值与单位" class="headerlink" title="CSS值与单位"></a>CSS值与单位</h1><p>在 CSS 中除了颜色值需要不同类型描述之外，比较常见的还有长度值也需要不同类型描述，例如 10px 或 50% 等。</p><ul><li><strong>绝对长度单位</strong><br>这种长度时固定的不变的，在 HTML 中常见的单位为像素（px）</li></ul><table><thead><tr><th align="center">单位</th><th align="center">名称</th><th align="center">等价换算</th></tr></thead><tbody><tr><td align="center">cm</td><td align="center">厘米</td><td align="center">1cm = 96px/2.54</td></tr><tr><td align="center">mm</td><td align="center">毫米</td><td align="center">1mm = 1/10th of 1cm</td></tr><tr><td align="center">Q</td><td align="center">四分之一毫米</td><td align="center">1Q = 1/40th of 1cm</td></tr><tr><td align="center">in</td><td align="center">英寸</td><td align="center">1in = 2.54cm = 96px</td></tr><tr><td align="center">pc</td><td align="center">十二点活字</td><td align="center">1pc = 1/16th of 1in</td></tr><tr><td align="center">pt</td><td align="center">点</td><td align="center">1pt = 1/72th of 1in</td></tr><tr><td align="center">px</td><td align="center">像素</td><td align="center">1px = 1/96th of 1in</td></tr></tbody></table><ul><li> <strong>相对长度单位</strong><br>相对于某个物体的长度。比如相对父级元素。使用相对长度单位相对绝对长度单位更适用于现在越发复杂的终端设备的屏幕输出。</li></ul><table><thead><tr><th align="center">单位</th><th align="center">相对于</th></tr></thead><tbody><tr><td align="center">em</td><td align="center">父元素的字体大小</td></tr><tr><td align="center">ex</td><td align="center">字符 “x” 的高度</td></tr><tr><td align="center">ch</td><td align="center">数字 “0” 的宽度</td></tr><tr><td align="center">rem</td><td align="center">根元素的字体大小</td></tr><tr><td align="center">lh</td><td align="center">元素的 line-height</td></tr><tr><td align="center">vw</td><td align="center">视窗宽度的 1%</td></tr><tr><td align="center">vh</td><td align="center">视窗高度的 1%</td></tr><tr><td align="center">vmin</td><td align="center">视窗较小尺寸的 1%</td></tr><tr><td align="center">vmax</td><td align="center">视图大尺寸的 1%</td></tr></tbody></table><h1 id="像素值-px"><a href="#像素值-px" class="headerlink" title="像素值(px)"></a>像素值(px)</h1><p><strong>像素</strong>的英文为 Pixel，简写为 px。<strong>像素</strong>是指在由一个数字序列表示的图像中的一个最小单位。简单来说，如果我们把一张图片放大数倍，会发现这些连续色调其实是由许多色彩相近的小方点所组成，而这些小方点就是构成影像的最小单元就是<strong>像素</strong></p><h1 id="百分比"><a href="#百分比" class="headerlink" title="百分比(%)"></a>百分比(%)</h1><p><strong>百分比（%）</strong> 总是将某个值作为参考，设置为这个参考值的百分比，例如 40%。在 CSS 中一般情况下，百分比（%）多是将当前 HTML 元素的父级元素作为参考值。例如如果一个父级元素拥有两个子级元素，一个子级元素的宽度为 40%，另一个子级元素的宽度为 80%，那么第二个子级元素的宽度就是第一个子级元素的宽度的 2 倍。如下示例代码所示</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>百分比<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">    <span class="selector-class">.parent</span> &#123;</span></span><br><span class="line">      width: 200px;</span><br><span class="line">      height: 100px;</span><br><span class="line">      border: 1px solid lightcoral;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">    <span class="selector-id">#child1</span> &#123;</span></span><br><span class="line">      width: 40%;</span><br><span class="line">      height: 50px;</span><br><span class="line">      background-color: limegreen;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">    <span class="selector-id">#child2</span> &#123;</span></span><br><span class="line">      width: 80%;</span><br><span class="line">      height: 50px;</span><br><span class="line">      background-color: lightslategray;</span><br><span class="line">    &#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;parent&quot;</span>&gt;</span><span class="comment">&lt;!--宽度200px，高度100px--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;child1&quot;</span>&gt;</span><span class="comment">&lt;!--高度20px，宽度80px&lt;/div&gt;--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;child2&quot;</span>&gt;</span><span class="comment">&lt;!--高度50px，宽度160px&lt;/div&gt;--&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="em-与-rem"><a href="#em-与-rem" class="headerlink" title="em 与 rem"></a>em 与 rem</h1><p>em 与 rem 都是相对单位，目前更多应用于移动端设备，例如手机、平板电脑的显示。具体的含义如下所示：</p><ul><li>em：是相对于当前 HTML 元素的父级元素来进行设置。</li><li>rem：是相对于当前 HTML 根元素（``）来进行设置。</li></ul><p>上述 2 种单位都具有如下 3 种情况：</p><ul><li>小于 1 时：表示相对于父级元素或根元素缩小。例如 0.5em 表示是父级元素的 0.5 倍，0.5rem 表示是根元素的 0.5 倍。</li><li>等于 1 时：表示与父级元素或根元素的大小保持一致。</li><li>大于 1 时：表示相对于父级元素或根元素放大。例如 1.5em 表示是父级元素的 1.5 倍，1.5rem 表示是根元素的 1.5 倍。</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;基础知识&quot;&gt;&lt;a href=&quot;#基础知识&quot; class=&quot;headerlink&quot; title=&quot;基础知识&quot;&gt;&lt;/a&gt;基础知识&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;色调&lt;/strong&gt;：很接近通俗意义上的颜色。&lt;br&gt;  图像的相对明暗程度，在彩色图像上表现</summary>
      
    
    
    
    <category term="Web前端" scheme="http://xiaoliblog.cn/categories/Web%E5%89%8D%E7%AB%AF/"/>
    
    <category term="HTML+CSS" scheme="http://xiaoliblog.cn/categories/Web%E5%89%8D%E7%AB%AF/HTML-CSS/"/>
    
    
    <category term="HTML+CSS" scheme="http://xiaoliblog.cn/tags/HTML-CSS/"/>
    
  </entry>
  
  <entry>
    <title>前端三剑客🔗CSS选择器</title>
    <link href="http://xiaoliblog.cn/2021/01/18/%E5%89%8D%E7%AB%AF/HTML+CSS/%E5%89%8D%E7%AB%AF%E4%B8%89%E5%89%91%E5%AE%A2_CSS%E9%80%89%E6%8B%A9%E5%99%A8/"/>
    <id>http://xiaoliblog.cn/2021/01/18/%E5%89%8D%E7%AB%AF/HTML+CSS/%E5%89%8D%E7%AB%AF%E4%B8%89%E5%89%91%E5%AE%A2_CSS%E9%80%89%E6%8B%A9%E5%99%A8/</id>
    <published>2021-01-18T11:25:45.567Z</published>
    <updated>2021-01-18T12:19:34.193Z</updated>
    
    <content type="html"><![CDATA[<h1 id="CSS3基础"><a href="#CSS3基础" class="headerlink" title="CSS3基础"></a>CSS3基础</h1><p>CSS(Cascading Style Sheet，层叠样式表)是一种标准的格式化网页的方式，用于控制网页样式。 </p><ul><li>内容与表现分离</li><li>网页的表现统一，容易修改</li><li>丰富的样式，使得页面布局更加灵活</li><li>减少网页的代码量，增加网页的浏览速度，节省网络带宽</li><li>运用独立于页面的CSS，有利于网页被搜索引擎收录</li></ul><h2 id="引入方式"><a href="#引入方式" class="headerlink" title="引入方式"></a>引入方式</h2><ul><li><strong>行内样式</strong><br>使用style属性引入css样式</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">标签</span> <span class="attr">style</span>=<span class="string">&quot;属性1:值1;属性2:值2;...&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">标签</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>内部样式</strong><br>CSS代码写在&lt;head&gt;的&lt;style&gt;标签中</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span></span><br><span class="line">标签&#123;</span><br><span class="line">属性:值;</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>外部样式</strong><br>CSS代码保存在扩展名为.css的样式表中<br>HTML文件引用扩展名为.css的样式表，有两种方式</li></ul><div class="tabs" id="css1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#css1-1">链接式</button></li><li class="tab"><button type="button" data-href="#css1-2">导入式</button></li><li class="tab"><button type="button" data-href="#css1-3">区别</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="css1-1"><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;style.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="css1-2"><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">……</span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span></span><br><span class="line">&lt;!--</span><br><span class="line"><span class="css"><span class="keyword">@import</span> url(<span class="string">&quot;style.css&quot;</span>);</span></span><br><span class="line">--&gt;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="css1-3"><ul><li><link>标签属于XHTML，@import是属于CSS2.1</li><li>使用<link>链接的CSS文件先加载到网页当中，再进行编译显示</li><li>使用@import导入的CSS文件，客户端显示HTML结构，再把CSS文件加载到网页当中</li><li>@import是属于CSS2.1特有的，对不兼容CSS2.1的浏览器是无效的</li></ul><button type="button" class="tab-to-top"><i class="fas fa-arrow-up"></i></button></div></div></div><ul><li><strong>CSS样式优先级（就近原则）</strong><ul><li>行内样式&gt;内部样式表&gt;外部样式表 </li></ul></li></ul><h2 id="选择器分类"><a href="#选择器分类" class="headerlink" title="选择器分类"></a>选择器分类</h2><ul><li>基本选择器：共有 5 个基本选择器，是 CSS 选择器的最为基本的用法。</li><li>层级选择器：共有 4 个层级选择器，是根据 HTML 元素之间的关系来定位 HTML 元素。</li><li>组合选择器：具有交集和并集两种用法，是将之前基本选择器和层级选择器进行组合。</li><li>伪类选择器：允许未包含在 HTML 页面中的状态信息选定位 HTML 元素。</li><li>伪元素选择器：定位所有未被包含 HTML 的实体</li></ul><h1 id="基本选择器"><a href="#基本选择器" class="headerlink" title="基本选择器"></a>基本选择器</h1><ul><li><strong>标记选择器</strong><br>HTML标签作为标签选择器的名称</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span></span><br><span class="line"><span class="css"><span class="selector-tag">p</span>&#123;<span class="attribute">font-size</span>:<span class="number">16px</span>;&#125;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>我的文本<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>类选择器</strong><br>以”.”来进行定义，用class去执行调用</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span></span><br><span class="line"><span class="css"><span class="selector-class">.one</span>&#123;<span class="attribute">font-size</span>:<span class="number">16px</span>;&#125;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;one&quot;</span>&gt;</span>我的文本<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><div class="note warning flat"><p>类名不能是纯数字和汉字</p></div><ul><li><strong>ID选择器</strong><br>以”#”来定义，用id去执行</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span></span><br><span class="line"><span class="css"><span class="selector-id">#one</span>&#123;<span class="attribute">font-size</span>:<span class="number">16px</span>;&#125;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;one&quot;</span>&gt;</span>我的文本<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><div class="note warning flat"><p>ID选择器，只能用一次(id是唯一的)，类选择器可以反复使用</p></div><ul><li><strong>通配符选择器</strong><br>“*“表示所有</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span></span><br><span class="line"><span class="css">*&#123;<span class="attribute">margin</span>:<span class="number">0</span>;<span class="attribute">padding</span>:<span class="number">0</span>&#125;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="优先级"><a href="#优先级" class="headerlink" title="优先级"></a>优先级</h2><div class="note success flat"><p>！important&gt;行内样式&gt;ID选择器&gt;类选择器&gt;标签选择器</p></div><p>计算法则（后定义的覆盖先定义的）</p><ol><li>优先级就是分配给指定的 CSS 声明的一个权重，它由匹配的选择器中的每一种选择器类型的数值决定。</li><li>当优先级与多个 CSS 声明中任意一个声明的优先级相等的时候，CSS 中最后的那个声明将会被应用到元素上。</li><li>当同一个元素有多个声明的时候，优先级才会有意义。</li></ol><p><strong>内联样式总会覆盖内嵌样式表和外联样式表的任何样式。</strong></p><h2 id="important"><a href="#important" class="headerlink" title="!important"></a>!important</h2><p>破坏优先级，被修饰的成为最高级。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>!important规则<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">    div &#123;</span><br><span class="line">      color: blue !important;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">    <span class="selector-class">.demo</span> &#123;</span></span><br><span class="line">      color: red;</span><br><span class="line">    &#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;demo&quot;</span>&gt;</span>这是一个测试内容.<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>最终的颜色为 <code>blue</code></p><ol><li>一定要优化考虑使用样式规则的优先级来解决问题而不是 <code>!important</code>。</li><li>只有在需要覆盖全站或外部 CSS 的特定页面中使用 <code>!important</code>。</li><li>永远不要在你的插件中使用<code> !important</code>。</li><li>永远不要在全站范围的 CSS 代码中使用 <code>!important</code>。</li></ol><h1 id="层次选择器"><a href="#层次选择器" class="headerlink" title="层次选择器"></a>层次选择器</h1><table><thead><tr><th align="center">选择器</th><th align="center">类型</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">E F</td><td align="center">后代选择器</td><td align="center"><strong>选择匹配的F元素，且匹配的F元素被包含在匹配的E元素内</strong></td></tr><tr><td align="center">E&gt;F</td><td align="center">子选择器</td><td align="center"><strong>选择匹配的F元素，且匹配的F元素是匹配的E元素的子元素</strong></td></tr><tr><td align="center">E+F</td><td align="center">相邻兄弟选择器</td><td align="center"><strong>选择匹配的F元素，且匹配的F元素紧位于匹配的E元素后面</strong></td></tr><tr><td align="center">E~F</td><td align="center">通用兄弟选择器</td><td align="center"><strong>选择匹配的F元素，且位于匹配的E元素后所有匹配的F元素</strong></td></tr></tbody></table><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2021/01/02/71ea16d49efd91b85246000628d0d27f.png"></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">body p&#123;backgrund:red&#125; //body下的所有p元素都变为红色</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2021/01/02/f65530e0f802805ed4e6a1452dbdda2f.png"></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">body&gt;p&#123; background: pink; &#125; //前三个p变粉色</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2021/01/02/b61dc01df822eae6914bf639dc257f1a.png"></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.active+p &#123; background: green; &#125;  //只有第二个p变绿色</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2021/01/02/df33ae142a53b896b7f2807c7105a550.png"></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.active~p&#123; background: yellow; &#125;  //active后面的所有兄弟p元素变为黄色</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2021/01/02/78ca0ccc3a1c4efb9483313bf7a7567d.png"></p><h1 id="组合选择器"><a href="#组合选择器" class="headerlink" title="组合选择器"></a>组合选择器</h1><ul><li>组合（并集）选择器</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">h1</span>,<span class="selector-tag">h2</span>,<span class="selector-tag">h3</span>,<span class="selector-tag">h4</span>,<span class="selector-tag">h5</span>,<span class="selector-tag">h6</span>&#123; </span><br><span class="line"><span class="attribute">color</span>:blue; </span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">/*同时定义多个标签的属性*/</span></span><br></pre></td></tr></table></figure><ul><li>组合（交集）选择器</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span><span class="selector-class">.cls</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: blueviolet;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*表示把所有class名为cls的p标签都设置成blueviolet颜色*/</span></span><br></pre></td></tr></table></figure><h1 id="属性选择器"><a href="#属性选择器" class="headerlink" title="属性选择器"></a>属性选择器</h1><table><thead><tr><th align="center">选择器</th><th align="center">功能描述</th></tr></thead><tbody><tr><td align="center">E[attr]</td><td align="center"><strong>选择匹配具有属性attr的E元素</strong></td></tr><tr><td align="center">E[attr=val]</td><td align="center"><strong>选择匹配属性值为val(区分大小写)的E元素</strong></td></tr><tr><td align="center">E[attr^=val]</td><td align="center"><strong>选择匹配属性值以val开头的E元素</strong></td></tr><tr><td align="center">E[attr$=val]</td><td align="center"><strong>选择匹配属性值以val结尾头的E元素</strong></td></tr><tr><td align="center">E[attr*=val]</td><td align="center"><strong>选择匹配属性值包含val的E元素</strong></td></tr></tbody></table><div class="note warning flat"><p>E[attr=val]属性选择器中，属性和属性值必须完全匹配才能被选中</p></div><h1 id="伪类选择器"><a href="#伪类选择器" class="headerlink" title="伪类选择器"></a>伪类选择器</h1><table><thead><tr><th align="center">选择器</th><th align="center">功能描述</th></tr></thead><tbody><tr><td align="center">E:first-child</td><td align="center"><strong>作为父元素的第一个子元素的元素E</strong></td></tr><tr><td align="center">E:last-child</td><td align="center"><strong>作为父元素的最后一个子元素的元素E</strong></td></tr><tr><td align="center">E F:nth-child(n)</td><td align="center"><strong>选择父级元素E的第n个子元素(n可以是1,2,3…)关键字为even、odd</strong></td></tr><tr><td align="center">E:first-of-type</td><td align="center"><strong>选择父元素内具有指定类型的第一个E元素</strong></td></tr><tr><td align="center">E:last-of-type</td><td align="center"><strong>选择父元素内具有指定类型的最后一个E元素</strong></td></tr><tr><td align="center">E F:nth-of-type(n)</td><td align="center"><strong>选择父元素内具有指定类型的第n个E元素</strong></td></tr></tbody></table><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2021/01/02/4ee4166174b229e1dce065cc621073e2.png"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span></span><br><span class="line"><span class="css"><span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-pseudo">:first-child</span>&#123; <span class="attribute">background</span>: red;&#125;</span></span><br><span class="line"><span class="css"><span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-pseudo">:last-child</span>&#123; <span class="attribute">background</span>: green;&#125;</span></span><br><span class="line"><span class="css"><span class="selector-tag">p</span><span class="selector-pseudo">:nth-child(1)</span>&#123; <span class="attribute">background</span>: yellow;&#125;</span></span><br><span class="line"><span class="css"><span class="selector-tag">p</span><span class="selector-pseudo">:nth-of-type(2)</span>&#123; <span class="attribute">background</span>: blue;&#125;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2021/01/02/2824e13e489cff368bcfb481fabf26c1.png"></p><ul><li><p>使用E F:nth-child(n)和E F:nth-of-type(n)的 关键点</p><ul><li>E F:nth-child(n)在父级里从一个元素开始查找，不分类型</li><li>E F:nth-of-type(n)在父级里先看类型，再看位置</li></ul></li><li><p>否定伪类选择器</p></li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-pseudo">:not(selector)</span> &#123;</span><br><span class="line">    属性 : 属性值;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>否定伪类选择器<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">    <span class="selector-class">.fancy</span> &#123;</span></span><br><span class="line">      text-shadow: 2px 2px 3px gold;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">    <span class="selector-tag">p</span><span class="selector-pseudo">:not(.fancy)</span> &#123; <span class="comment">/*匹配class名不是fancy的p标签*/</span></span></span><br><span class="line">      color: green;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">    <span class="selector-tag">body</span> <span class="selector-pseudo">:not(p)</span> &#123; <span class="comment">/*匹配body中不是p标签的标签*/</span></span></span><br><span class="line">      text-decoration: underline;</span><br><span class="line">    &#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>我是一个段落。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;fancy&quot;</span>&gt;</span>我好看极了！<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span>我不是一个段落。<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="伪元素选择器"><a href="#伪元素选择器" class="headerlink" title="伪元素选择器"></a>伪元素选择器</h1><p>CSS 中<strong>伪元素选择器</strong>的用法与伪类选择器的用法类似，都是在指定 CSS 选择器增加关键字。但这两者的作用并不相同，伪类选择器是用来描述某个指定元素的状态信息，而伪元素选择器是用来描述某个指定元素的特定部分设定样式。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* CSS3 语法 */</span></span><br><span class="line">选择器::伪元素 &#123;</span><br><span class="line">  属性 : 属性值;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* CSS2 过时语法 (仅用来支持 IE8) */</span></span><br><span class="line">选择器:伪元素 &#123;</span><br><span class="line">  属性 : 属性值;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>伪元素选择器</strong>的语法格式为<code> ::伪元素</code>，一定不要忘记<code> ::</code>。<strong>伪元素选择器</strong>只能和基本选择器配合使用，并且一个选择器只能使用一个伪元素选择器，如果要为一个选择器增加多个伪元素选择器需要分别编写</p><h2 id="before和after"><a href="#before和after" class="headerlink" title="before和after"></a>before和after</h2><ul><li><code> ::before</code> 伪元素的作用是作为定位的 HTML 元素的第一个子级元素</li><li><code>::after</code>伪元素的作用是作为定位的 HTML 元素的最后一个子级元素</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">a</span><span class="selector-pseudo">::after</span>&#123;</span></span><br><span class="line">            content: &quot;→&quot;;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-tag">a</span><span class="selector-pseudo">::before</span>&#123;</span></span><br><span class="line">            content: &quot;♥&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;xiaoliblog.cn&quot;</span>&gt;</span>这是一个测试内容<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="first-letter"><a href="#first-letter" class="headerlink" title="first-letter"></a>first-letter</h2><p><code>::first-letter</code> 伪元素的作用是为匹配元素的文本内容的<strong>第一个字母</strong>设置样式内容。 如下示例代码展示了 <code>::first-letter </code>伪元素 的用法：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span><span class="selector-pseudo">::first-letter</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">130%</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="first-line"><a href="#first-line" class="headerlink" title="first-line"></a>first-line</h2><p><code>::first-line </code>伪元素的作用是为匹配 HTML 元素的文本内容的<strong>第一行</strong>设置样式内容。 如下示例代码展示了 <code>::first-line 伪元素</code> 的用法：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.line</span><span class="selector-pseudo">::first-line</span>&#123;</span><br><span class="line">            <span class="attribute">background-color</span>: tomato;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h2 id="selection"><a href="#selection" class="headerlink" title="selection"></a>selection</h2><p><code>::selection</code> 伪元素的作用是匹配用户在** HTML 页面选中的文本内容**（比如使用鼠标或其他选择设备选中的部分）设置高亮效果。如下示例代码展示了 <code>::selection 伪元素</code>的用法：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span><span class="selector-pseudo">::selection</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: gold;</span><br><span class="line">    <span class="attribute">background-color</span>: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>只有一小部分 CSS 属性可以用于<code>::selection </code>伪元素：</p><ul><li>color 属性</li><li>background-color 属性</li><li>cursor 属性</li><li>caret-color 属性</li><li>outline 属性</li><li>text-decoration 属性</li><li>text-emphasis-color 属性</li><li>text-shadow 属性</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;CSS3基础&quot;&gt;&lt;a href=&quot;#CSS3基础&quot; class=&quot;headerlink&quot; title=&quot;CSS3基础&quot;&gt;&lt;/a&gt;CSS3基础&lt;/h1&gt;&lt;p&gt;CSS(Cascading Style Sheet，层叠样式表)是一种标准的格式化网页的方式，用于控制网页样</summary>
      
    
    
    
    <category term="Web前端" scheme="http://xiaoliblog.cn/categories/Web%E5%89%8D%E7%AB%AF/"/>
    
    <category term="HTML+CSS" scheme="http://xiaoliblog.cn/categories/Web%E5%89%8D%E7%AB%AF/HTML-CSS/"/>
    
    
    <category term="HTML+CSS" scheme="http://xiaoliblog.cn/tags/HTML-CSS/"/>
    
  </entry>
  
  <entry>
    <title>前端三剑客🔗HTML基础</title>
    <link href="http://xiaoliblog.cn/2021/01/18/%E5%89%8D%E7%AB%AF/HTML+CSS/%E5%89%8D%E7%AB%AF%E4%B8%89%E5%89%91%E5%AE%A2_HTML%E5%9F%BA%E7%A1%80/"/>
    <id>http://xiaoliblog.cn/2021/01/18/%E5%89%8D%E7%AB%AF/HTML+CSS/%E5%89%8D%E7%AB%AF%E4%B8%89%E5%89%91%E5%AE%A2_HTML%E5%9F%BA%E7%A1%80/</id>
    <published>2021-01-18T11:15:01.693Z</published>
    <updated>2021-01-18T11:24:50.136Z</updated>
    
    <content type="html"><![CDATA[<h1 id="教程推荐"><a href="#教程推荐" class="headerlink" title="教程推荐"></a>教程推荐</h1><div class="note success flat"><p>👉👉👉<a href="https://www.vxzsk.com/tags/88.html">CSS教程</a>||<a href="https://www.vxzsk.com/tags/103.html">HTML+CSS教程</a>||<a href="https://www.runoob.com/html/html-tutorial.html">HTML|菜鸟教程</a>||<a href="https://www.runoob.com/css/css-tutorial.html">CSS|菜鸟教程</a>||<a href="https://www.bilibili.com/video/BV14J4114768">黑马程序员pink老师前端入门视频教程 HTML5+CSS3</a></p></div><h1 id="HTML页面"><a href="#HTML页面" class="headerlink" title="HTML页面"></a>HTML页面</h1><ul><li><p>HTML：Hyper Text Markup Language（超文本标记语言）<br>超文本包括：文字、图片、音频、视频、动画等</p></li><li><p>W3C</p><ol><li>World Wide Web Consortium（万维网联盟）</li><li>成立于1994年，Web技术领域最权威和具影响力<br>的国际中立性技术标准机构</li></ol></li><li><p>W3C标准包括</p><ol><li>结构化标准语言（XHTML 、XML）</li><li>表现标准语言（CSS）</li><li>行为标准（DOM、ECMAScript ）</li></ol></li><li><p>网页基本结构</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span>  //告诉浏览器使用什么规范</span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span> 我的第一个网页<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">我的第一个网页</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="Head标签"><a href="#Head标签" class="headerlink" title="Head标签"></a>Head标签</h1><ul><li>&lt;title&gt;标签<br>设定显示在浏览器标题栏中的内容<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>家用电器排行榜<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>&lt;meta&gt;标签<br>定义网页的字符集、关键字、描述信息等内容<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">“keywords”</span> <span class="attr">content</span>=<span class="string">&quot;关键字1,关键字2,关键字3,...&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;description&quot;</span> <span class="attr">content</span>=<span class="string">&quot;网页描述内容&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;refresh&quot;</span> <span class="attr">content</span>=<span class="string">“刷新间隔时间;url</span>=<span class="string">页面地址”</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meat</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Type&quot;</span> <span class="attr">content</span>=<span class="string">&quot;text/html;charset=某种字符集&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>gb2312包含全部中文字符，utf-8 则包含全世界所有国家需要用到的字符，页面编码应与页面文件保存时的编码一致</p></blockquote></li></ul><h1 id="Body标签"><a href="#Body标签" class="headerlink" title="Body标签"></a>Body标签</h1><ul><li>设置正文颜色与背景颜色<br>body标签封装了页面的主体内容<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">bgcolor</span>=<span class="string">&quot;页面背景颜色值&quot;</span> <span class="attr">text</span>=<span class="string">&quot;页面正文颜色值&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>添加网页背景图片<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- fixed设置背景图片固定不动--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">background</span>=<span class="string">&quot;背景图片的URI&quot;</span> <span class="attr">bgproperties</span>=<span class="string">&quot;fixed&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>设置网页链接文字颜色<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">link</span>=<span class="string">&quot;未访问状态颜色值&quot;</span> <span class="attr">vlink</span>=<span class="string">&quot;访问过后的颜色值&quot;</span> <span class="attr">alink</span>=<span class="string">&quot;正在访问中的颜色&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>设置网页边距<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">leftmargin</span>=<span class="string">&quot;左边距值&quot;</span> <span class="attr">rightmargin</span>=<span class="string">&quot;右边距值&quot;</span> <span class="attr">topmargin</span>=<span class="string">&quot;上边距值&quot;</span> <span class="attr">bottommargin</span>=<span class="string">&quot;底边距值&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="文字与段落标记"><a href="#文字与段落标记" class="headerlink" title="文字与段落标记"></a>文字与段落标记</h1><ul><li><p>特殊文字</p></li><li><p>注释</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--注释内容--&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>字体设置</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">face</span>=<span class="string">&quot;字体名称&quot;</span> <span class="attr">size</span>=<span class="string">&quot;字号&quot;</span> <span class="attr">color</span>=<span class="string">&quot;颜色值&quot;</span>&gt;</span>文字内容<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>size字号取值范围从1到7，或者从+1到+7、从-1到-7（正负取值相对于页面默认字号）</p></blockquote></li><li><p>字体样式标签</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">strong</span>&gt;</span>加粗<span class="tag">&lt;/<span class="name">strong</span>&gt;</span>、<span class="tag">&lt;<span class="name">b</span>&gt;</span>加租<span class="tag">&lt;/<span class="name">b</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">em</span>&gt;</span>斜体<span class="tag">&lt;/<span class="name">em</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">sup</span>&gt;</span>设置为上标<span class="tag">&lt;/<span class="name">sup</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">sub</span>&gt;</span>设置为小标<span class="tag">&lt;/<span class="name">sub</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">big</span>&gt;</span>设置为大字号<span class="tag">&lt;/<span class="name">big</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">small</span>&gt;</span>设置为小字号<span class="tag">&lt;/<span class="name">small</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">u</span>&gt;</span>设置下划线<span class="tag">&lt;/<span class="name">u</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">s</span>&gt;</span>设置删除线<span class="tag">&lt;/<span class="name">s</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>标题标签</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span> 一级标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span> 二级标题<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span> 三级标题<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h4</span>&gt;</span> 四级标题<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h5</span>&gt;</span> 五级标题<span class="tag">&lt;/<span class="name">h5</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h6</span>&gt;</span> 六级标题<span class="tag">&lt;/<span class="name">h6</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>段落标签</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>这个一个段落<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>换行标签</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>预格式化标签<br>预格式化可以保留在源代码中使用Enter、空格等键产生的各种格式</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">pre</span>&gt;</span> .. <span class="tag">&lt;/<span class="name">pre</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>居中标记</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">center</span>&gt;</span>居中<span class="tag">&lt;/<span class="name">center</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>缩排标记<br>缩排标记可以使一段文字产生一定位置的缩进，使用多次缩排标记可以实现多次缩排</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">blockquot</span>&gt;</span>...<span class="tag">&lt;/<span class="name">blockquot</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>水平线标签</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hr</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span> <span class="attr">width</span>=<span class="string">&quot;宽度&quot;</span> <span class="attr">height</span>=<span class="string">&quot;高度&quot;</span> <span class="attr">size</span>=<span class="string">&quot;粗细&quot;</span> <span class="attr">align</span>=<span class="string">&quot;水平对齐方式&quot;</span> <span class="attr">color</span>=<span class="string">&quot;颜色&quot;</span> <span class="attr">noshade</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>noshade表示设置实心的不带阴影的效果</p></blockquote></li></ul><h1 id="列表标记"><a href="#列表标记" class="headerlink" title="列表标记"></a>列表标记</h1><ul><li>有序列表<br>以数字或字母等可以表示顺序的符号为项目前导符来排列列表项的列表<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>列表项一<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>列表项二<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>列表项三<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br></pre></td></tr></table></figure>前导符设置：前导符可以取1、A、a、I、i这几种，默认为”1”<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ol</span> <span class="attr">type</span>=<span class="string">&quot;前导符&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>起始编号设置：<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ol</span> <span class="attr">start</span>=<span class="string">&quot;起始编号位序&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>无序列表<br>以无序次含义的符号为前导符的列表<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>列表项一<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>列表项二<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>列表项三<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>前导符设置：前导符可以取disc（实心圆点）、circle（空心圆点）、square（实心小方块），默认为”disc”<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">type</span>=<span class="string">&quot;前导符&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>定义列表<br>一种具有两个层次的列表，可以用于对名词的解释，其中名词为第一层次，解释为第二层次<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dl</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dt</span>&gt;</span>名词一<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dd</span>&gt;</span>解释一<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dd</span>&gt;</span>解释二<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">...</span><br><span class="line"><span class="tag">&lt;<span class="name">dt</span>&gt;</span>名词二<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dd</span>&gt;</span>解释一<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dd</span>&gt;</span>解释二<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="表格标签"><a href="#表格标签" class="headerlink" title="表格标签"></a>表格标签</h1><ul><li><p>语法</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">width</span>=<span class="string">“200”</span> <span class="attr">border</span>=<span class="string">“8”</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span> 第1 个单元格的内容<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span> 第2 个单元格的内容<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">……</span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span> 第1 个单元格的内容<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span> 第2 个单元格的内容<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">……</span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>设置表格边框和大小</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;边框宽度&quot;</span> <span class="attr">bordercolor</span>=<span class="string">&quot;边框颜色&quot;</span> <span class="attr">width</span>=<span class="string">&quot;宽度&quot;</span> <span class="attr">height</span>=<span class="string">&quot;高度&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>设置表格背景颜色和对齐方式</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">bgcolor</span>=<span class="string">&quot;颜色值&quot;</span> <span class="attr">align</span>=<span class="string">&quot;对齐方式&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>设置背景图片</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">background</span>=<span class="string">&quot;图片路径&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>设置表格边框间隔</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">cellpadding</span>=<span class="string">&quot;内容与边框距离值&quot;</span> <span class="attr">cellspacing</span>=<span class="string">&quot;边框之间间距值&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>设置表格的标题</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">caption</span> <span class="attr">align</span>=<span class="string">&quot;水平对齐方式left/right/center&quot;</span> <span class="attr">valign</span>=<span class="string">&quot;垂直对齐方式top/bottom&quot;</span>&gt;</span>表格标题<span class="tag">&lt;/<span class="name">caption</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>&lt;tr&gt;标签<br>一个&lt;tr&gt;&lt;/tr&gt;表示一行</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">tr</span> <span class="attr">height</span>=<span class="string">&quot;行高&quot;</span> <span class="attr">align</span>=<span class="string">&quot;水平对齐方式&quot;</span> <span class="attr">valign</span>=<span class="string">&quot;垂直对齐方式&quot;</span> <span class="attr">bordercolor</span>=<span class="string">&quot;颜色值&quot;</span> <span class="attr">bgcolor</span>=<span class="string">&quot;颜色值&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>&lt;td&gt;和&lt;th&gt;标签</p><table><thead><tr><th align="center">常用属性</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">align</td><td align="center">水平对齐方式，取值left，right，center</td></tr><tr><td align="center">valign</td><td align="center">垂直对齐方式，取值top，middle，bottom</td></tr><tr><td align="center">bgcolor</td><td align="center">单元格背景颜色</td></tr><tr><td align="center">background</td><td align="center">单元格背景图片</td></tr><tr><td align="center">bordercolor</td><td align="center">单元格边框颜色</td></tr><tr><td align="center">width</td><td align="center">单元格宽度，单位为像素或者百分比</td></tr><tr><td align="center">height</td><td align="center">单元格高度</td></tr><tr><td align="center">rowspan</td><td align="center">单元格的跨行操作</td></tr><tr><td align="center">colspan</td><td align="center">单元格的跨列操作</td></tr></tbody></table></li></ul><h1 id="图片标签"><a href="#图片标签" class="headerlink" title="图片标签"></a>图片标签</h1><ul><li><p>常见的图像格式</p><ol><li>位图：JPG、PNG、GIF</li><li>矢量图：ai、cdf、fh、swf</li></ol></li><li><p>区别</p><ol><li>位图：色彩丰富，表现力强，容量大，用于网页</li><li>矢量图：图片放大，清晰度不变，不适用于色彩，丰富的图片，用于印刷行业、网页logo等。</li></ol></li><li><p>设置图片大小和提示</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;path&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;text&quot;</span> <span class="attr">title</span>=<span class="string">&quot;text&quot;</span> <span class="attr">width</span>=<span class="string">&quot;x&quot;</span> <span class="attr">height</span>=<span class="string">&quot;y&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>src为图像路径，alt为图像的替代文章，title为鼠标悬停提示文字，width，height为宽高</p></li><li><p>设置图片与周围对象的间距</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;图片路径&quot;</span> <span class="attr">hspace</span>=<span class="string">&quot;水平间距&quot;</span> <span class="attr">vaspace</span>=<span class="string">&quot;垂直间距&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>设置图片的对齐方式</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;图片文件路径&quot;</span> <span class="attr">align</span>=<span class="string">&quot;top/bottom/middle/left/right&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>设置图片边框</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;图片文件路径&quot;</span> <span class="attr">border</span>=<span class="string">&quot;边框宽度&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="滚动字幕"><a href="#滚动字幕" class="headerlink" title="滚动字幕"></a>滚动字幕</h1><ul><li>设置滚动字幕<br>默认情况下，&lt;marquee&gt;标签得到的滚动字幕是从右向左的<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">marquee</span>&gt;</span>滚动文字<span class="tag">&lt;/<span class="name">marquee</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>设置滚动方向<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">marquee</span> <span class="attr">direction</span>=<span class="string">&quot;滚动方向&quot;</span>&gt;</span>滚动文字<span class="tag">&lt;/<span class="name">marquee</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><table><thead><tr><th align="center">direction属性值</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">up</td><td align="center">从下往上滚动</td></tr><tr><td align="center">down</td><td align="center">从上往下滚动</td></tr><tr><td align="center">left</td><td align="center">从左往右滚动</td></tr><tr><td align="center">right</td><td align="center">从右往左滚动</td></tr></tbody></table><ul><li>设置滚动字幕的滚动行为<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">marquee</span> <span class="attr">behavior</span>=<span class="string">&quot;滚动行为&quot;</span>&gt;</span>滚动文字<span class="tag">&lt;/<span class="name">marquee</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><table><thead><tr><th align="center">behavior属性值</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">scroll</td><td align="center">设置文字循环往复滚动（默认）</td></tr><tr><td align="center">slide</td><td align="center">设置文字只进行一次滚动</td></tr><tr><td align="center">alternate</td><td align="center">设置文字循环交替往返进行滚动</td></tr></tbody></table><ul><li>设置字幕的滚动速度和滚动延迟特性<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">marquee</span> <span class="attr">scrollamount</span>=<span class="string">&quot;滚动速度值(默认为6)&quot;</span> <span class="attr">scrolldelay</span>=<span class="string">&quot;延迟时间(毫秒为单位)&quot;</span>&gt;</span>滚动文字<span class="tag">&lt;/<span class="name">marquee</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>设置字幕的滚动区域及其背景色<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">marquee</span> <span class="attr">bgcolor</span>=<span class="string">&quot;颜色值&quot;</span> <span class="attr">width</span>=<span class="string">&quot;宽度&quot;</span> <span class="attr">height</span>=<span class="string">&quot;高度&quot;</span>&gt;</span>滚动字幕<span class="tag">&lt;/<span class="name">marquee</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>设置字幕的滚动区域与周围对象的间距<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">marquee</span> <span class="attr">hspace</span>=<span class="string">&quot;水平间距&quot;</span> <span class="attr">vspace</span>=<span class="string">&quot;垂直间距&quot;</span>&gt;</span>滚动文字<span class="tag">&lt;/<span class="name">marquee</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="多媒体标签"><a href="#多媒体标签" class="headerlink" title="多媒体标签"></a>多媒体标签</h1><ul><li><p>视频标签</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">controls</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">&quot;video/video.webm&quot;</span> <span class="attr">type</span>=<span class="string">&quot;video/webm&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">&quot;video/video.mp4&quot;</span> <span class="attr">type</span>=<span class="string">&quot;video/mp4&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>cotrols表示提供播放、暂停和音量 的控件</p></blockquote></li><li><p>自动播放</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">autoplay</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">&quot;video/video.webm&quot;</span> <span class="attr">type</span>=<span class="string">&quot;video/webm&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">&quot;video/video.mp4&quot;</span> <span class="attr">type</span>=<span class="string">&quot;video/mp4&quot;</span>/&gt;</span></span><br><span class="line">持 你的浏览器不支持video 元素</span><br><span class="line"><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>音频标签</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">audio</span> <span class="attr">controls</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">&quot;music/music.mp3&quot;</span> <span class="attr">type</span>=<span class="string">&quot;audio/mpeg&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">&quot;music/music.ogg&quot;</span> <span class="attr">type</span>=<span class="string">&quot;audio/ogg&quot;</span>/&gt;</span></span><br><span class="line">持 你的浏览器不支持audio 元素</span><br><span class="line"><span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="结构元素"><a href="#结构元素" class="headerlink" title="结构元素"></a>结构元素</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">header</span>&gt;</span><span class="tag">&lt;<span class="name">h2</span>&gt;</span> 网页头部<span class="tag">&lt;/<span class="name">h2</span>&gt;</span> <span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">section</span>&gt;</span><span class="tag">&lt;<span class="name">h2</span>&gt;</span> 网页主体部分<span class="tag">&lt;/<span class="name">h2</span>&gt;</span><span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">footer</span>&gt;</span><span class="tag">&lt;<span class="name">h2</span>&gt;</span> 网页底部<span class="tag">&lt;/<span class="name">h2</span>&gt;</span><span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artice</span>&gt;</span>独立的文章内容<span class="tag">&lt;/<span class="name">artice</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">aside</span>&gt;</span>相关内容或应用<span class="tag">&lt;/<span class="name">aside</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">nav</span>&gt;</span>导航类辅助内容<span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="框架结构"><a href="#框架结构" class="headerlink" title="框架结构"></a>框架结构</h1><p>框架的基本结构分框架集和框架两个部分，因为只分隔窗口，不涉及页面的具体内容，所以不需要&lt;body&gt;包裹</p><ul><li><p>框架集标记<br>&lt;frameset&gt;的作用主要是定义浏览器窗口的分割方式、各分隔窗口(框架)的大小，以及设置框架边框的颜色和粗细等属性。</p><table><thead><tr><th align="center">属性</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">border</td><td align="center">设置边框粗细</td></tr><tr><td align="center">bordercolor</td><td align="center">边框颜色</td></tr><tr><td align="center">frameboder</td><td align="center">是否显示边框，可取值0或和1，或者no和yes</td></tr><tr><td align="center">framespacing</td><td align="center">框架之间的间距</td></tr><tr><td align="center">rows</td><td align="center">按行，即上下(垂直)方式分割</td></tr><tr><td align="center">cols</td><td align="center">按列，即左右(水平)方式分割</td></tr></tbody></table></li><li><p>左右分隔窗口</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">frameset</span> <span class="attr">cols</span>=<span class="string">&quot;value1,value2,..&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">frame</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">frame</span>&gt;</span></span><br><span class="line">...</span><br><span class="line"><span class="tag">&lt;/<span class="name">frameset</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>上下分割窗口</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">frameset</span> <span class="attr">rows</span>=<span class="string">&quot;value1,value2,..&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">frame</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">frame</span>&gt;</span></span><br><span class="line">...</span><br><span class="line"><span class="tag">&lt;/<span class="name">frameset</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>嵌套分隔窗口</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">frameset</span> <span class="attr">rows</span>=<span class="string">&quot;80%,*,..&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">frame</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">frameset</span> <span class="attr">cols</span>=<span class="string">&quot;20%,*,..&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">frame</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">frame</span>&gt;</span></span><br><span class="line">...</span><br><span class="line"><span class="tag">&lt;/<span class="name">frameset</span>&gt;</span></span><br><span class="line">...</span><br><span class="line"><span class="tag">&lt;/<span class="name">frameset</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>使用&lt;frameset&gt;标签设置框架边框</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">frameset</span> <span class="attr">frameborder</span>=<span class="string">&quot;0|1|no|yes&quot;</span> <span class="attr">framespacing</span>=<span class="string">&quot;边框间距&quot;</span> <span class="attr">border</span>=<span class="string">&quot;边框宽度&quot;</span> <span class="attr">bordercolor</span>=<span class="string">&quot;颜色值&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>框架标记&lt;frame&gt;<br>&lt;frame&gt;用于设置子窗口，是个单标记，必须放在frameset中</p><table><thead><tr><th align="center">属性</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">src</td><td align="center">设置在框架中显示的页面的URL地址</td></tr><tr><td align="center">bordercolor</td><td align="center">设置边框颜色</td></tr><tr><td align="center">frameboder</td><td align="center">是否显示边框，可取值0或和1，或者no和yes</td></tr><tr><td align="center">border</td><td align="center">设置边框粗细</td></tr><tr><td align="center">name</td><td align="center">设置框架名称，可作为超链接的target的属性值</td></tr><tr><td align="center">noresize</td><td align="center">使用时不能调整窗口的大小</td></tr><tr><td align="center">scorlling</td><td align="center">设置是否显示滚动条，可取值yes,no和auto</td></tr><tr><td align="center">marginwidth</td><td align="center">设置内容与框架窗口左右边框的距离</td></tr><tr><td align="center">marginheight</td><td align="center">设置内容与框架窗口上下边框的距离</td></tr></tbody></table></li><li><p>设置框架显示内容<br>设置指定某个页面的内容</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">frame</span> <span class="attr">src</span>=<span class="string">&quot;需要显示页面的URL&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>设置框架边距</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">frame</span> <span class="attr">frameborder</span>=<span class="string">&quot;0|1|no|yes&quot;</span> <span class="attr">bordercolor</span>=<span class="string">&quot;颜色值&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>设置框架名称</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">frame</span> <span class="attr">name</span>=<span class="string">&quot;框架名称&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>设置框架固定大小</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">frame</span> <span class="attr">noresize</span>=<span class="string">&quot;noresize&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>设置框架滚动条</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">frame</span> <span class="attr">scrolling</span>=<span class="string">&quot;auto|no|yes&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>设置框架边距</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">frame</span> <span class="attr">marginheight</span>=<span class="string">&quot;上、下边距&quot;</span> <span class="attr">marginwidth</span>=<span class="string">&quot;左、右边距&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>不支持框架标签<br>有些浏览器不支持框架，会显示空白页，这时，需要使用&lt;noframes&gt;显示提示信息</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">noframes</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">抱歉，你的浏览器版本太低，不支持框架，无法看到页面内容，请使用较新的浏览器来浏览</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">noframes</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>浮动框架标签<br>&lt;iframe&gt;是一种特殊的框架页面，可以作为HTML文档的一部分,，放在body标签里面</p><table><thead><tr><th align="center">属性</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">src</td><td align="center">设置在浮点框架中显示的页面的URL地址</td></tr><tr><td align="center">width</td><td align="center">设置浮动框架的宽度</td></tr><tr><td align="center">height</td><td align="center">设置浮动框架的高度</td></tr><tr><td align="center">align</td><td align="center">设置浮动框架的对齐方式</td></tr><tr><td align="center">frameboder</td><td align="center">是否显示边框，可取值0或和1，或者no和yes</td></tr><tr><td align="center">name</td><td align="center">设置框架名称，可作为超链接的target的属性值</td></tr><tr><td align="center">noresize</td><td align="center">使用时不能调整窗口的大小</td></tr><tr><td align="center">scorlling</td><td align="center">设置是否显示滚动条，可取值yes,no和auto</td></tr><tr><td align="center">bordercolor</td><td align="center">设置边框颜色</td></tr><tr><td align="center">marginwidth</td><td align="center">设置内容与框架窗口左右边框的距离</td></tr><tr><td align="center">marginheight</td><td align="center">设置内容与框架窗口上下边框的距离</td></tr></tbody></table></li><li><p>在页面中嵌入浮动框架</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">&quot;源文件地址&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>浮动框架的大小</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">&quot;源文件地址&quot;</span> <span class="attr">width</span>=<span class="string">&quot;宽度&quot;</span> <span class="attr">heigth</span>=<span class="string">&quot;高度&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>浮点框架的对齐方式</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">&quot;源文件地址&quot;</span> <span class="attr">align</span>=<span class="string">&quot;对齐方式&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>实现页面间的相互跳转</p></li></ul><ol><li>在被打开的框架上加name属性<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">name</span>=<span class="string">&quot;mainFrame&quot;</span> <span class="attr">src</span>=<span class="string">&quot;a.html&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure></li><li>在超链接上设置target目标窗口属性为希望显示的框架窗口名<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;a.html&quot;</span> <span class="attr">target</span>=<span class="string">&quot;mainFrame&quot;</span>&gt;</span> 下边显示第二页<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><h1 id="链接标签"><a href="#链接标签" class="headerlink" title="链接标签"></a>链接标签</h1><ul><li>普通链接<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;目标端点&quot;</span> <span class="attr">target</span>=<span class="string">&quot; 目标窗口位置&quot;</span>&gt;</span> 链接文字或图像<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><table><thead><tr><th align="center">target属性</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">_blank</td><td align="center">在新窗口打开链接文档</td></tr><tr><td align="center">_self</td><td align="center">在同一个框架或同一窗口中打开链接文档(默认属性)</td></tr><tr><td align="center">_parent</td><td align="center">在上一级窗口中打开，一般在框架页面中经常使用</td></tr><tr><td align="center">_top</td><td align="center">在浏览器的整个窗口中打开，忽略如何框架</td></tr><tr><td align="center">框架名称</td><td align="center">在指定的框架窗口中打开链接文档</td></tr></tbody></table><ul><li>锚链接（从A页面的甲位置跳转到本页中的乙位置）</li></ul><ol><li>创建跳转标记<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">name</span>=<span class="string">&quot;marker&quot;</span>&gt;</span> 乙位置<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>创建跳转链接<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#marker&quot;</span>&gt;</span> 甲位置<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><ul><li>功能性链接（电子邮件、QQ、MSN）<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;mailto:bdqnWebmaster@bdqn.cn&quot;</span>&gt;</span> 联系我们<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>脚本链接<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:alert(&#x27;你好，欢迎访问！&#x27;)&quot;</span>&gt;</span>欢迎访问<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>文件下载<br>当链接的目标文档类型属于.doc、.Rar、.zip、.exe等<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;task.exe&quot;</span>&gt;</span>可执行文件下载<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>图片链接<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;目标地址&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;图片地址&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="表单标签"><a href="#表单标签" class="headerlink" title="表单标签"></a>表单标签</h1><ul><li>表单标签&lt;form&gt;</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">name</span>=<span class="string">&quot;表单名称&quot;</span> <span class="attr">action</span>=<span class="string">&quot;提交方式&quot;</span> <span class="attr">method</span>=<span class="string">&quot;提交方法&quot;</span>&gt;</span></span><br><span class="line">...</span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>输入标记&lt;input&gt;</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;元素类型&quot;</span> <span class="attr">name</span>=<span class="string">&quot;表单元素名称&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><table><thead><tr><th align="center">type属性值</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">text</td><td align="center">单行文本框</td></tr><tr><td align="center">password</td><td align="center">密码框</td></tr><tr><td align="center">file</td><td align="center">设置文件元素</td></tr><tr><td align="center">hidden</td><td align="center">设置隐藏元素</td></tr><tr><td align="center">radio</td><td align="center">单选框元素</td></tr><tr><td align="center">checkbox</td><td align="center">复选框元素</td></tr><tr><td align="center">button</td><td align="center">普通按钮</td></tr><tr><td align="center">submit</td><td align="center">提交按钮</td></tr><tr><td align="center">reset</td><td align="center">重置按钮</td></tr><tr><td align="center">image</td><td align="center">图像按钮</td></tr></tbody></table><hr><table><thead><tr><th align="center">属性</th><th align="left">属性值</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">name</td><td align="left">自定义</td><td align="center"></td></tr><tr><td align="center">value</td><td align="left">自定义</td><td align="center"></td></tr><tr><td align="center">size</td><td align="left">正整数</td><td align="center"></td></tr><tr><td align="center">readonly</td><td align="left">readonly</td><td align="center">只读</td></tr><tr><td align="center">disabled</td><td align="left">disabled</td><td align="center">禁用</td></tr><tr><td align="center">checked</td><td align="left">checked</td><td align="center">默认选中</td></tr><tr><td align="center">maxlength</td><td align="left">正整数</td><td align="center">允许输入最大字符数</td></tr></tbody></table><ul><li>文本框text</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;文本框名称&quot;</span> <span class="attr">maxlength</span>=<span class="string">&quot;最多可输入字符数&quot;</span> <span class="attr">size</span>=<span class="string">&quot;文本框长度，单位是像素&quot;</span> <span class="attr">value</span>=<span class="string">&quot;默认值&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>密码框password</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;密码框名称&quot;</span> <span class="attr">readonly</span>=<span class="string">&quot;readonly&quot;</span> <span class="attr">maxlength</span>=<span class="string">&quot;最多可输入字符数&quot;</span> <span class="attr">size</span>=<span class="string">&quot;文本框长度，单位是像素&quot;</span> <span class="attr">value</span>=<span class="string">&quot;默认值&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>隐藏框hidden</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;hidden&quot;</span> <span class="attr">name</span>=<span class="string">&quot;域名称&quot;</span> <span class="attr">value</span>=<span class="string">&quot;域值&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>文件域file</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">name</span>=<span class="string">&quot;域名称&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>单选按钮radio</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;域名称&quot;</span> <span class="attr">value</span>=<span class="string">&quot;域值&quot;</span> <span class="attr">checked</span>=<span class="string">&quot;checked&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>checked表示默认选中</p><blockquote><p>同一组单选按钮的各个选项的名称必须相同</p></blockquote><ul><li>复选框checkbox</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;域名称&quot;</span> <span class="attr">value</span>=<span class="string">&quot;域值&quot;</span> <span class="attr">checked</span>=<span class="string">&quot;checked&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>提交按钮submit</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">name</span>=<span class="string">&quot;按钮名称&quot;</span> <span class="attr">value</span>=<span class="string">&quot;按钮显示文本&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><p>普通按钮button<br>用于激发表单动作，常配合JavaScript脚本对表单执行操作</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">name</span>=<span class="string">&quot;按钮名称&quot;</span> <span class="attr">value</span>=<span class="string">&quot;按钮显示文本&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;javascript 函数名&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>重置按钮reset</p></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;reset&quot;</span> <span class="attr">name</span>=<span class="string">&quot;按钮名称&quot;</span> <span class="attr">value</span>=<span class="string">&quot;按钮显示名称&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>图像按钮</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;image&quot;</span> <span class="attr">name</span>=<span class="string">&quot;按钮名称&quot;</span> <span class="attr">src</span>=<span class="string">&quot;图像路径&quot;</span> <span class="attr">width</span>=<span class="string">&quot;60&quot;</span> <span class="attr">height</span>=<span class="string">&quot;60&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="选择列表标签"><a href="#选择列表标签" class="headerlink" title="选择列表标签"></a>选择列表标签</h1><ul><li>列表&lt;select&gt;</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">&quot;列表名称&quot;</span> <span class="attr">size</span>=<span class="string">&quot;显示的选项数目&quot;</span> <span class="attr">multiple</span>=<span class="string">&quot;multiple&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;选项值&quot;</span> <span class="attr">selected</span>=<span class="string">&quot;selected&quot;</span>&gt;</span>选项一<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;选项值&quot;</span>&gt;</span>选项二<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>multiple表示项目可多选<br>selected表示默认选项，可设置多个</p></blockquote><ul><li>下拉列表<br>一次只能选一个</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;选项值&quot;</span>&gt;</span>选项一<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;选项值&quot;</span>&gt;</span>选项二<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>文本域标签&lt;textarea&gt;</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">textarea</span> <span class="attr">name</span>=<span class="string">&quot;文本域名称&quot;</span> <span class="attr">rows</span>=<span class="string">&quot;行数&quot;</span> <span class="attr">cols</span>=<span class="string">&quot;列数(字符数)&quot;</span>&gt;</span></span><br><span class="line">``</span><br><span class="line"><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;教程推荐&quot;&gt;&lt;a href=&quot;#教程推荐&quot; class=&quot;headerlink&quot; title=&quot;教程推荐&quot;&gt;&lt;/a&gt;教程推荐&lt;/h1&gt;&lt;div class=&quot;note success flat&quot;&gt;&lt;p&gt;👉👉👉&lt;a href=&quot;https://www.vxzs</summary>
      
    
    
    
    <category term="Web前端" scheme="http://xiaoliblog.cn/categories/Web%E5%89%8D%E7%AB%AF/"/>
    
    <category term="HTML+CSS" scheme="http://xiaoliblog.cn/categories/Web%E5%89%8D%E7%AB%AF/HTML-CSS/"/>
    
    
    <category term="HTML+CSS" scheme="http://xiaoliblog.cn/tags/HTML-CSS/"/>
    
  </entry>
  
  <entry>
    <title>SQLServer📦触发器</title>
    <link href="http://xiaoliblog.cn/2021/01/18/%E5%90%8E%E7%AB%AF/SQLServer%E6%95%B0%E6%8D%AE%E5%BA%93/SQLServer_%E8%A7%A6%E5%8F%91%E5%99%A8/"/>
    <id>http://xiaoliblog.cn/2021/01/18/%E5%90%8E%E7%AB%AF/SQLServer%E6%95%B0%E6%8D%AE%E5%BA%93/SQLServer_%E8%A7%A6%E5%8F%91%E5%99%A8/</id>
    <published>2021-01-18T10:37:07.248Z</published>
    <updated>2021-01-18T11:07:09.434Z</updated>
    
    <content type="html"><![CDATA[<h1 id="触发器"><a href="#触发器" class="headerlink" title="触发器"></a>触发器</h1><ul><li><p>触发器是 <code>一种特殊类型的存储过程</code> ：一般存储过程可直接调用执行；而触发器主要是通过事件(<code>UPDATE 、INSERT 、DELETE</code>) 触发而被 <code>自动 </code>执行 ，<code>不能直接调用执行 ， 也不能接受和传送参数</code></p></li><li><p>触发器通常基于一个表创建 ， 当 表中数据发生<code>UPDATE 、INSERT 、DELETE </code>变化时， ，SQLServer 就会自动执行触发器所定义的SQL语 语句 ， 从而保证数据的<code> 完整性</code>和<code>正确性</code></p></li></ul><div class="tabs" id="cfq"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#cfq-1">触发器的主要作用</button></li><li class="tab"><button type="button" data-href="#cfq-2">触发器分类</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="cfq-1"><ul><li>用于保证数据的 <code>完整性 </code>和 <code>正确性</code></li><li>可以完成用<code> 普通约束</code>( 主键 、 外键 、 检查CHECK 、 默认值 、 空值 、 唯一性 、 标识列等 )难以实现的复杂功能</li></ul><button type="button" class="tab-to-top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="cfq-2"><ul><li>据 <code>触发动作</code> 分为：<br>  INSERT 触发器、UPDATE 触发器和DELETE 触发器</li><li>据<code> 触发时刻</code> 分为：<br>  AFTER( 之后) 触发器和INSTEAD( 替代) 触发器</li><li>据 <code>作用对象</code> 分为：<br>  DML 触发器( 作用对象：表/ 视图)和 和DDL  触发器( 作用对象：数据库/ 服务器)</li></ul><button type="button" class="tab-to-top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="创建DML触发器"><a href="#创建DML触发器" class="headerlink" title="创建DML触发器"></a>创建DML触发器</h1><div class="note success flat"><p>DML 触发器  —– 作用对象：表/ 视图</p></div><ul><li>在数据库中发生 DML( 数据操作语言) 事件 时将自动执行。</li><li>DML  事件：DML  事件是指对表 表/ 视图 进行数据的 修改的 INSERT 语句、UPDATE 语句或DELETE 语句。</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TRIGGER</span> &lt; 触发器名&gt;</span><br><span class="line"><span class="keyword">ON</span> &lt; 表名 |  视图名&gt; <span class="comment">/* 指定作用对象*/</span></span><br><span class="line"><span class="keyword">FOR</span> | <span class="keyword">AFTER</span> | INSTEAD <span class="keyword">OF</span> <span class="comment">/* 指定触发时刻*/</span></span><br><span class="line">[ <span class="keyword">INSERT</span> ] [ , ] [ <span class="keyword">UPDATE</span> ] [ , ] [ <span class="keyword">DELETE</span> ]</span><br><span class="line"><span class="comment">/* 指定激活触发器的动作*/</span></span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">SQL</span>语句</span><br></pre></td></tr></table></figure><ul><li>NSERT | UPDATE |DELETE ：用来指明哪种数据操作将激活触发器 。</li><li>AFTER ：表示只有在执行了指定的操作(INSERT,DELETE, UPDATE) 之后触发器才被激活执行 。</li><li>INSTEAD OF：表示用 触发器的程序代替 原来要的 进行的INSERT 、UPDATE 或 或 DELETE 等语句的操作 。 在数据更改之前激活</li></ul><h2 id="UPDATE触发器"><a href="#UPDATE触发器" class="headerlink" title="UPDATE触发器"></a>UPDATE触发器</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*为学生表Student 创建一个UPDATE 触发器，该触发器防止用户修改表Student。*/</span></span><br><span class="line"><span class="keyword">USE</span> EDUC</span><br><span class="line"><span class="keyword">GO</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TRIGGER</span> Student_update</span><br><span class="line"><span class="keyword">ON</span> Student</span><br><span class="line"><span class="keyword">AFTER</span> <span class="keyword">UPDATE</span></span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">PRINT <span class="string">&#x27;------ 未经许可，不能修改哦！！！------&#x27;</span></span><br><span class="line"><span class="keyword">ROLLBACK</span>  <span class="comment">/* 回滚，撤销所作的修改*/</span></span><br><span class="line"><span class="keyword">END</span></span><br><span class="line"><span class="keyword">GO</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*为学生表Student 创建一个UPDATE 触发器，该触发器防止用户修改表Student 的学号SID。*/</span></span><br><span class="line"><span class="keyword">USE</span> EDUC</span><br><span class="line"><span class="keyword">GO</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TRIGGER</span> Student_update_SID</span><br><span class="line"><span class="keyword">ON</span> Student</span><br><span class="line"><span class="keyword">FOR</span> <span class="keyword">UPDATE</span></span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">IF</span> <span class="keyword">UPDATE</span> (<span class="keyword">SID</span>)</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">PRINT <span class="string">&#x27;未经许可，不能修改学号！ &#x27;</span></span><br><span class="line"><span class="keyword">ROLLBACK</span></span><br><span class="line"><span class="keyword">END</span></span><br><span class="line"><span class="keyword">GO</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*为学生表Student 创建一个UPDATE 触发器，该触发器防止用户修改或删除表Student*/</span></span><br><span class="line"><span class="keyword">USE</span> EDUC</span><br><span class="line"><span class="keyword">GO</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TRIGGER</span> Student_update_1</span><br><span class="line"><span class="keyword">ON</span> Student</span><br><span class="line"><span class="keyword">FOR</span> <span class="keyword">UPDATE</span>, <span class="keyword">DELETE</span></span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">PRINT <span class="string">&#x27; 未经许可，不能修改或删除！&#x27;</span></span><br><span class="line"><span class="keyword">ROLLBACK</span></span><br><span class="line"><span class="keyword">END</span></span><br><span class="line"><span class="keyword">GO</span></span><br></pre></td></tr></table></figure><h2 id="DELETE触发器"><a href="#DELETE触发器" class="headerlink" title="DELETE触发器"></a>DELETE触发器</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*为课程表“Course ”创建DELETE 触发器Course_delete,当执行删除时激活,判断删除的课程号是否在选课表SC 中已被人选，已被选的课程不能删除。*/</span></span><br><span class="line"><span class="comment">---替代外键功能</span></span><br><span class="line"><span class="keyword">USE</span> EDUC</span><br><span class="line"><span class="keyword">GO</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TRIGGER</span> Course_delete</span><br><span class="line"><span class="keyword">ON</span> Course</span><br><span class="line"><span class="keyword">FOR</span> <span class="keyword">DELETE</span></span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">IF</span> <span class="keyword">EXISTS</span></span><br><span class="line">(</span><br><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">FROM</span> deleted <span class="keyword">JOIN</span> SC <span class="keyword">ON</span> deleted.CID = SC.CID</span><br><span class="line">)</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">        PRINT <span class="string">&#x27;--- 在选课表SC 中有该门课程，不能删除!---&#x27;</span></span><br><span class="line"><span class="keyword">ROLLBACK</span>  <span class="comment">/* 回滚，撤销所删除的数据行* */</span> /</span><br><span class="line"><span class="keyword">END</span></span><br></pre></td></tr></table></figure><h2 id="INSERT触发器"><a href="#INSERT触发器" class="headerlink" title="INSERT触发器"></a>INSERT触发器</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*为选课表SC 创建一个INSERT 触发器，当插入一条新记录时，如果输入的成绩 &gt; 100或  &lt; 0 ，则撤消该插入操作，并给出“成绩错误！”的提示信息。*/</span></span><br><span class="line"><span class="comment">-- 替代了check 约束：[Grade] &gt;=0 AND [Grade] &lt;=100</span></span><br><span class="line"><span class="keyword">USE</span> EDUC</span><br><span class="line"><span class="keyword">GO</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TRIGGER</span> SC_insert</span><br><span class="line"><span class="keyword">ON</span> SC</span><br><span class="line"><span class="keyword">FOR</span> <span class="keyword">INSERT</span></span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line"><span class="keyword">DECLARE</span> @g <span class="built_in">numeric</span>(<span class="number">5</span>,<span class="number">1</span>)</span><br><span class="line"><span class="keyword">SELECT</span> @g = inserted.Grade</span><br><span class="line"><span class="keyword">FROM</span> inserted</span><br><span class="line"><span class="keyword">IF</span> @g &gt; <span class="number">100</span> <span class="keyword">OR</span> @g &lt; <span class="number">0</span></span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">PRINT <span class="string">&#x27; ---- 成绩错误！----- &#x27;</span></span><br><span class="line"><span class="keyword">ROLLBACK</span></span><br><span class="line"><span class="keyword">END</span></span><br><span class="line"><span class="keyword">ELSE</span></span><br><span class="line">PRINT <span class="string">&#x27;该记录已被接受！&#x27;</span></span><br><span class="line"><span class="keyword">END</span></span><br><span class="line"><span class="keyword">GO</span></span><br></pre></td></tr></table></figure><h2 id="INSTEAD-OF触发器"><a href="#INSTEAD-OF触发器" class="headerlink" title="INSTEAD OF触发器"></a>INSTEAD OF触发器</h2><ul><li>AFTER 触发器是在触发语句执行后触发的，与AFTER触发器不同的是，INSTEAD OF 触发器触发时<code> 只执行触发器内部的SQL 语句</code> ，而 <code>不执行引起该触发器执行的SQL 语句</code> 。即，用“ “<code>Instead of  触发器</code>” 的执行来 替代 “<code>触发语句</code>” 的操作</li><li>一个表或视图中只能有一个INSTEAD OF 触发器。</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*创建表table1 ，值包含一列a ，在表中创建INSTEAD OF INSERT 触发器，当向表中插入记录时显示相应消息。*/</span></span><br><span class="line"><span class="keyword">USE</span> EDUC</span><br><span class="line"><span class="keyword">GO</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> table1 ( a <span class="built_in">int</span> )</span><br><span class="line"><span class="keyword">GO</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TRIGGER</span> table1_insert</span><br><span class="line"><span class="keyword">ON</span> table1</span><br><span class="line">INSTEAD <span class="keyword">OF</span> <span class="keyword">INSERT</span></span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line">PRINT <span class="string">&#x27;---Instead of trigger is working !---&#x27;</span></span><br></pre></td></tr></table></figure><h1 id="创建DDL触发器"><a href="#创建DDL触发器" class="headerlink" title="创建DDL触发器"></a>创建DDL触发器</h1><div class="note success flat"><p>DDL  触发器  —– 作用对象：数据库/ 服务器</p></div><ul><li>当 服务器或数据库生 中发生DDL（ 数据定义语言 ） 事件 时将自动执行这些触发器 。</li><li>DDL  事 件 主 要 是 以 CREATE 、ALTER 和 和DROP 开头的语句</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TRIGGER</span> &lt; 触发器名&gt;</span><br><span class="line"><span class="keyword">ON</span> <span class="keyword">ALL</span> <span class="keyword">SERVER</span> | <span class="keyword">DATABASE</span></span><br><span class="line"><span class="keyword">FOR</span>|<span class="keyword">AFTER</span> &lt; 事件类型或事件组&gt;[,…,n]</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line">&lt;T-<span class="keyword">SQL</span>语句或语句块&gt;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*设计DDL 触发器来防止数据库中的任一表被修改或删除。*/</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TRIGGER</span> safe_database</span><br><span class="line"><span class="keyword">ON</span> <span class="keyword">DATABASE</span></span><br><span class="line"><span class="keyword">FOR</span> ALTER_TABLE, DROP_TABLE</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">PRINT <span class="string">&#x27;------ 不能修改或删除表！如果必须要完成此</span></span><br><span class="line"><span class="string">操作，请先禁用触发器safe_database ！------&#x27;</span></span><br><span class="line"><span class="keyword">ROLLBACK</span></span><br><span class="line"><span class="keyword">END</span></span><br><span class="line"><span class="keyword">GO</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">若执行SQL 语句修改表：</span></span><br><span class="line"><span class="comment">ALTER TABLE Student</span></span><br><span class="line"><span class="comment">ADD Address varchar(50) NULL</span></span><br><span class="line"><span class="comment">或，执行SQL 语句删除表：</span></span><br><span class="line"><span class="comment">DROP TABLE SC</span></span><br><span class="line"><span class="comment">都会触发警告</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*创建服务器作用域的DDL 触发器，当删除一个数据库时，提示禁止该操作并回滚删除数据库的操作。*/</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TRIGGER</span> safety_server</span><br><span class="line"><span class="keyword">ON</span> <span class="keyword">ALL</span> <span class="keyword">SERVER</span></span><br><span class="line"><span class="keyword">AFTER</span> DROP_DATABASE</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line">PRINT <span class="string">&#x27;--- 不能删除该数据库！---&#x27;</span></span><br><span class="line"><span class="keyword">ROLLBACK</span></span><br></pre></td></tr></table></figure><h1 id="管理触发器"><a href="#管理触发器" class="headerlink" title="管理触发器"></a>管理触发器</h1><h2 id="查看触发器"><a href="#查看触发器" class="headerlink" title="查看触发器"></a>查看触发器</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sp_helptext &#x27;触发器名称&#x27; <span class="comment">-- 显示触发器的源代码</span></span><br><span class="line">sp_help &#x27;触发器名称&#x27;  <span class="comment">--显示触发器的一般信息( 名称、所有者、类型和创建时间)</span></span><br><span class="line">sp_depends &#x27;触发器名称&#x27; <span class="comment">--显示该触发器所引用的表</span></span><br><span class="line">sp_depends &#x27;表名&#x27;    <span class="comment">--显示指定的表所涉及到的所有触发器</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*查询数据库EDUC 的触发器“Course_delete ”的一般信息 （名称、所有者、类型和创建时间） */</span></span><br><span class="line">sp_help Course_delete</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*查询数据库EDUC 的触发器“Course_delete ”的依赖关系 （显示该触发器所引用的表） 。*/</span></span><br><span class="line">sp_depends Course_delete</span><br></pre></td></tr></table></figure><h2 id="修改触发器"><a href="#修改触发器" class="headerlink" title="修改触发器"></a>修改触发器</h2><ul><li><p>修改DML 触发器的语法格式</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TRIGGER</span> &lt; 触发器名&gt;</span><br><span class="line"><span class="keyword">ON</span> &lt; 表名| 视图名&gt;</span><br><span class="line"><span class="keyword">FOR</span> [<span class="keyword">AFTER</span> | INSTEAD <span class="keyword">OF</span> ]</span><br><span class="line">&#123; [ <span class="keyword">DELETE</span> ] [ , ] [ <span class="keyword">INSERT</span> ] [ , ] [ <span class="keyword">UPDATE</span> ] &#125;</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line">&lt;T-<span class="keyword">SQL</span>语句或语句块&gt;</span><br></pre></td></tr></table></figure></li><li><p>修改DDL触发器的语法格式 触发器的语法格式</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TRIGGER</span> &lt; 触发器名&gt;</span><br><span class="line"><span class="keyword">ON</span> <span class="keyword">ALL</span> <span class="keyword">SERVER</span> | <span class="keyword">DATABASE</span></span><br><span class="line"><span class="keyword">FOR</span>|<span class="keyword">AFTER</span> &lt; 事件类型或事件组&gt;[,…,n]</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line">&lt;T-<span class="keyword">SQL</span>语句或语句块&gt;</span><br></pre></td></tr></table></figure><h2 id="删除触发器"><a href="#删除触发器" class="headerlink" title="删除触发器"></a>删除触发器</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TRIGGER</span> 触发器</span><br></pre></td></tr></table></figure><h2 id="禁用与启用触发器"><a href="#禁用与启用触发器" class="headerlink" title="禁用与启用触发器"></a>禁用与启用触发器</h2></li><li><p>当暂时不需要某个触发器时，可将其禁用。禁用触发器的语法格式如下：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">DISABLE TRIGGER &lt; 触发器名&gt;</span><br><span class="line">ON 对象名|DATABASE|ALL SERVER</span><br><span class="line"><span class="comment">-- 例如</span></span><br><span class="line">DISABLE TRIGGER Course_delete</span><br><span class="line">ON Course</span><br></pre></td></tr></table></figure></li><li><p>已禁用的触发器可以被重新启用。启用触发器 的语法格式如下：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ENABLE TRIGGER &lt; 触发器名&gt;</span><br><span class="line">ON 对象名|DATABASE|ALL SERVER</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;触发器&quot;&gt;&lt;a href=&quot;#触发器&quot; class=&quot;headerlink&quot; title=&quot;触发器&quot;&gt;&lt;/a&gt;触发器&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;触发器是 &lt;code&gt;一种特殊类型的存储过程&lt;/code&gt; ：一般存储过程可直接调用执行；而触发器主要是通过事件(</summary>
      
    
    
    
    <category term="Java后端" scheme="http://xiaoliblog.cn/categories/Java%E5%90%8E%E7%AB%AF/"/>
    
    <category term="SQLServer" scheme="http://xiaoliblog.cn/categories/Java%E5%90%8E%E7%AB%AF/SQLServer/"/>
    
    
    <category term="SQLServer" scheme="http://xiaoliblog.cn/tags/SQLServer/"/>
    
  </entry>
  
  <entry>
    <title>SQLServer📦存储过程</title>
    <link href="http://xiaoliblog.cn/2021/01/18/%E5%90%8E%E7%AB%AF/SQLServer%E6%95%B0%E6%8D%AE%E5%BA%93/SQLServer_%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B/"/>
    <id>http://xiaoliblog.cn/2021/01/18/%E5%90%8E%E7%AB%AF/SQLServer%E6%95%B0%E6%8D%AE%E5%BA%93/SQLServer_%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B/</id>
    <published>2021-01-18T08:07:40.020Z</published>
    <updated>2021-01-18T10:36:58.723Z</updated>
    
    <content type="html"><![CDATA[<h1 id="存储过程"><a href="#存储过程" class="headerlink" title="存储过程"></a>存储过程</h1><ul><li><p>一组<code>编译好的 、 存储在服务器上的</code>和 <code>完成特定功能的T-SQL语句集合</code>，是某数据库的对象</p></li><li><p>客户端应用程序可以通过指定存储过程的名字、并给出参数来<code> 调用</code>存储过程</p></li></ul><div class="tabs" id="ccgc"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#ccgc-1">存储过程优点</button></li><li class="tab"><button type="button" data-href="#ccgc-2">存储过程分类</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="ccgc-1"><ul><li>存储过程属于模块化编程（标准组件式编程）</li><li>可 重复使用编程代码，减少编程开发时间</li><li>可以在单个存储过程中执行一系列  SQL 语句 </li><li>存储过程在创建时即在服务器上进行预编译，所以执行速度较快。 如果某一操作包含大量的T-SQL代码，那么使用存储过程要比使用T-SQL批处理的执行速度快很多</li></ul><button type="button" class="tab-to-top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="ccgc-2"><ul><li>系统提供的存储过程<br>  例如sp_rename( 表的重命名)、 sp_renamedb( 库的重命名)、 sp_help 、sp_changedbowner等</li><li>用户定义的存储过程</li><li>扩展存储过程<br>扩展存储过程是以在SQL Server环境之外执行的动态链接库（DLL ，Dynamic-Link Libraries）来现的，通常以前缀xp_开头。扩展存储过程用与存储过程相似的方式来执行。</li></ul><button type="button" class="tab-to-top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="使用T-SQL创建存储过程"><a href="#使用T-SQL创建存储过程" class="headerlink" title="使用T-SQL创建存储过程"></a>使用T-SQL创建存储过程</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> PROC[EDURE] &lt; 过程名&gt;</span><br><span class="line">[@名 形参名  数据类型,…][,]</span><br><span class="line">[@名 变参名  数据类型 <span class="keyword">OUTPUT</span>,…]</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line">[<span class="keyword">BEGIN</span>]</span><br><span class="line">T-<span class="keyword">SQL</span> 语句</span><br><span class="line">[<span class="keyword">END</span>]</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*(不带参数)为数据库“Library”创建一个多表查询的存储过程，查询出读者为“程鹏”的借阅信息。*/</span></span><br><span class="line"><span class="keyword">USE</span> <span class="keyword">Library</span></span><br><span class="line"><span class="keyword">GO</span></span><br><span class="line"><span class="keyword">CREATE</span> PROC borrowed_book1</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line"><span class="keyword">SELECT</span> r.RID, r.Rname, k.BID, k.Bname, b.LendDate</span><br><span class="line"><span class="keyword">FROM</span> Reader r <span class="keyword">JOIN</span> Borrow b <span class="keyword">ON</span> r.RID=b.RID</span><br><span class="line"><span class="keyword">JOIN</span> Book k <span class="keyword">ON</span> b.BID=k.BID</span><br><span class="line"><span class="keyword">WHERE</span> Rname = <span class="string">&#x27; 程鹏&#x27;</span></span><br><span class="line"><span class="keyword">END</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 调用</span></span><br><span class="line">EXEC borrowed_book1</span><br><span class="line"><span class="comment">-- 或</span></span><br><span class="line">borrowed_book1</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*(带输入参数)为数据库“Library”创建一个查询某读者（姓名在执行存储过程时给出）借阅情况的存储过程。*/</span></span><br><span class="line"><span class="keyword">USE</span> <span class="keyword">Library</span></span><br><span class="line"><span class="keyword">GO</span></span><br><span class="line"><span class="keyword">CREATE</span> PROC borrowed_book2</span><br><span class="line">@<span class="keyword">name</span> <span class="built_in">varchar</span>(<span class="number">10</span>)  <span class="comment">-- 输入形参</span></span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line"><span class="keyword">SELECT</span> r.RID, r.Rname, b.BID, k.Bname, b.LendDate</span><br><span class="line"><span class="keyword">FROM</span> Reader r <span class="keyword">JOIN</span> Borrow b <span class="keyword">ON</span> r.RID=b.RID</span><br><span class="line"><span class="keyword">JOIN</span> Book k <span class="keyword">ON</span> b.BID=k. BID</span><br><span class="line"><span class="keyword">WHERE</span> Rname = @<span class="keyword">name</span></span><br><span class="line"><span class="keyword">END</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 调用</span></span><br><span class="line">EXEC borrowed_book2 <span class="string">&#x27;程鹏&#x27;</span> <span class="comment">-- 实参 ( 常量)</span></span><br><span class="line"><span class="comment">--或</span></span><br><span class="line">borrowed_book2 <span class="string">&#x27;程鹏&#x27;</span> <span class="comment">-- 实参 ( 常量)</span></span><br><span class="line"><span class="comment">--或</span></span><br><span class="line"><span class="keyword">DECLARE</span> @temp1 <span class="built_in">char</span>(<span class="number">20</span>)</span><br><span class="line"><span class="keyword">SET</span> @temp1 = <span class="string">&#x27;程鹏&#x27;</span></span><br><span class="line">EXEC borrowed_book2 @temp1 <span class="comment">-- 实参 (变量)</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*(带输出参数)为数据库“Library”创建一个查询某出版社图书总价值和平均价值的存储过程*/</span></span><br><span class="line"><span class="keyword">CREATE</span> PROC book_price <span class="comment">-- 创建存储过程</span></span><br><span class="line">@Publisher <span class="keyword">nvarchar</span>(<span class="number">28</span>), <span class="comment">-- 输入参数</span></span><br><span class="line">@SUMPrice <span class="built_in">decimal</span>(<span class="number">9</span>,<span class="number">2</span>) <span class="keyword">OUTPUT</span>, <span class="comment">-- 输出参数1</span></span><br><span class="line">@AVGPrice <span class="built_in">decimal</span>(<span class="number">9</span>,<span class="number">2</span>) <span class="keyword">OUTPUT</span> <span class="comment">-- 输出参数2</span></span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line"><span class="keyword">SELECT</span> @SUMPrice = <span class="keyword">SUM</span>(price)</span><br><span class="line"><span class="keyword">FROM</span> Book</span><br><span class="line"><span class="keyword">WHERE</span> Publisher = @Publisher <span class="comment">-- 输出参数1 存储图书总价值</span></span><br><span class="line"><span class="keyword">SELECT</span> @AVGPrice = <span class="keyword">AVG</span>(price)</span><br><span class="line"><span class="keyword">FROM</span> Book</span><br><span class="line"><span class="keyword">WHERE</span> Publisher = @Publisher <span class="comment">-- 输出参数2存 储图书平均价值</span></span><br><span class="line"><span class="keyword">END</span></span><br></pre></td></tr></table></figure><h1 id="T-SQL修改存储器"><a href="#T-SQL修改存储器" class="headerlink" title="T-SQL修改存储器"></a>T-SQL修改存储器</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> PROC[EDURE] &lt; 过程名&gt;</span><br><span class="line">[@形参名 数据类型,…][,]</span><br><span class="line">[@变参名  数据类型 <span class="keyword">OUTPUT</span>,…]</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line">[<span class="keyword">BEGIN</span>]</span><br><span class="line">T-<span class="keyword">SQL</span>语句 </span><br><span class="line">[<span class="keyword">END</span>]</span><br></pre></td></tr></table></figure><h1 id="T-SQL删除存储器"><a href="#T-SQL删除存储器" class="headerlink" title="T-SQL删除存储器"></a>T-SQL删除存储器</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> PROC[EDURE] 存储过程名[,...,n]</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;存储过程&quot;&gt;&lt;a href=&quot;#存储过程&quot; class=&quot;headerlink&quot; title=&quot;存储过程&quot;&gt;&lt;/a&gt;存储过程&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;一组&lt;code&gt;编译好的 、 存储在服务器上的&lt;/code&gt;和 &lt;code&gt;完成特定功能的T-SQL语句集</summary>
      
    
    
    
    <category term="Java后端" scheme="http://xiaoliblog.cn/categories/Java%E5%90%8E%E7%AB%AF/"/>
    
    <category term="SQLServer" scheme="http://xiaoliblog.cn/categories/Java%E5%90%8E%E7%AB%AF/SQLServer/"/>
    
    
    <category term="SQLServer" scheme="http://xiaoliblog.cn/tags/SQLServer/"/>
    
  </entry>
  
  <entry>
    <title>SQLServer📦索引</title>
    <link href="http://xiaoliblog.cn/2021/01/18/%E5%90%8E%E7%AB%AF/SQLServer%E6%95%B0%E6%8D%AE%E5%BA%93/SQLServer_%E7%B4%A2%E5%BC%95/"/>
    <id>http://xiaoliblog.cn/2021/01/18/%E5%90%8E%E7%AB%AF/SQLServer%E6%95%B0%E6%8D%AE%E5%BA%93/SQLServer_%E7%B4%A2%E5%BC%95/</id>
    <published>2021-01-18T07:55:32.924Z</published>
    <updated>2021-01-18T08:07:25.364Z</updated>
    
    <content type="html"><![CDATA[<h1 id="索引"><a href="#索引" class="headerlink" title="索引"></a>索引</h1><p>索引是以表列为基础的数据库对象，它保存着表中排序的索引列，并且记录了索引列在数据表中的物理存储位置，实现了表中数据的逻辑排序，其主要目的是提高SQL Server系统的性能，加快数据的查询速度和减少系统的响应时间</p><div class="tabs" id="juzhisuoy"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#juzhisuoy-1">聚集索引(Clustered)</button></li><li class="tab"><button type="button" data-href="#juzhisuoy-2">非聚集索引(Noncludstered)</button></li><li class="tab"><button type="button" data-href="#juzhisuoy-3">区别</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="juzhisuoy-1"><p>根据键值的大小对数据行进行了 <code>物理排序 </code>，使得具有相同键值的记录在物理上聚集在了一起。每个表只能有一个聚集索引。</p><button type="button" class="tab-to-top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="juzhisuoy-2"><p>数据行并没有按物理顺序进行排序。每个表可以有多个非聚集索引。</p><button type="button" class="tab-to-top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="juzhisuoy-3"><ul><li>通常情况，聚集索引的查找速度略高于非聚集索引；但在处理区间查询、排序时，聚集索引的查找速度有明显优势。</li><li>聚集索引维护代价更大，当表数据增删改时，需要重新对数据行进行物理排序。</li></ul><button type="button" class="tab-to-top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="T-SQL创建索引"><a href="#T-SQL创建索引" class="headerlink" title="T-SQL创建索引"></a>T-SQL创建索引</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> [<span class="keyword">UNIQUE</span>][CLUSTERED|NONCLUSTERED] <span class="keyword">INDEX</span></span><br><span class="line">索引名</span><br><span class="line"><span class="keyword">ON</span> &lt; 表名或视图名&gt; （列名[<span class="keyword">ASC</span>|<span class="keyword">DESC</span>][,…,n]） ）</span><br><span class="line">[ <span class="keyword">WITH</span> &lt; 索引项&gt;</span><br><span class="line">| [,] [FILLFACTOR= 填充因子]</span><br><span class="line">| [[,] DROP_EXISTING=&#123;<span class="keyword">ON</span>|<span class="keyword">OFF</span>&#125;]</span><br><span class="line">… ]</span><br></pre></td></tr></table></figure><p>为指定的表或视图按照指定的列（ 索引键 ）、升序（ASC） 、降序（DESC） 创建唯一 、 聚集或非聚集的索引</p><ul><li>UNIQUE：指定创建的索引为唯一索引。</li><li>CLUSTERED|NONCLUSTERED：指定创建的是聚集索引还 是非聚集索引 。</li><li>ASC|DESC：确定某个具体的索引列是升序还是降序 ,默认为升序（ASC） 。</li><li>&lt; 索引项&gt;：可以指定填充索引的内部节点行数  、 填充因子等 。</li><li>DROP_EXISTING：指定是否删除先前存在的并且与创建索引同名的索引 </li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*为了提高依据图书名查找图书的速度,在数据库“Library”中为图书表“Book”创建一个不唯一 、非聚集索引“Bookindex”,索引键为“Bname”,升序排列*/</span></span><br><span class="line"><span class="keyword">USE</span> <span class="keyword">Library</span></span><br><span class="line"><span class="keyword">GO</span></span><br><span class="line"><span class="keyword">CREATE</span> NONCLUSTERED <span class="keyword">INDEX</span> Bookindex</span><br><span class="line"><span class="keyword">ON</span> Book(Bname <span class="keyword">ASC</span>)</span><br></pre></td></tr></table></figure><h1 id="T-SQL删除索引"><a href="#T-SQL删除索引" class="headerlink" title="T-SQL删除索引"></a>T-SQL删除索引</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">INDEX</span> 表名.索引名</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*删除表“Book ”的索引“Bookindex”*/</span></span><br><span class="line"><span class="keyword">USE</span> <span class="keyword">Library</span></span><br><span class="line"><span class="keyword">GO</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">INDEX</span> Book.Bookindex</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;索引&quot;&gt;&lt;a href=&quot;#索引&quot; class=&quot;headerlink&quot; title=&quot;索引&quot;&gt;&lt;/a&gt;索引&lt;/h1&gt;&lt;p&gt;索引是以表列为基础的数据库对象，它保存着表中排序的索引列，并且记录了索引列在数据表中的物理存储位置，实现了表中数据的逻辑排序，其主要目的是提</summary>
      
    
    
    
    <category term="Java后端" scheme="http://xiaoliblog.cn/categories/Java%E5%90%8E%E7%AB%AF/"/>
    
    <category term="SQLServer" scheme="http://xiaoliblog.cn/categories/Java%E5%90%8E%E7%AB%AF/SQLServer/"/>
    
    
    <category term="SQLServer" scheme="http://xiaoliblog.cn/tags/SQLServer/"/>
    
  </entry>
  
  <entry>
    <title>SQLServer📦T-SQL编程基础</title>
    <link href="http://xiaoliblog.cn/2021/01/18/%E5%90%8E%E7%AB%AF/SQLServer%E6%95%B0%E6%8D%AE%E5%BA%93/SQLServer_T-SQL%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/"/>
    <id>http://xiaoliblog.cn/2021/01/18/%E5%90%8E%E7%AB%AF/SQLServer%E6%95%B0%E6%8D%AE%E5%BA%93/SQLServer_T-SQL%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/</id>
    <published>2021-01-18T07:05:10.408Z</published>
    <updated>2021-01-18T07:54:56.101Z</updated>
    
    <content type="html"><![CDATA[<h1 id="T-SQL编程基础"><a href="#T-SQL编程基础" class="headerlink" title="T-SQL编程基础"></a>T-SQL编程基础</h1><h2 id="标识符"><a href="#标识符" class="headerlink" title="标识符"></a>标识符</h2><ul><li>“＠”开头：局部变量、函数的参数</li><li>“＠＠”开头：全局变量</li><li>“#”开头：临时表、一个存储过程 ”</li><li>“##”开头：全局的临时数据库对象 ”</li></ul><h2 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*多行注释*/</span></span><br><span class="line"><span class="comment">-- 单行注释</span></span><br></pre></td></tr></table></figure><h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@e06f98f89495c00339f0855282227e96e438baee/2021/01/18/d9c4b2d687347bddae5f341cbacd2ca3.png"></p><h1 id="表达式"><a href="#表达式" class="headerlink" title="表达式"></a>表达式</h1><h2 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h2><p>常量也称为 文字值或标量值，是表示一个特定数据值的符号<br>常量的格式取决于它所表示值的数据类型<br><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@0a3f049aa62ff0aea29532dbb013aee9a6862065/2021/01/18/c1303975fba1a33b487627ef203a129e.png"></p><h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><p>变量是指在程序运行过程中其值可以改变的量<br>T-SQL的变量分为：<code>  局部变量</code> 、<code>全局变量</code></p><h3 id="局部变量"><a href="#局部变量" class="headerlink" title="局部变量"></a>局部变量</h3><ul><li><p>局部变量是<code> 用户定义的变量</code> ，其<code> 作用范围仅在程序内部</code></p></li><li><p>在程序中通常用来存储 <code>从表中查询到的数据</code> 或暂存 <code>程序执行过程中的数据 </code></p></li><li><p><strong>declare声明</strong></p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DECLARE</span> @ 变量名<span class="number">1</span> 数据类型, @ 变量名<span class="number">2</span> 数据类型, … , @ 变量名n </span><br></pre></td></tr></table></figure><ul><li><strong>select赋值</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> @ 变量名<span class="number">1</span>= 表达式<span class="number">1</span>, @ 变量名<span class="number">2</span>= 表达式<span class="number">2</span>, … , @ 变量名n=表达式n</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*声明一个变长字符型变量@var1,用SELECT赋值语句为它赋值从表“Reader”中查询出编号为‘2003216008’的读者姓名,再用SELECT输出语句输出变量@var1的值*/</span></span><br><span class="line"><span class="keyword">USE</span> <span class="keyword">Library</span></span><br><span class="line"><span class="keyword">DECLARE</span> @var1 <span class="built_in">varchar</span>(<span class="number">8</span>) <span class="comment">-- 声明局部变量</span></span><br><span class="line"><span class="keyword">SELECT</span> @var1 = Rname <span class="comment">-- 将查询的结果赋值给局部变量</span></span><br><span class="line"><span class="keyword">FROM</span> Reader</span><br><span class="line"><span class="keyword">WHERE</span> RID=<span class="string">&#x27;2003216008&#x27;</span></span><br><span class="line"><span class="keyword">SELECT</span> @var1 <span class="keyword">AS</span> <span class="string">&#x27; 读者姓名&#x27;</span> <span class="comment">-- 显示局部变量结果</span></span><br></pre></td></tr></table></figure><ul><li><strong>Set赋值</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SET</span> @ 变量名 = 表达式 </span><br><span class="line"><span class="comment">-- SET 赋值语句只能给一个变量赋值！</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 用SET赋值语句为局部变量@no赋值，再用SELECT查询语句查询出读者表中读者号为@no的读者信息*/</span></span><br><span class="line"><span class="keyword">USE</span> <span class="keyword">Library</span></span><br><span class="line"><span class="keyword">DECLARE</span> @<span class="keyword">no</span> <span class="built_in">varchar</span>(<span class="number">10</span>) <span class="comment">-- 局部变量声明</span></span><br><span class="line"><span class="keyword">SET</span> @<span class="keyword">no</span>=<span class="string">&#x27;2004060003&#x27;</span> <span class="comment">-- 局部变量赋值</span></span><br><span class="line"><span class="keyword">SELECT</span> RID, Rname <span class="comment">-- 查询语句</span></span><br><span class="line"><span class="keyword">FROM</span> Reader</span><br><span class="line"><span class="keyword">WHERE</span> RID= @<span class="keyword">no</span> <span class="comment">--查询中引用局部变量</span></span><br></pre></td></tr></table></figure><h3 id="全局变量"><a href="#全局变量" class="headerlink" title="全局变量"></a>全局变量</h3><ul><li>全局变量是<code>SQL Server系统提供并赋值 </code>的变量</li><li>用户不能建立全局变量 ，也不能用SET 赋值语句和SELECT赋值语句修改全局变量的值 。</li><li>通常可以将全局变量的值赋给局部变量 ， 以便保存和处理 </li><li>全局变量以<code>@@</code>开头 ， 例如 ， 全局变量<code>@@servername</code>提供 服务器名 ， 全局变量<code>@@version</code> 提供SQL Server的版本信息，<code>@@language</code>提供SQL Server的语言信息</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*显示SQL Server的版本*/</span></span><br><span class="line"><span class="keyword">SELECT</span> @@<span class="keyword">version</span></span><br></pre></td></tr></table></figure><h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><h3 id="聚合函数"><a href="#聚合函数" class="headerlink" title="聚合函数"></a>聚合函数</h3><p>常用聚合函数：<br>COUNT 、SUM 、AVG 、MAX 、标准偏差（ 计算标准偏差（STDEV ）、方差（VAR）等</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">USE</span> EDUC</span><br><span class="line"><span class="keyword">GO</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">AVG</span>(AScores) <span class="keyword">AS</span> 平均分,</span><br><span class="line"><span class="keyword">STDEV</span>(AScores) <span class="keyword">AS</span> 标准偏差 </span><br><span class="line"><span class="keyword">FROM</span> Student</span><br></pre></td></tr></table></figure><h3 id="日期函数"><a href="#日期函数" class="headerlink" title="日期函数"></a>日期函数</h3><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@b1fa8cdf1ddf695a8e552c9cbaa534cfcee0310a/2021/01/18/5db23444d9931e775643283c68d27877.png"></p><ul><li><strong>datename()</strong><br>DATENAME( 日期元素, 日期)函数以<code>字符串</code>的形式 返回指定时间的“日期元素”方面的信息</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SET</span> <span class="keyword">LANGUAGE</span> us_english</span><br><span class="line"><span class="keyword">DECLARE</span> @StatementDate <span class="built_in">date</span></span><br><span class="line"><span class="keyword">SET</span> @StatementDate = <span class="string">&#x27;2012-7-27&#x27;</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DATENAME</span>(DW,@StatementDate) <span class="keyword">AS</span> <span class="string">&#x27;WEEKDAY&#x27;</span></span><br></pre></td></tr></table></figure><ul><li><strong>datepart()</strong><br>DATEPART( 日期元素, 日期) 函数返回“日期元素”指定的日期部分的<code>整数</code></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DECLARE</span> @WhatsTheDay <span class="built_in">date</span></span><br><span class="line"><span class="keyword">SET</span> @WhatsTheDay = <span class="string">&#x27;2012/7/27&#x27;</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line"><span class="keyword">CAST</span>( <span class="keyword">DATEPART</span>(yyyy,@WhatsTheDay) <span class="keyword">AS</span> <span class="built_in">char</span>(<span class="number">4</span>) )+<span class="string">&#x27; 年&#x27;</span>+</span><br><span class="line"><span class="keyword">CAST</span>( <span class="keyword">DATEPART</span>(mm,@WhatsTheDay) <span class="keyword">AS</span> <span class="built_in">char</span>(<span class="number">2</span>) )+<span class="string">&#x27; 月&#x27;</span>+</span><br><span class="line"><span class="keyword">CAST</span>( <span class="keyword">DATEPART</span>(dd,@WhatsTheDay) <span class="keyword">AS</span> <span class="built_in">varchar</span>(<span class="number">2</span>) )+<span class="string">&#x27; 日&#x27;</span></span><br><span class="line"><span class="keyword">AS</span> <span class="string">&#x27; 伦敦奥运会&#x27;</span></span><br></pre></td></tr></table></figure><ul><li><strong>getdate()</strong><br>GETDATE() 函数返回当前日期。<br>YEAR( 日期）、MONTH( 日期）和DAY (日期)函数返回日期的年、月及天数</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line"><span class="keyword">GETDATE</span>() <span class="keyword">AS</span>  当前日期, <span class="comment">-- 返回当前日期</span></span><br><span class="line"><span class="keyword">YEAR</span>(<span class="keyword">GETDATE</span>()) <span class="keyword">AS</span>  年, <span class="comment">-- 取当前日期的年</span></span><br><span class="line"><span class="keyword">MONTH</span>(<span class="keyword">GETDATE</span>()) <span class="keyword">AS</span>  月, <span class="comment">-- 取当前日期的月</span></span><br><span class="line"><span class="keyword">DAY</span>(<span class="keyword">GETDATE</span>()) <span class="keyword">AS</span> 日 日 <span class="comment">-- 取当前日期的天数</span></span><br></pre></td></tr></table></figure><h3 id="字符串函数"><a href="#字符串函数" class="headerlink" title="字符串函数"></a>字符串函数</h3><ul><li><strong>left()</strong><br>LEFT(字符表达式,整型表达式)函数返回字符串中从左边开始的指定个数的字符</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*假设某图书的国际标准书号ISBN 为：978-7-115-19345-9，取前三位表示是图书。*/</span></span><br><span class="line"><span class="keyword">DECLARE</span> @StringTest <span class="built_in">char</span>(<span class="number">17</span>) <span class="comment">-- 声明定长字符型的变量</span></span><br><span class="line"><span class="keyword">SET</span> @StringTest=<span class="string">&#x27;978-7-115-19345-2&#x27;</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">LEFT</span>(@StringTest, <span class="number">3</span>) <span class="comment">--函数返回左边三位字符978</span></span><br></pre></td></tr></table></figure><ul><li><strong>right()</strong><br>RIGHT( 字符表达式, 整型表达式) 函数返回字符串从右边开始的指定个数的字符</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*假设某图书的国际标准书号ISBN为：978-7-115-19345-9，取最右一位校验码。*/</span></span><br><span class="line"><span class="keyword">DECLARE</span> @StringTest <span class="built_in">char</span>(<span class="number">17</span>) <span class="comment">-- 声明定长字符型的变量</span></span><br><span class="line"><span class="keyword">SET</span> @StringTest=<span class="string">&#x27;978-7-115-19345-9&#x27;</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">RIGHT</span>(@StringTest, <span class="number">1</span>) <span class="keyword">AS</span> ‘校验码’  <span class="comment">--函数返回右边一位字符9</span></span><br></pre></td></tr></table></figure><ul><li><strong>substring()</strong><br>SUBSTRING( 字符表达式, 起始点,n) 函数返回字符表达式中从“起始点”开始的n 个字符。</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*假设某图书的国际标准书号ISBN 为：978-7-115-19345-9，从第七位取三位字符表示出版社编号。*/</span></span><br><span class="line"><span class="keyword">DECLARE</span> @StringTest <span class="built_in">char</span>(<span class="number">17</span>) <span class="comment">-- 声明定长字符型的变量</span></span><br><span class="line"><span class="keyword">SET</span> @StringTest=<span class="string">&#x27;978-7-115-19345-9&#x27;</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">SUBSTRING</span>(@StringTest, <span class="number">7</span>, <span class="number">3</span>) <span class="keyword">AS</span> <span class="string">&#x27; 出版社编号&#x27;</span></span><br><span class="line"><span class="comment">-- 函数返回第七位开始的三个字符 115</span></span><br></pre></td></tr></table></figure><ul><li><strong>len()</strong><br>LEN( 字符表达式) 函数返回某个指定字符串的长度，<code>不计字符串后的空格</code></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DECLARE</span> @StringTest <span class="built_in">char</span>(<span class="number">20</span>)</span><br><span class="line"><span class="keyword">SET</span> @StringTest=<span class="string">&#x27;SQL Server &#x27;</span> <span class="comment">-- 注意不计后面的空格</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">LEN</span>(@StringTest) <span class="keyword">AS</span> 字符串长度 字符串长度</span><br><span class="line"><span class="comment">--函数返回字符串长度 10</span></span><br></pre></td></tr></table></figure><h3 id="数据类型转换函数"><a href="#数据类型转换函数" class="headerlink" title="数据类型转换函数"></a>数据类型转换函数</h3><ul><li><strong>cast()</strong><br>CAST( 表达式 AS  数据类型)函数将表达式的类型转换为指定的数据类型。</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DECLARE</span> @StringTest <span class="keyword">nchar</span>(<span class="number">6</span>), @IntTest <span class="built_in">int</span></span><br><span class="line"><span class="keyword">SET</span> @StringTest=<span class="string">&#x27; 数据库成绩：&#x27;</span></span><br><span class="line"><span class="keyword">SET</span> @IntTest=<span class="number">90</span></span><br><span class="line"><span class="keyword">SELECT</span> @StringTest + <span class="keyword">CAST</span>( @IntTest <span class="keyword">AS</span> <span class="built_in">char</span>(<span class="number">4</span>) ) <span class="keyword">AS</span> 考试成绩</span><br><span class="line"><span class="comment">-- 整型转换为字符型</span></span><br></pre></td></tr></table></figure><ul><li><strong>convert()</strong><br>CONVERT( 数据类型( 长度), 表达式)函数将表达式的类型转换为指定的数据类型</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DECLARE</span> @StringTest <span class="keyword">nchar</span>(<span class="number">6</span>), @IntTest <span class="built_in">int</span></span><br><span class="line"><span class="keyword">SET</span> @StringTest=<span class="string">&#x27; 数据库成绩：&#x27;</span></span><br><span class="line"><span class="keyword">SET</span> @IntTest=<span class="number">90</span></span><br><span class="line"><span class="keyword">SELECT</span> @StringTest + <span class="keyword">CONVERT</span>( <span class="built_in">char</span>(<span class="number">4</span>), @IntTest ) <span class="keyword">AS</span> 考试成绩 </span><br><span class="line"><span class="comment">-- 整型转换为字符型</span></span><br></pre></td></tr></table></figure><h2 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h2><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@c8a344bfe6f1c5194cefeeb8d8b8633345b0da6b/2021/01/18/8cd441d03e805214eff2f68e82484b7f.png"></p><h1 id="流程控制语句"><a href="#流程控制语句" class="headerlink" title="流程控制语句"></a>流程控制语句</h1><h2 id="顺序语句"><a href="#顺序语句" class="headerlink" title="顺序语句"></a>顺序语句</h2><ul><li><strong>set语句</strong><br>除了用于<code>给局部变量赋值</code>，还可以<code>设定用户执行 T-SQL命令时 SQL Server的处理选项 </code>,一般有以下几种设定方式：<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SET</span> 选项 <span class="keyword">ON</span> ：选项开关打开</span><br><span class="line"><span class="keyword">SET</span> 选项 <span class="keyword">OFF</span> ：选项开关关闭</span><br><span class="line"><span class="keyword">SET</span> 选项 值：设定选项的具体值</span><br></pre></td></tr></table></figure></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SET</span> NOCOUNT &#123;<span class="keyword">ON</span>|<span class="keyword">OFF</span>&#125;</span><br><span class="line"><span class="comment">-- 阻止显示 受 受T-SQL  语句影响的行数的  消息</span></span><br><span class="line"><span class="keyword">SET</span> DATEFORMAT ymd <span class="comment">--- 将日期格式设置为年月日格式</span></span><br><span class="line"><span class="keyword">SET</span> <span class="keyword">LANGUAGE</span> 简体中文 <span class="comment">-- 将语言设定变更为简体中文</span></span><br></pre></td></tr></table></figure><ul><li><p><strong>Select输出语句</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> 表达式<span class="number">1</span>, 表达式<span class="number">2</span>, … ,表达式n</span><br></pre></td></tr></table></figure></li><li><p><strong>print输出语句</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PRINT 表达式</span><br></pre></td></tr></table></figure><p>PRINT命令向客户端返回 一个字符类型表达式的值，最长为255个字符。 </p></li></ul><h2 id="IF-ELSE语句"><a href="#IF-ELSE语句" class="headerlink" title="IF-ELSE语句"></a>IF-ELSE语句</h2><ul><li><strong>IF-ELSE</strong></li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">IF &lt; 逻辑表达式&gt;</span><br><span class="line">&lt; 命令行或程序块&gt; /*逻辑表达式为真时执行 */</span><br><span class="line">[ELSE [ 逻辑表达式]</span><br><span class="line">&lt; 命令行或程序块&gt;] /* 逻辑表达式为假时执行 */</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*用IF…ELSE语句查询图书中有没有英语书，如果图书中有英语书，统计其数量，否则显示没有英语书*/</span></span><br><span class="line"><span class="keyword">USE</span> <span class="keyword">Library</span></span><br><span class="line"><span class="keyword">GO</span></span><br><span class="line"><span class="comment">/* 如果图书中有英语书，统计其数量，否则显示没有英语书*/</span></span><br><span class="line"><span class="keyword">IF</span> <span class="keyword">EXISTS</span>( <span class="keyword">SELECT</span> * <span class="keyword">FROM</span> Book <span class="keyword">WHERE</span> Bname <span class="keyword">LIKE</span> <span class="string">&#x27;%英语%&#x27;</span> )</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">COUNT</span>(*) <span class="keyword">AS</span> 英语图书数量</span><br><span class="line"><span class="keyword">FROM</span> Book</span><br><span class="line"><span class="keyword">WHERE</span> Bname <span class="keyword">LIKE</span> <span class="string">&#x27;%英语%&#x27;</span></span><br><span class="line"><span class="keyword">ELSE</span></span><br><span class="line">PRINT <span class="string">&#x27;数据库中没有英语书’</span></span><br></pre></td></tr></table></figure><ul><li><strong>BEGIN-END</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*BEGIN…END语句在图书查询中的应用。*/</span></span><br><span class="line"><span class="keyword">DECLARE</span> @ebook <span class="built_in">int</span>, @cbook <span class="built_in">int</span></span><br><span class="line"><span class="keyword">IF</span> <span class="keyword">EXISTS</span>( <span class="keyword">SELECT</span> * <span class="keyword">FROM</span> Book <span class="keyword">WHERE</span> Bname <span class="keyword">like</span> <span class="string">&#x27;%英语%&#x27;</span> )</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line"><span class="keyword">SELECT</span> @ebook=<span class="keyword">COUNT</span>(*) <span class="keyword">FROM</span> Book</span><br><span class="line"><span class="keyword">WHERE</span> Bname <span class="keyword">LIKE</span> <span class="string">&#x27;%英语%&#x27;</span></span><br><span class="line">PRINT <span class="string">&#x27;英语书数量&#x27;</span> +</span><br><span class="line"><span class="keyword">RTRIM</span>( <span class="keyword">CAST</span>( @ebook <span class="keyword">AS</span> <span class="built_in">char</span>(<span class="number">4</span>) ) ) + <span class="string">&#x27;册&#x27;</span></span><br><span class="line"><span class="keyword">END</span></span><br><span class="line"><span class="keyword">ELSE</span></span><br><span class="line">PRINT <span class="string">&#x27;英语书没有!&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="WHILE语句"><a href="#WHILE语句" class="headerlink" title="WHILE语句"></a>WHILE语句</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">WHILE &lt; 逻辑表达式&gt;</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">&lt; 命令行或程序块&gt;</span><br><span class="line">[BREAK] <span class="comment">/* 终止整个While 语句的执行*/</span></span><br><span class="line">[CONTINUE] <span class="comment">/* 结束本次循环体的执行*/</span></span><br><span class="line"><span class="keyword">END</span></span><br></pre></td></tr></table></figure><ul><li>WHILE命令在设定的条件为真时会重复执行命令行或程序块，除非遇到逻辑表达式为假或遇到BREAK语句才跳出循环</li><li>CONTINUE 命令可以让程序跳过CONTINUE命令之后的语句，回到WHILE循环的第一行命令</li><li>BREAK 命令则让程序无条件跳出循环，结束WHILE命令的执行</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*用WHILE 实现1+2+……+100*/</span></span><br><span class="line"><span class="keyword">DECLARE</span> @x <span class="built_in">int</span>, @<span class="keyword">sum</span> <span class="built_in">int</span></span><br><span class="line"><span class="keyword">SET</span> @x=<span class="number">1</span></span><br><span class="line"><span class="keyword">SET</span> @<span class="keyword">sum</span>=<span class="number">0</span></span><br><span class="line"><span class="keyword">WHILE</span> @x&lt;=<span class="number">100</span></span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line"><span class="keyword">SET</span> @<span class="keyword">sum</span>=@<span class="keyword">sum</span>+@x</span><br><span class="line"><span class="keyword">SET</span> @x=@x+<span class="number">1</span></span><br><span class="line"><span class="keyword">END</span></span><br><span class="line">PRINT @<span class="keyword">sum</span>  <span class="comment">--5050</span></span><br></pre></td></tr></table></figure><h2 id="其他控制语句"><a href="#其他控制语句" class="headerlink" title="其他控制语句"></a>其他控制语句</h2><ul><li><p><strong>goto语句</strong><br>将执行语句无条件跳转到标签处，并从标签位置继续处理</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GOTO label</span><br></pre></td></tr></table></figure></li><li><p><strong>waitfor语句</strong><br>暂停程序执行，直到所设定的等待时间已过或所设定的时间已到才继续往下执行</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">WAITFOR</span><br><span class="line">DELAY &lt; 延时时间&gt; /*  设定等待时间 */</span><br><span class="line">|TIME &lt; 到达时间&gt; /*  设定等待到某一时刻 */</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*延迟30秒执行查询。*/</span></span><br><span class="line"><span class="keyword">USE</span> <span class="keyword">Library</span></span><br><span class="line"><span class="keyword">GO</span></span><br><span class="line">WAITFOR DELAY <span class="string">&#x27;00:00:30&#x27;</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> Reader</span><br></pre></td></tr></table></figure></li><li><p><strong>return</strong><br>RETURN命令用于结束当前程序的执行，并返回到一个调用它的查询，可指定一个返回值</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">RETURN &lt;整型表达式&gt;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*在以下程序段中，RETURN 命令返回@x和@y中较大的值。*/</span></span><br><span class="line"><span class="keyword">DECLARE</span> @x <span class="built_in">int</span>, @y <span class="built_in">int</span></span><br><span class="line"><span class="keyword">IF</span> @x &gt; @y <span class="comment">--@x&gt;@y 返回@x</span></span><br><span class="line"><span class="keyword">RETURN</span> @x</span><br><span class="line"><span class="keyword">ELSE</span> <span class="comment">-- 否则返回@y</span></span><br><span class="line"><span class="keyword">RETURN</span> @y</span><br></pre></td></tr></table></figure></li></ul><h2 id="CASE表达式"><a href="#CASE表达式" class="headerlink" title="CASE表达式"></a>CASE表达式</h2><ul><li><strong>简单CASE表达式</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">CASE &lt; 输入表达式&gt;</span><br><span class="line">WHEN &lt; when 表达式1&gt; THEN 结果表达式1</span><br><span class="line">WHEN &lt; when 表达式2&gt; THEN 结果表达式2</span><br><span class="line">…</span><br><span class="line">ELSE 结果表达式n</span><br><span class="line"><span class="keyword">END</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*显示各读者可借书的数量*/</span></span><br><span class="line"><span class="keyword">SELECT</span> Rname <span class="keyword">AS</span>  读者名,rt.Typename <span class="keyword">AS</span>  读者类型, 限借阅量=</span><br><span class="line"><span class="keyword">CASE</span> r.TypeID  <span class="comment">-- 根据TypeID 的值得到CASE 表达式的返回值</span></span><br><span class="line"><span class="keyword">WHEN</span> <span class="number">1</span> <span class="keyword">THEN</span> <span class="string">&#x27; 可以借6 本书!&#x27;</span></span><br><span class="line"><span class="keyword">WHEN</span> <span class="number">2</span> <span class="keyword">THEN</span> <span class="string">&#x27; 可以借4 本书!&#x27;</span></span><br><span class="line"><span class="keyword">WHEN</span> <span class="number">3</span> <span class="keyword">THEN</span> <span class="string">&#x27; 可以借3 本书!&#x27;</span></span><br><span class="line"><span class="keyword">ELSE</span> <span class="string">&#x27; 无规定&#x27;</span></span><br><span class="line"><span class="keyword">END</span></span><br><span class="line"><span class="keyword">FROM</span> Reader r, ReaderType rt</span><br><span class="line"><span class="keyword">WHERE</span> r.TypeID=rt.TypeID</span><br></pre></td></tr></table></figure><ul><li><strong>CASE搜索表达式</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">CASE</span><br><span class="line">WHEN 逻辑表达式1 THEN 结果表达式1</span><br><span class="line">WHEN 逻辑表达式2 THEN 结果表达式2</span><br><span class="line">…</span><br><span class="line">ELSE 结果表达式n</span><br><span class="line"><span class="keyword">END</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*显示各读者可借书的数量*/</span></span><br><span class="line"><span class="keyword">USE</span> <span class="keyword">Library</span></span><br><span class="line"><span class="keyword">GO</span></span><br><span class="line"><span class="keyword">SELECT</span> Rname, rt.Typename <span class="keyword">AS</span>  类型,  限借阅量=</span><br><span class="line"><span class="keyword">CASE</span> <span class="comment">-- 根据TypeID 的值得到CASE 表达式的值</span></span><br><span class="line"><span class="keyword">WHEN</span> r.TypeID =<span class="number">1</span> <span class="keyword">THEN</span> <span class="string">&#x27;可以借6 本书!&#x27;</span></span><br><span class="line"><span class="keyword">WHEN</span> r.TypeID =<span class="number">2</span> <span class="keyword">THEN</span> <span class="string">&#x27;可以借4 本书!&#x27;</span></span><br><span class="line"><span class="keyword">WHEN</span> r.TypeID =<span class="number">3</span> <span class="keyword">THEN</span> <span class="string">&#x27;可以借3 本书!&#x27;</span></span><br><span class="line"><span class="keyword">ELSE</span> <span class="string">&#x27; 无规定&#x27;</span></span><br><span class="line"><span class="keyword">END</span></span><br><span class="line"><span class="keyword">FROM</span> Reader r, ReaderType rt</span><br><span class="line"><span class="keyword">WHERE</span> r.TypeID=rt.TypeID</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;T-SQL编程基础&quot;&gt;&lt;a href=&quot;#T-SQL编程基础&quot; class=&quot;headerlink&quot; title=&quot;T-SQL编程基础&quot;&gt;&lt;/a&gt;T-SQL编程基础&lt;/h1&gt;&lt;h2 id=&quot;标识符&quot;&gt;&lt;a href=&quot;#标识符&quot; class=&quot;headerlink</summary>
      
    
    
    
    <category term="Java后端" scheme="http://xiaoliblog.cn/categories/Java%E5%90%8E%E7%AB%AF/"/>
    
    <category term="SQLServer" scheme="http://xiaoliblog.cn/categories/Java%E5%90%8E%E7%AB%AF/SQLServer/"/>
    
    
    <category term="SQLServer" scheme="http://xiaoliblog.cn/tags/SQLServer/"/>
    
  </entry>
  
  <entry>
    <title>SQLServer📦视图</title>
    <link href="http://xiaoliblog.cn/2021/01/17/%E5%90%8E%E7%AB%AF/SQLServer%E6%95%B0%E6%8D%AE%E5%BA%93/SQLServer_%E8%A7%86%E5%9B%BE/"/>
    <id>http://xiaoliblog.cn/2021/01/17/%E5%90%8E%E7%AB%AF/SQLServer%E6%95%B0%E6%8D%AE%E5%BA%93/SQLServer_%E8%A7%86%E5%9B%BE/</id>
    <published>2021-01-17T05:18:46.637Z</published>
    <updated>2021-01-18T07:04:38.082Z</updated>
    
    <content type="html"><![CDATA[<h1 id="视图"><a href="#视图" class="headerlink" title="视图"></a>视图</h1><ul><li><strong>视图（View ）是一个虚表</strong></li><li>是数据库 <code>用户看到并允许使用 </code>的局部数据的逻辑结构的描述，是保护数据库安全性的一个有力措施</li><li>视图来自<code>一或多个基本表</code>，视图是由 基本表（实表） 产生的“<code>虚表</code>”</li><li>视图并不在数据库中存储，视图内容在<code>其被使用( 被查询)</code> 时动态生成。</li></ul><div class="tabs" id="testshitu"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#testshitu-1">视图的特点</button></li><li class="tab"><button type="button" data-href="#testshitu-2">视图的作用</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="testshitu-1"><ul><li>视图是由基本表（实表）产生的虚表</li><li>视图的列可以来自不同的基本表</li><li>视图的建立和删除不影响基本表</li><li>对视图内容的修改 （添加、删除和更新） 间接影响基本表</li></ul><button type="button" class="tab-to-top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="testshitu-2"><ul><li>简化用户的操作，提高效率<br>  可以把经常使用的查询定义为视图（就像编写C函数）  ，使得用户不必为以后的操作每次都重新编写代码</li><li>提高数据库的安全性<br>  通过视图，用户只能查询和修改 他们所能见到的数据，而其它数据既看不见也取不到。</li><li>提高数据的独立性<br>  视图可以使应用程序和数据库表在一定程度上独立<br>  如果没有视图，应用一定是建立在表上的；有了视图之后，程序与数据库表被视图分隔开来</li></ul><button type="button" class="tab-to-top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="T-SQL创建视图"><a href="#T-SQL创建视图" class="headerlink" title="T-SQL创建视图"></a>T-SQL创建视图</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> 视图名</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">SELECT</span> 查询子句</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*在教务管理数据库“EDUC”中，由学生表“Student”创建出2012级“软件技术”专业学生的视图“View_Software1”*/</span></span><br><span class="line"><span class="keyword">USE</span> EDUC</span><br><span class="line"><span class="keyword">GO</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> View_Software1</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">SID</span>, Sname, Sex, Birthday, Specialty</span><br><span class="line"><span class="keyword">FROM</span> Student</span><br><span class="line"><span class="keyword">WHERE</span> Specialty = <span class="string">&#x27;软件技术&#x27;</span> <span class="keyword">AND</span> <span class="keyword">SID</span> <span class="keyword">LIKE</span> <span class="string">&#x27;2012%&#x27;</span></span><br></pre></td></tr></table></figure><h1 id="T-SQL修改视图"><a href="#T-SQL修改视图" class="headerlink" title="T-SQL修改视图"></a>T-SQL修改视图</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">VIEW</span> 视图名</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">SELECT</span> 查询子句</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*修改人民邮电出版社出版的图书视图“View_BookPostTel”，为视图指定列名*/</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">VIEW</span> View_BookPostTel( 图书编号, 书名, 作者,出版社, 价格) <span class="comment">-- 指定视图中每列的名称</span></span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">SELECT</span> BID,Bname,Author, Publisher, Price</span><br><span class="line"><span class="keyword">FROM</span> Book</span><br><span class="line"><span class="keyword">WHERE</span> Publisher =<span class="string">&#x27; 人民邮电出版社&#x27;</span></span><br></pre></td></tr></table></figure><h1 id="T-SQL删除视图"><a href="#T-SQL删除视图" class="headerlink" title="T-SQL删除视图"></a>T-SQL删除视图</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">VIEW</span> 视图名</span><br></pre></td></tr></table></figure><h1 id="T-SQL应用视图"><a href="#T-SQL应用视图" class="headerlink" title="T-SQL应用视图"></a>T-SQL应用视图</h1><h2 id="视图查询"><a href="#视图查询" class="headerlink" title="视图查询"></a>视图查询</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 通过视图“View_BookPostTel”，查询一本“ 人民邮电出版社 ”出版的名为“ 数据库应用</span></span><br><span class="line"><span class="comment">技术 ”的图书信息*/</span></span><br><span class="line"><span class="comment">-- 创建视图</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> View_BookPostTel</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">SELECT</span> BID,Bname,Author, Publisher,Price</span><br><span class="line"><span class="keyword">FROM</span> Book</span><br><span class="line"><span class="keyword">WHERE</span> Publisher =<span class="string">&#x27;人民邮电出版社&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 应用视图</span></span><br><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">FROM</span> View_BookPostTel  <span class="comment">--查询来自视图</span></span><br><span class="line"><span class="keyword">WHERE</span> 书名=<span class="string">&#x27;数据库应用技术&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="视图添加"><a href="#视图添加" class="headerlink" title="视图添加"></a>视图添加</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 通过视图“View_BookPostTel”添加一本人民邮电出版社出版的名为“SQL Server 2008</span></span><br><span class="line"><span class="comment">数据库设计与实现”的图书。*/</span></span><br><span class="line"><span class="keyword">INSERT</span> View_BookPostTel</span><br><span class="line"><span class="keyword">VALUES</span> (<span class="string">&#x27;TP311.138/231&#x27;</span>, <span class="string">&#x27;SQL Server 2008数据库设计与实现&#x27;</span>, <span class="string">&#x27;Louis Davidson&#x27;</span>, <span class="string">&#x27;人民邮电出版社&#x27;</span>, <span class="string">&#x27;89.00&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="视图更新"><a href="#视图更新" class="headerlink" title="视图更新"></a>视图更新</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*通过视图“View_BookPostTel” 更新人民邮电出版社出版的名为“SQL Server 2008数据库设计与实现”的图书为“SQL Server 2008数据库设计“*/</span></span><br><span class="line"><span class="keyword">UPDATE</span> View_BookPostTel</span><br><span class="line"><span class="keyword">SET</span>  书名=<span class="string">&#x27;SQL Server 2008 数据库设计&#x27;</span></span><br><span class="line"><span class="keyword">WHERE</span>  书名=<span class="string">&#x27;SQL Server 2008 数据库设计与实现&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="视图删除"><a href="#视图删除" class="headerlink" title="视图删除"></a>视图删除</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*通过视图“View_BookPostTel”删除人民邮电出版社出版的名为“SQL Server 2008数据库设 计”的图书*/</span></span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> View_BookPostTel</span><br><span class="line"><span class="keyword">WHERE</span>  书名=<span class="string">&#x27;SQL Server 2008数据库设计&#x27;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;视图&quot;&gt;&lt;a href=&quot;#视图&quot; class=&quot;headerlink&quot; title=&quot;视图&quot;&gt;&lt;/a&gt;视图&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;视图（View ）是一个虚表&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;是数据库 &lt;code&gt;用户看到并允许使用 &lt;/</summary>
      
    
    
    
    <category term="Java后端" scheme="http://xiaoliblog.cn/categories/Java%E5%90%8E%E7%AB%AF/"/>
    
    <category term="SQLServer" scheme="http://xiaoliblog.cn/categories/Java%E5%90%8E%E7%AB%AF/SQLServer/"/>
    
    
    <category term="SQLServer" scheme="http://xiaoliblog.cn/tags/SQLServer/"/>
    
  </entry>
  
  <entry>
    <title>SQLServer📦数据查询</title>
    <link href="http://xiaoliblog.cn/2021/01/16/%E5%90%8E%E7%AB%AF/SQLServer%E6%95%B0%E6%8D%AE%E5%BA%93/SQLServer_%E6%95%B0%E6%8D%AE%E6%9F%A5%E8%AF%A2/"/>
    <id>http://xiaoliblog.cn/2021/01/16/%E5%90%8E%E7%AB%AF/SQLServer%E6%95%B0%E6%8D%AE%E5%BA%93/SQLServer_%E6%95%B0%E6%8D%AE%E6%9F%A5%E8%AF%A2/</id>
    <published>2021-01-16T10:34:28.351Z</published>
    <updated>2021-01-17T05:18:26.497Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Select查询语句"><a href="#Select查询语句" class="headerlink" title="Select查询语句"></a>Select查询语句</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> [<span class="keyword">all</span>|<span class="keyword">distinct</span>] [top n] 表达式列表 <span class="comment">--- 投影查询</span></span><br><span class="line">[<span class="keyword">into</span> 新表名] <span class="comment">--- 保存查询</span></span><br><span class="line"><span class="keyword">from</span> 基本表列表| 视图名列表 <span class="comment">--- 连接查询</span></span><br><span class="line">[<span class="keyword">where</span> 查询条件] <span class="comment">--- 选择查询</span></span><br><span class="line">[<span class="keyword">group</span> <span class="keyword">by</span> 分组列名表] <span class="comment">--- 分组统计查询</span></span><br><span class="line">[<span class="keyword">having</span> 逻辑表达式] <span class="comment">--- 限定查询</span></span><br><span class="line">[<span class="keyword">order</span> <span class="keyword">by</span> 排序列名表[<span class="keyword">ASC</span>|<span class="keyword">DESC</span>]] <span class="comment">---排序查询</span></span><br></pre></td></tr></table></figure><h2 id="Select子句—投影查询"><a href="#Select子句—投影查询" class="headerlink" title="Select子句—投影查询"></a>Select子句—投影查询</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> [ <span class="keyword">ALL</span> | <span class="keyword">DISTINCT</span> ] [TOP n]  表达式<span class="number">1</span>, … , 表达式n</span><br></pre></td></tr></table></figure><p>用于描述查询结果集的列 ， 它是一个用逗号分隔的表达式列表 。这里的表达式由<code>列名 、 常量 、 函数和运算符</code>构成 。 此外 ， 还有一些参数可以根据需要进行选择 </p><ul><li><strong>列名表：投影某些列进行查询</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 从教务管理数据库“EDUC ”的学生表“Student”中查询出男生的学号、姓名、性别和专业的数据信息。*/</span></span><br><span class="line"><span class="keyword">USE</span> EDUC <span class="comment">-- 设置当前数据库为EDUC</span></span><br><span class="line"><span class="keyword">GO</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">SID</span>,Sname,Sex,Specialty <span class="comment">-- 投影列( 列选)</span></span><br><span class="line"><span class="keyword">FROM</span> Student <span class="comment">-- 查询的表“Student” ”</span></span><br><span class="line"><span class="keyword">WHERE</span> Sex=<span class="string">&#x27;男&#x27;</span> <span class="comment">-- 选择性别为“男”的数据行(</span></span><br></pre></td></tr></table></figure><ul><li><strong>TOP关键字限制：返回行数</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">TOP n [PERCENT]</span><br></pre></td></tr></table></figure><p>如果未指定关键字PERCENT， 则返回查询结果集的前n 行数据 。如果指定了关键字PERCENT，n 就是查询返回结果集行的百分比</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*从教务管理数据库“EDUC”的课程表“Course” 中查询出前3行数据*/</span></span><br><span class="line"><span class="keyword">SELECT</span> TOP <span class="number">3</span> CID, Cname, Credit <span class="comment">-- 返回前 3 行数据</span></span><br><span class="line"><span class="keyword">FROM</span> Course</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> TOP <span class="number">20</span> <span class="keyword">Percent</span> CID, Cname, Credit <span class="comment">-- 返回前 20% 行数据</span></span><br><span class="line"><span class="keyword">FROM</span> Course</span><br></pre></td></tr></table></figure><ul><li><strong>是否消除重复数据行</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">All | DISTINCT</span><br></pre></td></tr></table></figure><p>指定<code>All(缺省)</code>关键字将保留查询结果集中的全部数据行 。当对表进行投影操作之后 ， 在查询结果集中可能会出现重复的数据行 ，使用<code>DISTINCT关键字可消除查询结果集中的重复数据行</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*从教务管理数据库“EDUC”的学生表“Student”中查询出学校各专业的名称*/</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> Specialty <span class="comment">-- 使用DISTINCT 消除重复数据行</span></span><br><span class="line"><span class="keyword">FROM</span> Student</span><br></pre></td></tr></table></figure><ul><li><strong>通配符*:投影所有列</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*从教务管理数据库“EDUC”的学生表“Student”中查询出前3行数据*/</span></span><br><span class="line"><span class="keyword">SELECT</span> TOP <span class="number">3</span> *  <span class="comment">--&quot;*&quot;代表投影所有列</span></span><br><span class="line"><span class="keyword">FROM</span> Student</span><br></pre></td></tr></table></figure><ul><li><strong>使用表达式计算列值</strong><br>在SELECT子句中可以使用加 (+) 、 减(−)  、 乘(*) 、除(/) 、 取模(%)和字符连接(+)等运算符及各种函数进行运算 ， 通过对表达式的计算来获取查询结果的列值 。</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*从教务管理数据库“EDUC”的课程“Course”表里查询出学分对应的课程学时（假设每18学时计1学分），显示前5行*/</span></span><br><span class="line"><span class="comment">--- 表达式含运算符</span></span><br><span class="line"><span class="keyword">SELECT</span> TOP <span class="number">5</span> CID, Cname, Credit, Credit*<span class="number">18</span></span><br><span class="line"><span class="keyword">FROM</span> Course</span><br><span class="line"></span><br><span class="line"><span class="comment">--- 表达式带函数</span></span><br><span class="line"><span class="keyword">SELECT</span> TOP <span class="number">5</span> CID, Cname, Credit,</span><br><span class="line"><span class="keyword">STR</span>(Credit * <span class="number">18</span>, <span class="number">3</span>, <span class="number">0</span>) + <span class="string">&#x27;学时&#x27;</span></span><br><span class="line"><span class="keyword">FROM</span> Course</span><br><span class="line"></span><br><span class="line"><span class="comment">--- 表达式为常量</span></span><br><span class="line"><span class="keyword">SELECT</span> TOP <span class="number">5</span> CID, Cname, Credit, <span class="string">&#x27;学分&#x27;</span> ,</span><br><span class="line"><span class="keyword">STR</span>( Credit * <span class="number">18</span>, <span class="number">3</span>, <span class="number">0</span>), <span class="string">&#x27;学时&#x27;</span></span><br><span class="line"><span class="keyword">FROM</span> Course</span><br></pre></td></tr></table></figure><ul><li><strong>自定义列标题</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1：列名 AS &#x27;指定的列标题&#x27;  (AS可以省略)</span><br><span class="line">2：&#x27;指定的列标题&#x27; = 列名表达式</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> TOP <span class="number">5</span> CID <span class="keyword">AS</span> <span class="string">&#x27;课程号&#x27;</span>, Cname <span class="keyword">AS</span> <span class="string">&#x27;课程名&#x27;</span>,</span><br><span class="line">Credit 学分, 学时 = <span class="keyword">STR</span>( Credit * <span class="number">18</span>, <span class="number">3</span>, <span class="number">0</span>)</span><br><span class="line"><span class="keyword">FROM</span> Course</span><br></pre></td></tr></table></figure><ul><li><strong>聚合函数</strong></li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">聚合函数名( [ALL | DISTINCT] 列名表达式 | * )</span><br></pre></td></tr></table></figure><p><code>ALL</code>关键字表示函数对指定列的所有值进行统计和计算， <code>DISTINCT</code>关键字说明函数仅对指定列的唯一值 （ 不计重复值 ） 进行统计和计算， ALL为默认设置</p><ul><li>COUNT：统计 列 中选取的项目个数或 或  查询输出的行数 。</li><li>SUM：计算指定的数值型 列 名表达式的总和 。</li><li>AVG：计算指定的数值型 列 名表达式的平均值 。</li><li>MAX：求出指定的数值 、 字符或日期型 列 名表达式的最大值 。</li><li>MIN：求出指定的数值 、 字符或日期型 列 名表达式的最小值</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*从学生表“ 从学生表“Student”中统计出学生的总人数、录取分数“AScores”的最高分、最低分、总分和平均分*/</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">COUNT</span>(*) <span class="keyword">AS</span> 总人数,  <span class="comment">-- 统计总数</span></span><br><span class="line"><span class="keyword">MAX</span>(AScores) <span class="keyword">AS</span> 最高分,  <span class="comment">-- 求最大</span></span><br><span class="line"><span class="keyword">MIN</span>(AScores) <span class="keyword">AS</span> 最低分, <span class="comment">-- 求最小</span></span><br><span class="line"><span class="keyword">SUM</span>(AScores) <span class="keyword">AS</span> 总分,  <span class="comment">-- 求和</span></span><br><span class="line"><span class="keyword">AVG</span>(AScores) <span class="keyword">AS</span> 平均分  <span class="comment">-- 求平均分</span></span><br><span class="line"><span class="keyword">FROM</span> Student</span><br><span class="line"></span><br><span class="line"><span class="comment">/*从学生表“Student”中统计出男生的人数*/</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">COUNT</span>(*) <span class="keyword">AS</span> 人数  <span class="comment">-- 统计表中满足条件的行数</span></span><br><span class="line"><span class="keyword">FROM</span> Student</span><br><span class="line"><span class="keyword">WHERE</span> Sex=<span class="string">&#x27;男&#x27;</span> </span><br><span class="line"></span><br><span class="line"><span class="comment">/* 从学生表“Student”中统计出专业个数。注意，DISTINCT关键字的作用是消除重复行，即每个专业只计一次*/</span></span><br><span class="line"><span class="comment">-- 统计表“Student ”中名称不重复的专业个数</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">COUNT</span>(<span class="keyword">DISTINCT</span> Specialty) <span class="keyword">AS</span> 专业个数 </span><br><span class="line"><span class="keyword">FROM</span> Student</span><br></pre></td></tr></table></figure><h2 id="From子句—连接查询"><a href="#From子句—连接查询" class="headerlink" title="From子句—连接查询"></a>From子句—连接查询</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">FROM 基本表1, 基本表2, … , 基本表n</span><br></pre></td></tr></table></figure><p><code>指定要查询的基本表</code> 。如果指定了一个以上的基本表 ， 则计算它们之间的<code>笛卡儿积</code>， 与WHERE子句等值条件配合实现连接查询</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*从教务管理数据库“EDUC”中查询出学生的学号、姓名、所选课程名和成绩信息*/</span></span><br><span class="line"><span class="keyword">USE</span> EDUC</span><br><span class="line"><span class="keyword">GO</span></span><br><span class="line"><span class="keyword">SELECT</span> Student.SID,Sname,Cname,Scores <span class="comment">-- 投影各表的列</span></span><br><span class="line"><span class="keyword">FROM</span> Student, SC, Course <span class="comment">-- 连接3 张表, 对3 张表求笛卡尔积</span></span><br><span class="line"><span class="keyword">WHERE</span> Student.SID=SC.SID <span class="keyword">AND</span> SC.CID=Course.CID <span class="comment">--等值连接</span></span><br></pre></td></tr></table></figure><ul><li>为基本表指定临时别名 —— 目的：简化表名</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">基本表名 [AS] 别名 别名</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*从教务管理数据库“EDUC”中查询出学生的学号、姓名、所选课程名和成绩信息*/</span></span><br><span class="line"><span class="keyword">USE</span> EDUC</span><br><span class="line"><span class="keyword">GO</span></span><br><span class="line"><span class="keyword">SELECT</span> x.SID, x.Sname, z.Cname, y.Scores<span class="comment">-- 投影各表的列</span></span><br><span class="line"><span class="keyword">FROM</span> Student x, SC y, Course z</span><br><span class="line"><span class="comment">-- 为三个表指定别名</span></span><br><span class="line"><span class="keyword">WHERE</span> x.SID=y.SID <span class="keyword">AND</span> y.CID=z.CID <span class="comment">-- 等值条件连接</span></span><br></pre></td></tr></table></figure><h2 id="Where子句—选择查询"><a href="#Where子句—选择查询" class="headerlink" title="Where子句—选择查询"></a>Where子句—选择查询</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">WHERE 逻辑表达式</span><br></pre></td></tr></table></figure><ul><li>WHERE 子句用于 <code>行选择</code> 操作，定义了表中的行要满足条件（逻辑表达式为真)才能参与SELECT 查询语句的操作</li><li>逻辑表达式 ：由 常量、列名（变量）、函数、运算符（ 算术、关系、逻辑等）等组成，值为true( 非零/ 真) 或false( 零/ 假）</li></ul><table><thead><tr><th align="center">运算符</th><th align="center">形式</th></tr></thead><tbody><tr><td align="center">比较运算符</td><td align="center">=、 &lt;&gt; 、 &gt; 、&lt; 、&gt;= 、&lt;= 、!&gt; 、!&lt;</td></tr><tr><td align="center">逻辑运算符</td><td align="center">and、or、not</td></tr><tr><td align="center">范围运算符</td><td align="center">between、not between</td></tr><tr><td align="center">字符串匹配</td><td align="center">like、not like</td></tr><tr><td align="center">列表运算符</td><td align="center">in、not in</td></tr><tr><td align="center">空值判断符</td><td align="center">is null、is not null</td></tr></tbody></table><ul><li><strong>关系运算符</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*从学生表“Student”中查询出学生“赵成刚”的信息*/</span></span><br><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">FROM</span> Student</span><br><span class="line"><span class="keyword">WHERE</span> Sname = <span class="string">&#x27;赵成刚&#x27;</span>   <span class="comment">--关系运算</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*从学生表“Student”中查出入学分数高于 300分的学生的学号、姓名 、分数*/</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">SID</span>, Sname, AScores</span><br><span class="line"><span class="keyword">FROM</span> Student</span><br><span class="line"><span class="keyword">WHERE</span> AScores &gt; <span class="number">300</span>   <span class="comment">--关系运算</span></span><br></pre></td></tr></table></figure><ul><li><strong>逻辑运算符</strong><br>逻辑运算符：AND （与）、OR（或） 、 NOT（非）</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*从学生表“Student”中查出入学分数高于 300分的女生的学号、姓名 、分数*/</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">SID</span>, Sname, AScores</span><br><span class="line"><span class="keyword">FROM</span> Student</span><br><span class="line"><span class="keyword">WHERE</span> AScores &gt; <span class="number">300</span> <span class="keyword">AND</span> Sex=<span class="string">&#x27;女&#x27;</span>  <span class="comment">--逻辑运算</span></span><br></pre></td></tr></table></figure><ul><li><strong>范围运算符</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">列名 [NOT] BETWEEN 开始值 AND 结束值</span><br><span class="line"><span class="comment">-- 指定列名是否在开始值和结束值之间</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*从学生表“Student”中查询出入学分数在350分到360分之间的学生信息*/</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> Student</span><br><span class="line"><span class="keyword">WHERE</span> AScores <span class="keyword">BETWEEN</span> <span class="number">350</span> <span class="keyword">AND</span> <span class="number">360</span> <span class="comment">-- 范围运算</span></span><br><span class="line"><span class="comment">--- 或： WHERE AScores&gt;=350 AND AScores &lt;=360</span></span><br></pre></td></tr></table></figure><ul><li><strong>模式匹配运算符</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">列名 [NOT] LIKE 字符串（含通配符）</span><br></pre></td></tr></table></figure><p><code>通配符“\_” </code>代表任意一个字符；<br><code>通配符“%” </code>代表任意多个字符。<br>模式匹配运算符LIKE可以<code>实现对表的模糊查询 </code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*从学生表“Student”中查询出“李”姓的学生信息*/</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> Student</span><br><span class="line"><span class="keyword">WHERE</span> Sname <span class="keyword">LIKE</span> <span class="string">&#x27;李%&#x27;</span> <span class="comment">--- 模式匹配模糊查询</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*从课程表“Course”中查询出有关&quot;程序设计&quot;方面的课程*/</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> Course</span><br><span class="line"><span class="keyword">WHERE</span> Cname <span class="keyword">LIKE</span> <span class="string">&#x27;%程序设计%&#x27;</span> <span class="comment">-- 模式匹配模糊查询</span></span><br></pre></td></tr></table></figure><ul><li><strong>列表运算符</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">列名 [NOT] IN (列表|子查) </span><br></pre></td></tr></table></figure><p>列名的值（不）是列表或子查询结果中的任何一个值时，逻辑表达式的值为（假）真</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*学生表“Student”中查询学号为2011216007和2012216089的学生信息*/</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> Student</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">SID</span> <span class="keyword">IN</span>(<span class="string">&#x27;2011216007&#x27;</span>,<span class="string">&#x27;2012216089&#x27;</span>)</span><br><span class="line"><span class="comment">-- 列名判断运算</span></span><br><span class="line"><span class="comment">-- 等价于：SID= &#x27;2011216007&#x27;OR SID=&#x27;2012216089&#x27;</span></span><br></pre></td></tr></table></figure><ul><li><strong>空值运算符</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">列名 IS [NOT] NULL</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*从教务管理数据库“EDUC”的选课表“SC”中查询出考试成绩没有登记的记录*/</span></span><br><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">FROM</span> SC</span><br><span class="line"><span class="keyword">WHERE</span> Scores <span class="keyword">IS</span> <span class="literal">NULL</span> <span class="comment">-- 空值判断运算</span></span><br></pre></td></tr></table></figure><h2 id="Group-by子句—分组统计查询"><a href="#Group-by子句—分组统计查询" class="headerlink" title="Group by子句—分组统计查询"></a>Group by子句—分组统计查询</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GROUP BY 列名表</span><br></pre></td></tr></table></figure><ul><li>与<code>列名</code>或 <code>聚合函数</code> 配合实现分组统计</li><li>实际应用中往往需要根据某列的值进行分组统计与汇总</li><li>如 ， 需要从学生表中统计出 <code>各专业 </code>的学生总数 ， 统计时用 “<code>GROUP BY专业名称 </code> ” 进行分组 ， 然后计算聚合函数的值</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*从学生表“Student”中查询出各专业学生入学的平均分*/</span></span><br><span class="line"><span class="keyword">SELECT</span> SpecialtyAS <span class="string">&#x27;专业&#x27;</span>,<span class="keyword">AVG</span>(AScores) <span class="keyword">AS</span> <span class="string">&#x27;平均分&#x27;</span>  <span class="comment">-- 求各专业入学平均分</span></span><br><span class="line"><span class="keyword">FROM</span> Student</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> Specialty   <span class="comment">--根据专业名称分组</span></span><br></pre></td></tr></table></figure><h2 id="Having子句—限定查询"><a href="#Having子句—限定查询" class="headerlink" title="Having子句—限定查询"></a>Having子句—限定查询</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HAVING 逻辑表达式</span><br></pre></td></tr></table></figure><ul><li>与GROUP BY配合使用，筛选统计的结果</li><li>HAVING子句的逻辑表达式通常包含聚合函数</li><li>如果不使用GROUP BY  子句，HAVING  的行为与 WHERE 子句一样</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*从学生表“Student”中查询出各专业学生入学平均分高于340分的专业和入学平均分*/</span></span><br><span class="line"><span class="keyword">SELECT</span> Specialty <span class="keyword">AS</span>  专业, <span class="keyword">AVG</span>(AScores) <span class="keyword">AS</span> <span class="string">&#x27;平均分&#x27;</span>  <span class="comment">-- 求各专业入学平均分</span></span><br><span class="line"><span class="keyword">FROM</span> Student</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> Specialty <span class="comment">-- 根据专业名称分组</span></span><br><span class="line"><span class="keyword">HAVING</span> <span class="keyword">AVG</span>(AScores) &gt; <span class="number">340</span> <span class="comment">--对学生总成绩进行筛选</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*从学生表“Student”中查询出各专业的学生总数&gt;4的专业名称和人数 */</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="string">&#x27;专业&#x27;</span> = Specialty, <span class="string">&#x27;人数&#x27;</span> = <span class="keyword">COUNT</span>(*)  <span class="comment">-- 统计各专业学生人数</span></span><br><span class="line"><span class="keyword">FROM</span> Student</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> Specialty <span class="comment">-- 根据专业名称分组</span></span><br><span class="line"><span class="keyword">HAVING</span> <span class="keyword">COUNT</span>(*) &gt; <span class="number">4</span> <span class="comment">--对学生总人数进行筛选</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*从选课表“SC”中查询出各学生的平均分高于80的“学号”和“平均分”*/</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="string">&#x27;学号&#x27;</span> = <span class="keyword">SID</span>, <span class="string">&#x27;平均分&#x27;</span> = <span class="keyword">AVG</span>(Scores)</span><br><span class="line"><span class="keyword">FROM</span> SC</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> <span class="keyword">SID</span></span><br><span class="line"><span class="keyword">HAVING</span> <span class="keyword">AVG</span>(Scores)  &gt; <span class="number">80</span></span><br></pre></td></tr></table></figure><h2 id="Order-by子句—排序查询"><a href="#Order-by子句—排序查询" class="headerlink" title="Order by子句—排序查询"></a>Order by子句—排序查询</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ORDER BY 列名表达式表 ASC / DESC</span><br></pre></td></tr></table></figure><p>按一列或多列对查询结果进行升序（ASC ：默认）或降序（DESC）排序。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*从学生表“ “Student”中查询出各专业学生的入学平均分,并将结果按降序排序*/</span></span><br><span class="line"><span class="keyword">SELECT</span> Specialty <span class="keyword">AS</span>  专业, <span class="keyword">AVG</span>(AScores) <span class="keyword">AS</span> <span class="string">&#x27;平均分&#x27;</span></span><br><span class="line"><span class="keyword">FROM</span> Student</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> Specialty <span class="comment">-- 根据专业名称分组</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="keyword">AVG</span>(AScores) <span class="keyword">DESC</span> <span class="comment">--按分数降序排序</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*从学生表“Student”中查询出软件技术专业学生信息，并按照性别升序和入学成绩降序排列 */</span></span><br><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">FROM</span> Student</span><br><span class="line"><span class="keyword">WHERE</span> Specialty=<span class="string">&#x27; 软件技术&#x27;</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> Sex <span class="keyword">ASC</span>, AScores <span class="keyword">DESC</span>  </span><br><span class="line"><span class="comment">-- 按照性别升序和入学成绩降序排列</span></span><br></pre></td></tr></table></figure><h2 id="Into子句—保存查询"><a href="#Into子句—保存查询" class="headerlink" title="Into子句—保存查询"></a>Into子句—保存查询</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">INTO 新表名</span><br></pre></td></tr></table></figure><ul><li>INTO子句指定使用结果集来 <code>创建新表</code> </li><li>查询结果往往需要保存下来以便使用，使用INTO子句可以将查询结果存储在一个新建的基本表中，这种方式常用于<code>创建表的副本</code></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*从选课表“SC”中将学号和课程号的内容保存为新表student_course*/</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">SID</span>, CID</span><br><span class="line"><span class="keyword">INTO</span> student_course <span class="comment">-- 创建新表</span></span><br><span class="line"><span class="keyword">FROM</span> SC</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*巧用INTO 语句将表student 复制成student_1*/</span></span><br><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">INTO</span> student_1</span><br><span class="line"><span class="keyword">FROM</span> student</span><br></pre></td></tr></table></figure><h1 id="ANSI连接查询"><a href="#ANSI连接查询" class="headerlink" title="ANSI连接查询"></a>ANSI连接查询</h1><p>在SQL Server 中，<code>实现表的连接 </code>可使用 <code>两种语法形式</code>：</p><ul><li><p>一种 是前面介绍的FROM 子句，连接条件写在WHERE子句的逻辑表达式中，从而实现表的连接 （早期连接方式）</p></li><li><p>另一种是<code>ANSI </code>（American National StandardsInstitute— 美国国家标准学会）连接语法形式，在FROM子句中使用<code>JOIN…ON </code>关键字，连接条件写在<code>ON</code>之后，从而实现表的连接。</p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*从教务管理数据库“EDUC”中查询出学生的学号、姓名、所选课程名和成绩信息*/</span></span><br><span class="line"><span class="comment">--早期连接方式： （方式一）</span></span><br><span class="line"><span class="keyword">SELECT</span> x.SID, x.Sname, z. Cname, y.Scores</span><br><span class="line"><span class="keyword">FROM</span> Student x, SC y, Course z</span><br><span class="line"><span class="keyword">WHERE</span> x.SID=y.SID <span class="keyword">AND</span> y.CID=z.CID  <span class="comment">-- 连接条件</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--ANSI 连接方式：  （方式二）</span></span><br><span class="line"><span class="keyword">SELECT</span> x.SID, x.Sname, z. Cname, y.Scores</span><br><span class="line"><span class="keyword">FROM</span> Student x <span class="keyword">JOIN</span> SC y <span class="keyword">ON</span> x.SID=y.SID <span class="comment">-- 连接条件</span></span><br><span class="line"><span class="keyword">JOIN</span> Course z <span class="keyword">ON</span> y.CID=z.CID</span><br></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 语法</span></span><br><span class="line">FROM &#123; 表名1 [ 连接类型] JOIN  表名2 ON  连接条件&#125; [,…,n]</span><br></pre></td></tr></table></figure><ul><li>实现表与表的两两连接 ，表1和表2连接之后还可以继续与表3,…, 表n 连接，最多可以连接64 个表 。</li><li>连接条件放在ON 关键字后 </li></ul><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@bfdd61046f86537e464e398b191222fd030d196a/2021/01/17/289da43469ac6e2097526bed5c7b9bfa.png"></p><h2 id="内连接"><a href="#内连接" class="headerlink" title="内连接"></a>内连接</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">FROM 表名1 [INNER] JOIN 表名2 ON 连接表达式</span><br></pre></td></tr></table></figure><p>从表1 和表2 的<code>笛卡儿积 </code>中 ， 选出符合连接条件的数据行；如果数据行无法满足连接条件 ， 则将其丢弃 。 <code>内连接消除了与另一个表中不匹配的数据行</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*从教务管理数据库“EDUC”中查询每个学生的学号、姓名、课程名及选课成绩，不允许有重复列（3表内连）*/</span></span><br><span class="line"><span class="keyword">USE</span> EDUC</span><br><span class="line"><span class="keyword">GO</span></span><br><span class="line"><span class="keyword">SELECT</span> x.SID , x.Sname, z.Cname, y.Scores</span><br><span class="line"><span class="keyword">FROM</span> Student x <span class="keyword">INNER</span> <span class="keyword">JOIN</span> SC y <span class="keyword">ON</span> x.SID = y.SID</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> Course z <span class="keyword">ON</span> y.CID = z.CID</span><br></pre></td></tr></table></figure><h2 id="外连接"><a href="#外连接" class="headerlink" title="外连接"></a>外连接</h2><ul><li><p>外连接返回FROM 子句中指定的至少一个表( 或视图) 中的所有行 （不包含ON 之后的连接条件 ） ， 只要这些行符合任何WHERE 选择或HAVING 限定条件 。</p></li><li><p>外连接又分为<code>左外连接</code>、 <code>右外连接 </code>和<code>全外连接</code>。</p></li><li><p>左外连接 对连接中 <code>左边的表不加限制</code>； 右外连接 对连接中<code>右边的表不加限制</code> ； 全外连接 对<code>两个表都不加限制</code> ， 两个表中的所有行都会包括在结果集中 </p></li><li><p><strong>左外连接</strong></p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">FROM  表名1 LEFT [OUTER] JOIN 表名2 ON  连接表达式</span><br></pre></td></tr></table></figure><p>连接结果 <code>保留表1</code>没形成连接的行  ，<code>表2 </code>相应的各列为NULL值 </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*在教务管理数据库“EDUC”中，查询哪些课程没人选？*/</span></span><br><span class="line"><span class="keyword">SELECT</span> Course.* , SC.*</span><br><span class="line"><span class="keyword">FROM</span> Course <span class="keyword">LEFT</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span> SC</span><br><span class="line"><span class="keyword">ON</span> Course.CID=SC.CID</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@acd66e5b00db1fd565cc2edea70d850173d45648/2021/01/17/98d761a92f2b8bde900043b9b539b539.png"></p><ul><li><strong>右外连接</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">FROM  表名1 RIGHT [OUTER] JOIN  表名2 ON  连接表达式</span><br></pre></td></tr></table></figure><p>连接 <code>结果保留表2 </code>没形成连接的行，<code>表1 </code>相应的列为NULL值</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*从表“Borrow ”和表“Book”中查询出图书被借阅的情况， 包括没有被借的图书情况*/</span></span><br><span class="line"><span class="keyword">SELECT</span> x.RID, x.BID, y.BID, y.Bname, y.Author</span><br><span class="line"><span class="keyword">FROM</span> Borrow x <span class="keyword">RIGHT</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span> Book y <span class="comment">--- 右外连接</span></span><br><span class="line"><span class="keyword">ON</span> x.BID=y.BID</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@4c2cc82a1f3f71f9ea81419c5e31600939d6ea0e/2021/01/17/5a1ad7392920548f12456492db7b18ca.png"></p><ul><li><strong>全外连接</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">FROM  表名1 FULL [OUTER] JOIN  表名2 ON 连接表达式</span><br></pre></td></tr></table></figure><p>连接结果 保留表1 没形成连接的元组，表2 相应的列为NULL值；<br>连接结果也 保留表2 没形成连接的元组，表1 相应的列为NULL值。<br><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@38975dfb75f63e9d5cd3c6312f97792d782e952c/2021/01/17/ed3f200190ed72a1a0950dc163050663.png"><br><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@0216ad5746735606ec5e93eb0ae08a0e0a89c5c5/2021/01/17/b24c20c3acaf38dcd3746afa9b706eef.png"></p><h2 id="自连接"><a href="#自连接" class="headerlink" title="自连接"></a>自连接</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">FROM  表名1  别名1 JOIN  表名1  别名2 ON 连接表达式</span><br></pre></td></tr></table></figure><ul><li>表可以通过自连接实现自身的连接运算。自连接可以看作是 “<code> 一张表的两个副本之间进行的连接</code>“</li><li>在自连接中，必须为表指定两个不同的别名，使之在逻辑上成为两张表。</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*从图书管理数据库“Library”中查询出借了两本以上图书的读者的借书信息*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 步骤1:表“ Borrow”与表“Borrow”自连接</span></span><br><span class="line"><span class="keyword">SELECT</span> x.RID, x.BID, x.ReturnDate, y.RID, y.BID</span><br><span class="line"><span class="keyword">FROM</span> Borrow x <span class="keyword">JOIN</span> Borrow y <span class="keyword">ON</span> x.RID=y.RI  <span class="comment">-- 读者编号等值条件自连接</span></span><br><span class="line"><span class="keyword">WHERE</span> x.ReturnDate <span class="keyword">IS</span> <span class="literal">NULL</span></span><br><span class="line"><span class="keyword">AND</span> y.ReturnDate <span class="keyword">IS</span> <span class="literal">NULL</span> <span class="comment">-- 还期为空，即尚未归还</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 步骤2:对表“Borrow”与表“Borrow”自连接加选择条件和投影操作</span></span><br><span class="line"><span class="keyword">SELECT</span> x.RID, x.BID, x.ReturnDate <span class="comment">--投影去重复列名 </span></span><br><span class="line"><span class="keyword">FROM</span> Borrow x <span class="keyword">JOIN</span> Borrow y</span><br><span class="line"><span class="keyword">ON</span> x.RID=y.RID <span class="comment">--读者编号等值条件自连接 </span></span><br><span class="line"><span class="keyword">WHERE</span> x.ReturnDate <span class="keyword">IS</span> <span class="literal">NULL</span></span><br><span class="line"><span class="keyword">AND</span> y.ReturnDate <span class="keyword">IS</span> <span class="literal">NULL</span> <span class="comment">--还期为空，即尚未归还 </span></span><br><span class="line"><span class="keyword">AND</span> x.BID&lt;&gt;y.BID <span class="comment">--图书编号不同，即两本不同的书</span></span><br></pre></td></tr></table></figure><h2 id="交叉连接"><a href="#交叉连接" class="headerlink" title="交叉连接"></a>交叉连接</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">FROM 表名1 CROSS JOIN 表名2</span><br><span class="line"><span class="comment">-- 或：</span></span><br><span class="line">FROM 表名1 ,表名2 <span class="comment">---兼容早期连接的写法</span></span><br></pre></td></tr></table></figure><p>两个表进行 <code>笛卡尔积</code> 计算 ， 结果集的行数等于表1的行数 乘以表2的行数 </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*从教务管理数据库“EDUC”中查询每个学生的学号、姓名、课程代号及选课成绩*/</span></span><br><span class="line"><span class="keyword">SELECT</span> x.SID, x.Sname , y.CID, y.Scores</span><br><span class="line"><span class="keyword">FROM</span> Student x,SC y</span><br><span class="line"><span class="keyword">WHERE</span> x.SID = y.SID</span><br></pre></td></tr></table></figure><h2 id="多表连接"><a href="#多表连接" class="headerlink" title="多表连接"></a>多表连接</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">FROM 表名1 JOIN 表名2 ON 连接表达式</span><br><span class="line">JOIN 表名3 ON 连接表达式[,… ，n]</span><br></pre></td></tr></table></figure><p>最多可以连接64个表，通常为8 ～10个 </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 对读者表“Reader ”、借阅表“Borrow”和图书表 “Book”三个表进行等值连接,查询读者“程鹏”的借阅情况*/</span></span><br><span class="line"><span class="keyword">SELECT</span> t1.RID, t1.Rname, t3.Bname, t2.LendDate</span><br><span class="line"><span class="keyword">FROM</span> Reader t1 <span class="keyword">JOIN</span> Borrow t2 <span class="keyword">ON</span> t1.RID=t2.RID</span><br><span class="line"><span class="keyword">JOIN</span> Book t3 <span class="keyword">ON</span> t2.BID=t3.BID</span><br><span class="line"><span class="keyword">WHERE</span> t1.Rname=<span class="string">&#x27;程鹏&#x27;</span></span><br></pre></td></tr></table></figure><h1 id="子查询"><a href="#子查询" class="headerlink" title="子查询"></a>子查询</h1><ul><li>在实际应用中，经常要用到 多层嵌套查询。</li><li>若一条select语句的where子句中又包含了另一个select语句，此时就出现了查询的嵌套（外层select语句嵌套了内层select语句）。</li><li>外层的select语句被称为<code>父查询或主查询</code>；内层的select语句称为<code>子查询</code>。</li></ul><ul><li><strong>单值嵌套查询</strong><br>在该方式下，通过 子查询返回一个单一的数值，该数据可以参加相关表达式的运算</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 从选课表“SC”中查询出学号最小的学生的选课信息*/</span></span><br><span class="line"><span class="keyword">USE</span> EDUC</span><br><span class="line"><span class="keyword">GO</span></span><br><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">FROM</span> SC</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">SID</span> = ( <span class="keyword">SELECT</span> <span class="keyword">MIN</span>( <span class="keyword">SID</span> ) <span class="keyword">FROM</span> Student )</span><br></pre></td></tr></table></figure><ul><li><strong>[NOT] IN 子查询</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">列名 [NOT] IN (子查询)</span><br></pre></td></tr></table></figure><p>列值<code>被包含</code>或 <code>不被包含</code>在集合中</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*查询出选修了课程号16020010的学生的学号、姓名 */</span></span><br><span class="line"><span class="keyword">USE</span> EDUC</span><br><span class="line"><span class="keyword">GO</span></span><br><span class="line"><span class="keyword">SELECT</span> Student.SID, Student.Sname</span><br><span class="line"><span class="keyword">FROM</span> Student   <span class="comment">--- 对于表Student 中的每一个记录</span></span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">SID</span> <span class="keyword">IN</span>   <span class="comment">--- 判断其SID 是否在子查询的集合当中</span></span><br><span class="line">( <span class="keyword">SELECT</span> <span class="keyword">SID</span></span><br><span class="line"><span class="keyword">FROM</span> SC</span><br><span class="line"><span class="keyword">WHERE</span> CID = <span class="string">&#x27;16020010&#x27;</span> ) <span class="comment">--- 课号为16020010 的SID</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*查询出没有选修任何课程的学生的学号、姓名*/</span></span><br><span class="line"><span class="keyword">USE</span> EDUC</span><br><span class="line"><span class="keyword">GO</span></span><br><span class="line"><span class="keyword">SELECT</span> Student.SID, Student.Sname</span><br><span class="line"><span class="keyword">FROM</span> Student</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">SID</span> <span class="keyword">NOT</span> <span class="keyword">IN</span> ( <span class="keyword">SELECT</span> <span class="keyword">SID</span> <span class="keyword">FROM</span> SC )</span><br></pre></td></tr></table></figure><ul><li><strong>[NOT] EXISTS 子查询</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[NOT] EXISTS (子查询)</span><br></pre></td></tr></table></figure><p>当子查询的结果存在( 不为空集) 时，返回逻辑“真”值；否则返回逻辑“假”值。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*查询出选修了课程号16020010的学生的学号、姓名 */</span></span><br><span class="line"><span class="keyword">USE</span> EDUC</span><br><span class="line"><span class="keyword">GO</span></span><br><span class="line"><span class="keyword">SELECT</span> Student.SID, Student.Sname</span><br><span class="line"><span class="keyword">FROM</span> Student <span class="comment">--- 对于Student 表里的每一个SID</span></span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">EXISTS</span> <span class="comment">--- 是否满足子查询的选择条件</span></span><br><span class="line">( <span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">FROM</span> SC</span><br><span class="line"><span class="keyword">WHERE</span> Student.SID = SC.SID <span class="keyword">AND</span> CID = <span class="string">&#x27;16020010&#x27;</span> )</span><br></pre></td></tr></table></figure><ul><li><strong>比较子查询</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">列名  比较运算符 ALL | ANY | SOME(子查询)</span><br></pre></td></tr></table></figure><ul><li><p>当列名的值在关系上满足子查询中的值时，逻辑表达式的值为真，否则为假。</p></li><li><p>ANY 和SOME 的用法相同</p></li><li><p><strong>ALL比较子查询</strong></p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">列名 比较运算符 ALL ( 子查询)</span><br></pre></td></tr></table></figure><p>当列名的值在关系上满足子查询中的 所有值时，逻辑表达式的值为真，否则为假</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*从借阅表“Borrow ”中查询出读者编号RID最大的读者的借书情况。*/</span></span><br><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">FROM</span> Borrow</span><br><span class="line"><span class="keyword">WHERE</span> RID &gt;= <span class="keyword">ALL</span>( <span class="keyword">SELECT</span> RID <span class="keyword">FROM</span> Reader) <span class="comment">--子查询</span></span><br></pre></td></tr></table></figure><ul><li><strong>ANY |SOME 比较子查询</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">列名 比较运算符 ANY | SOME (子查询)</span><br></pre></td></tr></table></figure><ul><li>当列名的值在关系上满足子查询中的 任何一个值 时 ， 逻辑表达式的值为真 ， 否则为假 。</li><li>当比较运算符为“ = ” 时 ， “<code>列名=ANY(子查询)</code> ” 和 “ <code>列名IN ( 子查询) </code>” 所描述的条件是同样的 。</li><li>ANY 和SOME的用法相同 的用法相同 </li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*从图书数据库“Library”中查询当前借出的清华大学出版社的图书借期等信息*/</span></span><br><span class="line"><span class="keyword">SELECT</span> x.RID, x.BID, x.LendDate,y.Bname, y.Publisher, y.LentOut</span><br><span class="line"><span class="keyword">FROM</span> Borrow x, Book y  <span class="comment">-- 对于借阅表中的每借出的一本书</span></span><br><span class="line"><span class="keyword">WHERE</span> x.BID = <span class="keyword">ANY</span> <span class="comment">-- 判断其图书编号是否在子查询集合中</span></span><br><span class="line">(<span class="keyword">SELECT</span> BID <span class="comment">-- 已经借出清华大学出版社的图书编号集合</span></span><br><span class="line"><span class="keyword">FROM</span> Book</span><br><span class="line"><span class="keyword">WHERE</span> LentOut= <span class="string">&#x27;True&#x27;</span> <span class="keyword">AND</span> Publisher=<span class="string">&#x27;清华大学出版社&#x27;</span>)  </span><br><span class="line"><span class="comment">-- 已经借出的清华大学出版社出版的图书</span></span><br><span class="line"><span class="keyword">AND</span> x.BID=y.BID <span class="comment">--等值连接</span></span><br></pre></td></tr></table></figure><h1 id="联合查询"><a href="#联合查询" class="headerlink" title="联合查询"></a>联合查询</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">SELECT_1  UNION [ALL]</span><br><span class="line">SELECT_2  UNION [ALL]</span><br><span class="line">……</span><br><span class="line">SELECT_n</span><br></pre></td></tr></table></figure><p>对n 次查询结果进行并运算。ALL 表示<code>运算结果包括重复行</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*查询出“人民邮电出版社”和“清华大学出版社”出版的图书的作者名。 包括重复行。 （联合同一个表、同一字段！）*/</span></span><br><span class="line"><span class="keyword">USE</span> <span class="keyword">Library</span></span><br><span class="line"><span class="keyword">GO</span></span><br><span class="line"><span class="keyword">SELECT</span> Author</span><br><span class="line"><span class="keyword">FROM</span> Book</span><br><span class="line"><span class="keyword">WHERE</span> publisher = <span class="string">&#x27; 人民邮电出版社&#x27;</span></span><br><span class="line"><span class="keyword">UNION</span> <span class="keyword">ALL</span> <span class="comment">---  并运算，包括重复行</span></span><br><span class="line"><span class="keyword">SELECT</span> Author</span><br><span class="line"><span class="keyword">FROM</span> Book</span><br><span class="line"><span class="keyword">WHERE</span> publisher = <span class="string">&#x27; 清华大学出版社&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 结果等同于下列语句</span></span><br><span class="line"><span class="keyword">USE</span> <span class="keyword">Library</span></span><br><span class="line"><span class="keyword">GO</span></span><br><span class="line"><span class="keyword">SELECT</span> Author</span><br><span class="line"><span class="keyword">FROM</span> Books</span><br><span class="line"><span class="keyword">WHERE</span> publisher = <span class="string">&#x27; 人民邮电出版社&#x27;</span> <span class="keyword">OR</span> publisher = <span class="string">&#x27; 清华大学出版社&#x27;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Select查询语句&quot;&gt;&lt;a href=&quot;#Select查询语句&quot; class=&quot;headerlink&quot; title=&quot;Select查询语句&quot;&gt;&lt;/a&gt;Select查询语句&lt;/h1&gt;&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;</summary>
      
    
    
    
    <category term="Java后端" scheme="http://xiaoliblog.cn/categories/Java%E5%90%8E%E7%AB%AF/"/>
    
    <category term="SQLServer" scheme="http://xiaoliblog.cn/categories/Java%E5%90%8E%E7%AB%AF/SQLServer/"/>
    
    
    <category term="SQLServer" scheme="http://xiaoliblog.cn/tags/SQLServer/"/>
    
  </entry>
  
  <entry>
    <title>SQLServer📦表的创建与管理</title>
    <link href="http://xiaoliblog.cn/2021/01/15/%E5%90%8E%E7%AB%AF/SQLServer%E6%95%B0%E6%8D%AE%E5%BA%93/SQLServer_%E8%A1%A8%E7%9A%84%E5%88%9B%E5%BB%BA%E4%B8%8E%E7%AE%A1%E7%90%86/"/>
    <id>http://xiaoliblog.cn/2021/01/15/%E5%90%8E%E7%AB%AF/SQLServer%E6%95%B0%E6%8D%AE%E5%BA%93/SQLServer_%E8%A1%A8%E7%9A%84%E5%88%9B%E5%BB%BA%E4%B8%8E%E7%AE%A1%E7%90%86/</id>
    <published>2021-01-15T09:21:43.515Z</published>
    <updated>2021-01-16T10:31:33.650Z</updated>
    
    <content type="html"><![CDATA[<h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><div class="note success flat"><p>表是数据库对象，用于存储 <code>实体</code>和<code> 实体间的联系</code></p></div><ul><li><p><strong>表的构成</strong><br>  列：每一列用来保存对象的属性，也称为<code>字段</code><br>  行：每一行用来保存对象的元组，也称为 <code>数据行</code> 或<code> 记录</code></p></li><li><p><strong>表的完整性约束</strong></p></li></ul><div class="tabs" id="test2"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test2-1">实体完整性约束</button></li><li class="tab"><button type="button" data-href="#test2-2">域完整性约束</button></li><li class="tab"><button type="button" data-href="#test2-3">参照完整性</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test2-1"><ul><li>主键：Primary Key</li><li>唯一键：Unique</li><li>标识列：Identity Column</li><li>唯一索引：Unique Index</li><li>非空：NOT NULL</li></ul><div class="note success flat"><p>保证表的正确性</p></div><button type="button" class="tab-to-top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test2-2"><ul><li>数据类型：Data Type</li><li>默认值：Default</li><li>检查：Check</li><li>外键：Foreign Key</li><li>空或非空：UNLL/NOT NULL</li></ul><div class="note success flat"><p>保证表的每列数据正确性(在特定允许范围内)</p></div><button type="button" class="tab-to-top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test2-3"><ul><li>外键：Foreign Key</li></ul><div class="note success flat"><p>保证表之间的数据一致性</p></div><button type="button" class="tab-to-top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="T-SQL数据类型"><a href="#T-SQL数据类型" class="headerlink" title="T-SQL数据类型"></a>T-SQL数据类型</h1><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@96600b72213d606bd80eb00e6cf9e9cc0b3715b4/2021/01/16/dc7e16d4d86d2d587dd96c280581fac7.png"></p><h1 id="T-SQL创建表"><a href="#T-SQL创建表" class="headerlink" title="T-SQL创建表"></a>T-SQL创建表</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> 表名 </span><br><span class="line">(</span><br><span class="line">列名<span class="number">1</span>  数据类型 列级完整性约束,</span><br><span class="line"> 列名<span class="number">2</span>  数据类型 列级完整性约束,</span><br><span class="line">… …</span><br><span class="line">列名n  数据类型 列级完整性约束,</span><br><span class="line">表级完整性约束<span class="number">1</span>,</span><br><span class="line">… …</span><br><span class="line">表级完整性约束n</span><br><span class="line">)</span><br></pre></td></tr></table></figure><div class="tabs" id="test3"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test3-1">列级完整性约束</button></li><li class="tab"><button type="button" data-href="#test3-2">表级完整性约束</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test3-1"><ul><li>DEFAULT 常量表达式：默认值约束 </li><li>NULL / NOT NULL ：空值/非空值约束 </li><li>UNIQUE：唯一键约束 </li><li>PRIMARY KEY：主键约束（等价非空和单值约束）</li><li>REFERENCES 父表名（主键）：外键约束 </li><li>CHECK( 逻辑表达式)：检查约束</li><li>IDENTITY：标识列 </li></ul><button type="button" class="tab-to-top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test3-2"><ul><li>UNIQUE( 列名1,  列名2, …,  列名n)： <code>多个列名</code>唯一键约束。</li><li>PRIMARY KEY( 列名1,  列名2, …,  列名n)： <code>多个列名</code> 组合主键约束。</li><li>FOREIGN KEY( 外键) REFERENCES  主键表( 主键)：<code>多个列名 </code>组合外键约束。</li><li>CHECK( 逻辑表达式）：含有<code>多个列名</code>逻辑表达式的检查约束</li></ul><button type="button" class="tab-to-top"><i class="fas fa-arrow-up"></i></button></div></div></div><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">USE</span> <span class="keyword">Library</span></span><br><span class="line"><span class="keyword">GO</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> ReaderType   <span class="comment">--创建读者类型表&quot;ReaderType&quot;</span></span><br><span class="line">(TypeID <span class="built_in">int</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> PRIMARY <span class="keyword">KEY</span>,<span class="comment">-- 读者类型编号，主键</span></span><br><span class="line">Typename <span class="built_in">char</span>(<span class="number">8</span>) <span class="literal">NULL</span>,  <span class="comment">-- 读者类型名称</span></span><br><span class="line">LimitNum <span class="built_in">int</span> <span class="literal">NULL</span>, <span class="comment">-- 限借数量</span></span><br><span class="line">LimitDays <span class="built_in">int</span> <span class="literal">NULL</span>  <span class="comment">-- 限借天数</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> Reader  <span class="comment">--创建读者表&quot;Reader&quot;</span></span><br><span class="line">(</span><br><span class="line"><span class="comment">/************* 列级定义和约束 *************/</span> </span><br><span class="line">RID <span class="built_in">char</span>(<span class="number">10</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> PRIMARY <span class="keyword">KEY</span>, <span class="comment">-- 读者编号，主键</span></span><br><span class="line">Rname <span class="built_in">char</span>(<span class="number">8</span>) <span class="literal">NULL</span>,  <span class="comment">-- 读者姓名</span></span><br><span class="line">TypeID <span class="built_in">int</span> <span class="literal">NULL</span>, <span class="comment">-- 读者类型</span></span><br><span class="line">Lendnum <span class="built_in">int</span> <span class="literal">NULL</span>,  <span class="comment">-- 已借数量</span></span><br><span class="line"><span class="comment">/************* 表级定义和约束 *************/</span> /</span><br><span class="line"><span class="keyword">FOREIGN</span> <span class="keyword">KEY</span>(TypeID) <span class="keyword">REFERENCES</span></span><br><span class="line">ReaderType(TypeID) <span class="keyword">ON</span> <span class="keyword">DELETE</span> <span class="keyword">NO</span> <span class="keyword">ACTION</span> <span class="comment">-- 外键，不级联删除</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> Book  <span class="comment">--创建图书表&quot;Book&quot;</span></span><br><span class="line">(BID <span class="built_in">char</span>(<span class="number">13</span>) PRIMARY <span class="keyword">KEY</span>,  <span class="comment">-- 图书编号，主键</span></span><br><span class="line">Bname <span class="built_in">varchar</span>(<span class="number">42</span>) <span class="literal">NULL</span>, <span class="comment">-- 书名</span></span><br><span class="line">Author <span class="built_in">varchar</span>(<span class="number">20</span>) <span class="literal">NULL</span>, <span class="comment">-- 作者</span></span><br><span class="line">Publisher <span class="built_in">varchar</span>(<span class="number">28</span>) <span class="literal">NULL</span>, <span class="comment">-- 出版社</span></span><br><span class="line">Price <span class="built_in">decimal</span>(<span class="number">7</span>,<span class="number">2</span>) <span class="literal">NULL</span> <span class="keyword">CHECK</span> (Price&gt;<span class="number">0</span>) , <span class="comment">-- 定价，检查约束</span></span><br><span class="line">LentOut <span class="built_in">bit</span>    <span class="comment">--是否借出</span></span><br></pre></td></tr></table></figure><h1 id="T-SQL修改表"><a href="#T-SQL修改表" class="headerlink" title="T-SQL修改表"></a>T-SQL修改表</h1><ul><li>修改 列属性或约束</li><li>添加 列或约束</li><li>删除 列或约束</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 表名</span><br><span class="line">(<span class="keyword">ALTER</span> <span class="keyword">COLUMN</span>  列名 列定义 <span class="comment">--修改列定义或约束 </span></span><br><span class="line">|<span class="keyword">ADD</span> &#123;列名 数据类型 约束|<span class="keyword">CONSTRAINT</span>  约束名&#125;[,...n]</span><br><span class="line"><span class="comment">--增加新的列或约束 </span></span><br><span class="line">|<span class="keyword">DROP</span>&#123;<span class="keyword">COLUMN</span> 列名|<span class="keyword">CONSTRAINT</span>  约束名&#125;[,...n]</span><br><span class="line"><span class="comment">--删除已有的列或约束 </span></span><br><span class="line">…  …</span><br><span class="line">)</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*表Book中“Publisher ”的类型“varchar(28)”改为“varchar(30)”，且不能为空*/</span></span><br><span class="line"><span class="keyword">USE</span> <span class="keyword">Library</span></span><br><span class="line"><span class="keyword">GO</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> Book</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">COLUMN</span> Publisher <span class="built_in">varchar</span>(<span class="number">30</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>  <span class="comment">--修改列定义</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*为表“Reader”添加邮件地址列和约束。*/</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> Reader</span><br><span class="line"><span class="keyword">ADD</span> Email <span class="built_in">varchar</span>(<span class="number">20</span>) <span class="literal">NULL</span> <span class="comment">-- 添加列</span></span><br><span class="line"><span class="keyword">GO</span></span><br><span class="line"><span class="comment">/* 此处的GO 必不可少，必须上一句添加列完成之后，才能在下句中为其添加CHECK 约束*/</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> Reader</span><br><span class="line"><span class="keyword">ADD</span> <span class="keyword">CONSTRAINT</span> Price_check <span class="keyword">CHECK</span>(Price&gt;<span class="number">30</span> <span class="keyword">and</span> Price&lt;<span class="number">90</span>)  <span class="comment">--添加约束</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*删除“Reader ”中的“Email”的约束和列*/</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> Reader</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">CONSTRAINT</span> Price_check , <span class="keyword">COLUMN</span> Email  <span class="comment">--删除约束和列</span></span><br></pre></td></tr></table></figure><h1 id="T-SQL删除表"><a href="#T-SQL删除表" class="headerlink" title="T-SQL删除表"></a>T-SQL删除表</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> 表名</span><br></pre></td></tr></table></figure><h1 id="T-SQL操作表数据"><a href="#T-SQL操作表数据" class="headerlink" title="T-SQL操作表数据"></a>T-SQL操作表数据</h1><h2 id="添加数据行"><a href="#添加数据行" class="headerlink" title="添加数据行"></a>添加数据行</h2><ul><li><strong>INSERT…VALUES</strong><br>每次添加一行</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> [<span class="keyword">INTO</span>] 表名 [( 列名表)] <span class="keyword">VALUES</span>(常量表)</span><br></pre></td></tr></table></figure><p>列名表用于指定该数据表的列名 ，可以指定一列或多列 ， 顺序可以与表的列顺序不同 。 在数据表中未被指定的列必须支持空值或者默认值 ， 如果默认值存在 ， 该列使用默认值 ，否则 SQLServer会尝试为该列补上一个空值 。<br>常量表用于提供向表中插入的值 ， 常量表中提供的数据与列名表指定的列名个数 、 数据类型和顺序必须一致 。<br>当常量表中提供的数据与表定义的列在个数和顺序上完全一致时 ， 列名表可以省略 </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*为表“ 为表“ReaderType ”添加数据行*/</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> ReaderType <span class="keyword">VALUES</span>(<span class="number">1</span>, <span class="string">&#x27; 教师&#x27;</span>, <span class="number">6</span>, <span class="number">90</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> ReaderType <span class="keyword">VALUES</span>(<span class="number">2</span>, <span class="string">&#x27; 职员&#x27;</span>, <span class="number">4</span>, <span class="number">60</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> ReaderType <span class="keyword">VALUES</span>(<span class="number">3</span>, <span class="string">&#x27; 学生&#x27;</span>, <span class="number">3</span>, <span class="number">30</span>);</span><br></pre></td></tr></table></figure><ul><li><strong>INSERT..SELECT</strong><br>每次添加若干行</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> 表名  <span class="keyword">SELECT</span> 子查询</span><br></pre></td></tr></table></figure><p>SELECT查询子句用于指定输入表的值 ，通过SELECT查询生成结果集 ,并将其添加到INSERT后指定表中 。<br>此语句可以将其他数据源的行添加到现有的表中 。 必须保证接收新值的表中列的数据类型与源表中相应列的数据类型一致 。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*将图书表“ 将图书表“Book”中人民邮电出版社出版的图书添加到新建的表“BookPostTel”中。*/</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> BookPostTel</span><br><span class="line">(BID <span class="built_in">char</span>(<span class="number">13</span>) PRIMARY <span class="keyword">KEY</span>, <span class="comment">--图书编号，主键</span></span><br><span class="line">Bname <span class="built_in">varchar</span>(<span class="number">42</span>) <span class="literal">NULL</span>, <span class="comment">--书名</span></span><br><span class="line">Author <span class="built_in">varchar</span>(<span class="number">20</span>) <span class="literal">NULL</span>, <span class="comment">--作者 </span></span><br><span class="line">Publisher <span class="built_in">varchar</span>(<span class="number">28</span>) <span class="literal">NULL</span>,  <span class="comment">--出版社 </span></span><br><span class="line">Price <span class="built_in">decimal</span>(<span class="number">7</span>,<span class="number">2</span>) <span class="literal">NULL</span> <span class="keyword">CHECK</span> (Price&gt;<span class="number">0</span>)) <span class="comment">-- 定价,检查约束 </span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">/*） 将图书表“Book”中“人民邮电出版社”出版的图书添加到新建的“ BookPostTel”表*/</span></span><br><span class="line"><span class="keyword">INSERT</span> BookPostTel</span><br><span class="line"><span class="keyword">SELECT</span> BID, Bname, Author, Publisher, Price</span><br><span class="line"><span class="keyword">FROM</span> Book</span><br><span class="line"><span class="keyword">WHERE</span> Publisher = <span class="string">&#x27;人民邮电出版社`</span></span><br></pre></td></tr></table></figure><h2 id="更新数据"><a href="#更新数据" class="headerlink" title="更新数据"></a>更新数据</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> 表名 </span><br><span class="line"><span class="keyword">SET</span> 列名<span class="number">1</span> ＝表达式<span class="number">1</span>, … , 列名n ＝表达式n</span><br><span class="line">[<span class="keyword">WHERE</span> 逻辑表达式]</span><br></pre></td></tr></table></figure><p> 对于UPDATE所指定的表  ，当满足WHERE子句后的条件 （ 逻辑表达式为真 ） 时 ，SET子句为指定的列名赋上 “=” 号后表达式的值 </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*将读者类型表“ReaderType ”中,学生的原限借数 “3 ”增加2 本，原限借天数“30 ”增加5天*/</span></span><br><span class="line"><span class="keyword">USE</span> <span class="keyword">Library</span></span><br><span class="line"><span class="keyword">GO</span></span><br><span class="line"><span class="keyword">UPDATE</span> ReaderType</span><br><span class="line"><span class="keyword">SET</span> LimitNum = LimitNum + <span class="number">2</span>, LimitDays = LimitDays + <span class="number">5</span></span><br><span class="line"><span class="keyword">WHERE</span> Typename = <span class="string">&#x27; 学生&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="删除数据"><a href="#删除数据" class="headerlink" title="删除数据"></a>删除数据</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DELETE</span> 表名 </span><br><span class="line">[ <span class="keyword">WHERE</span> 逻辑表达式 ]</span><br></pre></td></tr></table></figure><p>删除表中符合WHERE子句指定条件的数据行 。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 删除表“BookPostTel”中作者周慧的图书信息*/</span></span><br><span class="line"><span class="keyword">USE</span> <span class="keyword">Library</span></span><br><span class="line"><span class="keyword">DELETE</span> BookPostTel</span><br><span class="line"><span class="keyword">WHERE</span> Author = <span class="string">&#x27;周慧&#x27;</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*删除表“BookPostTel”中所有图书信息*/</span></span><br><span class="line"><span class="keyword">USE</span> <span class="keyword">Library</span></span><br><span class="line"><span class="keyword">DELETE</span> BookPostTel</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h1&gt;&lt;div class=&quot;note success flat&quot;&gt;&lt;p&gt;表是数据库对象，用于存储 &lt;code&gt;实体&lt;/code&gt;和&lt;code&gt; 实体间</summary>
      
    
    
    
    <category term="Java后端" scheme="http://xiaoliblog.cn/categories/Java%E5%90%8E%E7%AB%AF/"/>
    
    <category term="SQLServer" scheme="http://xiaoliblog.cn/categories/Java%E5%90%8E%E7%AB%AF/SQLServer/"/>
    
    
    <category term="SQLServer" scheme="http://xiaoliblog.cn/tags/SQLServer/"/>
    
  </entry>
  
  <entry>
    <title>SQLServer📦数据库创建与管理</title>
    <link href="http://xiaoliblog.cn/2021/01/15/%E5%90%8E%E7%AB%AF/SQLServer%E6%95%B0%E6%8D%AE%E5%BA%93/SQLServer_%E6%95%B0%E6%8D%AE%E5%BA%93%E5%88%9B%E5%BB%BA%E4%B8%8E%E7%AE%A1%E7%90%86/"/>
    <id>http://xiaoliblog.cn/2021/01/15/%E5%90%8E%E7%AB%AF/SQLServer%E6%95%B0%E6%8D%AE%E5%BA%93/SQLServer_%E6%95%B0%E6%8D%AE%E5%BA%93%E5%88%9B%E5%BB%BA%E4%B8%8E%E7%AE%A1%E7%90%86/</id>
    <published>2021-01-15T08:25:10.759Z</published>
    <updated>2021-01-15T09:21:20.275Z</updated>
    
    <content type="html"><![CDATA[<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><div class="note success flat"><p>👉👉👉<a href="https://www.liaoxuefeng.com/wiki/1177760294764384">SQL教程</a>||<a href="https://www.vxzsk.com/1393.html">MySql教程</a>||<a href="https://mooc1-1.chaoxing.com/mycourse/studentcourse?courseId=208834778&clazzid=17896696&enc=c000d7dfede85a60c5e4532781b84728&cpi=70838077&vc=1">数据库课程设计</a></p></div><h1 id="数据库概述"><a href="#数据库概述" class="headerlink" title="数据库概述"></a>数据库概述</h1><ul><li><p><strong>数据库（DataBase ，DB ）</strong></p><ol><li>数据的“仓库”<br>数据库可以<code> 存储</code> 数据，数据库是 <code>数据库对象</code> 的容器 ；<br>数据库 以<code> 操作系统文件的形式</code> 存储在磁盘上；</li><li>数据库能够使数据<code> 存储和检索</code> 以安全可靠的方式进行</li></ol></li><li><p><strong>数据库的分类</strong></p><ol><li>系统数据库</li><li>示例数据库</li><li>用户数据库</li></ol></li><li><p><strong>数据库文件</strong><br>  数据库文件与普通的磁盘文件没有什么不同一个数据库会拥有<code>至少 2 个 </code>数据库文件： 一个是为了<code>存放数据</code> ， 另一个 是为了<code>存放日志</code> 。</p></li></ul><div class="tabs" id="t1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#t1-1">主要数据文件</button></li><li class="tab"><button type="button" data-href="#t1-2">次要数据文件</button></li><li class="tab"><button type="button" data-href="#t1-3">事务日志文件</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="t1-1"><p>包含数据库的启动信息 、 数据库中其他文件的指针 、数据库级别的一些关键记录 关键记录(如：访问账 如：访问账户；权限设定；数据库共有多少个数据文件、日志文件、存放路径 日志文件、存放路径) 等 </p><div class="note warning flat"><p>每个数据库 <code>有且仅有一个 主数据文件</code><br>扩展名为<code>mdf</code>（Primary Database File）</p></div><button type="button" class="tab-to-top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="t1-2"><p>辅助数据文件，存储主要数据文件未存储的其他数据和对象</p><div class="note warning flat"><p>可以没有，也可以有多个<br>为 扩展名为 <code>ndf</code> （Secondary Database Files ）</p></div><button type="button" class="tab-to-top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="t1-3"><p>保存日志信息，以便用于恢复和跟踪数据库日志文件用于记录所有事务以及每个事务对数据库所做的修改。当数据库出现问题后，管理人员可以使用日志文件恢复数据库。</p><ul><li>每个数据库至少有一个日志文件，也可以有多个</li><li>最小为1MB （SQLServer2005 是512M） ）</li><li><code>建议放在与数据文件不同的存储器上</code></li><li>扩展名为<code>ldf </code>（ Log Database Files ） </li></ul><button type="button" class="tab-to-top"><i class="fas fa-arrow-up"></i></button></div></div></div><ul><li><p><strong>数据库文件组</strong><br>为了便于分配和管理，SQL Server 允许将多个 允许将多个数据库文件 （不同的磁盘）划分为一个文件集合，并用一个名称表示这一文件集合，即<code> 文件组</code><br>与数据库文件一样，文件组也分为 主要文件组 （Primary File Group）  和 次要文件组 （Secondary File Group）<br><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@5901ab03e3556d2744d52ee74226ee9b2a725621/2021/01/15/8ecb54b4ad0632bc92b852ccf6daf8f6.png"></p></li><li><p><strong>数据库对象</strong><br>数据库中所有被 存储、管理和使用 的 数据的不同结构形式</p></li><li><p>主要数据库对象： 数据库、关系图 、 表 、 键 、 约束 、 索引 、 视图 、 存储过程 、 触发器 、用户定义函数 、 用户和角色</p></li><li><p>组织结构： 节点构成树形逻辑结构</p></li><li><p><strong>数据库对象的命名</strong></p><ul><li>规则标识符（不带界定符）<br>字母、数字、下划线、 字母、数字、下划线、@ 、＃和美元符号组成<br>首字符不能为 <code>数字</code>和 <code>美元符号 </code><br>标识符不允许是T-SQL的保留字<br>标识符内不允许有 <code> 空格</code> 和 <code>特殊字符</code><br>长度小于128<br>例如： 例如：book_num </li><li>界定标识符<br>标识符中包含了SQL Server关键字或者包含了内嵌的空格和其他不是规则规定的字符，则要使用界定符<br>界定符号 [  和 ]<br>界定符号 “ 和 “<br>例如： “ book num ” 、 [1班刘德华]  、[select]</li></ul></li></ul><h1 id="T-SQL操作数据库"><a href="#T-SQL操作数据库" class="headerlink" title="T-SQL操作数据库"></a>T-SQL操作数据库</h1><ul><li>SQL （Structured Query Language）<br>结构化查询语言，是目前最为广泛使用的 结构化查询语言，是目前最为广泛使用的<code> 关系数据库标准</code>语言</li></ul><h2 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> <span class="keyword">Library</span> <span class="comment">-- 数据库名称</span></span><br><span class="line"><span class="keyword">ON</span> PRIMARY <span class="comment">-- 在主要文件组中建立主要数据文件</span></span><br><span class="line">(<span class="keyword">NAME</span>=<span class="keyword">Library</span>,  <span class="comment">-- 逻辑文件名</span></span><br><span class="line">FILENAME=<span class="string">&#x27;D:\ 图书管理数据\Library.mdf&#x27;</span>, <span class="comment">-- 物理文件路径和名字</span></span><br><span class="line"><span class="keyword">SIZE</span>=<span class="number">3</span>,  <span class="comment">-- 初始大小3MB</span></span><br><span class="line"><span class="keyword">MAXSIZE</span>=<span class="number">20</span>GB, <span class="comment">-- 最大容量为20GB</span></span><br><span class="line">FILEGROWTH = <span class="number">10</span>% <span class="comment">-- 增长速度为10%</span></span><br><span class="line">)</span><br><span class="line"><span class="keyword">LOG</span> <span class="keyword">ON</span> <span class="comment">-- 创建事务日志文件</span></span><br><span class="line">(<span class="keyword">NAME</span>=Library_log,  <span class="comment">-- 逻辑文件名</span></span><br><span class="line">FILENAME=<span class="string">&#x27;E:\ 图书管理日志\Library_log.ldf&#x27;</span>,<span class="comment">-- 物理文件路径和名字</span></span><br><span class="line"><span class="keyword">SIZE</span>=<span class="number">1</span>,  <span class="comment">-- 初始大小1MB</span></span><br><span class="line"><span class="keyword">MAXSIZE</span>=<span class="number">300</span>,  <span class="comment">-- 最大容量为600MB</span></span><br><span class="line">FILEGROWTH=<span class="number">10</span>%  <span class="comment">-- 增长速度为10%</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><ul><li><code>数据库名</code>： 在SQL Server中创建数据库的名称</li><li><code>ON</code>： 指明主要数据文件、次要数据文件和文件组的明确定义。</li><li><code>PRIMARY</code>： 该参数用于指定在其后的主要数据文件（默认第一个文件）和次要数据文件创建在主要文件组中。</li><li><code>FILEGROUP</code>： 该参数用于指明要创建的次要文件组，并在其后指定要创建在其中的次要数据文件。</li><li><code>LOG ON</code>：  指明事务日志文件的明确定义。如果没有此定义，系统会自动创建一个为所有数据文件总和 25% 大小或512KB大小的事务日志文件。</li></ul><h2 id="修改数据库"><a href="#修改数据库" class="headerlink" title="修改数据库"></a>修改数据库</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">DATABASE</span> &lt; 数据库名&gt;</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">ADD</span> <span class="keyword">FILE</span> &lt; 数据文件&gt; [, . . .,n] [<span class="keyword">TO</span> FILEGROUP  文件组名]</span><br><span class="line">|<span class="keyword">ADD</span> <span class="keyword">LOG</span> <span class="keyword">FILE</span> &lt; 事务日志文件&gt; [, . . .,n]</span><br><span class="line">|<span class="keyword">ADD</span> FILEGROUP 文件组名</span><br><span class="line"></span><br><span class="line">|REMOVE <span class="keyword">FILE</span> 逻辑文件名</span><br><span class="line">|REMOVE FILEGROUP 文件组名</span><br><span class="line"></span><br><span class="line">|<span class="keyword">MODIFY</span> <span class="keyword">FILE</span> &lt; 数据文件&gt; <span class="comment">--- 修改数据库文件属性</span></span><br><span class="line">|<span class="keyword">MODIFY</span> FILEGROUP 文件组名 <span class="comment">--- 修改文件组属性</span></span><br><span class="line">&#123;<span class="keyword">name</span>=new_filegroup_name | filegroup_property&#125;</span><br><span class="line">| <span class="keyword">MODIFY</span> <span class="keyword">NAME</span> =  新数据库名 <span class="comment">--- 修改数据库文件名</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>ADD FILE&lt; 数据文件&gt; [, . . .,n] [TO FILEGROUP  文件组名]：添加 ：添加数据文件到文件组。</li><li>ADD LOG FILE &lt; 事务日志文件&gt; [, . . . ,n]：添加事务日志文件。 </li><li>ADD FILEGROUP 文件组名：添加文件组。 </li><li>REMOVE FILE 逻辑文件名：删除逻辑文件（次要数据文件）。 </li><li>REMOVE FILEGROUP 文件组名：删除文件组（次要文件组）。 </li><li>MODIFY FILE &lt; 数据文件&gt;：修改数据库文件属性。</li><li>MODIFY NAME = 新数据文件名：修改数据库文件名。</li><li>MODIFY FILEGROUP 文件组名：修改文件组属性。</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--添加文件组“Library_Group”</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">DATABASE</span> <span class="keyword">Library</span></span><br><span class="line"><span class="keyword">ADD</span> FILEGROUP Library_Group</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--将一个新的数据文件&quot;Library_data2&quot; 添加到&quot;Library_Group&quot;</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">DATABASE</span> <span class="keyword">Library</span></span><br><span class="line"><span class="keyword">ADD</span> <span class="keyword">FILE</span>        <span class="comment">--添加次要数据文件</span></span><br><span class="line">(<span class="keyword">NAME</span>=Library_data2,</span><br><span class="line">FILENAME=<span class="string">&quot;D:\图书管理数据\Library_data2.ndf&quot;</span>,</span><br><span class="line"><span class="keyword">SIZE</span>=<span class="number">1</span>MB,</span><br><span class="line"><span class="keyword">MAXSIZE</span>=<span class="keyword">UNLIMITED</span>,</span><br><span class="line">FILEGROWTH=<span class="number">1</span>MB)</span><br><span class="line"><span class="keyword">TO</span> FILEGROUP Library_Group</span><br><span class="line"><span class="comment">--添加到次要文件组Library_GROUP</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 将次要数据文件&quot;Library_data2&quot;和次要文件组&quot;Library_Group&quot;从Library数据库中删除</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">DATABASE</span> <span class="keyword">Library</span></span><br><span class="line">REMOVE <span class="keyword">FILE</span> Library_data2   <span class="comment">--删除次要数据文件</span></span><br><span class="line"><span class="keyword">GO</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">DATABASE</span> <span class="keyword">Library</span></span><br><span class="line">REMOVE FILEGROUP Library_Group  <span class="comment">--删除次要文件组</span></span><br></pre></td></tr></table></figure><h2 id="删除数据库"><a href="#删除数据库" class="headerlink" title="删除数据库"></a>删除数据库</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">DATABASE</span> &lt;数据库名&gt;</span><br></pre></td></tr></table></figure><h1 id="分离和附加数据库"><a href="#分离和附加数据库" class="headerlink" title="分离和附加数据库"></a>分离和附加数据库</h1><ul><li><p><strong>附加和分离数据库</strong>：<br>可以切断数据库的使用 (比如当数据库日志很大占用了空间时，可以用分离数据库的方法来切断数据库，从而删除以前的数据库日志，来节省空间）。</p></li><li><p><strong>分离数据库</strong><br>分离数据库就是将某个数据库（如student_Mis）从SQL Server数据库列表中删除，使其不再被SQL Server管理和使用，但该数据库的文件（.MDF）和对应的日志文件（.LDF）完好无损。分离成功<br>后，我们就可以把该数据库文件（.MDF）和对应的日志文件（.LDF）拷贝到其它磁盘中作为备份保存</p></li></ul><div class="note warning flat"><p>只有分离了的数据库文件才能进行操作系统下的物理转移、复制、删除</p></div><ul><li><strong>附加数据库</strong><br>附加数据库就是将一个备份磁盘中的数据库文件（.MDF）和对应的日志文件（.LDF）拷贝到需要的计算机，并将其添加到某个SQLServer数据库服务器中，由该服务器来管理和使用这个数据库</li></ul><h2 id="分离数据库"><a href="#分离数据库" class="headerlink" title="分离数据库"></a>分离数据库</h2><ul><li><p>确保没有任何用户登录到数据库中</p></li><li><p>在 【 对象资源管理器 】 窗口中，展开 “ 数据库 ” 节点，右键需要分离的数据库，快捷菜单 “ 任务” —“分离“<br><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@f8cf5b482599c7a36360c5c5dc72add19084d76c/2021/01/15/d8d54a72450770c92f955edd7463862d.png"></p></li><li><p>打开的 【 分离数据库 】 对话框的 “ 数据库名称 ” 栏中显示了所选数据库的名称<br><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@9378b92e2e61b024a2cc71453a81e26cbb280a3d/2021/01/15/f45c660eceff38a639652a86b19fea0f.png"></p></li></ul><h2 id="附加数据库"><a href="#附加数据库" class="headerlink" title="附加数据库"></a>附加数据库</h2><ul><li><p>在 【 对象资源管理器 】 窗口中，用右键单击“数据库”节点，快捷菜单中选择“附加”命令<br><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@41362028dfcdfb689b8eebc38bd71ab46dcb41a0/2021/01/15/cf26066092559dfa39c9ad38ba0faf60.png"></p></li><li><p>在打开的 【 附加数据库 】 窗口中，单击“添加”按钮，会弹出 【 定位数据库文件 】 窗口，选择数据库所在的磁盘驱动器并展开目录树定位到数据库的 据库的.mdf  文件，如D:\ 教务管理数据文件\EDUC.mdf<br><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@c5f4b355da3ab2bf680e3e7fb04e0c0f6fbbcb27/2021/01/15/6b2f90cddf988765c73e5193a861d618.png"></p></li><li><p>单击 【 定位数据库文件 】 对话框的“确定”按钮，回到 【 附加数据库 】 窗口。可以为附加的数据库指定不同的名称和物理位置等<br><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@85fdf3a0f53236a66993c7a8696654bcc34810e8/2021/01/15/0426095803490dda4a015998d8b3ca87.png"></p></li><li><p>设置完毕后，单击“确定”按钮。数据库引擎将执行附加数据库任务。如果附加成功，在 【 对象资源管理器 】 中将会出现被附加的数据库。<br><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@c45f3fc9bc66d0c8e1500fb9c240238b57738389/2021/01/15/99ac5ffb5d30ef273a6f861714199ddd.png"></p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;参考&quot;&gt;&lt;a href=&quot;#参考&quot; class=&quot;headerlink&quot; title=&quot;参考&quot;&gt;&lt;/a&gt;参考&lt;/h1&gt;&lt;div class=&quot;note success flat&quot;&gt;&lt;p&gt;👉👉👉&lt;a href=&quot;https://www.liaoxuefeng.</summary>
      
    
    
    
    <category term="Java后端" scheme="http://xiaoliblog.cn/categories/Java%E5%90%8E%E7%AB%AF/"/>
    
    <category term="SQLServer" scheme="http://xiaoliblog.cn/categories/Java%E5%90%8E%E7%AB%AF/SQLServer/"/>
    
    
    <category term="SQLServer" scheme="http://xiaoliblog.cn/tags/SQLServer/"/>
    
  </entry>
  
  <entry>
    <title>操作系统⚡I/O管理</title>
    <link href="http://xiaoliblog.cn/2021/01/15/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F_IO%E7%AE%A1%E7%90%86/"/>
    <id>http://xiaoliblog.cn/2021/01/15/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F_IO%E7%AE%A1%E7%90%86/</id>
    <published>2021-01-15T05:20:22.922Z</published>
    <updated>2021-01-15T05:21:01.431Z</updated>
    
    <content type="html"><![CDATA[<h1 id="I-O管理"><a href="#I-O管理" class="headerlink" title="I/O管理"></a>I/O管理</h1><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/841fa902a42c4e677331af7912ad4fde.png"></p><h2 id="I-O设备分类"><a href="#I-O设备分类" class="headerlink" title="I/O设备分类"></a>I/O设备分类</h2><ul><li><p>按使用特性分类</p><ol><li>人机交互类外设<br>鼠标、键盘、打印机等等，传输速度慢</li><li>存储类<br>移动硬盘、光盘等，传输速度块</li><li>物理通信设备<br>调制解调器等，速度一般</li></ol></li><li><p>按传输速度分类</p><ol><li>低速设备<br>鼠标、键盘等，每秒几百字节</li><li>中速设备<br>激光打印机等，每秒数千到上万字节</li><li>高速设备<br>磁盘等，每秒数千至千兆字节</li></ol></li><li><p>按信息交换的单位</p><ol><li>块设备<br>如磁盘等，传输数据块，可寻址（随机读写）</li><li>字符设备<br>鼠标键盘，传输字符，不可寻址，输入输出采用中断驱动方式</li></ol></li></ul><h2 id="I-O控制器"><a href="#I-O控制器" class="headerlink" title="I/O控制器"></a>I/O控制器</h2><ul><li><p><strong>机械部件</strong><br>执行具体的I/O操作，比如鼠标键盘的按钮，显示器的屏幕，移动硬盘的磁臂</p></li><li><p><strong>电子部件</strong><br>  CPU和机械部件的中介，通常是插入主板的电路板<br>  又叫I/O控制器，设备控制器</p><ol><li><strong>接受和识别CPU的命令</strong><br>控制寄存器保存命令和参数</li><li><strong>向CPU报告设备状态</strong><br>状态寄存器记录设备状态，如：1表示空闲，0表示忙碌</li><li><strong>数据交换</strong><br>数据寄存器用于双方数据交换的缓冲区</li><li><strong>地址识别</strong><br>通过CPU提供的地址判断读写哪个寄存器</li></ol></li><li><p><strong>组成</strong></p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/212f3c6c9cf226974950b81c08da30d4.png"></p><ul><li><strong>内存映像I/O 和 寄存器独立编址</strong><br>统一编址/独立编址</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/369f9a725ef40b92687193a32d81504e.png"></p><h2 id="I-O控制方式"><a href="#I-O控制方式" class="headerlink" title="I/O控制方式"></a>I/O控制方式</h2><ul><li><strong>程序直接控制</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/c8207bb3ce99d3f28812105daa163e65.png"></p><ul><li><strong>中断驱动方式</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/4de1d22c12ae1af7c5a51dd2372aba92.png"></p><ul><li><strong>直接存储器存取(DMA)方式</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/e82bebeab44dfc1375309c774b8ab8cd.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/5fb3a4d8e66831b9a01b5a333cd44336.png"></p><ul><li><strong>通道控制方式</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/378f1ea022a8162db2dc88dab6cbb2c8.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/b465db97c2c140914517931a72fc01de.png"></p><ul><li><strong>对比</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/f9b61bfe6d6533744162e109d4db4b29.png"></p><h2 id="I-O软件层次结构"><a href="#I-O软件层次结构" class="headerlink" title="I/O软件层次结构"></a>I/O软件层次结构</h2><ul><li><strong>用户层软件</strong><br>提供易用的库函数</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/26e762ed21e497fc84190d106516923e.png"></p><ul><li><strong>设备独立性软件</strong><br>提供调用接口(read/write系统调用)<br>设备保护<br>差错处理<br>设备分配与回收<br>数据缓冲区管理<br>建立逻辑设备名到物理设备名的映射关系<br>根据设备类型调用相应的驱动程序</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/2a03874beb3992f636423569dbceb5b4.png"></p><ul><li><strong>设备驱动程序</strong><br>设置设备的寄存器<br>检测设备状态</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/61e39c3eaed5fcf1f08fc77e7b7551c0.png"></p><ul><li><strong>中断处理程序</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/95ce891b6852f81a2cb3120f8e0ffd61.png"></p><h2 id="I-O核心子系统"><a href="#I-O核心子系统" class="headerlink" title="I/O核心子系统"></a>I/O核心子系统</h2><p>由设备独立性软件、设备驱动程序、中断处理程序组成，<br>属于操作系统内核部分，即I/O系统</p><h3 id="假脱机技术-SPOOLing"><a href="#假脱机技术-SPOOLing" class="headerlink" title="假脱机技术(SPOOLing)"></a>假脱机技术(SPOOLing)</h3><p>在用户层软件实现，但是408大纲将其归入I/O核心子系统</p><ul><li><p> <strong>脱机技术</strong><br>脱机技术指的是脱离主机的控制进行输入输出操作<br>很久以前是纸带输入，速度太慢，于是通过外围控制机将纸带数据输入到磁带，再输入主机，输出同理<br>缓解CPU与慢速I/O设备的速度矛盾</p></li><li><p><strong>假脱机技术实现原理</strong></p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/294494befcdb3cef54c51186ac1d7eec.png"></p><ul><li><strong>共享打印机原理分析</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/d51701e8bf1fbb9d0630f32d079cac26.png"></p><h3 id="设备分配与回收"><a href="#设备分配与回收" class="headerlink" title="设备分配与回收"></a>设备分配与回收</h3><ul><li><p>设备分配应该考虑的因素</p><ol><li>设备的固有属性<br>独占设备、共享设备、虚拟设备(SPOOLing技术将独占设备改造成虚拟的共享设备)</li><li>设备分配算法<br>先来先服务、优先级高者优先、短任务优先等等</li><li>设备分配的安全性<br>安全分配方式：串行使用设备，为进程分配一个设备后将进程阻塞，I/O完成再唤醒。不会产生死锁<br>不安全分配方式：进程请求I/O，操作系统负责分配设备，进程可以继续执行或者请求新的I/O，直到某个I/O无法满足才阻塞进程。可能产生死锁</li></ol></li><li><p>静态分配和动态分配<br>  进程运行前分配全部资源/运行时动态分配，见死锁那章</p></li><li><p>数据结构<br>  一个通道控制多个设备控制器，一个设备控制器控制多个设备</p></li><li><p>分配过程</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/2799b9f792d0c4b37f05bed3e5d01870.png"></p><ul><li>分配过程改进</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/7402da3e85d0454564595bcb4eea6bc7.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/b685ebaa2793533d4851c732b59421a3.png"></p><h3 id="缓冲区管理"><a href="#缓冲区管理" class="headerlink" title="缓冲区管理"></a>缓冲区管理</h3><ul><li><p>缓冲区的作用</p><ol><li>缓冲区可以使用专门的硬件寄存器实现，成本高容量小，更多时候使用内存做缓冲区</li><li>缓和CPU与I/O的速度矛盾</li><li>减少对CPU的中断频率，放宽对CPU中断的时间限制（中断驱动的字符型设备）</li><li>解决数据粒度不匹配的问题（字符型/块型）</li><li>提高CPU与I/O的并行性</li></ol></li><li><p><strong>单缓冲</strong></p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/6ec49ee53ac77d8ac79f5a3d0a667f8a.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/3e7298c4ccbc0d42abb56c651dbad863.png"></p><ul><li><strong>双缓冲</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/36e52d2b73e0353f30cf5fb6d5637e36.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/36a14ebcdb5bafdecd043eaa936e6ece.png"></p><ul><li><strong>循环缓冲</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/2125e12c4ca05881880fee2526d95275.png"></p><ul><li><strong>缓冲池</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/9438f9747cbace132ec876cde0751043.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;I-O管理&quot;&gt;&lt;a href=&quot;#I-O管理&quot; class=&quot;headerlink&quot; title=&quot;I/O管理&quot;&gt;&lt;/a&gt;I/O管理&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/lzyblog/image@main/2</summary>
      
    
    
    
    <category term="计算机基础" scheme="http://xiaoliblog.cn/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/"/>
    
    <category term="操作系统" scheme="http://xiaoliblog.cn/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
    
    <category term="操作系统" scheme="http://xiaoliblog.cn/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>操作系统⚡文件管理</title>
    <link href="http://xiaoliblog.cn/2021/01/15/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F_%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86/"/>
    <id>http://xiaoliblog.cn/2021/01/15/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F_%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86/</id>
    <published>2021-01-15T05:18:45.901Z</published>
    <updated>2021-01-15T05:19:50.687Z</updated>
    
    <content type="html"><![CDATA[<h1 id="文件管理"><a href="#文件管理" class="headerlink" title="文件管理"></a>文件管理</h1><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/8cb3890c5cfca0ce03f7e5c3893cd027.png"></p><ul><li>文件的属性<ol><li>文件名<br>主要是给用户看，同一个目录下不允许重名文件</li><li>标识符<br>一个系统内各文件标识符唯一，对用户毫无可读性，给操作系统看的</li><li>类型<br>文件扩展名</li><li>位置<br>文件存放路径，给用户看的，在外存中的地址用户是看不到的</li><li>大小</li><li>创建时间</li><li>上次修改/访问时间</li><li>所有者信息</li><li>保护信息</li></ol></li></ul><h1 id="文件的逻辑结构"><a href="#文件的逻辑结构" class="headerlink" title="文件的逻辑结构"></a>文件的逻辑结构</h1><ul><li>什么是逻辑结构</li></ul><p><strong>逻辑结构</strong>：在用户看来，文件内部的数据是如何组织起来<br><strong>物理结构</strong>：操作系统看来，文件的数据如何存放在外存中</p><ul><li><strong>无结构文件</strong><br>又叫流式文件，比如txt，由一些二进制或者字符流组成</li></ul><h2 id="有结构文件"><a href="#有结构文件" class="headerlink" title="有结构文件"></a>有结构文件</h2><ul><li><p>又叫记录式文件，比如数据库表，由一组相似的记录组成</p></li><li><p>记录是一组相关数据线的集合，每条记录有一个数据项可作为关键字</p></li><li><p>根据记录的长度是否相等，分为：定长记录，可变长记录</p></li><li><p><strong>顺序文件</strong></p><ul><li><strong>链式存储</strong><br>逻辑上相邻的记录，在物理上离散存储。<br>无论是定长/可变长记录，都无法实现随机存取，只能从链头开始遍历</li><li><strong>顺序存储</strong><br>逻辑上相邻的记录，在物理上也相邻。<br>没有说明的情况下，顺序文件指采用顺序存储的顺序文件</li></ul><ol><li><strong>可变长记录</strong><br>无法实现随机存取</li><li><strong>定长记录</strong><br>可以实现随机存储。如果采用串结构(记录顺序与关键字无关)，无法快速找到某个关键字对应的记录，如果采用顺序结构(记录按关键字排序的)，可以使用折半查找快速找到记录</li></ol></li><li><p><strong>索引文件</strong></p><ul><li>索引表本身是定长记录的顺序文件，索引表项包含索引号，长度，指针，真正的记录可以在物理上离散存储。</li><li>索引号可以是关键字，这样就能折半查找加快检索速度，用于对信息处理及时性要求高的场合，解决了顺序文件增删不便的问题</li><li>可以用不同的数据项建立多个索引表</li></ul></li><li><p><strong>索引顺序文件</strong></p><ul><li>将记录分组，每一个组对应一个索引表项</li><li>检索记录时先检索索引表，找到分组，再顺序查找分组</li><li>记录过多时，可以建立多级索引表</li><li>记录N的表，平均查找次数是N/2</li></ul></li></ul><h1 id="文件目录"><a href="#文件目录" class="headerlink" title="文件目录"></a>文件目录</h1><ul><li><p><strong>文件控制块(FCB)</strong><br>一个FCB 对应一个文件，一个FCB就是一个目录项，FCB的有序集合叫“文件目录”<br>FCB包含了文件的基本信息，存取控制信息，使用信息等等，最重要的是文件名、文件存放的物理地址<br>对目录的操作:搜索、创建文件、删除文件、显示文件、修改文件</p></li><li><p><strong>单级目录结构</strong></p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/8a0b4efcd29db4cced9e2cb247b09f15.png"></p><ul><li><strong>两级目录结构</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/3cf10a2b20534a4d42023945fdc63f72.png"></p><ul><li><strong>多级(树形)目录结构</strong><br>共享不方便</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/aef4051a93db04e86ca7c72c2c2fbd2f.png"></p><ul><li><strong>无环图目录结构</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/f6590892b721e118e6ec125c451395f5.png"></p><ul><li><strong>索引节点(FCB改进）</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/458da625bb3ef4b7d0550f5824fd4e60.png"></p><h1 id="文件的物理结构"><a href="#文件的物理结构" class="headerlink" title="文件的物理结构"></a>文件的物理结构</h1><ul><li><strong>文件块、物理块</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/9e0536d5a5a087ba0172451339110976.png"></p><h2 id="连续分配"><a href="#连续分配" class="headerlink" title="连续分配"></a>连续分配</h2><ul><li>优点：支持随机访问；顺序访问时速度最快（移动磁头所需的时间短）</li><li>缺点：不方便文件扩展，每次扩展都得迁移到一段连续的空间，代价大；存储空间利用率低，产生磁盘碎片</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/9cf825dd079e0bc8c633914c5f798618.png"></p><h2 id="链接分配"><a href="#链接分配" class="headerlink" title="链接分配"></a>链接分配</h2><ul><li><strong>隐式链接</strong><br>方便拓展，磁盘利用率高<br>不支持随机访问，查找效率低</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/c933ccf03e736d7999a3246d65c5e030.png"></p><ul><li><strong>显式链接</strong><br>逻辑块号转物理块号不需要访问磁盘，因此支持随机访问；扩展方便且不会有磁盘碎片<br>缺点是FAT要占用一定的存储空间</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/ea24291a7c921ad7b56dd5101f5cf6a2.png"></p><h2 id="索引分配"><a href="#索引分配" class="headerlink" title="索引分配"></a>索引分配</h2><p>每一个文件建立一张索引表，其中记录文件的逻辑块对应的物理块。存放索引表的磁盘块叫索引块，存放文件数据的磁盘块叫数据块。</p><ul><li><strong>链接方案</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/7b06a91634ab0108bc54fd9820475128.png"></p><ul><li><strong>多层索引</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/2583fd053336ff2a32b63f4b24fdb46f.png"></p><ul><li><strong>混合索引</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/c4fdb3f9861d1a37e234bf73cebb3290.png"></p><ul><li><strong>对比</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/2387e02852ddb16f92beea74b851a9e5.png"></p><h2 id="对比"><a href="#对比" class="headerlink" title="对比"></a>对比</h2><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/8e0caa75cbdb07a6acf1bcd1acc047fa.png"></p><h1 id="文件存储空间管理"><a href="#文件存储空间管理" class="headerlink" title="文件存储空间管理"></a>文件存储空间管理</h1><ul><li><strong>存储空间划分与初始化</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/0960e40a11a50610a063a89c9291b238.png"></p><h2 id="管理方法"><a href="#管理方法" class="headerlink" title="管理方法"></a>管理方法</h2><ul><li><strong>空闲表法</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/9f93c30bbc2e803a2bd12fabcc9ebcbc.png"></p><ul><li><p><strong>空闲链表法</strong></p><ol><li>空闲盘块链<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/e80227bfee4ddd88ea0543e0db25ca0d.png"></li><li>空闲盘区链<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/4960ca076e0d2fc5de879058a70715a1.png"></li></ol></li><li><p><strong>位示图法</strong></p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2021/01/08/9b107b740bff30f726cd647060d78529.png"></p><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/9e8ea8088ae40d789f6d8cf260f36f43.png"></p><ul><li><strong>成组链接法</strong><br>适用于大型文件系统，文件卷的目录区中，专门用一个磁盘块作为超级块，系统启动时读入内存，并且保持内外存超级块数据同步<br>比较复杂，看视频：<a href="https://www.bilibili.com/video/BV1YE411D7nH?p=52">https://www.bilibili.com/video/BV1YE411D7nH?p=52</a></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/d3d0b43a9930c6674bc7cb467cc2a4ec.png"></p><h1 id="文件的基本操作"><a href="#文件的基本操作" class="headerlink" title="文件的基本操作"></a>文件的基本操作</h1><ul><li>创建文件(creat)<ol><li>在外存中找到文件所需的空间</li><li>根据文件路径找到对应目录，创建文件对应的目录项​</li></ol></li><li>删除文件(delete)<ol><li>根据路径找到目录文件，找到文件名对应的目录项</li><li>回收文件占用的磁盘块</li><li>.删除目录项​​</li></ol></li><li>打开文件(open)<ol><li>根据路径找到目录文件，找到文件名对应的目录项，检测用户权限</li><li>将目录项复制到该进程在内存中的打开文件表中，返回表目编号​(索引号/文件描述符) </li></ol></li><li>关闭文件(close)<ol><li>删除进程的打开文件表中对应项</li><li>回收分配给该文件的内存空间等资源</li><li>系统打开文件表的打开计数器count-=1(归零时删除该项)​​</li></ol></li><li>读文件(read)<br>  需提供进程打开文件表中的索引号，读入的数据量，数据在内存中存放的位置<br>  从读指针​指向的外存位置读取指定大小的数据到指定的内存区域</li><li>写文件(write)<br>  需要提供打开文件表中的索引号，写出的数据量，写回外存的数据位置(写指针指向)</li></ul><h1 id="文件共享"><a href="#文件共享" class="headerlink" title="文件共享"></a>文件共享</h1><ul><li><strong>基于索引结点的共享(硬链接)</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/3c9338371fa86c7786b4ccb44689caed.png"></p><ul><li><strong>基于符号链的共享(软链接)</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/ae84e44309b34cfd622f053f47190759.png"></p><h1 id="文件保护"><a href="#文件保护" class="headerlink" title="文件保护"></a>文件保护</h1><ul><li>口令保护<br>  FCB中保存口令，访问时与用户提供的口令对比<br>  开销小，但是不够安全</li><li>加密保护<br>  用密码对文件数据流加密，访问时用密码解密，比如异或加密<br>  保密性强，不需要存储密码，但是加密/解密要花费一定的时间</li><li>访问控制<br>  每一个文件FCB中增加一个访问控制表(ACL)，控制各用户的访问权限<br>  精简的访问列表，以组为单位，标记其访问权限，比如Linux里面分：所有者，所属组，其他人</li></ul><h1 id="文件系统的层次结构"><a href="#文件系统的层次结构" class="headerlink" title="文件系统的层次结构"></a>文件系统的层次结构</h1><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/9703c1be05bce180167e6fa59878359c.png"></p><h1 id="磁盘管理"><a href="#磁盘管理" class="headerlink" title="磁盘管理"></a>磁盘管理</h1><h2 id="磁盘的结构"><a href="#磁盘的结构" class="headerlink" title="磁盘的结构"></a>磁盘的结构</h2><ul><li><strong>磁盘/磁道/扇区</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/e2fd159374ac453b5c36d9e943ad7cf1.png"></p><ul><li><strong>如何在磁盘中读写数据</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/fb1c99d8be588db49c4ac54666d26e99.png"></p><ul><li><strong>盘面/柱面/物理地址</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/897ccf51aaaff4967dc66f561ac62f80.png"></p><ul><li><strong>磁盘分类</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/f8d0cbc3ad9baf31d441fc3c5062c63e.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/ebbceb79d6505750496e61cf6fe1bc1b.png"></p><h2 id="磁盘调度算法"><a href="#磁盘调度算法" class="headerlink" title="磁盘调度算法"></a>磁盘调度算法</h2><ul><li><strong>读写时间</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/ab37e3ed8e17a95235ae54100ea8f8db.png"></p><ul><li><strong>调度算法</strong><ol><li><strong>先来先服务(FCFS)</strong><br>根据进程请求访问磁盘的先后顺序调度<br>公平；如果大量进程访问的磁道很分散，虚拟会很差​</li><li><strong>最短寻道时间优先(SSTF)</strong><br>优先处理当前磁头最近的磁道，保证寻道时间最短（眼前最优，未必整体最优）<br>性能较好，但是可能产生饥饿现象</li><li><strong>扫描算法(SCAN)</strong><br>又叫电梯算法，在SSTF算法的基础上，规定磁头只有移动到磁道尽头（最外侧或者最内侧）才能往回移动<br>性能较好，不会饥饿；但是只能扫描到最边上的磁道才能改变磁头方向，越外侧的的磁道，响应频率越高</li><li><strong>LOOK调度算法</strong><br>改进SCAN算法，磁头边移动边观察(LOOK)，如果移动方向没有请求了，就不必继续扫描，直接调头</li><li><strong>循环扫描算法(C-SCAN)</strong><br>只有磁头朝着某个方向移动（比如磁道号增大方向）时才处理访问请求，移动到最边上后直接返回到另一边（0号磁道），返回途中不处理请求</li><li><strong>相比SACN算法</strong><br>各个位置的磁道响应频率很平均​</li><li><strong>C-LOOK算法</strong><br>改进C-SCAN算法，磁头移动方向上如果没有请求了，就直接返回到最靠近边缘的请求磁道即可</li></ol></li></ul><h2 id="减少磁盘延时"><a href="#减少磁盘延时" class="headerlink" title="减少磁盘延时"></a>减少磁盘延时</h2><ul><li><p><strong>交替编号</strong><br>一个盘面上，让逻辑相邻的扇区在物理上有一定间隔，使读取连续逻辑扇区所需的延迟时间更小<br>​（如果没有间隔，读入N号扇区时数据时需要一些时间处理，导致错过N+1号扇区，磁盘需要再转一圈才能读到N+1）</p></li><li><p><strong>磁盘物理地址设计</strong></p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/2ddce19efb6ffb45e550e494c2674ca5.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/96815efaafe28326e1cf29720642d2f2.png"></p><ul><li><strong>错位命名</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/346b8e84564845047ac77b7a84733f2d.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/5842e0c4e82f9a00c9df4f1718b63d71.png"></p><h2 id="磁盘管理-1"><a href="#磁盘管理-1" class="headerlink" title="磁盘管理"></a>磁盘管理</h2><ul><li><strong>磁盘初始化</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/4042a22e2a51b1943d413286e53f2c9d.png"></p><ul><li><strong>引导快</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/f407760fd3c9f41870514841b10bec42.png"></p><ul><li><strong>坏块管理</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/62341e5c566ea63d0ee9af4e96922f1d.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;文件管理&quot;&gt;&lt;a href=&quot;#文件管理&quot; class=&quot;headerlink&quot; title=&quot;文件管理&quot;&gt;&lt;/a&gt;文件管理&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/</summary>
      
    
    
    
    <category term="计算机基础" scheme="http://xiaoliblog.cn/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/"/>
    
    <category term="操作系统" scheme="http://xiaoliblog.cn/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
    
    <category term="操作系统" scheme="http://xiaoliblog.cn/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>操作系统⚡内存管理</title>
    <link href="http://xiaoliblog.cn/2021/01/15/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F_%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/"/>
    <id>http://xiaoliblog.cn/2021/01/15/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F_%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/</id>
    <published>2021-01-15T05:16:33.486Z</published>
    <updated>2021-01-15T05:17:16.013Z</updated>
    
    <content type="html"><![CDATA[<h1 id="内存管理"><a href="#内存管理" class="headerlink" title="内存管理"></a>内存管理</h1><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/339f84440daad4b17a82464ae8c6d840.png"></p><h2 id="内存基础"><a href="#内存基础" class="headerlink" title="内存基础"></a>内存基础</h2><ul><li><p>什么是内存<br>  内存是用于存放数据的硬件，<strong>程序执行前需要先放到内存中才能被CPU处理</strong></p><ul><li><strong>储存单元</strong><br>按<strong>字节</strong>编址：一个存储单元1字节，8个二进制位，1字节对应一个地址<br>按<strong>字长</strong>编址：一个存储单元1个字长，字长16位的计算机一个存储单元16个二进制位<br>2^10=1K           2^20=1M               2^30=1G<br>4G内存的地址长度: 4*2^30=2^32  ，所以需要32个二进制位(32位操作系统最大支持4GB内存，指针大小4字节)</li><li><strong>内存地址</strong><br>内存从0开始，每一个地址对应一个<strong>存储单元</strong></li></ul></li><li><p>进程运行的基本原理</p><ul><li><strong>指令的工作原理</strong><br>CPU按照程序段的指令去内存某个位置存取数据，一条 指令由操作码+若干参数组成<br>编译生成的指令中一般使用逻辑地址</li><li><strong>逻辑地址/物理地址</strong><br>逻辑地址（相对地址）<br>物理地址（绝对地址）</li></ul></li><li><p>从写程序到程序运行</p><ol><li><strong>编辑源文件</strong></li><li><strong>编译</strong><br>源代码文件(.c)生成目标模块(.o)，将高级语言翻译为机器语言<br>每一个目标模块都具有独立的逻辑地址 0-xxx</li><li><strong>链接</strong><br>目标模块生成装入模块(可执行文件,如.exe)，链接完成使得各模块形成整体的链接地址</li><li><strong>装入(载)</strong><br>将装入模块装入内存运行，装入后形成物理地址</li></ol></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/8e00f6dbac6c69dbfeb08565f887d6a6.png"></p><ul><li><p>三种链接方式</p><ol><li><strong>静态链接</strong><br>装入前链接成一个完整模块</li><li><strong>装入时动态链接</strong><br>运行前边装入边链接</li><li><strong>运行时动态链接</strong><br>运行时需要什么模块才装入并链接</li></ol></li><li><p>三种装入方式</p><ol><li><strong>绝对装入</strong><br>编译时产生绝对地址，只适用于单道程序环境(那时候还没有操作系统，编译器负责实现)</li><li><strong>可重定位装入(静态重定位)</strong><br>编译链接后的装入模块地址是逻辑地址，装入时进行重定位，将指令中逻辑地址+装入的起始物理地址得到真实的物理地址<br>一个作业装入内存时，<strong>必需分配其要求的全部内存空间</strong>，内存不够就不能装入<br>作业一旦进入内存，<strong>运行期间就不能再移动，也不能再申请内存空间，因为地址都写死了</strong><br>早期多道批处理操作系统使用</li><li><strong>动态运行时装入(动态重定位)</strong><br>运行时才将逻辑地址转换为物理地址，需要设置**重定位寄存器(或者叫基址寄存器)**允许程序在内存中发生移动，而且程序可以分配到不连续的储存区，也支持动态申请内存<br>只需装入部分代码即可投入运行，可以向用户提供一个比存储空间大得多的地址空间<br>现代操作系统使用</li></ol></li></ul><h1 id="内存空间分配与回收"><a href="#内存空间分配与回收" class="headerlink" title="内存空间分配与回收"></a>内存空间分配与回收</h1><h2 id="连续分配管理方式"><a href="#连续分配管理方式" class="headerlink" title="连续分配管理方式"></a>连续分配管理方式</h2><p>为用户进程分配的内存必须是一个连续的内存空间</p><ul><li><strong>单一连续分配</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/0081a0e4a2e83c34175718736ba82557.png"></p><ul><li><strong>固定分区分配</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/5058bbf39550bd01e121ff658145bcd0.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/67c30dbd1599bee950756f950ef917ca.png"></p><ul><li><strong>动态分区分配</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/08767bf29ec2c778d70e77b5f4b1ab02.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/9d28c7547a80d70088163e835a6a5b0d.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/dfd3883c7a984ac035dcfbbe0394ce49.png"></p><blockquote><p>回收内存时，回收区前后的空闲分区应该合并</p></blockquote><ul><li><strong>动态分区分配算法</strong><ol><li><strong>首次适应(First Fit)</strong><br>空闲分区按地址递增顺序排列，每次分配内存时查找空闲分区链(表)，找到第一个满足要求的分区即可<br>每次从低地址部分查找，高地址的大分区更有可能被保存下来<br>效果最佳</li><li><strong>最佳适应(Best Fit)</strong><br>空闲分区按容量递增顺序链接，每次分配内存时按顺序查找内存分区链(表)，找到第一个可以满足的空闲分区<br>优先使用最小连续内存区，尽可能多的留下大块空闲区，满足大进程需求，但是会留下非常多难以利用的外部碎片</li><li><strong>最坏适应(Worst Fit)</strong><br>有叫最大适应算法(Largest Fit)<br>空闲分区按容量递减顺序排序，每次分配找到能满足要求的第一个空闲分区<br>优先使用最大的连续空闲区，使得分配后的剩余空闲区不会太少，方便使用，但是如果后面需要大内存区间就没办法了</li><li><strong>邻近适应(Next Fit)</strong><br>又叫循环首次适应算法<br>空闲分区按地址递增顺序构成循环链表，每次内存分配时从刚才查找结束位置开始，找到第一个能满足要求的空闲分区<br>无论是低地址还是高地址的空闲分区，都有相同的概率被使用，导致最后无大分区可用​</li><li><strong>对比</strong></li></ol></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/50d2425ddf6b7419c25b81048e422055.png"></p><h2 id="非连续分配管理方式"><a href="#非连续分配管理方式" class="headerlink" title="非连续分配管理方式"></a>非连续分配管理方式</h2><p>为用户进程分配的内存可以是一个分散的内存空间<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/28aefd8d61408a8fc73fa4de0eb88cb9.png"></p><h3 id="基本分页存储管理"><a href="#基本分页存储管理" class="headerlink" title="基本分页存储管理"></a>基本分页存储管理</h3><h4 id="分页管理"><a href="#分页管理" class="headerlink" title="分页管理"></a>分页管理</h4><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/9aa76ab94a1dbfae0f77f253568a809a.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/b95575785e694b93bba47d918ef7ed94.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/09faeccfa419d0484cda4eeaea7080f3.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/0fec9bc2dfe05653f27ef07bccbcf388.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/a3133228d3b4efc94a2469d17d0b5203.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/36b98f7da4ecbc6b1e226b84d7135526.png"></p><blockquote><p>基本分页存储管理的思想：把内存分成一个个相等的小分区，在按分区大小把进程拆分成一个个小部分 (x)</p></blockquote><h4 id="基本地址变换机构"><a href="#基本地址变换机构" class="headerlink" title="基本地址变换机构"></a>基本地址变换机构</h4><ul><li><p>页表寄存器(PTR)<br>  保存页表在内存中的起始地址F和页表长度M<br>  进程未执行的时候，F和M放在PCB中，进程被调度时，操作系统内核将其放到PTR中</p></li><li><p>地址转换过程</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/2eb2b028d5cd785c98260d6fbc118c24.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/b8eaa75727fb2d37f95172d5dcd91c50.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/c12017d76287105807bebd09920d3783.png"></p><ul><li>对页表项目的探讨</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/2154b9952fc29517e016662477ea7b1b.png"></p><h4 id="快表地址变换机构"><a href="#快表地址变换机构" class="headerlink" title="快表地址变换机构"></a>快表地址变换机构</h4><ul><li><p>局部性原理</p><ol><li>时间局部性:如果执行了程序中的某条指令,那么不久后这条指令很有可能再次执行;如果某个数据被访问过,不久之后该数据很可能再次被访问。(因为程序中存在大量的循环)</li><li>空间局部性:一旦程序访问了某个存储单元,在不久之后,其附近的存储单元也很有可能被访问。(因为很多数据在内存中都是连续存放的）</li></ol></li><li><p>什么是快表(TLB)<br>  又称联想寄存器(TLB) ,是一种访问速度比内存快很多的高速缓冲存储器,用来存放当前访问的若干页表项,以加速地址变换的过程。与此对应,内存中的页表常称为慢表。</p></li><li><p>地址变换过程</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/ec475874aa13a75c6efae864ad8089bb.png"></p><h4 id="两级页表"><a href="#两级页表" class="headerlink" title="两级页表"></a>两级页表</h4><ul><li><p>单级页表的问题<br>Q1：所有的页表项都要连续存放，页表很大时，需要占用很多很多个连续的页框。<br>比如32位逻辑地址分页储存，页面大小4K，则页表最多2^20项，一项占4B，一共需要1024个连续的页框才能放得下<br>Q2：没有必要让整个页表常驻内存，进程在一段时间可能只访问某几个特定的页面</p></li><li><p>两级页表原理</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/76d6a57cd465b8976246e5e9196edc2e.png"></p><ul><li>如何实现地址变换</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/657bc76d734af9c9af1d0a9464585fc3.png"></p><ul><li>注意事项</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/dec992c358e87fa5e9f4fd8b36c3ea51.png"></p><h3 id="基本分段存储管理"><a href="#基本分段存储管理" class="headerlink" title="基本分段存储管理"></a>基本分段存储管理</h3><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/16e9a89e972005edfe77c27ae941e8f2.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/7996687da1d81625eb2e670b73bf4631.png"></p><ul><li><strong>什么是段表</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/04c6fd47091dcdf52e5a5bed77b9ff8a.png"></p><ul><li><strong>如何实现地址变换</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/263cf986df0af5c56a30be57805b6bcf.png"></p><ul><li><strong>分段VS分页</strong>-</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/7158352d0aca697027068159d02d8cd8.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/8ab1305deb6e4491afc4e182ac4b9d0b.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/83f024c57174873268a1e390b80a2e68.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/242d7ee1fa0e36a0309c03ec7eb7a326.png"></p><h3 id="段页式存储管理"><a href="#段页式存储管理" class="headerlink" title="段页式存储管理"></a>段页式存储管理</h3><ul><li>分段分页的优缺点</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/391b4cf087b6c14ebbb1766382492a23.png"></p><ul><li><strong>段页式管理</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/137833abba4059c0befbb3b083a488a1.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/203f30c57ff875d37631b93836ab3cec.png"></p><ul><li><strong>段表、页表</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/efc6d68c9181d25b30b1f1d2dd93bfad.png"></p><ul><li><strong>如何实现地址变换</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/cc29b1687f721912dec313f5802eeb7f.png"></p><h1 id="内存空间的扩充"><a href="#内存空间的扩充" class="headerlink" title="内存空间的扩充"></a>内存空间的扩充</h1><h2 id="覆盖技术"><a href="#覆盖技术" class="headerlink" title="覆盖技术"></a>覆盖技术</h2><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/b8d088c6d7e777d60267200f96df9531.png"></p><h2 id="交换-对换-技术"><a href="#交换-对换-技术" class="headerlink" title="交换(对换)技术"></a>交换(对换)技术</h2><p>内存紧张时，把进程暂时换出到外存（例：进程的中级调度(内存调度)，挂起态，七状态模型）<br>磁盘分为对换区(swap)和文件区，前者连续分配追求I/O速度，后者离散分配追求存储空间利用率<br>优先换出阻塞进程、低优先级进程（可能导致饥饿）、还要考虑进程在内存的驻留时间，PCB不会换出</p><h2 id="虚拟储存技术"><a href="#虚拟储存技术" class="headerlink" title="虚拟储存技术"></a>虚拟储存技术</h2><ul><li>传统存储方式的缺点<br>  连续分配/非连续分配<ol><li>一次性<br>作业必须一次性全部装入内存后才能开始运行。大作业无法运行,多道程序并发度下降。</li><li>驻留性<br>作业在运行期间一直驻留在内存，内存中驻留大量的暂时用不到的数据，浪费了宝贵的内存资源。</li></ol></li><li>局部性原理    <ol><li>时间局部性<br>现在访问的指令、数据在不久后很可能再次访问</li><li>空间局部性<br>现在访问的内存单元周围的内存空间很可能在不久之后访问</li><li>高速缓存<br>频繁访问的数据放到更高速的储存器中</li></ol></li><li>虚拟内存的定义和特征<br>  程序不需要全部装入内存即可运行，运行时根据需要动态调入数据，内存不够时，换出一些数据到外存<ol><li>多次性<br>作业无需在运行时一次装入内存，而是允许分多次调用</li><li>对换性<br>作业无需在运行时常驻内存，允许作业换入、换出</li><li>虚拟性<br>从逻辑上扩充了内存容量，用户看到的容量，远大于实际容量</li></ol></li></ul><div class="note warning flat"><p>虚拟内存的<strong>最大容量</strong>是由计算机的地址结构（CPU寻址范围）确定的<br>虚拟内存的<strong>实际容量</strong>=min（内存和外存容量之和，CPU寻找范围）</p></div><h1 id="如何实现虚拟内存"><a href="#如何实现虚拟内存" class="headerlink" title="如何实现虚拟内存"></a>如何实现虚拟内存</h1><h2 id="请求调页"><a href="#请求调页" class="headerlink" title="请求调页"></a>请求调页</h2><p>访问的信息不存在时，操作系统负责将需要的信息从外存调入内存</p><h2 id="页面置换"><a href="#页面置换" class="headerlink" title="页面置换"></a>页面置换</h2><p>内存空间不足时，将内存中暂时不用的信息换到外存<br>页面的换入换出需要磁盘I/O，时间开销是很大的，缺页率越小越好</p><h3 id="最佳置换算法OPT"><a href="#最佳置换算法OPT" class="headerlink" title="最佳置换算法OPT"></a>最佳置换算法OPT</h3><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/a31e68c46d08157aff900e68175fcdb7.png"></p><h3 id="先进先出置换算法FIFO"><a href="#先进先出置换算法FIFO" class="headerlink" title="先进先出置换算法FIFO"></a>先进先出置换算法FIFO</h3><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/8fbfe8dec801c9679911f48024b89abe.png"></p><h3 id="最近最久未使用算法LRU"><a href="#最近最久未使用算法LRU" class="headerlink" title="最近最久未使用算法LRU"></a>最近最久未使用算法LRU</h3><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/12db53c5ecacba69329f1a320fd0f6ec.png"></p><h3 id="时钟置换算法CLOCK"><a href="#时钟置换算法CLOCK" class="headerlink" title="时钟置换算法CLOCK"></a>时钟置换算法CLOCK</h3><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/3fbda0061a096757ee0b6d7975e53ed3.png"></p><ul><li><strong>改进型时钟置换算法</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/fbc5786e66054fa21ae3e66f4636370e.png"></p><h3 id="对比"><a href="#对比" class="headerlink" title="对比"></a>对比</h3><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/6367b523aa247845d9ad05bbde1f773c.png"></p><h2 id="虚拟内存的实现"><a href="#虚拟内存的实现" class="headerlink" title="虚拟内存的实现"></a>虚拟内存的实现</h2><h3 id="请求分页存储管理"><a href="#请求分页存储管理" class="headerlink" title="请求分页存储管理"></a>请求分页存储管理</h3><ul><li><strong>页表机制</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/87530d9abd6297d27c42da9d19b5e2e3.png"></p><ul><li><p><strong>缺页中断机构</strong></p><ul><li>访问的页面不存在时，产生缺页中断(属于内中断的故障 fault)，操作系统缺页中断处理程序中断，进程放到阻塞队列，待调页完成后将进程唤醒，放到就绪队列</li><li>如果内存有空闲块，则为进程分配一个空闲块，将缺页装入其中，并修改页表相应页表项</li><li>如果内存没有空闲块，由页面置换算法选择一个页面淘汰(若该页面在内存期间被修改过，则需要先将其写回外存)，腾出一个空间再装入缺页​​</li><li>一条指令执行期间，可能产生多次缺页中断</li></ul></li><li><p><strong>地址变换机构</strong></p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/0e3537ef13a2ea5aca18407cb91af5ab.png"></p><h2 id="请求分段存储管理"><a href="#请求分段存储管理" class="headerlink" title="请求分段存储管理"></a>请求分段存储管理</h2><h2 id="请求段页式存储管理"><a href="#请求段页式存储管理" class="headerlink" title="请求段页式存储管理"></a>请求段页式存储管理</h2><h1 id="内存保护"><a href="#内存保护" class="headerlink" title="内存保护"></a>内存保护</h1><p>进程1只能访问进程1的内存，不能越界访问其它进程或者操作系统的内存区<br>方法一：在CPU中设置上限/下限寄存器，保存进程可访问的物理地址的上下限<br>方法二：重定位寄存器(基址寄存器)+界地址寄存器(限长寄存器)<br>重定位寄存器中保存了进程的起始物理地址P1，界地址寄存器保存了进程的最大逻辑地址P2, 进程可以访问的物理内存位置是P1~P1+P2</p><h1 id="页面分配策略"><a href="#页面分配策略" class="headerlink" title="页面分配策略"></a>页面分配策略</h1><ul><li><strong>相关概念</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/e5e89721b565c0911c692b8012b2892e.png"></p><ul><li><p><strong>固定分配局部置换</strong>)</p><ul><li>系统为每个进程分配一定数量的物理块,在整个运行期间都不改变。</li><li>若进程在运行中发生缺页,则只能从该进程在内存中的页面中选出一页换出,然后再调入需要的页面。</li><li>缺点:很难在刚开始就确定应为每个进程分配多少个物理块才算合理。(采用这种策略的系统可以根据进程大小、优先级、或是根据程序员给出的参数来确定为一个进程分配的内存块数)</li></ul></li><li><p><strong>可变分配全局置换</strong></p><ul><li>刚开始会为每个进程分配一定数量的物理块。操作系统会保持一个空闲物理块队列。</li><li>当某进程发生缺页时,从空闲物理块中取出一块分配给该进程;若已无空闲物理块,则可选择一个未锁定的页面换出外存,再将该物理块分配给缺页的进程。</li><li>只要某进程缺页,都将获得新的物理块,仅当空闲物理块用完时,系统才选择一个未锁定的页面调出。</li><li>被选择调出的页可能是系统中任何一个进程中的页,因此这个被选中的进程拥有的物理块会减少,缺页率会增加。</li></ul></li><li><p><strong>可变分配局部置换</strong></p><ul><li>刚开始会为每个进程分配一定数量的物理块。当某进程发生缺页时,只允许从该进程自己的物理块中选出一个进行换出外存。</li><li>如果进程在运行中频繁地缺页,系统会为该进程多分配几个物理块,直至该进程缺页率趋势适当程度;</li><li>反之,如果进程在运行中缺页率特别低,则可适当减少分配给该进程的物理块。</li></ul></li><li><p><strong>调入页面的时机</strong></p><ul><li><strong>预调页策略</strong><br>  运行前调入，根据空间局部性原理,一次调入若干个相邻的页面可能比一次调入一个页面更高效。但如果提前调入的页面中大多数都没被访问过,则又是低效的。<br>  因此可以预测不久之后可能访问到的页面,将它们预先调入内存,但目前预测成功率只有50%左右。故这种策略主要用于进程的首次调入,由程序员指定应该调入的部分。</li><li><strong>请求调页策略</strong><br>运行时调入，进程在运行期间发现缺页时才将所缺页面调入内存。由这种策略调入的页面一定会被访问到,但由于每次只能调入一页,而每次调页都要磁盘I/O操作,因此I/O开销较大。</li></ul></li><li><p><strong>从何处调页</strong></p><ul><li><strong>对换区空间足够</strong><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/cf3dd8df63ee90c85d95c7c43987561e.png"></li><li><strong>对换区空间不够</strong><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/258a8a5c20df486e189abb531c735fa3.png"></li><li><strong>Unix方式</strong><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/2d352762246646b4e081b7b4e4f8e2e7.png"></li></ul></li><li><p><strong>抖动(颠簸)现象</strong><br>给进程分配的物理块太少，刚刚换出的页面马上又要换入内存,刚刚换入的页面马上又要换出外存，这种频繁的页面调度行为称为抖动或颠簸。</p></li><li><p><strong>工作集</strong></p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/c3e0c087bb7b935766cc5956a55a248b.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;内存管理&quot;&gt;&lt;a href=&quot;#内存管理&quot; class=&quot;headerlink&quot; title=&quot;内存管理&quot;&gt;&lt;/a&gt;内存管理&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/</summary>
      
    
    
    
    <category term="计算机基础" scheme="http://xiaoliblog.cn/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/"/>
    
    <category term="操作系统" scheme="http://xiaoliblog.cn/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
    
    <category term="操作系统" scheme="http://xiaoliblog.cn/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>操作系统⚡进程管理</title>
    <link href="http://xiaoliblog.cn/2021/01/15/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F_%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86/"/>
    <id>http://xiaoliblog.cn/2021/01/15/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F_%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86/</id>
    <published>2021-01-15T05:14:40.515Z</published>
    <updated>2021-01-15T05:15:49.539Z</updated>
    
    <content type="html"><![CDATA[<h1 id="进程管理"><a href="#进程管理" class="headerlink" title="进程管理"></a>进程管理</h1><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/01/02066158f4beb9f2c557383fcf86ec8a.png"></p><h2 id="进程的定义"><a href="#进程的定义" class="headerlink" title="进程的定义"></a>进程的定义</h2><ul><li>进程的定义：<strong>程序段、数据段、PCB</strong>三部分组成了<strong>进程实体(进程映像)</strong> </li><li>一般情况下,我们把进程实体就简称为进程,例如,所谓创建进程,实质上是创建进程实体中的PCB;而撤销进程,实质上是撤销进程实体中的PCB</li></ul><blockquote><p>注意: PCB是进程存在的唯一标志!</p></blockquote><p>从不同的角度,进程可以有不同的定义,比较传统典型的定义有:</p><ol><li>进程是程序的一次<strong>执行过程</strong>。</li><li>进程是一个程序及其数据在处理机上顺序执行时所<strong>发生的活动</strong>。</li><li>进程是具有独立功能的程序在数据集合上<strong>运行的过程</strong>，它是系统进行资源分配和调度的一个独立单位（强调“动态性”）</li><li>引入进程实体的概念后，可把进程定义为:进程是进程实体的运行过程，是系统进行<strong>资源分配</strong>和<strong>调度</strong>的一个独立单位。</li></ol><blockquote><p>注：严格来说，进程实体和进程并不一样,进程实体是<code>静态的</code>，进程则是<code>动态的</code>。不过,除非题目专门考察二者区别，否则可以认为进程实体就是进程。因此我们也可以说“进程由程序段、数据段、PCB三部分组成</p></blockquote><h2 id="进程的组成"><a href="#进程的组成" class="headerlink" title="进程的组成"></a>进程的组成</h2><ul><li><p>程序段<br>存放程序代码本身</p></li><li><p>数据段<br>存放程序运行过程中处理的各种数据（如全局变量、局部变量、宏定义的常量等）</p></li><li><p>PCB</p></li></ul><p><strong>进程管理所需的数据</strong>都放在这里，PCB是进程存在的唯一标志，操作系统通过PCB来管理进程<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/27/ce7872a1bfbd5dafc1453de9322ff949.png"></p><h2 id="进程的组织"><a href="#进程的组织" class="headerlink" title="进程的组织"></a>进程的组织</h2><p>系统里面通常有数千个PCB，为了更有效地管理，需要用适当的方式把他们组织起来</p><ul><li><p>链接方式<br>按照进程状态将PCB分为多个队列<br>操作系统持有指向各个队列的指针<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/27/6c73d88223c3f0bbb779a74d23ea0828.png"></p></li><li><p>索引方式<br>根据进程状态不同，建立几张索引表<br>操作系统持有指向各索引表的指针<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/27/7884d54769251ab2cf4a7907c1903ab7.png"></p></li></ul><h2 id="进程的特征"><a href="#进程的特征" class="headerlink" title="进程的特征"></a>进程的特征</h2><p>进程和程序是两个截然不同的概念，相比于程序，进程拥有以下特征：</p><ul><li><p><strong>动态性</strong><br>最基本特征。进程是程序的一次执行过程，是动态地产生、变化和消亡的</p></li><li><p><strong>并发性</strong><br>内存中有多个进程实体，各进程可以并行执行</p></li><li><p><strong>独立性</strong><br>进程是能独立运行、获得资源、接受调度的基本单位</p></li><li><p><strong>异步性</strong><br>各进程按各自独立的、不可预测的速度向前推进，异步性会导致并发程序执行结果的不确定性，操作系统要提供“进程同步机制”来解决异步问题</p></li><li><p><strong>结构性</strong><br>每一个进程都会配置PCB，结构上看，进程由程序段、数据段、PCB组成</p></li></ul><h2 id="进程的状态"><a href="#进程的状态" class="headerlink" title="进程的状态"></a>进程的状态</h2><p>基本状态：运行态、就绪态、阻塞态/等待态</p><ul><li><p><strong>运行态(Running)</strong><br>占有CPU，并在CPU上运行<br>单核处理器一个时刻只有一个进程处于运行态，双核两个</p></li><li><p><strong>就绪态(Ready)</strong><br>进程已经具备一切运行条件，除了没有空闲CPU，导致暂时不能运行<br>万事俱备，只差CPU</p></li><li><p><strong>阻塞态(Waiting/Blocked)</strong><br>等待某一事件而暂时不能运行，比如等待操作系统分配打印机、等待磁盘读写<br>为了提高CPU利用效率，进程需要先准备好其它所需资源，才能得到CPU的服务</p></li><li><p><strong>创建状态(New)</strong><br>操作系统为该进程分配所需内存等系统资源，为其创建、初始化PCB(分配PID等等)</p></li><li><p><strong>终止状态(Terminated)</strong><br>进程运行结束，或者出现Bug导致无法继续执行，操作系统需要撤销进程<br>完成资源回收，撤销PCB</p></li></ul><h2 id="进程间转换"><a href="#进程间转换" class="headerlink" title="进程间转换"></a>进程间转换</h2><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/27/9eb8a430b7220f00df5ca847dca45b51.png"></p><h2 id="进程控制"><a href="#进程控制" class="headerlink" title="进程控制"></a>进程控制</h2><ul><li>什么是进程控制？<br>进程控制的主要功能是对系统中的所有进程实施有效的管理,它具有创建新进程、撤销已有进程、实现进程状态转换等功能。简而言之就是<strong>实现进程状态切换</strong>。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/27/29d4cd4920843ffc47a4b3733fec4c4b.png"><br>某一个进程，把它的PCB从一个队列放到另一个队列，但是并没有把PCB当中的状态标志改成相应的新的状态，为防止这个问题，引入了原语操作。</p><ul><li><p>如何实现进程控制？<br>当关中断指令接收到外部中断信号时，会被忽略掉，暂时不会处理，这就保证了原语执行不被中断。直到执行到开中断指令，接收到外部中断信号才会开始处理。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/27/157f417dd8079f5c82c6d3a5c22eeea6.png"></p></li><li><p>进程控制相关原语<br>进程控制会导致进程状态的转换。无论哪个原语,要做的无非三类事情:</p><ol><li>更新PCB中的信息(如修改进程状态标志、将运行环境保存到PCB、从PCB恢复运行环境)<br>a.  所有的进程控制原语一定都会修改进程状态标志<br>b.  剥夺当前运行进程的CPU使用权必然需要保存其运行环境<br>c. 某进程开始运行前必然要恢复期运行环境</li><li>将PCB插入合适的队列</li><li>分配/回收资源</li></ol></li></ul><h2 id="进程通信"><a href="#进程通信" class="headerlink" title="进程通信"></a>进程通信</h2><ul><li>进程通信就是进程之间的信息交换。</li><li>进程是分配系统资源的单位（包括内存地址空间），因此<strong>各进程</strong>拥有各自的<strong>内存地址空间</strong>，它们<strong>相互独立</strong>。</li><li>为了保证安全，一个进程不能直接访问另一个进程的地址空间</li></ul><p>但是进程之间的信息交换又是必须实现的，为了保证进程间的安全通信，操作系统提供了一些方法实现。</p><ul><li><p><strong>共享存储</strong><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/27/08d60258f07e088ecebb337c84671d64.png"></p></li><li><p><strong>管道通信</strong><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/27/3dc4f522b8dbc5abb2d6e4862e7bd5c2.png"></p></li><li><p><strong>消息传递</strong><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/27/0fb02f609238179957d8dcfeb780e78c.png"></p></li></ul><h1 id="线程"><a href="#线程" class="headerlink" title="线程"></a>线程</h1><h2 id="线程的引入"><a href="#线程的引入" class="headerlink" title="线程的引入"></a>线程的引入</h2><p>在没引入进程之前，系统中各个程序只能串行执行<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/27/297ecbbc8b3077873cfda1029ba5344a.png"></p><ul><li><p>资源分配、调度<br>传统进程机制中，进程是资源分配、调度的基本单位<br>引入线程后，进程是<code>资源分配</code>的基本单位，线程是<code>调度</code>的基本单位</p></li><li><p>并发性<br>传统进程机制，只能进程间并发<br>现在<code>各线程之间</code>也能并发</p></li><li><p>系统开销<br>传统进程并发，需要切换进程的运行环境，系统开销大<br>同一个进程内的线程间并发，不需要切换环境，开销小</p></li></ul><h2 id="线程的属性"><a href="#线程的属性" class="headerlink" title="线程的属性"></a>线程的属性</h2><ul><li>线程是处理机调度的单位</li><li>多CPU计算机中，各个线程可占用不同的CPU</li><li>每个线程都有一个线程ID、线程控制块（TCP）</li><li>线程也有就绪、阻塞、运行三种基本状态</li><li>线程几乎不拥有系统资源，资源分配给进程</li><li>同一进程的不同线程间共享进程的资源</li><li>由于共享内存地址空间，同一进程中的线程间通信甚至无需系统干预</li><li>同一进程中的线程切换，不会引起进程切换</li><li>不同进程中的线程切换，会引起进程切换</li><li>切换进程内的线程，系统开销很小</li><li>切换进程，系统开销较大</li></ul><h2 id="线程的实现方式"><a href="#线程的实现方式" class="headerlink" title="线程的实现方式"></a>线程的实现方式</h2><ul><li><p><strong>用户级线程</strong><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/27/b8c3889fbf0a66a4dcd10cf684baf310.png"></p></li><li><p><strong>内核级线程</strong><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/27/b614794c5a841e7d52093be2763cd3cc.png"></p></li><li><p><strong>组合方式</strong><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/27/c390886b3e93a3c770ccee727878775e.png"></p></li></ul><h2 id="多线程模型"><a href="#多线程模型" class="headerlink" title="多线程模型"></a>多线程模型</h2><ul><li><p><strong>多对一模型</strong><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/27/37604f2c714399daf4da29dba2868864.png"></p></li><li><p><strong>一对一模型</strong><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/27/b3e90c5a7ae02d68a824870fdaed90e4.png"></p></li><li><p><strong>多对多模型</strong><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/27/fbf8215e4d8ed0bdedea85a035f45908.png"></p></li></ul><h1 id="处理机调度"><a href="#处理机调度" class="headerlink" title="处理机调度"></a>处理机调度</h1><ul><li><p>基本概念<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/28/9158e9abe09a10247f33e3f357527e6a.png"></p></li><li><p>调度的三个层次</p><ol><li><strong>高级调度（作业调度）</strong><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/28/40eff0049b00c052639b18441bc4bc18.png"></li><li><strong>中级调度（内存调度）</strong><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/28/89750f6f38ab70cda27a00a136c7b32d.png"></li><li><strong>低级调度（进程调度）</strong><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/28/3459e6ca2806ec06e91c00b4820d5a2a.png"></li><li><strong>区别</strong><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/28/3b55461b8822dd42ed0fdbaf4cd9d8e7.png"></li></ol></li><li><p>补充：<strong>七状态模型</strong><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/28/a66c794973c8f59af02ed109a637ba42.png"></p></li></ul><h2 id="调度的时机和方式"><a href="#调度的时机和方式" class="headerlink" title="调度的时机和方式"></a>调度的时机和方式</h2><ul><li><p>什么适合需要进程调度？</p><ol><li><strong>进程自动放弃处理机</strong><br> 进程正常终止<br> 运行过程中发生异常终止<br> 进程主动请求阻塞（等待I/O）</li><li><strong>进程被动放弃处理机</strong><br> 时间片用完<br> 更紧急的事情需要处理（I/O中断）<br> 更高优先级的进程进入就绪队列</li></ol></li><li><p>不能进行进程调度与切换的情况</p><ol><li><strong>在处理中断的过程中</strong>（中断处理过程很复杂，很难做到同时完成进程切换）</li><li><strong>在原子操作的过程中（原语）</strong>。原子操作不可中断，要一气呵成</li><li><strong>进程在操作系统内核程序临界区中</strong>。</li></ol></li><li><p><strong>临界资源</strong>是指：进程需要互斥访问的资源，<strong>临界区</strong>：访问临界资源的代码</p></li><li><p><strong>内核程序临界区</strong>：访问内核数据结构的代码，比如进程的就绪队列（就绪进程PCB组成）。</p></li><li><p>进程访问就绪队列时会加锁，还没退出临界区（临界资源没解锁）的期间，是无法进行调度和切换的。<strong>内核临界区</strong>访问临界资源应该尽快完成，否则会影响内核其它管理功能。</p></li><li><p><strong>普通临界区</strong>访问临界资源不会直接影响操作系统内核管理工作，这个时候可以调度和切换。比如打印机完成打印之前，进程不允许调度就会导致CPU一直空闲。</p></li></ul><blockquote><p>进程在操作系统<strong>内核程序临界区</strong>中不能进行调度与切换  （√）<br>进程处于<strong>临界区</strong>时不能进行处理机调度    （×）</p></blockquote><ul><li><p>进程调度的方式</p><ol><li><strong>非剥夺(非抢占)式</strong><br>只允许进程主动放弃处理机。在运行过程中即便有更紧迫的任务到达，当前进程依然会继续使用处理机，直到该进程终止或主动要求进入阻塞态。实现简单，开销小，但是无法实时处理紧急任务，适合早期批处理系统。</li><li><strong>剥夺(抢占)式</strong><br>如果有更重要更紧急的进程需要使用处理机，直接剥夺当前进程资源。适合分时操作系统、实时操作系统。</li></ol></li><li><p>进程的切换与过程</p><ol><li>“狭义的进程调度”与“进程切换”的区别<br>狭义调度指：从就绪队列中选择一个要运行的进程，这个进程可能是刚刚暂停的，也可能是另一个进程，后一种情况就需要进程切换<br>进程切换：一个进程让出处理机，由另一个进程占用处理机的过程<br>广义进程调度：包含了选择一个进程和进程切换两个步骤</li><li>进程切换的过程<br>保存原进程的数据<br>恢复新进程的数据（数据包括：程序计数器，程序状态字，各种数据寄存器等现场信息）</li></ol></li></ul><blockquote><p>进程切换是有代价的，过于频繁的调度、切换会导致效率低下，使系统大部分时间都花在了进程切换上，而真正用于执行进程的时间减少</p></blockquote><h2 id="调度算法的评价指标"><a href="#调度算法的评价指标" class="headerlink" title="调度算法的评价指标"></a>调度算法的评价指标</h2><ul><li><p><strong>CPU利用率</strong>：指CPU“忙碌”的时间占总时间的比例<br>  CPU忙碌时间(+IO时间)/总时间</p></li><li><p><strong>系统吞吐量</strong>：单位时间内完成作业的数量<br>  总共完成的作业数/总时间</p></li><li><p><strong>周转时间</strong>：是指从作业被提交给系统开始，到作业完成为止的这段时间间隔，作业被提交给系统开始到作业完成的时间，包括高级调度、低级调度的时间、进程在CPU执行的时间、等待I/O的时间</p><ol><li><strong>周转时间</strong>=作业完成时间-作业提交时间</li><li><strong>平均周转时间</strong>=各作业周转时间之和/作业数</li><li><strong>带权周转时间</strong>= 作业周转时间 / 作业实际运行时间 = （作业完成时间 - 作业提交时间）/ 作业实际运行时间<br>周转时间相同的情况下，作业运行时间长的，用户体验更好（浪费的时间少，带权周转时间一定大于 1，越小越好</li><li><strong>平均带权周转时间</strong>=各作业带权周总时间之和/作业数</li></ol></li><li><p><strong>等待时间</strong>：指进程/作业处于等待处理机状态时间之和，等待时间越长，用户满意度越低</p><ol><li>等待时间=进程/作业处于等待处理机状态时间之和</li><li>对于进程：等待时间是进程建立之后，等待被服务的时间之和（等待I/O的时间不计入）</li><li>对于作业：作业在外存后备队列等待被调度的时间 + 建立进程之后的等待时间</li></ol></li><li><p><strong>响应时间</strong>：用户提交请求到首次产生响应所用的时间</p></li></ul><h2 id="调度算法-早期系统"><a href="#调度算法-早期系统" class="headerlink" title="调度算法(早期系统)"></a>调度算法(早期系统)</h2><h3 id="先来先服务FCFS"><a href="#先来先服务FCFS" class="headerlink" title="先来先服务FCFS"></a>先来先服务FCFS</h3><ul><li><strong>先来先服务</strong>（FCFS：First Come First Service）<ol><li>公平角度考虑，作业/进程谁先到后备/就绪队列的谁先得到服务，非抢占式算法</li><li>优点：公平，算法简单</li><li>缺点：对<strong>长作业（进程）有利，对短作业不利</strong>（带权周转时间很大）比如下面例题中P3的带权周转时间为8</li><li>不会导致饥饿</li></ol></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/28/dceb6edebf04cf607997876d58907fd5.png"></p><h3 id="作业优先SJF"><a href="#作业优先SJF" class="headerlink" title="作业优先SJF"></a>作业优先SJF</h3><ul><li><strong>短作业优先</strong>（SJF：Shortest Job First）<ol><li>算法思想：追求最少的平均等待时间，最少平均周转时间，最少平均带权周转时间</li><li>算法规则：<strong>需要服务时间最短的作业。进程先得到服务</strong></li><li>可以调度作业和进程（短进程优先算法SPF: Shortest Process First）</li><li>SJF和SPF是<strong>非抢占式</strong>算法，抢占式版本：<strong>最短剩余时间优先算法</strong>(SRTN,Shortest Remaining Time Next)</li><li>优点：“最短的”平均等待时间、平均周转时间，最短剩余时间优先算法更短</li><li>缺点：不公平，短作业有利，长作业不利。    </li><li>可能导致饥饿，如果有源源不断的短作业到来，长作业可能一直得不到服务（饿死）</li></ol></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/28/cd4050ae0953e51e7519dd5603430bed.png"></p><h3 id="最短剩余时间优先SRTN"><a href="#最短剩余时间优先SRTN" class="headerlink" title="最短剩余时间优先SRTN"></a>最短剩余时间优先SRTN</h3><ul><li><strong>最短剩余时间优先算法</strong>(SRTN,Shortest Remaining Time Next)<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/28/8e127ff4f943a6e48afc4fe1687d2083.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/28/2302f774fa71363932727c7e4b575f55.png"></li></ul><h3 id="高响应比优先HRRN"><a href="#高响应比优先HRRN" class="headerlink" title="高响应比优先HRRN"></a>高响应比优先HRRN</h3><ul><li><strong>高响应比优先</strong>（HRRN：Highest Response Ratio Next）<ol><li>算法思想：综合考虑作业/进程的等待时间和服务时间</li><li>算法规则：每次调度时选择<strong>响应比最高</strong>的作业/进程。<strong>响应比=(等待时间+要求服务时间)/要求服务时间</strong>（响应比&gt;=1）</li><li>非抢占式，除非当前作业/进程主动放弃处理机，才需要调度</li><li>优点：综合考虑了<strong>等待时间和运行时间</strong>，等待时间相同时，要求服务时间短的优先(SJF的优点)，要求服务时间相同时，等待时间长的优先(FCFS的优点)</li><li>对于长作业来说，随着等待时间越来越久，其响应比也会越来越大，从而避免了长作业饥饿的问题</li></ol></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/28/b7428d46a12c3b8cbeb07fb9a2dc2e25.png"></p><h3 id="对比"><a href="#对比" class="headerlink" title="对比"></a>对比</h3><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/28/6f9fb03aed74db90e1eb9a5f9de21bc2.png"></p><h2 id="调度算法（交互式系统）"><a href="#调度算法（交互式系统）" class="headerlink" title="调度算法（交互式系统）"></a>调度算法（交互式系统）</h2><h3 id="时间片轮转RR"><a href="#时间片轮转RR" class="headerlink" title="时间片轮转RR"></a>时间片轮转RR</h3><ul><li><strong>时间片轮转</strong>（RR：Round-Robin)<ol><li>常用于分时操作系统，注重响应时间，而非周转时间</li><li>算法思想：公平、轮流地为各个进程服务，让每个进程在一定时间间隔内都可以得到响应</li><li>算法规则：按照各进程到达就绪队列的顺序,轮流让各个进程执行一个时间片(如100ms) </li><li>若进程未在一个时间片内执行完,则剥夺处理机,将进程重新放到就绪队列队尾重新排队。</li><li>用于进度调度（作业在放入内存并建立进程后才能被分配处理机时间片）</li><li>抢占式算法，由时钟中断通知CPU时间片已到，不会饥饿</li><li>缺点：高频率进程切换，有一定的开销，不区分任务的紧急程度</li><li>优点：公平；响应快，适用于分时操作系统</li></ol></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/28/5032c3cd79a2b114c0fd32e44967e576.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/28/d54338fb3b4bc407ef4d7351130b235f.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/28/9ee3f45cddc0a8de9b8fc91e5134d7b2.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/28/0c7efc1ec90a7dc093c9643b1309ae10.png"></p><h3 id="优先级调度算法"><a href="#优先级调度算法" class="headerlink" title="优先级调度算法"></a>优先级调度算法</h3><ul><li><strong>优先级调度算法</strong><ol><li>调度时选择<strong>优先级高</strong>的进程，可以作业调度和进程调度以及I/O调度</li><li>适用于实时操作系统，可能发生饥饿</li></ol></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/28/e5c391c62f67a9b137493df6f145b5fa.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/28/037e8caec9acb4e01465e29df0365a24.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/28/0d7a887e9e40726b2837f8f634c457d8.png"></p><h3 id="多级反馈队列调度算法"><a href="#多级反馈队列调度算法" class="headerlink" title="多级反馈队列调度算法"></a>多级反馈队列调度算法</h3><ul><li>对其他算法权衡折中，抢占式，可能导致饥饿</li><li>算法规则<ol><li>设置多级就绪队列，各级队列优先级从高到低，时间片从小到大</li><li>新进程到达时先进入第1级队列，按FCFS原则排队等待被分配时间片，若用完时间片进程还未结束，则进程进入下一级队列队尾。如果此时已经是在最下级的队列，则重新放回该队列队尾</li><li>只有第k级队列为空时，才会为k+1级队头的进程分配时间片</li><li><a href="https://www.bilibili.com/video/BV1YE411D7nH?p=17">动画演示</a></li></ol></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/bb186770ed9559f785aa6812cdabd2cc.png"></p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/dd10ab244dd7d5cc396a45cd05cb0ddc.png"></p><h1 id="进程同步与互斥"><a href="#进程同步与互斥" class="headerlink" title="进程同步与互斥"></a>进程同步与互斥</h1><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/f86ad32bfaea48db1e57a2a8becbd20d.png"></p><ul><li><p><strong>进程同步</strong></p><ol><li>进程具有异步性，各并发执行的进程以各自独立、不可预测的速度向前推进。</li><li>有时需要保证不同的进程按照特地的次序推进，比如管道读、写数据两个操作必需按照“写数据-&gt;读数据”的顺序执行，所以引入进程同步的问题</li><li>进程同步又叫进程的“直接制约关系”，它是指为了完成某种任务而建立两个或多个进程</li><li>这些进程因为需要在某些位置上协调工作次序而产生制约关系。</li></ol></li><li><p><strong>进程互斥</strong></p><ol><li><p>临界资源：一个时间段内只允许一个进程使用的资源（比如一些物理设备，变量数据，内存缓冲区）</p></li><li><p>对临界资源的访问必需互斥地进行，互斥又叫“间接制约关系”</p></li><li><p>进程互斥指一个进程访问某些临界资源时，另一个想要访问该临界资源的进程必需等待，直到资源被释放。</p></li><li><p>对临界资源的互斥访问，可以在逻辑上分为如下四个部分</p><pre><code> do&#123;     entry section;  //进入区 &#123;上锁&#125;     critical section;  //临界区  &#123; 访问临界资源的那段代码&#125;     exit section;     //退出区   &#123;解锁&#125;     remainder section; //剩余区 &#123;做其他处理&#125; &#125;</code></pre></li></ol></li><li><p>为了实现对临界资源的互斥访问，需要遵循以下原则</p><ol><li><strong>空间让进</strong><br>临界区空闲时，可以允许一个请求进入临界区的进程立即进入临界区</li><li><strong>忙则等待</strong><br>当已有进程进入临界区时，其他试图进入临界区的进程必须等待</li><li><strong>有限等待</strong><br>对请求访问的进程，应保证能在有限时间内进入临界区(保证不会饥饿)</li><li><strong>让权等待</strong><br>当进程不能进入临界区时，应立即释放处理机，防止进程忙等待</li></ol></li></ul><h2 id="进程互斥软件实现"><a href="#进程互斥软件实现" class="headerlink" title="进程互斥软件实现"></a>进程互斥软件实现</h2><ul><li><strong>单标志法</strong><br>算法思想：两个进程在<strong>访问完临界区后</strong>会把使用临界区的权限转交给另一个进程。也就是说<strong>每个进程进入临界区的权限只能被另一个进程赋予</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/731b6f044ab528989f2fa1062396c447.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/237f9e041fdfd0123289a1d09713d5f5.png"></p><ul><li><strong>双标志先检查法</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/51e07e90ddadfa31dc0ff035d3c891cb.png"></p><ul><li><strong>双标志后检查法</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/275bd64a2e8d4613edd4a404aa3c59fc.png"></p><ul><li><strong>Peterson算法</strong><br>Perterson算法用软件方法解决了进程互斥问题，<strong>遵循了空闲让进、忙则等待、有限等待三个原则</strong>，但是依然<strong>未遵循让权等待</strong>的原则</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/6f567cdad0d1515a8d8a9d30abc7f3a8.png"></p><h2 id="进程互斥硬件实现"><a href="#进程互斥硬件实现" class="headerlink" title="进程互斥硬件实现"></a>进程互斥硬件实现</h2><ul><li><strong>中断屏蔽方法</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/09f753f261223ebfb6d88b1e6a373acc.png"></p><ul><li><strong>TestAndSet指令</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/2933780d4e37df6a0c7fb0c40ba8c764.png"></p><ul><li><strong>Swap指令</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/a5fe75ea3d34489db4e19d09fc58d1f8.png"></p><h2 id="信号量机制"><a href="#信号量机制" class="headerlink" title="信号量机制"></a>信号量机制</h2><p>针对以上两种实现方法无法实现的问题，1965年，荷兰学者<strong>Dijkstra</strong>提出了一种卓有成效的实现进程互斥、同步的方法——<strong>信号量机制</strong></p><ul><li>用户进程可以通过使用操作系统提供的<strong>一对原语</strong>来对<strong>信号量</strong>进行操作,从而很方便的实现了进程互斥、进程同步。</li><li>信号量其实就是一个变量(可以是 个整数,也可以是更复杂的记录型变量),可以用一个信号量来<strong>表示系统中某种资源的数量</strong>,比如:系统中只有一台打印机,就可以设置一个初值为1的信号量</li><li><strong>原语</strong>是一种特殊的程序段,其<strong>执行只能一气呵成,不可被中断</strong>。原语是由<strong>关中断/开中断指令</strong>实现的。</li><li>软件解决方案的主要问题是由“进入区的各种操作无法一气呵成” ,因此如果能把进入区、退出区的操作都用“原语”实现,使这些操作能“一气呵成”就能避免问题。</li><li><strong>一对原语</strong>：<code>wait(S)</code>原语和<code>signal(S)</code>原语,可以理解为函数,函数名分别为wait和signal,括号里的<code>信号量S</code>就是参数。</li><li>wait, signal原语常<code>简称为P,V操作</code>(来自荷兰语proberen和verhogen) 。因此,做题的时候常把wait(S).signal(S)两个操作分别写为<code>P(S)</code>、<code>V(S)</code></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/f28cd6bd7144dacbc922b8a94f7010e1.png"></p><ul><li><strong>整型信号量</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/550c20f518820ecebbf51f460d359efe.png"></p><ul><li><strong>记录型信号量</strong><br><a href="https://www.bilibili.com/video/BV1YE411D7nH?p=21">动画演示</a></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/bd4a1a080acd5ddc975d40729772c320.png"></p><ul><li><strong>信号量机制实现进程互斥</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/f1d372d4dc89e34140a6f575b0835a82.png"></p><ul><li><strong>信号量机制实现进程同步</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/9725eea0587c84eecbf0439147dab141.png"></p><ul><li><strong>信号量机制实现前驱关系</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/7e90239a4e0b457ceb54070e5c1667d1.png"></p><ul><li><strong>总结</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/787e8c3e0180caba244bdbfcbfd19b9e.png"></p><h2 id="生产者消费者问题"><a href="#生产者消费者问题" class="headerlink" title="生产者消费者问题"></a>生产者消费者问题</h2><ul><li><strong>问题分析</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/11365e55cebc6b74328eb9f4e2b7633c.png"></p><ul><li><strong>如何实现</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/5938225a1587db4475d9a3ac114b64b3.png"></p><p><strong>能否改变相邻P、V操作的顺序？</strong><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/922cca5307bc0561a31645071261302d.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/d533b343f32b290106ec998a784adc7d.png"></p><h2 id="多生产者消费者问题"><a href="#多生产者消费者问题" class="headerlink" title="多生产者消费者问题"></a>多生产者消费者问题</h2><ul><li><strong>问题分析</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/c11ccc721e66cd7735a5dbebad46145c.png"></p><ul><li><strong>如何实现</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/e69f38723527235f89f85c6134974161.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/2d71cc4b72391d7dc071d3cc1d397ec9.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/229c421bee513c9d5ba5a00a83ef767f.png"></p><h2 id="吸烟者问题"><a href="#吸烟者问题" class="headerlink" title="吸烟者问题"></a>吸烟者问题</h2><ul><li><strong>问题分析</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/111a2f89ec29d6f0627531314054fddf.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/2769a0617e764e289a3a302b1eadf690.png"></p><ul><li><strong>如何实现</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/47fd14ae737b5dbd33fbc82bb9be63f4.png"></p><h2 id="读写者问题"><a href="#读写者问题" class="headerlink" title="读写者问题"></a>读写者问题</h2><ul><li><strong>问题分析</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/a7723d8eda3906f698501c25a2e2992a.png"></p><ul><li><strong>如何实现</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/79fa92ea5478be4a56028b3ab0097124.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/7770a31fe3df6639fa87b04344ddd074.png"></p><h2 id="哲学家就餐问题"><a href="#哲学家就餐问题" class="headerlink" title="哲学家就餐问题"></a>哲学家就餐问题</h2><ul><li><strong>问题分析</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/2c373a09712c045b2d8c9cef8e5ce06b.png"></p><ul><li><strong>如何解决</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/741802daff0d4ff4b9ea60c5a7ba550d.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/9003fdffc57851ace8a5a64ac4bf5cc8.png"></p><h2 id="管程"><a href="#管程" class="headerlink" title="管程"></a>管程</h2><ul><li><p>为什么引入管程<br>信号量机制编写程序困难，PV顺序错误可能导致死锁</p></li><li><p><strong>管程的定义</strong><br>  管程是一种高级的同步机制，是一种特殊的软件模块，包括：</p><ol><li>局部于管程的共享数据结构说明</li><li>对数据结构进行操作的一组过程（函数）</li><li>对共享数据初始化的语句</li><li>管程有一个名字（就是OOP里面的封装思想）</li></ol></li><li><p><strong>管程的基本特征</strong></p><ol><li>管程中的共享数据结构只能被管程内部的过程（函数）访问</li><li>一个进程只能通过调用管程内的过程（函数）才能访问管程内的数据</li><li>每次仅允许一个进程在管程内执行某个内部过程（这个特性是编译器实现的）</li></ol></li><li><p><strong>用管程解决生产者消费者问题</strong></p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/4b9be5f3242e839af4169b37c902d306.png"></p><ul><li><strong>Java</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/cc2559b64af379f7a31b797ea898dfd7.png"></p><h1 id="死锁"><a href="#死锁" class="headerlink" title="死锁"></a>死锁</h1><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/dbc130be6a2f1a4bfc16d762c4695f46.png"></p><ul><li><p>什么是死锁<br>并发环境下，各进程因为竞争资源造成的：互相等待对方手里的资源，导致各进程都阻塞，无法向前推进的现象</p></li><li><p>死锁、饥饿、死循环</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/da6e2ff9f6d44e4670622ea6c2d9e0e8.png"></p><ul><li><p>死锁产生的条件<br>  对不可剥夺资源分配不合理可能导致死锁</p><ol><li><strong>互斥条件</strong><br>争抢互斥资源</li><li><strong>不剥夺条件</strong><br>进程获得的资源未使用完成，其它进程不能强行夺走，只能等待主动释放</li><li><strong>请求和保持条件</strong><br>进程已经保持了至少一个资源，但是又提出新的资源请求，同时该资源被其它进程占有，此时请求进程被阻塞，但是对自己拥有资源又保持不放</li><li><strong>循环等待条件</strong><br>死锁时存在循环等待链，但是存在循环等待链不一定出现死锁（同类资源大于1，可能链条外的某个进程释放了资源）</li></ol></li><li><p>死锁的处理策略</p><ol><li><strong>预防死锁</strong><br>破坏产生死锁的条件</li><li><strong>避免死锁</strong><br>避免系统进入不安全状态（银行家算法）</li><li><strong>检测和解除</strong><br>允许死锁发生，操作系统负责检测死锁并解除</li></ol></li></ul><h2 id="死锁的处理"><a href="#死锁的处理" class="headerlink" title="死锁的处理"></a>死锁的处理</h2><h3 id="不允许死锁发生"><a href="#不允许死锁发生" class="headerlink" title="不允许死锁发生"></a>不允许死锁发生</h3><ul><li><strong>静态策略：预防死锁</strong><ol><li><strong>破坏互斥条件</strong><br>将物理互斥的资源改造为逻辑共享设备，SPOOLing技术将打印机改造成共享设备</li><li><strong>破坏不剥夺条件</strong><br>方案一：某个进程所需的资源得不到满足时，主动释放自己保持的资源，以后再重新申请<br>方案二：操作系统协助，将资源剥夺给优先级高的资源<br>实现复杂，可能造成获得资源前一阶段的工作白做，而且反复申请资源增加系统开销，可能导致进程饥饿</li><li><strong>破坏请求和保持条件</strong><br>静态分配法：进程分配好需要的资源再投入运行，运行时不再申请<br>实现简单，但是资源利用率极低，可能导致某些进程饥饿​</li><li><strong>破坏循环等待条件</strong><br>顺序资源分配法：首先给系统资源编号，每一个进程必需按照进程递增的顺序请求资源（大编号无法请求小编号资源，也就不能线程循环等待的情况）<br>按编号申请资源，编程很麻烦不方便添加新设备，需要重新分配编号；进程实际使用资源的顺序可能和编号顺序不一致，导致需要提前申请不必要的资源导致浪费​</li></ol></li><li><strong>动态策略：避免死锁</strong><ol><li>什么是安全序列<br>系统按照这种序列分配资源，能让每个进程都顺利完成</li><li>什么是系统的不安全状态<br>只要存在一个安全序列，系统就是安全状态<br>找不到安全序列，系统就是不安全状态，意味着可能所有进程都无法顺利执行下去（如果有进程提前归还资源，那系统也有可能可以回到安全状态）<br>不安全状态可能发生死锁（不一定发生），安全状态一定不会死锁</li><li>银行家算法</li></ol></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/6b8c8a1fc9771cbf256a401f7cfa6d14.png"></p><h3 id="允许死锁发生"><a href="#允许死锁发生" class="headerlink" title="允许死锁发生"></a>允许死锁发生</h3><ul><li><strong>死锁检测</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/bb14c3d0b17ec907154b4e26ca70deff.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/72761f62025d9ab2c856d77967fb88a9.png"></p><ul><li><strong>死锁解除</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/499e642ccb42f3b8792987a11109a31f.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;进程管理&quot;&gt;&lt;a href=&quot;#进程管理&quot; class=&quot;headerlink&quot; title=&quot;进程管理&quot;&gt;&lt;/a&gt;进程管理&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/</summary>
      
    
    
    
    <category term="计算机基础" scheme="http://xiaoliblog.cn/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/"/>
    
    <category term="操作系统" scheme="http://xiaoliblog.cn/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
    
    <category term="操作系统" scheme="http://xiaoliblog.cn/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>操作系统⚡概述</title>
    <link href="http://xiaoliblog.cn/2021/01/15/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F_%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%BF%B0/"/>
    <id>http://xiaoliblog.cn/2021/01/15/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F_%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%BF%B0/</id>
    <published>2021-01-15T05:03:02.800Z</published>
    <updated>2021-01-15T05:13:43.509Z</updated>
    
    <content type="html"><![CDATA[<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><div class="note success flat"><p>👉👉👉<a href="https://blog.csdn.net/gl620321/article/details/107128661?utm_source=app">思维导图来源</a>||<a href="https://mubu.com/doc/Cd-Y4YOfkh#">操作系统王道幕布笔记—ZaxTyson</a>||<a href="https://www.bilibili.com/video/BV1YE411D7nH?p=1">操作系统王道学习视频</a></p></div><h1 id="操作系统引论及概述"><a href="#操作系统引论及概述" class="headerlink" title="操作系统引论及概述"></a>操作系统引论及概述</h1><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/04/41a83c1d8dace273dc87b961c251a70f.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/01/24b735899f12b5416d21e4c0ebb4c288.png"></p><h2 id="OS功能和目标"><a href="#OS功能和目标" class="headerlink" title="OS功能和目标"></a>OS功能和目标</h2><p><code>操作系统</code>(Operating System，OS)是计算机系统中最重要的系统软件，它管理整个计算机系统的软件资源和硬件资源，是用户与计算机硬件的桥梁，是其它软件和程序的运行基础。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/01/c2d24416e4d4d5732a88766f3d7817f2.png"><br>（1）<code>作为系统资源的管理者</code></p><ul><li><code>处理机</code>管理<br>计算机系统中最重要的资源是中央处理机（简称CPU），任何计算都必须在CPU上进行。<br>在处理机管理中，最核心的问题是CPU时间的分配问题，这涉及分配的策略和方法。</li><li><code>存储器</code>管理<br>存储管理的主要工作是对内存储器进行合理分配、有效保护和扩充。<br>内存是现代计算机系统的中心，是可以被CPU和I/O设备共同访问的数据仓库。<br>内存通常是CPU直接寻址和访问的、唯一的大容量存储器。</li><li><code>设备</code>管理<br>设备管理是操作系统中最庞杂、琐碎的部分，其原因是：<br>①设备管理涉及很多实际的物理设备，这些设备品种繁多、用法各异。<br>②各种外部设备都能和主机并行工作，而且，有些设备可被多个进程所共享。<br>③主机和外部设备，以及各类外部设备之间的速度极不匹配，极差很大。</li><li><code>文件</code>管理<br>以上三种管理都是针对计算机的硬件资源的管理。<br>文件系统管理则是对软件资源的管理。为了管理庞大的系统软件资源及用户提供的程序和数据，操作系统将它们组织成文件的形式，操作系统对软件的管理实际上是对文件系统的管理。</li><li><code>作业</code>管理<br>作业指用户在一次计算过程中或者事务处理过程中，要求计算机所作工作的集合。<br>作业由程序、数据和作业说明书组成。在批处理系统中，作业是占据内存的基本单位。<br>作业管理是通过管理让这些作业按照自己所想要的方式来进行工作。</li></ul><p>（2）<code>作为用户和计算机硬件之间的接口</code></p><ul><li>命令接口<br>命令接口<code>允许用户直接使用</code>，命令接口又分<code>联机命令接口</code>和<code>脱机命令接口</code>。<br>联机命令接口：用户说一句，系统做一句（<code>交互式命令接口</code>）。<br>脱机命令接口：用户说一堆，系统做一堆（批<code>处理命令接口</code>）。</li><li>程序接口<br>用户程序<code>间接使用</code></li><li>GUI（图像用户界面）</li></ul><h2 id="OS特征"><a href="#OS特征" class="headerlink" title="OS特征"></a>OS特征</h2><p>OS四大特征：<code>并发</code>、<code>共享</code>、<code>虚拟</code>、<code>异步</code>。</p><ul><li><p>并发<br><code>并发</code>: 指两个或多个事件在同一<code>时间间隔内</code>发生。宏观上是同时发生的,但微观上是交替发生的。<br><code>并行</code>: 指两个或多个事件在同一<code>时刻同时</code>发生。<br>并发和共享是操作系统的两个最基本特征。<br>操作系统并发性指计算机系统中同时存在着多个运行着的程序。</p><blockquote><p>例如：8-9点一号执行，9-10点二号执行，10-11点三号执行，为并发情况。而在8点一二号一起执行为并行情况。</p></blockquote></li><li><p>共享<br>资源共享指系统中的资源可供内存中多个并发执行的进程共同调用。<br><code>互斥共享</code><br>｜ 同一个时间段只允许一个进程访问资源(摄像头/麦克风)<br><code>同时共享</code><br>｜ 允许一个时间段多个进程“同时”(宏观上)访问某些资源（微观上是分时共享），比如硬盘读写<br>并发和共享互为存在条件。</p></li><li><p>虚拟<br>虚拟是指把一个物理上的实体变为若干个逻辑上的对应物。物理实体(前者)是实际存在的,而逻辑上对应物(后者)是用户感受到的。</p></li><li><p>异步<br>异步是指,在多道程序环境下,允许多个程序并发执行,但由于资源有限,进程的执行不是一贯到底的,是<code>走走停停</code>（等待资源进程阻塞）,以不可预知的速度向前推。</p></li></ul><h2 id="OS发展与分类"><a href="#OS发展与分类" class="headerlink" title="OS发展与分类"></a>OS发展与分类</h2><ul><li><p>手工操作阶段<br>纸带机（用户独占全机，人机速度矛盾，资源利用率极低）。</p></li><li><p>单道批处理系统<br>引入了脱机输入/输出技术（磁带），通过<code>监督程序</code>（操作系统雏形）控制作业输入输出。<br>外围机负责把输入纸带录入磁带。<br>缓解了人机速度矛盾，提高了资源利用率，但是CPU是串行的，大量CPU时间浪费在I/O等待上。</p></li><li><p>多道批处理系统<br>磁带往内存输入多道程序，并发执行，输入、计算、输出互不干扰<br>操作系统诞生，引入了中断技术，资源利用率大幅上升，但是缺少人机交互功能，用户响应时间长（用户提交作业之后只能等待作业完成）。</p></li><li><p>分时操作系统<br>分时操作系统：计算机以<code>时间片</code>为单位<code>轮流</code>为各个用户/作业服务,各个用户可通过终端与计算机进行交互。<br>主要优点:用户请求可以被即时响应,解决了人机交互问题。允许多个用户同时使用一台计算机,并且用户对计算机的操作相互独立,感受不到别人的存在。<br>主要缺点:不能优先处理一些紧急任务。操作系统对各个用户/作业都是完全公平的,循环地为每个用户/作业服务一个时间片,不区分任务的紧急性。</p></li><li><p>实时操作系统<br><code>硬实时系统</code>：必须在绝对严格的规定时间内完成处理。<br><code>软实时系统</code>：能接受偶尔违法时间规定。<br>主要优点:能够优先响应一些紧急任务,某些紧急任务不需时间片排队。在实时操作系统的控制下,计算机系统接收到外部信号后及时进行处理,并且要在严格的时限内处理完事件。实时操作系统的主要特点是及时性和可靠性。</p></li><li><p>网络操作系统<br>网络操作系统:是伴随着计算机网络的发展而诞生的,能把网络中各个计算机有机地结合起来,实现数据传送等功能,实现网络中各种资源的共享(如文件共享)和各台计算机之间的通信。(如: Windows NT就是一种典型的网络操作系统,网站服务器就可以使用)</p></li><li><p>分布式操作系统<br>分布式操作系统:主要特点是分布性和并行性。系统中的各台计算机地位相同,任何工作都可以分布在这些计算机上,由它们并行、协同完成这个任务。</p></li></ul><h1 id="OS运行机制-体系结构"><a href="#OS运行机制-体系结构" class="headerlink" title="OS运行机制/体系结构"></a>OS运行机制/体系结构</h1><h2 id="运行机制"><a href="#运行机制" class="headerlink" title="运行机制"></a>运行机制</h2><ul><li><p>指令<br>指令就是处理器(CPU)能识别、处理的最基本命令。<br><code>特权指令</code>：如内存清零指令。（不允许用户程序使用）<br><code>非特权指令</code>：如普通的运算指令。</p></li><li><p>处理机状态<br><code>用户态</code>：此时CPU只能执行非特权指令。<br><code>核心态</code>：特权命令、非特权命令都可执行。</p><blockquote><p>处理机状态用程序状态寄存器(PSW)中的某标志位来标识当前处理器处于什么状态。如0为用户态，1为核心态。</p></blockquote></li><li><p>程序<br><code>内核程序</code>：系统的管理者，可以执行特权和非特权指令，运行在核心态。<br><code>应用程序</code>：只能执行非特权指令，运行在用户态。</p></li></ul><h2 id="OS内核"><a href="#OS内核" class="headerlink" title="OS内核"></a>OS内核</h2><p>计算机最底层的软件，是操作系统最核心的部分。实现操作系统<code>内核功能</code>的程序才是<code>内核程序</code>。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/01/222957e356925c52dca1823b5730791a.png"></p><ul><li><code>时钟管理</code><br>实现计时功能。</li><li><code>中断处理</code><br>负责实现中断机制。</li><li><code>原语</code><br>是一种特殊的程序，处于操作系统最底层，是最接近硬件的部分。<br>运行时间短，调用频繁，具有<code>原子性</code>——运行只能一气呵成，不可中断。</li><li><code>系统资源管理</code><br>进程管理、存储管理、设备管理。<blockquote><p>有的操作系统不把这个作为“内核功能”（微内核)，不同操作系统，对内核功能的划分可能不一样。</p></blockquote></li></ul><h2 id="体系结构"><a href="#体系结构" class="headerlink" title="体系结构"></a>体系结构</h2><p>操作系统的体系结构：<code>大内核</code>和<code>微内核</code>。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/01/926936683836e9fe7e5cbf31a498d3c5.png"></p><ul><li><p>大内核<br>将操作系统的<code>主要功能模块</code>都作为系统内核，运行在核心态。<br>高性能，但是内核代码庞大难以维护。</p></li><li><p>微内核<br>只把<code>基本概念</code>保留在内核。<br>功能少，功能清晰方便维护，但是需要频繁的在核心态和用户态之间切换，性能低。</p></li></ul><blockquote><p>OS体系结构可以类比于企业的管理问题：<code>内核</code>就是企业的<code>管理层</code>，负责一些重要的工作。只有管理层才能执行<code>特权指令</code>，普通员工只能执行<code>非特权指令</code>。<code>用户态</code>、<code>核心态</code>之间的<code>切换</code>相当于普通员工和管理层之间的工作交流。<br><code>大内核</code>：企业初创时体量不大，管理层的人会负责大部分的事情。<br><code>微内核</code>：随着企业体力越来越大，管理层只负责最核心的一些工作。</p></blockquote><h1 id="中断和异常"><a href="#中断和异常" class="headerlink" title="中断和异常"></a>中断和异常</h1><p>中断机制的诞生：<br>早期计算机，各程序只能串行执行，系统资源利用率低。<br>为了解决上述问题，人们发明操作系统，引入中断机制，实现了多道程序并发执行。<br><code>本质：发生中断</code>就意味着<code>需要操作系统介入,开展管理工作</code>。</p><h2 id="中断的概念和作用"><a href="#中断的概念和作用" class="headerlink" title="中断的概念和作用"></a>中断的概念和作用</h2><p>中断信号可以使CPU从<code>用户态</code>切换为<code>核心态</code>,<code>使操作系统获得计算机的控制权</code>。有了中断才能实现多道程序并发执行。</p><blockquote><p>由于操作系统的管理工作(比如进程切换、分配I/O设备等)需要使用<code>特权指令</code>,因此CPU要从用户态转为核心态。</p></blockquote><p><code>中断</code>是CPU从用户态-&gt;核心态切换的<code>唯一途径</code>。<br>核心态-&gt;用户态切换只需要执行一个<code>特权指令</code>，将<code>PSW</code>设置为<code>0</code>。</p><h2 id="中断的分类"><a href="#中断的分类" class="headerlink" title="中断的分类"></a>中断的分类</h2><ul><li><p><code>内中断</code>(异常/例外/陷入)<br>信号来源CPU<code>内部</code>，<code>与当前执行的指令有关</code><br><code>自愿中断(指令中断) </code>：</p><pre><code>      系统调用时使用的访管指令(陷入指令/trap指令)</code></pre><p><code>强迫中断</code>：</p><pre><code>      1.硬件故障（缺页错误）2.软件中断（除0错误）</code></pre><p>陷阱、陷入(trap)</p><pre><code>      有意而为之的异常，系统调用</code></pre><p>故障(fault)</p><pre><code>      错误条件引起的，可能被故障处理程序修复的，如缺页</code></pre><p>终止(abort)</p><pre><code>      致命错误，无法修复，终止处理程序不再将控制返回给应用程序，如除0</code></pre></li><li><p><code>外中断</code>(狭义中断)<br>信号来源CPU<code>外部</code>，<code>与当前执行的指令无关</code><br><code>外设请求</code>：</p><pre><code>       外设(比如打印机)I/O操作完成发出中断信号       键盘输入一个字符​</code></pre><p><code>人工干预</code>：</p><pre><code>        用户强制终止一个进程</code></pre></li></ul><h1 id="系统调用"><a href="#系统调用" class="headerlink" title="系统调用"></a>系统调用</h1><p>操作系统作为用户和计算机硬件之间的接口，需要向上提供一些简单易用的服务。主要包括命令接口和程序接口。其中，程序接口由一组<code>系统调用</code>组成。<br>系统调用是操作系统提供给应用程序(程序员/编程人员)使用的接口,可以理解为一种可供应用程序调用的特殊函数,应用程序可以发出<code>系统调用请求</code>来获得操作系统的服务,操作系统会对各个请求进行<code>协调管理</code>。</p><blockquote><p>例如A和B共用打印机，A按下打印后，打印机工作，B接着又按下打印，打印机不会把A和B的打印内容混合在一起。</p></blockquote><p>应用程序通过<code>系统调用请求</code>操作系统的服务。<br>​系统中的各种共享资源都由操作系统统一掌管,因此在用户程序中,凡是与资源有关的操作(如存储分配、I/O操作、文件管理等) ,都必须通过系统调用的方式向操作系统提出服务请求,由操作系统代为完成。这样可以保证系统的稳定性和安全性,防止用户进行非法操作。<br>系统调用相关的处理需要在<code>核心态</code>下完成。</p><h2 id="系统调用与库函数的区别"><a href="#系统调用与库函数的区别" class="headerlink" title="系统调用与库函数的区别"></a>系统调用与库函数的区别</h2><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/01/e7ab8bab64bae5282f57c5f7297e7ec8.png"></p><ul><li>系统调用是操作系统向上提供的接口</li><li>有的库函数是对于系统调用的进一步封装</li><li>大多数高级语言提供的库函数间接进行系统调用</li></ul><h2 id="系统调用过程"><a href="#系统调用过程" class="headerlink" title="系统调用过程"></a>系统调用过程</h2><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/01/7f5ff4cb6568a412aaa0f91b3528db13.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;参考&quot;&gt;&lt;a href=&quot;#参考&quot; class=&quot;headerlink&quot; title=&quot;参考&quot;&gt;&lt;/a&gt;参考&lt;/h1&gt;&lt;div class=&quot;note success flat&quot;&gt;&lt;p&gt;👉👉👉&lt;a href=&quot;https://blog.csdn.net/gl</summary>
      
    
    
    
    <category term="计算机基础" scheme="http://xiaoliblog.cn/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/"/>
    
    <category term="操作系统" scheme="http://xiaoliblog.cn/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
    
    <category term="操作系统" scheme="http://xiaoliblog.cn/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript🌞Ajax</title>
    <link href="http://xiaoliblog.cn/2021/01/15/%E5%89%8D%E7%AB%AF/JavaScript/JavaScript_Ajax/"/>
    <id>http://xiaoliblog.cn/2021/01/15/%E5%89%8D%E7%AB%AF/JavaScript/JavaScript_Ajax/</id>
    <published>2021-01-15T04:25:39.723Z</published>
    <updated>2021-01-15T05:28:28.107Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Ajax"><a href="#Ajax" class="headerlink" title="Ajax"></a>Ajax</h1><ul><li>Ajax：Asynchronous JavaScript And XML，即<strong>异步JavaScript和XML技术</strong>。</li><li>描述：不是一门新的语言或技术，是由JavaScript、XML、DOM、CSS等多种已有技术组合而成的一种浏览器端技术。</li><li>功能：<strong>用于实现与服务器进行异步交互的功能</strong>。</li><li>传统Web工作流程<br>每当用户触发一个页面HTTP请求，就需要服务器返回一个新的页面<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/24/594e68fd5921f40c42a89634c094311c.png"></li><li>Ajax工作流程<br>页面通过Ajax对象与服务器进行通信，然后通过DOM操作将返回的结果更新到页面中，整个过程都是在同一个页面中进行的<br>Ajax技术的创新之处在于，改善了传统的“请求-等待-响应-刷新-返回数据”模式，在信息返回之前，用户可以继续自己的操作，当前页面不会因为请求而刷新。这样大大的提高了交互性。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/24/13af6098b6a7580165ed0f207fc830be.png"></p><ul><li>相较于传统页面，Ajax技术的优势具体有以下几个方面：<ol><li>减轻服务器的负担</li><li>节省带宽</li><li>用户体验更好</li></ol></li></ul><h1 id="PHP服务器"><a href="#PHP服务器" class="headerlink" title="PHP服务器"></a>PHP服务器</h1><ul><li>服务器：若需要网页能被互联网中的其它用户访问，就要将网页发布到服务器上，用户通过网址来访问。</li><li>常用服务器：PHP、Java、Node.js、ASP.NET等</li><li>PHP是一种运行于服务器端的嵌入式脚本编程语言，内置了一个Web服务器。</li><li>PHP开发环境搭建：<ol><li>下载PHP、vc运行库、补丁（可能）<br>进入官网<a href="http://php.net/">http://php.net</a>下载PHP7.3.11版本(可以下最新版本)，得到一个压缩包，并解压到指定目录<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/24/e9e630ef5310e3350faf7c040c6c23d1.png"></li><li>创建目录<br>创建”<code>D:\web\php7.3</code>“作为PHP的安装目录，创建”<code>D:\web\htdocs</code>“作为站点目录</li><li>启动内置服务器<br>压缩包解压到“D:\web\php7.1”目录下，启动cmd命令行工具，<strong>切换目录到该目录中</strong>，执行以下命令<pre><code>  php -S localhost:8081 -t &quot;D:\web\htdocs&quot;</code></pre>上述命令中，”-S”用于启动内置Web服务器（S为大写），后面接网络地址和端口号，”-t”用于指定站点目录，此处为”D:\web\htdocs”</li><li>常见错误<br>”php“不是内部或外部命令,也不是可运行的程序或批处理文件，这是因为没有配置php的path环境变量。找到php的安装路径(包括压缩包名称)复制新建到path中<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/24/5463e84058f29b072b863d4561c12f87.png"><br>在cmd命令中php安装目录下下执行<pre><code> php -version</code></pre>显示版本信息即成功，其他情况可能是8081端口号被占用所造成。</li></ol></li></ul><h1 id="Ajax向服务器发送请求"><a href="#Ajax向服务器发送请求" class="headerlink" title="Ajax向服务器发送请求"></a>Ajax向服务器发送请求</h1><p>使用Ajax需要通过XMLHttpRequest构造函数创建Ajax对象。</p><pre><code>    var xhr=new XMLHttpRequest();</code></pre><p>创建完成后就可以使用该对象提供的方法向服务器发送请求。</p><ol><li><p><strong>open()</strong><br>open()方法用于创建一个新的HTTP请求，并指定请求方式、请求URL等。</p><pre><code> open(&#39;method&#39;,&#39;URL&#39;[,asyncFlag[,&#39;username&#39;[,&#39;password&#39;]]]) method：用于指定请求方式，如GET、POST，不区分大小写。 URL：表示请求的地址。 asyncFlag：可选参数，用于指定请求方式，同步请求为false，默认为异步请求true。 userName和password：可选参数，表示HTTP认证的用户名和密码。</code></pre><blockquote><p>同步请求和异步请求的区别在于是否阻塞代码的执行，默认的异步方式是非阻塞的，浏览器端的JS程序不用等待Web服务器的响应，可以继续处理其他事情，而同步则等待Web服务器的响应。</p></blockquote></li><li><p><strong>send()</strong><br>send()方法用于发送请求到Web服务器并接收响应。</p><pre><code> send(content)</code></pre></li><li><p><strong>setRequestHeader()</strong><br>setRequestHeader()方法用于单独指定某个HTTP请求头。</p><pre><code> setRequestHeader(&#39;header&#39;,&#39;value&#39;);</code></pre></li></ol><h2 id="GET请求"><a href="#GET请求" class="headerlink" title="GET请求"></a>GET请求</h2><ul><li><p>Get方式适合从服务器获取数据<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/24/1b14211b511540f6ef19a042cb403f8c.png"><br>在PHP服务器的Web站点目录<code>D:\web\htdocs</code>中，创建demo.html文件，编码实现Ajax请求，具体如下</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"> <span class="keyword">var</span> xhr = <span class="keyword">new</span> XMLHttpRequest();        <span class="comment">//①创建Ajax对象</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//onreadystatechange：监听Ajax状态变化（Ajax状态发生改变时触发此函数）</span></span></span><br><span class="line"><span class="javascript"> xhr.onreadystatechange = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;  <span class="comment">//④监听</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//readyState属性：表示Ajax状态，如为XMLHttpRequst.DONE表示此次已完成响应。</span></span></span><br><span class="line"><span class="javascript"> <span class="function"><span class="title">if</span>(<span class="params">xhr.readyState==XMLHttpRequest.DONE</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"> <span class="function"><span class="title">if</span>(<span class="params">xhr.status==<span class="number">200</span></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"> <span class="built_in">document</span>.write(xhr.responseText);</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="javascript">xhr.open(<span class="string">&#x27;GET&#x27;</span>,<span class="string">&quot;test.php?a=1&amp;b=2&quot;</span>);  <span class="comment">//②打开，建立HTTP连接</span></span></span><br><span class="line"><span class="javascript">xhr.send();<span class="comment">//③发送请求</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>和html文件同目录下创建<code>test.php</code>文件，写入以下信息：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> json_encode($_GET);  <span class="comment">//将URL参数转换为JSON输出</span></span><br></pre></td></tr></table></figure><p>然后启动PHP服务器后，在浏览器输入<a href="http://localhost:8081/demo.html">http://localhost:8081/demo.html</a>,<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/24/0523753cebb4c82cdb09cfa7eaff7436.png"></p></li><li><p>监听Ajax状态</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/24/27b7857f2e02fc707559e9fe9d126617.png"></p><p><strong>处理服务器返回的信息</strong></p><ul><li><strong>readyState属性</strong><br>readyState属性用于获取Ajax的当前状态，状态值有5种形式。</li></ul><table><thead><tr><th align="center">状态值</th><th align="center">XMLHttpRequest静态属性名</th><th align="center">说明</th><th align="center">解释</th></tr></thead><tbody><tr><td align="center">0</td><td align="center">UNSET</td><td align="center">未发送</td><td align="center">对象已创建</td></tr><tr><td align="center">1</td><td align="center">OPENED</td><td align="center">已打开</td><td align="center">open()方法已调用</td></tr><tr><td align="center">2</td><td align="center">HEADERS_RECEIVED</td><td align="center">收到响应头</td><td align="center">send()方法已调用</td></tr><tr><td align="center">3</td><td align="center">LOADING</td><td align="center">数据传送中</td><td align="center">响应体部分正在被接收</td></tr><tr><td align="center">4</td><td align="center">DONE</td><td align="center">完成</td><td align="center">数据接收完</td></tr></tbody></table><ul><li><p><strong>onreadystatechange属性</strong></p><p>  onreadystatechange事件属性用于感知readyState属性状态的改变，当readyState状态发送改变时，就会调用此事件。</p></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">var</span> xhr=<span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line">xhr.onreadystatechange=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(xhr.readyState);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="built_in">console</span>.log(xhr.readyState);</span><br><span class="line">xhr.open(<span class="string">&#x27;GET&#x27;</span>,<span class="string">&#x27;test.php&#x27;</span>);</span><br><span class="line">xhr.send(); </span><br><span class="line">&lt;/script&gt;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">0</span></span><br><span class="line"><span class="comment">1</span></span><br><span class="line"><span class="comment">2</span></span><br><span class="line"><span class="comment">3</span></span><br><span class="line"><span class="comment">4</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><p>可以看到readyState属性值初始值为0，当调用open()和send()方法后，readyState属性的值会发生变化，每次变化都会触发onreadystatechange事件。</p><ul><li><strong>status属性</strong><br>status属性用于返回当前请求的HTTP状态码，值为数值类型</li></ul><table><thead><tr><th align="center">状态码</th><th align="center">含义</th><th align="center">状态码</th><th align="center">含义</th></tr></thead><tbody><tr><td align="center">200</td><td align="center">正常</td><td align="center">403</td><td align="center">禁止</td></tr><tr><td align="center">301</td><td align="center">永久移动</td><td align="center">404</td><td align="center">找不到</td></tr><tr><td align="center">302</td><td align="center">临时移动</td><td align="center">500</td><td align="center">内部服务器错误</td></tr><tr><td align="center">304</td><td align="center">未修改</td><td align="center">502</td><td align="center">无效网关</td></tr><tr><td align="center">401</td><td align="center">未经授权</td><td align="center">504</td><td align="center">网关超时</td></tr></tbody></table><ul><li><p><strong>获取响应信息的相关属性</strong></p><table><thead><tr><th align="center">属性名</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">responseText</td><td align="center">将响应信息作为字符串返回</td></tr><tr><td align="center">responseXML</td><td align="center">将响应信息格式为XML Document对象并返回(只读)</td></tr></tbody></table></li><li><p><strong>服务端代码简介</strong></p></li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> json_encode($_GET);  <span class="comment">//将URL参数转换为JSON输出</span></span><br></pre></td></tr></table></figure><ol><li>$_GET：GET方式提交到服务器端的数据(必须大写)</li><li>json_encode：将参数转换为json格式</li><li>echo：输出，返回给客户端</li></ol><h2 id="Post请求"><a href="#Post请求" class="headerlink" title="Post请求"></a>Post请求</h2><ul><li>Post方式适合向服务器发送数据</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/24/d29da1c5cf33939f7d3d2f50ef6f3e9f.png"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">       <span class="keyword">var</span> xhr = <span class="keyword">new</span> XMLHttpRequest();</span></span><br><span class="line"><span class="javascript">       xhr.onreadystatechange = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">           <span class="function"><span class="title">if</span>(<span class="params">xhr.readyState==XMLHttpRequest.DONE</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">               <span class="function"><span class="title">if</span>(<span class="params">xhr.status==<span class="number">200</span></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                   <span class="built_in">document</span>.write(xhr.responseText);</span></span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line"><span class="javascript">       xhr.open(<span class="string">&#x27;POST&#x27;</span>,<span class="string">&#x27;test.php&#x27;</span>);</span></span><br><span class="line"><span class="javascript">      <span class="comment">//在HTTP请求头中指定实体内容的编码格式</span></span></span><br><span class="line"><span class="javascript">       xhr.setRequestHeader(<span class="string">&#x27;Content-type&#x27;</span>,<span class="string">&#x27;application/x-www-form-urlencoded&#x27;</span>);</span></span><br><span class="line"><span class="javascript">       <span class="comment">// xhr.send(&#x27;name=Lily&amp;age=18&#x27;);</span></span></span><br><span class="line"><span class="javascript">       <span class="keyword">var</span> name = <span class="string">&#x27;Lily&#x27;</span>;</span></span><br><span class="line"><span class="javascript">       <span class="keyword">var</span> age = <span class="number">18</span>;</span></span><br><span class="line"><span class="javascript">       xhr.send(<span class="string">&#x27;name=&#x27;</span> + name + <span class="string">&#x27;&amp;age=&#x27;</span> + age);</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> json_encode($_POST);</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/24/4b86a86cd1d2681938bb6c9c9e575f8b.png"></p><ul><li><p>通过POST方式向服务器发送ajax请求须设置请求头字段，且在open方法后调用。</p><pre><code>  Content-Type：application/x-www-form-urlencoded</code></pre></li><li><p>拓展阅读<br><a href="https://www.cnblogs.com/qlhMeiMei/p/6846392.html">https://www.cnblogs.com/qlhMeiMei/p/6846392.html</a></p></li><li><p>如果需要传递特殊字符时，可以使用<code>encodeURIComponent()</code>进行URL编码</p><pre><code>  var url=&#39;http://xxx/test.php?name=&#39;+encodeURIComponent(&#39;A&amp;B C&#39;);;  console.log(url);//结果输出：http://xxx/test.php?name=A%26B%20C</code></pre></li></ul><p>在经过URL编码后，”&amp;”被转化为”%26”，空格被转换为”%20”，当服务器收到已编码的内容之后，会对其进行解码，从而正确识别。</p><pre><code>    var str=&#39;A%26B%20C&#39;;    console.log(encodeURIComponent(str)); //输出结果：A&amp;B C</code></pre><h1 id="数据交换格式"><a href="#数据交换格式" class="headerlink" title="数据交换格式"></a>数据交换格式</h1><ul><li>XML</li><li>JSON<br>JSON是一种轻量级的数据交换格式，它采用完全独立于语言的文本格式。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/24/7193183d914eb22d6ade0fab7baeda89.png"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> obj = &#123;<span class="attr">name</span>:<span class="string">&#x27;Tom&#x27;</span>,<span class="attr">age</span>:<span class="number">24</span>&#125;;</span></span><br><span class="line"><span class="javascript">        <span class="comment">//stringify：将对象转换为JSON字符串</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> json = <span class="built_in">JSON</span>.stringify(obj);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> xhr = <span class="keyword">new</span> XMLHttpRequest();</span></span><br><span class="line"><span class="javascript">        xhr.onreadystatechange = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">if</span>(<span class="params">xhr.readyState==XMLHttpRequest.DONE</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="function"><span class="title">if</span>(<span class="params">xhr.status==<span class="number">200</span></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="comment">// var json_res = xhr.responseText;</span></span></span><br><span class="line"><span class="javascript">                    <span class="comment">//JSON.parse：将JSON字符串转换成JS对象。</span></span></span><br><span class="line"><span class="javascript">                    <span class="comment">// var obj_res = JSON.parse(json_res);</span></span></span><br><span class="line"><span class="javascript">                    <span class="comment">//obj.name：JSON对象的成员。</span></span></span><br><span class="line"><span class="javascript">                    <span class="comment">// document.write(obj_res.name);</span></span></span><br><span class="line"><span class="javascript">                    <span class="built_in">document</span>.write(xhr.responseText);</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="javascript">        xhr.open(<span class="string">&#x27;post&#x27;</span>,<span class="string">&#x27;test.php&#x27;</span>);</span></span><br><span class="line"><span class="javascript">        xhr.setRequestHeader(<span class="string">&#x27;Content-type&#x27;</span>,<span class="string">&#x27;application/x-www-form-urlencoded&#x27;</span>);</span></span><br><span class="line"><span class="javascript">        xhr.send(<span class="string">&#x27;msg=&#x27;</span> + <span class="built_in">encodeURIComponent</span>(json));</span></span><br><span class="line"><span class="javascript">        <span class="comment">//encodeURIComponet：对字符串进行URI编码</span></span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"> <span class="keyword">echo</span> $_POST[<span class="string">&#x27;msg&#x27;</span>];</span><br></pre></td></tr></table></figure><p> <img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/24/04d7091a2a8d37f98eb4611d5fcdc164.png"></p><h1 id="无刷新分页"><a href="#无刷新分页" class="headerlink" title="无刷新分页"></a>无刷新分页</h1><ul><li><p>代码思路</p><ol><li>首先读取第一页（客户端提交1，服务端返回第1页内容的json数据）；</li><li>根据点击的按钮，读取相应页。</li></ol></li><li><p>自调用函数<br>用（）包裹匿名函数，其后的（）表示给匿名函数传递参数并立即执行，完成函数的自调用。</p><pre><code>  自调用函数：  ( function  函数名()&#123;      代码;  &#125;) ( )； </code></pre></li><li><p>回调函数<br>若想要函数体中某部分功能由调用者决定，此时可以使用回调函数。<br>简单说，在一个函数执行完毕后，得到想要的特定数据后再去执行的函数，即为回调函数。</p></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//定义函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">f1</span>(<span class="params">f2,f3</span>)</span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;11111&quot;</span>);</span><br><span class="line">f2();</span><br><span class="line">f3();</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;22222&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//调用函数</span></span><br><span class="line">f1(</span><br><span class="line"><span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;33333&quot;</span>);</span><br><span class="line">&#125;,</span><br><span class="line"><span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;44444&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">);</span><br><span class="line"><span class="comment">//运行结果</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">11111</span></span><br><span class="line"><span class="comment">33333</span></span><br><span class="line"><span class="comment">44444</span></span><br><span class="line"><span class="comment">22222</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><ul><li> 继承</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//构造函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Person</span>(<span class="params">name</span>)</span>&#123;</span><br><span class="line"><span class="built_in">this</span>.name=name;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//利用原型对象实现继承</span></span><br><span class="line">Person.prototype.sayHello=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;你好，我是&quot;</span>+<span class="built_in">this</span>.name);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> p1=<span class="keyword">new</span> Person(<span class="string">&#x27;Jim&#x27;</span>);</span><br><span class="line">p1.sayHello();</span><br></pre></td></tr></table></figure><ul><li>源码解析<ol><li>构造函数PageList：封装页面信息，并添加点击事件实现与用户的交互。</li><li>构造函数Comment：向服务器发送ajax请求，获取评论内容，并将服务器返回的JSON数据放入页面中显示出来。</li><li>源码解析–PageList：封装页面信息，并添加点击事件实现与用户的交互。</li><li>页面信息：<br>   页面元素：首页、尾页、上一页、下一页、页码<pre><code>   数据（变量）：页码、总共页数</code></pre></li><li>点击事件：<br>  为四个页面元素添加onclick事件，以更新页面内容。</li><li>函       数:<br> 根据页码更新页面内容。</li></ol></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;</span> <span class="meta-string">&quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.w3.org/1999/xhtml&quot;</span> <span class="attr">xml:lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Type&quot;</span> <span class="attr">content</span>=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">body</span>&#123;<span class="attribute">background</span>:<span class="number">#eee</span>;<span class="attribute">margin</span>:<span class="number">0</span>&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-class">.box</span>&#123;<span class="attribute">width</span>:<span class="number">800px</span>;<span class="attribute">margin</span>:<span class="number">0</span> auto;<span class="attribute">background</span>:<span class="number">#fefefe</span>;<span class="attribute">border-radius</span>:<span class="number">8px</span>;<span class="attribute">padding</span>:<span class="number">20px</span>;<span class="attribute">box-sizing</span>:border-box;<span class="attribute">margin-top</span>:<span class="number">40px</span>&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-class">.title</span>&#123;<span class="attribute">font-family</span>:<span class="string">&#x27;Microsoft YaHei&#x27;</span>;<span class="attribute">color</span>:<span class="number">#666</span>;<span class="attribute">font-size</span>:<span class="number">24px</span>;<span class="attribute">text-align</span>:center;<span class="attribute">margin</span>:<span class="number">10px</span> <span class="number">0</span>&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-class">.comment</span> <span class="selector-tag">ul</span>&#123;<span class="attribute">margin</span>:<span class="number">0</span>;<span class="attribute">padding</span>:<span class="number">10px</span>;<span class="attribute">list-style</span>:none;<span class="attribute">border-bottom</span>:<span class="number">1px</span> solid <span class="number">#ccc</span>&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-class">.comment</span> <span class="selector-tag">li</span>&#123;<span class="attribute">line-height</span>:<span class="number">32px</span>&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-class">.pagelist</span>&#123;<span class="attribute">margin-top</span>:<span class="number">20px</span>;<span class="attribute">text-align</span>:center&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-class">.pagelist</span> <span class="selector-tag">span</span>&#123;<span class="attribute">margin</span>:<span class="number">0</span> <span class="number">2px</span>&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-class">.pagelist</span> <span class="selector-tag">button</span>&#123;<span class="attribute">padding</span>:<span class="number">6px</span> <span class="number">10px</span>;<span class="attribute">cursor</span>:pointer&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-class">.pagelist</span> <span class="selector-tag">button</span><span class="selector-pseudo">:disabled</span>&#123;<span class="attribute">cursor</span>:default&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-class">.progress</span> <span class="selector-tag">div</span>&#123;<span class="attribute">width</span>:<span class="number">0%</span>;<span class="attribute">height</span>:<span class="number">1px</span>;<span class="attribute">position</span>:fixed;<span class="attribute">top</span>:<span class="number">0</span>;<span class="attribute">background-color</span>:<span class="number">#38f</span>;<span class="attribute">box-shadow</span>:<span class="number">1px</span> <span class="number">1px</span> <span class="number">1px</span> <span class="number">#6bf</span>;<span class="attribute">transition</span>: all <span class="number">0.8s</span>&#125;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;progress&quot;</span> <span class="attr">class</span>=<span class="string">&quot;progress&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;title&quot;</span>&gt;</span>查看商品评论<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;comment&quot;</span> <span class="attr">class</span>=<span class="string">&quot;comment&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;pagelist&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>当前是第<span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;page_num&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">span</span>&gt;</span>页<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;page_first&quot;</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;page_prev&quot;</span>&gt;</span>上一页<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;page_next&quot;</span>&gt;</span>下一页<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;page_last&quot;</span>&gt;</span>尾页<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        (<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="keyword">function</span> <span class="title">PageList</span>(<span class="params">options</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">for</span> (<span class="keyword">var</span> i <span class="keyword">in</span> options) &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>[i] = options[i];</span></span><br><span class="line">                &#125;</span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> obj = <span class="built_in">this</span>;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.first.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line">                    obj.page = 1;</span><br><span class="line">                    obj.onChange();</span><br><span class="line">                &#125;;</span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.prev.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line">                    obj.page = (obj.page &gt; 1) ? (obj.page - 1) : 1;</span><br><span class="line">                    obj.onChange();</span><br><span class="line">                &#125;;</span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.next.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line">                    obj.page = (obj.page &gt;= obj.maxPage) ? obj.maxPage : (obj.page + 1);</span><br><span class="line">                    obj.onChange();</span><br><span class="line">                &#125;;</span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.last.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line">                    obj.page = obj.maxPage;</span><br><span class="line">                    obj.onChange();</span><br><span class="line">                &#125;;</span><br><span class="line">            &#125;</span><br><span class="line"><span class="javascript">            <span class="function"><span class="keyword">function</span> <span class="title">Comment</span>(<span class="params">obj</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.obj = obj;</span></span><br><span class="line">            &#125;</span><br><span class="line"><span class="javascript">            Comment.prototype.ajax = <span class="function"><span class="keyword">function</span>(<span class="params">url, start, complete</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">          <span class="keyword">var</span> xhr = <span class="keyword">new</span> XMLHttpRequest();</span></span><br><span class="line"><span class="javascript">          xhr.onreadystatechange = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line">            if (xhr.readyState === 4) &#123;</span><br><span class="line"><span class="handlebars"><span class="xml">              if (xhr.status <span class="tag">&lt; <span class="attr">200</span> || <span class="attr">xhr.status</span> &gt;</span>= 300 &amp;&amp; xhr.status !== 304) &#123;</span></span></span><br><span class="line"><span class="javascript">                alert(<span class="string">&#x27;服务器异常&#x27;</span>);</span></span><br><span class="line"><span class="javascript">                <span class="keyword">return</span>;</span></span><br><span class="line">              &#125;</span><br><span class="line"><span class="javascript">              <span class="keyword">try</span> &#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> json = <span class="built_in">JSON</span>.parse(xhr.responseText);</span></span><br><span class="line"><span class="javascript">              &#125; <span class="function"><span class="title">catch</span>(<span class="params">e</span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">                alert(<span class="string">&#x27;解析服务器返回信息失败&#x27;</span>);</span></span><br><span class="line"><span class="javascript">                <span class="keyword">return</span>;</span></span><br><span class="line">              &#125;</span><br><span class="line">              complete(json);</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;;</span><br><span class="line"><span class="javascript">          xhr.open(<span class="string">&#x27;GET&#x27;</span>, url);</span></span><br><span class="line">          xhr.send();</span><br><span class="line">          start();</span><br><span class="line">        &#125;;</span><br><span class="line"><span class="javascript">         Comment.prototype.create = <span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">          <span class="keyword">var</span> html = <span class="string">&#x27;&#x27;</span>;</span></span><br><span class="line"><span class="javascript">          <span class="keyword">for</span> (<span class="keyword">var</span> i <span class="keyword">in</span> data) &#123;</span></span><br><span class="line"><span class="javascript">            html += <span class="string">&#x27;&lt;ul&gt;&lt;li&gt;用户名：&#x27;</span> + data[i].user + <span class="string">&#x27;　发表时间：&#x27;</span> + data[i].time + <span class="string">&#x27;&lt;/li&gt;&#x27;</span>;</span></span><br><span class="line"><span class="handlebars"><span class="xml">            html += &#x27;<span class="tag">&lt;<span class="name">li</span>&gt;</span>&#x27; + data[i].content + &#x27;<span class="tag">&lt;/<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">ul</span>&gt;</span>&#x27;;</span></span></span><br><span class="line">          &#125;</span><br><span class="line"><span class="javascript">          <span class="built_in">this</span>.obj.innerHTML = html;</span></span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line"><span class="javascript">           <span class="keyword">var</span> comment = <span class="keyword">new</span> Comment(<span class="built_in">document</span>.getElementById(<span class="string">&#x27;comment&#x27;</span>));</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> pageList =<span class="keyword">new</span> PageList(&#123;</span></span><br><span class="line">                page: 1,</span><br><span class="line">                maxPage: 1,</span><br><span class="line"><span class="javascript">                first: <span class="built_in">document</span>.getElementById(<span class="string">&#x27;page_first&#x27;</span>),</span></span><br><span class="line"><span class="javascript">                prev: <span class="built_in">document</span>.getElementById(<span class="string">&#x27;page_prev&#x27;</span>),</span></span><br><span class="line"><span class="javascript">                next: <span class="built_in">document</span>.getElementById(<span class="string">&#x27;page_next&#x27;</span>),</span></span><br><span class="line"><span class="javascript">                last: <span class="built_in">document</span>.getElementById(<span class="string">&#x27;page_last&#x27;</span>),</span></span><br><span class="line"><span class="javascript">                pageNum: <span class="built_in">document</span>.getElementById(<span class="string">&#x27;page_num&#x27;</span>),</span></span><br><span class="line"><span class="javascript">                onChange:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                    comment.ajax(<span class="string">&#x27;data.php?page=&#x27;</span> + <span class="built_in">this</span>.page,</span></span><br><span class="line"><span class="javascript">                        <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="comment">//start回调函数</span></span></span><br><span class="line"></span><br><span class="line">                        &#125;,</span><br><span class="line"><span class="javascript">                        <span class="function"><span class="keyword">function</span>(<span class="params">json</span>)</span>&#123; <span class="comment">//complete回调函数</span></span></span><br><span class="line">                            pageList.maxPage = json.maxPage;</span><br><span class="line">                            comment.create(json.data);</span><br><span class="line">                        &#125;</span><br><span class="line">                    )</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">            pageList.onChange();</span><br><span class="line">        &#125;)();</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//定义data数组，包含10个元素，每个元素表示1条评论</span></span><br><span class="line">$data = [</span><br><span class="line">    [<span class="string">&#x27;id&#x27;</span> =&gt; <span class="number">1</span>, <span class="string">&#x27;user&#x27;</span> =&gt; <span class="string">&#x27;test&#x27;</span>, <span class="string">&#x27;time&#x27;</span> =&gt; <span class="string">&#x27;2018-01-01&#x27;</span>, <span class="string">&#x27;content&#x27;</span> =&gt; <span class="string">&#x27;评论111&#x27;</span>],</span><br><span class="line">    [<span class="string">&#x27;id&#x27;</span> =&gt; <span class="number">2</span>, <span class="string">&#x27;user&#x27;</span> =&gt; <span class="string">&#x27;test&#x27;</span>, <span class="string">&#x27;time&#x27;</span> =&gt; <span class="string">&#x27;2018-01-01&#x27;</span>, <span class="string">&#x27;content&#x27;</span> =&gt; <span class="string">&#x27;评论222&#x27;</span>],</span><br><span class="line">    [<span class="string">&#x27;id&#x27;</span> =&gt; <span class="number">3</span>, <span class="string">&#x27;user&#x27;</span> =&gt; <span class="string">&#x27;test&#x27;</span>, <span class="string">&#x27;time&#x27;</span> =&gt; <span class="string">&#x27;2018-01-01&#x27;</span>, <span class="string">&#x27;content&#x27;</span> =&gt; <span class="string">&#x27;评论233&#x27;</span>],</span><br><span class="line">    [<span class="string">&#x27;id&#x27;</span> =&gt; <span class="number">4</span>, <span class="string">&#x27;user&#x27;</span> =&gt; <span class="string">&#x27;test&#x27;</span>, <span class="string">&#x27;time&#x27;</span> =&gt; <span class="string">&#x27;2018-01-01&#x27;</span>, <span class="string">&#x27;content&#x27;</span> =&gt; <span class="string">&#x27;评论444&#x27;</span>],</span><br><span class="line">    [<span class="string">&#x27;id&#x27;</span> =&gt; <span class="number">5</span>, <span class="string">&#x27;user&#x27;</span> =&gt; <span class="string">&#x27;test&#x27;</span>, <span class="string">&#x27;time&#x27;</span> =&gt; <span class="string">&#x27;2018-01-01&#x27;</span>, <span class="string">&#x27;content&#x27;</span> =&gt; <span class="string">&#x27;评论555&#x27;</span>],</span><br><span class="line">    [<span class="string">&#x27;id&#x27;</span> =&gt; <span class="number">6</span>, <span class="string">&#x27;user&#x27;</span> =&gt; <span class="string">&#x27;test&#x27;</span>, <span class="string">&#x27;time&#x27;</span> =&gt; <span class="string">&#x27;2018-01-01&#x27;</span>, <span class="string">&#x27;content&#x27;</span> =&gt; <span class="string">&#x27;评论666&#x27;</span>],</span><br><span class="line">    [<span class="string">&#x27;id&#x27;</span> =&gt; <span class="number">7</span>, <span class="string">&#x27;user&#x27;</span> =&gt; <span class="string">&#x27;test&#x27;</span>, <span class="string">&#x27;time&#x27;</span> =&gt; <span class="string">&#x27;2018-01-01&#x27;</span>, <span class="string">&#x27;content&#x27;</span> =&gt; <span class="string">&#x27;评论777&#x27;</span>],</span><br><span class="line">    [<span class="string">&#x27;id&#x27;</span> =&gt; <span class="number">8</span>, <span class="string">&#x27;user&#x27;</span> =&gt; <span class="string">&#x27;test&#x27;</span>, <span class="string">&#x27;time&#x27;</span> =&gt; <span class="string">&#x27;2018-01-01&#x27;</span>, <span class="string">&#x27;content&#x27;</span> =&gt; <span class="string">&#x27;评论888&#x27;</span>],</span><br><span class="line">    [<span class="string">&#x27;id&#x27;</span> =&gt; <span class="number">9</span>, <span class="string">&#x27;user&#x27;</span> =&gt; <span class="string">&#x27;test&#x27;</span>, <span class="string">&#x27;time&#x27;</span> =&gt; <span class="string">&#x27;2018-01-01&#x27;</span>, <span class="string">&#x27;content&#x27;</span> =&gt; <span class="string">&#x27;评论999&#x27;</span>],</span><br><span class="line">    [<span class="string">&#x27;id&#x27;</span> =&gt; <span class="number">10</span>, <span class="string">&#x27;user&#x27;</span> =&gt; <span class="string">&#x27;test&#x27;</span>, <span class="string">&#x27;time&#x27;</span> =&gt; <span class="string">&#x27;2018-01-01&#x27;</span>, <span class="string">&#x27;content&#x27;</span> =&gt; <span class="string">&#x27;评论1010&#x27;</span>],</span><br><span class="line">];</span><br><span class="line">$page = <span class="keyword">isset</span>($_GET[<span class="string">&#x27;page&#x27;</span>]) ? max((<span class="keyword">int</span>)$_GET[<span class="string">&#x27;page&#x27;</span>], <span class="number">1</span>) : <span class="number">1</span>;</span><br><span class="line">$size = <span class="number">2</span>;</span><br><span class="line">$maxPage = ceil(count($data) / $size);</span><br><span class="line"><span class="keyword">echo</span> json_encode([</span><br><span class="line">    <span class="string">&#x27;data&#x27;</span> =&gt; array_slice($data, ($page - <span class="number">1</span>) * $size, $size),</span><br><span class="line">    <span class="string">&#x27;maxPage&#x27;</span> =&gt; $maxPage</span><br><span class="line">]);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">page：获取用户端请求的页码值。</span></span><br><span class="line"><span class="comment">size：每页返回的记录数。</span></span><br><span class="line"><span class="comment">maxPage：计算总页数。</span></span><br><span class="line"><span class="comment">json_encode:返回“根据当前页码查询的记录”和“总页数”。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Ajax&quot;&gt;&lt;a href=&quot;#Ajax&quot; class=&quot;headerlink&quot; title=&quot;Ajax&quot;&gt;&lt;/a&gt;Ajax&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;Ajax：Asynchronous JavaScript And XML，即&lt;strong&gt;异步JavaScri</summary>
      
    
    
    
    <category term="编程语言" scheme="http://xiaoliblog.cn/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    <category term="JavaScript" scheme="http://xiaoliblog.cn/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/JavaScript/"/>
    
    
    <category term="JavaScript" scheme="http://xiaoliblog.cn/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript🌞正则表达式</title>
    <link href="http://xiaoliblog.cn/2021/01/15/%E5%89%8D%E7%AB%AF/JavaScript/JavaScript_%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    <id>http://xiaoliblog.cn/2021/01/15/%E5%89%8D%E7%AB%AF/JavaScript/JavaScript_%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</id>
    <published>2021-01-15T04:25:39.723Z</published>
    <updated>2021-01-15T05:29:17.964Z</updated>
    
    <content type="html"><![CDATA[<h1 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h1><p><a href="https://ihateregex.io/">正则表达式查询网站I Hate Regex</a></p><ol><li><p>什么是正则表达式<br>正则表达式（Regular Expression，简称regexp）</p><ul><li>概念：是一种描述字符串结构的语法规则（描述字符串特征）</li><li>作用：用于验证各种字符串是否匹配这个特征。</li><li>应用：在项目开发中，手机号码指定位数的隐藏、数据采集、敏感词的过滤以及表单的验证等功能，都可以利用正则表达式来实现。</li></ul></li><li><p>获取正则对象</p><ul><li>字面量方式<pre><code>  /pattern/flags  例如：/abc/gi</code></pre></li><li>RegExp对象构造函数方式<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> <span class="built_in">RegExp</span>(pattern[,flags])</span><br><span class="line"><span class="built_in">RegExp</span>(pattern[,flags])</span><br><span class="line"><span class="comment">//示例</span></span><br><span class="line"><span class="keyword">var</span> str=<span class="string">&#x27;Abc123abc456abc&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> reg=<span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">&#x27;abc&#x27;</span>,<span class="string">&#x27;gi&#x27;</span>);</span><br><span class="line"><span class="built_in">console</span>.log(str.match(reg));</span><br></pre></td></tr></table></figure>pattern：模式文本，由元字符和文本字符（普通字符）组成。<br>flags：模式修饰符。<table><thead><tr><th align="center">模式符</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">g</td><td align="center">用于在目标字符串中实现全局匹配（多次）</td></tr><tr><td align="center">i</td><td align="center">忽略大小写</td></tr><tr><td align="center">m</td><td align="center">实现多行匹配</td></tr><tr><td align="center">u</td><td align="center">以Unicode编码执行正则表达式</td></tr><tr><td align="center">y</td><td align="center">粘性匹配，仅匹配目标字符串中此正则表达式的lastindex属性指示的索引</td></tr><tr><td align="center">^</td><td align="center">匹配字符串开始的位置</td></tr><tr><td align="center">$</td><td align="center">匹配字符串结束的位置</td></tr></tbody></table></li></ul></li><li><p>使用正则对象</p><ul><li>RegExp对象提供的<code>exec()</code>方法，一次仅返回一个匹配结果，匹配成功返回数组，否则返回null<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str=<span class="string">&#x27;Abc123abc456abc&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> reg=<span class="regexp">/abc/gi</span>;</span><br><span class="line"><span class="built_in">console</span>.log(reg.exec(str)); <span class="comment">//返回Abc</span></span><br></pre></td></tr></table></figure></li><li>String对象提供的<code>match()</code>方法，匹配出所有符合要求的内容，匹配成功返回数组，否则返回false<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str=<span class="string">&#x27;Abc123abc456abc&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> reg=<span class="regexp">/abc/gi</span>;</span><br><span class="line"><span class="built_in">console</span>.log(str.match(reg)); <span class="comment">//返回Abc、abc、abc</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>转义字符的处理<br>使用反斜线对特殊字符进行转义</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str=<span class="string">&#x27;^abc\\1.23*edf$&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> reg1=<span class="regexp">/\./</span>;</span><br><span class="line"><span class="built_in">console</span>.log(str.match(reg1));</span><br><span class="line"><span class="keyword">var</span> reg2=<span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">&#x27;\\.&#x27;</span>);</span><br><span class="line"><span class="built_in">console</span>.log(str.match(reg2));</span><br></pre></td></tr></table></figure></li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>请输入用户名<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;username&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&#x27;tips&#x27;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;checkname()&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="keyword">function</span> <span class="title">checkname</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> username = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;username&#x27;</span>).value;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> reg = <span class="regexp">/admin/gi</span>;</span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">if</span>(<span class="params">!(username.match(reg)==<span class="literal">null</span>)</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">document</span>.getElementById(<span class="string">&#x27;tips&#x27;</span>).innerHTML = <span class="string">&#x27;用户名不能包含admin&#x27;</span>;</span></span><br><span class="line"><span class="javascript">            &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">document</span>.getElementById(<span class="string">&#x27;tips&#x27;</span>).innerHTML = <span class="string">&#x27;注册成功&#x27;</span>;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/23/8dd395d313c59a501ded337ff5d2a43c.png"></p><h1 id="字符类别与集合"><a href="#字符类别与集合" class="headerlink" title="字符类别与集合"></a>字符类别与集合</h1><ul><li><strong>字符类别</strong><br>使正则表达式更加简洁，便于阅读。</li></ul><table><thead><tr><th align="center">字符</th><th align="center">含义</th><th align="center">字符</th><th align="center">含义</th></tr></thead><tbody><tr><td align="center">.</td><td align="center">匹配除“\n”外的任何单个字符</td><td align="center">\f</td><td align="center">匹配一个换页符（form-feed)</td></tr><tr><td align="center">\d</td><td align="center">匹配任意一个阿拉伯数字</td><td align="center">\D</td><td align="center">匹配任意一个非阿拉伯数字字符</td></tr><tr><td align="center">\s</td><td align="center">匹配一个空白符，包括空格、制表符、换页符、换行符等</td><td align="center">\S</td><td align="center">匹配一个非空白符</td></tr><tr><td align="center">\w</td><td align="center">匹配任意一个字母（大小写）、数字和下划线</td><td align="center">\W</td><td align="center">匹配任意一个非“字母（大小写）、数字和下划线”的字符</td></tr></tbody></table><ul><li><strong>字符集合</strong><br>正则表达式中的”[]”可以实现一个字符集合</li></ul><table><thead><tr><th align="center">pattern</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">[cat]</td><td align="center">匹配字符集合中的任意一个字符c、a、t</td></tr><tr><td align="center">[^cat]</td><td align="center">匹配除c、a、t以外的字符</td></tr><tr><td align="center">[B-Z]</td><td align="center">匹配字母B~Z范围内的字符</td></tr><tr><td align="center">[^a-z]</td><td align="center">匹配字母a~z范围外的字符</td></tr><tr><td align="center">[a-zA-Z0-9]</td><td align="center">匹配大小写字母和0~9范围内的字符</td></tr><tr><td align="center">[\u4e00-\u9fa5]</td><td align="center">匹配任意一个中文字符</td></tr></tbody></table><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>限定输入内容<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">input</span><span class="selector-attr">[type=text]</span>&#123;<span class="attribute">width</span>: <span class="number">40px</span>;<span class="attribute">border-color</span>: <span class="number">#bbb</span>;<span class="attribute">height</span>: <span class="number">25px</span>;<span class="attribute">font-size</span>: <span class="number">14px</span>;<span class="attribute">border-radius</span>: <span class="number">2px</span>;<span class="attribute">outline</span>: <span class="number">0</span>;<span class="attribute">border</span>: <span class="number">#ccc</span> <span class="number">1px</span> solid;<span class="attribute">padding</span>: <span class="number">0</span> <span class="number">10px</span>;<span class="attribute">-webkit-transition</span>: box-shadow .<span class="number">5s</span>;<span class="attribute">margin-bottom</span>: <span class="number">15px</span>;&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">input</span><span class="selector-attr">[type=text]</span><span class="selector-pseudo">:hover</span>, <span class="selector-tag">input</span><span class="selector-attr">[type=text]</span><span class="selector-pseudo">:focus</span>,<span class="selector-tag">input</span><span class="selector-attr">[type=submit]</span><span class="selector-pseudo">:hover</span>&#123;<span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#56b4ef</span>; <span class="attribute">box-shadow</span>: inset <span class="number">0</span> <span class="number">1px</span> <span class="number">3px</span> <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,.<span class="number">05</span>),<span class="number">0</span> <span class="number">0</span> <span class="number">8px</span> <span class="built_in">rgba</span>(<span class="number">82</span>,<span class="number">168</span>,<span class="number">236</span>,.<span class="number">6</span>); <span class="attribute">-webkit-transition</span>: box-shadow .<span class="number">5s</span>;&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">input</span><span class="selector-pseudo">::-webkit-input-placeholder</span> &#123;<span class="attribute">color</span>: <span class="number">#999</span>; <span class="attribute">-webkit-transition</span>: color .<span class="number">5s</span>;&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">input</span><span class="selector-pseudo">:focus</span><span class="selector-pseudo">::-webkit-input-placeholder</span>,  <span class="selector-tag">input</span><span class="selector-pseudo">:hover</span><span class="selector-pseudo">::-webkit-input-placeholder</span> &#123;<span class="attribute">color</span>: <span class="number">#c2c2c2</span>; <span class="attribute">-webkit-transition</span>: color .<span class="number">5s</span>;&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">input</span><span class="selector-attr">[type=submit]</span>&#123;<span class="attribute">height</span>: <span class="number">30px</span>; <span class="attribute">width</span>: <span class="number">80px</span>; <span class="attribute">background</span>: <span class="number">#4393C9</span>; <span class="attribute">border</span>:<span class="number">1px</span> solid <span class="number">#fff</span>;<span class="attribute">color</span>: <span class="number">#fff</span>;<span class="attribute">font</span>:<span class="number">14px</span> bolder; &#125;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">id</span>=<span class="string">&quot;form&quot;</span>&gt;</span></span><br><span class="line">      年份 <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;year&quot;</span>&gt;</span></span><br><span class="line">      月份 <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;month&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;查询&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;result&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">      <span class="function"><span class="keyword">function</span> <span class="title">checkYear</span>(<span class="params">obj</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">if</span> (!obj.value.match(<span class="regexp">/^\d&#123;4&#125;$/</span>)) &#123;</span></span><br><span class="line"><span class="javascript">          obj.style.borderColor = <span class="string">&#x27;red&#x27;</span>;</span></span><br><span class="line"><span class="javascript">          result.innerHTML = <span class="string">&#x27;输入错误，年份为4位数字表示&#x27;</span>;</span></span><br><span class="line"><span class="javascript">          <span class="keyword">return</span> <span class="literal">false</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="javascript">        result.innerHTML = <span class="string">&#x27;&#x27;</span>;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">return</span> <span class="literal">true</span>;</span></span><br><span class="line">      &#125;</span><br><span class="line"><span class="javascript">      <span class="function"><span class="keyword">function</span> <span class="title">checkMonth</span>(<span class="params">obj</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">if</span> (!obj.value.match(<span class="regexp">/^((0?[1-9])|(1[012]))$/</span>)) &#123;</span></span><br><span class="line"><span class="javascript">          obj.style.borderColor = <span class="string">&#x27;red&#x27;</span>;</span></span><br><span class="line"><span class="javascript">          result.innerHTML = <span class="string">&#x27;输入错误，月份为1~12之间&#x27;</span>;</span></span><br><span class="line"><span class="javascript">          <span class="keyword">return</span> <span class="literal">false</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="javascript">        result.innerHTML = <span class="string">&#x27;&#x27;</span>;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">return</span> <span class="literal">true</span>;</span></span><br><span class="line">      &#125;</span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> form = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;form&#x27;</span>);             <span class="comment">// &lt;form&gt;元素对象</span></span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> result = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;result&#x27;</span>);         <span class="comment">// &lt;div&gt;元素对象</span></span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> inputs = <span class="built_in">document</span>.getElementsByTagName(<span class="string">&#x27;input&#x27;</span>);    <span class="comment">// &lt;input&gt;元素集合</span></span></span><br><span class="line"><span class="javascript">      form.onsubmit = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">return</span> checkYear(inputs.year) &amp;&amp; checkMonth(inputs.month);</span></span><br><span class="line">      &#125;;</span><br><span class="line"><span class="javascript">      inputs.year.onfocus = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">this</span>.style.borderColor = <span class="string">&#x27;&#x27;</span>;</span></span><br><span class="line">      &#125;;</span><br><span class="line"><span class="javascript">      inputs.month.onfocus = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">this</span>.style.borderColor = <span class="string">&#x27;&#x27;</span>;</span></span><br><span class="line">      &#125;;</span><br><span class="line"><span class="javascript">      <span class="keyword">if</span> (!<span class="built_in">String</span>.prototype.trim) &#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">String</span>.prototype.trim = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">          <span class="keyword">return</span> <span class="built_in">this</span>.replace(<span class="regexp">/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g</span>, <span class="string">&#x27;&#x27;</span>);</span></span><br><span class="line">        &#125;;</span><br><span class="line">      &#125;</span><br><span class="line"><span class="javascript">      inputs.year.onblur = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">this</span>.value = <span class="built_in">this</span>.value.trim();</span></span><br><span class="line"><span class="javascript">        checkYear(<span class="built_in">this</span>);</span></span><br><span class="line">      &#125;;</span><br><span class="line"><span class="javascript">      inputs.month.onblur = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">this</span>.value = <span class="built_in">this</span>.value.trim();</span></span><br><span class="line"><span class="javascript">        checkMonth(<span class="built_in">this</span>);</span></span><br><span class="line">      &#125;;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/23/9ea4277327e36652b380f6f9a39f5398.png"></p><h1 id="字符限定与分组"><a href="#字符限定与分组" class="headerlink" title="字符限定与分组"></a>字符限定与分组</h1><ul><li>限定符<pre><code>  var reg=/\d&#123;6&#125;/gi; //匹配6个连续出现的数字</code></pre></li></ul><table><thead><tr><th align="center">限定符</th><th align="center">说明</th><th align="center">举例</th></tr></thead><tbody><tr><td align="center">?</td><td align="center">匹配前面的字符零次或一次</td><td align="center">ht?t</td></tr><tr><td align="center">+</td><td align="center">匹配前面的字符一次或多次</td><td align="center">bre+ad</td></tr><tr><td align="center">*</td><td align="center">匹配前面的字符零次或多次</td><td align="center">ro*se</td></tr><tr><td align="center">{n}</td><td align="center">匹配前面的字符n次</td><td align="center">hit{2}er</td></tr><tr><td align="center">{n,}</td><td align="center">匹配前面的字符最少n次</td><td align="center">hit{2,}er</td></tr><tr><td align="center">{n,m}</td><td align="center">匹配前面的字符最少n次，最多m次</td><td align="center">fe{0,2}</td></tr></tbody></table><ul><li>贪婪与懒惰匹配<ol><li>贪婪匹配表示匹配尽可能多的字符</li><li>懒惰匹配表示匹配尽可能少的字符</li><li>在默认情况下，是贪婪匹配，若想实现懒惰匹配，需在上一个限定符后面加上”?”符号<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str=<span class="string">&#x27;webWEBWebwEb&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> reg1=<span class="regexp">/w.*b/gi</span>;   <span class="comment">//贪婪匹配</span></span><br><span class="line"><span class="keyword">var</span> reg2=<span class="regexp">/w.*?b/gi</span>; <span class="comment">//懒惰匹配</span></span><br><span class="line"><span class="built_in">console</span>.log(reg1.exec(str));   <span class="comment">//webWEBWebwEb 获得最先出现的w到最后出现的b</span></span><br><span class="line"><span class="built_in">console</span>.log(reg2.exec(str));   <span class="comment">//web 获得最先出现的w到最先出现的b</span></span><br></pre></td></tr></table></figure></li></ol></li></ul><h1 id="括号字符"><a href="#括号字符" class="headerlink" title="括号字符"></a>括号字符</h1><p>被括号字符“()”括起来的内容，称之为”子表达式“</p><ol><li>改变限定符的作用范围<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//改变前</span></span><br><span class="line">正则表达式：<span class="keyword">catch</span>|er</span><br><span class="line">可匹配的结果：<span class="keyword">catch</span>、er</span><br><span class="line"><span class="comment">//改变后</span></span><br><span class="line">正则表达式：cat(ch|er)</span><br><span class="line">可匹配的结果：<span class="keyword">catch</span>、cater</span><br></pre></td></tr></table></figure></li><li>分组<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//分组前</span></span><br><span class="line">正则表达式：abc&#123;<span class="number">2</span>&#125;</span><br><span class="line">可匹配的结果：abcc</span><br><span class="line"><span class="comment">//分组后</span></span><br><span class="line">正则表达式： <span class="function"><span class="title">a</span>(<span class="params">bc</span>)</span>&#123;<span class="number">2</span>&#125;</span><br><span class="line">可匹配的结果：abcbc</span><br></pre></td></tr></table></figure></li><li>捕获<br>将子表达式匹配到的内容存储到系统的缓存区中。<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> res1 = <span class="string">&#x27;1234&#x27;</span>.match(<span class="regexp">/\d\d\d\d/g</span>);</span><br><span class="line"><span class="built_in">console</span>.log(res1); <span class="comment">//[&quot;1234&quot;]</span></span><br><span class="line"><span class="keyword">var</span> res2 = <span class="string">&#x27;1234&#x27;</span>.match(<span class="regexp">/(\d)(\d)(\d)(\d)/</span>);</span><br><span class="line"><span class="built_in">console</span>.log(res2); <span class="comment">// [&quot;1234&quot;,&quot;1&quot;,&quot;2&quot;,&quot;3&quot;,&quot;4&quot;]</span></span><br><span class="line"><span class="keyword">var</span> res3 = <span class="string">&#x27;1234&#x27;</span>.match(<span class="regexp">/(\d)(\d)(\d)(\d)/g</span>);</span><br><span class="line"><span class="built_in">console</span>.log(res3);  <span class="comment">//[&quot;1234&quot;]</span></span><br></pre></td></tr></table></figure></li><li>反向引用<br>在正则表达式中，获取存放在缓存区内的子表达式的捕获内容，则可以使用”\n“(n&gt;0)的方式引用<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">\<span class="number">1</span>：第一个子表达式捕获的内容</span><br><span class="line">\<span class="number">2</span>：第二个子表达式捕获的内容</span><br><span class="line"><span class="keyword">var</span> reg1=<span class="regexp">/(\d)\1\1/gi</span>; 连续三个相同的数字</span><br><span class="line"><span class="keyword">var</span> reg2=<span class="regexp">/(\s)(\s)\1\2/gi</span>; ABAB格式</span><br></pre></td></tr></table></figure></li></ol><h1 id="正则相关方法"><a href="#正则相关方法" class="headerlink" title="正则相关方法"></a>正则相关方法</h1><ol><li>RegExp对象 的test()方法：<br>检测正则表达式与指定的字符串是否匹配，返回true或false。<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> reg = <span class="regexp">/([A-Z])([A-Z])\1\2/g</span>;</span><br><span class="line"><span class="built_in">console</span>.log(reg.test(<span class="string">&#x27;1234&#x27;</span>));    <span class="comment">//false    </span></span><br><span class="line"><span class="built_in">console</span>.log(reg.test(<span class="string">&#x27;abab&#x27;</span>));    <span class="comment">//false</span></span><br><span class="line"><span class="built_in">console</span>.log(reg.test(<span class="string">&#x27;CDCD&#x27;</span>));    <span class="comment">//true</span></span><br><span class="line"><span class="built_in">console</span>.log(reg.test(<span class="string">&#x27;EfEf&#x27;</span>));    <span class="comment">//false</span></span><br></pre></td></tr></table></figure></li><li>String对象的search()方法：<br>可以返回指定模式的子串在字符串首次出现的位置，查找失败返回-1。<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">&#x27;123*abc.456&#x27;</span>;</span><br><span class="line"><span class="built_in">console</span>.log(str.search(<span class="string">&#x27;.*&#x27;</span>));       <span class="comment">//0</span></span><br><span class="line"><span class="built_in">console</span>.log(str.search(<span class="regexp">/[\.\*]/</span>));   <span class="comment">//3</span></span><br></pre></td></tr></table></figure><blockquote><p>search()方法如果传入一个非正则表达式对象，则会将其转换为正则表达式对象</p></blockquote></li><li>String对象的split()方法<br>用于根据指定的分隔符将一个字符串分割成字符串数组，其分割后的字符串数组中不包括分隔符。<br>当分隔符不只一个时，需要定义正则对象才能够完成字符串的分割操作。<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">&#x27;test@123.com&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> reg = <span class="regexp">/[@\.]/</span>;</span><br><span class="line"><span class="keyword">var</span> split_res = str.split(reg);</span><br><span class="line"><span class="built_in">console</span>.log(split_res);    <span class="comment">// 输出结果：(3) [&quot;test&quot;, &quot;123&quot;, &quot;com&quot;]</span></span><br></pre></td></tr></table></figure></li><li>String对象的replace()方法<br>用 newChar 字符替换字符串中出现的所有 searchChar 字符，并返回替换后的新字符串。<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">&#x27;test@123.com&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> str_new= str.replace(‘<span class="number">123</span>’,’<span class="number">163</span>’);</span><br><span class="line"><span class="built_in">console</span>.log(str_new);    <span class="comment">// 输出结果：test@163.com</span></span><br></pre></td></tr></table></figure></li></ol><blockquote><p>replace：获取捕获内容，并对捕获内容进行替换</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str=<span class="string">&#x27;12ab34&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> reg=<span class="regexp">/(\d)(\d)/gi</span>;</span><br><span class="line"><span class="built_in">console</span>.log(str.match(reg));</span><br><span class="line"><span class="built_in">console</span>.log(str.replace(reg,<span class="string">&#x27;*&#x27;</span>));  <span class="comment">//[&quot;12&quot;,[&quot;34&quot;]]  *ab*</span></span><br></pre></td></tr></table></figure><blockquote><p>$n:获取第n个字表达式捕获的内容</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">&#x27;Regular Capture&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> reg = <span class="regexp">/(\w+)\s(\w+)/gi</span>;</span><br><span class="line"><span class="keyword">var</span> newStr = str.replace(reg,<span class="string">&#x27;$2 $1&#x27;</span>);</span><br><span class="line"><span class="built_in">console</span>.log(newStr);</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>内容查找与替换<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">div</span>&#123;<span class="attribute">float</span>:left;&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">input</span>&#123;<span class="attribute">margin</span>:<span class="number">0</span> <span class="number">20px</span>;&#125;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>过滤前内容:<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">id</span>=<span class="string">&quot;pre&quot;</span> <span class="attr">rows</span>=<span class="string">&quot;10&quot;</span> <span class="attr">cols</span>=<span class="string">&quot;40&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;btn&quot;</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;过滤&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>过滤后内容:<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">id</span>=<span class="string">&quot;res&quot;</span> <span class="attr">rows</span>=<span class="string">&quot;10&quot;</span> <span class="attr">cols</span>=<span class="string">&quot;40&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">      <span class="built_in">document</span>.getElementById(<span class="string">&#x27;btn&#x27;</span>).onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 定义查找并需要替换的内容规则，[\u4e00-\u9fa5]表示匹配任意中文字符</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> reg = <span class="regexp">/(bad)|[\u4e00-\u9fa5]/gi</span>;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> str = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;pre&#x27;</span>).value;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> newstr = str.replace(reg, <span class="string">&#x27;*&#x27;</span>);</span></span><br><span class="line"><span class="javascript">        <span class="built_in">document</span>.getElementById(<span class="string">&#x27;res&#x27;</span>).innerHTML = newstr;</span></span><br><span class="line">      &#125;;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/23/fba47172672ed97909dab0842fe31f3a.png"></p><h1 id="表单验证"><a href="#表单验证" class="headerlink" title="表单验证"></a>表单验证</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>表单验证<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;case03.css&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box-head&quot;</span>&gt;</span>填写注册信息<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box-body&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">form</span>&gt;</span>  <span class="comment">&lt;!-- ----- --&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">table</span>&gt;</span>   <span class="comment">&lt;!-- ------- --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">th</span>&gt;</span>用户名称：<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;长度4~12，英文大小写字母&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">th</span>&gt;</span>密　　码：<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;pwd&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;长度6~20，大小写字母、数字或下划线&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">th</span>&gt;</span>确认密码：<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;repwd&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请再次输入密码进行确认&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">th</span>&gt;</span>手机号码：<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;tel&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;13、14、15、17、18开头的11位手机号&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">th</span>&gt;</span>电子邮箱：<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;email&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;用户名@域名（域名后缀至少2个字符）&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">&quot;3&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;注册&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;case03.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span>&#123;<span class="attribute">margin-top</span>:<span class="number">20px</span>;&#125;</span><br><span class="line"><span class="selector-class">.box</span>&#123;<span class="attribute">font-size</span>:<span class="number">13px</span>;<span class="attribute">margin</span>:<span class="number">0</span> auto; <span class="attribute">width</span>: <span class="number">80%</span>;&#125;</span><br><span class="line"><span class="selector-class">.box-head</span>&#123;<span class="attribute">padding</span>:<span class="number">15px</span> <span class="number">20px</span>;<span class="attribute">font-size</span>:<span class="number">14px</span>; <span class="attribute">text-align</span>: center; <span class="attribute">font-size</span>:<span class="number">24px</span>; <span class="attribute">font</span>:bolder;&#125;</span><br><span class="line"><span class="selector-class">.box-body</span>&#123;<span class="attribute">padding</span>:<span class="number">10px</span> <span class="number">20px</span>;&#125;</span><br><span class="line"><span class="selector-class">.box-body</span> <span class="selector-tag">th</span>&#123;<span class="attribute">font-weight</span>:normal;<span class="attribute">vertical-align</span>:top;<span class="attribute">padding-top</span>:<span class="number">12px</span>;&#125;</span><br><span class="line"><span class="selector-class">.box-body</span> <span class="selector-tag">tr</span><span class="selector-pseudo">:last-child</span>&#123; <span class="attribute">text-align</span>: center;&#125;</span><br><span class="line"><span class="selector-class">.box-body</span> <span class="selector-tag">input</span>&#123;<span class="attribute">vertical-align</span>:middle;<span class="attribute">font-family</span>:Tahoma,simsun;<span class="attribute">font-size</span>:<span class="number">12px</span>;&#125;</span><br><span class="line"><span class="selector-class">.box-body</span> <span class="selector-tag">input</span><span class="selector-attr">[type=text]</span>,<span class="selector-class">.box-body</span> <span class="selector-tag">input</span><span class="selector-attr">[type=password]</span>&#123;<span class="attribute">border-color</span>: <span class="number">#bbb</span>;<span class="attribute">height</span>: <span class="number">38px</span>;<span class="attribute">font-size</span>: <span class="number">14px</span>;<span class="attribute">border-radius</span>: <span class="number">2px</span>;<span class="attribute">outline</span>: <span class="number">0</span>;<span class="attribute">border</span>: <span class="number">#ccc</span> <span class="number">1px</span> solid;<span class="attribute">padding</span>: <span class="number">0</span> <span class="number">10px</span>; <span class="attribute">width</span>: <span class="number">350px</span>;<span class="attribute">-webkit-transition</span>: box-shadow .<span class="number">5s</span>;<span class="attribute">margin-bottom</span>: <span class="number">15px</span>;&#125;</span><br><span class="line"><span class="selector-class">.box-body</span> <span class="selector-tag">input</span><span class="selector-attr">[type=text]</span><span class="selector-pseudo">:hover</span>, <span class="selector-class">.box-body</span>  <span class="selector-tag">input</span><span class="selector-attr">[type=text]</span><span class="selector-pseudo">:focus</span>, <span class="selector-class">.box-body</span> <span class="selector-tag">input</span><span class="selector-attr">[type=password]</span><span class="selector-pseudo">:hover</span>, <span class="selector-class">.box-body</span>  <span class="selector-tag">input</span><span class="selector-attr">[type=password]</span><span class="selector-pseudo">:focus</span> &#123;<span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#56b4ef</span>; <span class="attribute">box-shadow</span>: inset <span class="number">0</span> <span class="number">1px</span> <span class="number">3px</span> <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,.<span class="number">05</span>),<span class="number">0</span> <span class="number">0</span> <span class="number">8px</span> <span class="built_in">rgba</span>(<span class="number">82</span>,<span class="number">168</span>,<span class="number">236</span>,.<span class="number">6</span>); <span class="attribute">-webkit-transition</span>: box-shadow .<span class="number">5s</span>;&#125;</span><br><span class="line"><span class="selector-class">.box-body</span> <span class="selector-tag">input</span><span class="selector-pseudo">::-webkit-input-placeholder</span> &#123;<span class="attribute">color</span>: <span class="number">#999</span>; <span class="attribute">-webkit-transition</span>: color .<span class="number">5s</span>;&#125;</span><br><span class="line"><span class="selector-class">.box-body</span> <span class="selector-tag">input</span><span class="selector-pseudo">:focus</span><span class="selector-pseudo">::-webkit-input-placeholder</span>,  <span class="selector-tag">input</span><span class="selector-pseudo">:hover</span><span class="selector-pseudo">::-webkit-input-placeholder</span> &#123;<span class="attribute">color</span>: <span class="number">#c2c2c2</span>; <span class="attribute">-webkit-transition</span>: color .<span class="number">5s</span>;&#125;</span><br><span class="line"><span class="selector-class">.box-body</span> <span class="selector-tag">input</span><span class="selector-attr">[type=submit]</span>&#123;<span class="attribute">padding</span>:<span class="number">4px</span> <span class="number">15px</span>;<span class="attribute">cursor</span>:pointer; <span class="attribute">width</span>:<span class="number">120px</span>; <span class="attribute">height</span>:<span class="number">40px</span>; <span class="attribute">background</span>: <span class="number">#4393C9</span>; <span class="attribute">border</span>:<span class="number">1px</span> solid <span class="number">#fff</span>; <span class="attribute">color</span>: <span class="number">#fff</span>;<span class="attribute">font</span>:<span class="number">16px</span> bolder;&#125;</span><br><span class="line"><span class="selector-class">.box-body</span> <span class="selector-class">.error</span>&#123;<span class="attribute">border</span>:<span class="number">1px</span> solid <span class="number">#FF3300</span>; <span class="attribute">background</span>: <span class="number">#FFF2E5</span>; <span class="attribute">font-size</span>:<span class="number">10px</span>; <span class="attribute">height</span>: <span class="number">30px</span>; <span class="attribute">line-height</span>: <span class="number">30px</span>;<span class="attribute">margin-bottom</span>:<span class="number">10px</span>; <span class="attribute">padding</span>:<span class="number">0</span> <span class="number">10px</span>;&#125;</span><br><span class="line"><span class="selector-class">.box-body</span> <span class="selector-class">.success</span>&#123;<span class="attribute">border</span>:<span class="number">1px</span> solid <span class="number">#01BE00</span>; <span class="attribute">background</span>: <span class="number">#E6FEE4</span>; <span class="attribute">font-size</span>:<span class="number">10px</span>; <span class="attribute">height</span>: <span class="number">30px</span>; <span class="attribute">line-height</span>: <span class="number">30px</span>;<span class="attribute">margin-bottom</span>:<span class="number">10px</span>; <span class="attribute">padding</span>:<span class="number">0</span> <span class="number">10px</span>;&#125;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取所有input框</span></span><br><span class="line"><span class="keyword">var</span> inputs = <span class="built_in">document</span>.getElementsByTagName(<span class="string">&#x27;input&#x27;</span>);</span><br><span class="line">inputs[<span class="number">0</span>].focus();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 为每个input框添加失去焦点事件</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; inputs.length - <span class="number">1</span>; ++i) &#123;</span><br><span class="line">  inputs[i].onblur = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    inputBlur(<span class="built_in">this</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">inputBlur</span>(<span class="params">obj</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> name = obj.name;           <span class="comment">// 获取输入框的name值</span></span><br><span class="line">  <span class="keyword">var</span> val = obj.value;           <span class="comment">// 获取输入框的value值</span></span><br><span class="line">  <span class="keyword">var</span> tips = obj.placeholder;    <span class="comment">// 获取输入框中的提示信息</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// var fu = obj.parentNode;</span></span><br><span class="line">  <span class="comment">// var xiongdi = fu.nextSibling.nextSibling;   //回车会被当成一个文本节点，所以要next两次</span></span><br><span class="line">  <span class="keyword">var</span> tips_obj = obj.parentNode.nextSibling.nextSibling.firstChild;  <span class="comment">// 获取提示信息显示的div元素对象</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 1. 去掉两端的空白字符</span></span><br><span class="line">  val = val.trim();</span><br><span class="line">  <span class="comment">// 2. 文本框内容为空，给出提示信息</span></span><br><span class="line">  <span class="keyword">if</span> (!val) &#123;</span><br><span class="line">    error(tips_obj, <span class="string">&#x27;输入框不能为空&#x27;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 3. 获取正则匹配规则和提示信息</span></span><br><span class="line">  <span class="keyword">var</span> reg_msg = getRegMsg(name, tips);</span><br><span class="line">  <span class="comment">// 4. 检测是否否he正则匹配</span></span><br><span class="line">  <span class="keyword">if</span> (reg_msg[<span class="string">&#x27;reg&#x27;</span>].test(val)) &#123;</span><br><span class="line">    <span class="comment">// 匹配成功，显示成功的提示信息</span></span><br><span class="line">    success(tips_obj, reg_msg[<span class="string">&#x27;msg&#x27;</span>][<span class="string">&#x27;success&#x27;</span>]);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// 匹配失败，显示失败的提示信息</span></span><br><span class="line">    error(tips_obj, reg_msg[<span class="string">&#x27;msg&#x27;</span>][<span class="string">&#x27;error&#x27;</span>]);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 根据input的name值，设置正则规则及提示信息</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getRegMsg</span>(<span class="params">name, tips</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> reg = msg = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">  <span class="keyword">switch</span> (name) &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;username&#x27;</span>:</span><br><span class="line">      reg = <span class="regexp">/^[a-zA-Z]&#123;4,12&#125;$/</span>;</span><br><span class="line">      msg = &#123;<span class="string">&#x27;success&#x27;</span>: <span class="string">&#x27;用户名输入正确&#x27;</span>, <span class="string">&#x27;error&#x27;</span>: tips&#125;;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;pwd&#x27;</span>:</span><br><span class="line">      reg = <span class="regexp">/^\w&#123;6,20&#125;$/</span>;</span><br><span class="line">      msg = &#123;<span class="string">&#x27;success&#x27;</span>: <span class="string">&#x27;密码输入正确&#x27;</span>, <span class="string">&#x27;error&#x27;</span>: tips&#125;;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;repwd&#x27;</span>:</span><br><span class="line">      <span class="keyword">var</span> con = <span class="built_in">document</span>.getElementsByTagName(<span class="string">&#x27;input&#x27;</span>)[<span class="number">1</span>].value;</span><br><span class="line">      reg = <span class="built_in">RegExp</span>(<span class="string">&quot;^&quot;</span> + con + <span class="string">&quot;$&quot;</span>);</span><br><span class="line">      msg = &#123;<span class="string">&#x27;success&#x27;</span>: <span class="string">&#x27;两次密码输入正确&#x27;</span>, <span class="string">&#x27;error&#x27;</span>: <span class="string">&#x27;两次输入的密码不一致&#x27;</span>&#125;;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;tel&#x27;</span>:</span><br><span class="line">      reg = <span class="regexp">/^1[34578]\d&#123;9&#125;$/</span>;</span><br><span class="line">      msg = &#123;<span class="string">&#x27;success&#x27;</span>: <span class="string">&#x27;手机号码输入正确&#x27;</span>, <span class="string">&#x27;error&#x27;</span>: tips&#125;;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;email&#x27;</span>:</span><br><span class="line">      reg = <span class="regexp">/^(\w+(\_|\-|\.)*)+@(\w+(\-)?)+(\.\w&#123;2,&#125;)+$/</span>;</span><br><span class="line">      msg = &#123;<span class="string">&#x27;success&#x27;</span>: <span class="string">&#x27;邮箱输入正确&#x27;</span>, <span class="string">&#x27;error&#x27;</span>: tips&#125;;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> &#123;<span class="string">&#x27;reg&#x27;</span>: reg, <span class="string">&#x27;msg&#x27;</span>: msg&#125;;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 成功</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">success</span>(<span class="params">obj, msg</span>) </span>&#123;</span><br><span class="line">  obj.className = <span class="string">&#x27;success&#x27;</span>;</span><br><span class="line">  obj.innerHTML = msg;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 失败</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">error</span>(<span class="params">obj, msg</span>) </span>&#123;</span><br><span class="line">  obj.className = <span class="string">&#x27;error&#x27;</span>;</span><br><span class="line">  obj.innerHTML = msg + <span class="string">&#x27;，请重新输入&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/23/4a94c38f802bec0a3ec225449773b4aa.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;正则表达式&quot;&gt;&lt;a href=&quot;#正则表达式&quot; class=&quot;headerlink&quot; title=&quot;正则表达式&quot;&gt;&lt;/a&gt;正则表达式&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://ihateregex.io/&quot;&gt;正则表达式查询网站I Hate Regex&lt;/a&gt;</summary>
      
    
    
    
    <category term="编程语言" scheme="http://xiaoliblog.cn/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    <category term="JavaScript" scheme="http://xiaoliblog.cn/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/JavaScript/"/>
    
    
    <category term="JavaScript" scheme="http://xiaoliblog.cn/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript🌞jQuery</title>
    <link href="http://xiaoliblog.cn/2021/01/15/%E5%89%8D%E7%AB%AF/JavaScript/JavaScript_jQuery/"/>
    <id>http://xiaoliblog.cn/2021/01/15/%E5%89%8D%E7%AB%AF/JavaScript/JavaScript_jQuery/</id>
    <published>2021-01-15T04:25:39.723Z</published>
    <updated>2021-01-15T05:28:40.702Z</updated>
    
    <content type="html"><![CDATA[<h1 id="jQuery"><a href="#jQuery" class="headerlink" title="jQuery"></a>jQuery</h1><ul><li>基本概念<ol><li>jQuery：一款优秀的JavaScript框架库，封装了很多的JavaScript函数。</li><li>作用：简化了HTML与JavaScript之间的操作，使得DOM对象、事件处理、动画效果、Ajax等操作的实现语法更加简洁，提高了程序的开发效率，消除很多跨浏览器的兼容问题。</li></ol></li><li>下载jQuery<ol><li>官方网址：<a href="http://jquery.com/">http://jquery.com</a></li><li>jQuery官网引用地址最近国内访问会经常出现打不开的情况，可以戳<a href="https://www.jq22.com/jquery-info122">jQuery插件库</a></li><li><a href="https://www.runoob.com/jquery/jquery-tutorial.html">jQuery|菜鸟教程</a></li></ol></li><li>引入jQuery<ol><li>下载：minified（压缩版，去掉注释和空白行，引入本地下载的jQuery。<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;jquery-1.12.4.min.js&quot;</span>&gt;</span><span class="handlebars"><span class="xml"><span class="tag">&lt;/<span class="name">scirpt</span>&gt;</span></span></span></span><br></pre></td></tr></table></figure></li><li>CDN：内容分发网络，通过CDN的优势可以加快jQuery文件的访问速度<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>   <span class="attr">src</span>=<span class="string">&quot;https://code.jquery.com/jquery-3.4.1.min.js&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol></li><li>使用jQuery</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">在HTML页面中创建&lt;h2&gt;元素，该元素含有文本“测试”和“居中”属性的。</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">//html实现</span></span><br><span class="line">&lt;h2 align=‘center’&gt;测试&lt;/h2&gt;</span><br><span class="line"><span class="comment">//JS实现</span></span><br><span class="line"><span class="keyword">var</span> h2 = <span class="built_in">document</span>.createElement(<span class="string">&#x27;h2&#x27;</span>); </span><br><span class="line"><span class="keyword">var</span> text = <span class="built_in">document</span>.createTextNode(‘测试’); </span><br><span class="line"><span class="keyword">var</span> attr = <span class="built_in">document</span>.createAttribute(<span class="string">&#x27;align&#x27;</span>);</span><br><span class="line">attr.value = ‘center’; </span><br><span class="line">h2.setAttributeNode(attr);  </span><br><span class="line">h2.appendChild(text); </span><br><span class="line"><span class="built_in">document</span>.querySelector(<span class="string">&#x27;body&#x27;</span>).appendChild(h2);</span><br><span class="line"><span class="comment">//jQuery实现</span></span><br><span class="line"><span class="comment">//美元符号$表示jQuery类，也就是说&quot;$()&quot;等价于&quot;jQuery()&quot;,即jQuery的构造函数。</span></span><br><span class="line">$(<span class="string">&#x27;&lt;h2 align=&quot;center&quot;&gt;测试&lt;/h2&gt;&#x27;</span>).appendTo(<span class="string">&#x27;body&#x27;</span>);</span><br></pre></td></tr></table></figure><h1 id="元素操作"><a href="#元素操作" class="headerlink" title="元素操作"></a>元素操作</h1><h2 id="jQuery选择器"><a href="#jQuery选择器" class="headerlink" title="jQuery选择器"></a>jQuery选择器</h2><p><strong>语法：$(选择器)</strong></p><ul><li>基本选择器、层级选择器</li><li>基本过滤选择器、内容选择器</li><li>可见性选择器、属性选择器</li><li>子元素选择器、表单选择器</li></ul><h3 id="基本选择器"><a href="#基本选择器" class="headerlink" title="基本选择器"></a>基本选择器</h3><p>基本选择器常用的有标签选择器、类选择器和ID选择器</p><table><thead><tr><th align="center">CSS选择器</th><th align="center">功能描述</th><th align="center">示例</th></tr></thead><tbody><tr><td align="center">li{color:red}</td><td align="center">根据指定元素名匹配所有元素</td><td align="center">${“li”}</td></tr><tr><td align="center">.bar{color:red}</td><td align="center">根据指定类名匹配所有元素</td><td align="center">${“.bar”}</td></tr><tr><td align="center">#btn{color:red}</td><td align="center">根据指定id匹配一个元素</td><td align="center">${“#bar}”</td></tr><tr><td align="center">li,.bar,#btn{color:red}</td><td align="center">同时获取多个元素</td><td align="center">${“li,p,div”}</td></tr></tbody></table><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/25/b0ece8129f371bfe621892437397d7a0.png"></p><h3 id="层级选择器"><a href="#层级选择器" class="headerlink" title="层级选择器"></a>层级选择器</h3><table><thead><tr><th align="center">选择器</th><th align="center">示例</th><th align="center">功能描述</th></tr></thead><tbody><tr><td align="center">selector selector1</td><td align="center">$(“div .test”)</td><td align="center">选取&lt;div&gt;下所有class名为test的元素（多级）</td></tr><tr><td align="center">parent &gt; child</td><td align="center">$(“.box &gt; .con”)</td><td align="center">选取class名为box下的所有class名为con的子元素（一级）</td></tr><tr><td align="center">prev + next</td><td align="center">$(“div + .title”)</td><td align="center">获取紧邻&lt;div&gt;的下一个class名为title的兄弟节点</td></tr><tr><td align="center">prev ~ siblings</td><td align="center">$(“.bar ~ li”)</td><td align="center">获取class名为bar的元素后的所有同级元素节点&lt;li&gt;</td></tr></tbody></table><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/25/991e6bf8bb02ade1e9fb757b2dabbcc3.png"></p><h3 id="基本过滤选择器"><a href="#基本过滤选择器" class="headerlink" title="基本过滤选择器"></a>基本过滤选择器</h3><table><thead><tr><th align="center">选择器</th><th align="center">示例</th><th align="center">功能描述</th></tr></thead><tbody><tr><td align="center">:first</td><td align="center">$(“li : first”)</td><td align="center">获取第1个&lt;li&gt;元素</td></tr><tr><td align="center">:last</td><td align="center">$(“li : last”)</td><td align="center">获取最后1个&lt;li&gt;元素</td></tr><tr><td align="center">:even</td><td align="center">$(“li :even”)</td><td align="center">获取所有li元素中，索引为偶数的奇数行数据,从0开始</td></tr><tr><td align="center">:odd</td><td align="center">$(“li :odd”)</td><td align="center">获取所有li元素中，索引为奇数数的偶数行数据，从0开始</td></tr><tr><td align="center">:eq(index)</td><td align="center">$(“li:eq(3)”)</td><td align="center">获取索引为3的li元素</td></tr><tr><td align="center">:gt(index)</td><td align="center">$(“li :eq(3)”)</td><td align="center">获取索引大于3的li元素</td></tr><tr><td align="center">:It(index)</td><td align="center">$(“li :It(3)”)</td><td align="center">获取索引小于3的li元素</td></tr><tr><td align="center">:not(seletor)</td><td align="center">$(“li :not(li:qe(3))”)</td><td align="center">获取除指定选择器外的其他元素，获取除索引为3的li元素</td></tr><tr><td align="center">:focus</td><td align="center">$(“inputs:focus”)</td><td align="center">匹配当前获取焦点的input元素</td></tr><tr><td align="center">:animated</td><td align="center">#(“div:not(:animated)”)</td><td align="center">匹配当前没有执行动画的div元素</td></tr></tbody></table><h3 id="内容选择器"><a href="#内容选择器" class="headerlink" title="内容选择器"></a>内容选择器</h3><table><thead><tr><th align="center">选择器</th><th align="center">功能描述</th><th align="center">示例</th></tr></thead><tbody><tr><td align="center">:contains(text)</td><td align="center">获取内容包含1text文本的元素</td><td align="center">&amp;(“li:contains(‘js’)”)获取内容中含’js’的li元素</td></tr><tr><td align="center">:empty</td><td align="center">获取内容为空的元素</td><td align="center">$(“li:empty”)获取内容为空的li元素</td></tr><tr><td align="center">:has(selector)</td><td align="center">获取内容包含指定选择器元素</td><td align="center">$(“li:has(‘a’)”)获取内容中含a元素的所有li元素</td></tr><tr><td align="center">:parent</td><td align="center">获取内容不为空的元素(特殊)</td><td align="center">$(“li:parent”)获取内容不为空的li元素</td></tr></tbody></table><h3 id="可见性选择器"><a href="#可见性选择器" class="headerlink" title="可见性选择器"></a>可见性选择器</h3><table><thead><tr><th align="center">选择器</th><th align="center">功能描述</th><th align="center">示例</th></tr></thead><tbody><tr><td align="center">:hidden</td><td align="center">获取所有隐藏元素</td><td align="center">$(“li:hidden”)获取所有隐藏的li元素</td></tr><tr><td align="center">:visible</td><td align="center">获取所有可见元素</td><td align="center">$(“li:visible”)获取所有可见的li元素</td></tr></tbody></table><h3 id="属性选择器"><a href="#属性选择器" class="headerlink" title="属性选择器"></a>属性选择器</h3><table><thead><tr><th align="center">选择器</th><th align="center">功能描述</th><th align="center">示例</th></tr></thead><tbody><tr><td align="center">[attr]</td><td align="center">获取具体指定属性的元素</td><td align="center">$(“div[class]”)获取含有class属性的所有div元素</td></tr><tr><td align="center">[attr=value]</td><td align="center">获取属性值等于value的元素</td><td align="center">$(“div[class=current]”)获取class等于current的所有div元素</td></tr><tr><td align="center">[attr！=value]</td><td align="center">获取属性值不等于value的元素</td><td align="center">$(“div[class！=current]”)获取class不等于current的所有div元素</td></tr><tr><td align="center">[attr^=value]</td><td align="center">获取属性值以value开始的元素</td><td align="center">$(“div[class^box]”)获取class以box开始的所有div元素</td></tr><tr><td align="center">[attr$=value]</td><td align="center">获取属性值以value结尾的元素</td><td align="center">$(“div[class$box]”)获取class以box结尾的所有div元素</td></tr><tr><td align="center">[attr*=value]</td><td align="center">获取属性值包含value的元素</td><td align="center">$(“div[class*=’-‘]”)获取class含有’-‘的所有div元素</td></tr><tr><td align="center">[attr~=value]</td><td align="center">获取元素的属性值包含一个value，以空格隔开</td><td align="center">$(“div[class~=’box’]”)获取class属性值等于’box’或通过空格分隔并含有box的div元素，如”t box”</td></tr><tr><td align="center">[attr1][attr2]…[attrN]</td><td align="center">获取同时拥有多个属性的元素</td><td align="center">$(“input[id][name$=’usr’]”)获取同时含有id属性和属性值以usr结尾的name属性的input元素</td></tr></tbody></table><h3 id="子元素选择器"><a href="#子元素选择器" class="headerlink" title="子元素选择器"></a>子元素选择器</h3><table><thead><tr><th align="center">选择器</th><th align="center">功能描述</th></tr></thead><tbody><tr><td align="center">:nth-child(index/even/odd/公式)</td><td align="center">索引index默认从1开始，匹配指定index索引、偶数、奇书、或符合指定公式(如2n,n默认从0开始)的子元素</td></tr><tr><td align="center">:first-child</td><td align="center">获取第一个子元素</td></tr><tr><td align="center">:last-child</td><td align="center">获取最后一个子元素</td></tr><tr><td align="center">:only-child</td><td align="center">如果当前元素时唯一的子元素，则匹配</td></tr><tr><td align="center">:nth-last-child(index/even/odd/公式)</td><td align="center">选择所有它们父元素的第n个子元素，计数从最后一个元素开始到第一个</td></tr><tr><td align="center">:nth-of-type(index/even/odd/公式)</td><td align="center">选择同一个父元素之下，并且标签名相同的子元素中的第n个子元素</td></tr><tr><td align="center">:first-of-type</td><td align="center">选择所有相同的元素名称的第一个子元素</td></tr><tr><td align="center">:last-of-type</td><td align="center">选择所有相同的元素名称的最后一个子元素</td></tr><tr><td align="center">:only-of-type</td><td align="center">选择所有没有兄弟元素，且具有相同的元素名称的元素</td></tr><tr><td align="center">:nth-last-of-type(index/even/odd/公式)</td><td align="center">选择所有它们的父级元素的第n个子元素，计数从最后一个元素开始到第一个</td></tr></tbody></table><h3 id="表单选择器"><a href="#表单选择器" class="headerlink" title="表单选择器"></a>表单选择器</h3><table><thead><tr><th align="center">选择器</th><th align="center">功能描述</th></tr></thead><tbody><tr><td align="center">:input</td><td align="center">获取页面中的所有表单元素，包含select元素和textarea元素</td></tr><tr><td align="center">:text</td><td align="center">选取页面中的所有文本框</td></tr><tr><td align="center">:password</td><td align="center">选取所有的密码框</td></tr><tr><td align="center">:radio</td><td align="center">选取所有的单选按钮</td></tr><tr><td align="center">:checkbox</td><td align="center">选取所有的复选框</td></tr><tr><td align="center">:submit</td><td align="center">获取submit提交按钮</td></tr><tr><td align="center">:reset</td><td align="center">获取reset重置按钮</td></tr><tr><td align="center">:image</td><td align="center">获取type=”image”的图像域</td></tr><tr><td align="center">:button</td><td align="center">获取button按钮，包括button标签和type=”button”</td></tr><tr><td align="center">:file</td><td align="center">获取type=”file”的文件域</td></tr><tr><td align="center">:hidden</td><td align="center">获取隐藏表单项</td></tr><tr><td align="center">:enabled</td><td align="center">获取所有可用表单元素</td></tr><tr><td align="center">:disabled</td><td align="center">获取所有不可用表单元素</td></tr><tr><td align="center">:checked</td><td align="center">获取所有选中的表单元素，主要针对radio和checkbox</td></tr><tr><td align="center">:selected</td><td align="center">获取所有可用表单元素，主要针对select</td></tr></tbody></table><h3 id="元素筛选函数"><a href="#元素筛选函数" class="headerlink" title="元素筛选函数"></a>元素筛选函数</h3><table><thead><tr><th align="center">语法</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">$(“ul”).find(“span”)</td><td align="center">返回&lt;ul&gt; 后代中所有的&lt;span&gt; 元素</td></tr><tr><td align="center">$(“ul”).siblings(“span”))</td><td align="center">返回与&lt;ul&gt; 同级的所有的 &lt;span&gt; 元素</td></tr><tr><td align="center">$(“ul”).next(“span”))</td><td align="center">匹配&lt;ul&gt;紧邻的同级的下一个&lt;span&gt;元素</td></tr><tr><td align="center">$(“ul”). prev(“span”))</td><td align="center">匹配&lt;ul&gt;紧邻的同级的上一个&lt;span&gt;元素</td></tr></tbody></table><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/25/ce1673e1b45dc9421d7a6c4652b96f37.png"></p><p>获取第三层的第一个li</p><pre><code>    $(&#39;#fold&gt;ul&gt;li:first&#39;)</code></pre><p>通过上面的li，获得其下class为wrap的元素</p><pre><code>    $(&#39;#fold&gt;ul&gt;li:first&#39;).find(&#39;.wrap&#39;);</code></pre><h2 id="元素操作-1"><a href="#元素操作-1" class="headerlink" title="元素操作"></a>元素操作</h2><h3 id="元素遍历"><a href="#元素遍历" class="headerlink" title="元素遍历"></a>元素遍历</h3><p>each()方法可以对元素进行遍历</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>PHP<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>IOS<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>JAVA<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>JS<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="comment">//each参数：回调函数</span></span></span><br><span class="line"><span class="javascript">$(<span class="string">&#x27;li&#x27;</span>).each(<span class="function"><span class="keyword">function</span>(<span class="params">index,element</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.og(<span class="string">&quot;第&quot;</span>+(index+<span class="number">1</span>)+<span class="string">&#x27;个:&#x27;</span>+$(element).text());</span></span><br><span class="line">&#125;);</span><br><span class="line"><span class="javascript"><span class="comment">//each：遍历选择器匹配到的所有&lt;li&gt;元素</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//index：当前元素的索引位置</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//element：当前元素</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//text():函数，元素的文本</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">/*</span><br><span class="line">第1个:PHP</span><br><span class="line">第2个:IOS</span><br><span class="line">第3个:JAVA</span><br><span class="line">第4个:JS</span><br><span class="line">*/</span><br></pre></td></tr></table></figure><h3 id="元素内容"><a href="#元素内容" class="headerlink" title="元素内容"></a>元素内容</h3><table><thead><tr><th align="center">语法</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">html()</td><td align="center">获取第一个匹配元素的HTML内容</td></tr><tr><td align="center">html(content)</td><td align="center">设置第一个匹配元素的HTML内容</td></tr><tr><td align="center">text()</td><td align="center">获取所有匹配元素包含的文本内容组合起来的文本</td></tr><tr><td align="center">text(content)</td><td align="center">设置所有匹配元素的文本内容</td></tr><tr><td align="center">val()</td><td align="center">获取表单元素的value值</td></tr><tr><td align="center">val(value)</td><td align="center">设置表单元素的value值</td></tr></tbody></table><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;</span> <span class="meta-string">&quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.w3.org/1999/xhtml&quot;</span> <span class="attr">xml:lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Type&quot;</span> <span class="attr">content</span>=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>PHP<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>ios<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>java<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>js<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;jquery-3.4.1.min.js&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        $(<span class="string">&#x27;li&#x27;</span>).each(<span class="function"><span class="keyword">function</span>(<span class="params">index,element</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            $(element).text(<span class="string">&#x27;修改后的内容&#x27;</span> + index);</span></span><br><span class="line">        &#125;);</span><br><span class="line"><span class="javascript">        $(<span class="string">&#x27;li&#x27;</span>).each(<span class="function"><span class="keyword">function</span>(<span class="params">index,element</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">&quot;第&quot;</span> + (index+<span class="number">1</span>) + <span class="string">&#x27;个:&#x27;</span></span></span><br><span class="line"><span class="javascript">                + $(element).text());</span></span><br><span class="line">        &#125;);</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/25/63efebe8bea84d084a689d34e0d14a17.png"></p><h3 id="元素样式"><a href="#元素样式" class="headerlink" title="元素样式"></a>元素样式</h3><pre><code>    var ele=$(&#39;div&#39;);    ele.css(&#123;border:&#39;2px solid black&#39;,backgroundColor:&#39;#ccc&#39;&#125;);    var w=ele.css(&#39;width&#39;);    var h=ele.css(&#39;height&#39;);    ele.css(&#39;width&#39;,&#39;200px&#39;);    ele.css(&#39;height&#39;,&#39;200px&#39;);</code></pre><table><thead><tr><th align="center">语法</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">css(name)</td><td align="center">name:样式名称，获得样式的值</td></tr><tr><td align="center">css(properties)</td><td align="center">properties：键值对形式的对象，设置样式值</td></tr><tr><td align="center">css(name,value)</td><td align="center">设置样式的值</td></tr><tr><td align="center">width()/width(value)</td><td align="center">获取/设置第一个匹配元素的当前宽度值</td></tr><tr><td align="center">height()/height(value)</td><td align="center">获取/设置第一个匹配元素的当前高度值</td></tr><tr><td align="center">offset()</td><td align="center">获取元素的位置，返回的是一个对象，包含left和top属性</td></tr><tr><td align="center">offset(properties)</td><td align="center">利用对象设置元素的位置，必须包含left和top属性</td></tr></tbody></table><h3 id="元素属性"><a href="#元素属性" class="headerlink" title="元素属性"></a>元素属性</h3><pre><code>    $(element).prop(&#39;checked&#39;,false);</code></pre><table><thead><tr><th align="center">语法</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">attr(name)</td><td align="center">取得第一个匹配元素的属性值，否则返回undefined</td></tr><tr><td align="center">attr(properties)</td><td align="center">将一个键值对形式的对象设置为所有匹配元素的属性</td></tr><tr><td align="center">attr(name,value)</td><td align="center">为所有匹配的元素设置一个属性值</td></tr><tr><td align="center">removeAtrre(name)</td><td align="center">从每一个匹配的元素中删除一个属性</td></tr><tr><td align="center">prop(name)</td><td align="center">取得第一个匹配元素的属性值，否则返回undefined</td></tr><tr><td align="center">prop(properties)</td><td align="center">将一个键值对形式的对象设置为所有匹配元素的属性</td></tr><tr><td align="center">prop(name,value)</td><td align="center">为所有匹配的元素设置一个属性值</td></tr></tbody></table><blockquote><p>attr（）和prop（）只能获取第一个匹配元素的属性值。<br>操作状态，如checked、selected、disabled时(有true/false)用prop；其它用attr。</p></blockquote><h3 id="元素基本属性"><a href="#元素基本属性" class="headerlink" title="元素基本属性"></a>元素基本属性</h3><table><thead><tr><th align="center">语法</th><th align="center">作用</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">addClass(class)</td><td align="center">追加样式</td><td align="center">为每个匹配的元素追加指定的类名</td></tr><tr><td align="center">removeClass(class)</td><td align="center">移除样式</td><td align="center">从所有匹配的元素中删除全部或者指定的类</td></tr><tr><td align="center">toggleClass(class)</td><td align="center">切换样式</td><td align="center">判断指定类是否存在，存在则删除，不存在则添加</td></tr><tr><td align="center">hasClass(class)</td><td align="center">判断样式</td><td align="center">判断元素是否具有class样式</td></tr></tbody></table><h2 id="折叠菜单"><a href="#折叠菜单" class="headerlink" title="折叠菜单"></a>折叠菜单</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;jquery-3.4.1.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">ul</span>&#123;<span class="attribute">list-style</span>:none;<span class="attribute">padding</span>:<span class="number">0</span>;<span class="attribute">margin</span>:<span class="number">0</span>&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">div</span>&#123;<span class="attribute">width</span>:<span class="number">150px</span>;<span class="attribute">border</span>:<span class="number">1px</span> solid <span class="number">#515E7B</span>;<span class="attribute">margin</span>:<span class="number">10px</span>;&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">div</span> <span class="selector-tag">li</span>&#123;<span class="attribute">background</span>:<span class="number">#515E7B</span>;<span class="attribute">border-bottom</span>:<span class="number">1px</span> solid <span class="number">#fff</span>;&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">div</span> <span class="selector-tag">li</span> <span class="selector-tag">a</span>&#123;<span class="attribute">text-decoration</span>:none;<span class="attribute">color</span>:<span class="number">#fff</span>;<span class="attribute">font-size</span>:<span class="number">16px</span>;<span class="attribute">height</span>:<span class="number">40px</span>;<span class="attribute">line-height</span>:<span class="number">40px</span>;<span class="attribute">padding-left</span>:<span class="number">10px</span>;&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">div</span> <span class="selector-tag">li</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span>&#123;<span class="attribute">text-decoration</span>:underline;&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-class">.wrap</span> &#123;<span class="attribute">width</span>:<span class="number">150px</span>;<span class="attribute">display</span>:none;&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-class">.wrap</span> <span class="selector-tag">li</span>&#123;<span class="attribute">background</span>: <span class="number">#fff</span>;<span class="attribute">margin</span>: <span class="number">0</span>;&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-class">.wrap</span> <span class="selector-tag">li</span> <span class="selector-tag">a</span>&#123;<span class="attribute">color</span>:<span class="number">#3B475F</span>;<span class="attribute">font-size</span>:<span class="number">12px</span>;&#125;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;fold&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>信息管理<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;wrap&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>未读信息<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>已读信息<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>信息列表<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>商品管理<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;wrap&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>商品添加<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>商品列表<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>商品分类<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>用户管理<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;wrap&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>权限设置<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>用户列表<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>重置密码<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 默认第一个显示：css--display:block</span></span></span><br><span class="line"><span class="javascript">        $(<span class="string">&quot;.wrap:first&quot;</span>).css(<span class="string">&#x27;display&#x27;</span>,<span class="string">&#x27;block&#x27;</span>);</span></span><br><span class="line"><span class="javascript">        <span class="comment">//添加点击事件，当前显示,其它隐藏</span></span></span><br><span class="line"><span class="javascript">        $(<span class="string">&quot;#fold&gt;ul&gt;li&quot;</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;   <span class="comment">//无需遍历，直接添加事件</span></span></span><br><span class="line"><span class="javascript">            $(<span class="built_in">this</span>).siblings(<span class="string">&#x27;li&#x27;</span>).find(<span class="string">&#x27;.wrap&#x27;</span>).css(&#123;<span class="attr">display</span>:<span class="string">&#x27;none&#x27;</span>&#125;);</span></span><br><span class="line"><span class="javascript">            $(<span class="built_in">this</span>).find(<span class="string">&#x27;.wrap&#x27;</span>).css(&#123;<span class="attr">display</span>:<span class="string">&#x27;block&#x27;</span>&#125;);</span></span><br><span class="line">            &#125;</span><br><span class="line">        );</span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/25/91b2836348482ddd0439b8c1de7080b9.png"></p><h1 id="DOM节点操作"><a href="#DOM节点操作" class="headerlink" title="DOM节点操作"></a>DOM节点操作</h1><h2 id="节点追加"><a href="#节点追加" class="headerlink" title="节点追加"></a>节点追加</h2><p>content是一段字符串形式的HTML代码<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/25/608d27904a43f74dec06c6a54354296e.png"></p><blockquote><p>父子节点添加是在匹配到的元素内部进行，兄弟节点是在匹配的元素外部进行。</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">//父子节点</span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>hello&gt;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">$(&#x27;p&#x27;).append(&#x27;<span class="tag">&lt;<span class="name">b</span>&gt;</span>append<span class="tag">&lt;/<span class="name">b</span>&gt;</span>&#x27;);</span><br><span class="line">//添加在结束标签之前</span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>hello<span class="tag">&lt;<span class="name">b</span>&gt;</span>append<span class="tag">&lt;/<span class="name">b</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">$(&#x27;p&#x27;).prepend(&#x27;<span class="tag">&lt;<span class="name">b</span>&gt;</span>append<span class="tag">&lt;/<span class="name">b</span>&gt;</span>&#x27;);</span><br><span class="line">//添加在开始标签之后</span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">b</span>&gt;</span><span class="tag">&lt;<span class="name">append</span>&gt;</span><span class="tag">&lt;/<span class="name">b</span>&gt;</span>hello<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">//兄弟节点</span><br><span class="line">$(&#x27;p&#x27;).after(&#x27;<span class="tag">&lt;<span class="name">b</span>&gt;</span>didi<span class="tag">&lt;/<span class="name">b</span>&gt;</span>&#x27;);</span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>hello<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">b</span>&gt;</span>didi<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">$(&#x27;p&#x27;).before(&#x27;<span class="tag">&lt;<span class="name">b</span>&gt;</span>didi<span class="tag">&lt;/<span class="name">b</span>&gt;</span>&#x27;);</span><br><span class="line"><span class="tag">&lt;<span class="name">b</span>&gt;</span>didi<span class="tag">&lt;/<span class="name">b</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>hello&gt;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/25/3f67b7eb565d49fc1270c7406fb57cb1.png"></p><h2 id="节点替换"><a href="#节点替换" class="headerlink" title="节点替换"></a>节点替换</h2><table><thead><tr><th align="center">语法</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">replaceWith(content)</td><td align="center">将所有匹配的元素替换成指定的HTML或DOM元素</td></tr><tr><td align="center">replaceAll(selector)</td><td align="center">用匹配的元素替换掉所有selector匹配到的元素</td></tr></tbody></table><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>hello<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>world<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="handlebars"><span class="xml">        // $(&#x27;p:first&#x27;).replaceWith(&#x27;<span class="tag">&lt;<span class="name">p</span>&gt;</span>你好<span class="tag">&lt;/<span class="name">p</span>&gt;</span>&#x27;);</span></span></span><br><span class="line"><span class="handlebars"><span class="xml">        // $(&#x27;p:eq(1)&#x27;).replaceWith(&#x27;<span class="tag">&lt;<span class="name">p</span>&gt;</span>世界<span class="tag">&lt;/<span class="name">p</span>&gt;</span>&#x27;);</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">        $(<span class="string">&#x27;&lt;p&gt;你好&lt;/p&gt;&#x27;</span>).replaceAll($(<span class="string">&#x27;p:first&#x27;</span>));</span></span><br><span class="line"><span class="javascript">        $(<span class="string">&#x27;&lt;p&gt;世界&lt;/p&gt;&#x27;</span>).replaceAll($(<span class="string">&#x27;p:eq(1)&#x27;</span>));</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="节点删除"><a href="#节点删除" class="headerlink" title="节点删除"></a>节点删除</h2><table><thead><tr><th align="center">语法</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">empty()</td><td align="center">清空元素的内容，但不删除元素本身</td></tr><tr><td align="center">remove()</td><td align="center">清空元素的内容，并删除元素本身</td></tr></tbody></table><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">li</span>&gt;</span>1111<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">li</span>&gt;</span>2222<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">li</span>&gt;</span>3333<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">li</span>&gt;</span>4444<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">       <span class="comment">//移除第一个节点的内容</span></span></span><br><span class="line"><span class="javascript">       $(<span class="string">&#x27;li:first&#x27;</span>).empty();</span></span><br><span class="line"><span class="javascript">       <span class="comment">//移除第二个元素的内容及元素本身</span></span></span><br><span class="line"><span class="javascript">       $(<span class="string">&#x27;li:eq(1)&#x27;</span>).remove();</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/25/be846db6a9a21c2aa000b70fc203b348.png"></p><h2 id="节点复制"><a href="#节点复制" class="headerlink" title="节点复制"></a>节点复制</h2><table><thead><tr><th align="center">语法</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">clone([false])</td><td align="center">复制匹配的元素，默认参数为false</td></tr><tr><td align="center">clone(true)</td><td align="center">参数设置为true时，复制元素的所有事件处理</td></tr></tbody></table><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">li</span>&gt;</span>1111<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">li</span>&gt;</span>2222<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">li</span>&gt;</span>3333<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">li</span>&gt;</span>4444<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">       $(<span class="string">&#x27;ul&#x27;</span>).clone().appendTo($(<span class="string">&#x27;body&#x27;</span>));</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/25/089e1fb74bc937a7141481d94270ac65.png"></p><h2 id="左移与右移"><a href="#左移与右移" class="headerlink" title="左移与右移"></a>左移与右移</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>左移与右移<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">select</span>&#123;<span class="attribute">width</span>:<span class="number">100px</span>;<span class="attribute">height</span>:<span class="number">150px</span>&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">input</span><span class="selector-attr">[type=button]</span>&#123;<span class="attribute">width</span>:<span class="number">50px</span>&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-id">#opt</span>&#123;<span class="attribute">margin</span>:<span class="number">90px</span> <span class="number">10px</span> <span class="number">0</span>&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-class">.box</span>&#123;<span class="attribute">width</span>:<span class="number">80%</span>;<span class="attribute">margin</span>:<span class="number">0</span> auto;<span class="attribute">background-color</span>:<span class="number">#999999</span>&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-class">.box</span> <span class="selector-tag">div</span>&#123;<span class="attribute">float</span>:left&#125;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;left&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>可选项<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">select</span> <span class="attr">multiple</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">option</span>&gt;</span>添加<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">option</span>&gt;</span>移动<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">option</span>&gt;</span>修改<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">option</span>&gt;</span>查询<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">option</span>&gt;</span>打印<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">option</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;opt&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;toRight&quot;</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;&gt;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;toLeft&quot;</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;&lt;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;toAllRight&quot;</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;&gt;&gt;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;toAllLeft&quot;</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;&lt;&lt;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;right&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>已选项<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">select</span> <span class="attr">multiple</span>=<span class="string">&quot;multiple&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;jquery-3.4.1.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">      <span class="comment">// 获取按钮添加单击事件，获取第一个下拉框中被选中的option添加到第二个下拉框</span></span></span><br><span class="line"><span class="javascript">      $(<span class="string">&#x27;#toRight&#x27;</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;       <span class="comment">// 右移</span></span></span><br><span class="line"><span class="javascript">        $(<span class="string">&#x27;#right&gt;select&#x27;</span>).append($(<span class="string">&#x27;#left&gt;select&gt;option:selected&#x27;</span>));</span></span><br><span class="line">      &#125;);</span><br><span class="line"><span class="javascript">      $(<span class="string">&#x27;#toLeft&#x27;</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;        <span class="comment">// 左移</span></span></span><br><span class="line"><span class="javascript">        $(<span class="string">&#x27;#left&gt;select&#x27;</span>).append($(<span class="string">&#x27;#right&gt;select&gt;option:selected&#x27;</span>));</span></span><br><span class="line">      &#125;);</span><br><span class="line"><span class="javascript">      $(<span class="string">&#x27;#toAllRight&#x27;</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;    <span class="comment">// 全部右移</span></span></span><br><span class="line"><span class="javascript">        $(<span class="string">&#x27;#right&gt;select&#x27;</span>).append($(<span class="string">&#x27;#left&gt;select&gt;option&#x27;</span>));</span></span><br><span class="line">      &#125;);</span><br><span class="line"><span class="javascript">      $(<span class="string">&#x27;#toAllLeft&#x27;</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;     <span class="comment">// 全部左移</span></span></span><br><span class="line"><span class="javascript">        $(<span class="string">&#x27;#left&gt;select&#x27;</span>).append($(<span class="string">&#x27;#right&gt;select&gt;option&#x27;</span>));</span></span><br><span class="line">      &#125;);</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/25/c8e2b69a10be668bdb5a127790ea6062.png"></p><h1 id="事件操作"><a href="#事件操作" class="headerlink" title="事件操作"></a>事件操作</h1><ul><li>标签中通过属性设置事件，每个属性都由一个on和事件名组成。例如，点击事件对应的属性为onclick。</li><li>在jQuery中则可直接使用其提供的与事件类型同名的方法。例如，点击事件对应的方法为click()。</li><li>这些事件方法允许重复绑定处理程序，按照绑定顺序依次执行。</li></ul><h2 id="表单事件"><a href="#表单事件" class="headerlink" title="表单事件"></a>表单事件</h2><table><thead><tr><th align="center">方法</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">blur()</td><td align="center">当元素失去焦点时触发</td></tr><tr><td align="center">focus()</td><td align="center">当元素获得焦点时触发</td></tr><tr><td align="center">change()</td><td align="center">当元素的值发生改变时触发</td></tr><tr><td align="center">select()</td><td align="center">当文本框（包括&lt;input&gt;和&lt;textarea&gt;）中的文本被选中时触发</td></tr><tr><td align="center">submit()</td><td align="center">表单提交时触发</td></tr></tbody></table><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;</span> <span class="meta-string">&quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.w3.org/1999/xhtml&quot;</span> <span class="attr">xml:lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Type&quot;</span> <span class="attr">content</span>=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;jquery-3.4.1.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>用户名称：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;uname&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>电子邮箱：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;email&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>手机号码：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;tel&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        $(<span class="string">&#x27;input[type=text]&#x27;</span>).focus(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> tips = $(<span class="string">&#x27;&lt;span&gt;&lt;/span&gt;&#x27;</span>);</span></span><br><span class="line"><span class="javascript">            tips.html(<span class="string">&#x27;请按要求输入&#x27;</span>);</span></span><br><span class="line"><span class="javascript">            $(<span class="string">&#x27;input:focus&#x27;</span>).after(tips);</span></span><br><span class="line">        &#125;);</span><br><span class="line"><span class="javascript">        $(<span class="string">&#x27;input[type=text]&#x27;</span>).blur(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            $(<span class="built_in">this</span>).next().remove();</span></span><br><span class="line">        &#125;);</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/25/84ff5255a8425a2dd3860eb8d6f253cf.png"></p><h2 id="键盘事件"><a href="#键盘事件" class="headerlink" title="键盘事件"></a>键盘事件</h2><table><thead><tr><th align="center">方法</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">keydown()</td><td align="center">键盘按键被按下时触发</td></tr><tr><td align="center">keyup()</td><td align="center">键盘按键弹起时触发</td></tr><tr><td align="center">keypress()</td><td align="center">键盘按键（Shift等非字符键除外）被按下时触发</td></tr></tbody></table><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>左移与右移<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">      <span class="selector-class">.boxes</span>&#123;<span class="attribute">width</span>:<span class="number">10px</span>;<span class="attribute">height</span>:<span class="number">10px</span>;<span class="attribute">background-color</span>:red;&#125;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&#x27;boxes&#x27;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;jquery-3.4.1.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">       $(<span class="built_in">document</span>).</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">       keydown(<span class="function"><span class="keyword">function</span>(<span class="params">event</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">       <span class="comment">//获取按键码(37、38、39、40)</span></span></span><br><span class="line"><span class="javascript">           <span class="keyword">var</span> opt = event.which;</span></span><br><span class="line"><span class="javascript">           <span class="keyword">var</span> item = $(<span class="string">&#x27;.boxes&#x27;</span>);</span></span><br><span class="line"><span class="javascript">           <span class="comment">//获取元素距离文档的位置</span></span></span><br><span class="line"><span class="javascript">           <span class="keyword">var</span> left = item.offset().left;</span></span><br><span class="line"><span class="javascript">           <span class="keyword">var</span> top = item.offset().top;;</span></span><br><span class="line"><span class="javascript">           <span class="built_in">console</span>.log(opt);</span></span><br><span class="line"><span class="javascript">           <span class="function"><span class="title">switch</span>(<span class="params">opt</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">case</span> <span class="number">37</span>:item.offset(&#123;<span class="attr">left</span>:left-<span class="number">1</span>,<span class="attr">top</span>:top&#125;);<span class="keyword">break</span>;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">case</span> <span class="number">38</span>:item.offset(&#123;<span class="attr">left</span>:left,<span class="attr">top</span>:top-<span class="number">1</span>&#125;);<span class="keyword">break</span>;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">case</span> <span class="number">39</span>:item.offset(&#123;<span class="attr">left</span>:left+<span class="number">1</span>,<span class="attr">top</span>:top&#125;);<span class="keyword">break</span>;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">case</span> <span class="number">40</span>:item.offset(&#123;<span class="attr">left</span>:left,<span class="attr">top</span>:top+<span class="number">1</span>&#125;);<span class="keyword">break</span>;</span></span><br><span class="line">           &#125;</span><br><span class="line">       &#125;);</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/25/3355318cfc0459182e0575a1c5acd4c6.png"></p><h2 id="鼠标事件"><a href="#鼠标事件" class="headerlink" title="鼠标事件"></a>鼠标事件</h2><table><thead><tr><th align="center">方法</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">mouseover()</td><td align="center">当鼠标移入对象时触发</td></tr><tr><td align="center">mouseout()</td><td align="center">鼠标从元素上离开时触发</td></tr><tr><td align="center">click()</td><td align="center">当单击元素时触发</td></tr><tr><td align="center">dbclick()</td><td align="center">当双击元素时触发</td></tr><tr><td align="center">mousedown()</td><td align="center">当鼠标指针移动到元素上方，并按下鼠标按键时触发</td></tr><tr><td align="center">mouseup()</td><td align="center">当在元素上放松鼠标按钮时，会被触发</td></tr></tbody></table><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">/*</span><br><span class="line">鼠标移入时，为本文添加背景颜色；</span><br><span class="line">鼠标移出时，为文本移除背景颜色。</span><br><span class="line">鼠标单击时，打印单击位置。</span><br><span class="line"></span><br><span class="line">*/</span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>左移与右移<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">      <span class="selector-class">.boxes</span>&#123;<span class="attribute">width</span>:<span class="number">10px</span>;<span class="attribute">height</span>:<span class="number">10px</span>;<span class="attribute">background-color</span>:red;&#125;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;hit&quot;</span>&gt;</span>jQuery介绍<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;jquery-3.4.1.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">       $(<span class="string">&#x27;.hit&#x27;</span>).mouseover(<span class="function"><span class="keyword">function</span>(<span class="params">event</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">           $(<span class="built_in">this</span>).css(<span class="string">&#x27;background-color&#x27;</span>,<span class="string">&#x27;green&#x27;</span>);</span></span><br><span class="line"></span><br><span class="line">       &#125;);</span><br><span class="line"><span class="javascript">       $(<span class="string">&#x27;.hit&#x27;</span>).mouseout(<span class="function"><span class="keyword">function</span>(<span class="params">event</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">           $(<span class="built_in">this</span>).css(<span class="string">&#x27;background-color&#x27;</span>,<span class="string">&#x27;&#x27;</span>);</span></span><br><span class="line">       &#125;);</span><br><span class="line"><span class="javascript">       $(<span class="string">&#x27;.hit&#x27;</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params">event</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">           <span class="built_in">console</span>.log(event.pageY);</span></span><br><span class="line"></span><br><span class="line">       &#125;);</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="页面加载事件"><a href="#页面加载事件" class="headerlink" title="页面加载事件"></a>页面加载事件</h2><table><thead><tr><th align="center">类比选项</th><th align="center">window.onload</th><th align="center">$(document).ready()</th></tr></thead><tbody><tr><td align="center">执行时机</td><td align="center">必须等待网页中的所有内容加载完成后(包括外部元素，如图片)才能执行</td><td align="center">网页中的所有DOM结构绘制完成后就执行（可能关联内容并未加载完成）</td></tr><tr><td align="center">编写个数</td><td align="center">不能同时编写多个</td><td align="center">能够同时编写多个</td></tr><tr><td align="center">简化写法</td><td align="center">无</td><td align="center">$()</td></tr></tbody></table><p>jQuery中的页面加载事件方法有3种语法形式，具体如下。</p><pre><code>    $(document).ready(function() &#123;  &#125;);         // 语法方式1    $().ready(function() &#123;  &#125;);             // 语法方式2    $(function() &#123;  &#125;);                 // 语法方式3</code></pre><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>页面加载<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;jquery-3.4.1.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">          $(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">              alert(<span class="string">&quot;欢迎光临&quot;</span>);</span></span><br><span class="line">          &#125;)</span><br><span class="line">      <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/25/2776a6a8b120b78267a95c9aa433c8f5.png"></p><h2 id="事件绑定与切换"><a href="#事件绑定与切换" class="headerlink" title="事件绑定与切换"></a>事件绑定与切换</h2><table><thead><tr><th align="center">方法</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">on(events,function)</td><td align="center">在匹配元素上绑定一个或多个事件处理函数</td></tr><tr><td align="center">off(events)</td><td align="center">在匹配元素上移除一个或多个事件处理函数</td></tr><tr><td align="center">one(events,function)</td><td align="center">为每个匹配元素的事件绑定一次性的处理函数</td></tr><tr><td align="center">hover([over,]out)</td><td align="center">元素鼠标移入与移出事件切换</td></tr></tbody></table><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>页面加载<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;jquery-3.4.1.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">div</span>&gt;</span>文本<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">          $(<span class="string">&#x27;div&#x27;</span>).on(<span class="string">&#x27;click&#x27;</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">              <span class="built_in">console</span>.log(<span class="string">&#x27;触发点击事件&#x27;</span>);</span></span><br><span class="line"><span class="javascript">              $(<span class="string">&#x27;div&#x27;</span>).off(<span class="string">&#x27;click&#x27;</span>);</span></span><br><span class="line">          &#125;)</span><br><span class="line"><span class="javascript">          $(<span class="string">&#x27;div&#x27;</span>).on(&#123;</span></span><br><span class="line"><span class="javascript">              mouseover:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">&#x27;鼠标移入&#x27;</span>);</span></span><br><span class="line">              &#125;,</span><br><span class="line"><span class="javascript">              mouseout:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">&#x27;鼠标移出&#x27;</span>);</span></span><br><span class="line">              &#125;</span><br><span class="line">          &#125;)</span><br><span class="line">       <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/25/67f8db8f8d37d276874a7977b13105aa.png"></p><h1 id="手风琴效果"><a href="#手风琴效果" class="headerlink" title="手风琴效果"></a>手风琴效果</h1><ul><li><p>页面组成<br>  5张图片<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/25/b121fdc5918a1143cbcf60403f0c6bed.png"></p></li><li><p>动态效果：<br>  鼠标移入图片时，该图片完整显示；鼠标移出时，该图片回复默认大小。overflow:hidden多余隐藏。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/25/1cc77ff4965b51597b5e50718b693c10.png"></p></li><li><p>图片素材</p></li></ul><p>1.jpg<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/25/92f6b154568bc50a88a2bb755847c57f.png"><br>2.jpg<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/25/470f55c119b2c75fc21c898ee7fd470f.png"><br>3.jpg<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/25/744f096e12d235ff3feaaae3758cd653.png"><br>4.jpg<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/25/5547663bea41be8ae50f6bcd4e152e26.png"><br>5.jpg<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/25/046dc5f515f8200717a5f6062f617146.png"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>手风琴效果<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">ul</span>&#123;<span class="attribute">list-style</span>:none;<span class="attribute">margin</span>:<span class="number">0</span>;<span class="attribute">padding</span>:<span class="number">0</span>&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">div</span>&#123;<span class="attribute">width</span>:<span class="number">1200px</span>;<span class="attribute">height</span>:<span class="number">400px</span>;<span class="attribute">margin</span>:<span class="number">50px</span> auto;<span class="attribute">overflow</span>:hidden&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">div</span> <span class="selector-tag">li</span>&#123;<span class="attribute">width</span>:<span class="number">240px</span>;<span class="attribute">height</span>:<span class="number">400px</span>;<span class="attribute">float</span>:left&#125;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;jquery-3.4.1.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;images/1.jpg&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;images/2.jpg&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;images/3.jpg&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;images/4.jpg&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;images/5.jpg&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        $(<span class="string">&#x27;div&gt;ul&gt;li&#x27;</span>).on(&#123;</span></span><br><span class="line"><span class="javascript">            mouseover:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">              $(<span class="built_in">this</span>).siblings(<span class="string">&#x27;li&#x27;</span>).css(<span class="string">&#x27;width&#x27;</span>,<span class="string">&#x27;60.5px&#x27;</span>);</span></span><br><span class="line"><span class="javascript">              $(<span class="built_in">this</span>).css(<span class="string">&#x27;width&#x27;</span>,<span class="string">&#x27;958px&#x27;</span>);</span></span><br><span class="line">            &#125;,</span><br><span class="line"><span class="javascript">            mouseout:<span class="function"><span class="keyword">function</span>(<span class="params">event</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">              $(<span class="string">&#x27;#box&gt;ul&gt;li&#x27;</span>).css(<span class="string">&#x27;width&#x27;</span>,<span class="string">&#x27;240px&#x27;</span>);</span></span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/25/cf52d7fed1bb639bfa23b09f5dc42f26.png"></p><h1 id="动画特效"><a href="#动画特效" class="headerlink" title="动画特效"></a>动画特效</h1><p>jQuery提供了两种增加动画特效的方法</p><ol><li>内置的动画方法</li><li>提供<code>animate()</code>方法自定义动画</li></ol><h2 id="常用内置动画"><a href="#常用内置动画" class="headerlink" title="常用内置动画"></a>常用内置动画</h2><ul><li><strong>基本特效</strong></li></ul><table><thead><tr><th align="center">方法</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">show([speed,[easing],[fn]])</td><td align="center">显示匹配元素</td></tr><tr><td align="center">hide([speed,[easing],[fn]])</td><td align="center">隐藏匹配元素</td></tr><tr><td align="center">toggle([speed],[easing],[ fn])</td><td align="center">元素显示与隐藏切换</td></tr></tbody></table><ol><li><code>speed</code> ：动画的速度（持续时长），如1000（毫秒），或者预定的3种速度(slow、fast、normal)</li><li><code>easing</code>：切换效果，默认为swing，另有linear</li><li><code>fn</code>    ：动画完成时执行的函数</li></ol><blockquote><p>linear方法提供了一个稳定的动画，以使得动画的每个步骤都是相同的(例如，如果要让一个元素以逐渐变化的方式穿过屏幕，每一步的距离和前一步都是相同的)。</p></blockquote><blockquote><p>swing要更加动态一些，随着动画的开始变得更加快一些，然后再慢下来。swing是一个常用设置，因此，如果没有指定任何缓动，jQuery会使用swing方法。 </p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;</span> <span class="meta-string">&quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.w3.org/1999/xhtml&quot;</span> <span class="attr">xml:lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Type&quot;</span> <span class="attr">content</span>=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">media</span>=<span class="string">&quot;screen&quot;</span>&gt;</span></span><br><span class="line">      div&#123;</span><br><span class="line">        width: 200px;</span><br><span class="line"><span class="css">        <span class="selector-tag">height</span><span class="selector-pseudo">:200px</span>;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">border</span><span class="selector-pseudo">:1px</span> <span class="selector-tag">solid</span> <span class="selector-tag">red</span>;</span></span><br><span class="line">      &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span></span></span><br><span class="line"><span class="tag">      <span class="attr">src</span>=<span class="string">&quot;jquery-3.4.1.js&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;images/1.jpg&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">      fefwefew</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="comment">//1.基本特效</span></span></span><br><span class="line"><span class="javascript">        $(<span class="string">&#x27;img&#x27;</span>).hide(<span class="number">5000</span>);</span></span><br><span class="line"><span class="javascript">        $(<span class="string">&#x27;img&#x27;</span>).show(<span class="number">5000</span>);</span></span><br><span class="line"><span class="javascript">        $(<span class="string">&#x27;img&#x27;</span>).toggle(<span class="number">5000</span>);</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/30/b23cb4c356a35318d3c36cd00de42b63.png"></p><ul><li><strong>滑动特效</strong></li></ul><table><thead><tr><th align="center">方法</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">slideDown([speed],[easing],[ fn])</td><td align="center">使用滑动效果，显示隐藏的被选元素（向下）</td></tr><tr><td align="center">slideUp([speed,[easing],[ fn]])</td><td align="center">使用滑动效果，显示隐藏的被选元素（向上）</td></tr><tr><td align="center">slideToggle([speed],[easing],[ fn])</td><td align="center">使用滑动效果，显示隐藏的被选元素（向下)</td></tr></tbody></table><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Type&quot;</span> <span class="attr">content</span>=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span></span></span><br><span class="line"><span class="tag">          <span class="attr">src</span>=<span class="string">&quot;jquery-3.4.1.js&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">div</span><span class="selector-class">.panel</span>,<span class="selector-tag">p</span><span class="selector-class">.flip</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">margin</span><span class="selector-pseudo">:0px</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">padding</span><span class="selector-pseudo">:5px</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">text-align</span><span class="selector-pseudo">:center</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">background</span>:<span class="selector-id">#e5eecc</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">border</span><span class="selector-pseudo">:solid</span> 1<span class="selector-tag">px</span> <span class="selector-id">#c3c3c3</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-tag">div</span><span class="selector-class">.panel</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">height</span><span class="selector-pseudo">:120px</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">display</span><span class="selector-pseudo">:none</span>;  <span class="comment">/*如果此元素不隐藏，则不能滑动--视觉效果滑动的是flip，其实滑动的是。panel*/</span></span></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;panel&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>W3School - 领先的 Web 技术教程站点<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>在 W3School，你可以找到你所需要的所有网站建设教程。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;flip&quot;</span>&gt;</span>请点击这里<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="comment">// $(document).ready(function()&#123;</span></span></span><br><span class="line"><span class="javascript">          $(<span class="string">&quot;.flip&quot;</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">              $(<span class="string">&quot;.panel&quot;</span>).slideDown(<span class="string">&quot;slow&quot;</span>);</span></span><br><span class="line">          &#125;);</span><br><span class="line"><span class="javascript">        <span class="comment">// &#125;);</span></span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/30/400422ae2228282d3fd51a3eb6bd290a.png"></p><ul><li><strong>淡入淡出特效</strong></li></ul><table><thead><tr><th align="center">方法</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">fadeIn()</td><td align="center">淡入显示匹配元素</td></tr><tr><td align="center">fadeOut()</td><td align="center">淡出隐藏匹配元素</td></tr><tr><td align="center">fadeToggle()</td><td align="center">在fadeIn()和fadeOut()两种效果间的切换</td></tr></tbody></table><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--设置编码--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Type&quot;</span> <span class="attr">content</span>=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span></span></span><br><span class="line"><span class="tag">      <span class="attr">src</span>=<span class="string">&quot;jquery-3.4.1.js&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">  $(<span class="string">&quot;button&quot;</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">    $(<span class="string">&quot;#div1&quot;</span>).fadeIn();</span></span><br><span class="line"><span class="javascript">    $(<span class="string">&quot;#div2&quot;</span>).fadeIn(<span class="string">&quot;slow&quot;</span>);</span></span><br><span class="line"><span class="javascript">    $(<span class="string">&quot;#div3&quot;</span>).fadeIn(<span class="number">3000</span>);</span></span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>演示带有不同参数的 fadeIn() 方法。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span>&gt;</span>点击这里，使三个矩形淡入<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;div1&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width:80px;height:80px;display:none;background-color:red;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;div2&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width:80px;height:80px;display:none;background-color:green;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;div3&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width:80px;height:80px;display:none;background-color:blue;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/30/609da2f27cd557c4025af99ecc3ac40f.png"></p><h2 id="自定义动画"><a href="#自定义动画" class="headerlink" title="自定义动画"></a>自定义动画</h2><p>除了内置动画，用户还可以根据开发需求自定义动画效果。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$(&#x27;div&#x27;).animate(</span><br><span class="line">&#123;width:&#x27;100px&#x27;,height:&#x27;100px&#x27;&#125;,</span><br><span class="line">3000,</span><br><span class="line">&#x27;swing&#x27;,</span><br><span class="line">function()&#123;&#125;</span><br><span class="line">);</span><br></pre></td></tr></table></figure><ul><li>样式名称采用驼峰形式，如maginLeft</li><li>无法识别颜色属性，如color、bordercolor、backgroundcolor</li><li>鼓励通过$.speed()设置动画效果（时长和缓动）</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var params=&#123;width:&#x27;100px&#x27;,height:&#x27;100px&#x27;&#125;;</span><br><span class="line">var settings=$.speed(3000,&#x27;swing&#x27;);</span><br><span class="line">$(&#x27;div&#x27;).animate(params,setting);```</span><br></pre></td></tr></table></figure><ul><li>动画队列</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"> function runQue() &#123;</span><br><span class="line">div.show(&#x27;slow&#x27;)</span><br><span class="line">.animate(&#123;left: &#x27;+=200&#x27;&#125;, 2000)   </span><br><span class="line">        .queue(function() &#123;</span><br><span class="line">        //弥补jquery不能识别颜色属性的缺陷</span><br><span class="line">        $(this).css(&#x27;background&#x27;, &#x27;green&#x27;).dequeue();</span><br><span class="line">        &#125;)</span><br><span class="line">        .animate(&#123;left: &#x27;-=200&#x27;&#125;, 1500)</span><br><span class="line">        //构成一个永不停止的动画的</span><br><span class="line">        .slideUp(&#x27;normal&#x27;, runQue);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th align="center">方自定义动画相关方法</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">animate(params[,speed][,easing][,fn])</td><td align="center">用于创建自定义动画的函数</td></tr><tr><td align="center">$.speed([speed][,settings])</td><td align="center">创建一个包含一组属性的对象用来定义自定义动画</td></tr><tr><td align="center">queue([queueName])</td><td align="center">显示被选元素上要执行的函数队列（入队）</td></tr><tr><td align="center">delay(speed[,queueName])</td><td align="center">设置一个延时来推迟执行队列中之后的项目</td></tr><tr><td align="center">clearQueue([queueName])</td><td align="center">从尚未运行的队列中移除所有项目</td></tr><tr><td align="center">dequeue([queueName])</td><td align="center">从队列移除下一个函数，然后执行函数（出队）</td></tr><tr><td align="center">finish([queueName])</td><td align="center">停止当前正在运行的动画，删除所有排队的动画，并完成匹配元素所有的动画</td></tr><tr><td align="center">stop([clearQueue][,jumpToEnd])</td><td align="center">停止所有在指定元素上正在运行的动画</td></tr></tbody></table><ol><li><code>params</code>：表示一组包含动画最终属性值的集合</li><li><code>settings</code>：是easing与fn组成的一个对象集合</li><li><code>queueName</code>：表示队列名称，默认值为fx(标准效果队列)</li><li><code>clearQueue</code>：布尔类型，默认为false，用于规定是否停止被选元素所有加入队列的动画</li><li><code>jumpToEnd</code>：布尔类型，默认为false，用于规定是否立即完成当前的动画</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Type&quot;</span> <span class="attr">content</span>=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span></span></span><br><span class="line"><span class="tag">          <span class="attr">src</span>=<span class="string">&quot;jquery-3.4.1.js&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">media</span>=<span class="string">&quot;screen&quot;</span>&gt;</span></span><br><span class="line">        div&#123;</span><br><span class="line">            background: red;</span><br><span class="line">            width: 0px;</span><br><span class="line">            height: 0px;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;btn&quot;</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;开始动画&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        $(<span class="string">&#x27;#btn&#x27;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="comment">//1. 直接调用animate，所有效果均作为参数</span></span></span><br><span class="line"><span class="javascript">            $(<span class="string">&#x27;div&#x27;</span>).animate(</span></span><br><span class="line"><span class="javascript">                &#123;<span class="attr">width</span>:<span class="string">&#x27;100px&#x27;</span>,<span class="attr">height</span>:<span class="string">&#x27;100px&#x27;</span>&#125;,</span></span><br><span class="line">                3000,</span><br><span class="line"><span class="javascript">                <span class="string">&#x27;swing&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;</span></span><br><span class="line">            );</span><br><span class="line"></span><br><span class="line"><span class="javascript">            <span class="comment">// 2. 单独设置参数</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">// var params = &#123;width:&#x27;100px&#x27;,height:&#x27;100px&#x27;&#125;;</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">// var settings = $.speed(3000,&#x27;swing&#x27;);</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">// $(&#x27;div&#x27;).animate(params,settings);</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">            <span class="comment">//3. 动画队列</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">// var div = $(&#x27;div&#x27;);    // 获取指定动画的元素</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">// div.css(&#123;width:&#x27;100px&#x27;,height:&#x27;100px&#x27;,display:&#x27;none&#x27;,position:&#x27;absolute&#x27;&#125;);       //初始状态设置</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">// runQue();              // 执行队列动画</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">// function runQue() &#123;</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//     div.show(&#x27;slow&#x27;)</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//        .animate(&#123;left: &#x27;+=200&#x27;&#125;, 2000)   //修改left，应设position为absolute</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//        .queue(function() &#123;</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//             $(this).css(&#x27;background&#x27;, &#x27;green&#x27;).dequeue();</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//         &#125;)</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//        .animate(&#123;left: &#x27;-=200&#x27;&#125;, 1500)</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//        .slideUp(&#x27;normal&#x27;, runQue);</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">// &#125;</span></span></span><br><span class="line">        &#125;);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="无缝轮播"><a href="#无缝轮播" class="headerlink" title="无缝轮播"></a>无缝轮播</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;</span> <span class="meta-string">&quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.w3.org/1999/xhtml&quot;</span> <span class="attr">xml:lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Type&quot;</span> <span class="attr">content</span>=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>无缝轮播图<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.banner</span>&#123;<span class="attribute">position</span>:relative;<span class="attribute">overflow</span>:hidden;</span></span><br><span class="line"><span class="css">          <span class="selector-tag">margin</span><span class="selector-pseudo">:100px</span> <span class="selector-tag">auto</span>;<span class="selector-tag">width</span><span class="selector-pseudo">:958px</span>;<span class="selector-tag">height</span><span class="selector-pseudo">:400px</span>;&#125;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.banner</span> <span class="selector-tag">ul</span>&#123;<span class="attribute">margin</span>:<span class="number">0</span>;<span class="attribute">padding</span>:<span class="number">0</span>;<span class="attribute">list-style</span>:none;&#125;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.hot</span>&#123;<span class="attribute">position</span>:absolute;<span class="attribute">top</span>:<span class="number">0</span>;<span class="attribute">left</span>:<span class="number">0</span>;&#125;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.hot</span> <span class="selector-tag">li</span>&#123;<span class="attribute">float</span>:left;&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.dot</span>&#123;<span class="attribute">position</span>:absolute;<span class="attribute">bottom</span>:<span class="number">10px</span>;<span class="attribute">width</span>:<span class="number">100%</span>;<span class="attribute">text-align</span>:center;<span class="attribute">font-size</span>:<span class="number">0</span>;&#125;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.dot</span> <span class="selector-tag">li</span>&#123;<span class="attribute">display</span>:inline-block;<span class="attribute">margin</span>:<span class="number">0</span> <span class="number">5px</span>;<span class="attribute">width</span>:<span class="number">15px</span>;<span class="attribute">height</span>:<span class="number">15px</span>;<span class="attribute">border-radius</span>:<span class="number">100%</span>;<span class="attribute">background</span>:<span class="built_in">rgba</span>(<span class="number">145</span>,<span class="number">144</span>,<span class="number">144</span>,.<span class="number">5</span>);<span class="attribute">cursor</span>:pointer;&#125;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.dot</span> <span class="selector-class">.on</span>&#123;<span class="attribute">background-color</span>:<span class="number">#fff</span>;&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="comment">/* 左右翻页箭头样式 */</span></span></span><br><span class="line"><span class="css">        <span class="selector-class">.arrow</span>&#123;<span class="attribute">display</span>:none;&#125;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.arrow</span> <span class="selector-tag">span</span>&#123;<span class="attribute">display</span>:block;<span class="attribute">width</span>:<span class="number">50px</span>;<span class="attribute">height</span>:<span class="number">100px</span>;<span class="attribute">background</span>:<span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,.<span class="number">6</span>);<span class="attribute">color</span>:<span class="number">#fff</span>;<span class="attribute">text-align</span>:center;<span class="attribute">font-size</span>:<span class="number">40px</span>;<span class="attribute">line-height</span>:<span class="number">100px</span>;<span class="attribute">cursor</span>:pointer;&#125;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.arrow</span> <span class="selector-class">.prev</span>&#123;<span class="attribute">position</span>:absolute;<span class="attribute">top</span>:<span class="number">50%</span>;<span class="attribute">left</span>:<span class="number">0</span>;<span class="attribute">margin-top</span>:-<span class="number">50px</span>;&#125;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.arrow</span> <span class="selector-class">.next</span>&#123;<span class="attribute">position</span>:absolute;<span class="attribute">top</span>:<span class="number">50%</span>;<span class="attribute">right</span>:<span class="number">0</span>;<span class="attribute">margin-top</span>:-<span class="number">50px</span>;&#125;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">script</span></span></span><br><span class="line"><span class="tag">          <span class="attr">src</span>=<span class="string">&quot;jquery-3.4.1.js&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;banner&quot;</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!--轮播图片--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;hot&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;images/1.jpg&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;images/2.jpg&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;images/3.jpg&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;images/4.jpg&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;images/5.jpg&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">&lt;!--小圆点--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;dot&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;on&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">&lt;!-- 左右翻页箭头--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;arrow&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;prev&quot;</span>&gt;</span><span class="symbol">&amp;lt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;next&quot;</span>&gt;</span><span class="symbol">&amp;gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">      <span class="comment">//1.初始工作</span></span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> i = <span class="number">0</span>;           <span class="comment">// 当前显示的图片索引</span></span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> timer = <span class="literal">null</span>;    <span class="comment">// 定时器</span></span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> delay = <span class="number">1000</span>;    <span class="comment">// 图片自动切换的间隔时间</span></span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> width = <span class="number">958</span>;     <span class="comment">// 每张图片的宽度</span></span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> speed = <span class="number">400</span>;     <span class="comment">// 动画时间</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">      <span class="comment">// 复制列表中的第一个图片，追加到列表最后，设置ul的宽度为图片张数 * 图片宽度</span></span></span><br><span class="line">  </span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> firstimg = $(<span class="string">&#x27;.hot li&#x27;</span>).first().clone();</span></span><br><span class="line"><span class="javascript">      $(<span class="string">&#x27;.hot&#x27;</span>).append(firstimg).width($(<span class="string">&#x27;.hot li&#x27;</span>).length * width);</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">      <span class="comment">// 设置周期计时器，实现图片自动切换</span></span></span><br><span class="line"><span class="javascript">      timer = <span class="built_in">setInterval</span>(imgChange, delay);</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">       <span class="comment">//2. 自动切换图片</span></span></span><br><span class="line"><span class="javascript">      <span class="function"><span class="keyword">function</span> <span class="title">imgChange</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line">        ++i;</span><br><span class="line"><span class="javascript">        isCrack();  <span class="comment">//实现无缝轮播</span></span></span><br><span class="line"><span class="javascript">        dotChange();  <span class="comment">//自动切换对应的圆点样式</span></span></span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line"><span class="javascript">      <span class="function"><span class="keyword">function</span> <span class="title">isCrack</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">if</span> (i == $(<span class="string">&#x27;.hot li&#x27;</span>).length) &#123;</span></span><br><span class="line">          i = 1;</span><br><span class="line"><span class="javascript">          $(<span class="string">&#x27;.hot&#x27;</span>).css(&#123;<span class="attr">left</span>: <span class="number">0</span>&#125;);</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="javascript">        $(<span class="string">&#x27;.hot&#x27;</span>).stop().animate(&#123;<span class="attr">left</span>: -i * width&#125;, speed);</span></span><br><span class="line">      &#125;</span><br><span class="line"><span class="javascript">      <span class="comment">// 3.自动切换对应的圆点</span></span></span><br><span class="line"><span class="javascript">      <span class="function"><span class="keyword">function</span> <span class="title">dotChange</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">if</span> (i == $(<span class="string">&#x27;.hot li&#x27;</span>).length - <span class="number">1</span>) &#123;</span></span><br><span class="line"><span class="javascript">          $(<span class="string">&#x27;.dot li&#x27;</span>).eq(<span class="number">0</span>).addClass(<span class="string">&#x27;on&#x27;</span>).</span></span><br><span class="line"><span class="javascript">               siblings().removeClass(<span class="string">&#x27;on&#x27;</span>);</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="javascript">        <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">          $(<span class="string">&#x27;.dot li&#x27;</span>).eq(i).addClass(<span class="string">&#x27;on&#x27;</span>).</span></span><br><span class="line"><span class="javascript">               siblings().removeClass(<span class="string">&#x27;on&#x27;</span>);</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line"><span class="javascript">      <span class="comment">// 4. 设置左右切换的箭头显示和隐藏</span></span></span><br><span class="line"><span class="javascript">      $(<span class="string">&#x27;.banner&#x27;</span>).hover(</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">           $(<span class="string">&#x27;.arrow&#x27;</span>).show();</span></span><br><span class="line">        &#125;,</span><br><span class="line"><span class="javascript">        <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">           $(<span class="string">&#x27;.arrow&#x27;</span>).hide();</span></span><br><span class="line">        &#125;);</span><br><span class="line"><span class="javascript">        <span class="comment">//  鼠标移入，暂停自动播放，移出，开始自动播放</span></span></span><br><span class="line"><span class="javascript">        $(<span class="string">&#x27;.banner&#x27;</span>).hover(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">          <span class="built_in">clearInterval</span>(timer);</span></span><br><span class="line"><span class="javascript">        &#125;, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">          timer = <span class="built_in">setInterval</span>(imgChange, delay);</span></span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line"><span class="javascript">      <span class="comment">//5.设置右箭头的事件</span></span></span><br><span class="line"><span class="javascript">      $(<span class="string">&#x27;.next&#x27;</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line">          imgChange()</span><br><span class="line">      &#125;);</span><br><span class="line"><span class="javascript">      <span class="comment">//6.设置左箭头的事件</span></span></span><br><span class="line"><span class="javascript">      $(<span class="string">&#x27;.prev&#x27;</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line">        --i;</span><br><span class="line">        if (i == -1) &#123;</span><br><span class="line"><span class="javascript">          i = $(<span class="string">&#x27;.hot li&#x27;</span>).length - <span class="number">2</span>;</span></span><br><span class="line"><span class="javascript">          $(<span class="string">&#x27;.hot&#x27;</span>).css(&#123;<span class="attr">left</span>: -($(<span class="string">&#x27;.hot li&#x27;</span>).length - <span class="number">1</span>) * width&#125;);</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="javascript">        $(<span class="string">&#x27;.hot&#x27;</span>).stop().animate(&#123;<span class="attr">left</span>: -i * width&#125;, speed);</span></span><br><span class="line">        dotChange();</span><br><span class="line">      &#125;);</span><br><span class="line">   <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/30/96517f17aa403959789e9ce6cd54a26c.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;jQuery&quot;&gt;&lt;a href=&quot;#jQuery&quot; class=&quot;headerlink&quot; title=&quot;jQuery&quot;&gt;&lt;/a&gt;jQuery&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;基本概念&lt;ol&gt;
&lt;li&gt;jQuery：一款优秀的JavaScript框架库，封装了很多的Jav</summary>
      
    
    
    
    <category term="编程语言" scheme="http://xiaoliblog.cn/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    <category term="JavaScript" scheme="http://xiaoliblog.cn/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/JavaScript/"/>
    
    
    <category term="JavaScript" scheme="http://xiaoliblog.cn/tags/JavaScript/"/>
    
  </entry>
  
</feed>
