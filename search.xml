<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>前端三剑客🔗CSS美化</title>
      <link href="2021/01/20/%E5%89%8D%E7%AB%AF/HTML+CSS/%E5%89%8D%E7%AB%AF%E4%B8%89%E5%89%91%E5%AE%A2_CSS%E7%BE%8E%E5%8C%96/"/>
      <url>2021/01/20/%E5%89%8D%E7%AB%AF/HTML+CSS/%E5%89%8D%E7%AB%AF%E4%B8%89%E5%89%91%E5%AE%A2_CSS%E7%BE%8E%E5%8C%96/</url>
      
        <content type="html"><![CDATA[<h1 id="网页背景"><a href="#网页背景" class="headerlink" title="网页背景"></a>网页背景</h1><h2 id="背景颜色"><a href="#背景颜色" class="headerlink" title="背景颜色"></a>背景颜色</h2><p>一般情况下元素背景色是<code>tansparent</code>(透明)</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">background-color:transparent | color颜色值</span><br></pre></td></tr></table></figure><h2 id="背景图片"><a href="#背景图片" class="headerlink" title="背景图片"></a>背景图片</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">background-image:none | url(url)</span><br></pre></td></tr></table></figure><h2 id="背景平铺"><a href="#背景平铺" class="headerlink" title="背景平铺"></a>背景平铺</h2><p>默认情况下，背景图片是平铺的</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">backgound-repeat: repeat | no-repeat | repeat-x | repeat-y</span><br></pre></td></tr></table></figure><h2 id="背景图片位置"><a href="#背景图片位置" class="headerlink" title="背景图片位置"></a>背景图片位置</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">background-position</span>: <span class="selector-tag">x</span> <span class="selector-tag">y</span>;</span><br></pre></td></tr></table></figure><p>参数代表的意思是：x坐标和y坐标。可以使用<code>方位名词</code>或者<code>精确单位</code></p><h3 id="方位名词"><a href="#方位名词" class="headerlink" title="方位名词"></a>方位名词</h3><p>方位名词：<code>top|center|bottom|left|center|right</code></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">background-position</span>: <span class="selector-tag">center</span> <span class="selector-tag">top</span>;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@04087ffc94d8b9da40bafb29aee1df2cb7e22f1b/2021/01/20/571f65833c8c7fc383e52f8946e5b706.png"></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">background-position</span><span class="selector-pseudo">:right</span> <span class="selector-tag">center</span>;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@381c9bdfb75f8f29839042e4d86c408c123b2839/2021/01/20/5f1d85c77a7c70844fad7f51b61c8101.png"></p><div class="note warning flat"><p>如果是方位名词，<code>和顺序无关</code>，center right和right center效果等价<br>如果只指定了一个方位名词，另一个值省略，则第二个值默认<code>居中对齐</code></p></div><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">background-position</span><span class="selector-pseudo">:left</span>; <span class="comment">/*水平一定靠左，y轴居中显示*/</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@d0b887de7e3f2d3e71b193e735e94927f57eb9b2/2021/01/20/b3e6078c6fdcf1df6303e53ae5b85292.png"></p><h3 id="精确单位"><a href="#精确单位" class="headerlink" title="精确单位"></a>精确单位</h3><p>如果参数值是精确坐标，那么<strong>第一个肯定是x坐标，第二个一定是y坐标</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">background-positon</span><span class="selector-pseudo">:20px</span> 50<span class="selector-tag">px</span>;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@8d12136db2217e15704563049522b764a73fd74d/2021/01/20/610e6ecdae4a893fe116c547d1979ad8.png"><br>如果只指定了一共数值，那该数值<strong>一定是x坐标，另一个默认垂直居中</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">background-position</span><span class="selector-pseudo">:20px</span>;</span><br></pre></td></tr></table></figure><h3 id="混合参数"><a href="#混合参数" class="headerlink" title="混合参数"></a>混合参数</h3><p>如果指定的两个值是精确单位和方位名词混合使用，则<strong>第一个值是x坐标，第二个值是y坐标</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">background-position</span><span class="selector-pseudo">:20px</span> <span class="selector-tag">center</span>;</span><br></pre></td></tr></table></figure><h2 id="背景固定"><a href="#背景固定" class="headerlink" title="背景固定"></a>背景固定</h2><p><code>background-attachment</code>属性设置背景图像是否固定或者随着页面的其余部分滚动<br><code>background-attachment</code>可以用于制作视差滚动效果</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">background-attachment:scroll | fixed;</span><br></pre></td></tr></table></figure><ul><li><code>scroll</code><br>  背景图像随着对象内容滚动</li><li><code>fixed</code><br>  背景图像固定</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">background-attachment</span><span class="selector-pseudo">:fixed</span>;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@9268463882e5a29ff9540beb8746e803261bada4/2021/01/20/db4ed0314083be21ce985215b826a325.png"></p><h2 id="背景属性复合写法"><a href="#背景属性复合写法" class="headerlink" title="背景属性复合写法"></a>背景属性复合写法</h2><p><code>background:背景颜色|背景图片|背景平铺|背景图像滚动|背景图片位置;</code></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">background</span>: <span class="selector-tag">transparent</span> <span class="selector-tag">url</span>(<span class="selector-tag">image</span><span class="selector-class">.jpg</span>) <span class="selector-tag">repeat-y</span> <span class="selector-tag">fixed</span> <span class="selector-tag">top</span>;</span><br></pre></td></tr></table></figure><h2 id="背景色半透明"><a href="#背景色半透明" class="headerlink" title="背景色半透明"></a>背景色半透明</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">background</span><span class="selector-pseudo">:rgba(0</span>,0,0,0<span class="selector-class">.3</span>);</span><br></pre></td></tr></table></figure><ul><li>最后一个参数是alpha透明度，取值范围在<code>0~1</code>之间</li><li>习惯把0.3的0省略掉，写为background:rgba(0,0,0,.3);</li></ul><div class="note warning flat"><p>注意：背景半透明是指盒子背景半透明，盒子里面的内容不受影响</p></div>]]></content>
      
      
      <categories>
          
          <category> Web前端 </category>
          
          <category> HTML+CSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML+CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前端三剑客🔗Grid网格布局</title>
      <link href="2021/01/19/%E5%89%8D%E7%AB%AF/HTML+CSS/%E5%89%8D%E7%AB%AF%E4%B8%89%E5%89%91%E5%AE%A2_Grid%E7%BD%91%E6%A0%BC%E5%B8%83%E5%B1%80/"/>
      <url>2021/01/19/%E5%89%8D%E7%AB%AF/HTML+CSS/%E5%89%8D%E7%AB%AF%E4%B8%89%E5%89%91%E5%AE%A2_Grid%E7%BD%91%E6%A0%BC%E5%B8%83%E5%B1%80/</url>
      
        <content type="html"><![CDATA[<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><div class="note success flat"><p>👉👉👉<a href="https://www.html.cn/archives/8510/#prop-grid-column-row-start-end">CSS Grid 布局完全指南(图解 Grid 详细教程)</a>||<a href="http://www.ruanyifeng.com/blog/2019/03/grid-layout-tutorial.html">CSS Grid 网格布局教程</a></p></div><h1 id="网格布局"><a href="#网格布局" class="headerlink" title="网格布局"></a>网格布局</h1><p>网格布局（Grid）是最强大的 CSS 布局方案。</p><p>它将网页划分成一个个网格，可以任意组合不同的网格，做出各种各样的布局。以前，只能通过复杂的 CSS 框架达到的效果，现在浏览器内置了。<br><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@691955c18ee2e49e0eca308085bcbd1aa5c5aa45/2021/01/19/4dc4bf98fb48c6865288b13e02e3dc58.png"><br>上图这样的布局，就是 Grid 布局的拿手好戏。</p><p>Grid 布局与 Flex 布局有一定的相似性，都可以指定容器内部多个项目的位置。但是，它们也存在重大区别。</p><p>Flex 布局是<code>轴线布局</code>，只能指定”项目”针对轴线的位置，可以看作是<code>一维布局</code>。Grid 布局则是将容器划分成<code>&quot;行&quot;和&quot;列&quot;</code>，产生单元格，然后指定”项目所在”的单元格，可以看作是<code>二维布局</code>。Grid 布局远比 Flex 布局强大。</p><h1 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h1><ul><li><strong>容器和项目</strong></li></ul><p>采用网格布局的区域，称为”容器”（container）。容器内部采用网格定位的子元素，称为”项目”（item）。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>1<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>2<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>3<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>上面代码中，最外层的&lt;div&gt;元素就是容器，内层的三个&lt;div&gt;元素就是项目</p><div class="note warning flat"><p>注意：项目只能是容器的顶层子元素，不包含项目的子元素，比如上面代码的&lt;p&gt;元素就不是项目。Grid 布局只对项目生效</p></div><ul><li><strong>行和列</strong></li></ul><p>容器里面的水平区域称为”行”（row），垂直区域称为”列”（column）。<br><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@13fcb30a31df15990a455d931d14b1d266b1fb61/2021/01/19/8f6233dc6aaf99f50bc8dec77e28298c.png"></p><ul><li><strong>单元格</strong></li></ul><p>行和列的交叉区域，称为”单元格”（cell）。<br>正常情况下，n行和m列会产生n x m个单元格。比如，3行3列会产生9个单元格。</p><ul><li><strong>网格线</strong></li></ul><p>划分网格的线，称为”网格线”（grid line）。水平网格线划分出行，垂直网格线划分出列。</p><h1 id="容器属性"><a href="#容器属性" class="headerlink" title="容器属性"></a>容器属性</h1><p>Grid 布局的属性分成两类。一类定义在容器上面，称为容器属性；另一类定义在项目上面，称为项目属性。这部分先介绍容器属性。</p><h2 id="display属性"><a href="#display属性" class="headerlink" title="display属性"></a>display属性</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span>&#123;</span><br><span class="line">    <span class="attribute">display</span>: grid;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>网格项目按行排列，网格项目占用整个容器的宽度，容器元素都是块级元素</p><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@004c7340a2474e725059bbfb4bb5d8d19abfab0c/2021/01/19/aa187cfdc35064b3649f5d21377bdce6.png"></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span>&#123;</span><br><span class="line">    <span class="attribute">display</span>: inline-grid;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>网格项目按行排列，网格项目宽度由自身宽度决定，容器为行内元素<br><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@cdeb0ee6e16b4bfa91bae5fd7f122f4efa49b9dc/2021/01/19/bd810b4f11f62b804d698ba7e3999c0b.png"></p><div class="note warning flat"><p>注意，设为网格布局以后，容器子元素（项目）的<code>float</code>、<code>display: inline-block</code>、<code>display: table-cell</code>、<code>vertical-align</code>和<code>column-\*</code>等设置都将失效。</p></div><h1 id="显示网格"><a href="#显示网格" class="headerlink" title="显示网格"></a>显示网格</h1><p>容器指定了网格布局以后，接着就要划分行和列。<code>grid-template-columns</code>属性定义每一列的列宽，<code>grid-template-rows</code>属性定义每一行的行高</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: grid;</span><br><span class="line">  <span class="attribute">grid-template-columns</span>: <span class="number">100px</span> <span class="number">100px</span> <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">grid-template-rows</span>: <span class="number">100px</span> <span class="number">100px</span> <span class="number">100px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面代码指定了一个三行三列的网格，列宽和行高都是100px。<br><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@b48712d0cb7a433976b84c69d4ca203821dd9b3f/2021/01/19/b53ba92ada1a5e6ba3fd1583e51f0429.png"><br>除了使用绝对单位，也可以使用百分比</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: grid;</span><br><span class="line">  <span class="attribute">grid-template-columns</span>: <span class="number">33.33%</span> <span class="number">33.33%</span> <span class="number">33.33%</span>;</span><br><span class="line">  <span class="attribute">grid-template-rows</span>: <span class="number">33.33%</span> <span class="number">33.33%</span> <span class="number">33.33%</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="repeat"><a href="#repeat" class="headerlink" title="repeat()"></a>repeat()</h2><p>有时候，重复写同样的值非常麻烦，尤其网格很多时。这时，可以使用<code>repeat()</code>函数，简化重复的值。上面的代码用<code>repeat()</code>改写如下。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line"><span class="attribute">display</span>: grid;</span><br><span class="line"><span class="attribute">grid-template-columns</span>: <span class="built_in">repeat</span>(<span class="number">3</span>, <span class="number">33.33%</span>);</span><br><span class="line"><span class="attribute">grid-template-rows</span>: <span class="built_in">repeat</span>(<span class="number">3</span>, <span class="number">33.33%</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>repeat()</code>接受两个参数，第一个参数是重复的次数（上例是3），第二个参数是所要重复的值。<br>repeat()重复某种模式也是可以的</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">grid-template-columns</span>: <span class="selector-tag">repeat</span>(2, 100<span class="selector-tag">px</span> 20<span class="selector-tag">px</span> 80<span class="selector-tag">px</span>);</span><br></pre></td></tr></table></figure><p>上面代码定义了6列，第一列和第四列的宽度为<code>100px</code>，第二列和第五列为<code>20px</code>，第三列和第六列为<code>80px</code><br><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@e7f31d933ccaa072a119aef95da076ed1e28fc05/2021/01/19/a281b90038f3c6ece6444fa3cd085090.png"></p><h2 id="auto-fill关键字"><a href="#auto-fill关键字" class="headerlink" title="auto-fill关键字"></a>auto-fill关键字</h2><p>有时，单元格的大小是固定的，但是容器的大小不确定。如果希望每一行（或每一列）容纳尽可能多的单元格，这时可以使用<code>auto-fill</code>关键字表示自动填充</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: grid;</span><br><span class="line">  <span class="attribute">grid-template-columns</span>: <span class="built_in">repeat</span>(auto-fill, <span class="number">100px</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面代码表示每列宽度100px，然后自动填充，直到容器不能放置更多的列<br><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@c214e820b5098e723cfa8609506e4d165c8ecbf9/2021/01/19/0e108e41b2c9a0de0c445631891e6444.png"></p><h2 id="fr关键字"><a href="#fr关键字" class="headerlink" title="fr关键字"></a>fr关键字</h2><p>为了方便表示比例关系，网格布局提供了<code>fr</code>关键字（fraction 的缩写，意为”片段”）。如果两列的宽度分别为<code>1fr</code>和<code>2fr</code>，就表示后者是前者的两倍</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: grid;</span><br><span class="line">  <span class="attribute">grid-template-columns</span>: <span class="number">1</span>fr <span class="number">1</span>fr;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面代码表示两个相同宽度的列<br><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@e5556627ad0833e64983d93c4f6d21bc51a19c80/2021/01/19/a248a3a41c0cf0f3d536be929dff5a63.png"><br>fr可以与绝对长度的单位结合使用，这时会非常方便</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">   <span class="attribute">display</span>: grid;</span><br><span class="line">   <span class="attribute">grid-template-columns</span>: <span class="number">150px</span> <span class="number">1</span>fr <span class="number">2</span>fr;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面代码表示，第一列的宽度为150像素，第二列的宽度是第三列的一半<br><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@c79b29651275991859fcbe1e98b11cd1a6bb411e/2021/01/19/5667ffcf2825a66d0cf8a3b0d1da00f6.png"></p><h2 id="minmax"><a href="#minmax" class="headerlink" title="minmax()"></a>minmax()</h2><p><code>minmax()</code>函数产生一个长度范围，表示长度就在这个范围之中。它接受两个参数，分别为最小值和最大值</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">grid-template-columns</span>: 1<span class="selector-tag">fr</span> 1<span class="selector-tag">fr</span> <span class="selector-tag">minmax</span>(100<span class="selector-tag">px</span>, 1<span class="selector-tag">fr</span>);</span><br></pre></td></tr></table></figure><p>上面代码中，<code>minmax(100px, 1fr)</code>表示列宽不小于<code>100px</code>，不大于<code>1fr</code>。</p><h2 id="auto关键字"><a href="#auto关键字" class="headerlink" title="auto关键字"></a>auto关键字</h2><p><code>auto</code>关键字表示由浏览器自己决定长度。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">grid-template-columns</span>: 100<span class="selector-tag">px</span> <span class="selector-tag">auto</span> 100<span class="selector-tag">px</span>;</span><br></pre></td></tr></table></figure><p>上面代码中，第二列的宽度，基本上等于该列单元格的最大宽度，除非单元格内容设置了<code>min-width</code>，且这个值大于最大宽度</p><h2 id="网格线的名称"><a href="#网格线的名称" class="headerlink" title="网格线的名称"></a>网格线的名称</h2><p><code>grid-template-columns</code>属性和<code>grid-template-rows</code>属性里面，还可以使用方括号，指定每一根网格线的名字，方便以后的引用。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: grid;</span><br><span class="line">  <span class="attribute">grid-template-columns</span>: [c1] <span class="number">100px</span> [c2] <span class="number">100px</span> [c3] auto [c4];</span><br><span class="line">  <span class="attribute">grid-template-rows</span>: [r1] <span class="number">100px</span> [r2] <span class="number">100px</span> [r3] auto [r4];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面代码指定网格布局为3行 x 3列，因此有4根垂直网格线和4根水平网格线。方括号里面依次是这八根线的名字。<br>网格布局允许同一根线有多个名字，比如<code>[fifth-line row-5]</code>。</p><h2 id="布局实例"><a href="#布局实例" class="headerlink" title="布局实例"></a>布局实例</h2><p><code>grid-template-columns</code>属性对于网页布局非常有用。两栏式布局只需要一行代码</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.wrapper</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: grid;</span><br><span class="line">  <span class="attribute">grid-template-columns</span>: <span class="number">70%</span> <span class="number">30%</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面代码将左边栏设为70%，右边栏设为30%。<br>传统的十二网格布局，写起来也很容易</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">grid-template-columns</span>: <span class="selector-tag">repeat</span>(12, 1<span class="selector-tag">fr</span>);</span><br></pre></td></tr></table></figure><h1 id="定义网格间隙"><a href="#定义网格间隙" class="headerlink" title="定义网格间隙"></a>定义网格间隙</h1><p><code>grid-row-gap</code>属性设置行与行的间隔（行间距），<code>grid-column-gap</code>属性设置列与列的间隔（列间距）</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"> <span class="selector-class">.container</span> &#123;</span><br><span class="line">    <span class="attribute">grid-row-gap</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">grid-column-gap</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面代码中，<code>grid-row-gap</code>用于设置行间距，<code>grid-column-gap</code>用于设置列间距<br><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@4f9e3f64f09bd27448faeb34558bc6deee946a55/2021/01/19/3c23301dcc7877bef3f3147dcd917071.png"><br>grid-gap属性是grid-column-gap和grid-row-gap的合并简写形式，语法如下。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">grid-gap</span>: &lt;<span class="selector-tag">grid-row-gap</span>&gt; &lt;<span class="selector-tag">grid-column-gap</span>&gt;;</span><br></pre></td></tr></table></figure><p>因此，上面一段 CSS 代码等同于下面的代码。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">  <span class="attribute">grid-gap</span>: <span class="number">20px</span> <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果<code>grid-gap</code>省略了第二个值，浏览器认为第二个值等于第一个值。</p><div class="note warning flat"><p>根据最新标准，上面三个属性名的grid-前缀已经删grid-column-gap和grid-row-gap写成<code>column-gap</code>和<code>row-gap</code>，grid-gap写成<code>gap</code>。</p></div><h1 id="用网格区域命名和定位项目"><a href="#用网格区域命名和定位项目" class="headerlink" title="用网格区域命名和定位项目"></a>用网格区域命名和定位项目</h1><p>网格布局允许指定”区域”（area），一个区域由单个或多个单元格组成。<code>grid-template-areas</code>属性用于定义区域</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: grid;</span><br><span class="line">  <span class="attribute">grid-template-columns</span>: <span class="number">100px</span> <span class="number">100px</span> <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">grid-template-rows</span>: <span class="number">100px</span> <span class="number">100px</span> <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">grid-template-areas</span>: <span class="string">&#x27;a b c&#x27;</span></span><br><span class="line">                       <span class="string">&#x27;d e f&#x27;</span></span><br><span class="line">                       <span class="string">&#x27;g h i&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面代码先划分出9个单元格，然后将其定名为a到i的九个区域，分别对应这九个单元格<br>多个单元格合并成一个区域的写法如下</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">grid-template-areas: &#x27;a a a&#x27;</span><br><span class="line">                     &#x27;b b b&#x27;</span><br><span class="line">                     &#x27;c c c&#x27;;</span><br></pre></td></tr></table></figure><p>上面代码将9个单元格分成<code>a</code>、<code>b</code>、<code>c</code>三个区域</p><p>下面是一个布局实例</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">grid-template-areas</span>: &quot;<span class="selector-tag">header</span> <span class="selector-tag">header</span> <span class="selector-tag">header</span>&quot;</span><br><span class="line">                     &quot;<span class="selector-tag">main</span> <span class="selector-tag">main</span> <span class="selector-tag">sidebar</span>&quot;</span><br><span class="line">                     &quot;<span class="selector-tag">footer</span> <span class="selector-tag">footer</span> <span class="selector-tag">footer</span>&quot;;</span><br></pre></td></tr></table></figure><p>上面代码中，顶部是页眉区域<code>header</code>，底部是页脚区域<code>footer</code>，中间部分则为<code>main</code>和<code>sidebar</code>。</p><p>如果某些区域不需要利用，则使用”点”（<code>.</code>）表示。</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">grid-template-areas: &#x27;a . c&#x27;</span><br><span class="line">                         &#x27;d . f&#x27;</span><br><span class="line">                         &#x27;g . i&#x27;;</span><br></pre></td></tr></table></figure><p>上面代码中，中间一列为点，表示没有用到该单元格，或者该单元格不属于任何区域</p><div class="note warning flat"><p>注意，区域的命名会影响到网格线。每个区域的起始网格线，会自动命名为<code>区域名-start</code>，终止网格线自动命名为<code>区域名-end</code>。<br>比如，区域名为<code>header</code>，则起始位置的水平网格线和垂直网格线叫做<code>header-start</code>，终止位置的水平网格线和垂直网格线叫做<code>header-end</code>。</p></div><h1 id="隐式网格"><a href="#隐式网格" class="headerlink" title="隐式网格"></a>隐式网格</h1><p>划分网格以后，容器的子元素会按照顺序，自动放置在每一个网格。默认的放置顺序是”先行后列”，即先填满第一行，再开始放入第二行，即下图数字的顺序<br><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@4e262ef45a0a679ebfb6ced109da53654c50cac0/2021/01/19/83beb11a805a10c22a1a8811dc4c7dba.png"><br>这个顺序由<code>grid-auto-flow</code>属性决定，默认值是<code>row</code>，即”先行后列”。也可以将它设成<code>column</code>，变成”先列后行”</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">grid-auto-flow</span>: <span class="selector-tag">column</span>;</span><br></pre></td></tr></table></figure><p>上面代码设置了column以后，放置顺序就变成了下图。<br><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@d26837b8d6208cfcf46b4228aa094d49ea0503cc/2021/01/19/5d38a31311dc933ffa4b8c0bd1312bb2.png"><br><code>grid-auto-flow</code>属性除了设置成<code>row</code>和<code>column</code>，还可以设成<code>row dense</code>和<code>column dense</code>。这两个值主要用于，某些项目指定位置以后，剩下的项目怎么自动放置。</p><p>下面的例子让1号项目和2号项目各占据两个单元格，然后在默认的<code>grid-auto-flow: row</code>情况下，会产生下面这样的布局<br><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@5c60e5f2f51765533c7bff8cc6a1653ca4fa5445/2021/01/19/189e7d15dec1c0f96f7fe68dab92df86.png"><br>上图中，1号项目后面的位置是空的，这是因为3号项目默认跟着2号项目，所以会排在2号项目后面。</p><p>现在修改设置，设为<code>row dense</code>，表示”先行后列”，并且尽可能紧密填满，尽量不出现空格</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">grid-auto-flow</span>: <span class="selector-tag">row</span> <span class="selector-tag">dense</span>;</span><br></pre></td></tr></table></figure><p>上面代码的效果如下。<br><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@1c1d6c339666f554f1605e5f0bf9b6dbc64ed269/2021/01/19/872b64c84c407bff0a7b5f0fd6cf759d.png"><br>上图会先填满第一行，再填满第二行，所以3号项目就会紧跟在1号项目的后面。8号项目和9号项目就会排到第四行。</p><p>如果将设置改为<code>column dense</code>，表示”先列后行”，并且尽量填满空格。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">grid-auto-flow</span>: <span class="selector-tag">column</span> <span class="selector-tag">dense</span>;</span><br></pre></td></tr></table></figure><p>上面代码的效果如下。<br><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@b559c081eddec6a1916b58c8b62ebbc442642eba/2021/01/19/74491632ef2e9c615a3bb3cca8b58a82.png"><br>上图会先填满第一列，再填满第2列，所以3号项目在第一列，4号项目在第二列。8号项目和9号项目被挤到了第四列</p><h1 id="网格项目的对齐方式"><a href="#网格项目的对齐方式" class="headerlink" title="网格项目的对齐方式"></a>网格项目的对齐方式</h1><p><code>justify-items</code>属性设置单元格内容的水平位置（左中右），<code>align-items</code>属性设置单元格内容的垂直位置（上中下）</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">  <span class="attribute">justify-items</span>: start | end | center | stretch;</span><br><span class="line">  <span class="attribute">align-items</span>: start | end | center | stretch;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这两个属性的写法完全相同，都可以取下面这些值。</p><ul><li>start：对齐单元格的起始边缘。</li><li>end：对齐单元格的结束边缘。</li><li>center：单元格内部居中。</li><li>stretch：拉伸，占满单元格的整个宽度（默认值）</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">  <span class="attribute">justify-items</span>: start;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面代码表示，单元格的内容左对齐，效果如下图<br><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@c526de2770b74075d63e3e6e9d150693ace19de9/2021/01/19/4f6d7ed5c992d62c8c118dec3fe57494.png"></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">   <span class="attribute">align-items</span>: start;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面代码表示，单元格的内容头部对齐，效果如下图。<br><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@8cc3b739c3d3a3811359dd300f20810b2cfcdd9e/2021/01/19/72948e6e7511883e7ce6f0b35a73db4c.png"><br><code>place-items</code>属性是<code>align-items</code>属性和<code>justify-items</code>属性的合并简写形式。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">place-items</span>: &lt;<span class="selector-tag">align-items</span>&gt; &lt;<span class="selector-tag">justify-items</span>&gt;;</span><br></pre></td></tr></table></figure><p>下面是一个例子。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">place-items</span>: <span class="selector-tag">start</span> <span class="selector-tag">end</span>;</span><br></pre></td></tr></table></figure><p>如果省略第二个值，则浏览器认为与第一个值相等。</p><h1 id="网格轨道的对齐方式"><a href="#网格轨道的对齐方式" class="headerlink" title="网格轨道的对齐方式"></a>网格轨道的对齐方式</h1><p><code>justify-content</code>属性是整个内容区域在容器里面的水平位置（左中右），<code>align-content</code>属性是整个内容区域的垂直位置（上中下）。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">  <span class="attribute">justify-content</span>: start | end | center | stretch | space-around | space-between | space-evenly;</span><br><span class="line">  <span class="attribute">align-content</span>: start | end | center | stretch | space-around | space-between | space-evenly;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这两个属性的写法完全相同，都可以取下面这些值。（下面的图都以<code>justify-content</code>属性为例，<code>align-content</code>属性的图完全一样，只是<strong>将水平方向改成垂直方向</strong>。）</p><ul><li><p><strong>start - 对齐容器的起始边框</strong><br><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@a16d59d5aa09d5461425d8cb5c0036b8656c6366/2021/01/19/6fed933e0574aed40d12fc633035b199.png"></p></li><li><p><strong>end - 对齐容器的结束边框</strong><br><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@19b450e62ec33bafb3d4f807ceb6fd57ca555d95/2021/01/19/7bb374ab7a68e02c554d01b97ec6cbce.png"></p></li><li><p><strong>center - 容器内部居中</strong><br><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@5d05067a5c23c4f381e33e2e412d9414a28e71ee/2021/01/19/4b1578d7d12ec57d5893f23008dc2b00.png"></p></li><li><p><strong>stretch - 项目大小没有指定时，拉伸占据整个网格容器</strong><br><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@2b2fbbe1881a1a7ed60f4c4cf798e950da9a8955/2021/01/19/53b3f47149bb59b175268218316a5d5e.png"></p></li><li><p><strong>space-around - 每个项目两侧的间隔相等。所以，项目之间的间隔比项目与容器边框的间隔大一倍</strong><br><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@a47df1af9e23b9128027b0907e531f819e5f3720/2021/01/19/5f47147aaad243265748f0e9c008cb56.png"></p></li><li><p><strong>space-between - 项目与项目的间隔相等，项目与容器边框之间没有间隔</strong><br><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@ebb3894d7b9bd8b26aaecacabb35481a58fef7f5/2021/01/19/fa0cc8376de2d8abfa350b92d8b5922c.png"></p></li><li><p><strong>space-evenly - 项目与项目的间隔相等，项目与容器边框之间也是同样长度的间隔</strong><br><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@bba05e946d8c92a9fdec1c27a985e0878f064970/2021/01/19/cb387c914e486d5145e7778919719873.png"></p></li></ul><p><code>place-content</code>属性是<code>align-content</code>属性和<code>justify-content</code>属性的合并简写形式。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">place-content</span>: &lt;<span class="selector-tag">align-content</span>&gt; &lt;<span class="selector-tag">justify-content</span>&gt;</span><br></pre></td></tr></table></figure><p>下面是一个例子。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">place-content</span>: <span class="selector-tag">space-around</span> <span class="selector-tag">space-evenly</span>;</span><br></pre></td></tr></table></figure><p>如果省略第二个值，浏览器就会假定第二个值等于第一个值。</p><h1 id="项目属性"><a href="#项目属性" class="headerlink" title="项目属性"></a>项目属性</h1><h2 id="项目位置属性"><a href="#项目位置属性" class="headerlink" title="项目位置属性"></a>项目位置属性</h2><p>项目的位置是可以指定的，具体方法就是指定项目的四个边框，分别定位在哪根网格线。</p><ul><li>grid-column-start属性：左边框所在的垂直网格线</li><li>grid-column-end属性：右边框所在的垂直网格线</li><li>grid-row-start属性：上边框所在的水平网格线</li><li>grid-row-end属性：下边框所在的水平网格线</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.item-1</span> &#123;</span><br><span class="line">  <span class="attribute">grid-column-start</span>: <span class="number">2</span>;</span><br><span class="line">  <span class="attribute">grid-column-end</span>: <span class="number">4</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面代码指定，1号项目的左边框是第二根垂直网格线，右边框是第四根垂直网格线。<br><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@9380abbbba2c1327bd9c1c2d0bab5f088df639a6/2021/01/19/303796e2d19c54387edb72d5a6ae341a.png"><br>图中，只指定了1号项目的左右边框，没有指定上下边框，所以会采用默认位置，即上边框是第一根水平网格线，下边框是第二根水平网格线。</p><p>除了1号项目以外，其他项目都没有指定位置，由浏览器自动布局，这时它们的位置由容器的<code>grid-auto-flow</code>属性决定，这个属性的默认值是<code>row</code>，因此会”先行后列”进行排列。读者可以把这个属性的值分别改成<code>column</code>、<code>row dense</code>和<code>column dense</code>，看看其他项目的位置发生了怎样的变化。</p><p>下面的例子是指定四个边框位置的效果。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.item-1</span> &#123;</span><br><span class="line">  <span class="attribute">grid-column-start</span>: <span class="number">1</span>;</span><br><span class="line">  <span class="attribute">grid-column-end</span>: <span class="number">3</span>;</span><br><span class="line">  <span class="attribute">grid-row-start</span>: <span class="number">2</span>;</span><br><span class="line">  <span class="attribute">grid-row-end</span>: <span class="number">4</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@3cd57030b4001b5dc7b8e86e763e29321e9837b0/2021/01/19/d381586d89c10d05ef1e45ee84a78e09.png"><br>这四个属性的值，除了指定为第几个网格线，还可以指定为网格线的名字。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.item-1</span> &#123;</span><br><span class="line">  <span class="attribute">grid-column-start</span>: header-start;</span><br><span class="line">  <span class="attribute">grid-column-end</span>: header-end;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面代码中，左边框和右边框的位置，都指定为网格线的名字。</p><p>这四个属性的值还可以使用<code>span</code>关键字，表示”跨越”，即左右边框（上下边框）之间跨越多少个网格。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.item-1</span> &#123;</span><br><span class="line">  <span class="attribute">grid-column-start</span>: span <span class="number">2</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面代码表示，1号项目的左边框距离右边框跨越2个网格。<br><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@957a05f2f0ba6112c5605f6b7fede30a1ec64794/2021/01/19/d56ab95fb554c36790e76a053a2b31de.png"><br>这与下面的代码效果完全一样。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.item-1</span> &#123;</span><br><span class="line">  <span class="attribute">grid-column-end</span>: span <span class="number">2</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用这四个属性，如果产生了项目的重叠，则使用<code>z-index</code>属性指定项目的重叠顺序。</p><p><code>grid-column</code>属性是grid-column-start和grid-column-end的合并简写形式，<code>grid-row</code>属性是grid-row-start属性和grid-row-end的合并简写形式。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.item</span> &#123;</span><br><span class="line">  <span class="attribute">grid-column</span>: &lt;start-line&gt; / &lt;end-line&gt;;</span><br><span class="line">  <span class="attribute">grid-row</span>: &lt;start-line&gt; / &lt;end-line&gt;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>下面是一个例子。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.item-1</span> &#123;</span><br><span class="line">  <span class="attribute">grid-column</span>: <span class="number">1</span> / <span class="number">3</span>;</span><br><span class="line">  <span class="attribute">grid-row</span>: <span class="number">1</span> / <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 等同于 */</span></span><br><span class="line"><span class="selector-class">.item-1</span> &#123;</span><br><span class="line">  <span class="attribute">grid-column-start</span>: <span class="number">1</span>;</span><br><span class="line">  <span class="attribute">grid-column-end</span>: <span class="number">3</span>;</span><br><span class="line">  <span class="attribute">grid-row-start</span>: <span class="number">1</span>;</span><br><span class="line">  <span class="attribute">grid-row-end</span>: <span class="number">2</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面代码中，项目<code>item-1</code>占据第一行，从第一根列线到第三根列线。</p><p>这两个属性之中，也可以使用<code>span</code>关键字，表示跨越多少个网格。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.item-1</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#b03532</span>;</span><br><span class="line">  <span class="attribute">grid-column</span>: <span class="number">1</span> / <span class="number">3</span>;</span><br><span class="line">  <span class="attribute">grid-row</span>: <span class="number">1</span> / <span class="number">3</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 等同于 */</span></span><br><span class="line"><span class="selector-class">.item-1</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#b03532</span>;</span><br><span class="line">  <span class="attribute">grid-column</span>: <span class="number">1</span> / span <span class="number">2</span>;</span><br><span class="line">  <span class="attribute">grid-row</span>: <span class="number">1</span> / span <span class="number">2</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面代码中，项目<code>item-1</code>占据的区域，包括第一行 + 第二行、第一列 + 第二列。<br><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@b8b5b917217f92ad547779c3b3e14028fc3be996/2021/01/19/54cf52ef67cfb3453381fc6ce1b13b2c.png"><br>斜杠以及后面的部分可以省略，默认跨越一个网格。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.item-1</span> &#123;</span><br><span class="line">  <span class="attribute">grid-column</span>: <span class="number">1</span>;</span><br><span class="line">  <span class="attribute">grid-row</span>: <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面代码中，项目<code>item-1</code>占据左上角第一个网格</p><h2 id="grid-area属性"><a href="#grid-area属性" class="headerlink" title="grid-area属性"></a>grid-area属性</h2><p><code>grid-area</code>属性指定项目放在哪一个区域。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.item-1</span> &#123;</span><br><span class="line">   <span class="attribute">grid-area</span>: e;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面代码中，1号项目位于<code>e</code>区域，效果如下图<br><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@e9fa3ea400ceaa68bae8fe6a2ff46be35e79e972/2021/01/19/224edf91deaa1108181f92574c3b9b80.png"></p><p><code>grid-area</code>属性还可用作<code>grid-row-start</code>、<code>grid-column-start</code>、<code>grid-row-end</code>、<code>grid-column-end</code>的合并简写形式，直接指定项目的位置。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.item</span> &#123;</span><br><span class="line">  <span class="attribute">grid-area</span>: &lt;row-start&gt; / &lt;column-start&gt; / &lt;row-end&gt; / &lt;column-end&gt;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>下面是一个例子。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.item-1</span> &#123;</span><br><span class="line">  <span class="attribute">grid-area</span>: <span class="number">1</span> / <span class="number">1</span> / <span class="number">3</span> / <span class="number">3</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="项目对齐方式"><a href="#项目对齐方式" class="headerlink" title="项目对齐方式"></a>项目对齐方式</h2><p><code>justify-self</code>属性设置单元格内容的水平位置（左中右），跟<code>justify-items</code>属性的用法完全一致，但只作用于单个项目。</p><p><code>align-self</code>属性设置单元格内容的垂直位置（上中下），跟<code>align-items</code>属性的用法完全一致，也是只作用于单个项目</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.item</span> &#123;</span><br><span class="line">  <span class="attribute">justify-self</span>: start | end | center | stretch;</span><br><span class="line">  <span class="attribute">align-self</span>: start | end | center | stretch;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这两个属性都可以取下面四个值。</p><ul><li>start：对齐单元格的起始边缘。</li><li>end：对齐单元格的结束边缘。</li><li>center：单元格内部居中。</li><li>stretch：拉伸，占满单元格的整个宽度（默认值）。</li></ul><p>下面是justify-self: start的例子。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.item-1</span>  &#123;</span><br><span class="line">   <span class="attribute">justify-self</span>: start;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@7e844ed5b1147106189e51cec7bfbbf810a786d2/2021/01/19/6ff9d77a27cbb6f105c13d2c9ecc82ab.png"><br><code>place-self</code>属性是<code>align-self</code>属性和<code>justify-self</code>属性的合并简写形式。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">place-self</span>: &lt;<span class="selector-tag">align-self</span>&gt; &lt;<span class="selector-tag">justify-self</span>&gt;;</span><br></pre></td></tr></table></figure><p>下面是一个例子。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">place-self</span>: <span class="selector-tag">center</span> <span class="selector-tag">center</span>;</span><br></pre></td></tr></table></figure><p>如果省略第二个值，<code>place-self</code>属性会认为这两个值相等。</p>]]></content>
      
      
      <categories>
          
          <category> Web前端 </category>
          
          <category> HTML+CSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML+CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前端三剑客🔗弹性盒子模型</title>
      <link href="2021/01/19/%E5%89%8D%E7%AB%AF/HTML+CSS/%E5%89%8D%E7%AB%AF%E4%B8%89%E5%89%91%E5%AE%A2_%E5%BC%B9%E6%80%A7%E7%9B%92%E5%AD%90%E6%A8%A1%E5%9E%8B/"/>
      <url>2021/01/19/%E5%89%8D%E7%AB%AF/HTML+CSS/%E5%89%8D%E7%AB%AF%E4%B8%89%E5%89%91%E5%AE%A2_%E5%BC%B9%E6%80%A7%E7%9B%92%E5%AD%90%E6%A8%A1%E5%9E%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="弹性盒子模型"><a href="#弹性盒子模型" class="headerlink" title="弹性盒子模型"></a>弹性盒子模型</h1><p>CSS3 新增了弹性盒子模型（<code>Flexible Box</code> 或 <code>FlexBox</code>），是一种新的用于在 HTML 页面实现布局的方式。使得当 HTML 页面适应不同尺寸的屏幕和不同的设备时，元素是可预测地运行。</p><p>弹性盒子模型实现 HTML 页面布局是<strong>与方向无关的</strong>。不类似于块级布局侧重垂直方向，内联布局侧重水平方向。</p><p>弹性盒子模型主要<strong>适用于 HTML 页面的组件以及小规模的布局</strong>，而并<strong>不适用于大规模的布局</strong>，否则会影响 HTML 页面性能<br><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@d5e8977e5c8e7c74d0f5dddaccee655fc76cbee1/2021/01/19/0568da4aab018362ff6eef848747febd.png"></p><ul><li><p>伸缩容器（flex container）：包裹伸缩项目的父元素。</p></li><li><p>伸缩项目（flex item）：伸缩容器的每个子元素。</p></li><li><p>轴（axis）：每个弹性盒子模型拥有两个轴。</p><ul><li>主轴（main axis）：伸缩项目沿其一次排列的轴被称为主轴。</li><li>侧轴（cross axis）：垂直于主轴的轴被称为侧轴。</li></ul></li><li><p>方向（direction）：伸缩容器的主轴由主轴起点和主轴终点，侧轴由侧轴起点和侧轴终点描述伸缩项目排列的方向。</p></li><li><p>尺寸（dimension）：根据伸缩容器的主轴和侧轴，伸缩项目的宽度和高度。</p><ul><li>对应主轴的称为主轴尺寸。</li><li>对应侧轴的称为侧轴尺寸。</li></ul></li></ul><h1 id="开启Flexbox布局"><a href="#开启Flexbox布局" class="headerlink" title="开启Flexbox布局"></a>开启Flexbox布局</h1><p>假设有下边这么一个 html 结构：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;flexbox&quot;</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;flex1&quot;</span>&gt;</span>Flex1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;flex2&quot;</span>&gt;</span>Flex2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;flex3&quot;</span>&gt;</span>Flex3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>一个div 容器包含了三个 div 子元素，按照默认的布局方式进行排列。因为 div 是块级元素，每个 div 占了整个一行的空间：<br><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@845cb8facfff098ade4a828180646bed2f6e0437/2021/01/19/d9a346232bdbf96690a487c88e2745a9.png"><br>如果要开启容器的 flex 布局，只需要在 css 里边给 .flexbox设置 <code>display: flex </code>属性</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">display</span>: <span class="selector-tag">flex</span>;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@5ac652d4f73f176f7ce12874ca86cc6169959da8/2021/01/19/e2bc29f618dca68924f240636cbc3496.png"><br>可以看到里边的三个元素自动变成了一行，因为 flex 默认是<strong>按行进行排列的</strong>。Flexbox 布局是<strong>一维布局方式，要么按行排列，要么按列排列</strong>。</p><h1 id="定义弹性盒子模型"><a href="#定义弹性盒子模型" class="headerlink" title="定义弹性盒子模型"></a>定义弹性盒子模型</h1><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">display</span> : <span class="selector-tag">flex</span>;</span><br><span class="line"><span class="selector-tag">display</span> : <span class="selector-tag">inline-flex</span>;</span><br></pre></td></tr></table></figure><ul><li><code>flex</code>：设置指定元素为块级元素的弹性盒子模型。</li><li><code>inline-flex</code>：设置指定元素为行内块级元素的弹性盒子模型。</li></ul><p>样的，此属性存在浏览器兼容问题：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">display</span> : <span class="selector-tag">-webkit-flex</span>;</span><br><span class="line"><span class="selector-tag">display</span>: <span class="selector-tag">-ms-flex</span>;</span><br><span class="line"><span class="selector-tag">display</span>: <span class="selector-tag">-moz-flex</span>;</span><br><span class="line"><span class="selector-tag">display</span>: <span class="selector-tag">-o-flex</span>;</span><br></pre></td></tr></table></figure><h1 id="对齐方式"><a href="#对齐方式" class="headerlink" title="对齐方式"></a>对齐方式</h1><p>Flex 布局有一个隐式的坐标空间，水平方向有一条<code>主轴(main-axis)</code>，垂直方向上有一条<code>交叉轴(cross-axis)</code>：<br><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@fbeeabb4d9338d4171e26e1a50c8dc3f1fa220f5/2021/01/19/13260509aface02ba5f89abb81d28b6d.png"></p><h2 id="flex-direction-属性"><a href="#flex-direction-属性" class="headerlink" title="flex-direction 属性"></a>flex-direction 属性</h2><p><code>flex-direction</code> 属性适用于伸缩容器元素，用于创建主轴的方向。</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flex-direction: row | row-reverse | column | column-reverse</span><br></pre></td></tr></table></figure><ul><li><code>row</code>：设置主轴是水平方向。</li><li><code>row-reverse</code>：与 row 的排列方向相反。</li><li><code>column</code>：设置主轴是垂直方向。</li><li> <code>column-reverse</code>：与 column 的排列方向相反。</li></ul><div class="hide-block"><button type="button" class="hide-button button--animated" style>测试用例    </button><span class="hide-content"><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@d282544fa824f9758661c89ae1fc25ac972d5477/2021/01/19/8f96ad1d1592771241d534040544c866.png"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.flexbox</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="comment">/* 将当前元素设置为弹性盒子模型的伸缩容器 */</span></span></span><br><span class="line">            display: flex;</span><br><span class="line"><span class="css">            <span class="comment">/* flex-direction设置主轴的方向 */</span></span></span><br><span class="line">            /*</span><br><span class="line">                row:默认值 表示水平方向 </span><br><span class="line">                column：表示垂直方向</span><br><span class="line">             */</span><br><span class="line">            flex-direction: column;</span><br><span class="line"><span class="css">            <span class="selector-tag">width</span><span class="selector-pseudo">:400px</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">height</span><span class="selector-pseudo">:300px</span>;</span></span><br><span class="line">            border: 1px solid;</span><br><span class="line">            background-color: rgb(255, 236, 220);</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.flex</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">width</span><span class="selector-pseudo">:400px</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">height</span><span class="selector-pseudo">:50px</span>;</span></span><br><span class="line">            border: 1px solid;</span><br><span class="line">            background-color: rgb(221, 103, 128);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;flexbox&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;flex&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background-color: rgb(115, 226, 174);&quot;</span>&gt;</span>Flex1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;flex&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background-color: rgb(110, 226, 220);&quot;</span>&gt;</span>Flex2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;flex&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background-color: rgb(230, 189, 115);&quot;</span>&gt;</span>Flex3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></span></div><h2 id="justify-content-属性"><a href="#justify-content-属性" class="headerlink" title="justify-content 属性"></a>justify-content 属性</h2><p>CSS justify-content 属性适用于伸缩容器元素，用于设置伸缩项目沿着主轴线(即水平方向)的对齐方式</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">justify-content: center | flex-start | flex-end | space-between | space-around</span><br></pre></td></tr></table></figure><ul><li><code>flex-start</code><br>flex-start 是默认值，如果是从左到右的文字阅读习惯(LTR)，就是靠左对齐。</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">justify-content</span>: <span class="selector-tag">flex-start</span>;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@abb8319626b5c6360abd4e4708774cb62728ef50/2021/01/19/88923485ce92ce00a7027a6c4d9638c4.png"></p><ul><li><p><code>center</code><br>居中对齐，此时整个 flex 容器被居中到了页面中间：<br><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@19622b5f079bc7d1a4187d4380023cd4124a6eed/2021/01/19/cb9a95abe2d666adbc9f7ed33db15291.png"></p></li><li><p><code>flex-end</code><br>靠右对齐：<br><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@9666abd74251c34dcde5a376fb64866e4f5a76ca/2021/01/19/e5cc42c29476a7222665f0a72cdb1edb.png"></p></li><li><p><code>space-between</code><br>两端对齐，这种对齐方式是第一个和最后一个元素贴边，中间的元素平分剩余的空间：<br><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@005a78fe041bba259bcbcdca91960c324cfc0b07/2021/01/19/929fd08e5daa50b94acc94a9936344cb.png"></p></li><li><p><code>space-evenly</code><br>分散对齐，所有的元素都平分空间：<br><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@b34a46d4eba6719f5f1c55d907261b210a80dfca/2021/01/19/e46d346d75e8fd3e1d6606ac662e06fe.png"></p></li><li><p><code>space-around</code><br>跟space-evenly类似，但是左右两边的留白为平分空间的 1/2.<br><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@852af3f18008cfb02598aa27558e95b6bb86c19f/2021/01/19/0fb6c4b66eb990e9f22e69edded41a5f.png"></p></li></ul><h2 id="align-items属性"><a href="#align-items属性" class="headerlink" title="align-items属性"></a>align-items属性</h2><p>控制交叉轴方向（即垂直方向）上的对齐方式使用<code>align-items</code>属性</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">align-items: center | flex-start | flex-end | baseline | stretch</span><br></pre></td></tr></table></figure><ul><li><p><code>stretch</code><br>stretch 是 align-items 的默认值，它会自动把子元素拉伸成容器的高度(<code>前提子盒子没有设置宽高</code>)，所以之前的例子里子元素在垂直方向上都占满了容器，只要改变容器的align-items的值，它就会变成内容的高度。stretch 对齐效果如下<br><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@73d77ffb16367296fa05b6944d237c617b97dc60/2021/01/19/6ed51b817a5aa3028b5c513413bd4194.png"></p></li><li><p><code>flex-start</code><br>靠上对齐，在交叉轴开始的最上方，可以看到子元素不再占满容器高度：<br><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@d959474b9366c510b3fe54d815c49baa1d811796/2021/01/19/16194fed7fa59849bc322a27a722c29b.png"></p></li><li><p><code>center</code><br>居中对齐<br><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@e292ccd59c92cc4b7ca7a5ab98c77a0b3e972286/2021/01/19/64aef7caac898bd29d4929f9d21b6951.png"></p></li><li><p><code>flex-end</code><br>向下对齐<br><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@f73ecfd99144d5840697cd87d9181017d49120d7/2021/01/19/4402f036110097934681a33c212b811d.png"></p></li><li><p><code>baseline</code><br>基线对齐，如果子元素文字尺寸和行高不同，则子元素会按照文字的基线进行对齐：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.flexbox</span>&#123;</span><br><span class="line">  <span class="attribute">display</span>: flex; </span><br><span class="line">  <span class="attribute">align-items</span>: baseline;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.flex2</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">24px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@7f6a3a34093ea35d60fcb52eadb5ee352da5b285/2021/01/19/c0b11803392c60808e916def1549526b.png"><br>如果是<code>flex-start</code> 对齐方式：<br><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@90a6d32cb011a32444f30ac3711f9012d094b4d0/2021/01/19/cfe7b9391b555ad2a7e46a58f342d300.png"></p></li></ul><h1 id="子元素覆盖对齐方式"><a href="#子元素覆盖对齐方式" class="headerlink" title="子元素覆盖对齐方式"></a>子元素覆盖对齐方式</h1><p>子元素可以通过设置 <code>align-self</code> 来控制自己在交叉轴上的对齐方式，例如把<code> .flex3</code> 子元素在垂直方向上靠下对齐：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.flexbox</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">align-items</span>: flex-start;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.flex3</span> &#123;</span><br><span class="line">  <span class="attribute">align-self</span>: flex-end;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@e761b9e4a7a36921efc0be35a1789ac7fede6514/2021/01/19/9292783055bc636076b7c334f0329203.png"></p><p>在水平方向上控制子元素对齐并没有<code>justify-self</code>属性，而是使用<code>margin</code>属性，通过把左或右边距设置为<code>auto</code>来控制水平对齐，比如把 flex3 放到最右边：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.flex3</span> &#123;</span><br><span class="line">  <span class="attribute">margin-left</span>: auto;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@c38be099813d89c1ad512032a5c70285c860a93b/2021/01/19/e315ba7441de940f0dc19d4800abad36.png"></p><h1 id="排列方式"><a href="#排列方式" class="headerlink" title="排列方式"></a>排列方式</h1><p>flex 支持按行排布，也支持按列排布。按列排布时，主轴和交叉轴换了方向，但是 align-items 和 justify-content 控制的轴线不变，即 <code>align-items</code> 还是控制交叉轴，<code>justify-content</code> 控制主轴：<br><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@00035ffd250b6f5b1831c047305fbf69f8f0e478/2021/01/19/5b363ef2e605e43557f5eac27301dfff.png"><br>所以说，在水平方向上对齐变成了使用<code>align-items</code>，垂直方向则用<code>justify-content</code>。</p><p>要使 flex 按列排布，只需要设置</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">flex-direction</span>: <span class="selector-tag">column</span>;</span><br></pre></td></tr></table></figure><h2 id="水平居中对齐"><a href="#水平居中对齐" class="headerlink" title="水平居中对齐"></a>水平居中对齐</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.flexbox</span>&#123;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">flex-direction</span>: column;</span><br><span class="line">  <span class="attribute">align-items</span>: center;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@d2f1450723d91d34621d6e721ebdca938eaf7687/2021/01/19/6c0ddf482780bc5521e99f978f360672.png"></p><h2 id="垂直居中"><a href="#垂直居中" class="headerlink" title="垂直居中"></a>垂直居中</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.flexbox</span>&#123;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">flex-direction</span>: column;</span><br><span class="line">  <span class="attribute">justify-content</span>: center;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@4b842d1b00ff63ea74ca585563528cf6c4d0cd8b/2021/01/19/b15ad13e749744a11345d7bd58c5277d.png"></p><h2 id="row-reverse"><a href="#row-reverse" class="headerlink" title="row-reverse"></a>row-reverse</h2><p>另外 flex 布局也可以支持反向按行和列布局，相当于按容器中心线进行 180 度翻转：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.flexbox</span>&#123;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">flex-direction</span>: row-reverse;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@bab78a99a8bb5baf5081a5e4171633b1f9fd3d40/2021/01/19/b046ec7ae6eedbf0a86c2d646f0ff755.png"></p><h2 id="column-reverse"><a href="#column-reverse" class="headerlink" title="column-reverse"></a>column-reverse</h2><p>列模式下会垂直翻转：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.flexbox</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">flex-direction</span>: column-reverse;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@a59e1ed1d94f10a5a25e5c619c398243eedc78d1/2021/01/19/715667fbd2f99bb72b10f5baa657d3e5.png"></p><h1 id="空间占比"><a href="#空间占比" class="headerlink" title="空间占比"></a>空间占比</h1><p>子元素可以通过设置<code>flex</code>属性来调整空间的占比，例如让<code> flex2</code> 在水平方向上占据其他子元素的 2 倍大小，可以设置:</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.flex1</span>,<span class="selector-class">.flex3</span> &#123;</span><br><span class="line">  <span class="attribute">flex</span>: <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.flex2</span> &#123;</span><br><span class="line">  <span class="attribute">flex</span>: <span class="number">2</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@6ca1dce1e1a53f96d6156e2f83813c3576900315/2021/01/19/bfb97b81d8f784ef1372c2fce9398860.png"></p><h1 id="Flex-basis"><a href="#Flex-basis" class="headerlink" title="Flex-basis"></a>Flex-basis</h1><p>在介绍 flex-basis 之前，先讲一个概念<code> main size</code>，即主轴方向的尺寸，那么，在行排布模式下，也就是水平方向的尺寸，其实就是子元素的宽度，而在列模式下，它是子元素的高度，相对应的也有<code>cross size</code>，即行模式下是子元素的高度，列模式下是宽度。 而<code>flex-basis</code>是用来设置<code>main size</code>的，它的优先级会高于<code>width</code>。它的默认值是<code>auto</code>，即在行模式下，如果子元素设置了宽度，它就取自这个宽度值，没有设置的话，就是内容的宽度。使用<code> flex-basis</code>，可以同时管理行模式下的宽度和列模式下的高度。</p><p>来看一个例子，把之前的子元素改成固定宽度，比如 <code>50px</code>：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.flexbox</span> &gt; * &#123;</span><br><span class="line">  <span class="attribute">flex-basis</span>: <span class="number">50px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@be90c6015148435d061cb130c373d3dcccc13ee4/2021/01/19/2d78cfb2e9614327188ca36b7725b60f.png"></p><p>如果再添加<code> width</code> 属性，发现并不会生效：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.flexbox</span> &gt; * &#123;</span><br><span class="line">  <span class="attribute">flex-basis</span>: <span class="number">50px</span>;</span><br><span class="line">  <span class="attribute">width</span>:<span class="number">100px</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>但是，可以通过设置<code> min-width</code>来强制设置最小宽度：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.flexbox</span> &gt; * &#123;</span><br><span class="line">  <span class="attribute">flex-basis</span>: <span class="number">50px</span>;</span><br><span class="line">  <span class="attribute">min-width</span>:<span class="number">100px</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@0d85de3d5e9dd485facf3a05c76b7eb405ec17b6/2021/01/19/4a641e50b4e79f2677c9f4c870fe271c.png"><br>同理的，在列模式下，<code>flex-basis</code>变成了高度，因为容器高度为<code>100px</code>，这里把子元素高度设置成了<code>30px</code>总计 <code>90px</code>来效果：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.flexbox</span>&#123;</span><br><span class="line">  <span class="attribute">flex-direction</span>: column;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.flexbox</span>&gt; * &#123;</span><br><span class="line">  <span class="attribute">flex-basis</span>: <span class="number">30px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@0653cf2bbb6728e4e3489853742532905684be6a/2021/01/19/fe9cceecf235b99fb13b2e0de14f9138.png"><br>同样的，也可以用<code>min-height</code>来控制最小高度</p><h1 id="缩放"><a href="#缩放" class="headerlink" title="缩放"></a>缩放</h1><p>（后续例子都假设是行模式）之前的小节简单说了一下 flex 子元素空间的占比，这里把缩放单独拿出来是为了说明：除了调整 flex 子元素的增长之外，也可以调整收缩，以及flex属性背后的原理（下一小节）。</p><h2 id="flex-grow"><a href="#flex-grow" class="headerlink" title="flex-grow"></a>flex-grow</h2><p>先看一下增长，<code>flex-grow</code>，这个属性是说 flex 容器在有剩余空间的时候，子元素占据剩余空间的占比。例如，给<code>.flex2</code>子元素设置：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.flex2</span> &#123;</span><br><span class="line">  <span class="attribute">flex-grow</span>: <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其它的元素保持默认的宽度（即内容的宽度，flex-basis 为 auto)，那么<code>.flex2</code>就会自动增长并占据整个剩余空间：<br><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@954f8cf013ea55deec004fb7988e60a962db1942/2021/01/19/e333587bfa71cbfd969e38820e704879.png"><br>如果把三个元素全部设置成 1，那么所有元素都会自动增长，并各自占据 1/3 的空间：<br><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@d336c860249ffa8b289ef023298f8574eed4d77a/2021/01/19/b3ed3e9c9c9b420f93d1c2976dbfa04a.png"><br>使用 <code>flex-grow</code>就能够自由的调整元素的空间占比了，非常适合一些浮动的布局。</p><h2 id="flex-shrink"><a href="#flex-shrink" class="headerlink" title="flex-shrink"></a>flex-shrink</h2><p>子元素的收缩是说：当它们的宽度超过 flex 容器之后，该如何进行收缩。通过 <code>flex-shrink</code> 来设置一个数值，数值越大，收缩程度也越大，比如<code>flex-shrink: 2</code>的元素会比<code>flex-shrink:1</code>收缩的值大 2 倍：<br><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@5bac71203587c8a08eb4aa1ea47c4f34dfb18012/2021/01/19/2d82746b71dfcd89ca063792c97b306b.png"></p><h1 id="flex属性"><a href="#flex属性" class="headerlink" title="flex属性"></a>flex属性</h1><p>说完<code>flex-grow</code>、<code>flex-shrink</code> 和 <code>flex-basis</code> 之后，再来看一下这个<code>flex</code>属性，它其实是前边三个属性的缩写，默认值是 <code>0 1 auto</code>，即不增长，但收缩，收缩比例为 1，flex-basis 为 auto，即取自用户定义的宽度或内容的宽度。</p><p>flex 的值可以是下边几种：</p><ul><li>指定一个数字 - 例如<code>flex: 1</code>，就等同于是<code>flex: 1 1 0</code>，即自动缩放，比例为 1，flex-basis 为 0。</li><li>auto - 等同于<code>flex: 1 1 auto</code>。</li><li>指定两个数字 - 第一个为<code>flex-grow</code>，第二个，如果是数字则认为是 <code>flex-shrink</code>，如果是宽度，则是<code>flex-basis</code>。</li><li>指定三个值 - 分别为<code>flex-grow</code>，<code>flex-shrink</code> 和<code> flex-basis</code>。</li></ul><p>所以说，通过flex属性可以方便的同时设置<code>flex-grow</code>、<code>flex-shrink </code>和 <code>flex-basis</code> 这三个值。</p><h1 id="折行"><a href="#折行" class="headerlink" title="折行"></a>折行</h1><p>如果子元素有固定宽度，并且超出了容器的宽度，还不允许收缩的话，那么可以使用<code>flex-wrap</code>属性来让元素进行折行排列，使得每行的元素都不超过容器的宽度。<strong>这里跟 css grid 布局的主要区别是，它无法控制单独控制行、列的占比，比如跨行、夸列，也不能自由定位元素到特定的位置</strong>。下边的示例新增了 2 个元素，一共 5 个，每个元素的 main size 为 300px，然后超出宽度后折行：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.flexbox</span>&#123;</span><br><span class="line">  <span class="attribute">flex-wrap</span>: wrap;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.flexbox</span>&gt; * &#123;</span><br><span class="line">  <span class="attribute">flex-shrink</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">flex-basis</span>: <span class="number">300px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@133b9f9353a8120f0d91c3a3c11eb5323b97649d/2021/01/19/a4e7da4bcacedae14f0d6c33cc63b585.png"></p><h2 id="align-content"><a href="#align-content" class="headerlink" title="align-content"></a>align-content</h2><p>如果 flex 容器开启了折行，那么两行及以上的内容可以通过<code>align-content</code>属性来控制各行之间在交叉轴上的排列规则，它的取值和<code> justify-content</code>基本相同，这里演示其中几个，还是使用之前三个元素的<code>flex</code>容器，每个容器宽度为 300px，超出后换行：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.flexbox</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">flex-wrap</span>: wrap;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.flexbox</span> &gt; * &#123;</span><br><span class="line">  <span class="attribute">flex-basis</span>: <span class="number">300px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p><code>center</code><br>居中对齐<br><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@2b0d9797a8d3e6c0bf7e2848cffd84b6fc0a19df/2021/01/19/3d8d25e3cda9204c53dbaa86790f44a0.png"></p></li><li><p><code>space-between</code><br>两端对齐<br><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@4bec551d17ae48c62ca2551f27ac57413c9af8b2/2021/01/19/3f52ddd4734a25adf52a8d673a1ddc07.png"></p></li></ul><h1 id="嵌套的-flex-容器的问题"><a href="#嵌套的-flex-容器的问题" class="headerlink" title="嵌套的 flex 容器的问题"></a>嵌套的 flex 容器的问题</h1><p>如果 HTML 结构复杂，有嵌套的 flex 容器，很有可能会遇到嵌套的 flex 容器并不能自动收缩的问题，即使设置了<code>flex-shrink</code>。比如有下边一个 html 结构：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;flex&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;flex1&quot;</span>&gt;</span>Flex 1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;flex2&quot;</span>&gt;</span>Flex 2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;flex3&quot;</span>&gt;</span>Flex 3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;flex4&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">      这是一段很长很长很长很长很长很长很长很长很长很长很长很长长很长很长很长很长很长长很长很长很长很长很长的文本</span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这里给之前的 flex 容器添加了一个新的子元素.flex4，这 4 个子元素都设置成flex: 1来平分空间，但是 .flex4 自己本身也是一个flex布局的容器，里边有一长串文本，我想让它超长之后自动显示省略号，它的 CSS 代码：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.flexbox</span>&#123;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.flexbox</span>&gt; * &#123;</span><br><span class="line">  <span class="attribute">flex</span>: <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.flex4</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">flex</span>: <span class="number">1</span>;</span><br><span class="line">  <span class="attribute">min-width</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.flex4</span> &gt; <span class="selector-tag">p</span> &#123;</span><br><span class="line">  <span class="attribute">white-space</span>: nowrap;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">  <span class="attribute">text-overflow</span>: ellipsis;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@d3040ffcf2bc656752bb6ce032719c0d1d44d51d/2021/01/19/9554bb946d96d3c3eb5cc049c865681d.png"></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><ul><li>开启 flex 布局使用<code>display: flex</code>属性。</li><li>flex 布局有主轴和交叉轴，分别使用<code>justify-content</code>和<code>align-items</code>控制对齐方式。</li><li>支持按行或列进行排列，使用<code>flex-direction</code>，另外也支持<code>row-reverse</code>和<code>column-reverse</code>反向排列。</li><li>子元素可以通过flex简写形式，或者<code>flex-grow</code>，<code>flex-shrink</code>，<code>flex-basis</code> 来调整元素的空间占比和缩放。</li><li>通过<code>flex-wrap</code>可以设置<code>flex </code>子元素折行显示。</li><li>嵌套<code>flex</code>容器的缩放问题。</li></ul>]]></content>
      
      
      <categories>
          
          <category> Web前端 </category>
          
          <category> HTML+CSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML+CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前端三剑客🔗动画</title>
      <link href="2021/01/19/%E5%89%8D%E7%AB%AF/HTML+CSS/%E5%89%8D%E7%AB%AF%E4%B8%89%E5%89%91%E5%AE%A2_%E5%8A%A8%E7%94%BB/"/>
      <url>2021/01/19/%E5%89%8D%E7%AB%AF/HTML+CSS/%E5%89%8D%E7%AB%AF%E4%B8%89%E5%89%91%E5%AE%A2_%E5%8A%A8%E7%94%BB/</url>
      
        <content type="html"><![CDATA[<h1 id="动画"><a href="#动画" class="headerlink" title="动画"></a>动画</h1><p>CSS3 新增 animation 属性使得仅通过 CSS 的样式属性实现动画效果成为可能。实现动画包括两个部分：</p><ul><li><p>用于定义动画的样式规则</p></li><li><p>用于设置动画开始、结束以及中间点样式的关键帧相对于传统使用 JavaScript 实现的动画方式，CSS3 新增的 animation 属性具有以下三个优点:</p><ul><li>能够非常容易地创建简单动画，甚至不需要掌握 JavaScript。</li><li>动画运行效果良好，可以在低性能的系统运行。性能以及流畅程度都优于 JavaScript 实现画效果。</li><li>允许浏览器优化动画的性能和效果，让浏览器控制动画序列。</li></ul></li><li><p><code>animation</code>实现动画主要由两个部分组成</p><ul><li>通过类似Flash 动画的 <strong>关键帧</strong>来声明一个动画</li><li>在 在animation 属性中 <strong>调用关键帧</strong>声明的动画实现一个更为复杂的动画效果</li></ul></li></ul><h1 id="定义动画序列"><a href="#定义动画序列" class="headerlink" title="定义动画序列"></a>定义动画序列</h1><h2 id="keyframes-声明动画"><a href="#keyframes-声明动画" class="headerlink" title="@keyframes 声明动画"></a>@keyframes 声明动画</h2><p>通过使用 <code>@keyframes</code> 建立两个或两个以上关键帧来实现。每一个关键帧都描述了动画元素在给定的时间点上应该如何渲染。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@keyframes</span> &lt;keyframes-name&gt;&#123;</span><br><span class="line">    &lt;<span class="selector-tag">keyframe-block-list</span>&gt;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p><code>keyframes-name</code><br>用于设置当前动画的名称，以便通过 animation-name 属性调用。</p></li><li><p><code>keyframe-block-list</code><br>用于设置动画执行过程中的关键帧。</p></li></ul><h2 id="实现动画"><a href="#实现动画" class="headerlink" title="实现动画"></a>实现动画</h2><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@fbe146b5314b430bed76dadf30cd3edfeeaf200c/2021/01/19/1e36362a5b346079815b53fbb579b9f1.png"><br>动画执行完成后回归原始状态且不需要触发条件。</p><ul><li>设置关键帧动画的名称（至少要包含两个 开始和结束）<br>其中过程的关键字 (from、to) 可用百分比替换</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@keyframes</span> animate&#123;</span><br><span class="line">    <span class="selector-tag">from</span>&#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-tag">to</span>&#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">400px</span>;</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">400px</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>通过 animation 相关属性实现动画效果</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">background</span>: lightcoral;</span><br><span class="line">    <span class="comment">/* 设置执行动画的名称 与关键帧对应 */</span></span><br><span class="line">    <span class="attribute">animation-name</span>: animate;</span><br><span class="line">    <span class="comment">/* 动画执行的时间 */</span></span><br><span class="line">    <span class="attribute">animation-duration</span>: <span class="number">2s</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上两个子属性可简写为一个属性</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">animation</span>: <span class="selector-tag">animate</span> 2<span class="selector-tag">s</span>;</span><br></pre></td></tr></table></figure><h2 id="多个动画"><a href="#多个动画" class="headerlink" title="多个动画"></a>多个动画</h2><p>如果设置多个动画，名称、时间需用逗号分隔。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">animation-name</span>: <span class="selector-tag">animate1</span>,<span class="selector-tag">animate2</span>;</span><br><span class="line"><span class="selector-tag">animation-duration</span>: 1<span class="selector-tag">s</span>,4<span class="selector-tag">s</span>;</span><br></pre></td></tr></table></figure><h2 id="动画执行的次数"><a href="#动画执行的次数" class="headerlink" title="动画执行的次数"></a>动画执行的次数</h2><p><code>animation-iteration-count</code> 属性控制</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">background</span>: lightcoral;</span><br><span class="line">    <span class="attribute">animation-name</span>: animate;</span><br><span class="line">    <span class="attribute">animation-duration</span>: <span class="number">1s</span>;</span><br><span class="line">    <span class="comment">/* infinite表示永久执行  可设置整数 也可设置小数：会执行一段就结束 */</span></span><br><span class="line">    <span class="attribute">animation-iteration-count</span>: infinite;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    animation-iteration-count: 2;</span></span><br><span class="line"><span class="comment">    animation-iteration-count: 2.3;</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="动画执行的方向"><a href="#动画执行的方向" class="headerlink" title="动画执行的方向"></a>动画执行的方向</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 每个循环内动画向前循环 即 动画循环结束后回到起点重新开始 默认值 */</span></span><br><span class="line"><span class="selector-tag">animation-direction</span>: <span class="selector-tag">normal</span>;</span><br><span class="line"><span class="comment">/* 动画交替反向运行，反向运动时，动画起步后退，同时，带时间功能的函数也反向。 */</span></span><br><span class="line"><span class="selector-tag">animation-direction</span>: <span class="selector-tag">alternate</span>;</span><br><span class="line"><span class="comment">/* 反向运动动画，每周期结束动画由尾到头运行 */</span></span><br><span class="line"><span class="selector-tag">animation-direction</span>: <span class="selector-tag">reverse</span>;</span><br><span class="line"><span class="comment">/* 反向交替，反向开始交替 动画第一次运行时是反向的， 然后下一次是正向，后面依次循环。 */</span></span><br><span class="line"><span class="selector-tag">animation-direction</span>: <span class="selector-tag">alternate-reverse</span>;</span><br></pre></td></tr></table></figure><p>测试的次数均为无限次。</p><ul><li><p><code>normal</code><br>默认值 每个循环内动画向前循环 即 动画循环结束后回到起点重新开始<br><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@fbe146b5314b430bed76dadf30cd3edfeeaf200c/2021/01/19/1e36362a5b346079815b53fbb579b9f1.png"></p></li><li><p><code>alternate</code><br>动画交替反向运行，反向运动时，动画起步后退，同时，带时间功能的函数也反向。<br><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@ebd439e0fdf3b03d8ba9de25eb44da130b35cdb9/2021/01/19/39facd90df66580a2a02423f1d4d4e9c.png"></p></li><li><p><code>reverse</code><br>反向运动动画，每周期结束动画由尾到头运行<br><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@57bf496ac962f5264bcdc4d53c2d4b3331878f89/2021/01/19/46a8fc50fc331a40fc1ebfaaf9fad2c6.png"></p></li><li><p><code>alternate-reverse</code><br>反向交替，反向开始交替 动画第一次运行时是反向的， 然后下一次是正向，后面依次循环。<br><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@8663d53f92ebf5309669740337a6b0c1aaf8c372/2021/01/19/ae76b724cde339a9fe48fbc584ea89e5.png"></p></li></ul><h2 id="动画执行的状态"><a href="#动画执行的状态" class="headerlink" title="动画执行的状态"></a>动画执行的状态</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 运行 */</span></span><br><span class="line"><span class="selector-tag">animation-play-state</span>: <span class="selector-tag">running</span>;</span><br><span class="line"><span class="comment">/* 暂停 */</span></span><br><span class="line"><span class="selector-tag">animation-play-state</span>: <span class="selector-tag">paused</span>;</span><br></pre></td></tr></table></figure><h2 id="设置动画时间外属性"><a href="#设置动画时间外属性" class="headerlink" title="设置动画时间外属性"></a>设置动画时间外属性</h2><p><code>animation-fill-mode</code>: 属性用于设置动画执行之前和执行之后如何为动画的目标元素应用样式。</p><p>此属性可设置的值为：</p><ul><li><code>none</code><br>不改变默认行为<br><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@578cd3d305ed164170ab12cd2ce91a18c7bbc9c7/2021/01/19/b08785d899160b76737f033e7a41f43b.png"></li></ul><ul><li><code>forwards</code><br>当动画完成后，保持最后一个属性值（在最后一个关键帧中定义）<br><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@826a63c4f45bd5ecc030a2aaa71d9a7a860641ac/2021/01/19/8a37b2f33174d3c907dc2001d5959686.png"></li></ul><ul><li><p><code>backwards</code><br>在 animation-delay 所指定的一段时间内，在动画显示之前，应用开始属性值（在第一个关键帧中定义）<br><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@779fff6711043a4910de21014facef5874a248db/2021/01/19/9d0f01208317509905cc8eeaeffbdce1.png"></p></li><li><p><code>both</code><br>向前和向后填充模式都被应用<br><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@5ab3fe5555102437979ccaef7facf02c62ca2c6c/2021/01/19/8ac954749d4c137e035754dec31af99e.png"></p></li></ul><h1 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h1><h2 id="旋转木马"><a href="#旋转木马" class="headerlink" title="旋转木马"></a>旋转木马</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span></span><br><span class="line"><span class="css">            *&#123;<span class="attribute">margin</span>:<span class="number">0</span>;</span></span><br><span class="line"><span class="css">              <span class="selector-tag">padding</span><span class="selector-pseudo">:0</span>;&#125;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">img</span>&#123;<span class="attribute">width</span>:<span class="number">150px</span>;</span></span><br><span class="line"><span class="css">                <span class="selector-tag">height</span><span class="selector-pseudo">:200px</span>;&#125;</span></span><br><span class="line"><span class="css">            <span class="selector-class">.box</span>&#123;</span></span><br><span class="line"><span class="css">                <span class="comment">/* 透视元素 */</span></span></span><br><span class="line"><span class="css">                <span class="selector-tag">perspective</span><span class="selector-pseudo">:800px</span>;</span></span><br><span class="line"><span class="css">                <span class="selector-tag">margin</span><span class="selector-pseudo">:50px</span> <span class="selector-tag">auto</span>;</span></span><br><span class="line"><span class="css">                <span class="selector-tag">width</span><span class="selector-pseudo">:900px</span>;</span></span><br><span class="line"><span class="css">                <span class="selector-tag">height</span><span class="selector-pseudo">:900px</span>;</span></span><br><span class="line"><span class="css">                <span class="comment">/* 设置 3D 元素的基点位置*/</span></span></span><br><span class="line"><span class="css">                <span class="selector-tag">perspective-origin</span><span class="selector-pseudo">:top</span>;</span></span><br><span class="line"><span class="css">                <span class="comment">/* 解决外边距的塌陷问题 */</span></span></span><br><span class="line"><span class="css">                <span class="selector-tag">overflow</span><span class="selector-pseudo">:hidden</span>;</span></span><br><span class="line">               &#125;</span><br><span class="line"><span class="css"><span class="keyword">@keyframes</span> moving&#123;</span></span><br><span class="line">0%&#123;</span><br><span class="line">transform: rotateY(0deg);</span><br><span class="line">&#125;</span><br><span class="line">100%&#123;</span><br><span class="line">transform: rotateY(360deg);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-class">.box</span> <span class="selector-tag">ul</span>&#123;</span></span><br><span class="line">list-style-type: none;</span><br><span class="line">transform-style: preserve-3d;</span><br><span class="line">position: relative;</span><br><span class="line">margin: 150px auto;</span><br><span class="line">animation: moving 8s linear infinite;</span><br><span class="line">width: 150px;</span><br><span class="line">height: 200px;</span><br><span class="line">&#125; </span><br><span class="line">body&#123;</span><br><span class="line"><span class="css"><span class="selector-tag">background-color</span><span class="selector-pseudo">:darkgray</span>;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-class">.box</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span>&#123;</span></span><br><span class="line">position: absolute;</span><br><span class="line"><span class="css"><span class="selector-tag">top</span><span class="selector-pseudo">:0px</span>;</span></span><br><span class="line"><span class="css"><span class="selector-tag">left</span><span class="selector-pseudo">:0px</span>;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="comment">/**每张图的旋转角度，360/个数*/</span></span></span><br><span class="line"><span class="css"><span class="selector-tag">li</span><span class="selector-pseudo">:nth-of-type(1)</span>&#123;</span></span><br><span class="line">transform: rotateY(0deg) translateZ(205px);</span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-tag">li</span><span class="selector-pseudo">:nth-of-type(2)</span>&#123;</span></span><br><span class="line">transform: rotateY(40deg) translateZ(205px);</span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-tag">li</span><span class="selector-pseudo">:nth-of-type(3)</span>&#123;</span></span><br><span class="line">transform: rotateY(80deg) translateZ(205px);</span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-tag">li</span><span class="selector-pseudo">:nth-of-type(4)</span>&#123;</span></span><br><span class="line">transform: rotateY(120deg) translateZ(205px);</span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-tag">li</span><span class="selector-pseudo">:nth-of-type(5)</span>&#123;</span></span><br><span class="line">transform: rotateY(160deg) translateZ(205px);</span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-tag">li</span><span class="selector-pseudo">:nth-of-type(6)</span>&#123;</span></span><br><span class="line">transform: rotateY(200deg) translateZ(205px);</span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-tag">li</span><span class="selector-pseudo">:nth-of-type(7)</span>&#123;</span></span><br><span class="line">transform: rotateY(240deg) translateZ(205px);</span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-tag">li</span><span class="selector-pseudo">:nth-of-type(8)</span>&#123;</span></span><br><span class="line">transform: rotateY(280deg) translateZ(205px);</span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-tag">li</span><span class="selector-pseudo">:nth-of-type(9)</span>&#123;</span></span><br><span class="line">transform: rotateY(320deg) translateZ(205px);</span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-tag">ul</span><span class="selector-pseudo">:hover</span>&#123;</span></span><br><span class="line">animation-play-state: paused;</span><br><span class="line">&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;images1/aa.jpg&quot;</span>/&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;images1/bb.jpg&quot;</span>/&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;images1/cc.jpg&quot;</span>/&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;images1/dd.jpg&quot;</span>/&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;images1/ee.jpg&quot;</span>/&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;images1/ff.jpg&quot;</span>/&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;images1/aa.jpg&quot;</span>/&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;images1/bb.jpg&quot;</span>/&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;images1/cc.jpg&quot;</span>/&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2021/01/03/20033cc833ffb083bb6225d17e15a52e.png"></p><h2 id="无缝滚动"><a href="#无缝滚动" class="headerlink" title="无缝滚动"></a>无缝滚动</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>无缝滚动<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span></span><br><span class="line">            * &#123;</span><br><span class="line">                margin: 0;</span><br><span class="line">                padding: 0;</span><br><span class="line">            &#125;</span><br><span class="line">nav&#123;</span><br><span class="line">width: 1000px;</span><br><span class="line">height: 150px;</span><br><span class="line">border: 2px solid white;</span><br><span class="line">margin: 100px auto;</span><br><span class="line">overflow: hidden;</span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="keyword">@keyframes</span> moving&#123;</span></span><br><span class="line">from&#123;</span><br><span class="line">transform: translateX(0px);</span><br><span class="line">&#125;</span><br><span class="line">to&#123;</span><br><span class="line">transform: translateX(-1000px);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">nav ul&#123;</span><br><span class="line">list-style-type: none;</span><br><span class="line">overflow: hidden;</span><br><span class="line">animation: moving 7s infinite linear;</span><br><span class="line">width: 200%;</span><br><span class="line">&#125;</span><br><span class="line">img&#123;</span><br><span class="line">width: 200px;</span><br><span class="line">height: 150px;</span><br><span class="line">border: 4px solid white;</span><br><span class="line">&#125;</span><br><span class="line">li&#123;</span><br><span class="line"><span class="css"><span class="selector-tag">float</span><span class="selector-pseudo">:left</span>;</span></span><br><span class="line">&#125;</span><br><span class="line">body&#123;</span><br><span class="line"><span class="css"><span class="selector-tag">background-color</span><span class="selector-pseudo">:aliceblue</span>;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-tag">nav</span><span class="selector-pseudo">:hover</span> <span class="selector-tag">ul</span>&#123;</span></span><br><span class="line"><span class="css"><span class="selector-tag">animation-play-state</span><span class="selector-pseudo">:paused</span>;</span></span><br><span class="line">&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--无缝滚动开始啦--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">nav</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--第一组开始--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;images1/a.jpg&quot;</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;images1/b.jpg&quot;</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span> </span><br><span class="line">                        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;images1/c.jpg&quot;</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;images1/d.jpg&quot;</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;images1/e.jpg&quot;</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--第一组结束--&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--第二组开始--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;images1/a.jpg&quot;</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;images1/b.jpg&quot;</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span> </span><br><span class="line">                        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;images1/c.jpg&quot;</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;images1/d.jpg&quot;</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;images1/e.jpg&quot;</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--第二组结束--&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--无缝滚动结束啦--&gt;</span></span><br><span class="line">        </span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2021/01/03/71d8ea15b722d2c531e1755f6c0b1c40.png"></p><h2 id="旋转的立方体"><a href="#旋转的立方体" class="headerlink" title="旋转的立方体"></a>旋转的立方体</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">media</span>=<span class="string">&quot;screen&quot;</span>&gt;</span></span><br><span class="line">        *&#123;</span><br><span class="line"><span class="css">            <span class="selector-tag">margin</span><span class="selector-pseudo">:0</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">padding</span><span class="selector-pseudo">:0</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.box</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">position</span><span class="selector-pseudo">:relative</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">top</span><span class="selector-pseudo">:100px</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">width</span><span class="selector-pseudo">:300px</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">height</span><span class="selector-pseudo">:300px</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">margin</span><span class="selector-pseudo">:0</span> <span class="selector-tag">auto</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">background-color</span>:<span class="selector-id">#ccc</span>;</span></span><br><span class="line"><span class="css">            <span class="comment">/* 透视距离 */</span></span></span><br><span class="line"><span class="css">            <span class="selector-tag">perspective</span><span class="selector-pseudo">:800px</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.content</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="comment">/* 基本样式 */</span></span></span><br><span class="line"><span class="css">            <span class="selector-tag">width</span><span class="selector-pseudo">:200px</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">height</span><span class="selector-pseudo">:200px</span>;</span></span><br><span class="line"><span class="css">            <span class="comment">/* content的位置 */</span></span></span><br><span class="line"><span class="css">            <span class="selector-tag">position</span><span class="selector-pseudo">:absolute</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">top</span><span class="selector-pseudo">:50px</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">left</span><span class="selector-pseudo">:50px</span>;</span></span><br><span class="line"><span class="css">            <span class="comment">/* 3D视图 */</span></span></span><br><span class="line"><span class="css">            <span class="selector-tag">transform-style</span><span class="selector-pseudo">:preserve-3d</span>;</span></span><br><span class="line"><span class="css">            <span class="comment">/* 过渡动画 */</span></span></span><br><span class="line"><span class="css">            <span class="selector-tag">transition</span><span class="selector-pseudo">:all</span> 3<span class="selector-tag">s</span> <span class="selector-tag">linear</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="comment">/* content旋转 */</span></span></span><br><span class="line"><span class="css">        <span class="selector-class">.content</span><span class="selector-pseudo">:hover</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">transform</span>: <span class="selector-tag">rotateX</span>(180<span class="selector-tag">deg</span>) <span class="selector-tag">rotateY</span>(180<span class="selector-tag">deg</span>); <span class="comment">/*----*/</span></span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="comment">/* 方块公共样式 */</span></span></span><br><span class="line"><span class="css">        <span class="selector-class">.side</span>&#123;</span></span><br><span class="line">            width: 200px;</span><br><span class="line"><span class="css">            <span class="selector-tag">height</span><span class="selector-pseudo">:200px</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">position</span><span class="selector-pseudo">:absolute</span>;  <span class="comment">/*6个div重叠*/</span></span></span><br><span class="line"><span class="css">            <span class="selector-tag">border</span><span class="selector-pseudo">:2px</span> <span class="selector-tag">solid</span> <span class="selector-id">#000</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">background-color</span><span class="selector-pseudo">:rgba(0</span>,0,0,0<span class="selector-class">.3</span>);</span></span><br><span class="line"><span class="css">            <span class="selector-tag">color</span>:<span class="selector-id">#fff</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">line-height</span><span class="selector-pseudo">:200px</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">font-size</span><span class="selector-pseudo">:30px</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">font-weight</span><span class="selector-pseudo">:bold</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">text-align</span><span class="selector-pseudo">:center</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">text-shadow</span><span class="selector-pseudo">:0</span> <span class="selector-tag">-1px</span> 0 <span class="selector-tag">rgba</span>(0,0,0,0<span class="selector-class">.2</span>);</span></span><br><span class="line"><span class="css">            <span class="selector-tag">border</span><span class="selector-pseudo">:1px</span> <span class="selector-tag">solid</span> <span class="selector-tag">red</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="comment">/* 前 */</span></span></span><br><span class="line"><span class="css">        <span class="selector-class">.side1</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">transform</span><span class="selector-pseudo">:translateZ(100px)</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="comment">/* 后 ：rotate()会使坐标也跟着旋转*/</span></span></span><br><span class="line"><span class="css">        <span class="selector-class">.side2</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">transform</span><span class="selector-pseudo">:rotateX(180deg)</span> <span class="selector-tag">translateZ</span>(100<span class="selector-tag">px</span>);</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="comment">/* 左 */</span></span></span><br><span class="line"><span class="css">        <span class="selector-class">.side3</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">transform</span><span class="selector-pseudo">:rotateY(-90deg)</span> <span class="selector-tag">translateZ</span>(100<span class="selector-tag">px</span>);</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="comment">/* 右 */</span></span></span><br><span class="line"><span class="css">        <span class="selector-class">.side4</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">transform</span><span class="selector-pseudo">:rotateY(90deg)</span> <span class="selector-tag">translateZ</span>(100<span class="selector-tag">px</span>);</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="comment">/* 上 */</span></span></span><br><span class="line"><span class="css">        <span class="selector-class">.side5</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">transform</span><span class="selector-pseudo">:rotateX(90deg)</span> <span class="selector-tag">translateZ</span>(100<span class="selector-tag">px</span>);</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="comment">/* 下 */</span></span></span><br><span class="line"><span class="css">        <span class="selector-class">.side6</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">transform</span><span class="selector-pseudo">:rotateX(-90deg)</span> <span class="selector-tag">translateZ</span>(100<span class="selector-tag">px</span>);</span></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;content&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;side side1&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;side side2&quot;</span>&gt;</span>2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;side side3&quot;</span>&gt;</span>3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;side side4&quot;</span>&gt;</span>4<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;side side5&quot;</span>&gt;</span>5<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;side side6&quot;</span>&gt;</span>6<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2021/01/03/ff1efef6d3b7cf72a9355972516c0cba.png"></p><h2 id="移动的方块"><a href="#移动的方块" class="headerlink" title="移动的方块"></a>移动的方块</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>案例4：动画<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span></span><br><span class="line"><span class="css"><span class="selector-class">.aniation_div</span> &#123;</span></span><br><span class="line">margin: 100px 0 0 100px;</span><br><span class="line">width: 80px;</span><br><span class="line">height: 60px;</span><br><span class="line">line-height: 60px;</span><br><span class="line">color: white;</span><br><span class="line">text-align: center;</span><br><span class="line">border-radius: 10px;</span><br><span class="line">background: greenyellow;</span><br><span class="line"><span class="css"><span class="selector-tag">animation</span>: <span class="selector-tag">move</span> 4<span class="selector-tag">s</span>; <span class="comment">/* 动画效果，运行4s */</span></span></span><br><span class="line"><span class="css"><span class="selector-tag">position</span>: <span class="selector-tag">relative</span>; <span class="comment">/* 相对定位 */</span></span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="css"> <span class="keyword">@keyframes</span> move&#123; <span class="comment">/* 规定动画 */</span></span></span><br><span class="line">0% &#123;</span><br><span class="line">transform: rotate(0deg);</span><br><span class="line">left: 0px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">25% &#123;</span><br><span class="line">transform: rotate(20deg);</span><br><span class="line">left: 0px;</span><br><span class="line">&#125;</span><br><span class="line">50% &#123;</span><br><span class="line">transform: rotate(0deg);</span><br><span class="line">left: 500px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">70% &#123;</span><br><span class="line">transform: rotate(0deg);</span><br><span class="line">left: 500px;</span><br><span class="line"><span class="css"><span class="selector-tag">background</span>: <span class="selector-id">#1ec7e6</span>;</span></span><br><span class="line">&#125;</span><br><span class="line">100% &#123;</span><br><span class="line"><span class="css"><span class="selector-tag">transform</span>: <span class="selector-tag">rotateX</span>(<span class="selector-tag">-360deg</span>); <span class="comment">/* 逆时针旋转360度 */</span></span></span><br><span class="line">left: 0px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;parent&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;aniation_div&quot;</span>&gt;</span></span><br><span class="line">动画</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2021/01/03/d081681599ac62a3fbe7ec64c01bc684.png"></p><h2 id="数字翻转"><a href="#数字翻转" class="headerlink" title="数字翻转"></a>数字翻转</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>综合实例_数字翻转<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span></span><br><span class="line">div&#123;</span><br><span class="line">width: 200px;</span><br><span class="line">height: 200px;</span><br><span class="line">margin: 50px auto;</span><br><span class="line"><span class="css"><span class="selector-tag">border</span>: 5<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#000</span>;</span></span><br><span class="line">position: relative;</span><br><span class="line"><span class="css"><span class="selector-tag">perspective</span>: 5000<span class="selector-tag">px</span>;<span class="comment">/*3D元素透视效果*/</span></span></span><br><span class="line"><span class="css"><span class="selector-tag">transform-style</span>: <span class="selector-tag">preserve-3d</span>;<span class="comment">/*被嵌套元素在3d空间中显示*/</span></span></span><br><span class="line"><span class="css"><span class="selector-tag">transition</span>: <span class="selector-tag">all</span> 1<span class="selector-tag">s</span> <span class="selector-tag">ease</span>;<span class="comment">/*设置过渡效果*/</span></span></span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-tag">div</span><span class="selector-pseudo">:hover</span>&#123;</span></span><br><span class="line"><span class="css"><span class="selector-tag">transform</span>: <span class="selector-tag">rotateX</span>(<span class="selector-tag">-90deg</span>);<span class="comment">/*黑边框 绕x轴逆时针旋转*/</span></span></span><br><span class="line">&#125;</span><br><span class="line">div img&#123;</span><br><span class="line"><span class="css"><span class="selector-tag">position</span>: <span class="selector-tag">absolute</span>; <span class="comment">/*两张图片定位到坐标原点*/</span></span></span><br><span class="line"><span class="css"><span class="selector-tag">top</span><span class="selector-pseudo">:0px</span>;</span></span><br><span class="line">left: 0px;</span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-tag">div</span> <span class="selector-tag">img</span><span class="selector-class">.img1</span>&#123;</span></span><br><span class="line"><span class="css"><span class="selector-tag">transform</span>: <span class="selector-tag">translateZ</span>(100<span class="selector-tag">px</span>); <span class="comment">/*z轴*/</span></span></span><br><span class="line"><span class="css"><span class="selector-tag">z-index</span>: 2;   <span class="comment">/*放第一张*/</span></span></span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-tag">div</span> <span class="selector-tag">img</span><span class="selector-class">.img2</span>&#123;</span></span><br><span class="line"><span class="css"><span class="selector-tag">transform</span>: <span class="selector-tag">rotateX</span>(90<span class="selector-tag">deg</span>)<span class="selector-tag">translateZ</span>(100<span class="selector-tag">px</span>); <span class="comment">/*绕x轴顺时针旋转90度 z轴平移100px*/</span></span></span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">class</span>=<span class="string">&quot;img1&quot;</span> <span class="attr">src</span>=<span class="string">&quot;images/1.png&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">class</span>=<span class="string">&quot;img2&quot;</span> <span class="attr">src</span>=<span class="string">&quot;images/2.png&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2021/01/03/85ef2c8a6bdd5dc64d3c04031f28ba97.png"></p><h2 id="翻页效果"><a href="#翻页效果" class="headerlink" title="翻页效果"></a>翻页效果</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>综合实例_翻页效果<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span></span><br><span class="line">*&#123;</span><br><span class="line">margin: 0px;</span><br><span class="line">padding: 0px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ul&#123;</span><br><span class="line">list-style-type: none;</span><br><span class="line"><span class="css"><span class="comment">/*设置父级大小*/</span></span></span><br><span class="line">width: 150px;</span><br><span class="line">height: 220px;</span><br><span class="line">margin: 200px;</span><br><span class="line">position: relative;</span><br><span class="line"><span class="css"><span class="comment">/*设置父级为透视元素*/</span></span></span><br><span class="line">perspective: 500px;</span><br><span class="line"><span class="css"><span class="comment">/*设置父级嵌套元素在3D中显示*/</span></span></span><br><span class="line">transform-style: preserve-3d;</span><br><span class="line">&#125;</span><br><span class="line">ul li&#123;</span><br><span class="line"><span class="css"><span class="comment">/*设置页面宽高*/</span></span></span><br><span class="line">width: 140px;</span><br><span class="line">height: 160px;</span><br><span class="line"><span class="css"><span class="comment">/*每个li都重叠*/</span></span></span><br><span class="line">position: absolute;</span><br><span class="line">left: 0px;</span><br><span class="line"><span class="css"><span class="selector-tag">top</span><span class="selector-pseudo">:0px</span>;</span></span><br><span class="line"><span class="css"><span class="comment">/*渐变+圆角*/</span></span></span><br><span class="line">background: linear-gradient(to right,black,gray);</span><br><span class="line">border: 1px solid lightgray;</span><br><span class="line">border-radius: 0 5px 5px 0;</span><br><span class="line"><span class="css"><span class="comment">/*设置左为原点*/</span></span></span><br><span class="line">transform-origin: left;</span><br><span class="line">transform: 5s;</span><br><span class="line">box-shadow: 0 5px 5px lightgray;</span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-pseudo">:nth-of-type(1)</span>&#123;</span></span><br><span class="line">transform: rotateY(-28deg);</span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-pseudo">:nth-of-type(2)</span>&#123;</span></span><br><span class="line">transform: rotateY(-26deg);</span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-pseudo">:nth-of-type(3)</span>&#123;</span></span><br><span class="line">transform: rotateY(-24deg);</span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-pseudo">:nth-of-type(4)</span>&#123;</span></span><br><span class="line">transform: rotateY(-22deg);</span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-pseudo">:nth-of-type(5)</span>&#123;</span></span><br><span class="line">transform: rotateY(-20deg);</span><br><span class="line"><span class="css"><span class="selector-tag">color</span><span class="selector-pseudo">:aqua</span>;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-tag">ul</span><span class="selector-pseudo">:hover</span> <span class="selector-tag">li</span><span class="selector-pseudo">:nth-of-type(1)</span>&#123;</span></span><br><span class="line">transform: rotateY(-160deg);</span><br><span class="line">transition: 1s;</span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-tag">ul</span><span class="selector-pseudo">:hover</span> <span class="selector-tag">li</span><span class="selector-pseudo">:nth-of-type(2)</span>&#123;</span></span><br><span class="line">transform: rotateY(-150deg);</span><br><span class="line"><span class="css"><span class="selector-tag">transition</span>: 1<span class="selector-class">.3s</span>;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-tag">ul</span><span class="selector-pseudo">:hover</span> <span class="selector-tag">li</span><span class="selector-pseudo">:nth-of-type(3)</span>&#123;</span></span><br><span class="line">transform: rotateY(-140deg);</span><br><span class="line"><span class="css"><span class="selector-tag">transition</span>: 1<span class="selector-class">.6s</span>;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-tag">ul</span><span class="selector-pseudo">:hover</span> <span class="selector-tag">li</span><span class="selector-pseudo">:nth-of-type(4)</span>&#123;</span></span><br><span class="line">transform: rotateY(-130deg);</span><br><span class="line"><span class="css"><span class="selector-tag">transition</span>: 1<span class="selector-class">.9s</span>;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">style</span>=<span class="string">&quot;line-height: 140px;text-align: center;font-size: 20px;&quot;</span>&gt;</span>武功秘籍<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2021/01/03/19fe131f2eaed7756f3d24bc36a28f7c.png"></p>]]></content>
      
      
      <categories>
          
          <category> Web前端 </category>
          
          <category> HTML+CSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML+CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前端三剑客🔗过渡</title>
      <link href="2021/01/19/%E5%89%8D%E7%AB%AF/HTML+CSS/%E5%89%8D%E7%AB%AF%E4%B8%89%E5%89%91%E5%AE%A2_%E8%BF%87%E6%B8%A1/"/>
      <url>2021/01/19/%E5%89%8D%E7%AB%AF/HTML+CSS/%E5%89%8D%E7%AB%AF%E4%B8%89%E5%89%91%E5%AE%A2_%E8%BF%87%E6%B8%A1/</url>
      
        <content type="html"><![CDATA[<h1 id="过渡"><a href="#过渡" class="headerlink" title="过渡"></a>过渡</h1><ul><li>transition呈现的是一种过渡，是一种动画转换的过程，如<strong>渐现、渐弱、动画快慢</strong>等</li><li>CSS3 transition的过渡功能更像是一种“黄油”，通过一些CSS的简单动作触发样式平滑过渡</li></ul><p>此属性同样存在浏览器兼容问题：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* WebKit引擎的浏览器（Chrome、Safari、Opera） */</span></span><br><span class="line"><span class="selector-tag">-webkit-transition</span> : &lt;<span class="selector-tag">single-transition</span>&gt;;</span><br><span class="line"><span class="comment">/* Gecko引擎的浏览器（Firefox） */</span></span><br><span class="line"><span class="selector-tag">-moz-transition</span> : &lt;<span class="selector-tag">single-transition</span>&gt;;</span><br><span class="line"><span class="comment">/* Trident引擎的浏览器（IE 10+） */</span></span><br><span class="line"><span class="selector-tag">-ms-transition</span> : &lt;<span class="selector-tag">single-transition</span>&gt;;</span><br><span class="line"><span class="comment">/* Presto引擎的浏览器（Opera） */</span></span><br><span class="line"><span class="selector-tag">-o-transition</span> : &lt;<span class="selector-tag">single-transition</span>&gt;;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2021/01/03/f9fa58ee34b4bec09e456095863d0f97.png"></p><h1 id="过渡子属性"><a href="#过渡子属性" class="headerlink" title="过渡子属性"></a>过渡子属性</h1><ul><li><p><strong>transition-property</strong><br>  定义转换动画的CSS属性名称</p><ul><li><code>IDENT</code> ：指定的CSS 属性（width 、height 、background-color 属性等 ）</li><li><code>all</code> ：指定所有元素支持transition-property 属性的样式，一般为了方便都会使用all</li></ul></li><li><p><strong>transition-duration</strong><br>  定义转换动画的时间长度，即从设置旧属性到换新属性所花费的时间，单位为秒（s）</p></li><li><p><strong>transition-timing-function</strong><br>  指定浏览器的过渡速度，以及过渡期间的操作进展情况，通过给过渡添加一个函数来指定动画的快慢方式</p><ul><li> <strong>ease</strong> ：速度 由快到 慢（ 默认值 ）</li><li> <strong>linear</strong>：速度 恒速（匀速运动 ）</li><li> <strong>ease-in</strong>：速度 越来越快（渐显效果 ）</li><li> <strong>ease-out</strong> ：速度 越来越慢（渐隐效果 ）</li><li> <strong>ease-in-out</strong> ：速度 先加速再减速（渐显渐隐效果 </li></ul></li><li><p><strong>transition-delay</strong><br>  指定一个动画开始执行的时间，当改变元素属性值后多长时间去执行过渡效果</p><ul><li><strong>正值</strong> ：元素过渡效果不会立即触发，当过了设置的时间值后才会被 触发</li><li><strong>负值</strong>：元素过渡效果会从该时间点开始显示，之前的动作被 截断</li><li>  <strong>0</strong>：默认值，元素过渡效果立即执行</li></ul></li></ul><h1 id="过渡触发方式"><a href="#过渡触发方式" class="headerlink" title="过渡触发方式"></a>过渡触发方式</h1><p><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/03/04/20200304163634.gif"></p><p>成功设置过渡的条件</p><ul><li><p>具有一个 CSS 属性在过渡效果中的开始样式和最终样式</p></li><li><p>通过 transition-property 指定过渡效果要执行的样式属性名称</p></li><li><p>通过 transition-duration 设置过渡效果执行的时长</p></li><li><p><strong>伪类触发</strong></p><ul><li>：<strong>hover</strong></li><li>：<strong>active</strong></li><li>：<strong>focus</strong></li><li>：<strong>checked</strong></li></ul></li><li><p><strong>使用子属性</strong><br>  各属性之间（多个属性时）用逗号分隔例如<code> transition-property: background-color,width;</code><br>  每个属性与时间一一对应，如果指定的时长的个数小于属性的个数，则时长列表会被<strong>重复</strong>，以与属性的个数匹配；如果指定的时长的个数大于属性的个数，则时长列表会被<strong>裁减</strong></p></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.box</span>&#123;</span></span><br><span class="line">            width: 200px;</span><br><span class="line">            height: 200px;</span><br><span class="line">            border: 1px solid gray;</span><br><span class="line"><span class="css">            <span class="comment">/* 设置执行过渡效果开始的样式 */</span></span></span><br><span class="line">            background-color: lightcoral;</span><br><span class="line"><span class="css">            <span class="comment">/* 用来执行过渡效果的样式属性 */</span></span></span><br><span class="line">            transition-property: background-color,width;</span><br><span class="line"><span class="css">            <span class="comment">/*  */</span></span></span><br><span class="line">            transition-duration: 1s,2s;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="comment">/* 触发过渡效果的方式 */</span></span></span><br><span class="line"><span class="css">        <span class="selector-class">.box</span><span class="selector-pseudo">:hover</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="comment">/* 设置执行过度效果最终的样式 */</span></span></span><br><span class="line">            background-color: lightyellow;</span><br><span class="line">            width: 300px;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>使用合属性</strong><br>用逗号分隔每个过渡。例如 <code>transition: width 2s linear,height 2s linear; </code>表示 2 秒匀速过渡.</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.box</span>&#123;</span></span><br><span class="line">            width: 200px;</span><br><span class="line">            height: 200px;</span><br><span class="line">            background: lightcoral;</span><br><span class="line">            transition: width 2s,height 2s;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.box</span><span class="selector-pseudo">:hover</span>&#123;</span></span><br><span class="line">            width: 400px;</span><br><span class="line">            height: 400px;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>JavaScript触发：用JavaScript脚本触发</strong></li></ul><h1 id="检测过渡是否完成"><a href="#检测过渡是否完成" class="headerlink" title="检测过渡是否完成"></a>检测过渡是否完成</h1><p>须使用<code> JavaScript</code> 使用.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>transitionEnd事件<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">    <span class="selector-class">.box</span> &#123;</span></span><br><span class="line">      width: 200px;</span><br><span class="line">      height: 200px;</span><br><span class="line">      border: 1px solid gray;</span><br><span class="line">      background: lightcoral;</span><br><span class="line">      transition-property: background;</span><br><span class="line">      transition-duration: 2s;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">    <span class="selector-class">.box</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line">      background: lightyellow;</span><br><span class="line">    &#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;box&quot;</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> box = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;box&#x27;</span>);</span></span><br><span class="line"><span class="javascript">    box.addEventListener(<span class="string">&#x27;transitionend&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">      <span class="built_in">console</span>.log(<span class="string">&#x27;这个过渡执行完毕了......&#x27;</span>)</span></span><br><span class="line">    &#125;)</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Web前端 </category>
          
          <category> HTML+CSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML+CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前端三剑客🔗变形</title>
      <link href="2021/01/19/%E5%89%8D%E7%AB%AF/HTML+CSS/%E5%89%8D%E7%AB%AF%E4%B8%89%E5%89%91%E5%AE%A2_%E5%8F%98%E5%BD%A2/"/>
      <url>2021/01/19/%E5%89%8D%E7%AB%AF/HTML+CSS/%E5%89%8D%E7%AB%AF%E4%B8%89%E5%89%91%E5%AE%A2_%E5%8F%98%E5%BD%A2/</url>
      
        <content type="html"><![CDATA[<h1 id="变形"><a href="#变形" class="headerlink" title="变形"></a>变形</h1><p>通过修改坐标，CSS <code>transform</code> 属性可以在<strong>不影响正常文档流的情况下</strong>改变作用内容的位置。CSS<code>transform </code>包括一系列 CSS 属性，通过这些属性可以对 HTML 元素进行变形。可以进行的变形包括旋转，倾斜，缩放以及位移，同时适用于平面以及三维空间。<br>在空间中实现 CSS 变形会稍微复杂一点。首先必须设置一个透视点 (perspective) 来配置 3D 空间然后定义 2D 元素在空间中的变形。</p><h1 id="变形属性"><a href="#变形属性" class="headerlink" title="变形属性"></a>变形属性</h1><ul><li><p><code>transform</code><br><code>transform: none| &lt;transform-list&gt;</code><br>属性允许你修改 CSS 视觉格式模型的坐标空间。使用它，元素可以被转换 (<code>translate</code>) 旋转 (<code>rotate</code>) 、缩放 (<code>scale</code>) 候斜 (<code>skew</code>)。<br>该 CSS 属性可用于内联元素和块级元素。其默认值为 none, 表示匹配元素不进行任何变形。<br><code>transorm-list</code> 表示作用于元素的一个或多个变形的 CSS 函数。如果为多个函数的话，使用空格进行分隔。</p></li><li><p><code>transform-origin</code><br>  CSS 属性让你更改一个元素变形的原点默认情况，变形的原点在元素的中心点，或者是元素 X 轴和 Y 轴的 50% 处。</p><ul><li>一个值：<br>必须是，，或 <code>left</code>,<code> center</code>, <code>right</code>,<code> top</code>,<code> bottom</code> 关键字中的一个。</li><li>两个值：<br>其中一个必须是，，或 <code>left</code>, <code>center</code>, <code>right</code> 关键字中的一个。<br>另一个必须是，，或 <code>top</code>, <code>center</code>, <code>bottom</code> 关键字中的一个。</li><li>三个值：<br>前两个值和只有两个值时的用法相同。<br>第三个值必须是。它始终代表 Z 轴偏移量。</li></ul></li><li><p><code>transform-style</code><br>  设置元素的子元素是位于 3D 空间中还是平面中。<br>  <code>transform-style: flat | preserve-3d</code></p><ul><li><code>flat</code><br>设置元素的子元素位于该元素的平面中。</li><li><code>preserve-3d</code><br>指示元素的子元素应位于 3D 空间中。</li></ul></li><li><p><code>perspective</code><br>指定了观察者与 z=0 平面的距离，使具有三维位置变换的元素产生透视效果。 z&gt;0 的三维元素比正常大，而 z&lt;0 时则比正常小，大小程度由该属性的值决定。<br>三维元素在观察者后面的部分不会绘制出来，即 z 轴坐标值大于<code> perspective</code> 属性值的部分。<br>默认情况下，消失点位于元素的中心，但是可以通过设置 <code>perspective-origin</code> 属性来改变其位置。</p></li><li><p><code>perspective-origin</code><br>指定了观察者的位置，用作 <code>perspective </code>属性的消失点。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 一个值的时候 */</span></span><br><span class="line"><span class="selector-tag">perspective-origin</span>: <span class="selector-tag">x-position</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 两个值的时候 */</span></span><br><span class="line"><span class="selector-tag">perspective-origin</span>: <span class="selector-tag">x-position</span> <span class="selector-tag">y-position</span>;</span><br></pre></td></tr></table></figure></li><li><p><code>backface-visibility</code><br>元素的背面是其正面的镜像。虽然在 2D 中不可见，但是当变换导致元素在 3D 空间中旋转时，背面可以变得可见。 （此属性对 2D 变换没有影响，它没有透视。）<br>其只有两个值</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">backface-visibility</span>: <span class="selector-tag">visible</span>;</span><br><span class="line"><span class="selector-tag">backface-visibility</span>: <span class="selector-tag">hidden</span>;</span><br></pre></td></tr></table></figure></li></ul><h1 id="2D变形"><a href="#2D变形" class="headerlink" title="2D变形"></a>2D变形</h1><p>每个效果都可以称为变形（transform），它们可以分别操控元素发生平移、旋转、缩放、倾斜等变化</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!<span class="selector-tag">--</span>设置变形函数，可以是一个，也可以是多个，中间以空格分开<span class="selector-tag">--</span>&gt;</span><br><span class="line"><span class="selector-tag">transform</span>:<span class="selector-attr">[transform-function]</span> *;</span><br></pre></td></tr></table></figure><ul><li>变形函数<ul><li><code>ranslate()</code>：平移函数，基于X、Y坐标重新定位元素的位置</li><li><code>scale()</code>：缩放函数，可以使任意元素对象尺寸发生变化</li><li><code>rotate()</code>：旋转函数，取值是一个度数值</li><li><code>skew()</code>：倾斜函数，取值是一个度数值</li></ul></li></ul><h2 id="2D平移"><a href="#2D平移" class="headerlink" title="2D平移"></a>2D平移</h2><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@983d5a30dd76f3d51890cfbff1269ac6aed6960c/2021/01/19/b665058d6f1a7b8a4223799b6b4a07b4.png"></p><ul><li><p><code>translate(x,y)</code>; 平移不脱离文档流</p><ul><li>x: 表示水平方向</li><li>y: 表示垂直方向</li></ul></li><li><p><code>translateX(x)</code></p><ul><li>表示只设置X轴的位移</li></ul></li><li><p><code>translate(y)</code></p><ul><li>表示只设置Y轴的位移</li></ul></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.box</span>&#123;</span></span><br><span class="line">            width: 200px;</span><br><span class="line">            height: 200px;</span><br><span class="line">            background: lightcoral;</span><br><span class="line">            transform: translate(100px,100px);</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.test</span>&#123;</span></span><br><span class="line">            width: 200px;</span><br><span class="line">            height: 200px;</span><br><span class="line">            background: lightskyblue;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;test&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="2D缩放"><a href="#2D缩放" class="headerlink" title="2D缩放"></a>2D缩放</h2><p>根据元素中心点缩放</p><ul><li><p><code>scale(X,Y)</code>;</p><ul><li>X 表示水平方向</li><li>Y 表示垂直方向</li><li>值范围<ul><li>0~1 之间的值，表示缩小</li><li>大于 1，表示放大</li><li>注意：以元素中心点为核心进行缩放</li></ul></li></ul></li><li><p><code>scaleX(X)</code><br>表示只设置X轴的缩放</p></li><li><p><code>scaleY(xy)</code><br>表示只设置Y轴的缩放</p></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.box</span> &#123;</span></span><br><span class="line">            width: 200px;</span><br><span class="line">            height: 200px;</span><br><span class="line">            background: lightcoral;</span><br><span class="line"><span class="css">            <span class="selector-tag">transform</span>: <span class="selector-tag">scale</span>(0<span class="selector-class">.5</span>,0<span class="selector-class">.5</span>);</span></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>改变中心点</li></ul><p><strong>缩放的默认中心点为元素中心，并不是左上角。</strong></p><p>可以使用<code> transform-origin</code> 属性，可以使用像素单位，厘米单位以及关键字（<code>left,top </code>等）</p><p>移动后的效果：<br><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/03/03/20200303150347.png"><br>不移动的效果：<br><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/03/03/20200303150506.png"><br>代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.box</span> &#123;</span></span><br><span class="line">            width: 200px;</span><br><span class="line">            height: 200px;</span><br><span class="line">            background: lightcoral;</span><br><span class="line"><span class="css">            <span class="selector-tag">transform</span>: <span class="selector-tag">scale</span>(1<span class="selector-class">.5</span>,1<span class="selector-class">.5</span>);</span></span><br><span class="line">            transform-origin: left top;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="2D倾斜"><a href="#2D倾斜" class="headerlink" title="2D倾斜"></a>2D倾斜</h2><ul><li><p><code>skew(x,y)</code></p><ul><li>x代表 X 轴</li><li>y代表 Y 轴</li></ul></li><li><p><code>skewX(x)</code><br>  表示只设置X轴的倾斜</p></li><li><p><code>skewY(y)</code><br>  表示只设置Y轴的倾斜</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@839819058f841b58b4a6b4a8c54c55afa447a617/2021/01/19/2c31e93342325349621dffeec18dad36.png"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.box</span>&#123;</span></span><br><span class="line">            width: 200px;</span><br><span class="line">            height: 200px;</span><br><span class="line">            background: lightpink;</span><br><span class="line">            margin: 200px 200px;</span><br><span class="line">            transform: skew(45deg);</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>倾斜的过程（从零开始逐渐往上加）<br><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/03/03/20200303160421.gif"></p><h2 id="2D旋转"><a href="#2D旋转" class="headerlink" title="2D旋转"></a>2D旋转</h2><p>rotate () 函数用于通过指定的角度将元素根据原点进行旋转。该函数主要用于 2D 空间进行旋转。如果该角度值为正值的话，表示顺时针旋转；如果该角度值为负值的话，则表示逆时针旋转。<br>rotate(angle) 其中：</p><ul><li>angle: 表示旋转的角度值，单位为 deg。<ul><li>正值<br>顺时针旋转</li><li>负值<br>逆时针旋转</li></ul></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2021/01/03/bc1af54de43591fbcf023075992a3fd1.png"></p><div class="note warning flat"><p>rotate( )函数只是旋转，而不会改变元素的形状<br>skew( )函数是倾斜，元素不会旋转，会改变元素的形状</p></div><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.box</span> &#123;</span></span><br><span class="line">            width: 200px;</span><br><span class="line">            height: 200px;</span><br><span class="line">            background: lightcoral;</span><br><span class="line">            margin: 200px 200px;</span><br><span class="line">            transform: rotate(45deg);</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="3D变形"><a href="#3D变形" class="headerlink" title="3D变形"></a>3D变形</h1><p>在 3D 效果中，使用 X 与 Y 属性与 2D 效果类似。唯一不同的是 Z 的属性。使用 Z 的属性需要添加 <code>perspective </code>属性，即平面与观察者之间的距离。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2021/01/03/0413869516d5c59bac2e22565b82893b.png"></p><ul><li><strong>rotateX()</strong><ul><li>rotateX()函数用于指定元素围绕X轴旋转。</li></ul></li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">transform</span><span class="selector-pseudo">:rotateX(a)</span>;</span><br></pre></td></tr></table></figure><blockquote><p>参数a用于定义旋转的角度值，单位为deg，其值可以是正数也可以是负数。如果值为正，元素将围绕X轴顺时针旋转；反之，如果值为负，元素围绕X轴逆时针旋转。</p></blockquote><ul><li><strong>rotateY()</strong><ul><li>rotateY()函数用于指定一个元素围绕Y轴旋转。</li></ul></li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">transform</span><span class="selector-pseudo">:rotateY(a)</span>;</span><br></pre></td></tr></table></figure><blockquote><p>参参数a与rotateX(a)中的a含义相同，用于定义旋转的角度。如果值为正，元素围绕Y轴顺时针旋转；反之，如果值为负，元素围绕Y轴逆时针旋转。</p></blockquote><ul><li><strong>translate3D()</strong></li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">rotate3d</span>(<span class="selector-tag">x</span>,<span class="selector-tag">y</span>,<span class="selector-tag">z</span>,<span class="selector-tag">angle</span>);</span><br></pre></td></tr></table></figure><ul><li>x：代表横向坐标位移向量的长度。</li><li>y：代表纵向坐标位移向量的长度。</li><li>z：代表Z轴位移向量的长度。此值不能是一个百分比值，否则将会视为无效值。</li><li>angle：角度值，主要用来指定元素在3D空间旋转的角度，如果其值为正，元素顺时针旋转，反之元素逆时针旋转。</li></ul><h2 id="3D转换属性"><a href="#3D转换属性" class="headerlink" title="3D转换属性"></a>3D转换属性</h2><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2021/01/03/d91255118ceacc1e1f44e3687d78e309.png"></p><h3 id="transform-origin"><a href="#transform-origin" class="headerlink" title="transform-origin"></a>transform-origin</h3><ul><li><strong>变形操作</strong>都是以元素的<strong>中心点</strong>为基准进行的，如果需要改变这个中心点，可以使用<strong>transform-origin属性</strong>。</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">transform-origin</span>: <span class="selector-tag">x-axis</span> <span class="selector-tag">y-axis</span> <span class="selector-tag">z-axis</span>;</span><br></pre></td></tr></table></figure><ul><li>transform-origin属性包含三个参数，其默认值分别为50% 50% 0，各参数的具体含义</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2021/01/03/a07378d34d1555cd7ec0f94bd2b8cbeb.png"></p><ul><li><strong>transform-origin</strong><br>CSS属性更改一个元素变形的原点。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2021/01/03/1231e6f4857ca90914306e996a972ea1.png"></p><h3 id="transform-style"><a href="#transform-style" class="headerlink" title="transform-style"></a>transform-style</h3><p>transform-style 设置元素的子元素是位于 3D 空间中还是平面中</p><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2021/01/03/517dcaed482e40466e9f7b5044aad37b.png"></p><h3 id="perspective"><a href="#perspective" class="headerlink" title="perspective"></a>perspective</h3><p>perspective指定了观察者与 z=0 平面的距离，使具有三维位置变换的元素产生透视效果。不设置的话，就会在2d平面投影，无意义。</p><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2021/01/03/a9bedd7999a3921b2a0b4aed348a948e.png"></p><h3 id="perspective-origin"><a href="#perspective-origin" class="headerlink" title="perspective-origin"></a>perspective-origin</h3><p>透视原点perspective-origin是指观察者的位置，通常我们用该属性来定义视线灭点，也即视线消失的位置。</p><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2021/01/03/c4f25ab647f5419e49a3b1d2d046cf3a.png"></p><h3 id="backface-visibility"><a href="#backface-visibility" class="headerlink" title="backface-visibility"></a>backface-visibility</h3><p>backface-visibility 指定当元素背面朝向观察者时是否可见。</p><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2021/01/03/8a157b475c964b6607099a080dd012d2.png"></p><h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><h3 id="rotateX"><a href="#rotateX" class="headerlink" title="rotateX()"></a>rotateX()</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>rotateX()<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span></span><br><span class="line">div&#123;</span><br><span class="line">position: relative;</span><br><span class="line">perspective: 800px;</span><br><span class="line">border: 1px solid red;</span><br><span class="line">height: 200px;</span><br><span class="line">width: 200px;</span><br><span class="line">margin-top: 20px;</span><br><span class="line">&#125;</span><br><span class="line">div img&#123;</span><br><span class="line">position: absolute;</span><br><span class="line"><span class="css"><span class="selector-tag">top</span><span class="selector-pseudo">:0</span>;</span></span><br><span class="line"><span class="css"><span class="selector-tag">transition</span>: <span class="selector-tag">all</span> 2<span class="selector-tag">s</span> <span class="selector-tag">ease</span>;<span class="comment">/*过渡动画*/</span></span></span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-tag">div</span> <span class="selector-tag">img</span><span class="selector-pseudo">:hover</span>&#123;</span></span><br><span class="line"><span class="css"><span class="selector-tag">transform</span>: <span class="selector-tag">rotateX</span>(360<span class="selector-tag">deg</span>);<span class="comment">/*鼠标移入动画，绕x轴旋转*/</span></span></span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;images/1.png&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2021/01/03/8a0ecd15f5318f79b07971ec6224d474.png"></p><h3 id="rotateY"><a href="#rotateY" class="headerlink" title="rotateY()"></a>rotateY()</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>rotateY()<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span></span><br><span class="line">div&#123;</span><br><span class="line">position: relative;</span><br><span class="line">perspective: 800px;</span><br><span class="line">border: 1px solid red;</span><br><span class="line">height: 200px;</span><br><span class="line">width: 200px;</span><br><span class="line">margin-top: 20px;</span><br><span class="line">&#125;</span><br><span class="line">div img&#123;</span><br><span class="line">position: absolute;</span><br><span class="line"><span class="css"><span class="selector-tag">top</span><span class="selector-pseudo">:0</span>;</span></span><br><span class="line"><span class="css"><span class="selector-tag">transition</span>: <span class="selector-tag">all</span> 2<span class="selector-tag">s</span> <span class="selector-tag">ease</span>;<span class="comment">/*过渡动画*/</span></span></span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-tag">div</span> <span class="selector-tag">img</span><span class="selector-pseudo">:hover</span>&#123;</span></span><br><span class="line"><span class="css"><span class="selector-tag">transform</span>: <span class="selector-tag">rotateY</span>(360<span class="selector-tag">deg</span>);<span class="comment">/*鼠标移入动画，绕y轴旋转*/</span></span></span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;images/1.png&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2021/01/03/a0b4f8ac4fd2f0e5d741aa13818da751.png"></p><h3 id="rotateZ"><a href="#rotateZ" class="headerlink" title="rotateZ()"></a>rotateZ()</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>rotateZ()<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span></span><br><span class="line">div&#123;</span><br><span class="line">position: relative;</span><br><span class="line">perspective: 800px;</span><br><span class="line">border: 1px solid red;</span><br><span class="line">height: 200px;</span><br><span class="line">width: 200px;</span><br><span class="line">margin-top: 20px;</span><br><span class="line">&#125;</span><br><span class="line">div img&#123;</span><br><span class="line">position: absolute;</span><br><span class="line"><span class="css"><span class="selector-tag">top</span><span class="selector-pseudo">:0</span>;</span></span><br><span class="line"><span class="css"><span class="selector-tag">transition</span>: <span class="selector-tag">all</span> 2<span class="selector-tag">s</span> <span class="selector-tag">ease</span>;<span class="comment">/*过渡动画*/</span></span></span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-tag">div</span> <span class="selector-tag">img</span><span class="selector-pseudo">:hover</span>&#123;</span></span><br><span class="line"><span class="css"><span class="selector-tag">transform</span>: <span class="selector-tag">rotateZ</span>(360<span class="selector-tag">deg</span>);<span class="comment">/*鼠标移入动画，绕z轴旋转*/</span></span></span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;images/1.png&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2021/01/03/72625de330cea9fb80651cea4b1d6e92.png"></p><h3 id="rotate3d"><a href="#rotate3d" class="headerlink" title="rotate3d()"></a>rotate3d()</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>rotate3d()<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span></span><br><span class="line">div&#123;</span><br><span class="line">position: relative;</span><br><span class="line">perspective: 800px;</span><br><span class="line">border: 1px solid red;</span><br><span class="line">height: 200px;</span><br><span class="line">width: 200px;</span><br><span class="line">margin-top: 20px;</span><br><span class="line">&#125;</span><br><span class="line">div img&#123;</span><br><span class="line">position: absolute;</span><br><span class="line"><span class="css"><span class="selector-tag">top</span><span class="selector-pseudo">:0</span>;</span></span><br><span class="line"><span class="css"><span class="selector-tag">transition</span>: <span class="selector-tag">all</span> 2<span class="selector-tag">s</span> <span class="selector-tag">ease</span>;<span class="comment">/*过渡动画*/</span></span></span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-tag">div</span> <span class="selector-tag">img</span><span class="selector-pseudo">:hover</span>&#123;</span></span><br><span class="line"><span class="css"><span class="selector-tag">transform</span>: <span class="selector-tag">rotate3d</span>(100,100,100,360<span class="selector-tag">deg</span>);<span class="comment">/*鼠标移入动画，三维空间 x,y,z，angle*/</span></span></span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;images/1.png&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2021/01/03/3d8b3acfb45337428f2b85cd0e71d243.png"></p><h3 id="translateX"><a href="#translateX" class="headerlink" title="translateX()"></a>translateX()</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>translateX()<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span></span><br><span class="line">div&#123;</span><br><span class="line">position: relative;</span><br><span class="line">perspective: 800px;</span><br><span class="line">border: 1px solid red;</span><br><span class="line">height: 200px;</span><br><span class="line">width: 200px;</span><br><span class="line">margin-top: 20px;</span><br><span class="line">&#125;</span><br><span class="line">div img&#123;</span><br><span class="line">position: absolute;</span><br><span class="line"><span class="css"><span class="selector-tag">top</span><span class="selector-pseudo">:0</span>;</span></span><br><span class="line"><span class="css"><span class="selector-tag">transition</span>: <span class="selector-tag">all</span> 2<span class="selector-tag">s</span> <span class="selector-tag">ease</span>;<span class="comment">/*过渡动画*/</span></span></span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-tag">div</span> <span class="selector-tag">img</span><span class="selector-pseudo">:hover</span>&#123;</span></span><br><span class="line"><span class="css"><span class="selector-tag">transform</span><span class="selector-pseudo">:translateX(100px)</span>;<span class="comment">/*鼠标移入动画，平移*/</span></span></span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;images/1.png&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2021/01/03/ace5d94289902b8f182bb28676bbdac5.png"></p><h3 id="translateY"><a href="#translateY" class="headerlink" title="translateY()"></a>translateY()</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>translateY()<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span></span><br><span class="line">div&#123;</span><br><span class="line">position: relative;</span><br><span class="line">perspective: 800px;</span><br><span class="line">border: 1px solid red;</span><br><span class="line">height: 200px;</span><br><span class="line">width: 200px;</span><br><span class="line">margin-top: 20px;</span><br><span class="line">&#125;</span><br><span class="line">div img&#123;</span><br><span class="line">position: absolute;</span><br><span class="line"><span class="css"><span class="selector-tag">top</span><span class="selector-pseudo">:0</span>;</span></span><br><span class="line"><span class="css"><span class="selector-tag">transition</span>: <span class="selector-tag">all</span> 2<span class="selector-tag">s</span> <span class="selector-tag">ease</span>;<span class="comment">/*过渡动画*/</span></span></span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-tag">div</span> <span class="selector-tag">img</span><span class="selector-pseudo">:hover</span>&#123;</span></span><br><span class="line"><span class="css"><span class="selector-tag">transform</span><span class="selector-pseudo">:translateY(100px)</span>;<span class="comment">/*鼠标移入动画，平移*/</span></span></span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;images/1.png&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2021/01/03/ab18f931549ca78eb85403107c323993.png"></p><h3 id="translateZ"><a href="#translateZ" class="headerlink" title="translateZ()"></a>translateZ()</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>translateZ()<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span></span><br><span class="line">div&#123;</span><br><span class="line">position: relative;</span><br><span class="line">perspective: 800px;</span><br><span class="line">border: 1px solid red;</span><br><span class="line">height: 200px;</span><br><span class="line">width: 200px;</span><br><span class="line">margin-top: 20px;</span><br><span class="line">&#125;</span><br><span class="line">div img&#123;</span><br><span class="line">position: absolute;</span><br><span class="line"><span class="css"><span class="selector-tag">top</span><span class="selector-pseudo">:0</span>;</span></span><br><span class="line"><span class="css"><span class="selector-tag">transition</span>: <span class="selector-tag">all</span> 2<span class="selector-tag">s</span> <span class="selector-tag">ease</span>;<span class="comment">/*过渡动画*/</span></span></span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-tag">div</span> <span class="selector-tag">img</span><span class="selector-pseudo">:hover</span>&#123;</span></span><br><span class="line"><span class="css"><span class="selector-tag">transform</span><span class="selector-pseudo">:translateZ(-100px)</span>;<span class="comment">/*鼠标移入动画，平移*/</span></span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;images/1.png&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2021/01/03/edead3df0c378ad4b2b68e0eb67263fa.png"></p><h3 id="tansform-origin"><a href="#tansform-origin" class="headerlink" title="tansform-origin"></a>tansform-origin</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>transform-origin旋转原点改变()<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span></span><br><span class="line">div&#123;</span><br><span class="line">position: relative;</span><br><span class="line">perspective: 800px;</span><br><span class="line">border: 1px solid red;</span><br><span class="line">height: 200px;</span><br><span class="line">width: 200px;</span><br><span class="line">margin-top: 100px;</span><br><span class="line">margin-left: 100px;</span><br><span class="line">&#125;</span><br><span class="line">div img&#123;</span><br><span class="line">position: absolute;</span><br><span class="line"><span class="css"><span class="selector-tag">top</span><span class="selector-pseudo">:0</span>;</span></span><br><span class="line"><span class="css"><span class="selector-tag">transition</span>: <span class="selector-tag">all</span> 2<span class="selector-tag">s</span> <span class="selector-tag">ease</span>;<span class="comment">/*过渡动画*/</span></span></span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-tag">div</span> <span class="selector-tag">img</span><span class="selector-pseudo">:hover</span>&#123;</span></span><br><span class="line">transform: rotate(360deg);</span><br><span class="line"><span class="css"><span class="comment">/*transform-origin:x,y,z;默认50% 50% 0；z只有长度设置*/</span></span></span><br><span class="line"><span class="css"><span class="comment">/*transform-origin: center;/*x,y原点在中心*/</span></span></span><br><span class="line"><span class="css"><span class="comment">/*transform-origin: top left;/*原点在左上角 y，x的取值*/</span></span></span><br><span class="line"><span class="css"><span class="comment">/*transform-origin: 50px 50px;/*x,y偏移50px为原点*/</span></span></span><br><span class="line"><span class="css"><span class="selector-tag">transform-origin</span>: <span class="selector-tag">bottom</span> <span class="selector-tag">right</span> 60<span class="selector-tag">px</span>;<span class="comment">/*x底部，y右,z方向60px*/</span></span></span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;images/1.png&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2021/01/03/46d9ea3928d52d2cbe4831df04b37aad.png"></p>]]></content>
      
      
      <categories>
          
          <category> Web前端 </category>
          
          <category> HTML+CSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML+CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前端三剑客🔗渐变</title>
      <link href="2021/01/19/%E5%89%8D%E7%AB%AF/HTML+CSS/%E5%89%8D%E7%AB%AF%E4%B8%89%E5%89%91%E5%AE%A2_%E6%B8%90%E5%8F%98/"/>
      <url>2021/01/19/%E5%89%8D%E7%AB%AF/HTML+CSS/%E5%89%8D%E7%AB%AF%E4%B8%89%E5%89%91%E5%AE%A2_%E6%B8%90%E5%8F%98/</url>
      
        <content type="html"><![CDATA[<h1 id="什么是渐变"><a href="#什么是渐变" class="headerlink" title="什么是渐变"></a>什么是渐变</h1><p>CSS 渐变是 CSS3 的 Image 模块中新增的内容。<strong>利用 CSS 渐变替代在 HTML 页面中引入渐变效果的图片</strong>，这样减少 HTML 页面加载的时间，减小带宽的占用。<br>由于 CSS 渐变是由浏览器直接生成，在 HTML 页面缩放时的效果要比图片更好，使得可以更灵活、便捷地调整 HTML 页面布局。</p><h1 id="线性渐变"><a href="#线性渐变" class="headerlink" title="线性渐变"></a>线性渐变</h1><ul><li><p>线性渐变由一个轴 (基准线) 定义的，并且轴上每个点都具有独立的颜色。<code>lincar-gradient() </code>函数构建垂直于基准线的渐变效果，渐变的颜色取决于与之垂直相交的基准线上的色点。</p></li><li><p>基准线由包含渐变效果容器元素的中心点和一个角度来定义的。基准线上的颜色值则由不同的点来定义，包括起始点、终止点以及两者之间可选的中间点 (中间点可以有多个)</p></li><li><p>起始点是基准线和容器元素的顶点与基准线垂直线的相交点来定义。</p></li><li><p>终止点是基准线和容器元素最近顶点与基准线垂直线的相交点来定义。</p></li><li><p>渐变的 0 度是从下到上的，增加角度会使渐变顺时针旋转。</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@d04bc202913a9f026ff1170ca11acba6bacb71f7/2021/01/19/4f53cccb477dfccce3a39b78e9bfd4fd.png"></p><p>CSS linear gradient () 函数用于创建一个表示两种或多种颜色线性渐变的图片。具体语法结构如下:<br><code>linear-gradient(\&lt;angle&gt; |\&lt;S ide-or-corner&gt;, \&lt;color-stop&gt;,\&lt;color-stop&gt; +)</code><br>上述语法的参数说明:</p><ul><li>第一个参数用于定义线性渐变的方向，并且定义渐变颜色的终止位置。<ul><li>angle: 通过角度来定义渐变的方向。0 度表示渐变方向从下向上，90 度表示渐变从左向右。其角度按照顺时针方向增加。</li><li>side- or corner: 通过关键字定义渐变的方向。具有两个关键字，一个表示水平位置 (left 或 right)，一个表示垂直位置 (top 或 bottom) 。关键字的先后顺序无影响，并且都是可选的。</li></ul></li><li>第二个参数、第三个参数用于定义渐变颜色的起始点和终止点。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@3a224226ef53423120e35d2312e42850867e2fb8/2021/01/19/7841468f92d9e198130f6e530de88ab1.png"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        *&#123;</span><br><span class="line">            box-sizing: border-box;</span><br><span class="line">        &#125;</span><br><span class="line">        div&#123;</span><br><span class="line">            position: absolute;</span><br><span class="line">            top: 10px;</span><br><span class="line">            width: 200px;</span><br><span class="line">            height: 200px;</span><br><span class="line">            border: 1px solid gray;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="comment">/* 第一个基本渐变 */</span></span></span><br><span class="line"><span class="css">        <span class="selector-class">.box1</span>&#123;</span></span><br><span class="line">            left: 10px;</span><br><span class="line">            /* </span><br><span class="line">                第一个参数：设置渐变的方向</span><br><span class="line">                第二个参数。第三个参数···设置渐变的颜色</span><br><span class="line"></span><br><span class="line">             */</span><br><span class="line">            background: linear-gradient(0,blue,red);</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="comment">/* 第二个基本渐变 */</span></span></span><br><span class="line"><span class="css">        <span class="selector-class">.box2</span>&#123;</span></span><br><span class="line">            left: 220px;</span><br><span class="line">            background: linear-gradient(45deg,blue,red);</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="comment">/* 第三个基本渐变 */</span></span></span><br><span class="line"><span class="css">        <span class="selector-class">.box3</span>&#123;</span></span><br><span class="line">            left: 430px;</span><br><span class="line">            background: linear-gradient(90deg,blue,red);</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.box4</span>&#123;</span></span><br><span class="line">            left: 640px;</span><br><span class="line">            background: linear-gradient(90deg,blue,red,yellow);</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="comment">/* 使用rgba设置 */</span></span></span><br><span class="line"><span class="css">        <span class="selector-class">.box5</span>&#123;</span></span><br><span class="line">            left: 850px;</span><br><span class="line">            background: linear-gradient(90deg,rgba(255,255,255,0),red,yellow);</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.box6</span>&#123;</span></span><br><span class="line">            left: 1060px;</span><br><span class="line">            background: linear-gradient(90deg,rgba(255,255,255,0),red);</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="comment">/* 关键字设置角度 */</span></span></span><br><span class="line"><span class="css">        <span class="selector-class">.box7</span>&#123;</span></span><br><span class="line">            top: 220px;</span><br><span class="line">            left: 10px;</span><br><span class="line">            background: linear-gradient(to left,blue,red);</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.box8</span>&#123;</span></span><br><span class="line">            top: 220px;</span><br><span class="line">            left: 220px;</span><br><span class="line">            background: linear-gradient(to left bottom,blue,red);</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box3&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box4&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box5&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box6&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box7&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box8&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>渐变兼容性问题 (新的语法，因为老语法已废弃)：</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box8</span>&#123;</span><br><span class="line">    <span class="attribute">-webkit-background</span>: <span class="built_in">linear-gradient</span>(to left bottom,blue,red);</span><br><span class="line">    <span class="attribute">-moz-background</span>: <span class="built_in">linear-gradient</span>(to left bottom,blue,red);</span><br><span class="line">    <span class="attribute">-ms-background</span>: <span class="built_in">linear-gradient</span>(to left bottom,blue,red);</span><br><span class="line">    <span class="attribute">-o-background</span>: <span class="built_in">linear-gradient</span>(to left bottom,blue,red);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="头像滤镜效果"><a href="#头像滤镜效果" class="headerlink" title="头像滤镜效果"></a>头像滤镜效果</h2><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@c51ac0a18e06f4d6d90af5f90090299eab0211f8/2021/01/19/e43fc800f1fe005a7175da692daa5dee.png"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        *&#123;</span><br><span class="line">            box-sizing: border-box;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.box1</span>&#123;</span></span><br><span class="line">            width: 200px;</span><br><span class="line">            height: 200px;</span><br><span class="line">            border-radius: 50%;</span><br><span class="line">        &#125;</span><br><span class="line">        img&#123;</span><br><span class="line">            width: 200px;</span><br><span class="line">            float: left;</span><br><span class="line">            border-radius: 50%;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.lvjing</span>&#123;</span></span><br><span class="line">            position: relative;</span><br><span class="line">            width: 100%;</span><br><span class="line">            height: 100%;</span><br><span class="line"><span class="css">            <span class="selector-tag">background</span>: <span class="selector-tag">linear-gradient</span>(<span class="selector-tag">to</span> <span class="selector-tag">right</span>,<span class="selector-tag">rgba</span>(255,154,158,<span class="selector-class">.7</span>),<span class="selector-tag">rgba</span>(250,208,196,<span class="selector-class">.7</span>));</span></span><br><span class="line">            border-radius: 50%;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box1&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/02/24/20200224111924.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;lvjing&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="径向渐变"><a href="#径向渐变" class="headerlink" title="径向渐变"></a>径向渐变</h1><p>径向渐变由其中心点、边缘形状轮廓、位置以及颜色结束点定义的。</p><ul><li> 径向渐变的中心点至边缘形状以及其延伸的部分是由连续缩放的若干同心轮廓组成的。</li><li>颜色结束点用于设定虚拟渐变射线的变化方式，由中心点水平变化至右侧。颜色结束点由百分比设定，中心点为 0%，終止点为 100%。终止点为渐变射线与边缘形状相交点的渐变半径。</li><li>边缘形状只能是圆形或者椭圆形。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@3b184b8eb5669b34ec42cc3f5ef3149368e538c8/2021/01/19/9651aacb6ee196d660f1f7e1def217b7.png"></p><p>语法<code> radial-gradient(shape at position,clor-stop,color-stop+)</code></p><ul><li><code>shape</code>: 表示设置的渐变形状，默认表示椭圆</li><li><code>position</code>: 表示设置起点的坐标值<ul><li>第一个值：表示水平方向的值</li><li>第二个值：表示垂直方向的值</li></ul></li><li><code>size</code>: 表示设置渐变形状的大小<ul><li>圆形<ul><li>该值为原型的半径</li></ul></li><li>椭圆形<ul><li>值为段半径和长半径</li></ul></li></ul></li><li><code>color-stop</code>: 表示渐变的颜色，可以多个<ul><li>其后也可跟位置 例如<code> #212121 50% 50%</code></li></ul></li></ul><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@609b4ca1b26546b42f9a406e939e4696ced65dcc/2021/01/19/9c23f4838db9673981d7ba311d4939f2.png"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        * &#123;</span><br><span class="line">            box-sizing: border-box;</span><br><span class="line">        &#125;</span><br><span class="line">        div &#123;</span><br><span class="line">            position: absolute;</span><br><span class="line">            top: 10px;</span><br><span class="line">            width: 400px;</span><br><span class="line">            height: 200px;</span><br><span class="line">            border: 1px solid gray;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.box1</span> &#123;</span></span><br><span class="line">            left: 10px;</span><br><span class="line">            /* </span><br><span class="line">            </span><br><span class="line">             */</span><br><span class="line">            background: radial-gradient(blue,red);</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="comment">/* 形状为圆形 */</span></span></span><br><span class="line"><span class="css">        <span class="selector-class">.box2</span> &#123;</span></span><br><span class="line">            left: 420px;</span><br><span class="line">            background: radial-gradient(circle,blue,red);</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.box3</span> &#123;</span></span><br><span class="line">            left: 830px;</span><br><span class="line">            background: radial-gradient(ellipse,blue,red);</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.box4</span>&#123;</span></span><br><span class="line">            top: 220px;</span><br><span class="line">            left: 10px;</span><br><span class="line">            background: radial-gradient(ellipse at 0%,blue,red);</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.box5</span>&#123;</span></span><br><span class="line">            top: 220px;</span><br><span class="line">            left: 420px;</span><br><span class="line">            background: radial-gradient(ellipse at 50%,blue,red);</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.box6</span>&#123;</span></span><br><span class="line">            top: 220px;</span><br><span class="line">            left: 830px;</span><br><span class="line">            background: radial-gradient(ellipse at 100%,blue,red);</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.box7</span>&#123;</span></span><br><span class="line">            top: 430px;</span><br><span class="line">            left: 10px;</span><br><span class="line">            background: radial-gradient(ellipse at 50% 0%,blue,red);</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.box8</span>&#123;</span></span><br><span class="line">            top: 430px;</span><br><span class="line">            left: 420px;</span><br><span class="line">            background: radial-gradient(circle 215px at 50%,blue,red);</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.box9</span>&#123;</span></span><br><span class="line">            top: 830px;</span><br><span class="line">            left: 420px;</span><br><span class="line">            background: radial-gradient(ellipse 200px at 100%,blue,red);</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box3&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box4&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box5&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box6&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box7&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box8&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="小球案例"><a href="#小球案例" class="headerlink" title="小球案例"></a>小球案例</h2><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@34b873e03118a42f0a7cad9be4f411a758e59be4/2021/01/19/f1a1affd5bffeefbb392eb9873bf9c1a.png"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.box</span>&#123;</span></span><br><span class="line">            width: 200px;</span><br><span class="line">            height: 200px;</span><br><span class="line">            border-radius: 50%;</span><br><span class="line">            border: 1px solid gray;</span><br><span class="line"><span class="css">            <span class="selector-tag">background</span>: <span class="selector-tag">radial-gradient</span>(<span class="selector-tag">circle</span> <span class="selector-tag">at</span> 25% 25%,<span class="selector-id">#DFFFDF</span>,<span class="selector-id">#00DB00</span>,<span class="selector-id">#28ff28</span>);</span></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="重复渐变"><a href="#重复渐变" class="headerlink" title="重复渐变"></a>重复渐变</h1><p><code>repeating-linear-gradient() </code>函数和 <code>repeating-radial-gradient()</code> 函数来实现重复的渐变效果.</p><h2 id="重复线性渐变"><a href="#重复线性渐变" class="headerlink" title="重复线性渐变"></a>重复线性渐变</h2><p><code>repeating-linear-gradient(&lt;angle&gt; | &lt;side-or-corner&gt;, &lt;color-stop&gt;, &lt;color-stop&gt; +)</code></p><ul><li><p>第一个参数用于定义线性渐变的方向，并且定义渐变颜色的终止位置。</p><ul><li>auangle：通过角度来定义渐变的方向。0 度表示渐变方向从下向上，90 度表示渐变从左向右。其角度按照顺时针方向增加。</li><li>side-or-corner：通过关键字定义渐变的方向。具有两个关键字，一个表示水平位置（left 或 right），一个表示垂直位置（top 或 bottom）。关键字的先后顺序无影响，并且都是可选的。</li></ul></li><li><p>第二个参数、第三个参数用于定义渐变颜色的起始点和终止点。</p></li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 一个由下至上的重复线性渐变,</span></span><br><span class="line"><span class="comment">   从蓝色开始，40%后变绿，</span></span><br><span class="line"><span class="comment">   最后渐变到红色 */</span></span><br><span class="line"><span class="selector-tag">repeating-linear-gradient</span>(0<span class="selector-tag">deg</span>, <span class="selector-tag">blue</span>, <span class="selector-tag">green</span> 40%, <span class="selector-tag">red</span>);</span><br></pre></td></tr></table></figure><p>重复渐变须在颜色后边设置起始位置，否则与线性渐变相同</p><h2 id="重复径向渐变"><a href="#重复径向渐变" class="headerlink" title="重复径向渐变"></a>重复径向渐变</h2><p><code>repeating-radial-gradient([ [ &lt;shape&gt; ] || &lt;extent-keyword&gt; ] [ at &lt;position&gt; ]?)</code></p><p>上述语法的参数说明：</p><ul><li><p>shape：用于定义径向渐变的形状，包含 circle（圆形）和 ellipse（椭圆形）。</p></li><li><p>extent-keyword：用于定义径向渐变的边缘形状的位置。</p></li><li><p>position：用于定义径向渐变的中心点位置。</p></li><li><p>color-stop：用于定义径向渐变的颜色终止点。</p></li></ul><p>与重复线性渐变相似，需加上位置。也就是颜色后加上结束位置。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 一个由下至上的重复线性渐变,</span></span><br><span class="line"><span class="comment">   从蓝色开始，40%后变绿，</span></span><br><span class="line"><span class="comment">   最后渐变到红色 */</span></span><br><span class="line"><span class="selector-tag">repeating-linear-gradient</span>(0<span class="selector-tag">deg</span>, <span class="selector-tag">blue</span>, <span class="selector-tag">green</span> 40%, <span class="selector-tag">red</span>);</span><br></pre></td></tr></table></figure><h2 id="利用重复渐变实现唱片效果"><a href="#利用重复渐变实现唱片效果" class="headerlink" title="利用重复渐变实现唱片效果"></a>利用重复渐变实现唱片效果</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>重复径向渐变实现唱片效果<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.radial-gradient</span> &#123;</span></span><br><span class="line">            position: relative;</span><br><span class="line">            width: 262px; </span><br><span class="line">            height: 262px;</span><br><span class="line">            border-radius: 50%;</span><br><span class="line"><span class="css">            <span class="selector-tag">background</span>: <span class="selector-tag">linear-gradient</span>(30<span class="selector-tag">deg</span>, <span class="selector-tag">transparent</span> 40%, <span class="selector-tag">rgba</span>(42, 41, 40, <span class="selector-class">.85</span>) 40%) <span class="selector-tag">no-repeat</span> 100% 0, <span class="selector-tag">linear-gradient</span>(60<span class="selector-tag">deg</span>, <span class="selector-tag">rgba</span>(42, 41, 40, <span class="selector-class">.85</span>) 60%, <span class="selector-tag">transparent</span> 60%) <span class="selector-tag">no-repeat</span> 0 100%, <span class="selector-tag">repeating-radial-gradient</span>(<span class="selector-id">#2a2928</span>, <span class="selector-id">#2a2928</span> 4<span class="selector-tag">px</span>, <span class="selector-id">#ada9a0</span> 5<span class="selector-tag">px</span>, <span class="selector-id">#2a2928</span> 6<span class="selector-tag">px</span>);</span></span><br><span class="line">            background-size: 50% 100%, 100% 50%, 100% 100%;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.radial-gradient</span><span class="selector-pseudo">::after</span> &#123;</span></span><br><span class="line">            position: absolute;</span><br><span class="line">            top: 50%; </span><br><span class="line">            left: 50%;</span><br><span class="line">            margin: -35px;</span><br><span class="line"><span class="css">            <span class="selector-tag">border</span>: <span class="selector-tag">solid</span> 1<span class="selector-tag">px</span> <span class="selector-id">#d9a388</span>;</span></span><br><span class="line">            width: 68px; height: 68px;</span><br><span class="line">            border-radius: 50%;</span><br><span class="line"><span class="css">            <span class="selector-tag">box-shadow</span>: 0 0 0 4<span class="selector-tag">px</span> <span class="selector-id">#da5b33</span>, <span class="selector-tag">inset</span> 0 0 0 27<span class="selector-tag">px</span> <span class="selector-id">#da5b33</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">background</span>: <span class="selector-id">#b5ac9a</span>;</span></span><br><span class="line">            content: &#x27;&#x27;;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;radial-gradient&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@ec39a87c747c8f1b85a21f2164ac2d8287b98d3b/2021/01/19/b18d1f4b6e39132641f3839152c95801.png"></p>]]></content>
      
      
      <categories>
          
          <category> Web前端 </category>
          
          <category> HTML+CSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML+CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前端三剑客🔗布局</title>
      <link href="2021/01/19/%E5%89%8D%E7%AB%AF/HTML+CSS/%E5%89%8D%E7%AB%AF%E4%B8%89%E5%89%91%E5%AE%A2_%E5%B8%83%E5%B1%80/"/>
      <url>2021/01/19/%E5%89%8D%E7%AB%AF/HTML+CSS/%E5%89%8D%E7%AB%AF%E4%B8%89%E5%89%91%E5%AE%A2_%E5%B8%83%E5%B1%80/</url>
      
        <content type="html"><![CDATA[<h1 id="布局"><a href="#布局" class="headerlink" title="布局"></a>布局</h1><ul><li><p>第一步拆解页面布局：按照垂直方向进行划分</p></li><li><p>第二步拆解页面布局：按照水平方向进行分化</p></li><li><p>第三步拆解页面局部：垂直方向继续划分</p></li></ul><table><thead><tr><th align="center">布局名称</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">块布局</td><td align="center">用来布置文件。块布局包含以文档为中心的功能。</td></tr><tr><td align="center">行内布局</td><td align="center">用来布置文本</td></tr><tr><td align="center">表格布局</td><td align="center">用来布置表格</td></tr><tr><td align="center">定位布局</td><td align="center">用来对那些与其他元素五交互的定位元素进行布置</td></tr><tr><td align="center">弹性盒子布局</td><td align="center">用来布置那些可以顺利调整大小的复杂页面</td></tr><tr><td align="center">网格布局</td><td align="center">用来布置那些与一个固定网格相关的元素</td></tr></tbody></table><h1 id="普通布局"><a href="#普通布局" class="headerlink" title="普通布局"></a>普通布局</h1><p>头部、内容、底部</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.container</span> &#123;</span></span><br><span class="line">            width: 80%;</span><br><span class="line">            margin: 30px auto;</span><br><span class="line"><span class="css">            <span class="selector-tag">border</span><span class="selector-pseudo">:2px</span> <span class="selector-tag">solid</span> <span class="selector-tag">red</span>;</span></span><br><span class="line">            box-sizing: border-box;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.container</span> <span class="selector-tag">header</span> &#123;</span></span><br><span class="line">            width: 100%;</span><br><span class="line">            height: 30px;</span><br><span class="line"><span class="css">            <span class="selector-tag">background</span>: <span class="selector-id">#faa</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.container</span> <span class="selector-class">.content</span> &#123;</span></span><br><span class="line">            width: 80%;</span><br><span class="line">            height: 300px;</span><br><span class="line">            margin: 0 auto;</span><br><span class="line"><span class="css">            <span class="selector-tag">background</span>: <span class="selector-id">#aaf</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.container</span> <span class="selector-tag">footer</span> &#123;</span></span><br><span class="line">            height: 50px;</span><br><span class="line"><span class="css">            <span class="selector-tag">background</span>: <span class="selector-id">#afa</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">header</span>&gt;</span>头部<span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;content&quot;</span>&gt;</span>body<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">footer</span>&gt;</span>尾部<span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@4eb161bb756fc9acbe11779b2dc77c0510eb9eeb/2021/01/19/67a9ad02e915fbab814f57116931679c.png"></p><h1 id="居中布局"><a href="#居中布局" class="headerlink" title="居中布局"></a>居中布局</h1><h2 id="垂直居中"><a href="#垂直居中" class="headerlink" title="垂直居中"></a>垂直居中</h2><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@9bdb3a43742f493582a5877cd0bf3553f6286c9e/2021/01/19/b00e0b03393799d96168c662adfd58da.png"></p><p>实现方法</p><ul><li><code>vertical-align</code></li></ul><p>前提：为父级元素设置 display</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">1. 将父级元素改为 display:table-cell</span></span><br><span class="line"><span class="comment">2. 为父级元素设置 vertical-align：middle</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><ul><li><strong>定位 (相对定位)</strong></li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1. 为父级开启相对定位</span><br><span class="line">2. 为子级元素开启绝对定位</span><br><span class="line">3. 设置属性</span><br><span class="line">    <span class="selector-tag">top</span><span class="selector-pseudo">:50</span>%</span><br><span class="line">    <span class="selector-tag">transform</span><span class="selector-pseudo">:translateX(</span>一半的值)</span><br><span class="line">    也可以使用<span class="selector-tag">margin-top</span></span><br></pre></td></tr></table></figure><p>真实代码</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 第一种方式 --&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.a</span> &#123;</span></span><br><span class="line">            height: 600px;</span><br><span class="line">            width: 700px;</span><br><span class="line">            border: 1px solid gray;</span><br><span class="line"><span class="css">            <span class="comment">/* 为父级设置vertical-align属性即可 */</span></span></span><br><span class="line">            display: table-cell;</span><br><span class="line">            vertical-align: middle;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.b</span> &#123;</span></span><br><span class="line">            width: 300px;</span><br><span class="line">            height: 350px;</span><br><span class="line">            background-color: lightcoral;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;a&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;b&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 第二种方式 --&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.a</span> &#123;</span></span><br><span class="line">            height: 600px;</span><br><span class="line">            width: 700px;</span><br><span class="line">            border: 1px solid gray;</span><br><span class="line">            position: relative;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.b</span> &#123;</span></span><br><span class="line">            width: 300px;</span><br><span class="line">            height: 300px;</span><br><span class="line">            background-color: lightcoral;</span><br><span class="line">            position: absolute;</span><br><span class="line">            top: 50%;</span><br><span class="line"></span><br><span class="line"><span class="css">            <span class="comment">/* 此div的高度的50% */</span></span></span><br><span class="line">            transform: translateY(-150px);</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;a&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;b&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="水平居中"><a href="#水平居中" class="headerlink" title="水平居中"></a>水平居中</h2><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@111857ac5de15d57547c8bdb76afd2b847ca4e2d/2021/01/19/5bbac4e5423113a8f94afc203b8e038e.png"><br>实现方法</p><ul><li><p>外边距（<code>margin: 0 auto</code>）</p></li><li><p>如果当前容器元素或后代元素中包含文本内容，该文本内容居中显示<br>text-align 属性 (可继承) 原本的作用就是实现文本居中显示</p></li><li><p>定位（一般使用相对定位，因为不脱离文档流）<br>只有在父级容器开启定位后，才是相对于父级进行定位</p></li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">a)将 left 偏移量设置为 50%</span></span><br><span class="line"><span class="comment">b)将子级元素向左移动(子级元素宽度的1/2)</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="selector-tag">transform</span>: <span class="selector-tag">translateX</span>(<span class="selector-tag">-150px</span>) <span class="selector-tag">-</span> <span class="selector-tag">CSS3</span>新增属性</span><br><span class="line"><span class="selector-tag">margin-left</span>: <span class="selector-tag">-150px</span></span><br></pre></td></tr></table></figure><p>真实代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--第一种方法--&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.a</span> &#123;</span></span><br><span class="line">            height: 300px;</span><br><span class="line">            width: 400px;</span><br><span class="line">            border: 1px solid gray;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.b</span> &#123;</span></span><br><span class="line">            width: 200px;</span><br><span class="line">            height: 150px;</span><br><span class="line">            background-color: lightcoral;</span><br><span class="line">            margin: 0 auto;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;a&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;b&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--第二种方法--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.a</span> &#123;</span></span><br><span class="line">            height: 300px;</span><br><span class="line">            width: 400px;</span><br><span class="line">            border: 1px solid gray;</span><br><span class="line">            /*  </span><br><span class="line">            为父级设置text-align属性</span><br><span class="line">                - 子级必须是行内块级元素</span><br><span class="line">                - 因为此属性具有遗传性，因此会将子元素中的元素也居中</span><br><span class="line">             */</span><br><span class="line">            text-align: center;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.b</span> &#123;</span></span><br><span class="line">            width: 200px;</span><br><span class="line">            height: 150px;</span><br><span class="line">            background-color: lightcoral;</span><br><span class="line">            display: inline-block;</span><br><span class="line"><span class="css">            <span class="comment">/* 解决子级元素居中问题 */</span></span></span><br><span class="line">            text-align: left;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;a&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;b&quot;</span>&gt;</span>测试文字<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--第三种--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.a</span> &#123;</span></span><br><span class="line">            height: 300px;</span><br><span class="line">            width: 400px;</span><br><span class="line">            border: 1px solid gray;</span><br><span class="line">            position: relative;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.b</span> &#123;</span></span><br><span class="line">            width: 200px;</span><br><span class="line">            height: 150px;</span><br><span class="line">            background-color: lightcoral;</span><br><span class="line">            left: 50%;</span><br><span class="line">            /* </span><br><span class="line">            父级元素必须开启定位</span><br><span class="line">            此值为此元素宽度的一半（50%）</span><br><span class="line">             */</span><br><span class="line">            transform: translateX(100px);</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;a&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;b&quot;</span>&gt;</span>测试文字<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="同时垂直水平居中"><a href="#同时垂直水平居中" class="headerlink" title="同时垂直水平居中"></a>同时垂直水平居中</h2><p><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/02/26/20200226181844.png"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--第一种方法--&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.a</span> &#123;</span></span><br><span class="line">            height: 300px;</span><br><span class="line">            width: 400px;</span><br><span class="line">            border: 1px solid gray;</span><br><span class="line">            position: relative;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.b</span> &#123;</span></span><br><span class="line">            width: 200px;</span><br><span class="line">            height: 150px;</span><br><span class="line">            background-color: lightcoral;</span><br><span class="line">            position: absolute;</span><br><span class="line">            left: 50%;</span><br><span class="line">            top: 50%;</span><br><span class="line">            transform: translate(-50%,-50%);</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;a&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;b&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--第二种方法--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.a</span> &#123;</span></span><br><span class="line">            height: 300px;</span><br><span class="line">            width: 400px;</span><br><span class="line">            border: 1px solid gray;</span><br><span class="line">            display: table-cell;</span><br><span class="line">            vertical-align: middle;</span><br><span class="line">            text-align: center;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.b</span> &#123;</span></span><br><span class="line">            width: 200px;</span><br><span class="line">            height: 150px;</span><br><span class="line">            background-color: lightcoral;</span><br><span class="line">            margin: 0 auto;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;a&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;b&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--第三·种方法--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.a</span> &#123;</span></span><br><span class="line">            height: 300px;</span><br><span class="line">            width: 400px;</span><br><span class="line">            border: 1px solid gray;</span><br><span class="line">            display: table-cell;</span><br><span class="line">            vertical-align: middle;</span><br><span class="line">            text-align: center;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.b</span> &#123;</span></span><br><span class="line">            width: 200px;</span><br><span class="line">            height: 150px;</span><br><span class="line">            background-color: lightcoral;</span><br><span class="line">            display: inline-block;</span><br><span class="line">            text-align: left;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;a&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;b&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="多列布局"><a href="#多列布局" class="headerlink" title="多列布局"></a>多列布局</h1><h2 id="两列布局"><a href="#两列布局" class="headerlink" title="两列布局"></a>两列布局</h2><p>一列定宽，一列自适应 <strong>关键在于自适应列</strong></p><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@d878fa4e34cbe61bb141b46e18c596f4e6d18ed3/2021/01/19/faf0c18eef999d35a3d30ba6f5e33046.png"></p><ul><li>第一种</li></ul><div class="note warning flat"><p>这种方式存在的问题：如果改变左边 div 的宽度，则需要同时改变右边 div 的左外边距 (<code>margin-left</code>)。</p><p>解决方案 ：可以将 <code>margin-left </code>修改为 <code>overflow:hidden </code>（但依然存在问题：内容溢出隐藏）</p></div><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.container</span> &#123;</span></span><br><span class="line">            width: 600px;</span><br><span class="line">            height: 400px;</span><br><span class="line">            border: 1px solid black;</span><br><span class="line">            margin: 0 auto;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.left</span> &#123;</span></span><br><span class="line">            width: 200px;</span><br><span class="line">            height: 100%;</span><br><span class="line">            background-color: lightcoral;</span><br><span class="line"><span class="css">            <span class="comment">/* 为左边div设置浮动 */</span></span></span><br><span class="line">            float: left;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.right</span> &#123;</span></span><br><span class="line">            height: 100%;</span><br><span class="line">            background-color: lightskyblue;</span><br><span class="line"><span class="css">            <span class="comment">/* 可以将外边距设置为 overflow:hidden */</span></span></span><br><span class="line">            margin-left: 200px;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;left&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;right&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>第二种方法</li></ul><p><code>table-cell</code> 属性说明</p><ul><li> 设置定宽 则自适应</li><li>不设置则自适应</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.container</span> &#123;</span></span><br><span class="line">            width: 600px;</span><br><span class="line">            height: 400px;</span><br><span class="line">            border: 1px solid black;</span><br><span class="line">            margin: 0 auto;</span><br><span class="line">            display: table;</span><br><span class="line">            table-layout: fixed;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.left</span>,<span class="selector-class">.right</span>&#123;</span></span><br><span class="line">            display: table-cell;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.left</span> &#123;</span></span><br><span class="line">            width: 200px;</span><br><span class="line">            height: 100%;</span><br><span class="line">            background-color: lightcoral;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.right</span> &#123;</span></span><br><span class="line">            height: 100%;</span><br><span class="line">            background-color: lightskyblue;</span><br><span class="line">            margin-left: 200px;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;left&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;right&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="三列分布"><a href="#三列分布" class="headerlink" title="三列分布"></a>三列分布</h2><p>两列定宽，一列自适应</p><h1 id="等分布局"><a href="#等分布局" class="headerlink" title="等分布局"></a>等分布局</h1><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@5e0b8d7dbbefacaa12f862fda20080fe550b9314/2021/01/19/abb4fed7ebd268262987d03aa625b359.png"></p><div class="note success flat"><p>通过浮动实现</p></div><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.container</span>&#123;</span></span><br><span class="line">            width: 800px;</span><br><span class="line">            height: 400px;</span><br><span class="line">            border: 1px solid gray;</span><br><span class="line">            margin: 0 auto;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.column</span>&#123;</span></span><br><span class="line">            width: 25%;</span><br><span class="line">            height: 100%;</span><br><span class="line">            float: left;</span><br><span class="line">            box-sizing: border-box;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.box1</span>&#123;</span></span><br><span class="line">            background-color: lightcoral;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.box2</span>&#123;</span></span><br><span class="line">            background-color: lightgreen;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.box3</span>&#123;</span></span><br><span class="line">            background-color: lightskyblue;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.box4</span>&#123;</span></span><br><span class="line">            background-color: lightpink;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;column box1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;column box2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;column box3&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;column box4&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><div class="note success flat"><p>通过表格实现</p></div><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.container</span> &#123;</span></span><br><span class="line">            width: 800px;</span><br><span class="line">            height: 400px;</span><br><span class="line">            border: 1px solid gray;</span><br><span class="line">            margin: 0 auto;</span><br><span class="line">            display: table;</span><br><span class="line">            table-layout: fixed;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.column</span> &#123;</span></span><br><span class="line">            height: 100%;</span><br><span class="line">            box-sizing: border-box;</span><br><span class="line">            display: table-cell;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.box1</span> &#123;</span></span><br><span class="line">            background-color: lightcoral;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.box2</span> &#123;</span></span><br><span class="line">            background-color: lightgreen;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.box3</span> &#123;</span></span><br><span class="line">            background-color: lightskyblue;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.box4</span> &#123;</span></span><br><span class="line">            background-color: lightpink;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;column box1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;column box2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;column box3&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;column box4&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><div class="note success flat"><p>通过无序列表实现</p></div><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.container</span> &#123;</span></span><br><span class="line">            margin: 0 auto;</span><br><span class="line">            padding: 0;</span><br><span class="line">            border: 1px solid gray;</span><br><span class="line">            width: 800px;</span><br><span class="line">            height: 400px;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.column</span> &#123;</span></span><br><span class="line">            list-style: none;</span><br><span class="line">            float: left;</span><br><span class="line">            width: 25%;</span><br><span class="line">            height: 100%;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;column&quot;</span>&gt;</span>示例样式<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;column&quot;</span>&gt;</span>示例样式<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;column&quot;</span>&gt;</span>示例样式<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;column&quot;</span>&gt;</span>示例样式<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="等高布局"><a href="#等高布局" class="headerlink" title="等高布局"></a>等高布局</h1><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@2287ec1631018df0e97e734c5f5c3078fcedad6d/2021/01/19/4549a0034cce6577cd6888849801d795.png"></p><div class="note success flat"><p>通过表格实现</p></div><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.container</span> &#123;</span></span><br><span class="line">            width: 800px;</span><br><span class="line">            height: 400px;</span><br><span class="line">            border: 1px solid gray;</span><br><span class="line">            margin: 0 auto;</span><br><span class="line">            display: table;</span><br><span class="line">            table-layout: fixed;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.left</span>,</span></span><br><span class="line"><span class="css">        <span class="selector-class">.right</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="comment">/* 表格中的单元格默认时等高的 */</span></span></span><br><span class="line">            display: table-cell;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.left</span> &#123;</span></span><br><span class="line">            width: 300px;</span><br><span class="line">            background-color: lightcoral;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.right</span> &#123;</span></span><br><span class="line">            width: 300px;</span><br><span class="line">            background-color: lightskyblue;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;column left&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;column right&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="全屏布局"><a href="#全屏布局" class="headerlink" title="全屏布局"></a>全屏布局</h1><p>没有滚动条，布局根据窗口大小改变。</p><ul><li><p>宽度问题<br>直接设置成 100% 即可</p></li><li><p>高度问题</p><ul><li>为 body 设置 <code>height:100%</code>, 为子级元素设置<code> height:100%</code></li><li><code>vh </code>单位，即设置<code>height:100vh</code>即可</li></ul></li></ul><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@b39b870725e99a3abd567cbf7992f2080bbccfde/2021/01/19/11b232b940da5e625e46986bbad7c7c0.png"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--实现方案1--&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        html,</span><br><span class="line">        body &#123;</span><br><span class="line">            margin: 0;</span><br><span class="line">            height: 100%;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.container</span> &#123;</span></span><br><span class="line">            width: 100%;</span><br><span class="line">            height: 100%;</span><br><span class="line"></span><br><span class="line">            overflow: hidden;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.top</span>,</span></span><br><span class="line"><span class="css">        <span class="selector-class">.content</span>,</span></span><br><span class="line"><span class="css">        <span class="selector-class">.bottom</span> &#123;</span></span><br><span class="line">            position: absolute;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.top</span> &#123;</span></span><br><span class="line">            width: 100%;</span><br><span class="line">            height: 50px;</span><br><span class="line">            background-color: lightcoral;</span><br><span class="line"></span><br><span class="line">            left: 0;</span><br><span class="line">            top: 0;</span><br><span class="line">            right: 0;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.content</span> &#123;</span></span><br><span class="line">            width: 100%;</span><br><span class="line"><span class="css">            <span class="comment">/* height: 100px; */</span></span></span><br><span class="line">            background-color: lightgreen;</span><br><span class="line"></span><br><span class="line">            left: 0;</span><br><span class="line">            right: 0;</span><br><span class="line">            top: 50px;</span><br><span class="line">            bottom: 50px;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.left</span>,</span></span><br><span class="line"><span class="css">        <span class="selector-class">.right</span> &#123;</span></span><br><span class="line">            float: left;</span><br><span class="line">            position: relative;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.left</span> &#123;</span></span><br><span class="line">            width: 300px;</span><br><span class="line">            height: 100%;</span><br><span class="line">            background-color: lightskyblue;</span><br><span class="line"></span><br><span class="line">            z-index: 9999;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.right</span> &#123;</span></span><br><span class="line">            width: 100%;</span><br><span class="line">            height: 100%;</span><br><span class="line">            background-color: mediumorchid;</span><br><span class="line">            margin-left: -300px;</span><br><span class="line">            z-index: 0;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.bottom</span> &#123;</span></span><br><span class="line">            width: 100%;</span><br><span class="line">            height: 50px;</span><br><span class="line">            background-color: lightgray;</span><br><span class="line"></span><br><span class="line">            left: 0;</span><br><span class="line">            bottom: 0;</span><br><span class="line">            right: 0;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 全屏布局容器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 顶部栏 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;top&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 主体: 菜单+内容区 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;content&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 菜单 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;left&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 内容区 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;right&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 底部栏 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;bottom&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--实现方案2--&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="comment">/* 初始化边距 */</span></span></span><br><span class="line">        body,</span><br><span class="line">        p &#123;</span><br><span class="line">            margin: 0;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="comment">/* 初始化高度 */</span></span></span><br><span class="line">        body,</span><br><span class="line">        html,</span><br><span class="line"><span class="css">        <span class="selector-class">.parent</span> &#123;</span></span><br><span class="line">            height: 100%;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="comment">/* 将上部 中部 下部 水平铺满 */</span></span></span><br><span class="line"><span class="css">        <span class="selector-class">.top</span>,</span></span><br><span class="line"><span class="css">        <span class="selector-class">.middle</span>,</span></span><br><span class="line"><span class="css">        <span class="selector-class">.bottom</span> &#123;</span></span><br><span class="line">            position: absolute;</span><br><span class="line">            left: 0;</span><br><span class="line">            right: 0;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="comment">/* 顶部始终在上 */</span></span></span><br><span class="line"><span class="css">        <span class="selector-class">.top</span> &#123;</span></span><br><span class="line">            top: 0;</span><br><span class="line">            height: 50px;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="comment">/* 底部始终在下 */</span></span></span><br><span class="line"><span class="css">        <span class="selector-class">.bottom</span> &#123;</span></span><br><span class="line">            bottom: 0;</span><br><span class="line">            height: 50px;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="comment">/* 中部位置 */</span></span></span><br><span class="line"><span class="css">        <span class="selector-class">.middle</span> &#123;</span></span><br><span class="line">            top: 50px;</span><br><span class="line">            bottom: 50px;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.left</span>,</span></span><br><span class="line"><span class="css">        <span class="selector-class">.right</span> &#123;</span></span><br><span class="line">            position: absolute;</span><br><span class="line">            top: 0;</span><br><span class="line">            bottom: 0;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="comment">/* 左 */</span></span></span><br><span class="line"><span class="css">        <span class="selector-class">.left</span> &#123;</span></span><br><span class="line">            width: 100px;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="comment">/* 右 */</span></span></span><br><span class="line"><span class="css">        <span class="selector-class">.right</span> &#123;</span></span><br><span class="line">            left: 120px;</span><br><span class="line">            right: 0;</span><br><span class="line">            overflow: auto;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.right-in</span> &#123;</span></span><br><span class="line">            height: 1000px;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;parent&quot;</span> <span class="attr">id</span>=<span class="string">&quot;parent&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background-color: lightgrey;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;top&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background-color: lightblue;&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span>&gt;</span>top<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;middle&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background-color: pink;&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;left&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background-color: orange;&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span>&gt;</span>left<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;right&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background-color: lightsalmon;&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;right-in&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">p</span>&gt;</span>right<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;bottom&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background-color: lightgreen;&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span>&gt;</span>bottom<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="圣杯布局"><a href="#圣杯布局" class="headerlink" title="圣杯布局"></a>圣杯布局</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.container</span> &#123;</span></span><br><span class="line">            position: relative;;</span><br><span class="line">            height: 300px;</span><br><span class="line"><span class="css">            <span class="selector-tag">background</span>: <span class="selector-id">#ddd</span>;</span></span><br><span class="line">            padding: 0 300px 0;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.container</span> <span class="selector-class">.middle</span>&#123;</span></span><br><span class="line">            float: left;</span><br><span class="line">            width: 100%;</span><br><span class="line">            height: 300px;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.container</span> <span class="selector-class">.left</span>&#123;</span></span><br><span class="line">            float: left;</span><br><span class="line">            position: relative;</span><br><span class="line">            height: 300px;</span><br><span class="line">            width: 300px;</span><br><span class="line">            margin-left: -100%;</span><br><span class="line">            left: -300px;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.container</span> <span class="selector-class">.right</span> &#123;</span></span><br><span class="line">            float: left;</span><br><span class="line">            position: relative;</span><br><span class="line">            width: 300px;</span><br><span class="line">            height: 300px;</span><br><span class="line">            margin-left: -300px;</span><br><span class="line">            left: 300px;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!-- 圣杯布局 --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--middle写在最前面，这样网页在载入时，就会优先加载--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;middle&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background-color: cyan;&quot;</span>&gt;</span>middle<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;left&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background-color: darkgreen;&quot;</span>&gt;</span>left<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;right&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background-color: darkorange;&quot;</span>&gt;</span>right<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@5acad5511e35fc79ef23257a155858d405c56448/2021/01/19/bceacf47fd2f3971a57e767803f46a0d.png"></p><h1 id="双飞翼布局"><a href="#双飞翼布局" class="headerlink" title="双飞翼布局"></a>双飞翼布局</h1><p>双飞翼布局和圣杯差不多，主要是将padding换成了margin而且只需要包裹middle即可</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span></span><br><span class="line"><span class="css">          <span class="selector-class">.container</span>&#123;</span></span><br><span class="line">            float: left;</span><br><span class="line">            width: 100%;</span><br><span class="line">            height: 300px;</span><br><span class="line"><span class="css">            <span class="selector-tag">background</span>: <span class="selector-id">#ddd</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.container</span> <span class="selector-class">.middle</span>&#123;</span></span><br><span class="line">            height: 300px;</span><br><span class="line">            margin: 0 300px;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.left</span>&#123;</span></span><br><span class="line">            float: left;</span><br><span class="line">            position: relative;</span><br><span class="line">            width: 300px;</span><br><span class="line">            height: 300px;</span><br><span class="line">            margin-left: -100%;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.right</span>&#123;</span></span><br><span class="line">            float: left;</span><br><span class="line">            position: relative;</span><br><span class="line">            width: 300px;</span><br><span class="line">            height: 300px;</span><br><span class="line">            margin-left: -300px;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!-- 圣杯布局 --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;middle&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background-color: cyan;&quot;</span>&gt;</span>middle<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;left&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background-color: darkgreen;&quot;</span>&gt;</span>left<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;right&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background-color: darkorange;&quot;</span>&gt;</span>right<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@3721d164703f8a3648b0a07d24895c69423964ec/2021/01/19/6839af736d19c880783cc41cd534db95.png"></p><h1 id="综合"><a href="#综合" class="headerlink" title="综合"></a>综合</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span></span><br><span class="line">        * &#123;</span><br><span class="line"><span class="css">            <span class="selector-tag">margin</span><span class="selector-pseudo">:0</span>;</span></span><br><span class="line">            padding: 0;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.wrapper</span> &#123;</span></span><br><span class="line">            width: 100%;</span><br><span class="line">            display: flex;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.wrapper</span> <span class="selector-class">.left</span> &#123;</span></span><br><span class="line">            width: 200px;</span><br><span class="line">            height: 90vh;</span><br><span class="line"><span class="css">            <span class="selector-tag">background</span>: <span class="selector-id">#faa</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.wrapper</span> <span class="selector-class">.left</span> <span class="selector-class">.left-box</span> &#123;</span></span><br><span class="line">            width: 90%;</span><br><span class="line">            height: 120px;</span><br><span class="line">            margin: 30px auto;</span><br><span class="line"><span class="css">            <span class="selector-tag">background</span>: <span class="selector-id">#ff4</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.wrapper</span> <span class="selector-class">.left</span> <span class="selector-class">.left-box2</span> &#123;</span></span><br><span class="line">            height: 50%;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.wrapper</span> <span class="selector-class">.right</span> &#123;</span></span><br><span class="line">            width: 200px;</span><br><span class="line">            height: 90vh;</span><br><span class="line"><span class="css">            <span class="selector-tag">background</span>: <span class="selector-id">#afa</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.wrapper</span> <span class="selector-class">.right</span> <span class="selector-class">.card</span> &#123;</span></span><br><span class="line">            width: 80%;</span><br><span class="line">            margin: 20px auto;</span><br><span class="line"><span class="css">            <span class="selector-tag">background-color</span>: <span class="selector-id">#f42</span></span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.wrapper</span> <span class="selector-class">.content</span> &#123;</span></span><br><span class="line">            flex: 1;</span><br><span class="line">            min-height: 90vh;</span><br><span class="line"><span class="css">            <span class="selector-tag">background</span>: <span class="selector-id">#aaf</span>;</span></span><br><span class="line">            column-count: 3;</span><br><span class="line">            column-gap: 10px;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.wrapper</span> <span class="selector-class">.card</span> &#123;</span></span><br><span class="line">            width: 100%;</span><br><span class="line">            height: 100px;</span><br><span class="line"><span class="css">            <span class="selector-tag">background</span>: <span class="selector-id">#c44</span>;</span></span><br><span class="line">            font-size: 18px;</span><br><span class="line">            text-align: center;</span><br><span class="line">            line-height: 100px;</span><br><span class="line"><span class="css">            <span class="selector-tag">margin</span><span class="selector-pseudo">:5px</span> 0;</span></span><br><span class="line">            break-inside: avoid;</span><br><span class="line">        &#125;</span><br><span class="line">        header,footer &#123;</span><br><span class="line">            height: 5vh;</span><br><span class="line"><span class="css">            <span class="selector-tag">background</span>: <span class="selector-id">#424242</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line">        h2 &#123;</span><br><span class="line">            text-align: center;</span><br><span class="line"><span class="css">            <span class="selector-tag">color</span>: <span class="selector-id">#f8f8f8</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">max-width:</span> <span class="number">800px</span>) &#123;</span></span><br><span class="line"><span class="css">            <span class="selector-class">.wrapper</span> <span class="selector-class">.content</span> &#123;</span></span><br><span class="line">                column-count: 2;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 头部 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">header</span>&gt;</span><span class="tag">&lt;<span class="name">h2</span>&gt;</span>头部<span class="tag">&lt;/<span class="name">h2</span>&gt;</span><span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;wrapper&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;left&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;left-box&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;left-box left-box2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;content&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;card&quot;</span> <span class="attr">style</span>=<span class="string">&quot;height: 100px&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;card&quot;</span> <span class="attr">style</span>=<span class="string">&quot;height: 200px&quot;</span>&gt;</span>2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;card&quot;</span> <span class="attr">style</span>=<span class="string">&quot;height: 150px&quot;</span>&gt;</span>3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;card&quot;</span> <span class="attr">style</span>=<span class="string">&quot;height: 210px&quot;</span>&gt;</span>4<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;card&quot;</span> <span class="attr">style</span>=<span class="string">&quot;height: 120px&quot;</span>&gt;</span>5<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;card&quot;</span> <span class="attr">style</span>=<span class="string">&quot;height: 180px&quot;</span>&gt;</span>6<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;card&quot;</span> <span class="attr">style</span>=<span class="string">&quot;height: 160px&quot;</span>&gt;</span>7<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;card&quot;</span> <span class="attr">style</span>=<span class="string">&quot;height: 136px&quot;</span>&gt;</span>8<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;card&quot;</span> <span class="attr">style</span>=<span class="string">&quot;height: 120px&quot;</span>&gt;</span>9<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;right&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;card&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;card&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;card&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;card&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">footer</span>&gt;</span><span class="tag">&lt;<span class="name">h2</span>&gt;</span>底部<span class="tag">&lt;/<span class="name">h2</span>&gt;</span><span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@9455a4801e5bdcfe56553d21d29ec1e9d8d1682a/2021/01/19/ff6b800f45b541f90a1ebcebb4a99892.png"></p>]]></content>
      
      
      <categories>
          
          <category> Web前端 </category>
          
          <category> HTML+CSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML+CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前端三剑客🔗定位继承与层叠</title>
      <link href="2021/01/19/%E5%89%8D%E7%AB%AF/HTML+CSS/%E5%89%8D%E7%AB%AF%E4%B8%89%E5%89%91%E5%AE%A2_%E5%AE%9A%E4%BD%8D%E7%BB%A7%E6%89%BF%E4%B8%8E%E5%B1%82%E5%8F%A0/"/>
      <url>2021/01/19/%E5%89%8D%E7%AB%AF/HTML+CSS/%E5%89%8D%E7%AB%AF%E4%B8%89%E5%89%91%E5%AE%A2_%E5%AE%9A%E4%BD%8D%E7%BB%A7%E6%89%BF%E4%B8%8E%E5%B1%82%E5%8F%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="定位"><a href="#定位" class="headerlink" title="定位"></a>定位</h1><p>定位属性为 <code>position</code></p><ul><li><p>static: 默认值，表示元素为静态定位。指定元素使用正常的布局行为，即元素在文档常规流中当<br>前的布局位置。</p></li><li><p>absolute: 表示元素为绝对定位。不为元素预留空间，通过指定元素相对于最近的非 static 定位祖先元素的偏移，来确定元素位置。</p></li><li><p>fixed: 表示元素为固定定位。不为元素预留空间，而是通过指定元素相对于屏幕视口 (viewport)<br>的位置来指定元素位置。</p></li><li><p>relative: 表示元素为相对定位。元素先放置在未添加定位时的位置，再在不改变页面布局的前提<br>下调整元素位置。</p></li></ul><p>简单来说<strong>定位就是规定被定位元素距离页面顶部及左边的距离</strong></p><h2 id="绝对定位"><a href="#绝对定位" class="headerlink" title="绝对定位"></a>绝对定位</h2><ul><li>开启后脱离文档流</li><li>不设置位置的偏移量则位置不会变化</li><li>偏移量<ul><li>正值（top）向下</li><li>负值（top）向上</li></ul></li></ul><p>绝对定位的集中情况</p><ul><li>如果当前元素的父级元素是 &lt;body&gt; 元素的话<br>  相对于当前页面的定位</li><li>如果当前元素的父级元素不是 &lt;body&gt; 元素的话，父级元素没有开启定位<br>  相对于当前页面的定位</li><li>如果当前元素的父级元素不是 &lt;body&gt; 元素的话，父级元素开启定位<br>  相对于父级元素的定位</li></ul><p><code>bottom </code>值</p><ul><li>默认加载完毕后的位置<br>  相对于当前浏览器窗口的底部</li><li>绝对定位依旧是相对于页面的定位，而不是相对于浏览器窗口的定位</li></ul><h2 id="固定定位"><a href="#固定定位" class="headerlink" title="固定定位"></a>固定定位</h2><ul><li>相对于浏览器窗口的定位</li><li>脱离文档流</li></ul><h2 id="相对定位"><a href="#相对定位" class="headerlink" title="相对定位"></a>相对定位</h2><ul><li>不脱离文档流</li><li>相对于自身原来的位置进行定位</li></ul><h1 id="堆叠"><a href="#堆叠" class="headerlink" title="堆叠"></a>堆叠</h1><p>z- index 属性指定了一个具有定位属性的元素及其子代元素的 z -order。当元素之间重叠的时候，z-order 决定哪一个 元素覆盖在其余元素的上方显示。通常 来说 z -index 属性值较大的元素会覆盖较小的一个。<br>对于一个已经定位的元素 (即 position 属性值是非 static 的元素)，z - index 属性指定:</p><ul><li>元素在当前堆叠上下文中的堆叠层级。</li><li>元素是否创建一个新的本地堆叠上下文。</li></ul><h1 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h1><p>部分属性可以继承：对子级元素同样保留此样式。</p><p>可以到帮助文档进行查阅</p><h1 id="层叠"><a href="#层叠" class="headerlink" title="层叠"></a>层叠</h1><p>层叠是 CSS 中的一个基本特征，它定义了如何合并来自多个源的属性值的算法。对于层叠来说，共有三种主要的样式来源: .</p><ol><li><p>浏览器对 HTML 定义的默认样式。</p></li><li><p>用户定义的样式。</p></li><li><p>开发者定义的样式。</p></li></ol><p>用户定义的样式表会覆盖浏览器定义的默认样式，然后网页开发者定义的样式又会覆盖用户样式。作为网页的开发者只需要关注开发者样式。<br>尽管 CSS 样式会来自这些不同的源，但它们的作用范围是重叠的，而层叠则定义了它们如何相互作用。</p>]]></content>
      
      
      <categories>
          
          <category> Web前端 </category>
          
          <category> HTML+CSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML+CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前端三剑客🔗浮动</title>
      <link href="2021/01/19/%E5%89%8D%E7%AB%AF/HTML+CSS/%E5%89%8D%E7%AB%AF%E4%B8%89%E5%89%91%E5%AE%A2_%E6%B5%AE%E5%8A%A8/"/>
      <url>2021/01/19/%E5%89%8D%E7%AB%AF/HTML+CSS/%E5%89%8D%E7%AB%AF%E4%B8%89%E5%89%91%E5%AE%A2_%E6%B5%AE%E5%8A%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="定位是什么"><a href="#定位是什么" class="headerlink" title="定位是什么"></a>定位是什么</h1><p>所谓定位，简单来说就是通过 CSS 样式属性设定 HTML 页面元素在运行时显示的位置。</p><p>定位的基本思想很简单，它允许定义元素相对于父级元素、另一个指定元素或者当前浏览器窗口应该显示的位置。</p><p>CSS 实现定位的效果主要通过浮动 (<code> float</code> ) 和定位 ( <code>position</code>) 两个样式属性实现。</p><h1 id="文档流"><a href="#文档流" class="headerlink" title="文档流"></a>文档流</h1><ul><li>文档流也叫标准流，就是标签按照规定好的默认方式排列</li><li>将 HTML 页面中的元素自上向下分成一行一行，并在每行中按从左至右的挨次排放元素，即为文档流。</li><li>文档流是 HTML 页面的底层结构，HTML 页面创建的元素默认都在文档流中。</li></ul><p>注意：如果在一行中不能容纳所有的元素，则会换到下一 行，继续自左向右排列。有三种状况将使得元素离开文档流而存在，分别是<strong>浮动、绝对定位、固定定位</strong>。</p><h1 id="浮动"><a href="#浮动" class="headerlink" title="浮动"></a>浮动</h1><div class="note success flat"><p>网页布局第一准则：多个块级元素纵向排列找<code>标准流</code>，多个块级元素横向排列<code>找浮动</code></p></div><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span>&#123;</span><br><span class="line">   <span class="attribute">float</span>:none | left | right;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>float </code>属性指定一个 元素应沿其容器的左侧或右侧放置，允许文本和内联元素环绕它。该属性具有以下几个值: .</p><ul><li>none: 默认值，表示元素不浮动。</li><li>left: 表示元素必须要浮动在其所在容器的左侧。</li><li>right: 表示元素必须要浮动在其所在容器的右侧。</li></ul><p>设置为浮动后，该元素原来的位置会被下一个元素替代。<strong>当前元素设置浮动后，会影响当前元素后边的元素</strong></p><p>所有元素都设置为浮动的话，块级元素排列顺序变为水平方向的排列，</p><h2 id="浮动特性"><a href="#浮动特性" class="headerlink" title="浮动特性"></a>浮动特性</h2><ul><li><p>浮动元素会脱离标准流，移动到指定的位置</p></li><li><p>浮动的盒子<code>不再保留原先的位置</code>，位置被其他标准流元素占有<br><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@21561adeba85341bb80ae60da5dd69a5a6aadfb7/2021/01/20/ddbb300b4108cd9da4f6df6cb618ddc2.png"></p></li><li><p>如果多个盒子都设置了浮动，则它们会按照属性值<code>一行内显示并顶端对齐排列</code><br><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@78eb38d992d4fa65332615c752dc95fb1590cf29/2021/01/20/9ec6d10c0da08794fdbc3a8f06bbbc4b.png"></p></li></ul><div class="note warning flat"><p>浮动的元素是互相贴靠在一起的（不会有缝隙），如果父级宽度装不下这些浮动的盒子，多出的盒子会另起一行对齐</p></div><ul><li>浮动元素会具有<strong>行内块元素特性</strong><br>任何元素都可以浮动，不管原来是什么模式的元素，添加浮动之后具有<code>行内块元素</code>相似的特性</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">span</span>&#123;</span><br><span class="line">      <span class="attribute">width</span>:<span class="number">100px</span>;</span><br><span class="line">      <span class="attribute">height</span>:<span class="number">100px</span>;</span><br><span class="line">      <span class="attribute">background-color</span>: turquoise;</span><br><span class="line">      <span class="attribute">float</span>:left;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@57485914192454a6f0b1effe6fbe3e9b7cfb470d/2021/01/20/3e954360b2898b3ebb88fe3dabfdcd78.png"></p><div class="note warning flat"><p>如果块级盒子没有设置宽度，默认宽度和父级一样宽，但是添加浮动后，它的大小根据内容来决定</p></div><h2 id="块级元素的浮动"><a href="#块级元素的浮动" class="headerlink" title="块级元素的浮动"></a>块级元素的浮动</h2><p>块级元素默认的宽度和高度</p><ul><li>宽度是父级元素宽度的 100%</li><li>高度是 0 或者所有后代元素高度之和</li></ul><p>设置为浮动后</p><ul><li>宽度默认是 0 或者所有后代元素宽度之和</li><li>高度默认是 0 或者所有后代元素高度之科</li></ul><p>多个块级元素都设置为浮动后 -&gt; 垂直方向排列变为水平方向排列</p><p>如果占满父级元素宽度的 100% 后，会自动换行</p><h2 id="内联元素"><a href="#内联元素" class="headerlink" title="内联元素"></a>内联元素</h2><p>内联元素的默认宽度和高度</p><ul><li><p>宽度是内容的宽度 - width 属性是无效的</p></li><li><p>高度是内容的高度 - height 属性是无效的</p></li></ul><p>内联元素设置为浮动后</p><ul><li>width 和 height 属性有效</li><li>多个内联元素依旧是水平排列</li></ul><h2 id="行内块级元素"><a href="#行内块级元素" class="headerlink" title="行内块级元素"></a>行内块级元素</h2><p>行内块级元素设置为浮动后，元素之间的空白间隙被取消</p><h1 id="浮动布局"><a href="#浮动布局" class="headerlink" title="浮动布局"></a>浮动布局</h1><ul><li>浮动元素经常和标准流父级搭配使用</li></ul><p><strong>先用标准流的父元素排列上下位置，之后内部子元素采取浮动排列左右位置，符合网页布局第一准则</strong><br><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@90825f4d4d8c49128918b8d29ad9502b7a3aea70/2021/01/20/b53f5ba2d01f6627cde150cdfe663206.png"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>JS Bin<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">    <span class="selector-class">.box</span>&#123;</span></span><br><span class="line">      width: 1200px;</span><br><span class="line">      height: 460px;</span><br><span class="line">      background-color: pink;</span><br><span class="line"><span class="css">      <span class="selector-tag">margin</span><span class="selector-pseudo">:0</span> <span class="selector-tag">auto</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.left</span>&#123;</span></span><br><span class="line">      width: 230px;</span><br><span class="line">      height: 460px;</span><br><span class="line"><span class="css">      <span class="selector-tag">background-color</span><span class="selector-pseudo">:yellowgreen</span>;</span></span><br><span class="line">      float: left;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.right</span>&#123;</span></span><br><span class="line">      width: 970px;</span><br><span class="line">      height: 460px;</span><br><span class="line"><span class="css">      <span class="selector-tag">background-color</span><span class="selector-pseudo">:turquoise</span>;</span></span><br><span class="line">      float: left;</span><br><span class="line">    &#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;left&quot;</span>&gt;</span>左侧<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;right&quot;</span>&gt;</span>右侧<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span>&gt;</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@8d77f5389a6d02e7fbd9b326e62de6304cd9b92d/2021/01/20/4315c151aae37db182448d21b21afa85.png"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>浮动元素搭配标准流父盒子2<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        * &#123;</span><br><span class="line">            margin: 0;</span><br><span class="line">            padding: 0;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        li &#123;</span><br><span class="line">            list-style: none;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.box</span> &#123;</span></span><br><span class="line">            width: 1226px;</span><br><span class="line">            height: 285px;</span><br><span class="line">            background-color: pink;</span><br><span class="line">            margin: 0 auto;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.box</span> <span class="selector-tag">li</span> &#123;</span></span><br><span class="line">            width: 296px;</span><br><span class="line">            height: 285px;</span><br><span class="line">            background-color: rgb(131, 206, 193);</span><br><span class="line">            float: left;</span><br><span class="line">            margin-right: 14px;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="comment">/* 这里必须写 .box .last 要注意权重的问题  20 */</span></span></span><br><span class="line"><span class="css">        <span class="selector-class">.box</span> <span class="selector-class">.last</span> &#123;</span></span><br><span class="line">            margin-right: 0;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;last&quot;</span>&gt;</span>4<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@9bd3fde927616c51f268b9a687ac6f8c82847ade/2021/01/20/a5fff699eceaa22a06fad091152f4222.png"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>浮动布局练习3<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.box</span> &#123;</span></span><br><span class="line">            width: 1226px;</span><br><span class="line">            height: 615px;</span><br><span class="line">            background-color: pink;</span><br><span class="line">            margin: 0 auto;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.left</span> &#123;</span></span><br><span class="line">            float: left;</span><br><span class="line">            width: 234px;</span><br><span class="line">            height: 615px;</span><br><span class="line">            background-color: rgb(112, 209, 125);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.right</span> &#123;</span></span><br><span class="line">            float: left;</span><br><span class="line">            width: 992px;</span><br><span class="line">            height: 615px;</span><br><span class="line">            background-color: skyblue;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.right</span>&gt;<span class="selector-tag">div</span> &#123;</span></span><br><span class="line">            float: left;</span><br><span class="line">            width: 234px;</span><br><span class="line">            height: 300px;</span><br><span class="line">            background-color: pink;</span><br><span class="line">            margin-left: 14px;</span><br><span class="line">            margin-bottom: 14px;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;left&quot;</span>&gt;</span>左青龙<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;right&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span>&gt;</span>2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span>&gt;</span>3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span>&gt;</span>4<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span>&gt;</span>5<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span>&gt;</span>6<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span>&gt;</span>7<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span>&gt;</span>8<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@f35f9dad0d8f66846c6ae6d432d9c691af23cd6f/2021/01/20/639042fdbb50be283dea4bd1f3af9cfe.png"></p><ul><li>浮动布局注意点<ul><li>先用标准流的父元素排列上下位置，之后内部子元素采取浮动排列左右位置</li><li>浮动的盒子<strong>只会影响浮动盒子后面的标准流，不会影响前面的标准流</strong></li></ul></li></ul><h1 id="浮动的特殊情况"><a href="#浮动的特殊情况" class="headerlink" title="浮动的特殊情况"></a>浮动的特殊情况</h1><ul><li><p>父级与子级之间的浮动<br>为子级元素设置浮动不能超出父级元素的范围（与父级元素浮不浮动无关）</p></li><li><p>兄弟同时设置浮动<br>如果兄弟关系的两个元素，为下一个兄弟元素设置为浮动，下一个兄弟元素不会超过上一个兄弟元素的位置</p></li><li><p>文本与浮动的元素<br>文本内容与浮动的元素之间，文本内容不会被浮动的元素所覆盖，而是环绕在浮动元素的周围</p></li></ul><h1 id="清除浮动"><a href="#清除浮动" class="headerlink" title="清除浮动"></a>清除浮动</h1><h2 id="为什么清除浮动"><a href="#为什么清除浮动" class="headerlink" title="为什么清除浮动"></a>为什么清除浮动</h2><p>由于父盒子很多情况下，不方便给高度，但是子盒子浮动又不占有位置，最后父级盒子高度为0时，就会影响下面的标准流盒子<br><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@d57bccd359ce8f5778bb6ee619200c2ff5711faa/2021/01/20/d02c606fd80a58f84c7c5d5f1abbe0b7.png"></p><div class="note success flat"><p>由于浮动元素不再占有原文档的位置，所以它会对后面的元素排版产生影响</p></div><ul><li><strong>清除浮动本质</strong><ul><li>清除浮动元素造成的影响</li><li>如果父盒子本身有高度，则不需要清除浮动</li><li>清除浮动之后，父级就会根据浮动的子盒子自动检测高度，父级有了高度，就不会影响下面的标准流了</li></ul></li><li><strong>清除浮动策略</strong><ul><li>闭合浮动，只让浮动中父盒子内部影响，不影响父盒子外面的其他盒子    </li></ul></li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span>&#123;</span><br><span class="line"><span class="attribute">clear</span>:none|left|right|both;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>clear </code>属性设置元素是否显示在其之前元素的下方。该属性具有以下几个值:</p><ul><li><code>none</code>: 表示元素不会向下移动清除之前的浮动。</li><li><code>left</code>: 表示元素被向下移动用于清除之前的左浮动。</li><li><code>right</code>: 表元素被向下移动用于清除之前的右浮动。</li><li><code>both</code>: 元素被向下移动用于清除之前的左右浮动。</li></ul><ul><li>clear 属性的使用可以分别以下两种情况:<ul><li>使用 clear 属性为非浮动元素清除浮动时，该元素将移动到之前浮动元素的下方。</li><li>使用 clear 属性为浮动元素清除浮动时，该元素将移动到之前浮动元素的下方，并且会影响之后浮动元素的布局。</li></ul></li></ul><h2 id="额外标签法"><a href="#额外标签法" class="headerlink" title="额外标签法"></a>额外标签法</h2><p>额外标签法也称为<code>隔墙法</code>。会中浮动元素末尾添加一个空标签并添加<code>clear:both</code>属性。例如&lt;div style=”clear:both”&gt;&lt;/div&gt;，或者其他标签（如&lt;br&gt;等）</p><p>清除浮动前<br><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@6034ebf71a44453dc914d9d6b0f184a7458bc252/2021/01/20/1a865b60ca26e98965bff03cdd3a5eb6.png"></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"> <span class="selector-class">.blank</span>&#123;</span><br><span class="line">    <span class="attribute">clear</span>: both;</span><br><span class="line">&#125;</span><br><span class="line"> &lt;div class=&quot;box&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;damao&quot;&gt;大毛&lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;ermao&quot;&gt;二毛&lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;blank&quot;&gt;&lt;/div&gt; /*给最后一一个盒子后面加一个空标签，并设置clear:both*/</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;div class=&quot;footer&quot;&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@3303c808a2be972ee87ee40ec3c88e33192520f8/2021/01/20/9cc3d5b6dc38b0a96b18eb6079e11bbc.png"></p><div class="note warning flat"><p>注意：要求这个新添加的空标签必须是<code>块级元素</code></p></div><h2 id="overflow"><a href="#overflow" class="headerlink" title="overflow"></a>overflow</h2><p>可以给<strong>父级</strong>添加<code>overflow</code>属性，将其属性值设置为<code>hidden</code>、<code>auto</code>或<code>scroll</code></p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.box&#123;</span><br><span class="line">  overflow:hidden;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="note warning flat"><p>缺点：无法显示溢出的部分</p></div><h2 id="after伪元素清除浮动"><a href="#after伪元素清除浮动" class="headerlink" title="after伪元素清除浮动"></a>after伪元素清除浮动</h2><p><code>:after</code>也是给<strong>父元素</strong>添加，相对于在后面加了一个盒子</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">.clearfix::after &#123; </span><br><span class="line">  content: &quot;&quot;;</span><br><span class="line">  display: block; </span><br><span class="line">  clear: both;</span><br><span class="line">  height:0;</span><br><span class="line">  visibility:hidden;</span><br><span class="line">&#125;</span><br><span class="line">.clearfix&#123; /*IE6、7专有*/</span><br><span class="line">  *zoom:1;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box clearfix&quot;</span>&gt;</span>/*多个类名*/</span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;damao&quot;</span>&gt;</span>大毛<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;ermao&quot;</span>&gt;</span>二毛<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;footer&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="双伪元素清除浮动"><a href="#双伪元素清除浮动" class="headerlink" title="双伪元素清除浮动"></a>双伪元素清除浮动</h2><p>也是给<strong>父元素</strong>添加，相当于在前面加了盒子</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">.clearfix:before,.clearfix:after&#123;</span><br><span class="line">   content:&quot;&quot;;</span><br><span class="line">   display:table;</span><br><span class="line">&#125;</span><br><span class="line">.clearfix:after&#123;</span><br><span class="line">  clear:both;</span><br><span class="line">&#125;</span><br><span class="line">.clearfix&#123;</span><br><span class="line">   *zoom:1;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box clearfix&quot;</span>&gt;</span>/*多个类名*/</span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;damao&quot;</span>&gt;</span>大毛<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;ermao&quot;</span>&gt;</span>二毛<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;footer&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="高度塌陷"><a href="#高度塌陷" class="headerlink" title="高度塌陷"></a>高度塌陷</h1><p>发生的场景</p><ul><li>存在父子级关系</li><li>父级没有设置高度</li><li>子级元素设置浮动</li></ul><p>解决方案：</p><ul><li><p>为父级设置高度（不推荐）</p></li><li><p>块级格式化上下文（BFC）<br>  开启方式如下几种：</p><ol><li>将元素设 置为浮动 (元素的 CSS 样式属性 float 值不为 none)</li><li>将元素 设置为绝对定位</li><li>将元素设 置为行内块级元素 (元素的 CSS 样式属性 display 值为 inline- -block)</li><li>overflow 属 性值设置不为 visible 的块级元素 (一般情况下，值为 hidden)<br>多多少少会带有一些副作用</li></ol></li></ul><h1 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h1><h2 id="京东垂直菜单"><a href="#京东垂直菜单" class="headerlink" title="京东垂直菜单"></a>京东垂直菜单</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">&lt;!<span class="selector-tag">DOCTYPE</span> <span class="selector-tag">html</span>&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;<span class="selector-tag">head</span>&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;/title&gt;</span><br><span class="line">    &lt;<span class="selector-tag">style</span>&gt;</span><br><span class="line">        <span class="selector-tag">body</span>&#123;</span><br><span class="line">            <span class="attribute">background-color</span>: gray;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="selector-tag">ul</span>&#123;</span><br><span class="line">            <span class="attribute">background-color</span>: white;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">150px</span>;</span><br><span class="line">            <span class="attribute">list-style-type</span>: none;</span><br><span class="line">            <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="selector-tag">ul</span> <span class="selector-tag">li</span>&#123;</span><br><span class="line">            <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">            <span class="attribute">line-height</span>: <span class="number">25px</span>;</span><br><span class="line">            <span class="attribute">color</span>: gray;</span><br><span class="line">            <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">7px</span> ;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line">            <span class="attribute">color</span>: lightcoral;</span><br><span class="line">            <span class="attribute">background-color</span>: lightgray;</span><br><span class="line">            <span class="attribute">cursor</span>: pointer;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;<span class="selector-tag">body</span>&gt;</span><br><span class="line">    &lt;<span class="selector-tag">ul</span>&gt;</span><br><span class="line">        &lt;li&gt;第一个&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;第二个&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;第三个&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;第四个&lt;/li&gt;</span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h2 id="京东水平菜单"><a href="#京东水平菜单" class="headerlink" title="京东水平菜单"></a>京东水平菜单</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">&lt;!<span class="selector-tag">DOCTYPE</span> <span class="selector-tag">html</span>&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;<span class="selector-tag">head</span>&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;/title&gt;</span><br><span class="line">    &lt;<span class="selector-tag">style</span>&gt;</span><br><span class="line">        <span class="selector-tag">body</span>&#123;</span><br><span class="line">            <span class="attribute">background-color</span>: gray;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="selector-tag">ul</span>&#123;</span><br><span class="line">            <span class="attribute">background-color</span>: white;</span><br><span class="line">            <span class="attribute">list-style</span>: none;</span><br><span class="line">            <span class="comment">/* 去除项目符号所占空间 */</span></span><br><span class="line">            <span class="attribute">padding-left</span>: <span class="number">0</span>; </span><br><span class="line">            <span class="comment">/* 解决高度塌陷问题 */</span></span><br><span class="line">            <span class="attribute">overflow</span>: hidden;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="selector-tag">ul</span> <span class="selector-tag">li</span>&#123;</span><br><span class="line">            <span class="attribute">float</span>: left;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">95px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">40px</span>;</span><br><span class="line">            <span class="attribute">line-height</span>: <span class="number">40px</span>;</span><br><span class="line">            <span class="attribute">text-align</span>: center;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="selector-tag">li</span><span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line">            <span class="attribute">background-color</span>: violet;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="selector-tag">li</span> <span class="selector-tag">a</span>&#123;</span><br><span class="line">            <span class="attribute">text-decoration</span>: none;</span><br><span class="line">            <span class="attribute">color</span>: black;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="selector-tag">ul</span> <span class="selector-tag">li</span> <span class="selector-tag">a</span>&#123;</span><br><span class="line">            <span class="attribute">display</span>: block;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">40px</span>;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;<span class="selector-tag">body</span>&gt;</span><br><span class="line">    &lt;<span class="selector-tag">ul</span>&gt;</span><br><span class="line">        &lt;li&gt;&lt;a href=&#x27;#&#x27;&gt;测试1&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;&lt;a href=&#x27;#&#x27;&gt;测试2&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;&lt;a href=&#x27;#&#x27;&gt;测试3&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;&lt;a href=&#x27;#&#x27;&gt;测试4&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;&lt;a href=&#x27;#&#x27;&gt;测试5&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Web前端 </category>
          
          <category> HTML+CSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML+CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前端三剑客🔗显示与隐藏</title>
      <link href="2021/01/19/%E5%89%8D%E7%AB%AF/HTML+CSS/%E5%89%8D%E7%AB%AF%E4%B8%89%E5%89%91%E5%AE%A2_%E6%98%BE%E7%A4%BA%E4%B8%8E%E9%9A%90%E8%97%8F/"/>
      <url>2021/01/19/%E5%89%8D%E7%AB%AF/HTML+CSS/%E5%89%8D%E7%AB%AF%E4%B8%89%E5%89%91%E5%AE%A2_%E6%98%BE%E7%A4%BA%E4%B8%8E%E9%9A%90%E8%97%8F/</url>
      
        <content type="html"><![CDATA[<h1 id="元素显示模式"><a href="#元素显示模式" class="headerlink" title="元素显示模式"></a>元素显示模式</h1><ul><li>元素显示模式就是元素(标签)以什么方式进行显示，比如div自己占一行，比如一行可以放多个span</li><li>HTML元素一般分<code>块元素</code>和<code>行内元素</code></li></ul><h2 id="块元素"><a href="#块元素" class="headerlink" title="块元素"></a>块元素</h2><p>常见的块元素有&lt;h1&gt;~&lt;h6&gt;、&lt;p&gt;、&lt;div&gt;、&lt;ul&gt;、&lt;ol&gt;、&lt;li&gt;等，其中<code>&lt;div&gt;</code>是最典型的块元素</p><p>块元素的特点</p><ul><li>独占一行</li><li>可以控制高度、宽度、外边距以及内边距</li><li>宽度默认是容器（父级容器）的100%</li><li>是一个容器以及盒子，里面可以放行内或者块级元素</li></ul><div class="note warning flat"><p>文字类的元素内不能使用块级元素</p></div><h2 id="行内元素"><a href="#行内元素" class="headerlink" title="行内元素"></a>行内元素</h2><p>常见的行内元素有&lt;a&gt;、&lt;strong&gt;、&lt;b&gt;、&lt;em&gt;、&lt;i&gt;、&lt;del&gt;、&lt;s&gt;、&lt;ins&gt;、&lt;u&gt;、&lt;span&gt;等，其中<code>&lt;span&gt;</code>是最典型的<code>行内元素</code>，也叫<code>内联元素</code></p><p>行内元素的特点</p><ul><li>相邻行内元素在一行上，一行可以显示多个</li><li>高、宽度直接设置是无效的</li><li>默认宽度就是它本身内容的宽度</li><li>行内元素只能容纳文本或其他行内元素</li></ul><div class="note success flat"><p>链接里面不能放链接<br>特殊情况下链接&lt;a&gt;里面可以放块级元素，但是给&lt;a&gt;转换以下块级模式最安全</p></div><h2 id="行内块元素"><a href="#行内块元素" class="headerlink" title="行内块元素"></a>行内块元素</h2><p>在行内元素中有几个特殊的标签——&lt;img/&gt;、&lt;input/&gt;、&lt;td&gt;，它们<code>同时具有块元素和行内元素的特点</code>，称为<code>行内块元素</code></p><p>行内块元素的特点</p><ul><li>和相邻行内元素（行内块）在一行上，但是它们之间会有空白缝隙。一行可以显示多个（行内元素的特点）</li><li>默认宽度就是它本身内容的宽度（行内元素的特点）</li><li>高度、行高、外边距以及内边距都可以控制（块级元素的特点）</li></ul><table><thead><tr><th align="center">元素模式</th><th align="center">元素排列</th><th align="center">设置样式</th><th align="center">默认宽度</th><th align="center">包含</th></tr></thead><tbody><tr><td align="center">块级元素</td><td align="center">一行只能放一个块级元素</td><td align="center">可以设置宽度高度</td><td align="center">容器的100%</td><td align="center">容器级可以包含任何标签</td></tr><tr><td align="center">行内元素</td><td align="center">一行可以放多个行内元素</td><td align="center">不可以直接设置宽度</td><td align="center">它本身内容的宽度</td><td align="center">容纳文本或其他行内元素</td></tr><tr><td align="center">行内块元素</td><td align="center">一行可以放多个行内块元素</td><td align="center">可以设置宽度和高度</td><td align="center">它本身内容的宽度</td><td align="center"></td></tr></tbody></table><h1 id="小米侧边栏案例"><a href="#小米侧边栏案例" class="headerlink" title="小米侧边栏案例"></a>小米侧边栏案例</h1><p>实现步骤</p><ul><li>把链接a转换为块级元素，这样链接就可以单独占一行，并且有宽度和高度</li><li>鼠标经过a给链接设置背景颜色</li></ul><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@3134b6dbcb2274972b40590b7664aca7c8042004/2021/01/20/518eb3adb7ef2f94cd8ccf2c259fc709.png"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">       a&#123;</span><br><span class="line">           display: block;</span><br><span class="line">           width: 230px;</span><br><span class="line">           height: 40px;</span><br><span class="line"><span class="css">           <span class="selector-tag">background-color</span>: <span class="selector-id">#535758</span>;</span></span><br><span class="line">           font-size: 14px;</span><br><span class="line"><span class="css">           <span class="selector-tag">color</span><span class="selector-pseudo">:white</span>;</span></span><br><span class="line">           text-decoration: none;</span><br><span class="line">           text-indent: 2em;</span><br><span class="line">           line-height: 40px; </span><br><span class="line">       &#125;</span><br><span class="line"><span class="css">       <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span>&#123;</span></span><br><span class="line"><span class="css">           <span class="selector-tag">background-color</span>: <span class="selector-id">#ff6700</span>;</span></span><br><span class="line">       &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>手机 电话卡<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>电视 盒子<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>笔记本 平板<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>出行 穿戴<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>智能 路由器<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>健康 儿童<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>耳机 音箱<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><div class="note success flat"><p>单行文字垂直居中的方法</p></div><ul><li><code>让文字的行高等于盒子的高度</code>就可以让文字在当前盒子内垂直居中<br><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@3e58525ee18524eb218927f176cca5c80f9c4391/2021/01/20/25cadf6f838c39b87efd303e9bce90d7.png"></li></ul><div class="note success flat"><p>Snipaste推荐</p></div><p>Snipaste是一个简单但强大的截图工具<br>常用快捷键：</p><ul><li>F1可以截图，同时测量大小，设置箭头 书写文字等</li><li>F3在桌面置顶显示</li><li>点击图片，<code>alt可以去色（按下shift可以切换取色模式）</code>，C可以复制</li><li>按下ESC取消图片显示</li></ul><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@bd3a9603bb41c243041607290fb28f074f63e702/2021/01/20/0539326761ef36761f197233255f2378.png"></p><h1 id="显示与隐藏"><a href="#显示与隐藏" class="headerlink" title="显示与隐藏"></a>显示与隐藏</h1><h2 id="display"><a href="#display" class="headerlink" title="display"></a>display</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">display</span><span class="selector-pseudo">:none</span>;</span><br></pre></td></tr></table></figure><p>这种方式将元素设置隐藏后，该元素不会在占用空间。</p><p>设置为以下属性时，会取消 display 的隐藏。</p><ul><li><code>block </code>将元素设置为块级元素</li><li><code>inline </code>将元素设置为内联元素</li><li><code>inline-block</code> 将元素设置为行内块级元素</li></ul><h2 id="visibility"><a href="#visibility" class="headerlink" title="visibility"></a>visibility</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">visibility</span><span class="selector-pseudo">:hidden</span>;</span><br></pre></td></tr></table></figure><p>这种方式设置元素为隐藏后，该元素依旧占有页面空间</p><p>通过将<code>visibility</code>属性值设置为<code>visible</code>将元素显示<br><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@0d41ca1b41e9bc5d14309b91a3c4f12941706b80/2021/01/19/32bb0dd703beb529e0ded76865f61b10.png"><br><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@feee307f9ef20221b4938826680da7940d384feb/2021/01/19/b9b6a34266dda0c30ee38b8dba81e52e.png"></p><h1 id="display属性"><a href="#display属性" class="headerlink" title="display属性"></a>display属性</h1><p>display 不仅仅是作为显示与隐藏。</p><p>参考：<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/display">https://developer.mozilla.org/zh-CN/docs/Web/CSS/display</a></p><h1 id="内容溢出"><a href="#内容溢出" class="headerlink" title="内容溢出"></a>内容溢出</h1><p>盒子放不下时内容就会超出盒子。内容是文本内容、一张图片和其他元素，超出指定容器元素的范围。如图</p><ul><li><p>情况一（容器元素 div 内容是文本）<br><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@fb7a13d1c534d7272882a3ce6ddebe72e6c61b77/2021/01/19/bab893e380bd5fc3598a191b60ee6b34.png"></p></li><li><p>情况二（指定元素中的图片超出元素范围）<br><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@b58a0b9f1381caae819e31fd5579cf989a6e016f/2021/01/19/c01e532fcc301dcdf483ec49532bc69b.png"></p></li><li><p>情况三（指定元素中子级元素超出范围）<br><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@658faec8d356f41e2050ddaa13d0e4f2e535590c/2021/01/19/b759dab915a0b9ad341e506d96f0bbe6.png"></p></li></ul><p>解决方案：<code>overflow</code></p><ul><li><p>visible：默认值。内容不会被修建，会显示在父级容器之外</p></li><li><p>hidden: 内容会被修剪，并且其余内容不可见。<br>隐藏的部分不会被看到</p></li><li><p>scroll: 内容会被修剪，浏览器会显示滚动条以便查看其余内容。<br>始终提示滚动条，效果不好</p></li><li><p>auto：浏览器决定<br>如果内容溢出，提供相应的滚动条；没有溢出不做任何处理</p></li></ul><h2 id="overflow-x-属性"><a href="#overflow-x-属性" class="headerlink" title="overflow-x 属性"></a>overflow-x 属性</h2><p>水平方向上的溢出</p><ul><li>visible: 默认值。内容不会被修剪，会显示在父级容器之外。</li><li>hidden: 内容会被修剪，并且其余内容不可见。.</li><li>scroll: 内容会被修剪，浏览器会显示滚动条以便查看其余内容。</li><li>auto: 由浏览器决定，如果内容被修剪，就会显示滚动条。</li></ul><p>overflow-y 相似。</p><h2 id="text-overflow属性"><a href="#text-overflow属性" class="headerlink" title="text-overflow属性"></a>text-overflow属性</h2><p>text-overflow 属性确定如何向用户发出未显示的溢出内容信号。它可以被剪切，显示一个省略号 (…) 或显示一个自定义字符串。该属性具有以下几个值:</p><ul><li>clip: 将文本内容超出父级容器的部分隐藏。</li><li>ellipsis: 将文本内容超出父级容器的部分使用省略号 (…) 表示。.</li><li>sting: 将文本内容超出父级容器的部分使用指定文本内容表示，例如 “.” 等</li></ul><p><img src="https://tva1.sinaimg.cn/large/005B3XPgly1gbp1uslp6oj30vx03kdh7.jpg"><br>设置此属性必须先设置<code>overflow</code>属性。无法单独使用。</p>]]></content>
      
      
      <categories>
          
          <category> Web前端 </category>
          
          <category> HTML+CSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML+CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前端三剑客🔗盒子模型</title>
      <link href="2021/01/19/%E5%89%8D%E7%AB%AF/HTML+CSS/%E5%89%8D%E7%AB%AF%E4%B8%89%E5%89%91%E5%AE%A2_%E7%9B%92%E5%AD%90%E6%A8%A1%E5%9E%8B/"/>
      <url>2021/01/19/%E5%89%8D%E7%AB%AF/HTML+CSS/%E5%89%8D%E7%AB%AF%E4%B8%89%E5%89%91%E5%AE%A2_%E7%9B%92%E5%AD%90%E6%A8%A1%E5%9E%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="盒子模型概述"><a href="#盒子模型概述" class="headerlink" title="盒子模型概述"></a>盒子模型概述</h1><p>盒子模型又称为框模型，<code>HTML</code> 页面<strong>所有的元素</strong>都具有盒子模型，该模型用于设计<code>HTML</code>页面和实现 <code>HTML</code> 页面布局<br><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@da3525f69c3cfeeec31580f986735828f58df401/2021/01/19/ef39a7011e47c34bceea06182b3d6574.png"></p><p>相关概念</p><ul><li><p>内容区（<code>content</code>）<br>用于显示文本和图像</p></li><li><p>内边距（<code>padding</code>）<br>内容区至边框的边距</p></li><li><p>边框（<code>border</code>）<br>内容区的边界</p></li><li><p>外边距（<code>margin</code>）<br>两个元素的边距之间的距离</p></li></ul><h1 id="盒子大小"><a href="#盒子大小" class="headerlink" title="盒子大小"></a>盒子大小</h1><p>默认情况下，一个盒子的大小刚好容纳其中的内容 (文本、图片等)，并根据其中内容的变化而变化。<br>通过 CSS 的<code> width</code> 属性和<code>height</code>属性可以设置盒子显示的宽度和高度，从而改变盒子的大小。.</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">height</span>:<span class="number">100px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="盒子阴影"><a href="#盒子阴影" class="headerlink" title="盒子阴影"></a>盒子阴影</h1><p>盒子的阴影广泛应用。但实现非常简单。</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">box-shadow: offset-x |  offset-y |  blur | spread | color | inset;</span><br></pre></td></tr></table></figure><ul><li><code>box-shadow</code> 属性用于向盒子添加一个或多个阴影效果。</li><li><code>offset-x</code>：阴影的<code>水平偏移量</code>。正数向<code>右</code>偏移，负数向<code>左</code>偏移。</li><li><code>offset-y</code>：阴影的<code>垂直偏移量</code>。正数向<code>下</code>偏移，负数向<code>上</code>偏移。</li><li><code>blur</code>：阴影模糊度，不能取负数，表示影子的虚实。</li><li><code>spread</code>：阴影大小。正数阴影扩大（阴影大小大于盒子大小），负数阴影缩小（阴影大小小于盒子大小），0阴影与盒子同等大小。</li><li><code>color</code>：阴影的颜色</li><li><code>inset</code>：表示添加内阴影，默认为外阴影(<code>outset</code>)。</li></ul><div class="note warning flat"><p>默认是外阴影(outset)，但是不可以写这个单词，否则导致阴影无效<br>盒子阴影不占空间，不会影响其他盒子排列</p></div><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* x偏移量 | y偏移量 | 阴影颜色 */</span></span><br><span class="line"><span class="selector-tag">box-shadow</span>: 60<span class="selector-tag">px</span> <span class="selector-tag">-16px</span> <span class="selector-tag">teal</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* x偏移量 | y偏移量 | 阴影模糊半径 | 阴影颜色 */</span></span><br><span class="line"><span class="selector-tag">box-shadow</span>: 10<span class="selector-tag">px</span> 5<span class="selector-tag">px</span> 5<span class="selector-tag">px</span> <span class="selector-tag">black</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* x偏移量 | y偏移量 | 阴影模糊半径 | 阴影扩散半径 | 阴影颜色 */</span></span><br><span class="line"><span class="selector-tag">box-shadow</span>: 2<span class="selector-tag">px</span> 2<span class="selector-tag">px</span> 2<span class="selector-tag">px</span> 1<span class="selector-tag">px</span> <span class="selector-tag">rgba</span>(0, 0, 0, 0<span class="selector-class">.2</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 插页(阴影向内) | x偏移量 | y偏移量 | 阴影颜色 */</span></span><br><span class="line"><span class="selector-tag">box-shadow</span>: <span class="selector-tag">inset</span> 5<span class="selector-tag">em</span> 1<span class="selector-tag">em</span> <span class="selector-tag">gold</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 任意数量的阴影，以逗号分隔 */</span></span><br><span class="line"><span class="selector-tag">box-shadow</span>: 3<span class="selector-tag">px</span> 3<span class="selector-tag">px</span> <span class="selector-tag">red</span>, <span class="selector-tag">-1em</span> 0 0<span class="selector-class">.4em</span> <span class="selector-tag">olive</span>;</span><br></pre></td></tr></table></figure><h2 id="外阴影"><a href="#外阴影" class="headerlink" title="外阴影"></a>外阴影</h2><div class="note success flat"><p>设置单个阴影</p></div><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.box</span> &#123;</span></span><br><span class="line">            width: 300px;</span><br><span class="line">            height: 300px;</span><br><span class="line">            margin: 100px 100px;</span><br><span class="line"><span class="css">            <span class="selector-tag">border</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#CCCCCC</span>;</span></span><br><span class="line">            box-shadow: 0px 0px 20px rgb(165, 149, 149);</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@3508417f06ae58a45d7fe17a08bd85f3da85efff/2021/01/19/c4d34bc43623b14e15be1243daa00091.png" width="30%/"><div class="note success flat"><p>设置多个阴影</p></div><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.box</span> &#123;</span></span><br><span class="line">            width: 300px;</span><br><span class="line">            height: 300px;</span><br><span class="line">            margin: 100px 100px;</span><br><span class="line"><span class="css">            <span class="selector-tag">border</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#CCCCCC</span>;</span></span><br><span class="line">            box-shadow: 0px 0px 10px red, 5px -5px 10px blue, 10px -10px 10px yellow, 20px -20px 10px black;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@9c9e69d7acdeef2125e68f5e2c271efd1ce33f74/2021/01/19/3749192d37749c57091bcf7af4af1136.png" width="30%"><div class="note success flat"><p>spread取值对阴影大小的影响</p></div><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.box</span> &#123;</span></span><br><span class="line">            width: 100px;</span><br><span class="line">            height: 100px;</span><br><span class="line">            margin: 100px 100px;</span><br><span class="line"><span class="css">            <span class="selector-tag">border</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#CCCCCC</span>;</span></span><br><span class="line">            box-shadow: 120px 0px 0px 0px red;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@d72d5c94142e9877a68fec8e3275e0f5e249bc58/2021/01/19/2e8cfda74b811bb306afadddbbe83f0f.png"></p><div class="note warning flat"><p>由上图可见，当 spread 为0时，阴影大小与元素大小相同。</p></div><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.box</span> &#123;</span></span><br><span class="line">            width: 100px;</span><br><span class="line">            height: 100px;</span><br><span class="line">            margin: 100px 100px;</span><br><span class="line"><span class="css">            <span class="selector-tag">border</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#CCCCCC</span>;</span></span><br><span class="line">            box-shadow: 120px 0px 0px 10px red;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@3c4b1c95beab92b1e0ee6e6afd55de559513446e/2021/01/19/f18dca8aa96c5100c486d55f1125b1c6.png"><br>由上图可见，当 spread 为正数时，阴影大小将大于元素大小。如原来总宽高为102px的元素（包括边框2px），在设置阴影大小为10px后，阴影的宽高会变为122px（阴影宽高各加10）</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.box</span> &#123;</span></span><br><span class="line">            width: 100px;</span><br><span class="line">            height: 100px;</span><br><span class="line">            margin: 100px 100px;</span><br><span class="line"><span class="css">            <span class="selector-tag">border</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#CCCCCC</span>;</span></span><br><span class="line">            box-shadow: 120px 0px 0px -10px red;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@d306a7d5c21d51a3dfe4bd0781a34588e2d6aaca/2021/01/19/c3493e2ac79584e07b45fc874d023e98.png"><br>由上图可见，当 spread 为负数时，阴影大小将小于元素大小。如原来总宽高为102px的元素（包括边框2px），在设置阴影大小为-10px后，阴影的宽高会变为82px（阴影宽高各减10）。</p><h2 id="内阴影"><a href="#内阴影" class="headerlink" title="内阴影"></a>内阴影</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.box</span> &#123;</span></span><br><span class="line">            width: 300px;</span><br><span class="line">            height: 300px;</span><br><span class="line">            margin: 100px 100px;</span><br><span class="line"><span class="css">            <span class="selector-tag">border</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#CCCCCC</span>;</span></span><br><span class="line">            box-shadow: 0px 0px 20px red inset;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@cac951db47512dec9e12a623bf04898bddbd9faa/2021/01/19/205f2fe3eecd69aebf82992f7549d363.png" width="30%"># 盒子边框## 大小 样式 颜色<h3 id="简写属性，表示边框"><a href="#简写属性，表示边框" class="headerlink" title="简写属性，表示边框"></a>简写属性，表示边框</h3><p>核心要素包括</p><ul><li>边框的宽度（默认值为<code> 1px</code>）</li><li>边框的样式（无默认值，必须直接给出）</li><li>边框的颜色（默认值是黑色）</li></ul><p>显示效果：同时设置上下左右四个方向的边框</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span>&#123;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">10px</span> solid black;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="组合属性"><a href="#组合属性" class="headerlink" title="组合属性"></a>组合属性</h3><p>以上简写属性相当于同时为一个<code>border</code>设置宽度、样式和颜色。</p><p>例如上述代码可以写成以下形式</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span>&#123;</span><br><span class="line">    <span class="attribute">border-width</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">border-style</span>: solid;</span><br><span class="line">    <span class="attribute">border-color</span>: black;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>关于三中属性的的取值问题（以<code>border-width</code>为例）</p><ul><li><code>border-width: 10px;</code> : 代表四个方向</li><li><code>border-width: 10px 20px;</code> : 第一个值表示上下、第二个值表示左右</li><li><code>border-width: 10px 20px 30px;</code> : 第一个值表示上、第二个值表示左右、第三个值表示下</li><li><code>border-width: 10px 20px 30px 40px;</code> : 上、右、下、左</li></ul><h3 id="不同方向上的边框"><a href="#不同方向上的边框" class="headerlink" title="不同方向上的边框"></a>不同方向上的边框</h3><p>按照上右下左的方向分别为</p><ul><li><code>border-top</code></li><li><code>border-right</code></li><li><code>border-bottom</code></li><li><code>border-left</code></li></ul><p>而每个方向上的边框也可以分别设置不同的属性，例如</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span>&#123;</span><br><span class="line">    <span class="attribute">border-top-width</span>:<span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">border-top-style</span>:solid;</span><br><span class="line">    <span class="attribute">border-top-color</span>:black;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="圆角边框"><a href="#圆角边框" class="headerlink" title="圆角边框"></a>圆角边框</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">border-radius: 30px|30%;</span><br></pre></td></tr></table></figure><p>属性的值代表（边框）到圆心的距离。当距离等于外部容器的一半时就形成了一个圆形</p><p><code>radius半径原理</code>：（椭）圆与边框的交集形成圆角效果<br><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@86bcb6cc8c6642a0515316e1c32c9bcc7dbbe78c/2021/01/20/605e65486667b367e1cd40bad2ce1c29.png"></p><ul><li>参数值可以为数值或者百分比的形式</li><li>该属性是一个简写属性，可以跟四个值，分别代表<code>左上角、右上角、右下角、左下角</code><ul><li><code>border-top-left-radius</code></li><li><code>border-top-right-radius</code></li><li><code>border-bottom-right-radius</code></li><li><code>border-bottom-left-radius</code></li></ul></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>圆角边框<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        div&#123;</span><br><span class="line"><span class="css">            <span class="selector-tag">width</span><span class="selector-pseudo">:100px</span>;</span></span><br><span class="line">            height: 100px;</span><br><span class="line"><span class="css">            <span class="selector-tag">background-color</span><span class="selector-pseudo">:yellowgreen</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.one</span>&#123;</span></span><br><span class="line">            border-radius: 50%;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.two</span>&#123;</span></span><br><span class="line">            border-radius: 20%;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.three</span>&#123;</span></span><br><span class="line">            border-top-left-radius: 20%;</span><br><span class="line">            border-bottom-right-radius: 20%;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>圆形<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;one&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>圆角矩形<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;two&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>不同的圆角<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;three&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@92e44217a7d25bc77cfe274ef8632c4043703a8b/2021/01/20/bd6552c8073a41a3de0515f046c9d669.png" width="20%">## 边框图像使得边框可以引入图像，从而免去在某些情况下使用九宫格了。<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* border-image: image-source image-height image-width image-repeat */</span></span><br><span class="line">border-image: url(&quot;/images/border.png&quot;) 30 30 repeat;</span><br><span class="line">border-image: url(&quot;/images/border.png&quot;) 30 30 stretch;</span><br></pre></td></tr></table></figure><h3 id="border-image-width"><a href="#border-image-width" class="headerlink" title="border-image-width"></a>border-image-width</h3><p>定义图像边框宽度。假如 border-image-width 大于已指定的 <code>border-width</code>，那么它将向内部 (padding/content) 扩展.</p><h3 id="border-image-source"><a href="#border-image-source" class="headerlink" title="border-image-source"></a>border-image-source</h3><p>用于声明元素的边框图片（<code>border-image</code>）的资源</p><h3 id="border-image-slice"><a href="#border-image-slice" class="headerlink" title="border-image-slice"></a>border-image-slice</h3><p>引用边框图片后，<code>border-image-slice</code> 属性会将图片分割为 9 个区域：四个角，四个边（edges）以及中心区域。四条切片线，从它们各自的侧面设置给定距离，控制区域的大小。<br><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@56b79d5bc832e51b70bd29bc983301162b694f73/2021/01/19/aecdec7dd5f21102225dd19d1b572f38.png"><br>上图说明了每个区域的位置。</p><ul><li>区域 1-4 为角区域。 每一个都用一次来形成最终边界图像的角点。</li><li>区域 5-8 边区域。在最终的边框图像中重复，缩放或修改它们以匹配元素的尺寸。</li><li>区域 9 为中心区域。它在默认情况下会被丢弃，但如果设置了关键字<code> fill</code>，则会将其用作背景图像。</li></ul><p>中间的区域将不会被边框使用，但当设置有 fill 关键词时将会被作为 background-image。这个关键词可以被设置在属性的任何一个位置 (前面、后面或者两个值之间)</p><h3 id="border-image-repeat"><a href="#border-image-repeat" class="headerlink" title="border-image-repeat"></a>border-image-repeat</h3><p>定义图片如何填充边框。或为单个值，设置所有的边框；或为两个值，分别设置水平与垂直的边框。</p><h3 id="border-image-outset"><a href="#border-image-outset" class="headerlink" title="border-image-outset"></a>border-image-outset</h3><p>定义边框图像可超出边框盒的大小。</p><h1 id="内边距"><a href="#内边距" class="headerlink" title="内边距"></a>内边距</h1><p>内边距用于设置内容和边框之间的距离，不能设置颜色与元素的背景颜色保持一致.</p><p>同时可以简写，</p><ul><li>一个值：上下左右</li><li>两个值：上下，左右</li><li> 三个值：上，左右，下</li><li>四个值：上右下左</li></ul><p>同时支持拆开写</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">padding-left</span>: 20<span class="selector-tag">px</span>;</span><br><span class="line"><span class="selector-tag">padding-top</span>: 100<span class="selector-tag">px</span>;</span><br><span class="line"><span class="selector-tag">padding-right</span>: 50<span class="selector-tag">px</span>;</span><br><span class="line"><span class="selector-tag">padding-bottom</span>: 30<span class="selector-tag">px</span>;</span><br></pre></td></tr></table></figure><div class="note warning flat"><p>如果盒子已经有了宽度和高度，此时再指定内边框，会撑大盒子<br>解决方法：如果保证盒子跟效果图大小保持一致，则让<code>width/hegiht减去多出来的内边距大小</code>即可</p></div><p>示例代码</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-id">#container</span>&#123;</span></span><br><span class="line">            height: 200px;</span><br><span class="line">            width: 200px;</span><br><span class="line">            background-color: blue;</span><br><span class="line"><span class="css">            <span class="comment">/* padding: 100px; */</span></span></span><br><span class="line">            padding-left: 20px;</span><br><span class="line">            padding-top: 100px;</span><br><span class="line">            padding-right: 50px;</span><br><span class="line">            padding-bottom: 30px;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-id">#content</span>&#123;</span></span><br><span class="line">            width: 200px;</span><br><span class="line">            height: 200px;</span><br><span class="line">            background-color: green;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;content&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@df8780758c2e9089dd0ee4353e088047425b4e5f/2021/01/20/b9e496277a1b3f46467e42d162981161.png" width="20%" height="50%"><div class="note warning flat"><p>如果盒子本身没有指定width/hegiht属性，则此时padding不会撑开盒子大小</p></div><h2 id="导航栏实例"><a href="#导航栏实例" class="headerlink" title="导航栏实例"></a>导航栏实例</h2><p>利用<code>padding</code>可以撑开盒子的特性，用来实现导航栏自适应文字大小</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.nav</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">height</span><span class="selector-pseudo">:41px</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">border-top</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#ff8500</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">border-bottom</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#edeef0</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">background-color</span>: <span class="selector-id">#fff</span>;</span></span><br><span class="line">            line-height: 41px; </span><br><span class="line"><span class="css">            <span class="comment">/*行高和父盒子高度一样，使内容居中*/</span></span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.nav</span> <span class="selector-tag">a</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="comment">/*a属于行内元素需要转换 行内块元素*/</span></span></span><br><span class="line">            display: inline-block;</span><br><span class="line">            font-size: 12px;</span><br><span class="line"><span class="css">            <span class="selector-tag">color</span>:<span class="selector-id">#4c4c4c</span>;</span></span><br><span class="line">            text-decoration: none;</span><br><span class="line"><span class="css">            <span class="selector-tag">height</span>: 41<span class="selector-tag">px</span>; <span class="comment">/*高度和父盒子一样*/</span></span></span><br><span class="line"><span class="css">            <span class="selector-tag">padding</span><span class="selector-pseudo">:0</span> 20<span class="selector-tag">px</span>; <span class="comment">/*设置内容之间的边距*/</span></span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">       <span class="selector-class">.nav</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">background-color</span><span class="selector-pseudo">:turquoise</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;nav&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>新浪导航<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>手机新浪网<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>移动客户端<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>微博<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>关于我<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@9568bbc0f31b07da26273a2c31673bfc63434010/2021/01/20/fdbe8c130603e3be2dc7d35e208c9312.png"></p><h1 id="外边距"><a href="#外边距" class="headerlink" title="外边距"></a>外边距</h1><p><strong>外边距用于控制盒子之间的距离</strong></p><p>左外边距 (<code>margin-left</code>) 控制元素当前水平方向的位置.</p><p>上外边距 (<code>margin-top</code>) 控制元素当前垂直方向的位置.</p><p>下外边距 (<code>margin-bottom</code>) 控制控制块级元素的下一个兄弟元素的位置</p><p>右外边距 (<code>margin-right</code>) 控制内联元素或行内会计元素的下一个兄弟元素的位置.</p><ul><li><code>margin-left</code><ul><li>正值：向右移动</li><li>负值：向左移动</li></ul></li><li><code>margin-top</code><ul><li>正值：向下移动</li><li>负值：向下移动</li></ul></li><li><code>margin-bottom</code><ul><li>正值：下一个兄弟元素向下移动</li><li>负值：下一个兄弟元素向上移动</li></ul></li><li><code>margin-right</code><ul><li>正值：下一个兄弟元素向右移动</li><li>负值：下一个兄弟元素向左移动</li></ul></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        div&#123;</span><br><span class="line">            width: 100px;</span><br><span class="line">            height: 100px;</span><br><span class="line"><span class="css">            <span class="selector-tag">background-color</span><span class="selector-pseudo">:turquoise</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.two</span>&#123;</span></span><br><span class="line">            margin-top: 10px;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;one&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;two&quot;</span>&gt;</span>2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@2442b7a8beb0ead93bc74cf80d0274fc6ba76a57/2021/01/20/fc4c6913a3d3c1b46b14bc08365b2582.png"></p><h2 id="内容水平居中"><a href="#内容水平居中" class="headerlink" title="内容水平居中"></a>内容水平居中</h2><div class="note success flat"><p>块级元素水平居中</p></div><p>外边距可以使块级盒子<code>水平居中</code>，但是必须满足两个条件：</p><ul><li>盒子必须指定了宽度</li><li>盒子<code>左右的外边距</code>都设置为auto</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span>&#123;</span><br><span class="line"><span class="attribute">width</span>:<span class="number">100px</span>;</span><br><span class="line"><span class="attribute">margin</span>:<span class="number">0</span> auto; <span class="comment">/*上下0，左右auto*/</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>固定写法，其中 0 表示上下 auto 表示左右.</p><div class="note success flat"><p>行内元素或者行内块元素水平居中，给父盒子使用<code>text-align:center</code>即可</p></div><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span>&#123;</span><br><span class="line"><span class="attribute">width</span>:<span class="number">100px</span>;</span><br><span class="line"><span class="attribute">margin</span>:<span class="number">0</span> auto; <span class="comment">/*上下0，左右auto*/</span></span><br><span class="line"><span class="attribute">text-align</span>:center;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@c8796fedccfac29130ceb737f5fa9ab914d1d64c/2021/01/20/a9fa9366322c356be4ef5df04d8db3df.png"></p><h1 id="清除内外边距"><a href="#清除内外边距" class="headerlink" title="清除内外边距"></a>清除内外边距</h1><p>网页元素很多都带有默认的内外边距（比如ul标签），而且不同浏览器默认的也不一样，因此在布局前，首先要清除下网页元素的内外边距</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">*&#123;</span><br><span class="line">   <span class="attribute">padding</span>:<span class="number">0</span>;</span><br><span class="line">   <span class="attribute">margin</span>:<span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="note warning flat"><p>行内元素为了照顾兼容性，尽量只设置左右内外边距，不要设置上下内外边距，但是转换为块级和行内块元素就可以了</p></div><h1 id="外边距常见的问题"><a href="#外边距常见的问题" class="headerlink" title="外边距常见的问题"></a>外边距常见的问题</h1><h2 id="外边距重叠"><a href="#外边距重叠" class="headerlink" title="外边距重叠"></a>外边距重叠</h2><p>当上下两个块元素（兄弟关系）相遇时，如果上面的元素有下外边距margin-bottom，下面的元素有上外边距margin-top，则它们之间的垂直间距本身margin-bottom与margin-top之和。<code>取两个值中较大者这种现象</code>被称为<strong>相邻块元素垂直外边距的合并</strong>，也叫<strong>外边距层叠</strong></p><p>外边距重叠的问题只出现在上外边距和下外边距中<br>左外边距和右外边距之间不存在外边距重叠<br><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@eb4e0140431334a29dcf232b723414a9303fb8fe/2021/01/19/bc1654ecce018ca024648bb735c5dd94.png"><br>解决方案:</p><ul><li>简单的解决方案有两种:<ul><li>为上一个元素设置下外边距为 300px</li><li>为下一个元素设置上外边距为 300px</li><li>也就是尽量只给一个盒子添加margin属性值</li></ul></li></ul><h2 id="外边距传递"><a href="#外边距传递" class="headerlink" title="外边距传递"></a>外边距传递</h2><p>对于两个嵌套关系（父子关系）的块元素，父元素有上外边距同时子元素也有上外边距，此时父元素会塌陷较大的外边距值(此时，<strong>设置子盒子的外边距也会带动父盒子的移动</strong>)<br><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@ea8bfd76a5b0ddc14c479e58d315fda01e8ba532/2021/01/20/dfc9f1cdaa97ce3a0badfccc19960e06.png"></p><div class="note success flat"><p>出现这种情况就是因为子盒子贴父盒子太紧了</p></div><p>解决方案：</p><ul><li><strong>可以为父元素定义上边框</strong></li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.father</span>&#123;</span><br><span class="line">   <span class="attribute">border</span>: <span class="number">1px</span> solid;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>可以为父元素定义上内边框</strong></li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.father</span>&#123;</span><br><span class="line">   <span class="attribute">padding</span>:<span class="number">1px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>可以为父元素添加<code>overflow:hidden</code></strong></li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.father</span>&#123;</span><br><span class="line">   <span class="attribute">overflow</span>: hidden;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@bdee9327034080a2a92c260ee61f1822c3df3667/2021/01/20/54d582dec6b833bde318e3d67afc87e9.png"></p><h1 id="盒子模型的类型"><a href="#盒子模型的类型" class="headerlink" title="盒子模型的类型"></a>盒子模型的类型</h1><h2 id="块级元素"><a href="#块级元素" class="headerlink" title="块级元素"></a>块级元素</h2><p><strong>可以设置宽高</strong></p><h2 id="内联元素"><a href="#内联元素" class="headerlink" title="内联元素"></a>内联元素</h2><ul><li>水平方向的内边距有效的 - 控制文本内容在水平方向的位置</li><li>垂直方向的内边距有效的 - 文本内容的位置没有变化，内边距向上和向下进行扩展</li><li>垂直方向的外边距无效的 - 上外边距和下外边距</li><li>水平方向的外边距有效的</li></ul><h2 id="行内块级元素"><a href="#行内块级元素" class="headerlink" title="行内块级元素"></a>行内块级元素</h2><p>与块级元素相同</p><h2 id="盒子类型"><a href="#盒子类型" class="headerlink" title="盒子类型"></a>盒子类型</h2><p>box- sizing 属性用于设置盒子模型的类型，该属性的值具有两个:</p><ul><li>content-box: 默认值，称为标准盒子模型。<br>该模型设置元素在 HTML 页面中所占区域为内容区 + 内边距 + 边框的宽度 + 外边距。</li><li>border-box: 称为怪异盒子模型，最早是由微软提出的。<br>该模型设置元素在 HTML 页面中所占区域为盒子的大小 + 外边距。.</li></ul><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@9a386df21fcd8f4b8accf97997d08389348ff957/2021/01/19/db9da6c17f39c79c2850456476c99139.png"></p><h1 id="应用示例"><a href="#应用示例" class="headerlink" title="应用示例"></a>应用示例</h1><h2 id="实现三角形"><a href="#实现三角形" class="headerlink" title="实现三角形"></a>实现三角形</h2><p>实现步骤</p><ul><li><p>div 的宽高为 0</p></li><li><p>设置边框的宽度</p></li><li><p>设置边框样式</p></li><li><p>设置颜色<br>  border-color: white white white black;/* 左边为黑色 */</p></li></ul><p>完整代码</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>边框的特殊应用<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        div &#123;</span><br><span class="line">            width: 0;</span><br><span class="line">            height: 0;</span><br><span class="line">            border-width: 20px;</span><br><span class="line">            border-style: solid;</span><br><span class="line"><span class="css">            <span class="selector-tag">border-color</span>: <span class="selector-tag">white</span> <span class="selector-tag">white</span> <span class="selector-tag">white</span> <span class="selector-tag">black</span>;<span class="comment">/* 左边为黑色 */</span></span></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@508932f8a7d9f6ce96710750f29a45204b35b041/2021/01/19/a894af970ca0bb85683f1abe1d75a3fb.png"></p><h2 id="按钮效果"><a href="#按钮效果" class="headerlink" title="按钮效果"></a>按钮效果</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>注册按钮效果的优化<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.container</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="comment">/* 当前元素的默认宽度为父级元素的100% */</span></span></span><br><span class="line">            width: 659px;</span><br><span class="line"><span class="css">            <span class="comment">/* 当前元素的宽度不能是父级元素宽度的100% */</span></span></span><br><span class="line">            margin: 0 auto;</span><br><span class="line">        &#125;</span><br><span class="line">        a &#123;</span><br><span class="line"><span class="css">            <span class="selector-tag">display</span>: <span class="selector-tag">inline-block</span>;<span class="comment">/* 显示效果设置行内块级元素 */</span></span></span><br><span class="line"><span class="css">            <span class="comment">/* 设置显示区域大小 */</span></span></span><br><span class="line">            width: 111px;</span><br><span class="line">            height: 40px;</span><br><span class="line"><span class="css">            <span class="comment">/* 引入背景图像 */</span></span></span><br><span class="line">            background: url(&quot;https://tva1.sinaimg.cn/large/005B3XPgly1gbmo8n9srbj30i212w761.jpg&quot;) no-repeat;</span><br><span class="line"><span class="css">            <span class="comment">/* 修改链接的默认效果 */</span></span></span><br><span class="line"><span class="css">            <span class="selector-tag">color</span>: <span class="selector-id">#ffffff</span>;</span></span><br><span class="line">            text-decoration: none;</span><br><span class="line"><span class="css">            <span class="comment">/* 通过行高的设置实现垂直方向的居中效果 */</span></span></span><br><span class="line">            line-height: 40px;</span><br><span class="line"><span class="css">            <span class="comment">/* 通过盒子模型的内边距设置文本内容的显示位置 */</span></span></span><br><span class="line">            padding-left: 50px;</span><br><span class="line"></span><br><span class="line">            font-size: 14px;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-id">#phone</span> &#123;</span></span><br><span class="line">            background-position: -310px -461px;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-id">#weibo</span> &#123;</span></span><br><span class="line">            background-position: -1px -601px;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-id">#qq</span> &#123;</span></span><br><span class="line">            background-position: -1px -651px;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-id">#wechat</span> &#123;</span></span><br><span class="line">            background-position: -213px -1191px;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-id">#phone</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line">            background-position: -310px -521px;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-id">#weibo</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line">            background-position: -199px -601px;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-id">#qq</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line">            background-position: -199px -651px;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-id">#wechat</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line">            background-position: -213px -1251px;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- &lt;div&gt;元素称为容器元素 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">id</span>=<span class="string">&quot;phone&quot;</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span> 手机注册<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">id</span>=<span class="string">&quot;weibo&quot;</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span> 新浪微博注册<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">id</span>=<span class="string">&quot;qq&quot;</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span> 腾讯QQ注册<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">id</span>=<span class="string">&quot;wechat&quot;</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span> 微信注册<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@79e88cfc4ad568687e3d53698c91cfd8b2f90ea6/2021/01/19/5f00e7e7a8c331d64ab79be3d984a3df.png"></p><h2 id="产品模块"><a href="#产品模块" class="headerlink" title="产品模块"></a>产品模块</h2><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@f2f5add073699ca0cf12bbe0021c29862b65fa64/2021/01/20/b38661ee84883a7c9e0197c4a84f1b35.png"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>综合案例-产品模块<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">      * &#123;</span><br><span class="line">          margin: 0;</span><br><span class="line">          padding: 0;</span><br><span class="line">      &#125;</span><br><span class="line">      body &#123;</span><br><span class="line"><span class="css">          <span class="selector-tag">background-color</span>: <span class="selector-id">#f5f5f5</span>;</span></span><br><span class="line">      &#125;</span><br><span class="line">      a &#123;</span><br><span class="line"><span class="css">          <span class="selector-tag">color</span>: <span class="selector-id">#333</span>;</span></span><br><span class="line">          text-decoration: none;</span><br><span class="line">      &#125;</span><br><span class="line"><span class="css">      <span class="selector-class">.box</span> &#123;</span></span><br><span class="line">          width: 298px;</span><br><span class="line">          height: 415px;</span><br><span class="line"><span class="css">          <span class="selector-tag">background-color</span>:<span class="selector-id">#fff</span>;</span></span><br><span class="line"><span class="css">          <span class="comment">/* 让块级的盒子水平居中对齐 */</span></span></span><br><span class="line">          margin: 100px auto;</span><br><span class="line">      &#125;</span><br><span class="line"><span class="css">      <span class="selector-class">.box</span> <span class="selector-tag">img</span> &#123;</span></span><br><span class="line"><span class="css">          <span class="comment">/* 图片的宽度和父亲一样宽 */</span></span></span><br><span class="line">          width: 100%;</span><br><span class="line">      &#125;</span><br><span class="line"><span class="css">      <span class="selector-class">.review</span> &#123;</span></span><br><span class="line">          height: 70px;</span><br><span class="line">          font-size: 14px;</span><br><span class="line"><span class="css">          <span class="comment">/* 因为这个段落没有 width属性 所有 padding不会撑开盒子的宽度 */</span></span></span><br><span class="line">          padding: 0 28px;</span><br><span class="line">          margin-top: 30px;</span><br><span class="line">      &#125;</span><br><span class="line"><span class="css">      <span class="selector-class">.appraise</span> &#123;</span></span><br><span class="line">          font-size: 12px;</span><br><span class="line"><span class="css">          <span class="selector-tag">color</span>: <span class="selector-id">#b0b0b0</span>;</span></span><br><span class="line">          margin-top: 20px;</span><br><span class="line">          padding: 0 28px;</span><br><span class="line">      &#125;</span><br><span class="line"><span class="css">      <span class="selector-class">.info</span> &#123;</span></span><br><span class="line">          font-size: 14px;</span><br><span class="line">          margin-top: 15px;</span><br><span class="line">          padding: 0 28px;</span><br><span class="line">      &#125;</span><br><span class="line"><span class="css">      <span class="selector-class">.info</span> <span class="selector-tag">h4</span> &#123;</span></span><br><span class="line">          display: inline-block;</span><br><span class="line">          font-weight: 400;</span><br><span class="line">        </span><br><span class="line">      &#125;</span><br><span class="line"><span class="css">      <span class="selector-class">.info</span> <span class="selector-tag">span</span> &#123;</span></span><br><span class="line"><span class="css">          <span class="selector-tag">color</span>: <span class="selector-id">#ff6700</span>;    </span></span><br><span class="line">      &#125;</span><br><span class="line"><span class="css">      <span class="selector-class">.info</span> <span class="selector-tag">em</span> &#123;</span></span><br><span class="line"><span class="css">          <span class="selector-tag">font-style</span>: <span class="selector-tag">normal</span>; <span class="comment">/*小竖线处理*/</span></span></span><br><span class="line"><span class="css">          <span class="selector-tag">color</span>: <span class="selector-id">#ebe4e0</span>;</span></span><br><span class="line">          margin: 0 6px 0 15px;</span><br><span class="line">      &#125;</span><br><span class="line"><span class="css">      <span class="selector-class">.box</span><span class="selector-pseudo">:hover</span>&#123;</span></span><br><span class="line">        box-shadow: 0px 0px 20px rgb(165, 149, 149);</span><br><span class="line">      &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;images/img.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;review&quot;</span>&gt;</span>快递牛，整体不错蓝牙可以说秒连。红米给力<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;appraise&quot;</span>&gt;</span>来自于 117384232 的评价<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;info&quot;</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">h4</span>&gt;</span> <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>Redmi AirDots真无线蓝...<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">em</span>&gt;</span>|<span class="tag">&lt;/<span class="name">em</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">span</span>&gt;</span> 99.9元<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@b0c6a8b5587e5495a1417be1218a54406454aad7/2021/01/20/2b512b693cfa07dbdfb4d84a3e5ba809.png"></p>]]></content>
      
      
      <categories>
          
          <category> Web前端 </category>
          
          <category> HTML+CSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML+CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前端三剑客🔗文本样式</title>
      <link href="2021/01/18/%E5%89%8D%E7%AB%AF/HTML+CSS/%E5%89%8D%E7%AB%AF%E4%B8%89%E5%89%91%E5%AE%A2_%E6%96%87%E6%9C%AC%E6%A0%B7%E5%BC%8F/"/>
      <url>2021/01/18/%E5%89%8D%E7%AB%AF/HTML+CSS/%E5%89%8D%E7%AB%AF%E4%B8%89%E5%89%91%E5%AE%A2_%E6%96%87%E6%9C%AC%E6%A0%B7%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<h1 id="结构化元素"><a href="#结构化元素" class="headerlink" title="结构化元素"></a>结构化元素</h1><p>结构化元素就是指 HTML 元素中具有明确含义和作用的元素，例如元素表示段落。相对于 HTML 4.01 版本而言，HTML5 版本新增了一系列结构化元素</p><table><thead><tr><th align="center">名称</th><th align="center">代码</th></tr></thead><tbody><tr><td align="center">标题元素</td><td align="center">&lt;h1&gt;~&lt;h6&gt;</td></tr><tr><td align="center">段落元素</td><td align="center">&lt;p&gt;</td></tr><tr><td align="center">粗体元素</td><td align="center">&lt;b&gt;</td></tr><tr><td align="center">斜体元素</td><td align="center">&lt;i&gt;</td></tr><tr><td align="center">上标 /下标元素</td><td align="center">&lt;sup&gt;/&lt;sub&gt;</td></tr><tr><td align="center">换行符</td><td align="center">&lt;br&gt;</td></tr><tr><td align="center">水平线元素</td><td align="center">&lt;hr&gt;</td></tr></tbody></table><p>HTML5 新增的结构元素</p><ul><li>&lt;article&gt; 元素</li><li>&lt;section&gt; 元素</li><li>&lt;nav&gt; 元素</li><li>&lt;aside&gt; 元素</li><li>&lt;header&gt; 元素</li><li>&lt;main&gt; 元素</li><li>&lt;footer&gt; 元素</li></ul><h2 id="HTML4中的元素"><a href="#HTML4中的元素" class="headerlink" title="HTML4中的元素"></a>HTML4中的元素</h2><h3 id="标题元素"><a href="#标题元素" class="headerlink" title="标题元素"></a>标题元素</h3><p>HTML 标题元素具体是指&lt;h1&gt;~&lt;h6&gt; 元素，其呈现了 6 个不同级别的标题，&lt;h1&gt; 元素级别最高，&lt;h6&gt; 元素级别最低。每个元素独占一行<br><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@acee5c1d8bf13a2d191b54fcf2800e0a27150fc2/2021/01/19/822e1a43adccc71b0a05552cb2e2af09.png"><br>注意：</p><ul><li>对于搜索引擎抓取 HTML 页面的内容，&lt;h1&gt; 元素仅次于 &lt;title&gt; 元素。为了可以被搜索引擎抓取，建议一个 HTML 页面只包含一个&lt;h1&gt; 元素。</li><li>不要为了减小标题的字体而使用低级别的标题， 而是通过使用 CSS font-size 属性实现。</li><li>避免跳过某级标题，始终要从 &lt;h1&gt; 元素开始，依次使用 &lt;h2&gt; 元素、&lt;h3&gt; 元素、… …</li></ul><h3 id="段落元素"><a href="#段落元素" class="headerlink" title="段落元素"></a>段落元素</h3><p>HTML &lt;p&gt; 元素表示一个段落，该元素通常呈现出当前段落的文本与其他段落的文本之间会以空白进行隔离。如下示例代码展示了 &lt;p&gt; 元素的用法：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>这是第一个段落内容.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>这是第二个段落内容.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="粗体元素"><a href="#粗体元素" class="headerlink" title="粗体元素"></a>粗体元素</h3><p>HTML &lt;b&gt; 元素用来定义需要提醒注意的内容。该元素在过去被认为是粗体元素，因为绝大多数浏览器解析该元素呈现的是粗体效果。</p><div class="note success flat"><p>如果不是出于语义目的而使用 &lt;b&gt; 元素，那么让文本显示粗体更好的方式是使用将 CSS 的 font-weight 属性设置为 bold。</p></div><p>&lt;b&gt; 元素的应用场景例如摘要中的关键字、评论中的产品名称，或其他典型的应该加粗显示的文字。</p><p>以前&lt;b&gt; 元素的含义就是让文本变成粗体效果。但从 HTML4 版本开始，不赞成标签表示带样式信息，于是&lt;b&gt; 元素的含义发生了变化。</p><h3 id="斜体元素"><a href="#斜体元素" class="headerlink" title="斜体元素"></a>斜体元素</h3><p>HTML&lt;i&gt; 元素用来定义表现因某些原因需要区分普通文本的一系列文本，例如技术术语、外文短语或是小说中人物的思想活动等。浏览器运行解析 &lt;i&gt; 元素一般呈现的效果是斜体<br><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@c37d58ae4c37e92851224ce36bbdb95f00344198/2021/01/19/44cb771ca8cc2d62f6d37fdfbad247a3.png"></p><h3 id="上标-下标元素"><a href="#上标-下标元素" class="headerlink" title="上标/下标元素"></a>上标/下标元素</h3><p>HTML &lt;sup&gt; 元素表示为上标元素，HTML &lt;sub&gt; 元素表示为下标元素。这两个元素的特点如下：</p><p>&lt;sup&gt; 元素定义的文本内容与主体内容相比，显示更高更小。<br>&lt;sub&gt; 元素定义的文本内容与主体内容相比，显示更低更小。<br>如下示例代码展示了 &lt;sup&gt; 元素和 &lt;sub&gt; 元素的用法：<br><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@f108cd03dc105551f59a736ef2f76a48c774ad9e/2021/01/19/e3dcb9436f283040e10b8dcc3fa47ceb.png"></p><h3 id="换行符"><a href="#换行符" class="headerlink" title="换行符"></a>换行符</h3><p>HTML &lt;br&gt; 元素会在 HTML 页面中生成一个换行符。编写在 &lt;br&gt; 元素后的文本内容会呈现在第二行中</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>哈哈哈<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>呵呵呵<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>哈哈哈<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>呵呵呵<span class="tag">&lt;/<span class="name">span</span></span></span><br></pre></td></tr></table></figure><h3 id="水平线元素"><a href="#水平线元素" class="headerlink" title="水平线元素"></a>水平线元素</h3><p>HTML &lt;hr&gt; 元素用来表示段落元素之间的主题转换。在较早版本的 HTML 中，&lt;hr&gt; 元素表示一个水平线，并且浏览器运行解析也是水平线效果。但目前 &lt;hr&gt; 元素被定义为语义上的，而不是表现上。</p><p>如下示例代码展示了&lt;hr&gt; 元素的用法：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">p&gt;§1: 这是一个段落内容.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>§2: 这是另一个段落内容.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="HTML5-版本的结构化元素"><a href="#HTML5-版本的结构化元素" class="headerlink" title="HTML5 版本的结构化元素"></a>HTML5 版本的结构化元素</h2><h3 id="lt-article-gt-元素"><a href="#lt-article-gt-元素" class="headerlink" title="&lt;article&gt; 元素"></a>&lt;article&gt; 元素</h3><p>HTML &lt;article&gt; 元素用来定义 HTML 页面中的可独立分配或可复用结构，例如论坛的帖子、新闻网站的文章等。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">article</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>前端开发<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>前端开发现在已经是软件开发领域中的主流。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">small</span>&gt;</span>版权归属 *** 公司所有。<span class="tag">&lt;/<span class="name">small</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">article</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="lt-section-gt-元素"><a href="#lt-section-gt-元素" class="headerlink" title="&lt;section&gt; 元素"></a>&lt;section&gt; 元素</h3><p>HTML &lt;section&gt; 元素用来定义 HTML 页面中的独立部分，该独立部分没有更具体的的语义元素来描述该元素。<br>关于 &lt;section&gt; 元素在开发中的使用时需要注意如下要点：</p><p>一般通过是否包含一个标题元素（&lt;h1&gt; ~ &lt;h6&gt;）作为子级元素来识别每一个 &lt;section&gt; 元素。</p><p>如果元素内容可以分为几个部分的话，应该使用 &lt;article&gt; 元素 而不是 &lt;section&gt; 元素。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">section</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">article</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>这是第一个测试内容.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">article</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">article</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>这是第二个测试内容.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">article</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br></pre></td></tr></table></figure><div class="note warning flat"><p>不要将 &lt;section&gt; 元素作为一个普通容器使用，这应该是&lt;div&gt; 元素的用法</p></div><h3 id="lt-nav-gt-元素"><a href="#lt-nav-gt-元素" class="headerlink" title="&lt;nav&gt; 元素"></a>&lt;nav&gt; 元素</h3><p>HTML &lt;nav&gt; 元素用来定义 HTML 页面中的导航链接，比较常见的是菜单，目录和索引</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">nav</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>设计与构建静态网站<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>JavaScript基础核心语法<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>DOM编程艺术<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>上述示例所示效果是 &lt;ul&gt; 列表元素的呈现效果，因为没有为 &lt;nav&gt; 元素设定任何 CSS 样式，默认是没有任何效果的。</p></blockquote><p>关于 &lt;nav&gt; 元素在开发中的使用时需要注意如下要点：</p><p>并不是所有的链接都必须使用 &lt;nav&gt; 元素，该元素只用于将一些热门的链接放入导航栏。<br>一个 HTML 页面可能存在多个 &lt;nav&gt; 元素</p><h3 id="lt-aside-gt-元素"><a href="#lt-aside-gt-元素" class="headerlink" title="&lt;aside&gt; 元素"></a>&lt;aside&gt; 元素</h3><p>HTML &lt;aside&gt; 元素用来定义一个和 HTML 页面中其余内容几乎无关的内容，被认为是独立于该内容的一部分并且可以被单独的拆分出来而不会使整体受影响。通常比较常见的是侧边栏或者标注框</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>aside元素<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">    aside &#123;</span><br><span class="line">      width: 40%;</span><br><span class="line"><span class="css">      <span class="selector-tag">padding-left</span>: <span class="selector-class">.5rem</span>;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">margin-left</span>: <span class="selector-class">.5rem</span>;</span></span><br><span class="line">      float: right;</span><br><span class="line"><span class="css">      <span class="selector-tag">box-shadow</span>: <span class="selector-tag">inset</span> 5<span class="selector-tag">px</span> 0 5<span class="selector-tag">px</span> <span class="selector-tag">-5px</span> <span class="selector-id">#29627e</span>;</span></span><br><span class="line">      font-style: italic;</span><br><span class="line"><span class="css">      <span class="selector-tag">color</span>: <span class="selector-id">#29627e</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">article</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">      迪斯尼电影<span class="tag">&lt;<span class="name">cite</span>&gt;</span>海的女儿<span class="tag">&lt;/<span class="name">cite</span>&gt;</span>（<span class="tag">&lt;<span class="name">cite</span>&gt;</span>The Little Mermaid<span class="tag">&lt;/<span class="name">cite</span>&gt;</span>）于 1989 年首次登上银幕。</span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aside</span>&gt;</span></span><br><span class="line">      在首次发行期间，该片便收获了 8700 万美元的票房。</span><br><span class="line">    <span class="tag">&lt;/<span class="name">aside</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">      更多有关该电影的信息…</span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">article</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@53b7b4095bf14d73549654fe96947928e09c4959/2021/01/19/344df4bab60c9c861bdb978034e8a3f9.png"></p><h3 id="lt-header-gt-元素"><a href="#lt-header-gt-元素" class="headerlink" title="&lt;header&gt; 元素"></a>&lt;header&gt; 元素</h3><p>HTML &lt;header&gt; 元素用来定义 HTML 页面中的具有引导和导航作用的内容，比较常见的是 Logo、搜索框、作者名称等<br><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@14ab96cfc1ebf3a380255fed0c67f171d5dfe0a0/2021/01/19/9dc217c6e2eccda4d16cae59f0a2f720.png"></p><blockquote><p>一个 HTML 页面并没有限制只能出现一个 &lt;header&gt; 元素，可以为每个内容区块添加一个 &lt;header&gt; 元素</p></blockquote><h3 id="lt-main-gt-元素"><a href="#lt-main-gt-元素" class="headerlink" title="&lt;main&gt; 元素"></a>&lt;main&gt; 元素</h3><p>HTML &lt;main&gt; 元素用来定义 HTML 页面中的主要内容。主内容区块指与页面标题或主要功能直接相关的内容。这部分内容在 HTML 页面中应当是独一无二的，不包含任何任何重复的内容。</p><p>关于 &lt;main&gt; 元素在开发中的使用时需要注意如下要点：</p><ul><li>一个 HTML 页面中只能出现一个 &lt;main&gt; 元素。</li><li>&lt;mian&gt; 元素不能出现在&lt;article&gt; 元素、&lt;aside&gt; 元素、&lt;nav&gt; 元素、&lt;header&gt; 元素和 &lt;footer&gt; 元素的内部。</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">main</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>Coder 比赛<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>目前正在紧张进行中...<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">main</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="lt-footer-gt-元素"><a href="#lt-footer-gt-元素" class="headerlink" title="&lt;footer&gt; 元素"></a>&lt;footer&gt; 元素</h3><p>HTML &lt;footer&gt; 元素用来定义 HTML 元素中的一个章节内容或根元素的页脚。一个页脚通常包含该章节作者、版权数据或文档相关链接等信息。</p><p>关于 &lt;footer&gt; 元素在开发中的使用时需要注意 &lt;footer&gt; 元素中的作者信息应该包含在 &lt;address&gt; 元素中</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">footer</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>版权信息<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>站点地图<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>联系方式<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="空白"><a href="#空白" class="headerlink" title="空白"></a>空白</h2><p>当浏览器运行并解析 HTML 页面时，遇到两个或两个以上的连续空格时，只将其显示为一个空格效果。这种特性叫做<strong>白色空间折叠</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>多个空格        但只会显示一个空格<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="转义字符"><a href="#转义字符" class="headerlink" title="转义字符"></a>转义字符</h2><table><thead><tr><th align="center">原义字符</th><th align="center">描述</th><th align="center">转义字符</th></tr></thead><tbody><tr><td align="center"></td><td align="center">空格</td><td align="center">&amp;nbsp;</td></tr><tr><td align="center">&lt;</td><td align="center">小于号</td><td align="center">&amp;lt;</td></tr><tr><td align="center">&gt;</td><td align="center">大于号</td><td align="center">&amp;gt;</td></tr><tr><td align="center">&amp;</td><td align="center">和号</td><td align="center">&amp;amp;</td></tr><tr><td align="center">“</td><td align="center">引号</td><td align="center">&amp;quot;</td></tr><tr><td align="center">©</td><td align="center">版权（copyright）</td><td align="center">&amp;copy;</td></tr><tr><td align="center">®</td><td align="center">注册商标</td><td align="center">&amp;reg;</td></tr><tr><td align="center">™</td><td align="center">商标</td><td align="center">&amp;trade;</td></tr><tr><td align="center">×</td><td align="center">乘号</td><td align="center">&amp;times;</td></tr><tr><td align="center">÷</td><td align="center">除号</td><td align="center">&amp;divide;</td></tr></tbody></table><h1 id="语义化元素"><a href="#语义化元素" class="headerlink" title="语义化元素"></a>语义化元素</h1><p><strong>语义化元素</strong>与结构化元素类似，都是具有具体含义的元素，区别在于语义化元素更多定义一个单词、一行内容的语义或样式</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>语义化元素<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 加粗元素 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">strong</span>&gt;</span>说明：<span class="tag">&lt;/<span class="name">strong</span>&gt;</span>HTML声明并不是一个HTML元素。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 强调元素 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>在HTML中，有些内容是需要<span class="tag">&lt;<span class="name">em</span>&gt;</span>着重<span class="tag">&lt;/<span class="name">em</span>&gt;</span>来阅读的.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 引用元素 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">blockquote</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">            这是一段用来引用的文本内容.</span><br><span class="line">          <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">blockquote</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>说明：<span class="tag">&lt;<span class="name">q</span>&gt;</span>声明并不是一个HTML元素。<span class="tag">&lt;/<span class="name">q</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 引文元素 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>更多信息可以阅读<span class="tag">&lt;<span class="name">cite</span>&gt;</span>[ISO-0000]<span class="tag">&lt;/<span class="name">cite</span>&gt;</span>.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 定义元素 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">dfn</span> <span class="attr">id</span>=<span class="string">&quot;def-internet&quot;</span>&gt;</span>The Internet<span class="tag">&lt;/<span class="name">dfn</span>&gt;</span> is a global system of interconnected networks that use the Internet Protocol Suite (TCP/IP) to serve billions of users worldwide.</span><br><span class="line">        <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 地址元素 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">address</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;mailto:jim@rock.com&quot;</span>&gt;</span>jim@rock.com<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;tel:+13115552368&quot;</span>&gt;</span>(311) 555-2368<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">address</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 内容修改元素 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>前端好<span class="tag">&lt;<span class="name">del</span>&gt;</span>难<span class="tag">&lt;/<span class="name">del</span>&gt;</span><span class="tag">&lt;<span class="name">ins</span>&gt;</span>容易<span class="tag">&lt;/<span class="name">ins</span>&gt;</span>学习啊<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>如下列表所示展示了部分语义化元素：</p><table><thead><tr><th align="center">名称</th><th align="center">代码</th><th align="center">释义</th><th align="center">效果</th></tr></thead><tbody><tr><td align="center">加粗元素</td><td align="center">&lt;strong&gt;</td><td align="center">HTML 页面中的十分重要的文本内容</td><td align="center">浏览器运行 HTML 页面默认呈现的是粗体效果</td></tr><tr><td align="center">强调元素</td><td align="center">&lt;em&gt;</td><td align="center">HTML 页面中的需要用户着重阅读的文本内容</td><td align="center">浏览器运行 HTML 页面默认呈现的是斜体效果</td></tr><tr><td align="center">引用元素</td><td align="center">&lt;blockquote&gt; 和 &lt;q&gt;</td><td align="center">HTML blockquote 元素用来定义 HTML 页面中的标记较长的引用内容，一般浏览器解析后会对其进行缩进。HTML q 元素用来定义 HTML 页面中的较短的引用内容，浏览器解析后会在其两侧使用引号包裹。</td><td align="center">代码 1</td></tr><tr><td align="center">引文元素</td><td align="center">&lt;cite&gt;</td><td align="center">HTML 页面中的对一个作品的引用，该元素必须包含引用作品的符合简写格式的标题或者 URL，可能是一个根据添加引用元数据的约定的简写形式</td><td align="center">浏览器解析后会呈现斜体效果</td></tr><tr><td align="center">定义元素</td><td align="center">&lt;dfn&gt;</td><td align="center">定义 HTML 页面中的术语</td><td align="center">有些浏览器会将&lt;dfn&gt;元素解析后呈现为斜体，但 Safari 和 Chrome 浏览器则不会改变其样式。</td></tr><tr><td align="center">地址元素</td><td align="center">&lt;address&gt;</td><td align="center">HTML 页面中提供了某个人或某个组织的联系信息</td><td align="center">浏览器解析后会呈现为斜体效果</td></tr><tr><td align="center">内容修改元素</td><td align="center">&lt;del&gt; 和 &lt;ins&gt;</td><td align="center">HTML del 元素用来定义 HTML 页面中删除的文字内容，HTML ins 元素用来定义 HTML 页面中插入的文字内容。</td><td align="center">代码 2</td></tr></tbody></table><p>代码 1</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">blockquote</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">    这是一段用来引用的文本内容.</span><br><span class="line">  <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">blockquote</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>说明：<span class="tag">&lt;<span class="name">q</span>&gt;</span>声明并不是一个HTML元素。<span class="tag">&lt;/<span class="name">q</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@c2885d9b0a441c8da0d9452e92ab8530afb14cdd/2021/01/19/2e8a6ac3ab44ab9dbd7872d809d15bd6.png"><br>代码 2</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>前端好<span class="tag">&lt;<span class="name">del</span>&gt;</span>难<span class="tag">&lt;/<span class="name">del</span>&gt;</span><span class="tag">&lt;<span class="name">ins</span>&gt;</span>容易<span class="tag">&lt;/<span class="name">ins</span>&gt;</span>学习啊<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@76fefbeaf486e0f0b3d5fbcb2bf66a86c52619b1/2021/01/19/c02b105ec3660be7cf87e7becab9f23f.png"></p><h1 id="字体样式"><a href="#字体样式" class="headerlink" title="字体样式"></a>字体样式</h1><h2 id="设置字体"><a href="#设置字体" class="headerlink" title="设置字体"></a>设置字体</h2><p>CSS<code>font-family</code> 属性通过一个字体名或字体族名组成的列表来设置 HTML 页面中的字体</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span> &#123;</span><br><span class="line">  <span class="attribute">font-family</span>: 宋体;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="设置一个字体名或字体族名"><a href="#设置一个字体名或字体族名" class="headerlink" title="设置一个字体名或字体族名"></a>设置一个字体名或字体族名</h2><p>两种设置方法。并不推荐只为 font-family 属性设置一个值。因为这样的话，浏览器运行 HTML 页面时很可能找不到这种字体或字体族，从而导致字体不能按照预期的效果进行展示</p><h3 id="字体族名字"><a href="#字体族名字" class="headerlink" title="字体族名字"></a>字体族名字</h3><p>字体族名必须是有效的。具体可以划分成如下几种情况：</p><ul><li>如果字体族名是一个或多个合法标识串构成的话，是可以没有引号的。</li><li>如果字体族名是一个或多个非合法标识串构成的话，是需要使用引号的。</li><li>在没有带引号的字体族名的开头是不能使用标点符号字符和数字字符的。</li></ul><h3 id="通用字体族名字"><a href="#通用字体族名字" class="headerlink" title="通用字体族名字"></a>通用字体族名字</h3><p>通用字体族名是用来在指定的字体不可用时给出较好的字体。通用字体族名都是关键字，所以不可以加引号。通用字体族名由如下几种：</p><ul><li>serif：带衬线字体，笔画结尾有特殊的装饰线或衬线。</li><li>sans-serif：无衬线字体，即笔画结尾是平滑的字体。</li><li>monospace：等宽字体，即字体中每个字宽度相同。</li><li>cursive：草书字体。这种字体有的有连笔，有的还有特殊的斜体效果。</li><li>fantasy：主要是那些具有特殊艺术效果的字体</li></ul><h2 id="设置多个字体名或字体族名"><a href="#设置多个字体名或字体族名" class="headerlink" title="设置多个字体名或字体族名"></a>设置多个字体名或字体族名</h2><p>为 font-family 属性设置多个值时，值之间需要使用逗号进行分隔。浏览器会选择列表中<strong>第一个</strong>该计算机上有安装的字体</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span> &#123;</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="string">&quot;Gill Sans Extrabold&quot;</span>, Helvetica, sans-serif;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="字体大小"><a href="#字体大小" class="headerlink" title="字体大小"></a>字体大小</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">24px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>font-size 属性的值</p><table><thead><tr><th align="center">名称</th><th align="center">代码</th></tr></thead><tbody><tr><td align="center">绝对大小值</td><td align="center">xx-small、x-small、small、medium、large、x-large、x-large</td></tr><tr><td align="center">相对大小值</td><td align="center">larger、smaller</td></tr><tr><td align="center">长度值</td><td align="center">px、em、rem、ex</td></tr><tr><td align="center">百分比值</td><td align="center">该值是相对于父级元素的字体大小的百分比</td></tr></tbody></table><p>关于标题元素在开发中的使用时需要注意如下要点：</p><ul><li>建议最好使用用户默认字体大小的相对大小，避免使用除了 <code>em</code> 或 <code>ex</code> 的绝对大小单位。</li><li>如果一定要使用绝对大小的话，<code>px </code>是众多单位中最好的选择</li></ul><h2 id="粗细程度"><a href="#粗细程度" class="headerlink" title="粗细程度"></a>粗细程度</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span> &#123;</span><br><span class="line">  <span class="attribute">font-weight</span>: bolder;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>font-weight 属性的值</p><table><thead><tr><th align="center">名称</th><th align="center">代码</th></tr></thead><tbody><tr><td align="center">绝对值</td><td align="center">normal 和 bold 两个值。normal 与数字值 400 等价，bold 与数字值 700 等价。</td></tr><tr><td align="center">相对值</td><td align="center">lighter 和 bolder 两个值。比从父元素继承来的值更细（lighter）/ 粗（bolder）（处在字体可行的粗细值范围内）。</td></tr><tr><td align="center">数字值</td><td align="center">介于 100 ~ 900 之间的值。</td></tr></tbody></table><blockquote><p>注意：一些字体只提供 normal 和 bold 两种值。</p></blockquote><h2 id="设置斜体"><a href="#设置斜体" class="headerlink" title="设置斜体"></a>设置斜体</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.italic</span> &#123;</span><br><span class="line">  <span class="attribute">font-style</span>: italic;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.oblique</span> &#123;</span><br><span class="line">  <span class="attribute">font-style</span>: oblique;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="note warning flat"><p>不是所有的字体都有确切的<code>oblique</code>和 <code>italic </code>字形。即便如此，浏览器也会通过使用现有的字形来模拟所缺少的字形。</p></div><h2 id="font属性"><a href="#font属性" class="headerlink" title="font属性"></a>font属性</h2><p>CSS font 属性是用来作为 font-family、font-size、font-weight、font-style、font-variant 和 line-height 属性的简写形式，或将 HTML 元素的字体设置为系统字体。</p><p>如果将 font 属性作为简写形式的话，该属性必须包含 font-family 和 font-size 属性的值。而且指定相关属性的值时，需要注意如下要点：</p><ul><li>font-style、font-variant 和 font-weight 属性必须定义在 font-size 属性之前。</li><li>line-height 属性必须定义在 font-size 属性后面，由<code>/</code>分隔，例如<code> 16px/3</code>。</li><li>font-family 属性必须最后定义。</li></ul><h3 id="系统字体"><a href="#系统字体" class="headerlink" title="系统字体"></a>系统字体</h3><p>如果将 font 属性的值指定为系统关键字的话，必须是如下系统关键字之一：</p><ul><li>caption：用于标题控件（如按钮，下拉列表等）的系统字体。</li><li>icon：用于标签图标的系统字体。</li><li>menu：菜单中（如下拉菜单和菜单列表）使用的系统字体。</li><li>message-box：用于对话框的系统字体。</li><li>small-caption：用于小标题控件的系统字体。</li><li>status-bar：用于窗口状态栏的系统字体</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.p1</span> &#123;</span><br><span class="line">  <span class="attribute">font</span>: <span class="number">12px</span>/<span class="number">14px</span> sans-serif;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.p2</span> &#123;</span><br><span class="line">  <span class="attribute">font</span>: <span class="number">80%</span> sans-serif;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.p3</span> &#123;</span><br><span class="line">  <span class="attribute">font</span>: bold italic large serif;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.p4</span> &#123;</span><br><span class="line">  <span class="attribute">font</span>: status-bar;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="嵌入-web-字体"><a href="#嵌入-web-字体" class="headerlink" title="嵌入 web 字体"></a>嵌入 web 字体</h2><p><code>@font-face</code> 是 CSS 的 @规则 中的一种，用来为 HTML 页面引入在线字体。通过 @font-face 我们可以自己来准备字体文件，从而可以消除对用户电脑字体的依赖。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@font-face</span> &#123;</span><br><span class="line">  [ font-family: &lt;family-name&gt;; ] ||</span><br><span class="line">  [ src: &lt;src&gt;; ] ||</span><br><span class="line">  [ unicode-range: &lt;unicode-range&gt;; ] ||</span><br><span class="line">  [ font-variant: &lt;font-variant&gt;; ] ||</span><br><span class="line">  [ font-feature-settings: &lt;font-feature-settings&gt;; ] ||</span><br><span class="line">  [ font-variation-settings: &lt;font-variation-settings&gt;; ] ||</span><br><span class="line">  [ font-stretch: &lt;font-stretch&gt;; ] ||</span><br><span class="line">  [ font-weight: &lt;font-weight&gt;; ] ||</span><br><span class="line">  <span class="selector-attr">[ font-style: &lt;font-style&gt;; ]</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>font-family：所指定的字体名字将会被用于 font 或 font-family 属性。</li><li>src：通过 <code>url()</code> 函数指定远程字体文件的位置，或者通过 <code>local() </code>函数指定用户的本地计算机上的字体。</li><li>font-variant：同 font-variant 属性。</li><li>font-stretch：同 font-stretch 属性。</li><li>font-weight：同 font-weight 属性。</li><li>font-style：同 font-style 属性。</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@font-face</span> &#123;</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="string">&quot;Alibaba PuHuiTi&quot;</span>;</span><br><span class="line">  <span class="attribute">src</span>: <span class="built_in">url</span>(<span class="string">&quot;/fonts/Alibaba-PuHuiTi-Regular.ttf&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="string">&quot;Alibaba PuHuiTi&quot;</span>, serif</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@aeddbb93d333e41f17f31f13589b617ca8689e7a/2021/01/19/e90c4029b197e9a7a3d3d6394a132177.png"></p><h1 id="文本样式"><a href="#文本样式" class="headerlink" title="文本样式"></a>文本样式</h1><table><thead><tr><th align="center">名称</th><th align="center">代码</th><th align="center">释义</th></tr></thead><tbody><tr><td align="center">文本修饰</td><td align="center"><code>text-decoration</code></td><td align="center">设置 HTML 页面中文本排版</td></tr><tr><td align="center">行间距</td><td align="center"><code>line-height</code></td><td align="center">设置 HTML 页面中多行元素之间的空间量</td></tr><tr><td align="center">字母 / 单词间距</td><td align="center"><code>letter-spacing/word-spacing</code></td><td align="center">字距是印刷行业用来描述字母之间空隙的一个术语</td></tr><tr><td align="center">水平对齐方式</td><td align="center"><code>text-align</code></td><td align="center">设置 HTML 页面中文本内容相对于其所在元素在水平方式的对齐方式</td></tr><tr><td align="center">垂直对齐方式</td><td align="center"><code>vertical-align</code></td><td align="center">设置 HTML 页面中内联元素或表格单元格元素在垂直方向上的对齐方式</td></tr><tr><td align="center">文本缩进</td><td align="center"><code>text-indent    </code></td><td align="center">设置 HTML 页面中块级元素首行文本内容之前的缩进量</td></tr><tr><td align="center">文本阴影</td><td align="center"><code>text-shadow</code></td><td align="center">设置 HTML 页面中文本内容的阴影</td></tr><tr><td align="center">文本换行</td><td align="center"><code>word-wrap 和 word-break</code></td><td align="center">让文本和浏览器的右端自动实现换行</td></tr><tr><td align="center">处理空白</td><td align="center"><code>white-space</code></td><td align="center">设置如何处理 HTML 元素中的空白</td></tr></tbody></table><h2 id="文本修饰（text-decoration）"><a href="#文本修饰（text-decoration）" class="headerlink" title="文本修饰（text-decoration）"></a>文本修饰（text-decoration）</h2><p>CSS text-decoration 属性用来设置 HTML 页面中文本排版（下划线、顶划线、删除线或者闪烁）。text-decoration 属性是一个简写属性，并且可以使用普通属性三个值中的任何一个。普通属性如下所示：</p><ul><li>text-decoration-line 属性：用于设置元素中的文本的修饰类型。</li><li>text-decoration-color 属性：用于设置文本修饰线的颜色。</li><li>text-decoration-style 属性：用于设置由 text-decoration-line 设定的线的样式。</li></ul><p>如下示例代码展示了 text-decoration 的 3 个普通属性的用法：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span> &#123;</span><br><span class="line">  <span class="attribute">text-decoration-color</span>: lightcoral; <span class="comment">/* 下划线颜色 */</span></span><br><span class="line">  <span class="attribute">text-decoration-line</span>: underline; <span class="comment">/* 下划线 */</span></span><br><span class="line">  <span class="attribute">text-decoration-style</span>: solid; <span class="comment">/* 实线 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>text-decoration 属性会延伸到后代元素。这意味着如果祖先元素指定了文本修饰属性，后代元素则不能将其删除<br><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@b428219cc964707bff54b2e79c5e47728550f782/2021/01/19/6004d7776d47036303744bfd25930417.png"></p><h2 id="行间距（line-height）"><a href="#行间距（line-height）" class="headerlink" title="行间距（line-height）"></a>行间距（line-height）</h2><p>使用印刷机印刷出来的每一个字都位于一个块中，而控制两行文字之间的垂直距离就是行间距<br><img src="https://tva1.sinaimg.cn/large/832afe33ly1gakpmjbdmfj216t0tetcj.jpg"><br>如上图所示，红色线是顶线、紫色线是中线、绿色线是基线、黄色线是底线，在本小节后面中会讲解到的 vertical-align 属性的 top、middle、baseline、bottom 指的就是这 4 条线。</p><ul><li><strong>行间距</strong>也称为<strong>行高</strong>指的是两行文本内容中基线的距离，即两条绿色线之间的距离。也就是上图中的 1、2、3 和 4 的区域。</li><li><strong>行距</strong>指的是上一行的底线到下一行的顶线之间的距离，即上一行的黄色线到下一行的红色线之间的距离。</li><li><strong>字体大小</strong>值的是顶线到底线的距离，即红色线到黄色线之间的距离。也是就是上图中的 1、2 和 4 的区域。</li></ul><p>line-height 属性值</p><table><thead><tr><th align="center">属性</th><th align="center">含义</th></tr></thead><tbody><tr><td align="center">normal 关键字</td><td align="center">该值取决于用户电脑。一般情况下，浏览器使用的默认值为 1.2。</td></tr><tr><td align="center">数字值</td><td align="center">最终的效果值是该数字值乘以该元素的字体大小（font-size 属性值）</td></tr><tr><td align="center">长度值</td><td align="center">如果使用 <code>em </code>单位的可能会产生不确定的效果。</td></tr><tr><td align="center">百分比值</td><td align="center">最终的效果值是该百分比值乘以该元素的字体大小（font-size 属性值）。</td></tr></tbody></table><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.div1</span> &#123;</span><br><span class="line">      <span class="attribute">line-height</span>: <span class="number">1.2</span>;</span><br><span class="line">      <span class="attribute">font-size</span>: <span class="number">10pt</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 无单位数值 number/unitless */</span></span><br><span class="line">    <span class="selector-class">.div2</span> &#123;</span><br><span class="line">      <span class="attribute">line-height</span>: <span class="number">1.2em</span>;</span><br><span class="line">      <span class="attribute">font-size</span>: <span class="number">10pt</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 长度 length */</span></span><br><span class="line">    <span class="selector-class">.div3</span> &#123;</span><br><span class="line">      <span class="attribute">line-height</span>: <span class="number">120%</span>;</span><br><span class="line">      <span class="attribute">font-size</span>: <span class="number">10pt</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 百分比 percentage */</span></span><br><span class="line">    <span class="selector-class">.div4</span> &#123;</span><br><span class="line">      <span class="attribute">font</span>: <span class="number">10pt</span>/<span class="number">1.2</span> Georgia, <span class="string">&quot;Bitstream Charter&quot;</span>, serif;</span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure><h2 id="字母间距（letter-spacing）"><a href="#字母间距（letter-spacing）" class="headerlink" title="字母间距（letter-spacing）"></a>字母间距（letter-spacing）</h2><p>CSS letter-spacing 属性原意是用来设置文本字符之间的间距。在英文中是可以分为单词和字符的，但在中文中只有文字，中文中的文字就相当于英文的字符，所以 letter-spacing 属性可以适用于中文环境。</p><p>letter-spacing 属性的值</p><table><thead><tr><th align="center">属性</th><th align="center">含义</th></tr></thead><tbody><tr><td align="center">normal</td><td align="center">该值是按照当前字体的正常间距确定的。</td></tr><tr><td align="center">长度值</td><td align="center">指定文字间的间距以替代默认间距，可以是负值。</td></tr></tbody></table><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.first-example</span> &#123;</span><br><span class="line">  <span class="attribute">letter-spacing</span>: <span class="number">0.4em</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.second-example</span> &#123;</span><br><span class="line">  <span class="attribute">letter-spacing</span>: <span class="number">1em</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.third-example</span> &#123;</span><br><span class="line">  <span class="attribute">letter-spacing</span>: -<span class="number">0.05em</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.fourth-example</span> &#123;</span><br><span class="line">  <span class="attribute">letter-spacing</span>: <span class="number">6px</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h2 id="单词间距（word-spacing）"><a href="#单词间距（word-spacing）" class="headerlink" title="单词间距（word-spacing）"></a>单词间距（word-spacing）</h2><p>CSS word-spacing 属性用来设置 HTML 页面中标签之间或单词之间的距离，<strong>该属性对英文是有效的，但对中文是无效的。</strong></p><table><thead><tr><th align="center">属性</th><th align="center">含义</th></tr></thead><tbody><tr><td align="center">normal</td><td align="center">该值是按照当前字体的正常间距确定的。</td></tr><tr><td align="center">长度值</td><td align="center">指定单词间的间距以替代默认间距。</td></tr><tr><td align="center">百分比值</td><td align="center">指定单词之间的间距以替代默认间距的百分比。</td></tr></tbody></table><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.first-example</span> &#123;</span><br><span class="line">  <span class="attribute">word-spacing</span>: <span class="number">15px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.second-example</span> &#123;</span><br><span class="line">  <span class="attribute">word-spacing</span>: <span class="number">5em</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="水平对齐方式（text-align）"><a href="#水平对齐方式（text-align）" class="headerlink" title="水平对齐方式（text-align）"></a>水平对齐方式（text-align）</h2><p>CSS text-align 属性用来设置 HTML 页面中文本内容相对于其所在元素在水平方式的对齐方式。值得注意的是，text-align 属性并不能设置 HTML 元素本身在水平方向的对齐，而是设置 HTML 元素内部的文本内容在其元素内水平方向的对齐。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.example</span> &#123;</span><br><span class="line">  <span class="attribute">text-align</span>: right;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>text-align 属性的值具有 7 种类型</p><table><thead><tr><th align="center">属性</th><th align="center">含义</th></tr></thead><tbody><tr><td align="center">start</td><td align="center">如果内容方向是左至右的话则等于 left，反之则为 right。</td></tr><tr><td align="center">end</td><td align="center">如果内容方向是左至右的话则等于 right，反之则为 left。</td></tr><tr><td align="center">left</td><td align="center">行内内容向左侧边对齐。</td></tr><tr><td align="center">right</td><td align="center">行内内容向右侧边对齐。</td></tr><tr><td align="center">center</td><td align="center">行内内容居中。</td></tr><tr><td align="center">justify</td><td align="center">文字向两侧对齐，对最后一行无效。</td></tr><tr><td align="center">justify-all</td><td align="center">和 justify 一致，但是强制使最后一行两端对齐。</td></tr></tbody></table><p><img src="https://tva1.sinaimg.cn/large/832afe33ly1gakpycxtnzj21320tsajs.jpg"></p><h2 id="垂直对齐方式（vertical-align）"><a href="#垂直对齐方式（vertical-align）" class="headerlink" title="垂直对齐方式（vertical-align）"></a>垂直对齐方式（vertical-align）</h2><p>CSS vertical-align 属性用来设置 HTML 页面中内联元素或表格单元格元素在垂直方向上的对齐方式。vertical-align 属性可以被应用于 2 种环境：</p><ul><li>设置某个内联元素的盒子模型与该内联元素的父级容器元素的垂直对齐方式。</li><li>设置表格中某个单元格中内容的垂直对齐方式。</li></ul><blockquote><p>vertical-align 属性只针对内联元素和表单单元格有效，对块级元素是无效的。</p></blockquote><p>vertical-align 属性的值根据 2 种应用环境会有所不同：</p><ul><li>应用于内联元素的值<ul><li>相对于父级元素的值<ul><li>baseline：使元素的基线与父元素的基线对齐。</li><li>sub：使元素的基线与父元素的下标基线对齐。</li><li>super：使元素的基线与父元素的上标基线对齐。</li><li>text-top：使元素的顶部与父元素的字体顶部对齐。</li><li>text-bottom：使元素的底部与父元素的字体底部对齐。</li><li>middle：使元素的中部与父元素的基线加上父元素 x-height 的一半对齐。</li></ul></li><li>相对于行的值<ul><li>top：使元素及其后代元素的顶部与整行的顶部对齐。</li><li>bottom：使元素及其后代元素的底部与整行的底部对齐。</li></ul></li><li>应用于表单单元格的值<ul><li>baseline：使单元格的基线，与该行中所有以基线对齐的其它单元格的基线对齐。</li><li>top：使单元格内边距的上边缘与该行顶部对齐。</li><li>middle：使单元格内边距盒模型在该行内居中对齐。</li><li>bottom：使单元格内边距的下边缘与该行底部对齐。</li></ul></li></ul></li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">img</span><span class="selector-class">.top</span> &#123;</span><br><span class="line">  <span class="attribute">vertical-align</span>: text-top;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">img</span><span class="selector-class">.bottom</span> &#123;</span><br><span class="line">  <span class="attribute">vertical-align</span>: text-bottom;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">img</span><span class="selector-class">.middle</span> &#123;</span><br><span class="line">  <span class="attribute">vertical-align</span>: middle;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="文本缩进（text-indent）"><a href="#文本缩进（text-indent）" class="headerlink" title="文本缩进（text-indent）"></a>文本缩进（text-indent）</h2><p>CSS text-indent 属性用来设置 HTML 页面中块级元素首行文本内容之前的缩进量.</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.example</span> &#123;</span><br><span class="line">  <span class="attribute">text-indent</span>: <span class="number">5em</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th align="center">属性</th><th align="center">含义</th></tr></thead><tbody><tr><td align="center">长度值</td><td align="center">允许使用负值</td></tr><tr><td align="center">百分比值</td><td align="center">使用所在块级元素的宽度的百分比作为缩进</td></tr><tr><td align="center">each-line</td><td align="center">文本缩进会影响第一行，以及使用 &lt;br&gt; 元素强制断行后的第一行。</td></tr><tr><td align="center">hanging</td><td align="center">该值会对所有的行进行反转缩进：除了第一行之外的所有的行都会被缩进，看起来就像第一行设置了一个负的缩进值。</td></tr></tbody></table><h2 id="文本阴影（text-shadow）"><a href="#文本阴影（text-shadow）" class="headerlink" title="文本阴影（text-shadow）"></a>文本阴影（text-shadow）</h2><p>CSS text-shadow 属性用来设置 HTML 页面中文本内容的阴影。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">selector</span> &#123;</span><br><span class="line">    <span class="attribute">text-shadow</span>: color offset-x offet-y blur-raduis;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>color：可选项，设置文本内容的阴影颜色。</p></li><li><p>offset-x：必选项，设置文本内容的阴影在水平方向的偏移量。</p><ul><li>如果值小于 0 的话，则表示向左偏移。</li><li>如果值等于 0 的话，则表示水平方向不发生任何偏移。</li><li>如果值大于 0 的话，则表示向右偏移。</li></ul></li><li><p>offset-y：必选项，设置文本内容的阴影在垂直方向的偏移量。</p><ul><li>如果值小于 0 的话，则表示向上偏移。</li><li>如果值等于 0 的话，则表示垂直方向不发生任何偏移。</li><li>如果值大于 0 的话，则表示向下偏移。</li></ul></li><li><p>blur-raduis：可选项，设置文本内容的阴影模糊半径<br> 如果没有指定，则默认为 0。值越大，模糊半径越大，阴影也就越大越淡</p></li></ul><h3 id="设置单一阴影"><a href="#设置单一阴影" class="headerlink" title="设置单一阴影"></a>设置单一阴影</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;!<span class="selector-tag">DOCTYPE</span> <span class="selector-tag">html</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">html</span>&gt;</span><br><span class="line">    &lt;<span class="selector-tag">head</span>&gt;</span><br><span class="line">        &lt;meta charset=&quot;utf-8&quot;&gt;</span><br><span class="line">        &lt;title&gt;&lt;/title&gt;</span><br><span class="line">        &lt;style type=&quot;text/css&quot;&gt;</span><br><span class="line">            <span class="selector-class">.example</span> &#123;</span><br><span class="line">              <span class="attribute">text-shadow</span>: red <span class="number">0</span> -<span class="number">2px</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &lt;/style&gt;</span><br><span class="line">    &lt;/head&gt;</span><br><span class="line">    &lt;<span class="selector-tag">body</span>&gt;</span><br><span class="line">        &lt;p class=&quot;example&quot;&gt;这是文本阴影测试&lt;/p&gt;</span><br><span class="line">    &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h3 id="设置多重阴影"><a href="#设置多重阴影" class="headerlink" title="设置多重阴影"></a>设置多重阴影</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.example</span> &#123;</span><br><span class="line">  <span class="attribute">text-shadow</span>: <span class="number">1px</span> <span class="number">1px</span> <span class="number">2px</span> black, <span class="number">0</span> <span class="number">0</span> <span class="number">1em</span> blue, <span class="number">0</span> <span class="number">0</span> <span class="number">0.2em</span> blue;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当通过 text-shadow 属性为文本内容设置多重阴影时，阴影的应用顺序是从左到右的，第一个指定的阴影在顶部<br><img src="https://tva1.sinaimg.cn/large/832afe33ly1gals0huobjj20r10cgwfh.jpg"></p><h2 id="文本换行（word-wrap-和-word-break"><a href="#文本换行（word-wrap-和-word-break" class="headerlink" title="文本换行（word-wrap 和 word-break)"></a>文本换行（word-wrap 和 word-break)</h2><ul><li>对于西方文本，浏览器会在半角空格或连字符的地方自动换行。</li><li>对于中文文本，可以在任何文字后面换行。通常标点符号以及前面的文字作为整体统一换行</li></ul><h3 id="word-wrap-属性"><a href="#word-wrap-属性" class="headerlink" title="word-wrap 属性"></a>word-wrap 属性</h3><p>word-wrap 属性属于微软的一个私有属性，在 CSS3 的文本规范中被重命名为 overflow-wrap。word-wrap 作为 overflow-wrap 的别名。</p><p>overflow-wrap 属性的值具有如下 2 种：</p><ul><li>normal：表示在正常的单词结束处换行。</li><li>break-word：表示如果行内没有多余的地方容纳该单词到结尾，则那些正常的不能被分割的单词会被强制分割换行。</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>overflow-wrap属性<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">    <span class="selector-class">.example</span> &#123;</span></span><br><span class="line">      width: 13em;</span><br><span class="line">      background: gold;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">    <span class="selector-class">.break</span> &#123;</span></span><br><span class="line">      overflow-wrap: break-word;</span><br><span class="line">    &#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;example&quot;</span>&gt;</span></span><br><span class="line">    FStrPrivFinÄndG (Gesetz zur Änderung des Fernstraßenbauprivatfinanzierungsgesetzes und straßenverkehrsrechtlicher</span><br><span class="line">    Vorschriften)</span><br><span class="line">  <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;example break&quot;</span>&gt;</span></span><br><span class="line">    FStrPrivFinÄndG (Gesetz zur Änderung des Fernstraßenbauprivatfinanzierungsgesetzes und straßenverkehrsrechtlicher</span><br><span class="line">    Vorschriften)</span><br><span class="line">  <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://tva1.sinaimg.cn/large/832afe33ly1galsf3702wj20u50knabm.jpg"></p><h3 id="word-break-属性"><a href="#word-break-属性" class="headerlink" title="word-break 属性"></a>word-break 属性</h3><p>CSS word-break 属性用来设置 HTML 页面中文本内容自动换行的处理方式。通过具体的属性值设置，可以告知浏览器实现任意位置的换行。</p><p>word-break 属性的值具有如下 3 种：</p><ul><li>normal：使用默认的断行规则。</li><li>break-all：对于除中文、日文和韩文外的文本内容，设置可以在任意字符间断行。</li><li>keep-all：中文、日文和韩文的文本内容不断行，其他语言的文本内容等同于 normal。</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">&lt;!<span class="selector-tag">DOCTYPE</span> <span class="selector-tag">html</span>&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;<span class="selector-tag">head</span>&gt;</span><br><span class="line">  &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">  &lt;title&gt;word-break属性&lt;/title&gt;</span><br><span class="line">  &lt;<span class="selector-tag">style</span>&gt;</span><br><span class="line">    <span class="selector-class">.narrow</span> &#123;</span><br><span class="line">      <span class="attribute">width</span>: <span class="number">60%</span>;</span><br><span class="line">      <span class="attribute">padding</span>: <span class="number">20px</span>;</span><br><span class="line">      <span class="attribute">text-align</span>: start;</span><br><span class="line">      <span class="attribute">border</span>: solid <span class="number">1px</span> <span class="number">#a9a9a9</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.normal</span> &#123;</span><br><span class="line">      <span class="attribute">word-break</span>: normal;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.breakAll</span> &#123;</span><br><span class="line">      <span class="attribute">word-break</span>: break-all;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.keepAll</span> &#123;</span><br><span class="line">      <span class="attribute">word-break</span>: keep-all;</span><br><span class="line">    &#125;</span><br><span class="line">  &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;<span class="selector-tag">body</span>&gt;</span><br><span class="line">  &lt;p&gt;1. &lt;code&gt;word-break: normal&lt;/code&gt;&lt;/p&gt;</span><br><span class="line">  &lt;p class=&quot;normal narrow&quot;&gt;This is a long and</span><br><span class="line">    <span class="selector-tag">Honorificabilitudinitatibus</span> <span class="selector-tag">califragilisticexpialidocious</span></span><br><span class="line">    <span class="selector-tag">Taumatawhakatangihangakoauauotamateaturipukakapikimaungahoronukupokaiwhenuakitanatahu</span></span><br><span class="line">    グレートブリテンおよび北アイルランド連合王国という言葉は本当に長い言葉&lt;/p&gt;</span><br><span class="line"></span><br><span class="line">  &lt;p&gt;2. &lt;code&gt;word-break: break-all&lt;/code&gt;&lt;/p&gt;</span><br><span class="line">  &lt;p class=&quot;breakAll narrow&quot;&gt;This is a long and</span><br><span class="line">    <span class="selector-tag">Honorificabilitudinitatibus</span> <span class="selector-tag">califragilisticexpialidocious</span></span><br><span class="line">    <span class="selector-tag">Taumatawhakatangihangakoauauotamateaturipukakapikimaungahoronukupokaiwhenuakitanatahu</span></span><br><span class="line">    グレートブリテンおよび北アイルランド連合王国という言葉は本当に長い言葉&lt;/p&gt;</span><br><span class="line"></span><br><span class="line">  &lt;p&gt;3. &lt;code&gt;word-break: keep-all&lt;/code&gt;&lt;/p&gt;</span><br><span class="line">  &lt;p class=&quot;keepAll narrow&quot;&gt;This is a long and</span><br><span class="line">    <span class="selector-tag">Honorificabilitudinitatibus</span> <span class="selector-tag">califragilisticexpialidocious</span></span><br><span class="line">    <span class="selector-tag">Taumatawhakatangihangakoauauotamateaturipukakapikimaungahoronukupokaiwhenuakitanatahu</span></span><br><span class="line">    グレートブリテンおよび北アイルランド連合王国という言葉は本当に長い言葉&lt;/p&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p><img src="https://tva1.sinaimg.cn/large/832afe33ly1galsf3fikcj216i0nptbh.jpg"></p><h2 id="处理空白（white-space）"><a href="#处理空白（white-space）" class="headerlink" title="处理空白（white-space）"></a>处理空白（white-space）</h2><p>CSS white-space 属性用来设置如何处理 HTML 元素中的空白</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>white-space属性<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">    <span class="selector-class">.example-element</span> &#123;</span></span><br><span class="line">      width: 16rem;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">    <span class="selector-class">.example-element</span> <span class="selector-tag">p</span> &#123;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">background-color</span>: <span class="selector-id">#eee</span>;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">padding</span>: <span class="selector-class">.75rem</span>;</span></span><br><span class="line">      text-align: left;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">    <span class="selector-id">#example1</span> &#123;</span></span><br><span class="line">      white-space: normal;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-id">#example2</span>&#123;</span></span><br><span class="line">        white-space: nowrap;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-id">#example3</span>&#123;</span></span><br><span class="line">        white-space: pre;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-id">#example4</span>&#123;</span></span><br><span class="line">        white-space: pre-wrap;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-id">#example5</span>&#123;</span></span><br><span class="line">        white-space: pre-line;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-id">#example6</span>&#123;</span></span><br><span class="line">        white-space: normal;</span><br><span class="line">    &#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;example-element&quot;</span> <span class="attr">id</span>=<span class="string">&quot;example1&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>But ere she from the church-door stepped</span><br><span class="line">      She smiled and told us why:</span><br><span class="line">      &#x27;It was a wicked woman&#x27;s curse,&#x27;</span><br><span class="line">      Quoth she, &#x27;and what care I?&#x27;</span><br><span class="line"></span><br><span class="line">      She smiled, and smiled, and passed it off</span><br><span class="line">      Ere from the door she stept—<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;example-element&quot;</span> <span class="attr">id</span>=<span class="string">&quot;example2&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>But ere she from the church-door stepped</span><br><span class="line">      She smiled and told us why:</span><br><span class="line">      &#x27;It was a wicked woman&#x27;s curse,&#x27;</span><br><span class="line">      Quoth she, &#x27;and what care I?&#x27;</span><br><span class="line"></span><br><span class="line">      She smiled, and smiled, and passed it off</span><br><span class="line">      Ere from the door she stept—<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;example-element&quot;</span> <span class="attr">id</span>=<span class="string">&quot;example3&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>But ere she from the church-door stepped</span><br><span class="line">      She smiled and told us why:</span><br><span class="line">      &#x27;It was a wicked woman&#x27;s curse,&#x27;</span><br><span class="line">      Quoth she, &#x27;and what care I?&#x27;</span><br><span class="line"></span><br><span class="line">      She smiled, and smiled, and passed it off</span><br><span class="line">      Ere from the door she stept—<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;example-element&quot;</span> <span class="attr">id</span>=<span class="string">&quot;example4&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>But ere she from the church-door stepped</span><br><span class="line">      She smiled and told us why:</span><br><span class="line">      &#x27;It was a wicked woman&#x27;s curse,&#x27;</span><br><span class="line">      Quoth she, &#x27;and what care I?&#x27;</span><br><span class="line"></span><br><span class="line">      She smiled, and smiled, and passed it off</span><br><span class="line">      Ere from the door she stept—<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;example-element&quot;</span> <span class="attr">id</span>=<span class="string">&quot;example5&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>But ere she from the church-door stepped</span><br><span class="line">      She smiled and told us why:</span><br><span class="line">      &#x27;It was a wicked woman&#x27;s curse,&#x27;</span><br><span class="line">      Quoth she, &#x27;and what care I?&#x27;</span><br><span class="line"></span><br><span class="line">      She smiled, and smiled, and passed it off</span><br><span class="line">      Ere from the door she stept—<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;example-element&quot;</span> <span class="attr">id</span>=<span class="string">&quot;example6&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>But ere she from the church-door stepped</span><br><span class="line">      She smiled and told us why:</span><br><span class="line">      &#x27;It was a wicked woman&#x27;s curse,&#x27;</span><br><span class="line">      Quoth she, &#x27;and what care I?&#x27;</span><br><span class="line"></span><br><span class="line">      She smiled, and smiled, and passed it off</span><br><span class="line">      Ere from the door she stept—<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>white-space属性<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">    <span class="selector-id">#example-element</span> &#123;</span></span><br><span class="line">      width: 16rem;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">    <span class="selector-id">#example-element</span> <span class="selector-tag">p</span> &#123;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">background-color</span>: <span class="selector-id">#eee</span>;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">padding</span>: <span class="selector-class">.75rem</span>;</span></span><br><span class="line">      text-align: left;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">    <span class="selector-class">.example</span> &#123;</span></span><br><span class="line"><span class="css">      <span class="comment">/* 设置 white-space 属性不同的值用于测试效果 */</span></span></span><br><span class="line">    &#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;example-element&quot;</span> <span class="attr">class</span>=<span class="string">&quot;example&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>But ere she from the church-door stepped</span><br><span class="line">      She smiled and told us why:</span><br><span class="line">      &#x27;It was a wicked woman&#x27;s curse,&#x27;</span><br><span class="line">      Quoth she, &#x27;and what care I?&#x27;</span><br><span class="line"></span><br><span class="line">      She smiled, and smiled, and passed it off</span><br><span class="line">      Ere from the door she stept—<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://tva1.sinaimg.cn/large/832afe33ly1galsp7owcbg213u0nx15k.gif"></p><p>如下列表总结了各种 white-space 属性值的行为：</p><table><thead><tr><th align="center">属性值</th><th align="center">换行符</th><th align="center">空格和制表符</th><th align="center">文字转行</th></tr></thead><tbody><tr><td align="center">normal</td><td align="center">合并</td><td align="center">合并</td><td align="center">转行</td></tr><tr><td align="center">nowrap</td><td align="center">合并</td><td align="center">合并</td><td align="center">不转行</td></tr><tr><td align="center">pre</td><td align="center">保留</td><td align="center">保留</td><td align="center">不转行</td></tr><tr><td align="center">pre-wrap</td><td align="center">保留</td><td align="center">保留</td><td align="center">转行</td></tr><tr><td align="center">pre-line</td><td align="center">保留</td><td align="center">合并</td><td align="center">转行</td></tr><tr><td align="center">break-spaces</td><td align="center">保留</td><td align="center">保留</td><td align="center">转行 ge</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> Web前端 </category>
          
          <category> HTML+CSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML+CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前端三剑客🔗颜色与单位</title>
      <link href="2021/01/18/%E5%89%8D%E7%AB%AF/HTML+CSS/%E5%89%8D%E7%AB%AF%E4%B8%89%E5%89%91%E5%AE%A2_%E9%A2%9C%E8%89%B2%E4%B8%8E%E5%8D%95%E4%BD%8D/"/>
      <url>2021/01/18/%E5%89%8D%E7%AB%AF/HTML+CSS/%E5%89%8D%E7%AB%AF%E4%B8%89%E5%89%91%E5%AE%A2_%E9%A2%9C%E8%89%B2%E4%B8%8E%E5%8D%95%E4%BD%8D/</url>
      
        <content type="html"><![CDATA[<h1 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h1><ul><li><strong>色调</strong>：很接近通俗意义上的颜色。<br>  图像的相对明暗程度，在彩色图像上表现为颜色（简单的理解为颜色）</li><li><strong>饱和度</strong>：是指颜色中灰色的含量。<br>  色彩的纯洁性（颜色中灰色的含量），也叫饱和度 / 彩度。</li><li><strong>亮度</strong>：是指颜色中黑色的含量。<br>  发光体的光源面积之比（黑色的含量）</li><li><strong>对比度</strong>：前景色与背景色之间的差异。<br>  明暗区域最亮的白和最暗的黑之间不同亮度层级的测量，差异范围越大代表对比越大，差异范围越小代表对比越小。</li><li><strong>Web 安全色</strong>：不需要担心颜色在不同硬件环境、操作系统和浏览器之间的差异。<br>不必担心因不同硬件（浏览器）而造成的颜色不同。Web 安全色目前基本具有 216 种颜色，其中色彩为 210 种（开发时使用的颜色），非色彩为 6 种。<br>关于 Web 安全色的具体颜色以及值，可以参考<a href="https://www.bootcss.com/p/websafecolors/">https://www.bootcss.com/p/websafecolors/</a></li></ul><h1 id="前景色与背景色"><a href="#前景色与背景色" class="headerlink" title="前景色与背景色"></a>前景色与背景色</h1><p>CSS 中的前景色和背景色就是 <code>color</code> 和 <code>backgorund-color</code> 两个属性，其中 color 属性表示前景色，background-color 属性表示背景色。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.one</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">color</span><span class="selector-pseudo">:brown</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.two</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">background-color</span><span class="selector-pseudo">:chartreuse</span></span></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;one&quot;</span>&gt;</span>前景色是color属性<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;two&quot;</span>&gt;</span>背景色是background-color属性<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="颜色的表示"><a href="#颜色的表示" class="headerlink" title="颜色的表示"></a>颜色的表示</h1><ul><li><p><strong>色彩关键字</strong><br>色彩关键字是一个不区分大小写的标识符，其表示一个具体的颜色，例如 red 表示红色、blue 表示蓝色等。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.test</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>:blue;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><strong>十六进制表示</strong><br>十六进制表示一共有六位，每两位分别表示红、绿、蓝，取值范围为00~FF(0~255)，数值越大亮度和饱和度越高</p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@72e7845a5be14c873475701d561d85660acfed27/2021/01/18/1d711f2df4b6749ae01a3dab8b07f6be.png" width="70%" height="50%"></li></ul><ul><li><p><strong>RGB色彩模式</strong><br>RGB 是一个简称，全称为Red-Green-Blue，即 红 - 绿 - 蓝。RGB 色彩模式是工业界的一种颜色标准，是通过对红、绿、蓝三个颜色通道的变化以及它们相互之间的叠加来得到各式各样的颜色的。使用十进制的数字，用逗号隔开，分别表示红-绿-蓝三色，取值范围为00~FF(0~255)<br>以下三个表示同一个值</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#p1</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#FFCC33</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#p2</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#FC3</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#p3</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">255</span>, <span class="number">204</span>, <span class="number">51</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><strong>RGBA色彩模式</strong><br>RGBA相较于RGB多了一个alpha，即透明度(取值0-1)</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span>&#123;</span><br><span class="line"><span class="attribute">background-color</span>:<span class="built_in">rgba</span>(<span class="number">230</span>,<span class="number">53</span>,<span class="number">174</span>,<span class="number">0.4</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p><strong>HLS色彩模式</strong><br>HSL 是一个简称，全称为 <strong>Hue-Saturation-Lightness</strong>，即<strong>色调 - 饱和度 - 亮度</strong>。HSL 色彩模式是一种将 RGB 色彩模型中的点在圆柱坐标系中的表示法。<br>在 CSS 中使用 HSL 色彩模式是通过 hsl(H, S, L) 函数实现的，具体含义如下：</p></li><li><p><strong>H</strong> 表示色调，其值范围为 0 ~ 360 之间的一个角度(deg)</p></li><li><p><strong>S</strong>表示饱和度，其值范围为 0% ~ 100% 之间的百分值</p></li><li><p><strong>L</strong> 表示亮度，其值使用百分值表示。0% 表示黑色，50% 表示标准色，100% 表示白色。</p></li><li><p><strong>alpha</strong> 表示透明度，其值范围为 0% ~ 100% 之间的百分值</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">hsl</span>(<span class="number">130</span>, <span class="number">100%</span>, <span class="number">60%</span>,<span class="number">50%</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h1 id="透明度"><a href="#透明度" class="headerlink" title="透明度"></a>透明度</h1><p><code>opacity</code> 属性，介于 0~1 之间，如果大于 1 则当做 1。</p><ul><li><p>如果值为 0 或 0.0 则表示完全透明</p></li><li><p>如果值为 0.5 则表示半透明</p></li><li><p>如果值为 1 或 1.0 则表示不透明</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.light</span> &#123;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">0.2</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>RGB 模式增加了<code>rgba(R,G,B,A)</code>函数，其中 A 为 alpha 表示透明度。</p></li><li><p>HSL 模式增加了 <code>hsl(H,S,L,A)</code> 函数，其中 A 为 alpha 表示透明度。</p></li></ul><h1 id="CSS值与单位"><a href="#CSS值与单位" class="headerlink" title="CSS值与单位"></a>CSS值与单位</h1><p>在 CSS 中除了颜色值需要不同类型描述之外，比较常见的还有长度值也需要不同类型描述，例如 10px 或 50% 等。</p><ul><li><strong>绝对长度单位</strong><br>这种长度时固定的不变的，在 HTML 中常见的单位为像素（px）</li></ul><table><thead><tr><th align="center">单位</th><th align="center">名称</th><th align="center">等价换算</th></tr></thead><tbody><tr><td align="center">cm</td><td align="center">厘米</td><td align="center">1cm = 96px/2.54</td></tr><tr><td align="center">mm</td><td align="center">毫米</td><td align="center">1mm = 1/10th of 1cm</td></tr><tr><td align="center">Q</td><td align="center">四分之一毫米</td><td align="center">1Q = 1/40th of 1cm</td></tr><tr><td align="center">in</td><td align="center">英寸</td><td align="center">1in = 2.54cm = 96px</td></tr><tr><td align="center">pc</td><td align="center">十二点活字</td><td align="center">1pc = 1/16th of 1in</td></tr><tr><td align="center">pt</td><td align="center">点</td><td align="center">1pt = 1/72th of 1in</td></tr><tr><td align="center">px</td><td align="center">像素</td><td align="center">1px = 1/96th of 1in</td></tr></tbody></table><ul><li> <strong>相对长度单位</strong><br>相对于某个物体的长度。比如相对父级元素。使用相对长度单位相对绝对长度单位更适用于现在越发复杂的终端设备的屏幕输出。</li></ul><table><thead><tr><th align="center">单位</th><th align="center">相对于</th></tr></thead><tbody><tr><td align="center">em</td><td align="center">父元素的字体大小</td></tr><tr><td align="center">ex</td><td align="center">字符 “x” 的高度</td></tr><tr><td align="center">ch</td><td align="center">数字 “0” 的宽度</td></tr><tr><td align="center">rem</td><td align="center">根元素的字体大小</td></tr><tr><td align="center">lh</td><td align="center">元素的 line-height</td></tr><tr><td align="center">vw</td><td align="center">视窗宽度的 1%</td></tr><tr><td align="center">vh</td><td align="center">视窗高度的 1%</td></tr><tr><td align="center">vmin</td><td align="center">视窗较小尺寸的 1%</td></tr><tr><td align="center">vmax</td><td align="center">视图大尺寸的 1%</td></tr></tbody></table><h1 id="像素值-px"><a href="#像素值-px" class="headerlink" title="像素值(px)"></a>像素值(px)</h1><p><strong>像素</strong>的英文为 Pixel，简写为 px。<strong>像素</strong>是指在由一个数字序列表示的图像中的一个最小单位。简单来说，如果我们把一张图片放大数倍，会发现这些连续色调其实是由许多色彩相近的小方点所组成，而这些小方点就是构成影像的最小单元就是<strong>像素</strong></p><h1 id="百分比"><a href="#百分比" class="headerlink" title="百分比(%)"></a>百分比(%)</h1><p><strong>百分比（%）</strong> 总是将某个值作为参考，设置为这个参考值的百分比，例如 40%。在 CSS 中一般情况下，百分比（%）多是将当前 HTML 元素的父级元素作为参考值。例如如果一个父级元素拥有两个子级元素，一个子级元素的宽度为 40%，另一个子级元素的宽度为 80%，那么第二个子级元素的宽度就是第一个子级元素的宽度的 2 倍。如下示例代码所示</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>百分比<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">    <span class="selector-class">.parent</span> &#123;</span></span><br><span class="line">      width: 200px;</span><br><span class="line">      height: 100px;</span><br><span class="line">      border: 1px solid lightcoral;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">    <span class="selector-id">#child1</span> &#123;</span></span><br><span class="line">      width: 40%;</span><br><span class="line">      height: 50px;</span><br><span class="line">      background-color: limegreen;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">    <span class="selector-id">#child2</span> &#123;</span></span><br><span class="line">      width: 80%;</span><br><span class="line">      height: 50px;</span><br><span class="line">      background-color: lightslategray;</span><br><span class="line">    &#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;parent&quot;</span>&gt;</span><span class="comment">&lt;!--宽度200px，高度100px--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;child1&quot;</span>&gt;</span><span class="comment">&lt;!--高度20px，宽度80px&lt;/div&gt;--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;child2&quot;</span>&gt;</span><span class="comment">&lt;!--高度50px，宽度160px&lt;/div&gt;--&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="em-与-rem"><a href="#em-与-rem" class="headerlink" title="em 与 rem"></a>em 与 rem</h1><p>em 与 rem 都是相对单位，目前更多应用于移动端设备，例如手机、平板电脑的显示。具体的含义如下所示：</p><ul><li>em：是相对于当前 HTML 元素的父级元素来进行设置。</li><li>rem：是相对于当前 HTML 根元素（``）来进行设置。</li></ul><p>上述 2 种单位都具有如下 3 种情况：</p><ul><li>小于 1 时：表示相对于父级元素或根元素缩小。例如 0.5em 表示是父级元素的 0.5 倍，0.5rem 表示是根元素的 0.5 倍。</li><li>等于 1 时：表示与父级元素或根元素的大小保持一致。</li><li>大于 1 时：表示相对于父级元素或根元素放大。例如 1.5em 表示是父级元素的 1.5 倍，1.5rem 表示是根元素的 1.5 倍。</li></ul>]]></content>
      
      
      <categories>
          
          <category> Web前端 </category>
          
          <category> HTML+CSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML+CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前端三剑客🔗CSS选择器</title>
      <link href="2021/01/18/%E5%89%8D%E7%AB%AF/HTML+CSS/%E5%89%8D%E7%AB%AF%E4%B8%89%E5%89%91%E5%AE%A2_CSS%E9%80%89%E6%8B%A9%E5%99%A8/"/>
      <url>2021/01/18/%E5%89%8D%E7%AB%AF/HTML+CSS/%E5%89%8D%E7%AB%AF%E4%B8%89%E5%89%91%E5%AE%A2_CSS%E9%80%89%E6%8B%A9%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="CSS3基础"><a href="#CSS3基础" class="headerlink" title="CSS3基础"></a>CSS3基础</h1><p>CSS(Cascading Style Sheet，层叠样式表)是一种标准的格式化网页的方式，用于控制网页样式。 </p><ul><li>内容与表现分离</li><li>网页的表现统一，容易修改</li><li>丰富的样式，使得页面布局更加灵活</li><li>减少网页的代码量，增加网页的浏览速度，节省网络带宽</li><li>运用独立于页面的CSS，有利于网页被搜索引擎收录</li></ul><h2 id="引入方式"><a href="#引入方式" class="headerlink" title="引入方式"></a>引入方式</h2><ul><li><strong>行内样式</strong><br>使用style属性引入css样式</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">标签</span> <span class="attr">style</span>=<span class="string">&quot;属性1:值1;属性2:值2;...&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">标签</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>内部样式</strong><br>CSS代码写在&lt;head&gt;的&lt;style&gt;标签中</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span></span><br><span class="line">标签&#123;</span><br><span class="line">属性:值;</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>外部样式</strong><br>CSS代码保存在扩展名为.css的样式表中<br>HTML文件引用扩展名为.css的样式表，有两种方式</li></ul><div class="tabs" id="css1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#css1-1">链接式</button></li><li class="tab"><button type="button" data-href="#css1-2">导入式</button></li><li class="tab"><button type="button" data-href="#css1-3">区别</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="css1-1"><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;style.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="css1-2"><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">……</span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span></span><br><span class="line">&lt;!--</span><br><span class="line"><span class="css"><span class="keyword">@import</span> url(<span class="string">&quot;style.css&quot;</span>);</span></span><br><span class="line">--&gt;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="css1-3"><ul><li><link>标签属于XHTML，@import是属于CSS2.1</li><li>使用<link>链接的CSS文件先加载到网页当中，再进行编译显示</li><li>使用@import导入的CSS文件，客户端显示HTML结构，再把CSS文件加载到网页当中</li><li>@import是属于CSS2.1特有的，对不兼容CSS2.1的浏览器是无效的</li></ul><button type="button" class="tab-to-top"><i class="fas fa-arrow-up"></i></button></div></div></div><ul><li><strong>CSS样式优先级（就近原则）</strong><ul><li>行内样式&gt;内部样式表&gt;外部样式表 </li></ul></li></ul><h2 id="CSS三大特性"><a href="#CSS三大特性" class="headerlink" title="CSS三大特性"></a>CSS三大特性</h2><p>CSS三大特性：层叠性、继承性、优先级</p><ul><li><strong>层叠性</strong><br>  相同选择器给设置相同的样式，此时一共样式就会覆盖（层叠）另一个冲突的样式<br>  样式冲突：<code>就近原则</code></li><li><strong>继承性</strong><br>  子标签会继承父标签的某些样式</li><li><strong>优先级</strong><br>  当同一个元素指定多个选择器，就会有优先级的产生</li></ul><h2 id="优先级"><a href="#优先级" class="headerlink" title="优先级"></a>优先级</h2><div class="note success flat"><p>！important&gt;行内样式&gt;ID选择器&gt;类选择器&gt;标签选择器</p></div><p>计算法则（后定义的覆盖先定义的）</p><ol><li>优先级就是分配给指定的 CSS 声明的一个权重，它由匹配的选择器中的每一种选择器类型的数值决定。</li><li>当优先级与多个 CSS 声明中任意一个声明的优先级相等的时候，CSS 中最后的那个声明将会被应用到元素上。</li><li>当同一个元素有多个声明的时候，优先级才会有意义。</li></ol><p><strong>内联样式总会覆盖内嵌样式表和外联样式表的任何样式。</strong></p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@b92b9dcc9dcdba32b6e4289f1d409adecbfbcf22/2021/01/19/e2d4df263c876c78f4f9c4ce3c9ec68b.png" width="70%"><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@77f9607d737ec152509d104c68d77e82a1123afe/2021/01/19/d4c02499f63d63c49fcef888df12155b.png" width="70%"><h2 id="important"><a href="#important" class="headerlink" title="!important"></a>!important</h2><p>破坏优先级，被修饰的成为最高级。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>!important规则<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">    div &#123;</span><br><span class="line">      color: blue !important;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">    <span class="selector-class">.demo</span> &#123;</span></span><br><span class="line">      color: red;</span><br><span class="line">    &#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;demo&quot;</span>&gt;</span>这是一个测试内容.<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>最终的颜色为 <code>blue</code></p><ol><li>一定要优化考虑使用样式规则的优先级来解决问题而不是 <code>!important</code>。</li><li>只有在需要覆盖全站或外部 CSS 的特定页面中使用 <code>!important</code>。</li><li>永远不要在你的插件中使用<code> !important</code>。</li><li>永远不要在全站范围的 CSS 代码中使用 <code>!important</code>。</li></ol><h2 id="选择器分类"><a href="#选择器分类" class="headerlink" title="选择器分类"></a>选择器分类</h2><ul><li>基本选择器：共有 5 个基本选择器，是 CSS 选择器的最为基本的用法。</li><li>层级选择器：共有 4 个层级选择器，是根据 HTML 元素之间的关系来定位 HTML 元素。</li><li>组合选择器：具有交集和并集两种用法，是将之前基本选择器和层级选择器进行组合。</li><li>伪类选择器：允许未包含在 HTML 页面中的状态信息选定位 HTML 元素。</li><li>伪元素选择器：定位所有未被包含 HTML 的实体</li></ul><h1 id="基本选择器"><a href="#基本选择器" class="headerlink" title="基本选择器"></a>基本选择器</h1><ul><li><strong>标记选择器</strong><br>HTML标签作为标签选择器的名称</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span></span><br><span class="line"><span class="css"><span class="selector-tag">p</span>&#123;<span class="attribute">font-size</span>:<span class="number">16px</span>;&#125;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>我的文本<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>类选择器</strong><br>以”<code>.</code>“来进行定义，用<code>class</code>去执行调用</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span></span><br><span class="line"><span class="css"><span class="selector-class">.one</span>&#123;<span class="attribute">font-size</span>:<span class="number">16px</span>;&#125;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;one&quot;</span>&gt;</span>我的文本<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><div class="note warning flat"><p>类名不能是纯数字和汉字</p></div><ul><li><strong>ID选择器</strong><br>以”<code>#</code>“来定义，用<code>id</code>去执行</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span></span><br><span class="line"><span class="css"><span class="selector-id">#one</span>&#123;<span class="attribute">font-size</span>:<span class="number">16px</span>;&#125;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;one&quot;</span>&gt;</span>我的文本<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><div class="note warning flat"><p>ID选择器，只能用一次(id是唯一的)，类选择器可以反复使用</p></div><ul><li><strong>通配符选择器</strong><br>“<code>*</code>“表示所有</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span></span><br><span class="line"><span class="css">*&#123;<span class="attribute">margin</span>:<span class="number">0</span>;<span class="attribute">padding</span>:<span class="number">0</span>&#125;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="层次选择器"><a href="#层次选择器" class="headerlink" title="层次选择器"></a>层次选择器</h1><table><thead><tr><th align="center">选择器</th><th align="center">类型</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center"><code>E F</code></td><td align="center">后代选择器</td><td align="center"><strong>选择匹配的F元素，且匹配的F元素被包含在匹配的E元素内</strong></td></tr><tr><td align="center"><code>E&gt;F</code></td><td align="center">子选择器</td><td align="center"><strong>选择匹配的F元素，且匹配的F元素是匹配的E元素的子元素</strong></td></tr><tr><td align="center"><code>E+F</code></td><td align="center">相邻兄弟选择器</td><td align="center"><strong>选择匹配的F元素，且匹配的F元素紧位于匹配的E元素后面</strong></td></tr><tr><td align="center"><code>E~F</code></td><td align="center">通用兄弟选择器</td><td align="center"><strong>选择匹配的F元素，且位于匹配的E元素后所有匹配的F元素</strong></td></tr></tbody></table><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2021/01/02/71ea16d49efd91b85246000628d0d27f.png"></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> <span class="selector-tag">p</span>&#123;</span><br><span class="line">   <span class="attribute">background-color</span>: red;</span><br><span class="line">&#125; //body下的所有p元素都变为红色</span><br></pre></td></tr></table></figure><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@14263d7260d98acc23a5efbd0346b410f6750236/2021/01/20/c17b6cc4747499874c88bd7a88e3e8b8.png" width="50%"><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span>&gt;<span class="selector-tag">p</span>&#123;</span><br><span class="line">   background-color: rgb(152, 190, 90);//前三个p变色</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@a29a91ef2aca7b577775ed8ba9584b17944f48e2/2021/01/20/384f338aae1d95e895372bbc52a4645b.png" width="50%"><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.p1</span>+<span class="selector-tag">p</span>&#123;</span><br><span class="line">   <span class="attribute">background-color</span>: steelblue;</span><br><span class="line">&#125; //只有p1相邻的第二个p变色</span><br></pre></td></tr></table></figure><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@35c60ebef1904048a0db46f2509f4c8dae4c3fbf/2021/01/20/d235628336e3f377d3427cd484e14bae.png" width="50%"><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.p1</span>~<span class="selector-tag">p</span>&#123;</span><br><span class="line">    <span class="attribute">background-color</span>: steelblue;</span><br><span class="line"> &#125;//p1后面的所有同级兄弟p元素变色</span><br></pre></td></tr></table></figure><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@be582ed33738e617c15c7e385d36360c1ce35e74/2021/01/20/8b837b711bbfffddeceac73de0bda266.png" width="50%"><h1 id="组合选择器"><a href="#组合选择器" class="headerlink" title="组合选择器"></a>组合选择器</h1><ul><li><strong>组合（并集）选择器</strong></li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">h1</span>,<span class="selector-tag">h2</span>,<span class="selector-tag">h3</span>,<span class="selector-tag">h4</span>,<span class="selector-tag">h5</span>,<span class="selector-tag">h6</span>&#123; </span><br><span class="line"><span class="attribute">color</span>:blue; </span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">/*同时定义多个标签的属性*/</span></span><br></pre></td></tr></table></figure><ul><li><strong>组合（交集）选择器</strong></li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span><span class="selector-class">.cls</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: blueviolet;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*表示把所有class名为cls的p标签都设置成blueviolet颜色*/</span></span><br></pre></td></tr></table></figure><h1 id="属性选择器"><a href="#属性选择器" class="headerlink" title="属性选择器"></a>属性选择器</h1><table><thead><tr><th align="center">选择器</th><th align="center">功能描述</th></tr></thead><tbody><tr><td align="center"><code>E[attr]</code></td><td align="center"><strong>选择匹配具有属性attr的E元素</strong></td></tr><tr><td align="center"><code>E[attr=val]</code></td><td align="center"><strong>选择匹配属性值为val(区分大小写)的E元素</strong></td></tr><tr><td align="center"><code>E[attr^=val]</code></td><td align="center"><strong>选择匹配属性值以val开头的E元素</strong></td></tr><tr><td align="center"><code>E[attr$=val]</code></td><td align="center"><strong>选择匹配属性值以val结尾头的E元素</strong></td></tr><tr><td align="center"><code>E[attr*=val</code>]</td><td align="center"><strong>选择匹配属性值包含val的E元素</strong></td></tr></tbody></table><div class="note warning flat"><p>E[attr=val]属性选择器中，属性和属性值必须完全匹配才能被选中</p></div><h1 id="伪类选择器"><a href="#伪类选择器" class="headerlink" title="伪类选择器"></a>伪类选择器</h1><ul><li><code>伪类选择器</code>用于向某些选择器添加特殊的效果，比如给链接添加特殊效果，或选择第1格，第n个元素</li><li>伪类选择器书写特点是用<code>冒号(:)</code>表示，比如<code>:hover</code></li></ul><h2 id="链接伪类选择器"><a href="#链接伪类选择器" class="headerlink" title="链接伪类选择器"></a>链接伪类选择器</h2><ul><li><code>a:link</code><br>  选择所有未被访问的链接</li><li><code>a:visited</code><br>  选择所有已被访问的链接</li><li><code>a:hover</code><br>  选择鼠标指针位于其上的链接</li><li><code>a:active</code><br>  选择活动链接(鼠标按下未弹起的链接)</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">a:hover&#123;</span><br><span class="line">    color:red;</span><br><span class="line">    text-decoration: none;</span><br><span class="line"> &#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>我的链接<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><div class="note warning flat"><p>为了确保生效，请按照<code>LVHA</code>的顺序声明:link-visited-hover-active</p></div><h2 id="focus伪类选择器"><a href="#focus伪类选择器" class="headerlink" title="focus伪类选择器"></a>focus伪类选择器</h2><ul><li><code>:focus</code>伪类选择器用于选取获得焦点的表单元素</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">style</span>&gt;</span><br><span class="line"><span class="selector-tag">input</span><span class="selector-pseudo">:focus</span>&#123;</span><br><span class="line">     <span class="attribute">background-color</span>: springgreen;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;<span class="selector-tag">body</span>&gt;</span><br><span class="line">    &lt;input type=&quot;text&quot;&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@e6d39d9d83bfc5d66940b4c83b23f5c0c3f5e676/2021/01/20/3af1d6f78c6e865d33adc8018f5ac080.png"></p><h2 id="结构伪类选择器"><a href="#结构伪类选择器" class="headerlink" title="结构伪类选择器"></a>结构伪类选择器</h2><table><thead><tr><th align="center">选择器</th><th align="center">功能描述</th></tr></thead><tbody><tr><td align="center"><code>E:first-child</code></td><td align="center"><strong>作为父元素的第一个子元素的元素E</strong></td></tr><tr><td align="center"><code>E:last-child</code></td><td align="center"><strong>作为父元素的最后一个子元素的元素E</strong></td></tr><tr><td align="center"><code>E F:nth-child(n)</code></td><td align="center"><strong>选择父级元素E的第n个子元素(n可以是1,2,3…)关键字为even、odd</strong></td></tr><tr><td align="center"><code>E:first-of-type</code></td><td align="center"><strong>选择父元素内具有指定类型的第一个E元素</strong></td></tr><tr><td align="center"><code>E:last-of-type</code></td><td align="center"><strong>选择父元素内具有指定类型的最后一个E元素</strong></td></tr><tr><td align="center"><code>E F:nth-of-type(n)</code></td><td align="center"><strong>选择父元素内具有指定类型的第n个E元素</strong></td></tr></tbody></table><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-pseudo">:first-child</span> &#123;<span class="attribute">background</span>: red;&#125;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-pseudo">:last-child</span> &#123;<span class="attribute">background</span>: green;&#125;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">p</span><span class="selector-pseudo">:nth-child(1)</span> &#123;<span class="attribute">background</span>: yellow;&#125;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">p</span><span class="selector-pseudo">:nth-of-type(2)</span> &#123;<span class="attribute">background</span>: blue;&#125;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;p1&quot;</span>&gt;</span>p1<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;p2&quot;</span>&gt;</span>p2<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;p3&quot;</span>&gt;</span>p3<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>li1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>li2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>li3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@173244b0f13eb1ae426a738b7899cf5fa6ea9705/2021/01/20/a0483a567638b0288581ccffb1db6525.png" width="50%"><ul><li><strong>使用E F:nth-child(n)和E F:nth-of-type(n)的 关键点</strong><ul><li>E F:nth-child(n)在父级里从一个元素开始查找，不分类型</li><li>E F:nth-of-type(n)在父级里先看<code>类型</code>，再看位置</li></ul></li></ul><h2 id="否定伪类选择器"><a href="#否定伪类选择器" class="headerlink" title="否定伪类选择器"></a>否定伪类选择器</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-pseudo">:not(selector)</span> &#123;</span><br><span class="line">    属性 : 属性值;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>否定伪类选择器<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">    <span class="selector-class">.fancy</span> &#123;</span></span><br><span class="line">      text-shadow: 2px 2px 3px gold;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">    <span class="selector-tag">p</span><span class="selector-pseudo">:not(.fancy)</span> &#123; <span class="comment">/*匹配class名不是fancy的p标签*/</span></span></span><br><span class="line">      color: green;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">    <span class="selector-tag">body</span> <span class="selector-pseudo">:not(p)</span> &#123; <span class="comment">/*匹配body中不是p标签的标签*/</span></span></span><br><span class="line">      text-decoration: underline;</span><br><span class="line">    &#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>我是一个段落。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;fancy&quot;</span>&gt;</span>我好看极了！<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span>我不是一个段落。<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@a80003371178c252a31509fe291159b5805778b1/2021/01/20/6498bcdaf69b93a2820207e45a809127.png"></p><h2 id="伪元素选择器"><a href="#伪元素选择器" class="headerlink" title="伪元素选择器"></a>伪元素选择器</h2><p>CSS 中<strong>伪元素选择器</strong>的用法与伪类选择器的用法类似，都是在指定 CSS 选择器增加关键字。但这两者的作用并不相同，伪类选择器是用来描述某个指定元素的状态信息，而伪元素选择器是用来描述某个指定元素的特定部分设定样式。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* CSS3 语法 */</span></span><br><span class="line">选择器::伪元素 &#123;</span><br><span class="line">  属性 : 属性值;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* CSS2 过时语法 (仅用来支持 IE8) */</span></span><br><span class="line">选择器:伪元素 &#123;</span><br><span class="line">  属性 : 属性值;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>伪元素选择器</strong>的语法格式为<code> ::伪元素</code>，一定不要忘记<code> ::</code>。<strong>伪元素选择器</strong>只能和基本选择器配合使用，并且一个选择器只能使用一个伪元素选择器，如果要为一个选择器增加多个伪元素选择器需要分别编写</p><h3 id="before和after"><a href="#before和after" class="headerlink" title="before和after"></a>before和after</h3><ul><li><code> ::before</code> 伪元素的作用是作为定位的 HTML 元素的<strong>第一个子级元素</strong></li><li><code>::after</code>伪元素的作用是作为定位的 HTML 元素的<strong>最后一个子级元素</strong></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">a</span><span class="selector-pseudo">::after</span>&#123;</span></span><br><span class="line">            content: &quot;→&quot;;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-tag">a</span><span class="selector-pseudo">::before</span>&#123;</span></span><br><span class="line">            content: &quot;♥&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;xiaoliblog.cn&quot;</span>&gt;</span>这是一个测试内容<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@3efdc406350769c44f68d36e25687bbbd8cc8e93/2021/01/20/c8b1e0079d2b91c947a5c40b289caf61.png"></p><h3 id="first-letter"><a href="#first-letter" class="headerlink" title="first-letter"></a>first-letter</h3><p><code>::first-letter</code> 伪元素的作用是为匹配元素的文本内容的<strong>第一个字母</strong>设置样式内容。 如下示例代码展示了 <code>::first-letter </code>伪元素 的用法：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span><span class="selector-pseudo">::first-letter</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">130%</span>;</span><br><span class="line">  <span class="attribute">color</span>:teal;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@3001027787acafc04952dce7aa28b6a1d8b5f5f4/2021/01/20/ab67b65e171c3a98fd85b794f3d4fd0b.png"></p><h3 id="first-line"><a href="#first-line" class="headerlink" title="first-line"></a>first-line</h3><p><code>::first-line </code>伪元素的作用是为匹配 HTML 元素的文本内容的<strong>第一行</strong>设置样式内容。 如下示例代码展示了 <code>::first-line 伪元素</code> 的用法：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span><span class="selector-pseudo">::first-line</span>&#123;</span><br><span class="line">  <span class="attribute">background-color</span>: tomato;</span><br><span class="line">&#125;</span><br><span class="line">&lt;<span class="selector-tag">p</span>&gt;</span><br><span class="line">    我的第一行测试代码&lt;<span class="selector-tag">br</span>&gt;</span><br><span class="line">    我的第二行测试代码</span><br><span class="line">&lt;/p&gt;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@73a70a2784727ddb2dfc750b8c4299f9573a9a6c/2021/01/20/b4b3ed9ecc17e69ee5904317533ec440.png"></p><h3 id="selection"><a href="#selection" class="headerlink" title="selection"></a>selection</h3><p><code>::selection</code> 伪元素的作用是匹配用户在<strong>HTML 页面选中的文本内容</strong>（比如使用鼠标或其他选择设备选中的部分）设置高亮效果。如下示例代码展示了 <code>::selection 伪元素</code>的用法：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span><span class="selector-pseudo">::selection</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: gold;</span><br><span class="line">    <span class="attribute">background-color</span>: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@a4ae1cb3f7fb1f36fe62e5d69619ba8a70c14402/2021/01/20/aa5203e9bf82bdb9616292bae42366d5.png"><br>只有一小部分 CSS 属性可以用于<code>::selection </code>伪元素：</p><ul><li>color 属性</li><li>background-color 属性</li><li>cursor 属性</li><li>caret-color 属性</li><li>outline 属性</li><li>text-decoration 属性</li><li>text-emphasis-color 属性</li><li>text-shadow 属性</li></ul>]]></content>
      
      
      <categories>
          
          <category> Web前端 </category>
          
          <category> HTML+CSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML+CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前端三剑客🔗HTML基础</title>
      <link href="2021/01/18/%E5%89%8D%E7%AB%AF/HTML+CSS/%E5%89%8D%E7%AB%AF%E4%B8%89%E5%89%91%E5%AE%A2_HTML%E5%9F%BA%E7%A1%80/"/>
      <url>2021/01/18/%E5%89%8D%E7%AB%AF/HTML+CSS/%E5%89%8D%E7%AB%AF%E4%B8%89%E5%89%91%E5%AE%A2_HTML%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h1 id="教程推荐"><a href="#教程推荐" class="headerlink" title="教程推荐"></a>教程推荐</h1><div class="note success flat"><p>👉👉👉<a href="https://www.bilibili.com/video/BV14J4114768">黑马程序员pink老师前端入门视频教程 HTML5+CSS3</a></p></div><h1 id="调试工具"><a href="#调试工具" class="headerlink" title="调试工具"></a>调试工具</h1><ul><li>打开浏览器，按下<code>F12键</code>或者<code>右击页面空白处-&gt;检查</code></li><li>左边是HTML元素结构，右边是CSS样式<br><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@7b5763dc8472303f80614bd645b80919e4895a39/2021/01/20/dfc2b5526d89d883c7c915e6f250d8df.png"></li><li>右边CSS样式可以改动数值，但只是调试，并不会影响源代码</li><li>如果点击元素，发现右侧没有样式引入，极有可能是类名或者样式引入错误</li><li>如果有样式，但是样式前面有<code>黄色感叹号提示</code>，则是样式属性书写错误</li></ul><h1 id="Emmet语法"><a href="#Emmet语法" class="headerlink" title="Emmet语法"></a>Emmet语法</h1><ul><li>Emmet语法的前身是Zen coding，它使用缩写来提高html/css的编写速度，VsCode已经集成该语法</li><li>VsCode蓝奏云下载链接请戳<a href="https://wws.lanzous.com/ibPKpklkb6d">密码:8ogy</a></li></ul><div class="note success flat"><p>快速生成HTML</p></div><ul><li>生成标签：直接输入<code>标签名按tab键</code>即可</li><li>生成多个相同标签，<code>标签名加上\*个数</code>即可</li><li>如果有父子级关系的标签，可以用<code>&gt;</code>，比如ul&gt;li</li><li>如果有兄弟关系的标签，用<code>+</code>即可，比如div+p</li><li>如果生成带有类名或者id名字的，可以直接写 <code>标签名.demo</code> 或者 <code>标签名#two</code> 再按tab键即可</li><li>如果生成的div类名是有顺序的，可以用自增符号<code> $</code></li></ul><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@3baf34324f4158ef54dd0162de83f60378925b8b/2021/01/20/bfce302a21e4247df0193f9efe7ece02.png"></p><div class="note success flat"><p>快速生成CSS</p></div><ul><li>CSS基本<strong>采取简写形式</strong>即可<br>  比如w200 ,按tab 可以生成width:200px<br>  比如lh26，按tab 可以生成 line-height:26px</li></ul><div class="note success flat"><p>格式化代码</p></div><p>格式化代码可以快速调整代码结构，在VsCode中<code>右击-&gt;格式化文档</code>即可</p><h1 id="HTML页面"><a href="#HTML页面" class="headerlink" title="HTML页面"></a>HTML页面</h1><ul><li><p>HTML：Hyper Text Markup Language（超文本标记语言）<br>超文本包括：文字、图片、音频、视频、动画等</p></li><li><p>W3C</p><ol><li>World Wide Web Consortium（万维网联盟）</li><li>成立于1994年，Web技术领域最权威和具影响力<br>的国际中立性技术标准机构</li></ol></li><li><p>W3C标准包括</p><ol><li>结构化标准语言（XHTML 、XML）</li><li>表现标准语言（CSS）</li><li>行为标准（DOM、ECMAScript ）</li></ol></li><li><p>网页基本结构</p></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span> 我的第一个网页<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">我的第一个网页</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>文档类型声明标签，告诉浏览器所采用的是什么规范</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="Head标签"><a href="#Head标签" class="headerlink" title="Head标签"></a>Head标签</h1><ul><li><code>&lt;title&gt;</code>标签<br>设定显示在浏览器标题栏中的内容</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>家用电器排行榜<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li> <code>&lt;meta&gt;</code>标签<br>定义网页的字符集、关键字、描述信息等内容</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;keywords&quot;</span> <span class="attr">content</span>=<span class="string">&quot;关键字1,关键字2,关键字3,...&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;description&quot;</span> <span class="attr">content</span>=<span class="string">&quot;网页描述内容&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;refresh&quot;</span> <span class="attr">content</span>=<span class="string">“刷新间隔时间;url</span>=<span class="string">页面地址”</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meat</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Type&quot;</span> <span class="attr">content</span>=<span class="string">&quot;text/html;charset=某种字符集&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>gb2312包含全部中文字符，utf-8 则包含全世界所有国家需要用到的字符，页面编码应与页面文件保存时的编码一致</p></blockquote><h1 id="Body标签"><a href="#Body标签" class="headerlink" title="Body标签"></a>Body标签</h1><ul><li><strong>设置正文颜色与背景颜色</strong><br>body标签封装了页面的主体内容</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">bgcolor</span>=<span class="string">&quot;页面背景颜色值&quot;</span> <span class="attr">text</span>=<span class="string">&quot;页面正文颜色值&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>添加网页背景图片</strong></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- fixed设置背景图片固定不动--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">background</span>=<span class="string">&quot;背景图片的URI&quot;</span> <span class="attr">bgproperties</span>=<span class="string">&quot;fixed&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>设置网页链接文字颜色</strong></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">link</span>=<span class="string">&quot;未访问状态颜色值&quot;</span> <span class="attr">vlink</span>=<span class="string">&quot;访问过后的颜色值&quot;</span> <span class="attr">alink</span>=<span class="string">&quot;正在访问中的颜色&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>设置网页边距</strong></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">leftmargin</span>=<span class="string">&quot;左边距值&quot;</span> <span class="attr">rightmargin</span>=<span class="string">&quot;右边距值&quot;</span> <span class="attr">topmargin</span>=<span class="string">&quot;上边距值&quot;</span> <span class="attr">bottommargin</span>=<span class="string">&quot;底边距值&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="文字与段落标记"><a href="#文字与段落标记" class="headerlink" title="文字与段落标记"></a>文字与段落标记</h1><ul><li><strong>注释</strong></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--注释内容--&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>字体设置</strong></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">face</span>=<span class="string">&quot;字体名称&quot;</span> <span class="attr">size</span>=<span class="string">&quot;字号&quot;</span> <span class="attr">color</span>=<span class="string">&quot;颜色值&quot;</span>&gt;</span>文字内容<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>size字号取值范围从1到7，或者从+1到+7、从-1到-7（正负取值相对于页面默认字号）</p></blockquote><ul><li><strong>字体样式标签</strong></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">strong</span>&gt;</span>加粗<span class="tag">&lt;/<span class="name">strong</span>&gt;</span>、<span class="tag">&lt;<span class="name">b</span>&gt;</span>加租<span class="tag">&lt;/<span class="name">b</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">em</span>&gt;</span>斜体<span class="tag">&lt;/<span class="name">em</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">sup</span>&gt;</span>设置为上标<span class="tag">&lt;/<span class="name">sup</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">sub</span>&gt;</span>设置为小标<span class="tag">&lt;/<span class="name">sub</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">big</span>&gt;</span>设置为大字号<span class="tag">&lt;/<span class="name">big</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">small</span>&gt;</span>设置为小字号<span class="tag">&lt;/<span class="name">small</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">u</span>&gt;</span>设置下划线<span class="tag">&lt;/<span class="name">u</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">s</span>&gt;</span>设置删除线<span class="tag">&lt;/<span class="name">s</span>&gt;</span></span><br></pre></td></tr></table></figure><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@d85e64758467702110b05ad1921e9a1ea7f5e1c8/2021/01/20/ca977fb88fe2c535bae3cf3362f767da.png" width="70%"><ul><li><strong>标题标签</strong></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span> 一级标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span> 二级标题<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span> 三级标题<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h4</span>&gt;</span> 四级标题<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h5</span>&gt;</span> 五级标题<span class="tag">&lt;/<span class="name">h5</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h6</span>&gt;</span> 六级标题<span class="tag">&lt;/<span class="name">h6</span>&gt;</span></span><br></pre></td></tr></table></figure><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@81825dd147ff5e2cc6326db3faca32c4b1eb0483/2021/01/20/99b4ec790f87934c701aa4ea4f7cb6ac.png" width="70%"><ul><li><strong>段落标签</strong></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>这个一个段落<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>换行标签</strong></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>预格式化标签</strong><br>预格式化可以保留在源代码中使用Enter、空格等键产生的各种格式</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">pre</span>&gt;</span> .. <span class="tag">&lt;/<span class="name">pre</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>居中标记</strong></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">center</span>&gt;</span>居中<span class="tag">&lt;/<span class="name">center</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>缩排标记</strong><br>缩排标记可以使一段文字产生一定位置的缩进，使用多次缩排标记可以实现多次缩排</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">blockquot</span>&gt;</span>...<span class="tag">&lt;/<span class="name">blockquot</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>水平线标签</strong></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hr</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span> <span class="attr">width</span>=<span class="string">&quot;宽度&quot;</span> <span class="attr">height</span>=<span class="string">&quot;高度&quot;</span> <span class="attr">size</span>=<span class="string">&quot;粗细&quot;</span> <span class="attr">align</span>=<span class="string">&quot;水平对齐方式&quot;</span> <span class="attr">color</span>=<span class="string">&quot;颜色&quot;</span> <span class="attr">noshade</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>noshade表示设置实心的不带阴影的效果</p></blockquote><h1 id="列表标记"><a href="#列表标记" class="headerlink" title="列表标记"></a>列表标记</h1><h2 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h2><p>以数字或字母等可以表示顺序的符号为项目前导符来排列列表项的列表</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>列表项一<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>列表项二<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>列表项三<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>前导符设置</strong>：前导符可以取1、A、a、I、i这几种，默认为”1”</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ol</span> <span class="attr">type</span>=<span class="string">&quot;前导符&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>起始编号设置</strong>：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ol</span> <span class="attr">start</span>=<span class="string">&quot;起始编号位序&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h2><p>以无序次含义的符号为前导符的列表</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>列表项一<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>列表项二<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>列表项三<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>前导符设置</strong>：前导符可以取disc（实心圆点）、circle（空心圆点）、square（实心小方块），默认为”disc”</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">type</span>=<span class="string">&quot;前导符&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="定义列表"><a href="#定义列表" class="headerlink" title="定义列表"></a>定义列表</h2><p>一种具有两个层次的列表，可以用于对名词的解释，其中名词为第一层次，解释为第二层次</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dl</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dt</span>&gt;</span>名词一<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dd</span>&gt;</span>解释一<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dd</span>&gt;</span>解释二<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">...</span><br><span class="line"><span class="tag">&lt;<span class="name">dt</span>&gt;</span>名词二<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dd</span>&gt;</span>解释一<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dd</span>&gt;</span>解释二<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="表格标签"><a href="#表格标签" class="headerlink" title="表格标签"></a>表格标签</h1><ul><li>语法</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">width</span>=<span class="string">“200”</span> <span class="attr">border</span>=<span class="string">“8”</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span> 第1 个单元格的内容<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span> 第2 个单元格的内容<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">……</span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span> 第1 个单元格的内容<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span> 第2 个单元格的内容<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">……</span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>设置表格边框和大小</strong></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;边框宽度&quot;</span> <span class="attr">bordercolor</span>=<span class="string">&quot;边框颜色&quot;</span> <span class="attr">width</span>=<span class="string">&quot;宽度&quot;</span> <span class="attr">height</span>=<span class="string">&quot;高度&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>设置表格背景颜色和对齐方式</strong></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">bgcolor</span>=<span class="string">&quot;颜色值&quot;</span> <span class="attr">align</span>=<span class="string">&quot;对齐方式&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>设置背景图片</strong></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">background</span>=<span class="string">&quot;图片路径&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>设置表格边框间隔</strong></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">cellpadding</span>=<span class="string">&quot;内容与边框距离值&quot;</span> <span class="attr">cellspacing</span>=<span class="string">&quot;边框之间间距值&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>设置表格的标题</strong></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">caption</span> <span class="attr">align</span>=<span class="string">&quot;水平对齐方式left/right/center&quot;</span> <span class="attr">valign</span>=<span class="string">&quot;垂直对齐方式top/bottom&quot;</span>&gt;</span>表格标题<span class="tag">&lt;/<span class="name">caption</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong><code>&lt;tr&gt;</code>标签</strong><br>一个&lt;tr&gt;&lt;/tr&gt;表示一行</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">tr</span> <span class="attr">height</span>=<span class="string">&quot;行高&quot;</span> <span class="attr">align</span>=<span class="string">&quot;水平对齐方式&quot;</span> <span class="attr">valign</span>=<span class="string">&quot;垂直对齐方式&quot;</span> <span class="attr">bordercolor</span>=<span class="string">&quot;颜色值&quot;</span> <span class="attr">bgcolor</span>=<span class="string">&quot;颜色值&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong><code>&lt;td&gt;</code>和<code>&lt;th&gt;</code>标签</strong></li></ul><table><thead><tr><th align="center">常用属性</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">align</td><td align="center">水平对齐方式，取值left，right，center</td></tr><tr><td align="center">valign</td><td align="center">垂直对齐方式，取值top，middle，bottom</td></tr><tr><td align="center">bgcolor</td><td align="center">单元格背景颜色</td></tr><tr><td align="center">background</td><td align="center">单元格背景图片</td></tr><tr><td align="center">bordercolor</td><td align="center">单元格边框颜色</td></tr><tr><td align="center">width</td><td align="center">单元格宽度，单位为像素或者百分比</td></tr><tr><td align="center">height</td><td align="center">单元格高度</td></tr><tr><td align="center">rowspan</td><td align="center">单元格的跨行操作</td></tr><tr><td align="center">colspan</td><td align="center">单元格的跨列操作</td></tr></tbody></table><h1 id="图片标签"><a href="#图片标签" class="headerlink" title="图片标签"></a>图片标签</h1><ul><li><p>常见的图像格式</p><ol><li>位图：JPG、PNG、GIF</li><li>矢量图：ai、cdf、fh、swf</li></ol></li><li><p>区别</p><ol><li>位图：色彩丰富，表现力强，容量大，用于网页</li><li>矢量图：图片放大，清晰度不变，不适用于色彩，丰富的图片，用于印刷行业、网页logo等。</li></ol></li><li><p><strong>设置图片大小和提示</strong></p></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;path&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;text&quot;</span> <span class="attr">title</span>=<span class="string">&quot;text&quot;</span> <span class="attr">width</span>=<span class="string">&quot;x&quot;</span> <span class="attr">height</span>=<span class="string">&quot;y&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>src为图像路径，alt为图像的替代文章，title为鼠标悬停提示文字，width，height为宽高</p><ul><li><strong>设置图片与周围对象的间距</strong></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;图片路径&quot;</span> <span class="attr">hspace</span>=<span class="string">&quot;水平间距&quot;</span> <span class="attr">vaspace</span>=<span class="string">&quot;垂直间距&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>设置图片的对齐方式</strong></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;图片文件路径&quot;</span> <span class="attr">align</span>=<span class="string">&quot;top/bottom/middle/left/right&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>设置图片边框</strong></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;图片文件路径&quot;</span> <span class="attr">border</span>=<span class="string">&quot;边框宽度&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="链接标签"><a href="#链接标签" class="headerlink" title="链接标签"></a>链接标签</h1><ul><li><strong>普通链接</strong></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;目标端点&quot;</span> <span class="attr">target</span>=<span class="string">&quot; 目标窗口位置&quot;</span>&gt;</span> 链接文字或图像<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><table><thead><tr><th align="center">target属性</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">_blank</td><td align="center">在新窗口打开链接文档</td></tr><tr><td align="center">_self</td><td align="center">在同一个框架或同一窗口中打开链接文档(默认属性)</td></tr><tr><td align="center">_parent</td><td align="center">在上一级窗口中打开，一般在框架页面中经常使用</td></tr><tr><td align="center">_top</td><td align="center">在浏览器的整个窗口中打开，忽略如何框架</td></tr><tr><td align="center">框架名称</td><td align="center">在指定的框架窗口中打开链接文档</td></tr></tbody></table><ul><li><strong>锚链接（从A页面的甲位置跳转到本页中的乙位置）</strong></li></ul><ol><li>创建跳转标记<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">name</span>=<span class="string">&quot;marker&quot;</span>&gt;</span> 乙位置<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>创建跳转链接<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#marker&quot;</span>&gt;</span> 甲位置<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><ul><li><strong>功能性链接（电子邮件、QQ、MSN）</strong></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;mailto:bdqnWebmaster@bdqn.cn&quot;</span>&gt;</span> 联系我们<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>脚本链接</strong></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:alert(&#x27;你好，欢迎访问！&#x27;)&quot;</span>&gt;</span>欢迎访问<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>文件下载</strong><br>当链接的目标文档类型属于.doc、.Rar、.zip、.exe等</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;task.exe&quot;</span>&gt;</span>可执行文件下载<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>图片链接</strong></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;目标地址&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;图片地址&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="表单标签"><a href="#表单标签" class="headerlink" title="表单标签"></a>表单标签</h1><ul><li><strong>表单标签&lt;form&gt;</strong></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">name</span>=<span class="string">&quot;表单名称&quot;</span> <span class="attr">action</span>=<span class="string">&quot;提交方式&quot;</span> <span class="attr">method</span>=<span class="string">&quot;提交方法&quot;</span>&gt;</span></span><br><span class="line">...</span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>输入标记&lt;input&gt;</strong></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;元素类型&quot;</span> <span class="attr">name</span>=<span class="string">&quot;表单元素名称&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><table><thead><tr><th align="center">type属性值</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">text</td><td align="center">单行文本框</td></tr><tr><td align="center">password</td><td align="center">密码框</td></tr><tr><td align="center">file</td><td align="center">设置文件元素</td></tr><tr><td align="center">hidden</td><td align="center">设置隐藏元素</td></tr><tr><td align="center">radio</td><td align="center">单选框元素</td></tr><tr><td align="center">checkbox</td><td align="center">复选框元素</td></tr><tr><td align="center">button</td><td align="center">普通按钮</td></tr><tr><td align="center">submit</td><td align="center">提交按钮</td></tr><tr><td align="center">reset</td><td align="center">重置按钮</td></tr><tr><td align="center">image</td><td align="center">图像按钮</td></tr></tbody></table><hr><table><thead><tr><th align="center">属性</th><th align="left">属性值</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">name</td><td align="left">自定义</td><td align="center"></td></tr><tr><td align="center">value</td><td align="left">自定义</td><td align="center"></td></tr><tr><td align="center">size</td><td align="left">正整数</td><td align="center"></td></tr><tr><td align="center">readonly</td><td align="left">readonly</td><td align="center">只读</td></tr><tr><td align="center">disabled</td><td align="left">disabled</td><td align="center">禁用</td></tr><tr><td align="center">checked</td><td align="left">checked</td><td align="center">默认选中</td></tr><tr><td align="center">maxlength</td><td align="left">正整数</td><td align="center">允许输入最大字符数</td></tr></tbody></table><ul><li><strong>文本框text</strong></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;文本框名称&quot;</span> <span class="attr">maxlength</span>=<span class="string">&quot;最多可输入字符数&quot;</span> <span class="attr">size</span>=<span class="string">&quot;文本框长度，单位是像素&quot;</span> <span class="attr">value</span>=<span class="string">&quot;默认值&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>密码框password</strong></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;密码框名称&quot;</span> <span class="attr">readonly</span>=<span class="string">&quot;readonly&quot;</span> <span class="attr">maxlength</span>=<span class="string">&quot;最多可输入字符数&quot;</span> <span class="attr">size</span>=<span class="string">&quot;文本框长度，单位是像素&quot;</span> <span class="attr">value</span>=<span class="string">&quot;默认值&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>隐藏框hidden</strong></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;hidden&quot;</span> <span class="attr">name</span>=<span class="string">&quot;域名称&quot;</span> <span class="attr">value</span>=<span class="string">&quot;域值&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>文件域file</strong></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">name</span>=<span class="string">&quot;域名称&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>单选按钮radio</strong></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;域名称&quot;</span> <span class="attr">value</span>=<span class="string">&quot;域值&quot;</span> <span class="attr">checked</span>=<span class="string">&quot;checked&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>checked表示默认选中</p><blockquote><p>同一组单选按钮的各个选项的名称必须相同</p></blockquote><ul><li><strong>复选框checkbox</strong></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;域名称&quot;</span> <span class="attr">value</span>=<span class="string">&quot;域值&quot;</span> <span class="attr">checked</span>=<span class="string">&quot;checked&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>提交按钮submit</strong></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">name</span>=<span class="string">&quot;按钮名称&quot;</span> <span class="attr">value</span>=<span class="string">&quot;按钮显示文本&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>普通按钮button</strong><br>用于激发表单动作，常配合JavaScript脚本对表单执行操作</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">name</span>=<span class="string">&quot;按钮名称&quot;</span> <span class="attr">value</span>=<span class="string">&quot;按钮显示文本&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;javascript 函数名&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>重置按钮reset</strong></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;reset&quot;</span> <span class="attr">name</span>=<span class="string">&quot;按钮名称&quot;</span> <span class="attr">value</span>=<span class="string">&quot;按钮显示名称&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>图像按钮</strong></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;image&quot;</span> <span class="attr">name</span>=<span class="string">&quot;按钮名称&quot;</span> <span class="attr">src</span>=<span class="string">&quot;图像路径&quot;</span> <span class="attr">width</span>=<span class="string">&quot;60&quot;</span> <span class="attr">height</span>=<span class="string">&quot;60&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="label标签"><a href="#label标签" class="headerlink" title="label标签"></a>label标签</h2><ul><li><code>&lt;label&gt;</code>标签为input元素定义标注（标签）</li><li><code>&lt;label&gt;</code>标签用于绑定一共表单元素，当点击&lt;label&gt;标签内的文本时，浏览器就会自动将焦点（光标）转到或者选择对应的表单元素上，用来增加用户体验</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;name&quot;</span>&gt;</span>用户名:<span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;name&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">id</span>=<span class="string">&quot;nan&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;nan&quot;</span>&gt;</span>男<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">id</span>=<span class="string">&quot;nu&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;nu&quot;</span>&gt;</span>女<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@67b0ce2eca1141e64f2b3665186139073ed7bc10/2021/01/20/fd46b2061f380712ac127b96e2736674.png"></p><div class="note warning flat"><p>&lt;label&gt;标签的<code>for</code>属性应当与相关元素的<code>id属性</code>相同</p></div><h1 id="选择列表标签"><a href="#选择列表标签" class="headerlink" title="选择列表标签"></a>选择列表标签</h1><ul><li><strong>列表<code>&lt;select&gt;</code></strong></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">&quot;列表名称&quot;</span> <span class="attr">size</span>=<span class="string">&quot;显示的选项数目&quot;</span> <span class="attr">multiple</span>=<span class="string">&quot;multiple&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;选项值&quot;</span> <span class="attr">selected</span>=<span class="string">&quot;selected&quot;</span>&gt;</span>选项一<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;选项值&quot;</span>&gt;</span>选项二<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>multiple表示项目可多选<br>selected表示默认选项，可设置多个</p></blockquote><ul><li><strong>下拉列表</strong><br>一次只能选一个</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;选项值&quot;</span>&gt;</span>选项一<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;选项值&quot;</span>&gt;</span>选项二<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>文本域标签<code>&lt;textarea&gt;</code></strong></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">textarea</span> <span class="attr">name</span>=<span class="string">&quot;文本域名称&quot;</span> <span class="attr">rows</span>=<span class="string">&quot;行数&quot;</span> <span class="attr">cols</span>=<span class="string">&quot;列数(字符数)&quot;</span>&gt;</span></span><br><span class="line">``</span><br><span class="line"><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="滚动字幕"><a href="#滚动字幕" class="headerlink" title="滚动字幕"></a>滚动字幕</h1><ul><li><strong>设置滚动字幕</strong><br>默认情况下，&lt;marquee&gt;标签得到的滚动字幕是从右向左的</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">marquee</span>&gt;</span>滚动文字<span class="tag">&lt;/<span class="name">marquee</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>设置滚动方向</strong></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">marquee</span> <span class="attr">direction</span>=<span class="string">&quot;滚动方向&quot;</span>&gt;</span>滚动文字<span class="tag">&lt;/<span class="name">marquee</span>&gt;</span></span><br></pre></td></tr></table></figure><table><thead><tr><th align="center">direction属性值</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">up</td><td align="center">从下往上滚动</td></tr><tr><td align="center">down</td><td align="center">从上往下滚动</td></tr><tr><td align="center">left</td><td align="center">从左往右滚动</td></tr><tr><td align="center">right</td><td align="center">从右往左滚动</td></tr></tbody></table><ul><li><strong>设置滚动字幕的滚动行为</strong></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">marquee</span> <span class="attr">behavior</span>=<span class="string">&quot;滚动行为&quot;</span>&gt;</span>滚动文字<span class="tag">&lt;/<span class="name">marquee</span>&gt;</span></span><br></pre></td></tr></table></figure><table><thead><tr><th align="center">behavior属性值</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">scroll</td><td align="center">设置文字循环往复滚动（默认）</td></tr><tr><td align="center">slide</td><td align="center">设置文字只进行一次滚动</td></tr><tr><td align="center">alternate</td><td align="center">设置文字循环交替往返进行滚动</td></tr></tbody></table><ul><li><strong>设置字幕的滚动速度和滚动延迟特性</strong></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">marquee</span> <span class="attr">scrollamount</span>=<span class="string">&quot;滚动速度值(默认为6)&quot;</span> <span class="attr">scrolldelay</span>=<span class="string">&quot;延迟时间(毫秒为单位)&quot;</span>&gt;</span>滚动文字<span class="tag">&lt;/<span class="name">marquee</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>设置字幕的滚动区域及其背景色</strong></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">marquee</span> <span class="attr">bgcolor</span>=<span class="string">&quot;颜色值&quot;</span> <span class="attr">width</span>=<span class="string">&quot;宽度&quot;</span> <span class="attr">height</span>=<span class="string">&quot;高度&quot;</span>&gt;</span>滚动字幕<span class="tag">&lt;/<span class="name">marquee</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>设置字幕的滚动区域与周围对象的间距</strong></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">marquee</span> <span class="attr">hspace</span>=<span class="string">&quot;水平间距&quot;</span> <span class="attr">vspace</span>=<span class="string">&quot;垂直间距&quot;</span>&gt;</span>滚动文字<span class="tag">&lt;/<span class="name">marquee</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="多媒体标签"><a href="#多媒体标签" class="headerlink" title="多媒体标签"></a>多媒体标签</h1><ul><li><strong>视频标签</strong></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">controls</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">&quot;video/video.webm&quot;</span> <span class="attr">type</span>=<span class="string">&quot;video/webm&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">&quot;video/video.mp4&quot;</span> <span class="attr">type</span>=<span class="string">&quot;video/mp4&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>cotrols表示提供播放、暂停和音量 的控件</p></blockquote><ul><li><strong>自动播放</strong></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">autoplay</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">&quot;video/video.webm&quot;</span> <span class="attr">type</span>=<span class="string">&quot;video/webm&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">&quot;video/video.mp4&quot;</span> <span class="attr">type</span>=<span class="string">&quot;video/mp4&quot;</span>/&gt;</span></span><br><span class="line">持 你的浏览器不支持video 元素</span><br><span class="line"><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>音频标签</strong></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">audio</span> <span class="attr">controls</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">&quot;music/music.mp3&quot;</span> <span class="attr">type</span>=<span class="string">&quot;audio/mpeg&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">&quot;music/music.ogg&quot;</span> <span class="attr">type</span>=<span class="string">&quot;audio/ogg&quot;</span>/&gt;</span></span><br><span class="line">持 你的浏览器不支持audio 元素</span><br><span class="line"><span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="结构元素"><a href="#结构元素" class="headerlink" title="结构元素"></a>结构元素</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">header</span>&gt;</span><span class="tag">&lt;<span class="name">h2</span>&gt;</span> 网页头部<span class="tag">&lt;/<span class="name">h2</span>&gt;</span> <span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">section</span>&gt;</span><span class="tag">&lt;<span class="name">h2</span>&gt;</span> 网页主体部分<span class="tag">&lt;/<span class="name">h2</span>&gt;</span><span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">footer</span>&gt;</span><span class="tag">&lt;<span class="name">h2</span>&gt;</span> 网页底部<span class="tag">&lt;/<span class="name">h2</span>&gt;</span><span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artice</span>&gt;</span>独立的文章内容<span class="tag">&lt;/<span class="name">artice</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">aside</span>&gt;</span>相关内容或应用<span class="tag">&lt;/<span class="name">aside</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">nav</span>&gt;</span>导航类辅助内容<span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="框架结构"><a href="#框架结构" class="headerlink" title="框架结构"></a>框架结构</h1><p>框架的基本结构分框架集和框架两个部分，因为只分隔窗口，不涉及页面的具体内容，所以不需要&lt;body&gt;包裹</p><ul><li><p><strong>框架集标记</strong><br>&lt;frameset&gt;的作用主要是定义浏览器窗口的分割方式、各分隔窗口(框架)的大小，以及设置框架边框的颜色和粗细等属性。</p><table><thead><tr><th align="center">属性</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">border</td><td align="center">设置边框粗细</td></tr><tr><td align="center">bordercolor</td><td align="center">边框颜色</td></tr><tr><td align="center">frameboder</td><td align="center">是否显示边框，可取值0或和1，或者no和yes</td></tr><tr><td align="center">framespacing</td><td align="center">框架之间的间距</td></tr><tr><td align="center">rows</td><td align="center">按行，即上下(垂直)方式分割</td></tr><tr><td align="center">cols</td><td align="center">按列，即左右(水平)方式分割</td></tr></tbody></table></li><li><p><strong>左右分隔窗口</strong></p></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">frameset</span> <span class="attr">cols</span>=<span class="string">&quot;value1,value2,..&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">frame</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">frame</span>&gt;</span></span><br><span class="line">...</span><br><span class="line"><span class="tag">&lt;/<span class="name">frameset</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>上下分割窗口</strong></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">frameset</span> <span class="attr">rows</span>=<span class="string">&quot;value1,value2,..&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">frame</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">frame</span>&gt;</span></span><br><span class="line">...</span><br><span class="line"><span class="tag">&lt;/<span class="name">frameset</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>嵌套分隔窗口</strong></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">frameset</span> <span class="attr">rows</span>=<span class="string">&quot;80%,*,..&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">frame</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">frameset</span> <span class="attr">cols</span>=<span class="string">&quot;20%,*,..&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">frame</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">frame</span>&gt;</span></span><br><span class="line">...</span><br><span class="line"><span class="tag">&lt;/<span class="name">frameset</span>&gt;</span></span><br><span class="line">...</span><br><span class="line"><span class="tag">&lt;/<span class="name">frameset</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>使用&lt;frameset&gt;标签设置框架边框</strong></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">frameset</span> <span class="attr">frameborder</span>=<span class="string">&quot;0|1|no|yes&quot;</span> <span class="attr">framespacing</span>=<span class="string">&quot;边框间距&quot;</span> <span class="attr">border</span>=<span class="string">&quot;边框宽度&quot;</span> <span class="attr">bordercolor</span>=<span class="string">&quot;颜色值&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>框架标记&lt;frame&gt;</strong><br>&lt;frame&gt;用于设置子窗口，是个单标记，必须放在frameset中</li></ul><table><thead><tr><th align="center">属性</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">src</td><td align="center">设置在框架中显示的页面的URL地址</td></tr><tr><td align="center">bordercolor</td><td align="center">设置边框颜色</td></tr><tr><td align="center">frameboder</td><td align="center">是否显示边框，可取值0或和1，或者no和yes</td></tr><tr><td align="center">border</td><td align="center">设置边框粗细</td></tr><tr><td align="center">name</td><td align="center">设置框架名称，可作为超链接的target的属性值</td></tr><tr><td align="center">noresize</td><td align="center">使用时不能调整窗口的大小</td></tr><tr><td align="center">scorlling</td><td align="center">设置是否显示滚动条，可取值yes,no和auto</td></tr><tr><td align="center">marginwidth</td><td align="center">设置内容与框架窗口左右边框的距离</td></tr><tr><td align="center">marginheight</td><td align="center">设置内容与框架窗口上下边框的距离</td></tr></tbody></table><ul><li><strong>设置框架显示内容</strong><br>设置指定某个页面的内容</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">frame</span> <span class="attr">src</span>=<span class="string">&quot;需要显示页面的URL&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>设置框架边距</strong></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">frame</span> <span class="attr">frameborder</span>=<span class="string">&quot;0|1|no|yes&quot;</span> <span class="attr">bordercolor</span>=<span class="string">&quot;颜色值&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>设置框架名称</strong></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">frame</span> <span class="attr">name</span>=<span class="string">&quot;框架名称&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>设置框架固定大小</strong></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">frame</span> <span class="attr">noresize</span>=<span class="string">&quot;noresize&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>设置框架滚动条</strong></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">frame</span> <span class="attr">scrolling</span>=<span class="string">&quot;auto|no|yes&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>设置框架边距</strong></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">frame</span> <span class="attr">marginheight</span>=<span class="string">&quot;上、下边距&quot;</span> <span class="attr">marginwidth</span>=<span class="string">&quot;左、右边距&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>不支持框架标签</strong><br>有些浏览器不支持框架，会显示空白页，这时，需要使用&lt;noframes&gt;显示提示信息</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">noframes</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">抱歉，你的浏览器版本太低，不支持框架，无法看到页面内容，请使用较新的浏览器来浏览</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">noframes</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>浮动框架标签</strong><br>&lt;iframe&gt;是一种特殊的框架页面，可以作为HTML文档的一部分,，放在body标签里面</li></ul><table><thead><tr><th align="center">属性</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">src</td><td align="center">设置在浮点框架中显示的页面的URL地址</td></tr><tr><td align="center">width</td><td align="center">设置浮动框架的宽度</td></tr><tr><td align="center">height</td><td align="center">设置浮动框架的高度</td></tr><tr><td align="center">align</td><td align="center">设置浮动框架的对齐方式</td></tr><tr><td align="center">frameboder</td><td align="center">是否显示边框，可取值0或和1，或者no和yes</td></tr><tr><td align="center">name</td><td align="center">设置框架名称，可作为超链接的target的属性值</td></tr><tr><td align="center">noresize</td><td align="center">使用时不能调整窗口的大小</td></tr><tr><td align="center">scorlling</td><td align="center">设置是否显示滚动条，可取值yes,no和auto</td></tr><tr><td align="center">bordercolor</td><td align="center">设置边框颜色</td></tr><tr><td align="center">marginwidth</td><td align="center">设置内容与框架窗口左右边框的距离</td></tr><tr><td align="center">marginheight</td><td align="center">设置内容与框架窗口上下边框的距离</td></tr></tbody></table><ul><li><strong>在页面中嵌入浮动框架</strong></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">&quot;源文件地址&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>浮动框架的大小</strong></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">&quot;源文件地址&quot;</span> <span class="attr">width</span>=<span class="string">&quot;宽度&quot;</span> <span class="attr">heigth</span>=<span class="string">&quot;高度&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>浮点框架的对齐方式</strong></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">&quot;源文件地址&quot;</span> <span class="attr">align</span>=<span class="string">&quot;对齐方式&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>实现页面间的相互跳转</strong></li></ul><ol><li>在被打开的框架上加name属性<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">name</span>=<span class="string">&quot;mainFrame&quot;</span> <span class="attr">src</span>=<span class="string">&quot;a.html&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure></li><li>在超链接上设置target目标窗口属性为希望显示的框架窗口名<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;a.html&quot;</span> <span class="attr">target</span>=<span class="string">&quot;mainFrame&quot;</span>&gt;</span> 下边显示第二页<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><h1 id="综合实例"><a href="#综合实例" class="headerlink" title="综合实例"></a>综合实例</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>综合案例-注册页面<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h4</span>&gt;</span>青春不常在，抓紧谈恋爱<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">table</span> <span class="attr">width</span>=<span class="string">&quot;600&quot;</span> &gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 第一行 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>性别:<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">id</span>=<span class="string">&quot;nan&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;nan&quot;</span>&gt;</span>  男 <span class="tag">&lt;/<span class="name">label</span>&gt;</span>  </span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">id</span>=<span class="string">&quot;nv&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;nv&quot;</span>&gt;</span> 女<span class="tag">&lt;/<span class="name">label</span>&gt;</span> </span><br><span class="line">            <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 第二行 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>生日:<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">select</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">option</span>&gt;</span>--请选择年份--<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">option</span>&gt;</span>2001<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">option</span>&gt;</span>2002<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">option</span>&gt;</span>2003<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">select</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">option</span>&gt;</span>--请选择月份--<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">option</span>&gt;</span>1<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">option</span>&gt;</span>2<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">option</span>&gt;</span>3<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">select</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">option</span>&gt;</span>--请选择日--<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">option</span>&gt;</span>1<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">option</span>&gt;</span>2<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">option</span>&gt;</span>3<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">            <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 第三行 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>所在地区<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">value</span>=<span class="string">&quot;北京思密达&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 第四行 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>婚姻状况:<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;marry&quot;</span> <span class="attr">checked</span>=<span class="string">&quot;checked&quot;</span>&gt;</span>未婚  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;marry&quot;</span>&gt;</span>  已婚  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;marry&quot;</span>&gt;</span> 离婚</span><br><span class="line">            <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">         <span class="comment">&lt;!-- 第五行 --&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">td</span>&gt;</span>学历:<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">value</span>=<span class="string">&quot;博士后&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">          <span class="comment">&lt;!-- 第六行 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>喜欢的类型:<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;love&quot;</span> &gt;</span> 妩媚的 </span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;love&quot;</span> &gt;</span> 可爱的 </span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;love&quot;</span> &gt;</span> 小鲜肉 </span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;love&quot;</span> &gt;</span> 老腊肉 </span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;love&quot;</span>  <span class="attr">checked</span>=<span class="string">&quot;checked&quot;</span>&gt;</span> 都喜欢 </span><br><span class="line">            <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">         <span class="comment">&lt;!-- 第七行 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>个人介绍<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">textarea</span>&gt;</span>个人简介<span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 第八行 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;免费注册&quot;</span> &gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span>  <span class="attr">checked</span>=<span class="string">&quot;checked&quot;</span>&gt;</span>    我同意注册条款和会员加入标准</span><br><span class="line">                <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> &gt;</span> 我是会员，立即登录<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">h5</span>&gt;</span>我承诺<span class="tag">&lt;/<span class="name">h5</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span>年满18岁、单身<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span>抱着严肃的态度<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span>真诚寻找另一半<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">           </span><br><span class="line">    <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@77fa35dca7f8079f627a091f47882110d05f8cc6/2021/01/20/6224f7986fbb09d31861676ff8d567dd.png"></p>]]></content>
      
      
      <categories>
          
          <category> Web前端 </category>
          
          <category> HTML+CSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML+CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQLServer📦触发器</title>
      <link href="2021/01/18/%E5%90%8E%E7%AB%AF/MySQL/SQLServer_%E8%A7%A6%E5%8F%91%E5%99%A8/"/>
      <url>2021/01/18/%E5%90%8E%E7%AB%AF/MySQL/SQLServer_%E8%A7%A6%E5%8F%91%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="触发器"><a href="#触发器" class="headerlink" title="触发器"></a>触发器</h1><ul><li><p>触发器是 <code>一种特殊类型的存储过程</code> ：一般存储过程可直接调用执行；而触发器主要是通过事件(<code>UPDATE 、INSERT 、DELETE</code>) 触发而被 <code>自动 </code>执行 ，<code>不能直接调用执行 ， 也不能接受和传送参数</code></p></li><li><p>触发器通常基于一个表创建 ， 当 表中数据发生<code>UPDATE 、INSERT 、DELETE </code>变化时， ，SQLServer 就会自动执行触发器所定义的SQL语 语句 ， 从而保证数据的<code> 完整性</code>和<code>正确性</code></p></li></ul><div class="tabs" id="cfq"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#cfq-1">触发器的主要作用</button></li><li class="tab"><button type="button" data-href="#cfq-2">触发器分类</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="cfq-1"><ul><li>用于保证数据的 <code>完整性 </code>和 <code>正确性</code></li><li>可以完成用<code> 普通约束</code>( 主键 、 外键 、 检查CHECK 、 默认值 、 空值 、 唯一性 、 标识列等 )难以实现的复杂功能</li></ul><button type="button" class="tab-to-top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="cfq-2"><ul><li>据 <code>触发动作</code> 分为：<br>  INSERT 触发器、UPDATE 触发器和DELETE 触发器</li><li>据<code> 触发时刻</code> 分为：<br>  AFTER( 之后) 触发器和INSTEAD( 替代) 触发器</li><li>据 <code>作用对象</code> 分为：<br>  DML 触发器( 作用对象：表/ 视图)和 和DDL  触发器( 作用对象：数据库/ 服务器)</li></ul><button type="button" class="tab-to-top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="创建DML触发器"><a href="#创建DML触发器" class="headerlink" title="创建DML触发器"></a>创建DML触发器</h1><div class="note success flat"><p>DML 触发器  —– 作用对象：表/ 视图</p></div><ul><li>在数据库中发生 DML( 数据操作语言) 事件 时将自动执行。</li><li>DML  事件：DML  事件是指对表 表/ 视图 进行数据的 修改的 INSERT 语句、UPDATE 语句或DELETE 语句。</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TRIGGER</span> &lt; 触发器名&gt;</span><br><span class="line"><span class="keyword">ON</span> &lt; 表名 |  视图名&gt; <span class="comment">/* 指定作用对象*/</span></span><br><span class="line"><span class="keyword">FOR</span> | <span class="keyword">AFTER</span> | INSTEAD <span class="keyword">OF</span> <span class="comment">/* 指定触发时刻*/</span></span><br><span class="line">[ <span class="keyword">INSERT</span> ] [ , ] [ <span class="keyword">UPDATE</span> ] [ , ] [ <span class="keyword">DELETE</span> ]</span><br><span class="line"><span class="comment">/* 指定激活触发器的动作*/</span></span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">SQL</span>语句</span><br></pre></td></tr></table></figure><ul><li>NSERT | UPDATE |DELETE ：用来指明哪种数据操作将激活触发器 。</li><li>AFTER ：表示只有在执行了指定的操作(INSERT,DELETE, UPDATE) 之后触发器才被激活执行 。</li><li>INSTEAD OF：表示用 触发器的程序代替 原来要的 进行的INSERT 、UPDATE 或 或 DELETE 等语句的操作 。 在数据更改之前激活</li></ul><h2 id="UPDATE触发器"><a href="#UPDATE触发器" class="headerlink" title="UPDATE触发器"></a>UPDATE触发器</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*为学生表Student 创建一个UPDATE 触发器，该触发器防止用户修改表Student。*/</span></span><br><span class="line"><span class="keyword">USE</span> EDUC</span><br><span class="line"><span class="keyword">GO</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TRIGGER</span> Student_update</span><br><span class="line"><span class="keyword">ON</span> Student</span><br><span class="line"><span class="keyword">AFTER</span> <span class="keyword">UPDATE</span></span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">PRINT <span class="string">&#x27;------ 未经许可，不能修改哦！！！------&#x27;</span></span><br><span class="line"><span class="keyword">ROLLBACK</span>  <span class="comment">/* 回滚，撤销所作的修改*/</span></span><br><span class="line"><span class="keyword">END</span></span><br><span class="line"><span class="keyword">GO</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*为学生表Student 创建一个UPDATE 触发器，该触发器防止用户修改表Student 的学号SID。*/</span></span><br><span class="line"><span class="keyword">USE</span> EDUC</span><br><span class="line"><span class="keyword">GO</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TRIGGER</span> Student_update_SID</span><br><span class="line"><span class="keyword">ON</span> Student</span><br><span class="line"><span class="keyword">FOR</span> <span class="keyword">UPDATE</span></span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">IF</span> <span class="keyword">UPDATE</span> (<span class="keyword">SID</span>)</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">PRINT <span class="string">&#x27;未经许可，不能修改学号！ &#x27;</span></span><br><span class="line"><span class="keyword">ROLLBACK</span></span><br><span class="line"><span class="keyword">END</span></span><br><span class="line"><span class="keyword">GO</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*为学生表Student 创建一个UPDATE 触发器，该触发器防止用户修改或删除表Student*/</span></span><br><span class="line"><span class="keyword">USE</span> EDUC</span><br><span class="line"><span class="keyword">GO</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TRIGGER</span> Student_update_1</span><br><span class="line"><span class="keyword">ON</span> Student</span><br><span class="line"><span class="keyword">FOR</span> <span class="keyword">UPDATE</span>, <span class="keyword">DELETE</span></span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">PRINT <span class="string">&#x27; 未经许可，不能修改或删除！&#x27;</span></span><br><span class="line"><span class="keyword">ROLLBACK</span></span><br><span class="line"><span class="keyword">END</span></span><br><span class="line"><span class="keyword">GO</span></span><br></pre></td></tr></table></figure><h2 id="DELETE触发器"><a href="#DELETE触发器" class="headerlink" title="DELETE触发器"></a>DELETE触发器</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*为课程表“Course ”创建DELETE 触发器Course_delete,当执行删除时激活,判断删除的课程号是否在选课表SC 中已被人选，已被选的课程不能删除。*/</span></span><br><span class="line"><span class="comment">---替代外键功能</span></span><br><span class="line"><span class="keyword">USE</span> EDUC</span><br><span class="line"><span class="keyword">GO</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TRIGGER</span> Course_delete</span><br><span class="line"><span class="keyword">ON</span> Course</span><br><span class="line"><span class="keyword">FOR</span> <span class="keyword">DELETE</span></span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">IF</span> <span class="keyword">EXISTS</span></span><br><span class="line">(</span><br><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">FROM</span> deleted <span class="keyword">JOIN</span> SC <span class="keyword">ON</span> deleted.CID = SC.CID</span><br><span class="line">)</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">        PRINT <span class="string">&#x27;--- 在选课表SC 中有该门课程，不能删除!---&#x27;</span></span><br><span class="line"><span class="keyword">ROLLBACK</span>  <span class="comment">/* 回滚，撤销所删除的数据行* */</span> /</span><br><span class="line"><span class="keyword">END</span></span><br></pre></td></tr></table></figure><h2 id="INSERT触发器"><a href="#INSERT触发器" class="headerlink" title="INSERT触发器"></a>INSERT触发器</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*为选课表SC 创建一个INSERT 触发器，当插入一条新记录时，如果输入的成绩 &gt; 100或  &lt; 0 ，则撤消该插入操作，并给出“成绩错误！”的提示信息。*/</span></span><br><span class="line"><span class="comment">-- 替代了check 约束：[Grade] &gt;=0 AND [Grade] &lt;=100</span></span><br><span class="line"><span class="keyword">USE</span> EDUC</span><br><span class="line"><span class="keyword">GO</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TRIGGER</span> SC_insert</span><br><span class="line"><span class="keyword">ON</span> SC</span><br><span class="line"><span class="keyword">FOR</span> <span class="keyword">INSERT</span></span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line"><span class="keyword">DECLARE</span> @g <span class="built_in">numeric</span>(<span class="number">5</span>,<span class="number">1</span>)</span><br><span class="line"><span class="keyword">SELECT</span> @g = inserted.Grade</span><br><span class="line"><span class="keyword">FROM</span> inserted</span><br><span class="line"><span class="keyword">IF</span> @g &gt; <span class="number">100</span> <span class="keyword">OR</span> @g &lt; <span class="number">0</span></span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">PRINT <span class="string">&#x27; ---- 成绩错误！----- &#x27;</span></span><br><span class="line"><span class="keyword">ROLLBACK</span></span><br><span class="line"><span class="keyword">END</span></span><br><span class="line"><span class="keyword">ELSE</span></span><br><span class="line">PRINT <span class="string">&#x27;该记录已被接受！&#x27;</span></span><br><span class="line"><span class="keyword">END</span></span><br><span class="line"><span class="keyword">GO</span></span><br></pre></td></tr></table></figure><h2 id="INSTEAD-OF触发器"><a href="#INSTEAD-OF触发器" class="headerlink" title="INSTEAD OF触发器"></a>INSTEAD OF触发器</h2><ul><li>AFTER 触发器是在触发语句执行后触发的，与AFTER触发器不同的是，INSTEAD OF 触发器触发时<code> 只执行触发器内部的SQL 语句</code> ，而 <code>不执行引起该触发器执行的SQL 语句</code> 。即，用“ “<code>Instead of  触发器</code>” 的执行来 替代 “<code>触发语句</code>” 的操作</li><li>一个表或视图中只能有一个INSTEAD OF 触发器。</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*创建表table1 ，值包含一列a ，在表中创建INSTEAD OF INSERT 触发器，当向表中插入记录时显示相应消息。*/</span></span><br><span class="line"><span class="keyword">USE</span> EDUC</span><br><span class="line"><span class="keyword">GO</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> table1 ( a <span class="built_in">int</span> )</span><br><span class="line"><span class="keyword">GO</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TRIGGER</span> table1_insert</span><br><span class="line"><span class="keyword">ON</span> table1</span><br><span class="line">INSTEAD <span class="keyword">OF</span> <span class="keyword">INSERT</span></span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line">PRINT <span class="string">&#x27;---Instead of trigger is working !---&#x27;</span></span><br></pre></td></tr></table></figure><h1 id="创建DDL触发器"><a href="#创建DDL触发器" class="headerlink" title="创建DDL触发器"></a>创建DDL触发器</h1><div class="note success flat"><p>DDL  触发器  —– 作用对象：数据库/ 服务器</p></div><ul><li>当 服务器或数据库生 中发生DDL（ 数据定义语言 ） 事件 时将自动执行这些触发器 。</li><li>DDL  事 件 主 要 是 以 CREATE 、ALTER 和 和DROP 开头的语句</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TRIGGER</span> &lt; 触发器名&gt;</span><br><span class="line"><span class="keyword">ON</span> <span class="keyword">ALL</span> <span class="keyword">SERVER</span> | <span class="keyword">DATABASE</span></span><br><span class="line"><span class="keyword">FOR</span>|<span class="keyword">AFTER</span> &lt; 事件类型或事件组&gt;[,…,n]</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line">&lt;T-<span class="keyword">SQL</span>语句或语句块&gt;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*设计DDL 触发器来防止数据库中的任一表被修改或删除。*/</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TRIGGER</span> safe_database</span><br><span class="line"><span class="keyword">ON</span> <span class="keyword">DATABASE</span></span><br><span class="line"><span class="keyword">FOR</span> ALTER_TABLE, DROP_TABLE</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">PRINT <span class="string">&#x27;------ 不能修改或删除表！如果必须要完成此</span></span><br><span class="line"><span class="string">操作，请先禁用触发器safe_database ！------&#x27;</span></span><br><span class="line"><span class="keyword">ROLLBACK</span></span><br><span class="line"><span class="keyword">END</span></span><br><span class="line"><span class="keyword">GO</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">若执行SQL 语句修改表：</span></span><br><span class="line"><span class="comment">ALTER TABLE Student</span></span><br><span class="line"><span class="comment">ADD Address varchar(50) NULL</span></span><br><span class="line"><span class="comment">或，执行SQL 语句删除表：</span></span><br><span class="line"><span class="comment">DROP TABLE SC</span></span><br><span class="line"><span class="comment">都会触发警告</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*创建服务器作用域的DDL 触发器，当删除一个数据库时，提示禁止该操作并回滚删除数据库的操作。*/</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TRIGGER</span> safety_server</span><br><span class="line"><span class="keyword">ON</span> <span class="keyword">ALL</span> <span class="keyword">SERVER</span></span><br><span class="line"><span class="keyword">AFTER</span> DROP_DATABASE</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line">PRINT <span class="string">&#x27;--- 不能删除该数据库！---&#x27;</span></span><br><span class="line"><span class="keyword">ROLLBACK</span></span><br></pre></td></tr></table></figure><h1 id="管理触发器"><a href="#管理触发器" class="headerlink" title="管理触发器"></a>管理触发器</h1><h2 id="查看触发器"><a href="#查看触发器" class="headerlink" title="查看触发器"></a>查看触发器</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sp_helptext &#x27;触发器名称&#x27; <span class="comment">-- 显示触发器的源代码</span></span><br><span class="line">sp_help &#x27;触发器名称&#x27;  <span class="comment">--显示触发器的一般信息( 名称、所有者、类型和创建时间)</span></span><br><span class="line">sp_depends &#x27;触发器名称&#x27; <span class="comment">--显示该触发器所引用的表</span></span><br><span class="line">sp_depends &#x27;表名&#x27;    <span class="comment">--显示指定的表所涉及到的所有触发器</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*查询数据库EDUC 的触发器“Course_delete ”的一般信息 （名称、所有者、类型和创建时间） */</span></span><br><span class="line">sp_help Course_delete</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*查询数据库EDUC 的触发器“Course_delete ”的依赖关系 （显示该触发器所引用的表） 。*/</span></span><br><span class="line">sp_depends Course_delete</span><br></pre></td></tr></table></figure><h2 id="修改触发器"><a href="#修改触发器" class="headerlink" title="修改触发器"></a>修改触发器</h2><ul><li><p>修改DML 触发器的语法格式</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TRIGGER</span> &lt; 触发器名&gt;</span><br><span class="line"><span class="keyword">ON</span> &lt; 表名| 视图名&gt;</span><br><span class="line"><span class="keyword">FOR</span> [<span class="keyword">AFTER</span> | INSTEAD <span class="keyword">OF</span> ]</span><br><span class="line">&#123; [ <span class="keyword">DELETE</span> ] [ , ] [ <span class="keyword">INSERT</span> ] [ , ] [ <span class="keyword">UPDATE</span> ] &#125;</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line">&lt;T-<span class="keyword">SQL</span>语句或语句块&gt;</span><br></pre></td></tr></table></figure></li><li><p>修改DDL触发器的语法格式 触发器的语法格式</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TRIGGER</span> &lt; 触发器名&gt;</span><br><span class="line"><span class="keyword">ON</span> <span class="keyword">ALL</span> <span class="keyword">SERVER</span> | <span class="keyword">DATABASE</span></span><br><span class="line"><span class="keyword">FOR</span>|<span class="keyword">AFTER</span> &lt; 事件类型或事件组&gt;[,…,n]</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line">&lt;T-<span class="keyword">SQL</span>语句或语句块&gt;</span><br></pre></td></tr></table></figure><h2 id="删除触发器"><a href="#删除触发器" class="headerlink" title="删除触发器"></a>删除触发器</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TRIGGER</span> 触发器</span><br></pre></td></tr></table></figure><h2 id="禁用与启用触发器"><a href="#禁用与启用触发器" class="headerlink" title="禁用与启用触发器"></a>禁用与启用触发器</h2></li><li><p>当暂时不需要某个触发器时，可将其禁用。禁用触发器的语法格式如下：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">DISABLE TRIGGER &lt; 触发器名&gt;</span><br><span class="line">ON 对象名|DATABASE|ALL SERVER</span><br><span class="line"><span class="comment">-- 例如</span></span><br><span class="line">DISABLE TRIGGER Course_delete</span><br><span class="line">ON Course</span><br></pre></td></tr></table></figure></li><li><p>已禁用的触发器可以被重新启用。启用触发器 的语法格式如下：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ENABLE TRIGGER &lt; 触发器名&gt;</span><br><span class="line">ON 对象名|DATABASE|ALL SERVER</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Java后端 </category>
          
          <category> SQLServer </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQLServer </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQLServer📦存储过程</title>
      <link href="2021/01/18/%E5%90%8E%E7%AB%AF/MySQL/SQLServer_%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B/"/>
      <url>2021/01/18/%E5%90%8E%E7%AB%AF/MySQL/SQLServer_%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="存储过程"><a href="#存储过程" class="headerlink" title="存储过程"></a>存储过程</h1><ul><li><p>一组<code>编译好的 、 存储在服务器上的</code>和 <code>完成特定功能的T-SQL语句集合</code>，是某数据库的对象</p></li><li><p>客户端应用程序可以通过指定存储过程的名字、并给出参数来<code> 调用</code>存储过程</p></li></ul><div class="tabs" id="ccgc"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#ccgc-1">存储过程优点</button></li><li class="tab"><button type="button" data-href="#ccgc-2">存储过程分类</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="ccgc-1"><ul><li>存储过程属于模块化编程（标准组件式编程）</li><li>可 重复使用编程代码，减少编程开发时间</li><li>可以在单个存储过程中执行一系列  SQL 语句 </li><li>存储过程在创建时即在服务器上进行预编译，所以执行速度较快。 如果某一操作包含大量的T-SQL代码，那么使用存储过程要比使用T-SQL批处理的执行速度快很多</li></ul><button type="button" class="tab-to-top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="ccgc-2"><ul><li>系统提供的存储过程<br>  例如sp_rename( 表的重命名)、 sp_renamedb( 库的重命名)、 sp_help 、sp_changedbowner等</li><li>用户定义的存储过程</li><li>扩展存储过程<br>扩展存储过程是以在SQL Server环境之外执行的动态链接库（DLL ，Dynamic-Link Libraries）来现的，通常以前缀xp_开头。扩展存储过程用与存储过程相似的方式来执行。</li></ul><button type="button" class="tab-to-top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="使用T-SQL创建存储过程"><a href="#使用T-SQL创建存储过程" class="headerlink" title="使用T-SQL创建存储过程"></a>使用T-SQL创建存储过程</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> PROC[EDURE] &lt; 过程名&gt;</span><br><span class="line">[@名 形参名  数据类型,…][,]</span><br><span class="line">[@名 变参名  数据类型 <span class="keyword">OUTPUT</span>,…]</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line">[<span class="keyword">BEGIN</span>]</span><br><span class="line">T-<span class="keyword">SQL</span> 语句</span><br><span class="line">[<span class="keyword">END</span>]</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*(不带参数)为数据库“Library”创建一个多表查询的存储过程，查询出读者为“程鹏”的借阅信息。*/</span></span><br><span class="line"><span class="keyword">USE</span> <span class="keyword">Library</span></span><br><span class="line"><span class="keyword">GO</span></span><br><span class="line"><span class="keyword">CREATE</span> PROC borrowed_book1</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line"><span class="keyword">SELECT</span> r.RID, r.Rname, k.BID, k.Bname, b.LendDate</span><br><span class="line"><span class="keyword">FROM</span> Reader r <span class="keyword">JOIN</span> Borrow b <span class="keyword">ON</span> r.RID=b.RID</span><br><span class="line"><span class="keyword">JOIN</span> Book k <span class="keyword">ON</span> b.BID=k.BID</span><br><span class="line"><span class="keyword">WHERE</span> Rname = <span class="string">&#x27; 程鹏&#x27;</span></span><br><span class="line"><span class="keyword">END</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 调用</span></span><br><span class="line">EXEC borrowed_book1</span><br><span class="line"><span class="comment">-- 或</span></span><br><span class="line">borrowed_book1</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*(带输入参数)为数据库“Library”创建一个查询某读者（姓名在执行存储过程时给出）借阅情况的存储过程。*/</span></span><br><span class="line"><span class="keyword">USE</span> <span class="keyword">Library</span></span><br><span class="line"><span class="keyword">GO</span></span><br><span class="line"><span class="keyword">CREATE</span> PROC borrowed_book2</span><br><span class="line">@<span class="keyword">name</span> <span class="built_in">varchar</span>(<span class="number">10</span>)  <span class="comment">-- 输入形参</span></span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line"><span class="keyword">SELECT</span> r.RID, r.Rname, b.BID, k.Bname, b.LendDate</span><br><span class="line"><span class="keyword">FROM</span> Reader r <span class="keyword">JOIN</span> Borrow b <span class="keyword">ON</span> r.RID=b.RID</span><br><span class="line"><span class="keyword">JOIN</span> Book k <span class="keyword">ON</span> b.BID=k. BID</span><br><span class="line"><span class="keyword">WHERE</span> Rname = @<span class="keyword">name</span></span><br><span class="line"><span class="keyword">END</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 调用</span></span><br><span class="line">EXEC borrowed_book2 <span class="string">&#x27;程鹏&#x27;</span> <span class="comment">-- 实参 ( 常量)</span></span><br><span class="line"><span class="comment">--或</span></span><br><span class="line">borrowed_book2 <span class="string">&#x27;程鹏&#x27;</span> <span class="comment">-- 实参 ( 常量)</span></span><br><span class="line"><span class="comment">--或</span></span><br><span class="line"><span class="keyword">DECLARE</span> @temp1 <span class="built_in">char</span>(<span class="number">20</span>)</span><br><span class="line"><span class="keyword">SET</span> @temp1 = <span class="string">&#x27;程鹏&#x27;</span></span><br><span class="line">EXEC borrowed_book2 @temp1 <span class="comment">-- 实参 (变量)</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*(带输出参数)为数据库“Library”创建一个查询某出版社图书总价值和平均价值的存储过程*/</span></span><br><span class="line"><span class="keyword">CREATE</span> PROC book_price <span class="comment">-- 创建存储过程</span></span><br><span class="line">@Publisher <span class="keyword">nvarchar</span>(<span class="number">28</span>), <span class="comment">-- 输入参数</span></span><br><span class="line">@SUMPrice <span class="built_in">decimal</span>(<span class="number">9</span>,<span class="number">2</span>) <span class="keyword">OUTPUT</span>, <span class="comment">-- 输出参数1</span></span><br><span class="line">@AVGPrice <span class="built_in">decimal</span>(<span class="number">9</span>,<span class="number">2</span>) <span class="keyword">OUTPUT</span> <span class="comment">-- 输出参数2</span></span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line"><span class="keyword">SELECT</span> @SUMPrice = <span class="keyword">SUM</span>(price)</span><br><span class="line"><span class="keyword">FROM</span> Book</span><br><span class="line"><span class="keyword">WHERE</span> Publisher = @Publisher <span class="comment">-- 输出参数1 存储图书总价值</span></span><br><span class="line"><span class="keyword">SELECT</span> @AVGPrice = <span class="keyword">AVG</span>(price)</span><br><span class="line"><span class="keyword">FROM</span> Book</span><br><span class="line"><span class="keyword">WHERE</span> Publisher = @Publisher <span class="comment">-- 输出参数2存 储图书平均价值</span></span><br><span class="line"><span class="keyword">END</span></span><br></pre></td></tr></table></figure><h1 id="T-SQL修改存储器"><a href="#T-SQL修改存储器" class="headerlink" title="T-SQL修改存储器"></a>T-SQL修改存储器</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> PROC[EDURE] &lt; 过程名&gt;</span><br><span class="line">[@形参名 数据类型,…][,]</span><br><span class="line">[@变参名  数据类型 <span class="keyword">OUTPUT</span>,…]</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line">[<span class="keyword">BEGIN</span>]</span><br><span class="line">T-<span class="keyword">SQL</span>语句 </span><br><span class="line">[<span class="keyword">END</span>]</span><br></pre></td></tr></table></figure><h1 id="T-SQL删除存储器"><a href="#T-SQL删除存储器" class="headerlink" title="T-SQL删除存储器"></a>T-SQL删除存储器</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> PROC[EDURE] 存储过程名[,...,n]</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java后端 </category>
          
          <category> SQLServer </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQLServer </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQLServer📦索引</title>
      <link href="2021/01/18/%E5%90%8E%E7%AB%AF/MySQL/SQLServer_%E7%B4%A2%E5%BC%95/"/>
      <url>2021/01/18/%E5%90%8E%E7%AB%AF/MySQL/SQLServer_%E7%B4%A2%E5%BC%95/</url>
      
        <content type="html"><![CDATA[<h1 id="索引"><a href="#索引" class="headerlink" title="索引"></a>索引</h1><p>索引是以表列为基础的数据库对象，它保存着表中排序的索引列，并且记录了索引列在数据表中的物理存储位置，实现了表中数据的逻辑排序，其主要目的是提高SQL Server系统的性能，加快数据的查询速度和减少系统的响应时间</p><div class="tabs" id="juzhisuoy"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#juzhisuoy-1">聚集索引(Clustered)</button></li><li class="tab"><button type="button" data-href="#juzhisuoy-2">非聚集索引(Noncludstered)</button></li><li class="tab"><button type="button" data-href="#juzhisuoy-3">区别</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="juzhisuoy-1"><p>根据键值的大小对数据行进行了 <code>物理排序 </code>，使得具有相同键值的记录在物理上聚集在了一起。每个表只能有一个聚集索引。</p><button type="button" class="tab-to-top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="juzhisuoy-2"><p>数据行并没有按物理顺序进行排序。每个表可以有多个非聚集索引。</p><button type="button" class="tab-to-top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="juzhisuoy-3"><ul><li>通常情况，聚集索引的查找速度略高于非聚集索引；但在处理区间查询、排序时，聚集索引的查找速度有明显优势。</li><li>聚集索引维护代价更大，当表数据增删改时，需要重新对数据行进行物理排序。</li></ul><button type="button" class="tab-to-top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="T-SQL创建索引"><a href="#T-SQL创建索引" class="headerlink" title="T-SQL创建索引"></a>T-SQL创建索引</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> [<span class="keyword">UNIQUE</span>][CLUSTERED|NONCLUSTERED] <span class="keyword">INDEX</span></span><br><span class="line">索引名</span><br><span class="line"><span class="keyword">ON</span> &lt; 表名或视图名&gt; （列名[<span class="keyword">ASC</span>|<span class="keyword">DESC</span>][,…,n]） ）</span><br><span class="line">[ <span class="keyword">WITH</span> &lt; 索引项&gt;</span><br><span class="line">| [,] [FILLFACTOR= 填充因子]</span><br><span class="line">| [[,] DROP_EXISTING=&#123;<span class="keyword">ON</span>|<span class="keyword">OFF</span>&#125;]</span><br><span class="line">… ]</span><br></pre></td></tr></table></figure><p>为指定的表或视图按照指定的列（ 索引键 ）、升序（ASC） 、降序（DESC） 创建唯一 、 聚集或非聚集的索引</p><ul><li>UNIQUE：指定创建的索引为唯一索引。</li><li>CLUSTERED|NONCLUSTERED：指定创建的是聚集索引还 是非聚集索引 。</li><li>ASC|DESC：确定某个具体的索引列是升序还是降序 ,默认为升序（ASC） 。</li><li>&lt; 索引项&gt;：可以指定填充索引的内部节点行数  、 填充因子等 。</li><li>DROP_EXISTING：指定是否删除先前存在的并且与创建索引同名的索引 </li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*为了提高依据图书名查找图书的速度,在数据库“Library”中为图书表“Book”创建一个不唯一 、非聚集索引“Bookindex”,索引键为“Bname”,升序排列*/</span></span><br><span class="line"><span class="keyword">USE</span> <span class="keyword">Library</span></span><br><span class="line"><span class="keyword">GO</span></span><br><span class="line"><span class="keyword">CREATE</span> NONCLUSTERED <span class="keyword">INDEX</span> Bookindex</span><br><span class="line"><span class="keyword">ON</span> Book(Bname <span class="keyword">ASC</span>)</span><br></pre></td></tr></table></figure><h1 id="T-SQL删除索引"><a href="#T-SQL删除索引" class="headerlink" title="T-SQL删除索引"></a>T-SQL删除索引</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">INDEX</span> 表名.索引名</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*删除表“Book ”的索引“Bookindex”*/</span></span><br><span class="line"><span class="keyword">USE</span> <span class="keyword">Library</span></span><br><span class="line"><span class="keyword">GO</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">INDEX</span> Book.Bookindex</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java后端 </category>
          
          <category> SQLServer </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQLServer </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQLServer📦T-SQL编程基础</title>
      <link href="2021/01/18/%E5%90%8E%E7%AB%AF/MySQL/SQLServer_T-SQL%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/"/>
      <url>2021/01/18/%E5%90%8E%E7%AB%AF/MySQL/SQLServer_T-SQL%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h1 id="T-SQL编程基础"><a href="#T-SQL编程基础" class="headerlink" title="T-SQL编程基础"></a>T-SQL编程基础</h1><h2 id="标识符"><a href="#标识符" class="headerlink" title="标识符"></a>标识符</h2><ul><li>“＠”开头：局部变量、函数的参数</li><li>“＠＠”开头：全局变量</li><li>“#”开头：临时表、一个存储过程 ”</li><li>“##”开头：全局的临时数据库对象 ”</li></ul><h2 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*多行注释*/</span></span><br><span class="line"><span class="comment">-- 单行注释</span></span><br></pre></td></tr></table></figure><h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@e06f98f89495c00339f0855282227e96e438baee/2021/01/18/d9c4b2d687347bddae5f341cbacd2ca3.png"></p><h1 id="表达式"><a href="#表达式" class="headerlink" title="表达式"></a>表达式</h1><h2 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h2><p>常量也称为 文字值或标量值，是表示一个特定数据值的符号<br>常量的格式取决于它所表示值的数据类型<br><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@0a3f049aa62ff0aea29532dbb013aee9a6862065/2021/01/18/c1303975fba1a33b487627ef203a129e.png"></p><h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><p>变量是指在程序运行过程中其值可以改变的量<br>T-SQL的变量分为：<code>  局部变量</code> 、<code>全局变量</code></p><h3 id="局部变量"><a href="#局部变量" class="headerlink" title="局部变量"></a>局部变量</h3><ul><li><p>局部变量是<code> 用户定义的变量</code> ，其<code> 作用范围仅在程序内部</code></p></li><li><p>在程序中通常用来存储 <code>从表中查询到的数据</code> 或暂存 <code>程序执行过程中的数据 </code></p></li><li><p><strong>declare声明</strong></p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DECLARE</span> @ 变量名<span class="number">1</span> 数据类型, @ 变量名<span class="number">2</span> 数据类型, … , @ 变量名n </span><br></pre></td></tr></table></figure><ul><li><strong>select赋值</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> @ 变量名<span class="number">1</span>= 表达式<span class="number">1</span>, @ 变量名<span class="number">2</span>= 表达式<span class="number">2</span>, … , @ 变量名n=表达式n</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*声明一个变长字符型变量@var1,用SELECT赋值语句为它赋值从表“Reader”中查询出编号为‘2003216008’的读者姓名,再用SELECT输出语句输出变量@var1的值*/</span></span><br><span class="line"><span class="keyword">USE</span> <span class="keyword">Library</span></span><br><span class="line"><span class="keyword">DECLARE</span> @var1 <span class="built_in">varchar</span>(<span class="number">8</span>) <span class="comment">-- 声明局部变量</span></span><br><span class="line"><span class="keyword">SELECT</span> @var1 = Rname <span class="comment">-- 将查询的结果赋值给局部变量</span></span><br><span class="line"><span class="keyword">FROM</span> Reader</span><br><span class="line"><span class="keyword">WHERE</span> RID=<span class="string">&#x27;2003216008&#x27;</span></span><br><span class="line"><span class="keyword">SELECT</span> @var1 <span class="keyword">AS</span> <span class="string">&#x27; 读者姓名&#x27;</span> <span class="comment">-- 显示局部变量结果</span></span><br></pre></td></tr></table></figure><ul><li><strong>Set赋值</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SET</span> @ 变量名 = 表达式 </span><br><span class="line"><span class="comment">-- SET 赋值语句只能给一个变量赋值！</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 用SET赋值语句为局部变量@no赋值，再用SELECT查询语句查询出读者表中读者号为@no的读者信息*/</span></span><br><span class="line"><span class="keyword">USE</span> <span class="keyword">Library</span></span><br><span class="line"><span class="keyword">DECLARE</span> @<span class="keyword">no</span> <span class="built_in">varchar</span>(<span class="number">10</span>) <span class="comment">-- 局部变量声明</span></span><br><span class="line"><span class="keyword">SET</span> @<span class="keyword">no</span>=<span class="string">&#x27;2004060003&#x27;</span> <span class="comment">-- 局部变量赋值</span></span><br><span class="line"><span class="keyword">SELECT</span> RID, Rname <span class="comment">-- 查询语句</span></span><br><span class="line"><span class="keyword">FROM</span> Reader</span><br><span class="line"><span class="keyword">WHERE</span> RID= @<span class="keyword">no</span> <span class="comment">--查询中引用局部变量</span></span><br></pre></td></tr></table></figure><h3 id="全局变量"><a href="#全局变量" class="headerlink" title="全局变量"></a>全局变量</h3><ul><li>全局变量是<code>SQL Server系统提供并赋值 </code>的变量</li><li>用户不能建立全局变量 ，也不能用SET 赋值语句和SELECT赋值语句修改全局变量的值 。</li><li>通常可以将全局变量的值赋给局部变量 ， 以便保存和处理 </li><li>全局变量以<code>@@</code>开头 ， 例如 ， 全局变量<code>@@servername</code>提供 服务器名 ， 全局变量<code>@@version</code> 提供SQL Server的版本信息，<code>@@language</code>提供SQL Server的语言信息</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*显示SQL Server的版本*/</span></span><br><span class="line"><span class="keyword">SELECT</span> @@<span class="keyword">version</span></span><br></pre></td></tr></table></figure><h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><h3 id="聚合函数"><a href="#聚合函数" class="headerlink" title="聚合函数"></a>聚合函数</h3><p>常用聚合函数：<br>COUNT 、SUM 、AVG 、MAX 、标准偏差（ 计算标准偏差（STDEV ）、方差（VAR）等</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">USE</span> EDUC</span><br><span class="line"><span class="keyword">GO</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">AVG</span>(AScores) <span class="keyword">AS</span> 平均分,</span><br><span class="line"><span class="keyword">STDEV</span>(AScores) <span class="keyword">AS</span> 标准偏差 </span><br><span class="line"><span class="keyword">FROM</span> Student</span><br></pre></td></tr></table></figure><h3 id="日期函数"><a href="#日期函数" class="headerlink" title="日期函数"></a>日期函数</h3><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@b1fa8cdf1ddf695a8e552c9cbaa534cfcee0310a/2021/01/18/5db23444d9931e775643283c68d27877.png"></p><ul><li><strong>datename()</strong><br>DATENAME( 日期元素, 日期)函数以<code>字符串</code>的形式 返回指定时间的“日期元素”方面的信息</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SET</span> <span class="keyword">LANGUAGE</span> us_english</span><br><span class="line"><span class="keyword">DECLARE</span> @StatementDate <span class="built_in">date</span></span><br><span class="line"><span class="keyword">SET</span> @StatementDate = <span class="string">&#x27;2012-7-27&#x27;</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DATENAME</span>(DW,@StatementDate) <span class="keyword">AS</span> <span class="string">&#x27;WEEKDAY&#x27;</span></span><br></pre></td></tr></table></figure><ul><li><strong>datepart()</strong><br>DATEPART( 日期元素, 日期) 函数返回“日期元素”指定的日期部分的<code>整数</code></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DECLARE</span> @WhatsTheDay <span class="built_in">date</span></span><br><span class="line"><span class="keyword">SET</span> @WhatsTheDay = <span class="string">&#x27;2012/7/27&#x27;</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line"><span class="keyword">CAST</span>( <span class="keyword">DATEPART</span>(yyyy,@WhatsTheDay) <span class="keyword">AS</span> <span class="built_in">char</span>(<span class="number">4</span>) )+<span class="string">&#x27; 年&#x27;</span>+</span><br><span class="line"><span class="keyword">CAST</span>( <span class="keyword">DATEPART</span>(mm,@WhatsTheDay) <span class="keyword">AS</span> <span class="built_in">char</span>(<span class="number">2</span>) )+<span class="string">&#x27; 月&#x27;</span>+</span><br><span class="line"><span class="keyword">CAST</span>( <span class="keyword">DATEPART</span>(dd,@WhatsTheDay) <span class="keyword">AS</span> <span class="built_in">varchar</span>(<span class="number">2</span>) )+<span class="string">&#x27; 日&#x27;</span></span><br><span class="line"><span class="keyword">AS</span> <span class="string">&#x27; 伦敦奥运会&#x27;</span></span><br></pre></td></tr></table></figure><ul><li><strong>getdate()</strong><br>GETDATE() 函数返回当前日期。<br>YEAR( 日期）、MONTH( 日期）和DAY (日期)函数返回日期的年、月及天数</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line"><span class="keyword">GETDATE</span>() <span class="keyword">AS</span>  当前日期, <span class="comment">-- 返回当前日期</span></span><br><span class="line"><span class="keyword">YEAR</span>(<span class="keyword">GETDATE</span>()) <span class="keyword">AS</span>  年, <span class="comment">-- 取当前日期的年</span></span><br><span class="line"><span class="keyword">MONTH</span>(<span class="keyword">GETDATE</span>()) <span class="keyword">AS</span>  月, <span class="comment">-- 取当前日期的月</span></span><br><span class="line"><span class="keyword">DAY</span>(<span class="keyword">GETDATE</span>()) <span class="keyword">AS</span> 日 日 <span class="comment">-- 取当前日期的天数</span></span><br></pre></td></tr></table></figure><h3 id="字符串函数"><a href="#字符串函数" class="headerlink" title="字符串函数"></a>字符串函数</h3><ul><li><strong>left()</strong><br>LEFT(字符表达式,整型表达式)函数返回字符串中从左边开始的指定个数的字符</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*假设某图书的国际标准书号ISBN 为：978-7-115-19345-9，取前三位表示是图书。*/</span></span><br><span class="line"><span class="keyword">DECLARE</span> @StringTest <span class="built_in">char</span>(<span class="number">17</span>) <span class="comment">-- 声明定长字符型的变量</span></span><br><span class="line"><span class="keyword">SET</span> @StringTest=<span class="string">&#x27;978-7-115-19345-2&#x27;</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">LEFT</span>(@StringTest, <span class="number">3</span>) <span class="comment">--函数返回左边三位字符978</span></span><br></pre></td></tr></table></figure><ul><li><strong>right()</strong><br>RIGHT( 字符表达式, 整型表达式) 函数返回字符串从右边开始的指定个数的字符</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*假设某图书的国际标准书号ISBN为：978-7-115-19345-9，取最右一位校验码。*/</span></span><br><span class="line"><span class="keyword">DECLARE</span> @StringTest <span class="built_in">char</span>(<span class="number">17</span>) <span class="comment">-- 声明定长字符型的变量</span></span><br><span class="line"><span class="keyword">SET</span> @StringTest=<span class="string">&#x27;978-7-115-19345-9&#x27;</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">RIGHT</span>(@StringTest, <span class="number">1</span>) <span class="keyword">AS</span> ‘校验码’  <span class="comment">--函数返回右边一位字符9</span></span><br></pre></td></tr></table></figure><ul><li><strong>substring()</strong><br>SUBSTRING( 字符表达式, 起始点,n) 函数返回字符表达式中从“起始点”开始的n 个字符。</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*假设某图书的国际标准书号ISBN 为：978-7-115-19345-9，从第七位取三位字符表示出版社编号。*/</span></span><br><span class="line"><span class="keyword">DECLARE</span> @StringTest <span class="built_in">char</span>(<span class="number">17</span>) <span class="comment">-- 声明定长字符型的变量</span></span><br><span class="line"><span class="keyword">SET</span> @StringTest=<span class="string">&#x27;978-7-115-19345-9&#x27;</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">SUBSTRING</span>(@StringTest, <span class="number">7</span>, <span class="number">3</span>) <span class="keyword">AS</span> <span class="string">&#x27; 出版社编号&#x27;</span></span><br><span class="line"><span class="comment">-- 函数返回第七位开始的三个字符 115</span></span><br></pre></td></tr></table></figure><ul><li><strong>len()</strong><br>LEN( 字符表达式) 函数返回某个指定字符串的长度，<code>不计字符串后的空格</code></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DECLARE</span> @StringTest <span class="built_in">char</span>(<span class="number">20</span>)</span><br><span class="line"><span class="keyword">SET</span> @StringTest=<span class="string">&#x27;SQL Server &#x27;</span> <span class="comment">-- 注意不计后面的空格</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">LEN</span>(@StringTest) <span class="keyword">AS</span> 字符串长度 字符串长度</span><br><span class="line"><span class="comment">--函数返回字符串长度 10</span></span><br></pre></td></tr></table></figure><h3 id="数据类型转换函数"><a href="#数据类型转换函数" class="headerlink" title="数据类型转换函数"></a>数据类型转换函数</h3><ul><li><strong>cast()</strong><br>CAST( 表达式 AS  数据类型)函数将表达式的类型转换为指定的数据类型。</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DECLARE</span> @StringTest <span class="keyword">nchar</span>(<span class="number">6</span>), @IntTest <span class="built_in">int</span></span><br><span class="line"><span class="keyword">SET</span> @StringTest=<span class="string">&#x27; 数据库成绩：&#x27;</span></span><br><span class="line"><span class="keyword">SET</span> @IntTest=<span class="number">90</span></span><br><span class="line"><span class="keyword">SELECT</span> @StringTest + <span class="keyword">CAST</span>( @IntTest <span class="keyword">AS</span> <span class="built_in">char</span>(<span class="number">4</span>) ) <span class="keyword">AS</span> 考试成绩</span><br><span class="line"><span class="comment">-- 整型转换为字符型</span></span><br></pre></td></tr></table></figure><ul><li><strong>convert()</strong><br>CONVERT( 数据类型( 长度), 表达式)函数将表达式的类型转换为指定的数据类型</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DECLARE</span> @StringTest <span class="keyword">nchar</span>(<span class="number">6</span>), @IntTest <span class="built_in">int</span></span><br><span class="line"><span class="keyword">SET</span> @StringTest=<span class="string">&#x27; 数据库成绩：&#x27;</span></span><br><span class="line"><span class="keyword">SET</span> @IntTest=<span class="number">90</span></span><br><span class="line"><span class="keyword">SELECT</span> @StringTest + <span class="keyword">CONVERT</span>( <span class="built_in">char</span>(<span class="number">4</span>), @IntTest ) <span class="keyword">AS</span> 考试成绩 </span><br><span class="line"><span class="comment">-- 整型转换为字符型</span></span><br></pre></td></tr></table></figure><h2 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h2><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@c8a344bfe6f1c5194cefeeb8d8b8633345b0da6b/2021/01/18/8cd441d03e805214eff2f68e82484b7f.png"></p><h1 id="流程控制语句"><a href="#流程控制语句" class="headerlink" title="流程控制语句"></a>流程控制语句</h1><h2 id="顺序语句"><a href="#顺序语句" class="headerlink" title="顺序语句"></a>顺序语句</h2><ul><li><strong>set语句</strong><br>除了用于<code>给局部变量赋值</code>，还可以<code>设定用户执行 T-SQL命令时 SQL Server的处理选项 </code>,一般有以下几种设定方式：<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SET</span> 选项 <span class="keyword">ON</span> ：选项开关打开</span><br><span class="line"><span class="keyword">SET</span> 选项 <span class="keyword">OFF</span> ：选项开关关闭</span><br><span class="line"><span class="keyword">SET</span> 选项 值：设定选项的具体值</span><br></pre></td></tr></table></figure></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SET</span> NOCOUNT &#123;<span class="keyword">ON</span>|<span class="keyword">OFF</span>&#125;</span><br><span class="line"><span class="comment">-- 阻止显示 受 受T-SQL  语句影响的行数的  消息</span></span><br><span class="line"><span class="keyword">SET</span> DATEFORMAT ymd <span class="comment">--- 将日期格式设置为年月日格式</span></span><br><span class="line"><span class="keyword">SET</span> <span class="keyword">LANGUAGE</span> 简体中文 <span class="comment">-- 将语言设定变更为简体中文</span></span><br></pre></td></tr></table></figure><ul><li><p><strong>Select输出语句</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> 表达式<span class="number">1</span>, 表达式<span class="number">2</span>, … ,表达式n</span><br></pre></td></tr></table></figure></li><li><p><strong>print输出语句</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PRINT 表达式</span><br></pre></td></tr></table></figure><p>PRINT命令向客户端返回 一个字符类型表达式的值，最长为255个字符。 </p></li></ul><h2 id="IF-ELSE语句"><a href="#IF-ELSE语句" class="headerlink" title="IF-ELSE语句"></a>IF-ELSE语句</h2><ul><li><strong>IF-ELSE</strong></li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">IF &lt; 逻辑表达式&gt;</span><br><span class="line">&lt; 命令行或程序块&gt; /*逻辑表达式为真时执行 */</span><br><span class="line">[ELSE [ 逻辑表达式]</span><br><span class="line">&lt; 命令行或程序块&gt;] /* 逻辑表达式为假时执行 */</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*用IF…ELSE语句查询图书中有没有英语书，如果图书中有英语书，统计其数量，否则显示没有英语书*/</span></span><br><span class="line"><span class="keyword">USE</span> <span class="keyword">Library</span></span><br><span class="line"><span class="keyword">GO</span></span><br><span class="line"><span class="comment">/* 如果图书中有英语书，统计其数量，否则显示没有英语书*/</span></span><br><span class="line"><span class="keyword">IF</span> <span class="keyword">EXISTS</span>( <span class="keyword">SELECT</span> * <span class="keyword">FROM</span> Book <span class="keyword">WHERE</span> Bname <span class="keyword">LIKE</span> <span class="string">&#x27;%英语%&#x27;</span> )</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">COUNT</span>(*) <span class="keyword">AS</span> 英语图书数量</span><br><span class="line"><span class="keyword">FROM</span> Book</span><br><span class="line"><span class="keyword">WHERE</span> Bname <span class="keyword">LIKE</span> <span class="string">&#x27;%英语%&#x27;</span></span><br><span class="line"><span class="keyword">ELSE</span></span><br><span class="line">PRINT <span class="string">&#x27;数据库中没有英语书’</span></span><br></pre></td></tr></table></figure><ul><li><strong>BEGIN-END</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*BEGIN…END语句在图书查询中的应用。*/</span></span><br><span class="line"><span class="keyword">DECLARE</span> @ebook <span class="built_in">int</span>, @cbook <span class="built_in">int</span></span><br><span class="line"><span class="keyword">IF</span> <span class="keyword">EXISTS</span>( <span class="keyword">SELECT</span> * <span class="keyword">FROM</span> Book <span class="keyword">WHERE</span> Bname <span class="keyword">like</span> <span class="string">&#x27;%英语%&#x27;</span> )</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line"><span class="keyword">SELECT</span> @ebook=<span class="keyword">COUNT</span>(*) <span class="keyword">FROM</span> Book</span><br><span class="line"><span class="keyword">WHERE</span> Bname <span class="keyword">LIKE</span> <span class="string">&#x27;%英语%&#x27;</span></span><br><span class="line">PRINT <span class="string">&#x27;英语书数量&#x27;</span> +</span><br><span class="line"><span class="keyword">RTRIM</span>( <span class="keyword">CAST</span>( @ebook <span class="keyword">AS</span> <span class="built_in">char</span>(<span class="number">4</span>) ) ) + <span class="string">&#x27;册&#x27;</span></span><br><span class="line"><span class="keyword">END</span></span><br><span class="line"><span class="keyword">ELSE</span></span><br><span class="line">PRINT <span class="string">&#x27;英语书没有!&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="WHILE语句"><a href="#WHILE语句" class="headerlink" title="WHILE语句"></a>WHILE语句</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">WHILE &lt; 逻辑表达式&gt;</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">&lt; 命令行或程序块&gt;</span><br><span class="line">[BREAK] <span class="comment">/* 终止整个While 语句的执行*/</span></span><br><span class="line">[CONTINUE] <span class="comment">/* 结束本次循环体的执行*/</span></span><br><span class="line"><span class="keyword">END</span></span><br></pre></td></tr></table></figure><ul><li>WHILE命令在设定的条件为真时会重复执行命令行或程序块，除非遇到逻辑表达式为假或遇到BREAK语句才跳出循环</li><li>CONTINUE 命令可以让程序跳过CONTINUE命令之后的语句，回到WHILE循环的第一行命令</li><li>BREAK 命令则让程序无条件跳出循环，结束WHILE命令的执行</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*用WHILE 实现1+2+……+100*/</span></span><br><span class="line"><span class="keyword">DECLARE</span> @x <span class="built_in">int</span>, @<span class="keyword">sum</span> <span class="built_in">int</span></span><br><span class="line"><span class="keyword">SET</span> @x=<span class="number">1</span></span><br><span class="line"><span class="keyword">SET</span> @<span class="keyword">sum</span>=<span class="number">0</span></span><br><span class="line"><span class="keyword">WHILE</span> @x&lt;=<span class="number">100</span></span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line"><span class="keyword">SET</span> @<span class="keyword">sum</span>=@<span class="keyword">sum</span>+@x</span><br><span class="line"><span class="keyword">SET</span> @x=@x+<span class="number">1</span></span><br><span class="line"><span class="keyword">END</span></span><br><span class="line">PRINT @<span class="keyword">sum</span>  <span class="comment">--5050</span></span><br></pre></td></tr></table></figure><h2 id="其他控制语句"><a href="#其他控制语句" class="headerlink" title="其他控制语句"></a>其他控制语句</h2><ul><li><p><strong>goto语句</strong><br>将执行语句无条件跳转到标签处，并从标签位置继续处理</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GOTO label</span><br></pre></td></tr></table></figure></li><li><p><strong>waitfor语句</strong><br>暂停程序执行，直到所设定的等待时间已过或所设定的时间已到才继续往下执行</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">WAITFOR</span><br><span class="line">DELAY &lt; 延时时间&gt; /*  设定等待时间 */</span><br><span class="line">|TIME &lt; 到达时间&gt; /*  设定等待到某一时刻 */</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*延迟30秒执行查询。*/</span></span><br><span class="line"><span class="keyword">USE</span> <span class="keyword">Library</span></span><br><span class="line"><span class="keyword">GO</span></span><br><span class="line">WAITFOR DELAY <span class="string">&#x27;00:00:30&#x27;</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> Reader</span><br></pre></td></tr></table></figure></li><li><p><strong>return</strong><br>RETURN命令用于结束当前程序的执行，并返回到一个调用它的查询，可指定一个返回值</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">RETURN &lt;整型表达式&gt;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*在以下程序段中，RETURN 命令返回@x和@y中较大的值。*/</span></span><br><span class="line"><span class="keyword">DECLARE</span> @x <span class="built_in">int</span>, @y <span class="built_in">int</span></span><br><span class="line"><span class="keyword">IF</span> @x &gt; @y <span class="comment">--@x&gt;@y 返回@x</span></span><br><span class="line"><span class="keyword">RETURN</span> @x</span><br><span class="line"><span class="keyword">ELSE</span> <span class="comment">-- 否则返回@y</span></span><br><span class="line"><span class="keyword">RETURN</span> @y</span><br></pre></td></tr></table></figure></li></ul><h2 id="CASE表达式"><a href="#CASE表达式" class="headerlink" title="CASE表达式"></a>CASE表达式</h2><ul><li><strong>简单CASE表达式</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">CASE &lt; 输入表达式&gt;</span><br><span class="line">WHEN &lt; when 表达式1&gt; THEN 结果表达式1</span><br><span class="line">WHEN &lt; when 表达式2&gt; THEN 结果表达式2</span><br><span class="line">…</span><br><span class="line">ELSE 结果表达式n</span><br><span class="line"><span class="keyword">END</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*显示各读者可借书的数量*/</span></span><br><span class="line"><span class="keyword">SELECT</span> Rname <span class="keyword">AS</span>  读者名,rt.Typename <span class="keyword">AS</span>  读者类型, 限借阅量=</span><br><span class="line"><span class="keyword">CASE</span> r.TypeID  <span class="comment">-- 根据TypeID 的值得到CASE 表达式的返回值</span></span><br><span class="line"><span class="keyword">WHEN</span> <span class="number">1</span> <span class="keyword">THEN</span> <span class="string">&#x27; 可以借6 本书!&#x27;</span></span><br><span class="line"><span class="keyword">WHEN</span> <span class="number">2</span> <span class="keyword">THEN</span> <span class="string">&#x27; 可以借4 本书!&#x27;</span></span><br><span class="line"><span class="keyword">WHEN</span> <span class="number">3</span> <span class="keyword">THEN</span> <span class="string">&#x27; 可以借3 本书!&#x27;</span></span><br><span class="line"><span class="keyword">ELSE</span> <span class="string">&#x27; 无规定&#x27;</span></span><br><span class="line"><span class="keyword">END</span></span><br><span class="line"><span class="keyword">FROM</span> Reader r, ReaderType rt</span><br><span class="line"><span class="keyword">WHERE</span> r.TypeID=rt.TypeID</span><br></pre></td></tr></table></figure><ul><li><strong>CASE搜索表达式</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">CASE</span><br><span class="line">WHEN 逻辑表达式1 THEN 结果表达式1</span><br><span class="line">WHEN 逻辑表达式2 THEN 结果表达式2</span><br><span class="line">…</span><br><span class="line">ELSE 结果表达式n</span><br><span class="line"><span class="keyword">END</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*显示各读者可借书的数量*/</span></span><br><span class="line"><span class="keyword">USE</span> <span class="keyword">Library</span></span><br><span class="line"><span class="keyword">GO</span></span><br><span class="line"><span class="keyword">SELECT</span> Rname, rt.Typename <span class="keyword">AS</span>  类型,  限借阅量=</span><br><span class="line"><span class="keyword">CASE</span> <span class="comment">-- 根据TypeID 的值得到CASE 表达式的值</span></span><br><span class="line"><span class="keyword">WHEN</span> r.TypeID =<span class="number">1</span> <span class="keyword">THEN</span> <span class="string">&#x27;可以借6 本书!&#x27;</span></span><br><span class="line"><span class="keyword">WHEN</span> r.TypeID =<span class="number">2</span> <span class="keyword">THEN</span> <span class="string">&#x27;可以借4 本书!&#x27;</span></span><br><span class="line"><span class="keyword">WHEN</span> r.TypeID =<span class="number">3</span> <span class="keyword">THEN</span> <span class="string">&#x27;可以借3 本书!&#x27;</span></span><br><span class="line"><span class="keyword">ELSE</span> <span class="string">&#x27; 无规定&#x27;</span></span><br><span class="line"><span class="keyword">END</span></span><br><span class="line"><span class="keyword">FROM</span> Reader r, ReaderType rt</span><br><span class="line"><span class="keyword">WHERE</span> r.TypeID=rt.TypeID</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java后端 </category>
          
          <category> SQLServer </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQLServer </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQLServer📦视图</title>
      <link href="2021/01/17/%E5%90%8E%E7%AB%AF/MySQL/SQLServer_%E8%A7%86%E5%9B%BE/"/>
      <url>2021/01/17/%E5%90%8E%E7%AB%AF/MySQL/SQLServer_%E8%A7%86%E5%9B%BE/</url>
      
        <content type="html"><![CDATA[<h1 id="视图"><a href="#视图" class="headerlink" title="视图"></a>视图</h1><ul><li><strong>视图（View ）是一个虚表</strong></li><li>是数据库 <code>用户看到并允许使用 </code>的局部数据的逻辑结构的描述，是保护数据库安全性的一个有力措施</li><li>视图来自<code>一或多个基本表</code>，视图是由 基本表（实表） 产生的“<code>虚表</code>”</li><li>视图并不在数据库中存储，视图内容在<code>其被使用( 被查询)</code> 时动态生成。</li></ul><div class="tabs" id="testshitu"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#testshitu-1">视图的特点</button></li><li class="tab"><button type="button" data-href="#testshitu-2">视图的作用</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="testshitu-1"><ul><li>视图是由基本表（实表）产生的虚表</li><li>视图的列可以来自不同的基本表</li><li>视图的建立和删除不影响基本表</li><li>对视图内容的修改 （添加、删除和更新） 间接影响基本表</li></ul><button type="button" class="tab-to-top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="testshitu-2"><ul><li>简化用户的操作，提高效率<br>  可以把经常使用的查询定义为视图（就像编写C函数）  ，使得用户不必为以后的操作每次都重新编写代码</li><li>提高数据库的安全性<br>  通过视图，用户只能查询和修改 他们所能见到的数据，而其它数据既看不见也取不到。</li><li>提高数据的独立性<br>  视图可以使应用程序和数据库表在一定程度上独立<br>  如果没有视图，应用一定是建立在表上的；有了视图之后，程序与数据库表被视图分隔开来</li></ul><button type="button" class="tab-to-top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="T-SQL创建视图"><a href="#T-SQL创建视图" class="headerlink" title="T-SQL创建视图"></a>T-SQL创建视图</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> 视图名</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">SELECT</span> 查询子句</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*在教务管理数据库“EDUC”中，由学生表“Student”创建出2012级“软件技术”专业学生的视图“View_Software1”*/</span></span><br><span class="line"><span class="keyword">USE</span> EDUC</span><br><span class="line"><span class="keyword">GO</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> View_Software1</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">SID</span>, Sname, Sex, Birthday, Specialty</span><br><span class="line"><span class="keyword">FROM</span> Student</span><br><span class="line"><span class="keyword">WHERE</span> Specialty = <span class="string">&#x27;软件技术&#x27;</span> <span class="keyword">AND</span> <span class="keyword">SID</span> <span class="keyword">LIKE</span> <span class="string">&#x27;2012%&#x27;</span></span><br></pre></td></tr></table></figure><h1 id="T-SQL修改视图"><a href="#T-SQL修改视图" class="headerlink" title="T-SQL修改视图"></a>T-SQL修改视图</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">VIEW</span> 视图名</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">SELECT</span> 查询子句</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*修改人民邮电出版社出版的图书视图“View_BookPostTel”，为视图指定列名*/</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">VIEW</span> View_BookPostTel( 图书编号, 书名, 作者,出版社, 价格) <span class="comment">-- 指定视图中每列的名称</span></span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">SELECT</span> BID,Bname,Author, Publisher, Price</span><br><span class="line"><span class="keyword">FROM</span> Book</span><br><span class="line"><span class="keyword">WHERE</span> Publisher =<span class="string">&#x27; 人民邮电出版社&#x27;</span></span><br></pre></td></tr></table></figure><h1 id="T-SQL删除视图"><a href="#T-SQL删除视图" class="headerlink" title="T-SQL删除视图"></a>T-SQL删除视图</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">VIEW</span> 视图名</span><br></pre></td></tr></table></figure><h1 id="T-SQL应用视图"><a href="#T-SQL应用视图" class="headerlink" title="T-SQL应用视图"></a>T-SQL应用视图</h1><h2 id="视图查询"><a href="#视图查询" class="headerlink" title="视图查询"></a>视图查询</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 通过视图“View_BookPostTel”，查询一本“ 人民邮电出版社 ”出版的名为“ 数据库应用</span></span><br><span class="line"><span class="comment">技术 ”的图书信息*/</span></span><br><span class="line"><span class="comment">-- 创建视图</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> View_BookPostTel</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">SELECT</span> BID,Bname,Author, Publisher,Price</span><br><span class="line"><span class="keyword">FROM</span> Book</span><br><span class="line"><span class="keyword">WHERE</span> Publisher =<span class="string">&#x27;人民邮电出版社&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 应用视图</span></span><br><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">FROM</span> View_BookPostTel  <span class="comment">--查询来自视图</span></span><br><span class="line"><span class="keyword">WHERE</span> 书名=<span class="string">&#x27;数据库应用技术&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="视图添加"><a href="#视图添加" class="headerlink" title="视图添加"></a>视图添加</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 通过视图“View_BookPostTel”添加一本人民邮电出版社出版的名为“SQL Server 2008</span></span><br><span class="line"><span class="comment">数据库设计与实现”的图书。*/</span></span><br><span class="line"><span class="keyword">INSERT</span> View_BookPostTel</span><br><span class="line"><span class="keyword">VALUES</span> (<span class="string">&#x27;TP311.138/231&#x27;</span>, <span class="string">&#x27;SQL Server 2008数据库设计与实现&#x27;</span>, <span class="string">&#x27;Louis Davidson&#x27;</span>, <span class="string">&#x27;人民邮电出版社&#x27;</span>, <span class="string">&#x27;89.00&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="视图更新"><a href="#视图更新" class="headerlink" title="视图更新"></a>视图更新</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*通过视图“View_BookPostTel” 更新人民邮电出版社出版的名为“SQL Server 2008数据库设计与实现”的图书为“SQL Server 2008数据库设计“*/</span></span><br><span class="line"><span class="keyword">UPDATE</span> View_BookPostTel</span><br><span class="line"><span class="keyword">SET</span>  书名=<span class="string">&#x27;SQL Server 2008 数据库设计&#x27;</span></span><br><span class="line"><span class="keyword">WHERE</span>  书名=<span class="string">&#x27;SQL Server 2008 数据库设计与实现&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="视图删除"><a href="#视图删除" class="headerlink" title="视图删除"></a>视图删除</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*通过视图“View_BookPostTel”删除人民邮电出版社出版的名为“SQL Server 2008数据库设 计”的图书*/</span></span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> View_BookPostTel</span><br><span class="line"><span class="keyword">WHERE</span>  书名=<span class="string">&#x27;SQL Server 2008数据库设计&#x27;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java后端 </category>
          
          <category> SQLServer </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQLServer </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQLServer📦数据查询</title>
      <link href="2021/01/16/%E5%90%8E%E7%AB%AF/MySQL/SQLServer_%E6%95%B0%E6%8D%AE%E6%9F%A5%E8%AF%A2/"/>
      <url>2021/01/16/%E5%90%8E%E7%AB%AF/MySQL/SQLServer_%E6%95%B0%E6%8D%AE%E6%9F%A5%E8%AF%A2/</url>
      
        <content type="html"><![CDATA[<h1 id="Select查询语句"><a href="#Select查询语句" class="headerlink" title="Select查询语句"></a>Select查询语句</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> [<span class="keyword">all</span>|<span class="keyword">distinct</span>] [top n] 表达式列表 <span class="comment">--- 投影查询</span></span><br><span class="line">[<span class="keyword">into</span> 新表名] <span class="comment">--- 保存查询</span></span><br><span class="line"><span class="keyword">from</span> 基本表列表| 视图名列表 <span class="comment">--- 连接查询</span></span><br><span class="line">[<span class="keyword">where</span> 查询条件] <span class="comment">--- 选择查询</span></span><br><span class="line">[<span class="keyword">group</span> <span class="keyword">by</span> 分组列名表] <span class="comment">--- 分组统计查询</span></span><br><span class="line">[<span class="keyword">having</span> 逻辑表达式] <span class="comment">--- 限定查询</span></span><br><span class="line">[<span class="keyword">order</span> <span class="keyword">by</span> 排序列名表[<span class="keyword">ASC</span>|<span class="keyword">DESC</span>]] <span class="comment">---排序查询</span></span><br></pre></td></tr></table></figure><h2 id="Select子句—投影查询"><a href="#Select子句—投影查询" class="headerlink" title="Select子句—投影查询"></a>Select子句—投影查询</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> [ <span class="keyword">ALL</span> | <span class="keyword">DISTINCT</span> ] [TOP n]  表达式<span class="number">1</span>, … , 表达式n</span><br></pre></td></tr></table></figure><p>用于描述查询结果集的列 ， 它是一个用逗号分隔的表达式列表 。这里的表达式由<code>列名 、 常量 、 函数和运算符</code>构成 。 此外 ， 还有一些参数可以根据需要进行选择 </p><ul><li><strong>列名表：投影某些列进行查询</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 从教务管理数据库“EDUC ”的学生表“Student”中查询出男生的学号、姓名、性别和专业的数据信息。*/</span></span><br><span class="line"><span class="keyword">USE</span> EDUC <span class="comment">-- 设置当前数据库为EDUC</span></span><br><span class="line"><span class="keyword">GO</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">SID</span>,Sname,Sex,Specialty <span class="comment">-- 投影列( 列选)</span></span><br><span class="line"><span class="keyword">FROM</span> Student <span class="comment">-- 查询的表“Student” ”</span></span><br><span class="line"><span class="keyword">WHERE</span> Sex=<span class="string">&#x27;男&#x27;</span> <span class="comment">-- 选择性别为“男”的数据行(</span></span><br></pre></td></tr></table></figure><ul><li><strong>TOP关键字限制：返回行数</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">TOP n [PERCENT]</span><br></pre></td></tr></table></figure><p>如果未指定关键字PERCENT， 则返回查询结果集的前n 行数据 。如果指定了关键字PERCENT，n 就是查询返回结果集行的百分比</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*从教务管理数据库“EDUC”的课程表“Course” 中查询出前3行数据*/</span></span><br><span class="line"><span class="keyword">SELECT</span> TOP <span class="number">3</span> CID, Cname, Credit <span class="comment">-- 返回前 3 行数据</span></span><br><span class="line"><span class="keyword">FROM</span> Course</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> TOP <span class="number">20</span> <span class="keyword">Percent</span> CID, Cname, Credit <span class="comment">-- 返回前 20% 行数据</span></span><br><span class="line"><span class="keyword">FROM</span> Course</span><br></pre></td></tr></table></figure><ul><li><strong>是否消除重复数据行</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">All | DISTINCT</span><br></pre></td></tr></table></figure><p>指定<code>All(缺省)</code>关键字将保留查询结果集中的全部数据行 。当对表进行投影操作之后 ， 在查询结果集中可能会出现重复的数据行 ，使用<code>DISTINCT关键字可消除查询结果集中的重复数据行</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*从教务管理数据库“EDUC”的学生表“Student”中查询出学校各专业的名称*/</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> Specialty <span class="comment">-- 使用DISTINCT 消除重复数据行</span></span><br><span class="line"><span class="keyword">FROM</span> Student</span><br></pre></td></tr></table></figure><ul><li><strong>通配符*:投影所有列</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*从教务管理数据库“EDUC”的学生表“Student”中查询出前3行数据*/</span></span><br><span class="line"><span class="keyword">SELECT</span> TOP <span class="number">3</span> *  <span class="comment">--&quot;*&quot;代表投影所有列</span></span><br><span class="line"><span class="keyword">FROM</span> Student</span><br></pre></td></tr></table></figure><ul><li><strong>使用表达式计算列值</strong><br>在SELECT子句中可以使用加 (+) 、 减(−)  、 乘(*) 、除(/) 、 取模(%)和字符连接(+)等运算符及各种函数进行运算 ， 通过对表达式的计算来获取查询结果的列值 。</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*从教务管理数据库“EDUC”的课程“Course”表里查询出学分对应的课程学时（假设每18学时计1学分），显示前5行*/</span></span><br><span class="line"><span class="comment">--- 表达式含运算符</span></span><br><span class="line"><span class="keyword">SELECT</span> TOP <span class="number">5</span> CID, Cname, Credit, Credit*<span class="number">18</span></span><br><span class="line"><span class="keyword">FROM</span> Course</span><br><span class="line"></span><br><span class="line"><span class="comment">--- 表达式带函数</span></span><br><span class="line"><span class="keyword">SELECT</span> TOP <span class="number">5</span> CID, Cname, Credit,</span><br><span class="line"><span class="keyword">STR</span>(Credit * <span class="number">18</span>, <span class="number">3</span>, <span class="number">0</span>) + <span class="string">&#x27;学时&#x27;</span></span><br><span class="line"><span class="keyword">FROM</span> Course</span><br><span class="line"></span><br><span class="line"><span class="comment">--- 表达式为常量</span></span><br><span class="line"><span class="keyword">SELECT</span> TOP <span class="number">5</span> CID, Cname, Credit, <span class="string">&#x27;学分&#x27;</span> ,</span><br><span class="line"><span class="keyword">STR</span>( Credit * <span class="number">18</span>, <span class="number">3</span>, <span class="number">0</span>), <span class="string">&#x27;学时&#x27;</span></span><br><span class="line"><span class="keyword">FROM</span> Course</span><br></pre></td></tr></table></figure><ul><li><strong>自定义列标题</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1：列名 AS &#x27;指定的列标题&#x27;  (AS可以省略)</span><br><span class="line">2：&#x27;指定的列标题&#x27; = 列名表达式</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> TOP <span class="number">5</span> CID <span class="keyword">AS</span> <span class="string">&#x27;课程号&#x27;</span>, Cname <span class="keyword">AS</span> <span class="string">&#x27;课程名&#x27;</span>,</span><br><span class="line">Credit 学分, 学时 = <span class="keyword">STR</span>( Credit * <span class="number">18</span>, <span class="number">3</span>, <span class="number">0</span>)</span><br><span class="line"><span class="keyword">FROM</span> Course</span><br></pre></td></tr></table></figure><ul><li><strong>聚合函数</strong></li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">聚合函数名( [ALL | DISTINCT] 列名表达式 | * )</span><br></pre></td></tr></table></figure><p><code>ALL</code>关键字表示函数对指定列的所有值进行统计和计算， <code>DISTINCT</code>关键字说明函数仅对指定列的唯一值 （ 不计重复值 ） 进行统计和计算， ALL为默认设置</p><ul><li>COUNT：统计 列 中选取的项目个数或 或  查询输出的行数 。</li><li>SUM：计算指定的数值型 列 名表达式的总和 。</li><li>AVG：计算指定的数值型 列 名表达式的平均值 。</li><li>MAX：求出指定的数值 、 字符或日期型 列 名表达式的最大值 。</li><li>MIN：求出指定的数值 、 字符或日期型 列 名表达式的最小值</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*从学生表“ 从学生表“Student”中统计出学生的总人数、录取分数“AScores”的最高分、最低分、总分和平均分*/</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">COUNT</span>(*) <span class="keyword">AS</span> 总人数,  <span class="comment">-- 统计总数</span></span><br><span class="line"><span class="keyword">MAX</span>(AScores) <span class="keyword">AS</span> 最高分,  <span class="comment">-- 求最大</span></span><br><span class="line"><span class="keyword">MIN</span>(AScores) <span class="keyword">AS</span> 最低分, <span class="comment">-- 求最小</span></span><br><span class="line"><span class="keyword">SUM</span>(AScores) <span class="keyword">AS</span> 总分,  <span class="comment">-- 求和</span></span><br><span class="line"><span class="keyword">AVG</span>(AScores) <span class="keyword">AS</span> 平均分  <span class="comment">-- 求平均分</span></span><br><span class="line"><span class="keyword">FROM</span> Student</span><br><span class="line"></span><br><span class="line"><span class="comment">/*从学生表“Student”中统计出男生的人数*/</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">COUNT</span>(*) <span class="keyword">AS</span> 人数  <span class="comment">-- 统计表中满足条件的行数</span></span><br><span class="line"><span class="keyword">FROM</span> Student</span><br><span class="line"><span class="keyword">WHERE</span> Sex=<span class="string">&#x27;男&#x27;</span> </span><br><span class="line"></span><br><span class="line"><span class="comment">/* 从学生表“Student”中统计出专业个数。注意，DISTINCT关键字的作用是消除重复行，即每个专业只计一次*/</span></span><br><span class="line"><span class="comment">-- 统计表“Student ”中名称不重复的专业个数</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">COUNT</span>(<span class="keyword">DISTINCT</span> Specialty) <span class="keyword">AS</span> 专业个数 </span><br><span class="line"><span class="keyword">FROM</span> Student</span><br></pre></td></tr></table></figure><h2 id="From子句—连接查询"><a href="#From子句—连接查询" class="headerlink" title="From子句—连接查询"></a>From子句—连接查询</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">FROM 基本表1, 基本表2, … , 基本表n</span><br></pre></td></tr></table></figure><p><code>指定要查询的基本表</code> 。如果指定了一个以上的基本表 ， 则计算它们之间的<code>笛卡儿积</code>， 与WHERE子句等值条件配合实现连接查询</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*从教务管理数据库“EDUC”中查询出学生的学号、姓名、所选课程名和成绩信息*/</span></span><br><span class="line"><span class="keyword">USE</span> EDUC</span><br><span class="line"><span class="keyword">GO</span></span><br><span class="line"><span class="keyword">SELECT</span> Student.SID,Sname,Cname,Scores <span class="comment">-- 投影各表的列</span></span><br><span class="line"><span class="keyword">FROM</span> Student, SC, Course <span class="comment">-- 连接3 张表, 对3 张表求笛卡尔积</span></span><br><span class="line"><span class="keyword">WHERE</span> Student.SID=SC.SID <span class="keyword">AND</span> SC.CID=Course.CID <span class="comment">--等值连接</span></span><br></pre></td></tr></table></figure><ul><li>为基本表指定临时别名 —— 目的：简化表名</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">基本表名 [AS] 别名 别名</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*从教务管理数据库“EDUC”中查询出学生的学号、姓名、所选课程名和成绩信息*/</span></span><br><span class="line"><span class="keyword">USE</span> EDUC</span><br><span class="line"><span class="keyword">GO</span></span><br><span class="line"><span class="keyword">SELECT</span> x.SID, x.Sname, z.Cname, y.Scores<span class="comment">-- 投影各表的列</span></span><br><span class="line"><span class="keyword">FROM</span> Student x, SC y, Course z</span><br><span class="line"><span class="comment">-- 为三个表指定别名</span></span><br><span class="line"><span class="keyword">WHERE</span> x.SID=y.SID <span class="keyword">AND</span> y.CID=z.CID <span class="comment">-- 等值条件连接</span></span><br></pre></td></tr></table></figure><h2 id="Where子句—选择查询"><a href="#Where子句—选择查询" class="headerlink" title="Where子句—选择查询"></a>Where子句—选择查询</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">WHERE 逻辑表达式</span><br></pre></td></tr></table></figure><ul><li>WHERE 子句用于 <code>行选择</code> 操作，定义了表中的行要满足条件（逻辑表达式为真)才能参与SELECT 查询语句的操作</li><li>逻辑表达式 ：由 常量、列名（变量）、函数、运算符（ 算术、关系、逻辑等）等组成，值为true( 非零/ 真) 或false( 零/ 假）</li></ul><table><thead><tr><th align="center">运算符</th><th align="center">形式</th></tr></thead><tbody><tr><td align="center">比较运算符</td><td align="center">=、 &lt;&gt; 、 &gt; 、&lt; 、&gt;= 、&lt;= 、!&gt; 、!&lt;</td></tr><tr><td align="center">逻辑运算符</td><td align="center">and、or、not</td></tr><tr><td align="center">范围运算符</td><td align="center">between、not between</td></tr><tr><td align="center">字符串匹配</td><td align="center">like、not like</td></tr><tr><td align="center">列表运算符</td><td align="center">in、not in</td></tr><tr><td align="center">空值判断符</td><td align="center">is null、is not null</td></tr></tbody></table><ul><li><strong>关系运算符</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*从学生表“Student”中查询出学生“赵成刚”的信息*/</span></span><br><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">FROM</span> Student</span><br><span class="line"><span class="keyword">WHERE</span> Sname = <span class="string">&#x27;赵成刚&#x27;</span>   <span class="comment">--关系运算</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*从学生表“Student”中查出入学分数高于 300分的学生的学号、姓名 、分数*/</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">SID</span>, Sname, AScores</span><br><span class="line"><span class="keyword">FROM</span> Student</span><br><span class="line"><span class="keyword">WHERE</span> AScores &gt; <span class="number">300</span>   <span class="comment">--关系运算</span></span><br></pre></td></tr></table></figure><ul><li><strong>逻辑运算符</strong><br>逻辑运算符：AND （与）、OR（或） 、 NOT（非）</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*从学生表“Student”中查出入学分数高于 300分的女生的学号、姓名 、分数*/</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">SID</span>, Sname, AScores</span><br><span class="line"><span class="keyword">FROM</span> Student</span><br><span class="line"><span class="keyword">WHERE</span> AScores &gt; <span class="number">300</span> <span class="keyword">AND</span> Sex=<span class="string">&#x27;女&#x27;</span>  <span class="comment">--逻辑运算</span></span><br></pre></td></tr></table></figure><ul><li><strong>范围运算符</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">列名 [NOT] BETWEEN 开始值 AND 结束值</span><br><span class="line"><span class="comment">-- 指定列名是否在开始值和结束值之间</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*从学生表“Student”中查询出入学分数在350分到360分之间的学生信息*/</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> Student</span><br><span class="line"><span class="keyword">WHERE</span> AScores <span class="keyword">BETWEEN</span> <span class="number">350</span> <span class="keyword">AND</span> <span class="number">360</span> <span class="comment">-- 范围运算</span></span><br><span class="line"><span class="comment">--- 或： WHERE AScores&gt;=350 AND AScores &lt;=360</span></span><br></pre></td></tr></table></figure><ul><li><strong>模式匹配运算符</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">列名 [NOT] LIKE 字符串（含通配符）</span><br></pre></td></tr></table></figure><p><code>通配符“\_” </code>代表任意一个字符；<br><code>通配符“%” </code>代表任意多个字符。<br>模式匹配运算符LIKE可以<code>实现对表的模糊查询 </code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*从学生表“Student”中查询出“李”姓的学生信息*/</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> Student</span><br><span class="line"><span class="keyword">WHERE</span> Sname <span class="keyword">LIKE</span> <span class="string">&#x27;李%&#x27;</span> <span class="comment">--- 模式匹配模糊查询</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*从课程表“Course”中查询出有关&quot;程序设计&quot;方面的课程*/</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> Course</span><br><span class="line"><span class="keyword">WHERE</span> Cname <span class="keyword">LIKE</span> <span class="string">&#x27;%程序设计%&#x27;</span> <span class="comment">-- 模式匹配模糊查询</span></span><br></pre></td></tr></table></figure><ul><li><strong>列表运算符</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">列名 [NOT] IN (列表|子查) </span><br></pre></td></tr></table></figure><p>列名的值（不）是列表或子查询结果中的任何一个值时，逻辑表达式的值为（假）真</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*学生表“Student”中查询学号为2011216007和2012216089的学生信息*/</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> Student</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">SID</span> <span class="keyword">IN</span>(<span class="string">&#x27;2011216007&#x27;</span>,<span class="string">&#x27;2012216089&#x27;</span>)</span><br><span class="line"><span class="comment">-- 列名判断运算</span></span><br><span class="line"><span class="comment">-- 等价于：SID= &#x27;2011216007&#x27;OR SID=&#x27;2012216089&#x27;</span></span><br></pre></td></tr></table></figure><ul><li><strong>空值运算符</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">列名 IS [NOT] NULL</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*从教务管理数据库“EDUC”的选课表“SC”中查询出考试成绩没有登记的记录*/</span></span><br><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">FROM</span> SC</span><br><span class="line"><span class="keyword">WHERE</span> Scores <span class="keyword">IS</span> <span class="literal">NULL</span> <span class="comment">-- 空值判断运算</span></span><br></pre></td></tr></table></figure><h2 id="Group-by子句—分组统计查询"><a href="#Group-by子句—分组统计查询" class="headerlink" title="Group by子句—分组统计查询"></a>Group by子句—分组统计查询</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GROUP BY 列名表</span><br></pre></td></tr></table></figure><ul><li>与<code>列名</code>或 <code>聚合函数</code> 配合实现分组统计</li><li>实际应用中往往需要根据某列的值进行分组统计与汇总</li><li>如 ， 需要从学生表中统计出 <code>各专业 </code>的学生总数 ， 统计时用 “<code>GROUP BY专业名称 </code> ” 进行分组 ， 然后计算聚合函数的值</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*从学生表“Student”中查询出各专业学生入学的平均分*/</span></span><br><span class="line"><span class="keyword">SELECT</span> SpecialtyAS <span class="string">&#x27;专业&#x27;</span>,<span class="keyword">AVG</span>(AScores) <span class="keyword">AS</span> <span class="string">&#x27;平均分&#x27;</span>  <span class="comment">-- 求各专业入学平均分</span></span><br><span class="line"><span class="keyword">FROM</span> Student</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> Specialty   <span class="comment">--根据专业名称分组</span></span><br></pre></td></tr></table></figure><h2 id="Having子句—限定查询"><a href="#Having子句—限定查询" class="headerlink" title="Having子句—限定查询"></a>Having子句—限定查询</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HAVING 逻辑表达式</span><br></pre></td></tr></table></figure><ul><li>与GROUP BY配合使用，筛选统计的结果</li><li>HAVING子句的逻辑表达式通常包含聚合函数</li><li>如果不使用GROUP BY  子句，HAVING  的行为与 WHERE 子句一样</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*从学生表“Student”中查询出各专业学生入学平均分高于340分的专业和入学平均分*/</span></span><br><span class="line"><span class="keyword">SELECT</span> Specialty <span class="keyword">AS</span>  专业, <span class="keyword">AVG</span>(AScores) <span class="keyword">AS</span> <span class="string">&#x27;平均分&#x27;</span>  <span class="comment">-- 求各专业入学平均分</span></span><br><span class="line"><span class="keyword">FROM</span> Student</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> Specialty <span class="comment">-- 根据专业名称分组</span></span><br><span class="line"><span class="keyword">HAVING</span> <span class="keyword">AVG</span>(AScores) &gt; <span class="number">340</span> <span class="comment">--对学生总成绩进行筛选</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*从学生表“Student”中查询出各专业的学生总数&gt;4的专业名称和人数 */</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="string">&#x27;专业&#x27;</span> = Specialty, <span class="string">&#x27;人数&#x27;</span> = <span class="keyword">COUNT</span>(*)  <span class="comment">-- 统计各专业学生人数</span></span><br><span class="line"><span class="keyword">FROM</span> Student</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> Specialty <span class="comment">-- 根据专业名称分组</span></span><br><span class="line"><span class="keyword">HAVING</span> <span class="keyword">COUNT</span>(*) &gt; <span class="number">4</span> <span class="comment">--对学生总人数进行筛选</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*从选课表“SC”中查询出各学生的平均分高于80的“学号”和“平均分”*/</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="string">&#x27;学号&#x27;</span> = <span class="keyword">SID</span>, <span class="string">&#x27;平均分&#x27;</span> = <span class="keyword">AVG</span>(Scores)</span><br><span class="line"><span class="keyword">FROM</span> SC</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> <span class="keyword">SID</span></span><br><span class="line"><span class="keyword">HAVING</span> <span class="keyword">AVG</span>(Scores)  &gt; <span class="number">80</span></span><br></pre></td></tr></table></figure><h2 id="Order-by子句—排序查询"><a href="#Order-by子句—排序查询" class="headerlink" title="Order by子句—排序查询"></a>Order by子句—排序查询</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ORDER BY 列名表达式表 ASC / DESC</span><br></pre></td></tr></table></figure><p>按一列或多列对查询结果进行升序（ASC ：默认）或降序（DESC）排序。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*从学生表“ “Student”中查询出各专业学生的入学平均分,并将结果按降序排序*/</span></span><br><span class="line"><span class="keyword">SELECT</span> Specialty <span class="keyword">AS</span>  专业, <span class="keyword">AVG</span>(AScores) <span class="keyword">AS</span> <span class="string">&#x27;平均分&#x27;</span></span><br><span class="line"><span class="keyword">FROM</span> Student</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> Specialty <span class="comment">-- 根据专业名称分组</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="keyword">AVG</span>(AScores) <span class="keyword">DESC</span> <span class="comment">--按分数降序排序</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*从学生表“Student”中查询出软件技术专业学生信息，并按照性别升序和入学成绩降序排列 */</span></span><br><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">FROM</span> Student</span><br><span class="line"><span class="keyword">WHERE</span> Specialty=<span class="string">&#x27; 软件技术&#x27;</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> Sex <span class="keyword">ASC</span>, AScores <span class="keyword">DESC</span>  </span><br><span class="line"><span class="comment">-- 按照性别升序和入学成绩降序排列</span></span><br></pre></td></tr></table></figure><h2 id="Into子句—保存查询"><a href="#Into子句—保存查询" class="headerlink" title="Into子句—保存查询"></a>Into子句—保存查询</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">INTO 新表名</span><br></pre></td></tr></table></figure><ul><li>INTO子句指定使用结果集来 <code>创建新表</code> </li><li>查询结果往往需要保存下来以便使用，使用INTO子句可以将查询结果存储在一个新建的基本表中，这种方式常用于<code>创建表的副本</code></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*从选课表“SC”中将学号和课程号的内容保存为新表student_course*/</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">SID</span>, CID</span><br><span class="line"><span class="keyword">INTO</span> student_course <span class="comment">-- 创建新表</span></span><br><span class="line"><span class="keyword">FROM</span> SC</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*巧用INTO 语句将表student 复制成student_1*/</span></span><br><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">INTO</span> student_1</span><br><span class="line"><span class="keyword">FROM</span> student</span><br></pre></td></tr></table></figure><h1 id="ANSI连接查询"><a href="#ANSI连接查询" class="headerlink" title="ANSI连接查询"></a>ANSI连接查询</h1><p>在SQL Server 中，<code>实现表的连接 </code>可使用 <code>两种语法形式</code>：</p><ul><li><p>一种 是前面介绍的FROM 子句，连接条件写在WHERE子句的逻辑表达式中，从而实现表的连接 （早期连接方式）</p></li><li><p>另一种是<code>ANSI </code>（American National StandardsInstitute— 美国国家标准学会）连接语法形式，在FROM子句中使用<code>JOIN…ON </code>关键字，连接条件写在<code>ON</code>之后，从而实现表的连接。</p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*从教务管理数据库“EDUC”中查询出学生的学号、姓名、所选课程名和成绩信息*/</span></span><br><span class="line"><span class="comment">--早期连接方式： （方式一）</span></span><br><span class="line"><span class="keyword">SELECT</span> x.SID, x.Sname, z. Cname, y.Scores</span><br><span class="line"><span class="keyword">FROM</span> Student x, SC y, Course z</span><br><span class="line"><span class="keyword">WHERE</span> x.SID=y.SID <span class="keyword">AND</span> y.CID=z.CID  <span class="comment">-- 连接条件</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--ANSI 连接方式：  （方式二）</span></span><br><span class="line"><span class="keyword">SELECT</span> x.SID, x.Sname, z. Cname, y.Scores</span><br><span class="line"><span class="keyword">FROM</span> Student x <span class="keyword">JOIN</span> SC y <span class="keyword">ON</span> x.SID=y.SID <span class="comment">-- 连接条件</span></span><br><span class="line"><span class="keyword">JOIN</span> Course z <span class="keyword">ON</span> y.CID=z.CID</span><br></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 语法</span></span><br><span class="line">FROM &#123; 表名1 [ 连接类型] JOIN  表名2 ON  连接条件&#125; [,…,n]</span><br></pre></td></tr></table></figure><ul><li>实现表与表的两两连接 ，表1和表2连接之后还可以继续与表3,…, 表n 连接，最多可以连接64 个表 。</li><li>连接条件放在ON 关键字后 </li></ul><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@bfdd61046f86537e464e398b191222fd030d196a/2021/01/17/289da43469ac6e2097526bed5c7b9bfa.png"></p><h2 id="内连接"><a href="#内连接" class="headerlink" title="内连接"></a>内连接</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">FROM 表名1 [INNER] JOIN 表名2 ON 连接表达式</span><br></pre></td></tr></table></figure><p>从表1 和表2 的<code>笛卡儿积 </code>中 ， 选出符合连接条件的数据行；如果数据行无法满足连接条件 ， 则将其丢弃 。 <code>内连接消除了与另一个表中不匹配的数据行</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*从教务管理数据库“EDUC”中查询每个学生的学号、姓名、课程名及选课成绩，不允许有重复列（3表内连）*/</span></span><br><span class="line"><span class="keyword">USE</span> EDUC</span><br><span class="line"><span class="keyword">GO</span></span><br><span class="line"><span class="keyword">SELECT</span> x.SID , x.Sname, z.Cname, y.Scores</span><br><span class="line"><span class="keyword">FROM</span> Student x <span class="keyword">INNER</span> <span class="keyword">JOIN</span> SC y <span class="keyword">ON</span> x.SID = y.SID</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> Course z <span class="keyword">ON</span> y.CID = z.CID</span><br></pre></td></tr></table></figure><h2 id="外连接"><a href="#外连接" class="headerlink" title="外连接"></a>外连接</h2><ul><li><p>外连接返回FROM 子句中指定的至少一个表( 或视图) 中的所有行 （不包含ON 之后的连接条件 ） ， 只要这些行符合任何WHERE 选择或HAVING 限定条件 。</p></li><li><p>外连接又分为<code>左外连接</code>、 <code>右外连接 </code>和<code>全外连接</code>。</p></li><li><p>左外连接 对连接中 <code>左边的表不加限制</code>； 右外连接 对连接中<code>右边的表不加限制</code> ； 全外连接 对<code>两个表都不加限制</code> ， 两个表中的所有行都会包括在结果集中 </p></li><li><p><strong>左外连接</strong></p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">FROM  表名1 LEFT [OUTER] JOIN 表名2 ON  连接表达式</span><br></pre></td></tr></table></figure><p>连接结果 <code>保留表1</code>没形成连接的行  ，<code>表2 </code>相应的各列为NULL值 </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*在教务管理数据库“EDUC”中，查询哪些课程没人选？*/</span></span><br><span class="line"><span class="keyword">SELECT</span> Course.* , SC.*</span><br><span class="line"><span class="keyword">FROM</span> Course <span class="keyword">LEFT</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span> SC</span><br><span class="line"><span class="keyword">ON</span> Course.CID=SC.CID</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@acd66e5b00db1fd565cc2edea70d850173d45648/2021/01/17/98d761a92f2b8bde900043b9b539b539.png"></p><ul><li><strong>右外连接</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">FROM  表名1 RIGHT [OUTER] JOIN  表名2 ON  连接表达式</span><br></pre></td></tr></table></figure><p>连接 <code>结果保留表2 </code>没形成连接的行，<code>表1 </code>相应的列为NULL值</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*从表“Borrow ”和表“Book”中查询出图书被借阅的情况， 包括没有被借的图书情况*/</span></span><br><span class="line"><span class="keyword">SELECT</span> x.RID, x.BID, y.BID, y.Bname, y.Author</span><br><span class="line"><span class="keyword">FROM</span> Borrow x <span class="keyword">RIGHT</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span> Book y <span class="comment">--- 右外连接</span></span><br><span class="line"><span class="keyword">ON</span> x.BID=y.BID</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@4c2cc82a1f3f71f9ea81419c5e31600939d6ea0e/2021/01/17/5a1ad7392920548f12456492db7b18ca.png"></p><ul><li><strong>全外连接</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">FROM  表名1 FULL [OUTER] JOIN  表名2 ON 连接表达式</span><br></pre></td></tr></table></figure><p>连接结果 保留表1 没形成连接的元组，表2 相应的列为NULL值；<br>连接结果也 保留表2 没形成连接的元组，表1 相应的列为NULL值。<br><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@38975dfb75f63e9d5cd3c6312f97792d782e952c/2021/01/17/ed3f200190ed72a1a0950dc163050663.png"><br><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@0216ad5746735606ec5e93eb0ae08a0e0a89c5c5/2021/01/17/b24c20c3acaf38dcd3746afa9b706eef.png"></p><h2 id="自连接"><a href="#自连接" class="headerlink" title="自连接"></a>自连接</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">FROM  表名1  别名1 JOIN  表名1  别名2 ON 连接表达式</span><br></pre></td></tr></table></figure><ul><li>表可以通过自连接实现自身的连接运算。自连接可以看作是 “<code> 一张表的两个副本之间进行的连接</code>“</li><li>在自连接中，必须为表指定两个不同的别名，使之在逻辑上成为两张表。</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*从图书管理数据库“Library”中查询出借了两本以上图书的读者的借书信息*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 步骤1:表“ Borrow”与表“Borrow”自连接</span></span><br><span class="line"><span class="keyword">SELECT</span> x.RID, x.BID, x.ReturnDate, y.RID, y.BID</span><br><span class="line"><span class="keyword">FROM</span> Borrow x <span class="keyword">JOIN</span> Borrow y <span class="keyword">ON</span> x.RID=y.RI  <span class="comment">-- 读者编号等值条件自连接</span></span><br><span class="line"><span class="keyword">WHERE</span> x.ReturnDate <span class="keyword">IS</span> <span class="literal">NULL</span></span><br><span class="line"><span class="keyword">AND</span> y.ReturnDate <span class="keyword">IS</span> <span class="literal">NULL</span> <span class="comment">-- 还期为空，即尚未归还</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 步骤2:对表“Borrow”与表“Borrow”自连接加选择条件和投影操作</span></span><br><span class="line"><span class="keyword">SELECT</span> x.RID, x.BID, x.ReturnDate <span class="comment">--投影去重复列名 </span></span><br><span class="line"><span class="keyword">FROM</span> Borrow x <span class="keyword">JOIN</span> Borrow y</span><br><span class="line"><span class="keyword">ON</span> x.RID=y.RID <span class="comment">--读者编号等值条件自连接 </span></span><br><span class="line"><span class="keyword">WHERE</span> x.ReturnDate <span class="keyword">IS</span> <span class="literal">NULL</span></span><br><span class="line"><span class="keyword">AND</span> y.ReturnDate <span class="keyword">IS</span> <span class="literal">NULL</span> <span class="comment">--还期为空，即尚未归还 </span></span><br><span class="line"><span class="keyword">AND</span> x.BID&lt;&gt;y.BID <span class="comment">--图书编号不同，即两本不同的书</span></span><br></pre></td></tr></table></figure><h2 id="交叉连接"><a href="#交叉连接" class="headerlink" title="交叉连接"></a>交叉连接</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">FROM 表名1 CROSS JOIN 表名2</span><br><span class="line"><span class="comment">-- 或：</span></span><br><span class="line">FROM 表名1 ,表名2 <span class="comment">---兼容早期连接的写法</span></span><br></pre></td></tr></table></figure><p>两个表进行 <code>笛卡尔积</code> 计算 ， 结果集的行数等于表1的行数 乘以表2的行数 </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*从教务管理数据库“EDUC”中查询每个学生的学号、姓名、课程代号及选课成绩*/</span></span><br><span class="line"><span class="keyword">SELECT</span> x.SID, x.Sname , y.CID, y.Scores</span><br><span class="line"><span class="keyword">FROM</span> Student x,SC y</span><br><span class="line"><span class="keyword">WHERE</span> x.SID = y.SID</span><br></pre></td></tr></table></figure><h2 id="多表连接"><a href="#多表连接" class="headerlink" title="多表连接"></a>多表连接</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">FROM 表名1 JOIN 表名2 ON 连接表达式</span><br><span class="line">JOIN 表名3 ON 连接表达式[,… ，n]</span><br></pre></td></tr></table></figure><p>最多可以连接64个表，通常为8 ～10个 </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 对读者表“Reader ”、借阅表“Borrow”和图书表 “Book”三个表进行等值连接,查询读者“程鹏”的借阅情况*/</span></span><br><span class="line"><span class="keyword">SELECT</span> t1.RID, t1.Rname, t3.Bname, t2.LendDate</span><br><span class="line"><span class="keyword">FROM</span> Reader t1 <span class="keyword">JOIN</span> Borrow t2 <span class="keyword">ON</span> t1.RID=t2.RID</span><br><span class="line"><span class="keyword">JOIN</span> Book t3 <span class="keyword">ON</span> t2.BID=t3.BID</span><br><span class="line"><span class="keyword">WHERE</span> t1.Rname=<span class="string">&#x27;程鹏&#x27;</span></span><br></pre></td></tr></table></figure><h1 id="子查询"><a href="#子查询" class="headerlink" title="子查询"></a>子查询</h1><ul><li>在实际应用中，经常要用到 多层嵌套查询。</li><li>若一条select语句的where子句中又包含了另一个select语句，此时就出现了查询的嵌套（外层select语句嵌套了内层select语句）。</li><li>外层的select语句被称为<code>父查询或主查询</code>；内层的select语句称为<code>子查询</code>。</li></ul><ul><li><strong>单值嵌套查询</strong><br>在该方式下，通过 子查询返回一个单一的数值，该数据可以参加相关表达式的运算</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 从选课表“SC”中查询出学号最小的学生的选课信息*/</span></span><br><span class="line"><span class="keyword">USE</span> EDUC</span><br><span class="line"><span class="keyword">GO</span></span><br><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">FROM</span> SC</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">SID</span> = ( <span class="keyword">SELECT</span> <span class="keyword">MIN</span>( <span class="keyword">SID</span> ) <span class="keyword">FROM</span> Student )</span><br></pre></td></tr></table></figure><ul><li><strong>[NOT] IN 子查询</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">列名 [NOT] IN (子查询)</span><br></pre></td></tr></table></figure><p>列值<code>被包含</code>或 <code>不被包含</code>在集合中</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*查询出选修了课程号16020010的学生的学号、姓名 */</span></span><br><span class="line"><span class="keyword">USE</span> EDUC</span><br><span class="line"><span class="keyword">GO</span></span><br><span class="line"><span class="keyword">SELECT</span> Student.SID, Student.Sname</span><br><span class="line"><span class="keyword">FROM</span> Student   <span class="comment">--- 对于表Student 中的每一个记录</span></span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">SID</span> <span class="keyword">IN</span>   <span class="comment">--- 判断其SID 是否在子查询的集合当中</span></span><br><span class="line">( <span class="keyword">SELECT</span> <span class="keyword">SID</span></span><br><span class="line"><span class="keyword">FROM</span> SC</span><br><span class="line"><span class="keyword">WHERE</span> CID = <span class="string">&#x27;16020010&#x27;</span> ) <span class="comment">--- 课号为16020010 的SID</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*查询出没有选修任何课程的学生的学号、姓名*/</span></span><br><span class="line"><span class="keyword">USE</span> EDUC</span><br><span class="line"><span class="keyword">GO</span></span><br><span class="line"><span class="keyword">SELECT</span> Student.SID, Student.Sname</span><br><span class="line"><span class="keyword">FROM</span> Student</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">SID</span> <span class="keyword">NOT</span> <span class="keyword">IN</span> ( <span class="keyword">SELECT</span> <span class="keyword">SID</span> <span class="keyword">FROM</span> SC )</span><br></pre></td></tr></table></figure><ul><li><strong>[NOT] EXISTS 子查询</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[NOT] EXISTS (子查询)</span><br></pre></td></tr></table></figure><p>当子查询的结果存在( 不为空集) 时，返回逻辑“真”值；否则返回逻辑“假”值。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*查询出选修了课程号16020010的学生的学号、姓名 */</span></span><br><span class="line"><span class="keyword">USE</span> EDUC</span><br><span class="line"><span class="keyword">GO</span></span><br><span class="line"><span class="keyword">SELECT</span> Student.SID, Student.Sname</span><br><span class="line"><span class="keyword">FROM</span> Student <span class="comment">--- 对于Student 表里的每一个SID</span></span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">EXISTS</span> <span class="comment">--- 是否满足子查询的选择条件</span></span><br><span class="line">( <span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">FROM</span> SC</span><br><span class="line"><span class="keyword">WHERE</span> Student.SID = SC.SID <span class="keyword">AND</span> CID = <span class="string">&#x27;16020010&#x27;</span> )</span><br></pre></td></tr></table></figure><ul><li><strong>比较子查询</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">列名  比较运算符 ALL | ANY | SOME(子查询)</span><br></pre></td></tr></table></figure><ul><li><p>当列名的值在关系上满足子查询中的值时，逻辑表达式的值为真，否则为假。</p></li><li><p>ANY 和SOME 的用法相同</p></li><li><p><strong>ALL比较子查询</strong></p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">列名 比较运算符 ALL ( 子查询)</span><br></pre></td></tr></table></figure><p>当列名的值在关系上满足子查询中的 所有值时，逻辑表达式的值为真，否则为假</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*从借阅表“Borrow ”中查询出读者编号RID最大的读者的借书情况。*/</span></span><br><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">FROM</span> Borrow</span><br><span class="line"><span class="keyword">WHERE</span> RID &gt;= <span class="keyword">ALL</span>( <span class="keyword">SELECT</span> RID <span class="keyword">FROM</span> Reader) <span class="comment">--子查询</span></span><br></pre></td></tr></table></figure><ul><li><strong>ANY |SOME 比较子查询</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">列名 比较运算符 ANY | SOME (子查询)</span><br></pre></td></tr></table></figure><ul><li>当列名的值在关系上满足子查询中的 任何一个值 时 ， 逻辑表达式的值为真 ， 否则为假 。</li><li>当比较运算符为“ = ” 时 ， “<code>列名=ANY(子查询)</code> ” 和 “ <code>列名IN ( 子查询) </code>” 所描述的条件是同样的 。</li><li>ANY 和SOME的用法相同 的用法相同 </li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*从图书数据库“Library”中查询当前借出的清华大学出版社的图书借期等信息*/</span></span><br><span class="line"><span class="keyword">SELECT</span> x.RID, x.BID, x.LendDate,y.Bname, y.Publisher, y.LentOut</span><br><span class="line"><span class="keyword">FROM</span> Borrow x, Book y  <span class="comment">-- 对于借阅表中的每借出的一本书</span></span><br><span class="line"><span class="keyword">WHERE</span> x.BID = <span class="keyword">ANY</span> <span class="comment">-- 判断其图书编号是否在子查询集合中</span></span><br><span class="line">(<span class="keyword">SELECT</span> BID <span class="comment">-- 已经借出清华大学出版社的图书编号集合</span></span><br><span class="line"><span class="keyword">FROM</span> Book</span><br><span class="line"><span class="keyword">WHERE</span> LentOut= <span class="string">&#x27;True&#x27;</span> <span class="keyword">AND</span> Publisher=<span class="string">&#x27;清华大学出版社&#x27;</span>)  </span><br><span class="line"><span class="comment">-- 已经借出的清华大学出版社出版的图书</span></span><br><span class="line"><span class="keyword">AND</span> x.BID=y.BID <span class="comment">--等值连接</span></span><br></pre></td></tr></table></figure><h1 id="联合查询"><a href="#联合查询" class="headerlink" title="联合查询"></a>联合查询</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">SELECT_1  UNION [ALL]</span><br><span class="line">SELECT_2  UNION [ALL]</span><br><span class="line">……</span><br><span class="line">SELECT_n</span><br></pre></td></tr></table></figure><p>对n 次查询结果进行并运算。ALL 表示<code>运算结果包括重复行</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*查询出“人民邮电出版社”和“清华大学出版社”出版的图书的作者名。 包括重复行。 （联合同一个表、同一字段！）*/</span></span><br><span class="line"><span class="keyword">USE</span> <span class="keyword">Library</span></span><br><span class="line"><span class="keyword">GO</span></span><br><span class="line"><span class="keyword">SELECT</span> Author</span><br><span class="line"><span class="keyword">FROM</span> Book</span><br><span class="line"><span class="keyword">WHERE</span> publisher = <span class="string">&#x27; 人民邮电出版社&#x27;</span></span><br><span class="line"><span class="keyword">UNION</span> <span class="keyword">ALL</span> <span class="comment">---  并运算，包括重复行</span></span><br><span class="line"><span class="keyword">SELECT</span> Author</span><br><span class="line"><span class="keyword">FROM</span> Book</span><br><span class="line"><span class="keyword">WHERE</span> publisher = <span class="string">&#x27; 清华大学出版社&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 结果等同于下列语句</span></span><br><span class="line"><span class="keyword">USE</span> <span class="keyword">Library</span></span><br><span class="line"><span class="keyword">GO</span></span><br><span class="line"><span class="keyword">SELECT</span> Author</span><br><span class="line"><span class="keyword">FROM</span> Books</span><br><span class="line"><span class="keyword">WHERE</span> publisher = <span class="string">&#x27; 人民邮电出版社&#x27;</span> <span class="keyword">OR</span> publisher = <span class="string">&#x27; 清华大学出版社&#x27;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java后端 </category>
          
          <category> SQLServer </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQLServer </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQLServer📦表的创建与管理</title>
      <link href="2021/01/15/%E5%90%8E%E7%AB%AF/MySQL/SQLServer_%E8%A1%A8%E7%9A%84%E5%88%9B%E5%BB%BA%E4%B8%8E%E7%AE%A1%E7%90%86/"/>
      <url>2021/01/15/%E5%90%8E%E7%AB%AF/MySQL/SQLServer_%E8%A1%A8%E7%9A%84%E5%88%9B%E5%BB%BA%E4%B8%8E%E7%AE%A1%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><div class="note success flat"><p>表是数据库对象，用于存储 <code>实体</code>和<code> 实体间的联系</code></p></div><ul><li><p><strong>表的构成</strong><br>  列：每一列用来保存对象的属性，也称为<code>字段</code><br>  行：每一行用来保存对象的元组，也称为 <code>数据行</code> 或<code> 记录</code></p></li><li><p><strong>表的完整性约束</strong></p></li></ul><div class="tabs" id="test2"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test2-1">实体完整性约束</button></li><li class="tab"><button type="button" data-href="#test2-2">域完整性约束</button></li><li class="tab"><button type="button" data-href="#test2-3">参照完整性</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test2-1"><ul><li>主键：Primary Key</li><li>唯一键：Unique</li><li>标识列：Identity Column</li><li>唯一索引：Unique Index</li><li>非空：NOT NULL</li></ul><div class="note success flat"><p>保证表的正确性</p></div><button type="button" class="tab-to-top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test2-2"><ul><li>数据类型：Data Type</li><li>默认值：Default</li><li>检查：Check</li><li>外键：Foreign Key</li><li>空或非空：UNLL/NOT NULL</li></ul><div class="note success flat"><p>保证表的每列数据正确性(在特定允许范围内)</p></div><button type="button" class="tab-to-top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test2-3"><ul><li>外键：Foreign Key</li></ul><div class="note success flat"><p>保证表之间的数据一致性</p></div><button type="button" class="tab-to-top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="T-SQL数据类型"><a href="#T-SQL数据类型" class="headerlink" title="T-SQL数据类型"></a>T-SQL数据类型</h1><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@96600b72213d606bd80eb00e6cf9e9cc0b3715b4/2021/01/16/dc7e16d4d86d2d587dd96c280581fac7.png"></p><h1 id="T-SQL创建表"><a href="#T-SQL创建表" class="headerlink" title="T-SQL创建表"></a>T-SQL创建表</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> 表名 </span><br><span class="line">(</span><br><span class="line">列名<span class="number">1</span>  数据类型 列级完整性约束,</span><br><span class="line"> 列名<span class="number">2</span>  数据类型 列级完整性约束,</span><br><span class="line">… …</span><br><span class="line">列名n  数据类型 列级完整性约束,</span><br><span class="line">表级完整性约束<span class="number">1</span>,</span><br><span class="line">… …</span><br><span class="line">表级完整性约束n</span><br><span class="line">)</span><br></pre></td></tr></table></figure><div class="tabs" id="test3"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test3-1">列级完整性约束</button></li><li class="tab"><button type="button" data-href="#test3-2">表级完整性约束</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test3-1"><ul><li>DEFAULT 常量表达式：默认值约束 </li><li>NULL / NOT NULL ：空值/非空值约束 </li><li>UNIQUE：唯一键约束 </li><li>PRIMARY KEY：主键约束（等价非空和单值约束）</li><li>REFERENCES 父表名（主键）：外键约束 </li><li>CHECK( 逻辑表达式)：检查约束</li><li>IDENTITY：标识列 </li></ul><button type="button" class="tab-to-top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test3-2"><ul><li>UNIQUE( 列名1,  列名2, …,  列名n)： <code>多个列名</code>唯一键约束。</li><li>PRIMARY KEY( 列名1,  列名2, …,  列名n)： <code>多个列名</code> 组合主键约束。</li><li>FOREIGN KEY( 外键) REFERENCES  主键表( 主键)：<code>多个列名 </code>组合外键约束。</li><li>CHECK( 逻辑表达式）：含有<code>多个列名</code>逻辑表达式的检查约束</li></ul><button type="button" class="tab-to-top"><i class="fas fa-arrow-up"></i></button></div></div></div><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">USE</span> <span class="keyword">Library</span></span><br><span class="line"><span class="keyword">GO</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> ReaderType   <span class="comment">--创建读者类型表&quot;ReaderType&quot;</span></span><br><span class="line">(TypeID <span class="built_in">int</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> PRIMARY <span class="keyword">KEY</span>,<span class="comment">-- 读者类型编号，主键</span></span><br><span class="line">Typename <span class="built_in">char</span>(<span class="number">8</span>) <span class="literal">NULL</span>,  <span class="comment">-- 读者类型名称</span></span><br><span class="line">LimitNum <span class="built_in">int</span> <span class="literal">NULL</span>, <span class="comment">-- 限借数量</span></span><br><span class="line">LimitDays <span class="built_in">int</span> <span class="literal">NULL</span>  <span class="comment">-- 限借天数</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> Reader  <span class="comment">--创建读者表&quot;Reader&quot;</span></span><br><span class="line">(</span><br><span class="line"><span class="comment">/************* 列级定义和约束 *************/</span> </span><br><span class="line">RID <span class="built_in">char</span>(<span class="number">10</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> PRIMARY <span class="keyword">KEY</span>, <span class="comment">-- 读者编号，主键</span></span><br><span class="line">Rname <span class="built_in">char</span>(<span class="number">8</span>) <span class="literal">NULL</span>,  <span class="comment">-- 读者姓名</span></span><br><span class="line">TypeID <span class="built_in">int</span> <span class="literal">NULL</span>, <span class="comment">-- 读者类型</span></span><br><span class="line">Lendnum <span class="built_in">int</span> <span class="literal">NULL</span>,  <span class="comment">-- 已借数量</span></span><br><span class="line"><span class="comment">/************* 表级定义和约束 *************/</span> /</span><br><span class="line"><span class="keyword">FOREIGN</span> <span class="keyword">KEY</span>(TypeID) <span class="keyword">REFERENCES</span></span><br><span class="line">ReaderType(TypeID) <span class="keyword">ON</span> <span class="keyword">DELETE</span> <span class="keyword">NO</span> <span class="keyword">ACTION</span> <span class="comment">-- 外键，不级联删除</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> Book  <span class="comment">--创建图书表&quot;Book&quot;</span></span><br><span class="line">(BID <span class="built_in">char</span>(<span class="number">13</span>) PRIMARY <span class="keyword">KEY</span>,  <span class="comment">-- 图书编号，主键</span></span><br><span class="line">Bname <span class="built_in">varchar</span>(<span class="number">42</span>) <span class="literal">NULL</span>, <span class="comment">-- 书名</span></span><br><span class="line">Author <span class="built_in">varchar</span>(<span class="number">20</span>) <span class="literal">NULL</span>, <span class="comment">-- 作者</span></span><br><span class="line">Publisher <span class="built_in">varchar</span>(<span class="number">28</span>) <span class="literal">NULL</span>, <span class="comment">-- 出版社</span></span><br><span class="line">Price <span class="built_in">decimal</span>(<span class="number">7</span>,<span class="number">2</span>) <span class="literal">NULL</span> <span class="keyword">CHECK</span> (Price&gt;<span class="number">0</span>) , <span class="comment">-- 定价，检查约束</span></span><br><span class="line">LentOut <span class="built_in">bit</span>    <span class="comment">--是否借出</span></span><br></pre></td></tr></table></figure><h1 id="T-SQL修改表"><a href="#T-SQL修改表" class="headerlink" title="T-SQL修改表"></a>T-SQL修改表</h1><ul><li>修改 列属性或约束</li><li>添加 列或约束</li><li>删除 列或约束</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 表名</span><br><span class="line">(<span class="keyword">ALTER</span> <span class="keyword">COLUMN</span>  列名 列定义 <span class="comment">--修改列定义或约束 </span></span><br><span class="line">|<span class="keyword">ADD</span> &#123;列名 数据类型 约束|<span class="keyword">CONSTRAINT</span>  约束名&#125;[,...n]</span><br><span class="line"><span class="comment">--增加新的列或约束 </span></span><br><span class="line">|<span class="keyword">DROP</span>&#123;<span class="keyword">COLUMN</span> 列名|<span class="keyword">CONSTRAINT</span>  约束名&#125;[,...n]</span><br><span class="line"><span class="comment">--删除已有的列或约束 </span></span><br><span class="line">…  …</span><br><span class="line">)</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*表Book中“Publisher ”的类型“varchar(28)”改为“varchar(30)”，且不能为空*/</span></span><br><span class="line"><span class="keyword">USE</span> <span class="keyword">Library</span></span><br><span class="line"><span class="keyword">GO</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> Book</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">COLUMN</span> Publisher <span class="built_in">varchar</span>(<span class="number">30</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>  <span class="comment">--修改列定义</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*为表“Reader”添加邮件地址列和约束。*/</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> Reader</span><br><span class="line"><span class="keyword">ADD</span> Email <span class="built_in">varchar</span>(<span class="number">20</span>) <span class="literal">NULL</span> <span class="comment">-- 添加列</span></span><br><span class="line"><span class="keyword">GO</span></span><br><span class="line"><span class="comment">/* 此处的GO 必不可少，必须上一句添加列完成之后，才能在下句中为其添加CHECK 约束*/</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> Reader</span><br><span class="line"><span class="keyword">ADD</span> <span class="keyword">CONSTRAINT</span> Price_check <span class="keyword">CHECK</span>(Price&gt;<span class="number">30</span> <span class="keyword">and</span> Price&lt;<span class="number">90</span>)  <span class="comment">--添加约束</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*删除“Reader ”中的“Email”的约束和列*/</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> Reader</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">CONSTRAINT</span> Price_check , <span class="keyword">COLUMN</span> Email  <span class="comment">--删除约束和列</span></span><br></pre></td></tr></table></figure><h1 id="T-SQL删除表"><a href="#T-SQL删除表" class="headerlink" title="T-SQL删除表"></a>T-SQL删除表</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> 表名</span><br></pre></td></tr></table></figure><h1 id="T-SQL操作表数据"><a href="#T-SQL操作表数据" class="headerlink" title="T-SQL操作表数据"></a>T-SQL操作表数据</h1><h2 id="添加数据行"><a href="#添加数据行" class="headerlink" title="添加数据行"></a>添加数据行</h2><ul><li><strong>INSERT…VALUES</strong><br>每次添加一行</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> [<span class="keyword">INTO</span>] 表名 [( 列名表)] <span class="keyword">VALUES</span>(常量表)</span><br></pre></td></tr></table></figure><p>列名表用于指定该数据表的列名 ，可以指定一列或多列 ， 顺序可以与表的列顺序不同 。 在数据表中未被指定的列必须支持空值或者默认值 ， 如果默认值存在 ， 该列使用默认值 ，否则 SQLServer会尝试为该列补上一个空值 。<br>常量表用于提供向表中插入的值 ， 常量表中提供的数据与列名表指定的列名个数 、 数据类型和顺序必须一致 。<br>当常量表中提供的数据与表定义的列在个数和顺序上完全一致时 ， 列名表可以省略 </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*为表“ 为表“ReaderType ”添加数据行*/</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> ReaderType <span class="keyword">VALUES</span>(<span class="number">1</span>, <span class="string">&#x27; 教师&#x27;</span>, <span class="number">6</span>, <span class="number">90</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> ReaderType <span class="keyword">VALUES</span>(<span class="number">2</span>, <span class="string">&#x27; 职员&#x27;</span>, <span class="number">4</span>, <span class="number">60</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> ReaderType <span class="keyword">VALUES</span>(<span class="number">3</span>, <span class="string">&#x27; 学生&#x27;</span>, <span class="number">3</span>, <span class="number">30</span>);</span><br></pre></td></tr></table></figure><ul><li><strong>INSERT..SELECT</strong><br>每次添加若干行</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> 表名  <span class="keyword">SELECT</span> 子查询</span><br></pre></td></tr></table></figure><p>SELECT查询子句用于指定输入表的值 ，通过SELECT查询生成结果集 ,并将其添加到INSERT后指定表中 。<br>此语句可以将其他数据源的行添加到现有的表中 。 必须保证接收新值的表中列的数据类型与源表中相应列的数据类型一致 。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*将图书表“ 将图书表“Book”中人民邮电出版社出版的图书添加到新建的表“BookPostTel”中。*/</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> BookPostTel</span><br><span class="line">(BID <span class="built_in">char</span>(<span class="number">13</span>) PRIMARY <span class="keyword">KEY</span>, <span class="comment">--图书编号，主键</span></span><br><span class="line">Bname <span class="built_in">varchar</span>(<span class="number">42</span>) <span class="literal">NULL</span>, <span class="comment">--书名</span></span><br><span class="line">Author <span class="built_in">varchar</span>(<span class="number">20</span>) <span class="literal">NULL</span>, <span class="comment">--作者 </span></span><br><span class="line">Publisher <span class="built_in">varchar</span>(<span class="number">28</span>) <span class="literal">NULL</span>,  <span class="comment">--出版社 </span></span><br><span class="line">Price <span class="built_in">decimal</span>(<span class="number">7</span>,<span class="number">2</span>) <span class="literal">NULL</span> <span class="keyword">CHECK</span> (Price&gt;<span class="number">0</span>)) <span class="comment">-- 定价,检查约束 </span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">/*） 将图书表“Book”中“人民邮电出版社”出版的图书添加到新建的“ BookPostTel”表*/</span></span><br><span class="line"><span class="keyword">INSERT</span> BookPostTel</span><br><span class="line"><span class="keyword">SELECT</span> BID, Bname, Author, Publisher, Price</span><br><span class="line"><span class="keyword">FROM</span> Book</span><br><span class="line"><span class="keyword">WHERE</span> Publisher = <span class="string">&#x27;人民邮电出版社`</span></span><br></pre></td></tr></table></figure><h2 id="更新数据"><a href="#更新数据" class="headerlink" title="更新数据"></a>更新数据</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> 表名 </span><br><span class="line"><span class="keyword">SET</span> 列名<span class="number">1</span> ＝表达式<span class="number">1</span>, … , 列名n ＝表达式n</span><br><span class="line">[<span class="keyword">WHERE</span> 逻辑表达式]</span><br></pre></td></tr></table></figure><p> 对于UPDATE所指定的表  ，当满足WHERE子句后的条件 （ 逻辑表达式为真 ） 时 ，SET子句为指定的列名赋上 “=” 号后表达式的值 </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*将读者类型表“ReaderType ”中,学生的原限借数 “3 ”增加2 本，原限借天数“30 ”增加5天*/</span></span><br><span class="line"><span class="keyword">USE</span> <span class="keyword">Library</span></span><br><span class="line"><span class="keyword">GO</span></span><br><span class="line"><span class="keyword">UPDATE</span> ReaderType</span><br><span class="line"><span class="keyword">SET</span> LimitNum = LimitNum + <span class="number">2</span>, LimitDays = LimitDays + <span class="number">5</span></span><br><span class="line"><span class="keyword">WHERE</span> Typename = <span class="string">&#x27; 学生&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="删除数据"><a href="#删除数据" class="headerlink" title="删除数据"></a>删除数据</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DELETE</span> 表名 </span><br><span class="line">[ <span class="keyword">WHERE</span> 逻辑表达式 ]</span><br></pre></td></tr></table></figure><p>删除表中符合WHERE子句指定条件的数据行 。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 删除表“BookPostTel”中作者周慧的图书信息*/</span></span><br><span class="line"><span class="keyword">USE</span> <span class="keyword">Library</span></span><br><span class="line"><span class="keyword">DELETE</span> BookPostTel</span><br><span class="line"><span class="keyword">WHERE</span> Author = <span class="string">&#x27;周慧&#x27;</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*删除表“BookPostTel”中所有图书信息*/</span></span><br><span class="line"><span class="keyword">USE</span> <span class="keyword">Library</span></span><br><span class="line"><span class="keyword">DELETE</span> BookPostTel</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java后端 </category>
          
          <category> SQLServer </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQLServer </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQLServer📦数据库创建与管理</title>
      <link href="2021/01/15/%E5%90%8E%E7%AB%AF/MySQL/SQLServer_%E6%95%B0%E6%8D%AE%E5%BA%93%E5%88%9B%E5%BB%BA%E4%B8%8E%E7%AE%A1%E7%90%86/"/>
      <url>2021/01/15/%E5%90%8E%E7%AB%AF/MySQL/SQLServer_%E6%95%B0%E6%8D%AE%E5%BA%93%E5%88%9B%E5%BB%BA%E4%B8%8E%E7%AE%A1%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><div class="note success flat"><p>👉👉👉<a href="https://www.liaoxuefeng.com/wiki/1177760294764384">SQL教程</a>||<a href="https://www.vxzsk.com/1393.html">MySql教程</a>||<a href="https://mooc1-1.chaoxing.com/mycourse/studentcourse?courseId=208834778&clazzid=17896696&enc=c000d7dfede85a60c5e4532781b84728&cpi=70838077&vc=1">数据库课程设计</a></p></div><h1 id="数据库概述"><a href="#数据库概述" class="headerlink" title="数据库概述"></a>数据库概述</h1><ul><li><p><strong>数据库（DataBase ，DB ）</strong></p><ol><li>数据的“仓库”<br>数据库可以<code> 存储</code> 数据，数据库是 <code>数据库对象</code> 的容器 ；<br>数据库 以<code> 操作系统文件的形式</code> 存储在磁盘上；</li><li>数据库能够使数据<code> 存储和检索</code> 以安全可靠的方式进行</li></ol></li><li><p><strong>数据库的分类</strong></p><ol><li>系统数据库</li><li>示例数据库</li><li>用户数据库</li></ol></li><li><p><strong>数据库文件</strong><br>  数据库文件与普通的磁盘文件没有什么不同一个数据库会拥有<code>至少 2 个 </code>数据库文件： 一个是为了<code>存放数据</code> ， 另一个 是为了<code>存放日志</code> 。</p></li></ul><div class="tabs" id="t1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#t1-1">主要数据文件</button></li><li class="tab"><button type="button" data-href="#t1-2">次要数据文件</button></li><li class="tab"><button type="button" data-href="#t1-3">事务日志文件</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="t1-1"><p>包含数据库的启动信息 、 数据库中其他文件的指针 、数据库级别的一些关键记录 关键记录(如：访问账 如：访问账户；权限设定；数据库共有多少个数据文件、日志文件、存放路径 日志文件、存放路径) 等 </p><div class="note warning flat"><p>每个数据库 <code>有且仅有一个 主数据文件</code><br>扩展名为<code>mdf</code>（Primary Database File）</p></div><button type="button" class="tab-to-top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="t1-2"><p>辅助数据文件，存储主要数据文件未存储的其他数据和对象</p><div class="note warning flat"><p>可以没有，也可以有多个<br>为 扩展名为 <code>ndf</code> （Secondary Database Files ）</p></div><button type="button" class="tab-to-top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="t1-3"><p>保存日志信息，以便用于恢复和跟踪数据库日志文件用于记录所有事务以及每个事务对数据库所做的修改。当数据库出现问题后，管理人员可以使用日志文件恢复数据库。</p><ul><li>每个数据库至少有一个日志文件，也可以有多个</li><li>最小为1MB （SQLServer2005 是512M） ）</li><li><code>建议放在与数据文件不同的存储器上</code></li><li>扩展名为<code>ldf </code>（ Log Database Files ） </li></ul><button type="button" class="tab-to-top"><i class="fas fa-arrow-up"></i></button></div></div></div><ul><li><p><strong>数据库文件组</strong><br>为了便于分配和管理，SQL Server 允许将多个 允许将多个数据库文件 （不同的磁盘）划分为一个文件集合，并用一个名称表示这一文件集合，即<code> 文件组</code><br>与数据库文件一样，文件组也分为 主要文件组 （Primary File Group）  和 次要文件组 （Secondary File Group）<br><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@5901ab03e3556d2744d52ee74226ee9b2a725621/2021/01/15/8ecb54b4ad0632bc92b852ccf6daf8f6.png"></p></li><li><p><strong>数据库对象</strong><br>数据库中所有被 存储、管理和使用 的 数据的不同结构形式</p></li><li><p>主要数据库对象： 数据库、关系图 、 表 、 键 、 约束 、 索引 、 视图 、 存储过程 、 触发器 、用户定义函数 、 用户和角色</p></li><li><p>组织结构： 节点构成树形逻辑结构</p></li><li><p><strong>数据库对象的命名</strong></p><ul><li>规则标识符（不带界定符）<br>字母、数字、下划线、 字母、数字、下划线、@ 、＃和美元符号组成<br>首字符不能为 <code>数字</code>和 <code>美元符号 </code><br>标识符不允许是T-SQL的保留字<br>标识符内不允许有 <code> 空格</code> 和 <code>特殊字符</code><br>长度小于128<br>例如： 例如：book_num </li><li>界定标识符<br>标识符中包含了SQL Server关键字或者包含了内嵌的空格和其他不是规则规定的字符，则要使用界定符<br>界定符号 [  和 ]<br>界定符号 “ 和 “<br>例如： “ book num ” 、 [1班刘德华]  、[select]</li></ul></li></ul><h1 id="T-SQL操作数据库"><a href="#T-SQL操作数据库" class="headerlink" title="T-SQL操作数据库"></a>T-SQL操作数据库</h1><ul><li>SQL （Structured Query Language）<br>结构化查询语言，是目前最为广泛使用的 结构化查询语言，是目前最为广泛使用的<code> 关系数据库标准</code>语言</li></ul><h2 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> <span class="keyword">Library</span> <span class="comment">-- 数据库名称</span></span><br><span class="line"><span class="keyword">ON</span> PRIMARY <span class="comment">-- 在主要文件组中建立主要数据文件</span></span><br><span class="line">(<span class="keyword">NAME</span>=<span class="keyword">Library</span>,  <span class="comment">-- 逻辑文件名</span></span><br><span class="line">FILENAME=<span class="string">&#x27;D:\ 图书管理数据\Library.mdf&#x27;</span>, <span class="comment">-- 物理文件路径和名字</span></span><br><span class="line"><span class="keyword">SIZE</span>=<span class="number">3</span>,  <span class="comment">-- 初始大小3MB</span></span><br><span class="line"><span class="keyword">MAXSIZE</span>=<span class="number">20</span>GB, <span class="comment">-- 最大容量为20GB</span></span><br><span class="line">FILEGROWTH = <span class="number">10</span>% <span class="comment">-- 增长速度为10%</span></span><br><span class="line">)</span><br><span class="line"><span class="keyword">LOG</span> <span class="keyword">ON</span> <span class="comment">-- 创建事务日志文件</span></span><br><span class="line">(<span class="keyword">NAME</span>=Library_log,  <span class="comment">-- 逻辑文件名</span></span><br><span class="line">FILENAME=<span class="string">&#x27;E:\ 图书管理日志\Library_log.ldf&#x27;</span>,<span class="comment">-- 物理文件路径和名字</span></span><br><span class="line"><span class="keyword">SIZE</span>=<span class="number">1</span>,  <span class="comment">-- 初始大小1MB</span></span><br><span class="line"><span class="keyword">MAXSIZE</span>=<span class="number">300</span>,  <span class="comment">-- 最大容量为600MB</span></span><br><span class="line">FILEGROWTH=<span class="number">10</span>%  <span class="comment">-- 增长速度为10%</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><ul><li><code>数据库名</code>： 在SQL Server中创建数据库的名称</li><li><code>ON</code>： 指明主要数据文件、次要数据文件和文件组的明确定义。</li><li><code>PRIMARY</code>： 该参数用于指定在其后的主要数据文件（默认第一个文件）和次要数据文件创建在主要文件组中。</li><li><code>FILEGROUP</code>： 该参数用于指明要创建的次要文件组，并在其后指定要创建在其中的次要数据文件。</li><li><code>LOG ON</code>：  指明事务日志文件的明确定义。如果没有此定义，系统会自动创建一个为所有数据文件总和 25% 大小或512KB大小的事务日志文件。</li></ul><h2 id="修改数据库"><a href="#修改数据库" class="headerlink" title="修改数据库"></a>修改数据库</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">DATABASE</span> &lt; 数据库名&gt;</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">ADD</span> <span class="keyword">FILE</span> &lt; 数据文件&gt; [, . . .,n] [<span class="keyword">TO</span> FILEGROUP  文件组名]</span><br><span class="line">|<span class="keyword">ADD</span> <span class="keyword">LOG</span> <span class="keyword">FILE</span> &lt; 事务日志文件&gt; [, . . .,n]</span><br><span class="line">|<span class="keyword">ADD</span> FILEGROUP 文件组名</span><br><span class="line"></span><br><span class="line">|REMOVE <span class="keyword">FILE</span> 逻辑文件名</span><br><span class="line">|REMOVE FILEGROUP 文件组名</span><br><span class="line"></span><br><span class="line">|<span class="keyword">MODIFY</span> <span class="keyword">FILE</span> &lt; 数据文件&gt; <span class="comment">--- 修改数据库文件属性</span></span><br><span class="line">|<span class="keyword">MODIFY</span> FILEGROUP 文件组名 <span class="comment">--- 修改文件组属性</span></span><br><span class="line">&#123;<span class="keyword">name</span>=new_filegroup_name | filegroup_property&#125;</span><br><span class="line">| <span class="keyword">MODIFY</span> <span class="keyword">NAME</span> =  新数据库名 <span class="comment">--- 修改数据库文件名</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>ADD FILE&lt; 数据文件&gt; [, . . .,n] [TO FILEGROUP  文件组名]：添加 ：添加数据文件到文件组。</li><li>ADD LOG FILE &lt; 事务日志文件&gt; [, . . . ,n]：添加事务日志文件。 </li><li>ADD FILEGROUP 文件组名：添加文件组。 </li><li>REMOVE FILE 逻辑文件名：删除逻辑文件（次要数据文件）。 </li><li>REMOVE FILEGROUP 文件组名：删除文件组（次要文件组）。 </li><li>MODIFY FILE &lt; 数据文件&gt;：修改数据库文件属性。</li><li>MODIFY NAME = 新数据文件名：修改数据库文件名。</li><li>MODIFY FILEGROUP 文件组名：修改文件组属性。</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--添加文件组“Library_Group”</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">DATABASE</span> <span class="keyword">Library</span></span><br><span class="line"><span class="keyword">ADD</span> FILEGROUP Library_Group</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--将一个新的数据文件&quot;Library_data2&quot; 添加到&quot;Library_Group&quot;</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">DATABASE</span> <span class="keyword">Library</span></span><br><span class="line"><span class="keyword">ADD</span> <span class="keyword">FILE</span>        <span class="comment">--添加次要数据文件</span></span><br><span class="line">(<span class="keyword">NAME</span>=Library_data2,</span><br><span class="line">FILENAME=<span class="string">&quot;D:\图书管理数据\Library_data2.ndf&quot;</span>,</span><br><span class="line"><span class="keyword">SIZE</span>=<span class="number">1</span>MB,</span><br><span class="line"><span class="keyword">MAXSIZE</span>=<span class="keyword">UNLIMITED</span>,</span><br><span class="line">FILEGROWTH=<span class="number">1</span>MB)</span><br><span class="line"><span class="keyword">TO</span> FILEGROUP Library_Group</span><br><span class="line"><span class="comment">--添加到次要文件组Library_GROUP</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 将次要数据文件&quot;Library_data2&quot;和次要文件组&quot;Library_Group&quot;从Library数据库中删除</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">DATABASE</span> <span class="keyword">Library</span></span><br><span class="line">REMOVE <span class="keyword">FILE</span> Library_data2   <span class="comment">--删除次要数据文件</span></span><br><span class="line"><span class="keyword">GO</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">DATABASE</span> <span class="keyword">Library</span></span><br><span class="line">REMOVE FILEGROUP Library_Group  <span class="comment">--删除次要文件组</span></span><br></pre></td></tr></table></figure><h2 id="删除数据库"><a href="#删除数据库" class="headerlink" title="删除数据库"></a>删除数据库</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">DATABASE</span> &lt;数据库名&gt;</span><br></pre></td></tr></table></figure><h1 id="分离和附加数据库"><a href="#分离和附加数据库" class="headerlink" title="分离和附加数据库"></a>分离和附加数据库</h1><ul><li><p><strong>附加和分离数据库</strong>：<br>可以切断数据库的使用 (比如当数据库日志很大占用了空间时，可以用分离数据库的方法来切断数据库，从而删除以前的数据库日志，来节省空间）。</p></li><li><p><strong>分离数据库</strong><br>分离数据库就是将某个数据库（如student_Mis）从SQL Server数据库列表中删除，使其不再被SQL Server管理和使用，但该数据库的文件（.MDF）和对应的日志文件（.LDF）完好无损。分离成功<br>后，我们就可以把该数据库文件（.MDF）和对应的日志文件（.LDF）拷贝到其它磁盘中作为备份保存</p></li></ul><div class="note warning flat"><p>只有分离了的数据库文件才能进行操作系统下的物理转移、复制、删除</p></div><ul><li><strong>附加数据库</strong><br>附加数据库就是将一个备份磁盘中的数据库文件（.MDF）和对应的日志文件（.LDF）拷贝到需要的计算机，并将其添加到某个SQLServer数据库服务器中，由该服务器来管理和使用这个数据库</li></ul><h2 id="分离数据库"><a href="#分离数据库" class="headerlink" title="分离数据库"></a>分离数据库</h2><ul><li><p>确保没有任何用户登录到数据库中</p></li><li><p>在 【 对象资源管理器 】 窗口中，展开 “ 数据库 ” 节点，右键需要分离的数据库，快捷菜单 “ 任务” —“分离“<br><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@f8cf5b482599c7a36360c5c5dc72add19084d76c/2021/01/15/d8d54a72450770c92f955edd7463862d.png"></p></li><li><p>打开的 【 分离数据库 】 对话框的 “ 数据库名称 ” 栏中显示了所选数据库的名称<br><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@9378b92e2e61b024a2cc71453a81e26cbb280a3d/2021/01/15/f45c660eceff38a639652a86b19fea0f.png"></p></li></ul><h2 id="附加数据库"><a href="#附加数据库" class="headerlink" title="附加数据库"></a>附加数据库</h2><ul><li><p>在 【 对象资源管理器 】 窗口中，用右键单击“数据库”节点，快捷菜单中选择“附加”命令<br><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@41362028dfcdfb689b8eebc38bd71ab46dcb41a0/2021/01/15/cf26066092559dfa39c9ad38ba0faf60.png"></p></li><li><p>在打开的 【 附加数据库 】 窗口中，单击“添加”按钮，会弹出 【 定位数据库文件 】 窗口，选择数据库所在的磁盘驱动器并展开目录树定位到数据库的 据库的.mdf  文件，如D:\ 教务管理数据文件\EDUC.mdf<br><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@c5f4b355da3ab2bf680e3e7fb04e0c0f6fbbcb27/2021/01/15/6b2f90cddf988765c73e5193a861d618.png"></p></li><li><p>单击 【 定位数据库文件 】 对话框的“确定”按钮，回到 【 附加数据库 】 窗口。可以为附加的数据库指定不同的名称和物理位置等<br><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@85fdf3a0f53236a66993c7a8696654bcc34810e8/2021/01/15/0426095803490dda4a015998d8b3ca87.png"></p></li><li><p>设置完毕后，单击“确定”按钮。数据库引擎将执行附加数据库任务。如果附加成功，在 【 对象资源管理器 】 中将会出现被附加的数据库。<br><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@c45f3fc9bc66d0c8e1500fb9c240238b57738389/2021/01/15/99ac5ffb5d30ef273a6f861714199ddd.png"></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Java后端 </category>
          
          <category> SQLServer </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQLServer </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>操作系统⚡I/O管理</title>
      <link href="2021/01/15/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F_IO%E7%AE%A1%E7%90%86/"/>
      <url>2021/01/15/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F_IO%E7%AE%A1%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h1 id="I-O管理"><a href="#I-O管理" class="headerlink" title="I/O管理"></a>I/O管理</h1><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/841fa902a42c4e677331af7912ad4fde.png"></p><h2 id="I-O设备分类"><a href="#I-O设备分类" class="headerlink" title="I/O设备分类"></a>I/O设备分类</h2><ul><li><p>按使用特性分类</p><ol><li>人机交互类外设<br>鼠标、键盘、打印机等等，传输速度慢</li><li>存储类<br>移动硬盘、光盘等，传输速度块</li><li>物理通信设备<br>调制解调器等，速度一般</li></ol></li><li><p>按传输速度分类</p><ol><li>低速设备<br>鼠标、键盘等，每秒几百字节</li><li>中速设备<br>激光打印机等，每秒数千到上万字节</li><li>高速设备<br>磁盘等，每秒数千至千兆字节</li></ol></li><li><p>按信息交换的单位</p><ol><li>块设备<br>如磁盘等，传输数据块，可寻址（随机读写）</li><li>字符设备<br>鼠标键盘，传输字符，不可寻址，输入输出采用中断驱动方式</li></ol></li></ul><h2 id="I-O控制器"><a href="#I-O控制器" class="headerlink" title="I/O控制器"></a>I/O控制器</h2><ul><li><p><strong>机械部件</strong><br>执行具体的I/O操作，比如鼠标键盘的按钮，显示器的屏幕，移动硬盘的磁臂</p></li><li><p><strong>电子部件</strong><br>  CPU和机械部件的中介，通常是插入主板的电路板<br>  又叫I/O控制器，设备控制器</p><ol><li><strong>接受和识别CPU的命令</strong><br>控制寄存器保存命令和参数</li><li><strong>向CPU报告设备状态</strong><br>状态寄存器记录设备状态，如：1表示空闲，0表示忙碌</li><li><strong>数据交换</strong><br>数据寄存器用于双方数据交换的缓冲区</li><li><strong>地址识别</strong><br>通过CPU提供的地址判断读写哪个寄存器</li></ol></li><li><p><strong>组成</strong></p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/212f3c6c9cf226974950b81c08da30d4.png"></p><ul><li><strong>内存映像I/O 和 寄存器独立编址</strong><br>统一编址/独立编址</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/369f9a725ef40b92687193a32d81504e.png"></p><h2 id="I-O控制方式"><a href="#I-O控制方式" class="headerlink" title="I/O控制方式"></a>I/O控制方式</h2><ul><li><strong>程序直接控制</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/c8207bb3ce99d3f28812105daa163e65.png"></p><ul><li><strong>中断驱动方式</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/4de1d22c12ae1af7c5a51dd2372aba92.png"></p><ul><li><strong>直接存储器存取(DMA)方式</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/e82bebeab44dfc1375309c774b8ab8cd.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/5fb3a4d8e66831b9a01b5a333cd44336.png"></p><ul><li><strong>通道控制方式</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/378f1ea022a8162db2dc88dab6cbb2c8.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/b465db97c2c140914517931a72fc01de.png"></p><ul><li><strong>对比</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/f9b61bfe6d6533744162e109d4db4b29.png"></p><h2 id="I-O软件层次结构"><a href="#I-O软件层次结构" class="headerlink" title="I/O软件层次结构"></a>I/O软件层次结构</h2><ul><li><strong>用户层软件</strong><br>提供易用的库函数</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/26e762ed21e497fc84190d106516923e.png"></p><ul><li><strong>设备独立性软件</strong><br>提供调用接口(read/write系统调用)<br>设备保护<br>差错处理<br>设备分配与回收<br>数据缓冲区管理<br>建立逻辑设备名到物理设备名的映射关系<br>根据设备类型调用相应的驱动程序</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/2a03874beb3992f636423569dbceb5b4.png"></p><ul><li><strong>设备驱动程序</strong><br>设置设备的寄存器<br>检测设备状态</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/61e39c3eaed5fcf1f08fc77e7b7551c0.png"></p><ul><li><strong>中断处理程序</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/95ce891b6852f81a2cb3120f8e0ffd61.png"></p><h2 id="I-O核心子系统"><a href="#I-O核心子系统" class="headerlink" title="I/O核心子系统"></a>I/O核心子系统</h2><p>由设备独立性软件、设备驱动程序、中断处理程序组成，<br>属于操作系统内核部分，即I/O系统</p><h3 id="假脱机技术-SPOOLing"><a href="#假脱机技术-SPOOLing" class="headerlink" title="假脱机技术(SPOOLing)"></a>假脱机技术(SPOOLing)</h3><p>在用户层软件实现，但是408大纲将其归入I/O核心子系统</p><ul><li><p> <strong>脱机技术</strong><br>脱机技术指的是脱离主机的控制进行输入输出操作<br>很久以前是纸带输入，速度太慢，于是通过外围控制机将纸带数据输入到磁带，再输入主机，输出同理<br>缓解CPU与慢速I/O设备的速度矛盾</p></li><li><p><strong>假脱机技术实现原理</strong></p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/294494befcdb3cef54c51186ac1d7eec.png"></p><ul><li><strong>共享打印机原理分析</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/d51701e8bf1fbb9d0630f32d079cac26.png"></p><h3 id="设备分配与回收"><a href="#设备分配与回收" class="headerlink" title="设备分配与回收"></a>设备分配与回收</h3><ul><li><p>设备分配应该考虑的因素</p><ol><li>设备的固有属性<br>独占设备、共享设备、虚拟设备(SPOOLing技术将独占设备改造成虚拟的共享设备)</li><li>设备分配算法<br>先来先服务、优先级高者优先、短任务优先等等</li><li>设备分配的安全性<br>安全分配方式：串行使用设备，为进程分配一个设备后将进程阻塞，I/O完成再唤醒。不会产生死锁<br>不安全分配方式：进程请求I/O，操作系统负责分配设备，进程可以继续执行或者请求新的I/O，直到某个I/O无法满足才阻塞进程。可能产生死锁</li></ol></li><li><p>静态分配和动态分配<br>  进程运行前分配全部资源/运行时动态分配，见死锁那章</p></li><li><p>数据结构<br>  一个通道控制多个设备控制器，一个设备控制器控制多个设备</p></li><li><p>分配过程</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/2799b9f792d0c4b37f05bed3e5d01870.png"></p><ul><li>分配过程改进</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/7402da3e85d0454564595bcb4eea6bc7.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/b685ebaa2793533d4851c732b59421a3.png"></p><h3 id="缓冲区管理"><a href="#缓冲区管理" class="headerlink" title="缓冲区管理"></a>缓冲区管理</h3><ul><li><p>缓冲区的作用</p><ol><li>缓冲区可以使用专门的硬件寄存器实现，成本高容量小，更多时候使用内存做缓冲区</li><li>缓和CPU与I/O的速度矛盾</li><li>减少对CPU的中断频率，放宽对CPU中断的时间限制（中断驱动的字符型设备）</li><li>解决数据粒度不匹配的问题（字符型/块型）</li><li>提高CPU与I/O的并行性</li></ol></li><li><p><strong>单缓冲</strong></p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/6ec49ee53ac77d8ac79f5a3d0a667f8a.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/3e7298c4ccbc0d42abb56c651dbad863.png"></p><ul><li><strong>双缓冲</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/36e52d2b73e0353f30cf5fb6d5637e36.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/36a14ebcdb5bafdecd043eaa936e6ece.png"></p><ul><li><strong>循环缓冲</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/2125e12c4ca05881880fee2526d95275.png"></p><ul><li><strong>缓冲池</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/9438f9747cbace132ec876cde0751043.png"></p>]]></content>
      
      
      <categories>
          
          <category> 计算机基础 </category>
          
          <category> 操作系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 操作系统 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>操作系统⚡文件管理</title>
      <link href="2021/01/15/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F_%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86/"/>
      <url>2021/01/15/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F_%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h1 id="文件管理"><a href="#文件管理" class="headerlink" title="文件管理"></a>文件管理</h1><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/8cb3890c5cfca0ce03f7e5c3893cd027.png"></p><ul><li>文件的属性<ol><li>文件名<br>主要是给用户看，同一个目录下不允许重名文件</li><li>标识符<br>一个系统内各文件标识符唯一，对用户毫无可读性，给操作系统看的</li><li>类型<br>文件扩展名</li><li>位置<br>文件存放路径，给用户看的，在外存中的地址用户是看不到的</li><li>大小</li><li>创建时间</li><li>上次修改/访问时间</li><li>所有者信息</li><li>保护信息</li></ol></li></ul><h1 id="文件的逻辑结构"><a href="#文件的逻辑结构" class="headerlink" title="文件的逻辑结构"></a>文件的逻辑结构</h1><ul><li>什么是逻辑结构</li></ul><p><strong>逻辑结构</strong>：在用户看来，文件内部的数据是如何组织起来<br><strong>物理结构</strong>：操作系统看来，文件的数据如何存放在外存中</p><ul><li><strong>无结构文件</strong><br>又叫流式文件，比如txt，由一些二进制或者字符流组成</li></ul><h2 id="有结构文件"><a href="#有结构文件" class="headerlink" title="有结构文件"></a>有结构文件</h2><ul><li><p>又叫记录式文件，比如数据库表，由一组相似的记录组成</p></li><li><p>记录是一组相关数据线的集合，每条记录有一个数据项可作为关键字</p></li><li><p>根据记录的长度是否相等，分为：定长记录，可变长记录</p></li><li><p><strong>顺序文件</strong></p><ul><li><strong>链式存储</strong><br>逻辑上相邻的记录，在物理上离散存储。<br>无论是定长/可变长记录，都无法实现随机存取，只能从链头开始遍历</li><li><strong>顺序存储</strong><br>逻辑上相邻的记录，在物理上也相邻。<br>没有说明的情况下，顺序文件指采用顺序存储的顺序文件</li></ul><ol><li><strong>可变长记录</strong><br>无法实现随机存取</li><li><strong>定长记录</strong><br>可以实现随机存储。如果采用串结构(记录顺序与关键字无关)，无法快速找到某个关键字对应的记录，如果采用顺序结构(记录按关键字排序的)，可以使用折半查找快速找到记录</li></ol></li><li><p><strong>索引文件</strong></p><ul><li>索引表本身是定长记录的顺序文件，索引表项包含索引号，长度，指针，真正的记录可以在物理上离散存储。</li><li>索引号可以是关键字，这样就能折半查找加快检索速度，用于对信息处理及时性要求高的场合，解决了顺序文件增删不便的问题</li><li>可以用不同的数据项建立多个索引表</li></ul></li><li><p><strong>索引顺序文件</strong></p><ul><li>将记录分组，每一个组对应一个索引表项</li><li>检索记录时先检索索引表，找到分组，再顺序查找分组</li><li>记录过多时，可以建立多级索引表</li><li>记录N的表，平均查找次数是N/2</li></ul></li></ul><h1 id="文件目录"><a href="#文件目录" class="headerlink" title="文件目录"></a>文件目录</h1><ul><li><p><strong>文件控制块(FCB)</strong><br>一个FCB 对应一个文件，一个FCB就是一个目录项，FCB的有序集合叫“文件目录”<br>FCB包含了文件的基本信息，存取控制信息，使用信息等等，最重要的是文件名、文件存放的物理地址<br>对目录的操作:搜索、创建文件、删除文件、显示文件、修改文件</p></li><li><p><strong>单级目录结构</strong></p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/8a0b4efcd29db4cced9e2cb247b09f15.png"></p><ul><li><strong>两级目录结构</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/3cf10a2b20534a4d42023945fdc63f72.png"></p><ul><li><strong>多级(树形)目录结构</strong><br>共享不方便</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/aef4051a93db04e86ca7c72c2c2fbd2f.png"></p><ul><li><strong>无环图目录结构</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/f6590892b721e118e6ec125c451395f5.png"></p><ul><li><strong>索引节点(FCB改进）</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/458da625bb3ef4b7d0550f5824fd4e60.png"></p><h1 id="文件的物理结构"><a href="#文件的物理结构" class="headerlink" title="文件的物理结构"></a>文件的物理结构</h1><ul><li><strong>文件块、物理块</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/9e0536d5a5a087ba0172451339110976.png"></p><h2 id="连续分配"><a href="#连续分配" class="headerlink" title="连续分配"></a>连续分配</h2><ul><li>优点：支持随机访问；顺序访问时速度最快（移动磁头所需的时间短）</li><li>缺点：不方便文件扩展，每次扩展都得迁移到一段连续的空间，代价大；存储空间利用率低，产生磁盘碎片</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/9cf825dd079e0bc8c633914c5f798618.png"></p><h2 id="链接分配"><a href="#链接分配" class="headerlink" title="链接分配"></a>链接分配</h2><ul><li><strong>隐式链接</strong><br>方便拓展，磁盘利用率高<br>不支持随机访问，查找效率低</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/c933ccf03e736d7999a3246d65c5e030.png"></p><ul><li><strong>显式链接</strong><br>逻辑块号转物理块号不需要访问磁盘，因此支持随机访问；扩展方便且不会有磁盘碎片<br>缺点是FAT要占用一定的存储空间</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/ea24291a7c921ad7b56dd5101f5cf6a2.png"></p><h2 id="索引分配"><a href="#索引分配" class="headerlink" title="索引分配"></a>索引分配</h2><p>每一个文件建立一张索引表，其中记录文件的逻辑块对应的物理块。存放索引表的磁盘块叫索引块，存放文件数据的磁盘块叫数据块。</p><ul><li><strong>链接方案</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/7b06a91634ab0108bc54fd9820475128.png"></p><ul><li><strong>多层索引</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/2583fd053336ff2a32b63f4b24fdb46f.png"></p><ul><li><strong>混合索引</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/c4fdb3f9861d1a37e234bf73cebb3290.png"></p><ul><li><strong>对比</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/2387e02852ddb16f92beea74b851a9e5.png"></p><h2 id="对比"><a href="#对比" class="headerlink" title="对比"></a>对比</h2><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/8e0caa75cbdb07a6acf1bcd1acc047fa.png"></p><h1 id="文件存储空间管理"><a href="#文件存储空间管理" class="headerlink" title="文件存储空间管理"></a>文件存储空间管理</h1><ul><li><strong>存储空间划分与初始化</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/0960e40a11a50610a063a89c9291b238.png"></p><h2 id="管理方法"><a href="#管理方法" class="headerlink" title="管理方法"></a>管理方法</h2><ul><li><strong>空闲表法</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/9f93c30bbc2e803a2bd12fabcc9ebcbc.png"></p><ul><li><p><strong>空闲链表法</strong></p><ol><li>空闲盘块链<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/e80227bfee4ddd88ea0543e0db25ca0d.png"></li><li>空闲盘区链<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/4960ca076e0d2fc5de879058a70715a1.png"></li></ol></li><li><p><strong>位示图法</strong></p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2021/01/08/9b107b740bff30f726cd647060d78529.png"></p><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/9e8ea8088ae40d789f6d8cf260f36f43.png"></p><ul><li><strong>成组链接法</strong><br>适用于大型文件系统，文件卷的目录区中，专门用一个磁盘块作为超级块，系统启动时读入内存，并且保持内外存超级块数据同步<br>比较复杂，看视频：<a href="https://www.bilibili.com/video/BV1YE411D7nH?p=52">https://www.bilibili.com/video/BV1YE411D7nH?p=52</a></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/d3d0b43a9930c6674bc7cb467cc2a4ec.png"></p><h1 id="文件的基本操作"><a href="#文件的基本操作" class="headerlink" title="文件的基本操作"></a>文件的基本操作</h1><ul><li>创建文件(creat)<ol><li>在外存中找到文件所需的空间</li><li>根据文件路径找到对应目录，创建文件对应的目录项​</li></ol></li><li>删除文件(delete)<ol><li>根据路径找到目录文件，找到文件名对应的目录项</li><li>回收文件占用的磁盘块</li><li>.删除目录项​​</li></ol></li><li>打开文件(open)<ol><li>根据路径找到目录文件，找到文件名对应的目录项，检测用户权限</li><li>将目录项复制到该进程在内存中的打开文件表中，返回表目编号​(索引号/文件描述符) </li></ol></li><li>关闭文件(close)<ol><li>删除进程的打开文件表中对应项</li><li>回收分配给该文件的内存空间等资源</li><li>系统打开文件表的打开计数器count-=1(归零时删除该项)​​</li></ol></li><li>读文件(read)<br>  需提供进程打开文件表中的索引号，读入的数据量，数据在内存中存放的位置<br>  从读指针​指向的外存位置读取指定大小的数据到指定的内存区域</li><li>写文件(write)<br>  需要提供打开文件表中的索引号，写出的数据量，写回外存的数据位置(写指针指向)</li></ul><h1 id="文件共享"><a href="#文件共享" class="headerlink" title="文件共享"></a>文件共享</h1><ul><li><strong>基于索引结点的共享(硬链接)</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/3c9338371fa86c7786b4ccb44689caed.png"></p><ul><li><strong>基于符号链的共享(软链接)</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/ae84e44309b34cfd622f053f47190759.png"></p><h1 id="文件保护"><a href="#文件保护" class="headerlink" title="文件保护"></a>文件保护</h1><ul><li>口令保护<br>  FCB中保存口令，访问时与用户提供的口令对比<br>  开销小，但是不够安全</li><li>加密保护<br>  用密码对文件数据流加密，访问时用密码解密，比如异或加密<br>  保密性强，不需要存储密码，但是加密/解密要花费一定的时间</li><li>访问控制<br>  每一个文件FCB中增加一个访问控制表(ACL)，控制各用户的访问权限<br>  精简的访问列表，以组为单位，标记其访问权限，比如Linux里面分：所有者，所属组，其他人</li></ul><h1 id="文件系统的层次结构"><a href="#文件系统的层次结构" class="headerlink" title="文件系统的层次结构"></a>文件系统的层次结构</h1><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/9703c1be05bce180167e6fa59878359c.png"></p><h1 id="磁盘管理"><a href="#磁盘管理" class="headerlink" title="磁盘管理"></a>磁盘管理</h1><h2 id="磁盘的结构"><a href="#磁盘的结构" class="headerlink" title="磁盘的结构"></a>磁盘的结构</h2><ul><li><strong>磁盘/磁道/扇区</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/e2fd159374ac453b5c36d9e943ad7cf1.png"></p><ul><li><strong>如何在磁盘中读写数据</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/fb1c99d8be588db49c4ac54666d26e99.png"></p><ul><li><strong>盘面/柱面/物理地址</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/897ccf51aaaff4967dc66f561ac62f80.png"></p><ul><li><strong>磁盘分类</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/f8d0cbc3ad9baf31d441fc3c5062c63e.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/ebbceb79d6505750496e61cf6fe1bc1b.png"></p><h2 id="磁盘调度算法"><a href="#磁盘调度算法" class="headerlink" title="磁盘调度算法"></a>磁盘调度算法</h2><ul><li><strong>读写时间</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/ab37e3ed8e17a95235ae54100ea8f8db.png"></p><ul><li><strong>调度算法</strong><ol><li><strong>先来先服务(FCFS)</strong><br>根据进程请求访问磁盘的先后顺序调度<br>公平；如果大量进程访问的磁道很分散，虚拟会很差​</li><li><strong>最短寻道时间优先(SSTF)</strong><br>优先处理当前磁头最近的磁道，保证寻道时间最短（眼前最优，未必整体最优）<br>性能较好，但是可能产生饥饿现象</li><li><strong>扫描算法(SCAN)</strong><br>又叫电梯算法，在SSTF算法的基础上，规定磁头只有移动到磁道尽头（最外侧或者最内侧）才能往回移动<br>性能较好，不会饥饿；但是只能扫描到最边上的磁道才能改变磁头方向，越外侧的的磁道，响应频率越高</li><li><strong>LOOK调度算法</strong><br>改进SCAN算法，磁头边移动边观察(LOOK)，如果移动方向没有请求了，就不必继续扫描，直接调头</li><li><strong>循环扫描算法(C-SCAN)</strong><br>只有磁头朝着某个方向移动（比如磁道号增大方向）时才处理访问请求，移动到最边上后直接返回到另一边（0号磁道），返回途中不处理请求</li><li><strong>相比SACN算法</strong><br>各个位置的磁道响应频率很平均​</li><li><strong>C-LOOK算法</strong><br>改进C-SCAN算法，磁头移动方向上如果没有请求了，就直接返回到最靠近边缘的请求磁道即可</li></ol></li></ul><h2 id="减少磁盘延时"><a href="#减少磁盘延时" class="headerlink" title="减少磁盘延时"></a>减少磁盘延时</h2><ul><li><p><strong>交替编号</strong><br>一个盘面上，让逻辑相邻的扇区在物理上有一定间隔，使读取连续逻辑扇区所需的延迟时间更小<br>​（如果没有间隔，读入N号扇区时数据时需要一些时间处理，导致错过N+1号扇区，磁盘需要再转一圈才能读到N+1）</p></li><li><p><strong>磁盘物理地址设计</strong></p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/2ddce19efb6ffb45e550e494c2674ca5.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/96815efaafe28326e1cf29720642d2f2.png"></p><ul><li><strong>错位命名</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/346b8e84564845047ac77b7a84733f2d.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/5842e0c4e82f9a00c9df4f1718b63d71.png"></p><h2 id="磁盘管理-1"><a href="#磁盘管理-1" class="headerlink" title="磁盘管理"></a>磁盘管理</h2><ul><li><strong>磁盘初始化</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/4042a22e2a51b1943d413286e53f2c9d.png"></p><ul><li><strong>引导快</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/f407760fd3c9f41870514841b10bec42.png"></p><ul><li><strong>坏块管理</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/62341e5c566ea63d0ee9af4e96922f1d.png"></p>]]></content>
      
      
      <categories>
          
          <category> 计算机基础 </category>
          
          <category> 操作系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 操作系统 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>操作系统⚡内存管理</title>
      <link href="2021/01/15/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F_%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/"/>
      <url>2021/01/15/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F_%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h1 id="内存管理"><a href="#内存管理" class="headerlink" title="内存管理"></a>内存管理</h1><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/339f84440daad4b17a82464ae8c6d840.png"></p><h2 id="内存基础"><a href="#内存基础" class="headerlink" title="内存基础"></a>内存基础</h2><ul><li><p>什么是内存<br>  内存是用于存放数据的硬件，<strong>程序执行前需要先放到内存中才能被CPU处理</strong></p><ul><li><strong>储存单元</strong><br>按<strong>字节</strong>编址：一个存储单元1字节，8个二进制位，1字节对应一个地址<br>按<strong>字长</strong>编址：一个存储单元1个字长，字长16位的计算机一个存储单元16个二进制位<br>2^10=1K           2^20=1M               2^30=1G<br>4G内存的地址长度: 4*2^30=2^32  ，所以需要32个二进制位(32位操作系统最大支持4GB内存，指针大小4字节)</li><li><strong>内存地址</strong><br>内存从0开始，每一个地址对应一个<strong>存储单元</strong></li></ul></li><li><p>进程运行的基本原理</p><ul><li><strong>指令的工作原理</strong><br>CPU按照程序段的指令去内存某个位置存取数据，一条 指令由操作码+若干参数组成<br>编译生成的指令中一般使用逻辑地址</li><li><strong>逻辑地址/物理地址</strong><br>逻辑地址（相对地址）<br>物理地址（绝对地址）</li></ul></li><li><p>从写程序到程序运行</p><ol><li><strong>编辑源文件</strong></li><li><strong>编译</strong><br>源代码文件(.c)生成目标模块(.o)，将高级语言翻译为机器语言<br>每一个目标模块都具有独立的逻辑地址 0-xxx</li><li><strong>链接</strong><br>目标模块生成装入模块(可执行文件,如.exe)，链接完成使得各模块形成整体的链接地址</li><li><strong>装入(载)</strong><br>将装入模块装入内存运行，装入后形成物理地址</li></ol></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/8e00f6dbac6c69dbfeb08565f887d6a6.png"></p><ul><li><p>三种链接方式</p><ol><li><strong>静态链接</strong><br>装入前链接成一个完整模块</li><li><strong>装入时动态链接</strong><br>运行前边装入边链接</li><li><strong>运行时动态链接</strong><br>运行时需要什么模块才装入并链接</li></ol></li><li><p>三种装入方式</p><ol><li><strong>绝对装入</strong><br>编译时产生绝对地址，只适用于单道程序环境(那时候还没有操作系统，编译器负责实现)</li><li><strong>可重定位装入(静态重定位)</strong><br>编译链接后的装入模块地址是逻辑地址，装入时进行重定位，将指令中逻辑地址+装入的起始物理地址得到真实的物理地址<br>一个作业装入内存时，<strong>必需分配其要求的全部内存空间</strong>，内存不够就不能装入<br>作业一旦进入内存，<strong>运行期间就不能再移动，也不能再申请内存空间，因为地址都写死了</strong><br>早期多道批处理操作系统使用</li><li><strong>动态运行时装入(动态重定位)</strong><br>运行时才将逻辑地址转换为物理地址，需要设置**重定位寄存器(或者叫基址寄存器)**允许程序在内存中发生移动，而且程序可以分配到不连续的储存区，也支持动态申请内存<br>只需装入部分代码即可投入运行，可以向用户提供一个比存储空间大得多的地址空间<br>现代操作系统使用</li></ol></li></ul><h1 id="内存空间分配与回收"><a href="#内存空间分配与回收" class="headerlink" title="内存空间分配与回收"></a>内存空间分配与回收</h1><h2 id="连续分配管理方式"><a href="#连续分配管理方式" class="headerlink" title="连续分配管理方式"></a>连续分配管理方式</h2><p>为用户进程分配的内存必须是一个连续的内存空间</p><ul><li><strong>单一连续分配</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/0081a0e4a2e83c34175718736ba82557.png"></p><ul><li><strong>固定分区分配</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/5058bbf39550bd01e121ff658145bcd0.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/67c30dbd1599bee950756f950ef917ca.png"></p><ul><li><strong>动态分区分配</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/08767bf29ec2c778d70e77b5f4b1ab02.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/9d28c7547a80d70088163e835a6a5b0d.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/dfd3883c7a984ac035dcfbbe0394ce49.png"></p><blockquote><p>回收内存时，回收区前后的空闲分区应该合并</p></blockquote><ul><li><strong>动态分区分配算法</strong><ol><li><strong>首次适应(First Fit)</strong><br>空闲分区按地址递增顺序排列，每次分配内存时查找空闲分区链(表)，找到第一个满足要求的分区即可<br>每次从低地址部分查找，高地址的大分区更有可能被保存下来<br>效果最佳</li><li><strong>最佳适应(Best Fit)</strong><br>空闲分区按容量递增顺序链接，每次分配内存时按顺序查找内存分区链(表)，找到第一个可以满足的空闲分区<br>优先使用最小连续内存区，尽可能多的留下大块空闲区，满足大进程需求，但是会留下非常多难以利用的外部碎片</li><li><strong>最坏适应(Worst Fit)</strong><br>有叫最大适应算法(Largest Fit)<br>空闲分区按容量递减顺序排序，每次分配找到能满足要求的第一个空闲分区<br>优先使用最大的连续空闲区，使得分配后的剩余空闲区不会太少，方便使用，但是如果后面需要大内存区间就没办法了</li><li><strong>邻近适应(Next Fit)</strong><br>又叫循环首次适应算法<br>空闲分区按地址递增顺序构成循环链表，每次内存分配时从刚才查找结束位置开始，找到第一个能满足要求的空闲分区<br>无论是低地址还是高地址的空闲分区，都有相同的概率被使用，导致最后无大分区可用​</li><li><strong>对比</strong></li></ol></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/50d2425ddf6b7419c25b81048e422055.png"></p><h2 id="非连续分配管理方式"><a href="#非连续分配管理方式" class="headerlink" title="非连续分配管理方式"></a>非连续分配管理方式</h2><p>为用户进程分配的内存可以是一个分散的内存空间<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/28aefd8d61408a8fc73fa4de0eb88cb9.png"></p><h3 id="基本分页存储管理"><a href="#基本分页存储管理" class="headerlink" title="基本分页存储管理"></a>基本分页存储管理</h3><h4 id="分页管理"><a href="#分页管理" class="headerlink" title="分页管理"></a>分页管理</h4><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/9aa76ab94a1dbfae0f77f253568a809a.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/b95575785e694b93bba47d918ef7ed94.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/09faeccfa419d0484cda4eeaea7080f3.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/0fec9bc2dfe05653f27ef07bccbcf388.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/a3133228d3b4efc94a2469d17d0b5203.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/36b98f7da4ecbc6b1e226b84d7135526.png"></p><blockquote><p>基本分页存储管理的思想：把内存分成一个个相等的小分区，在按分区大小把进程拆分成一个个小部分 (x)</p></blockquote><h4 id="基本地址变换机构"><a href="#基本地址变换机构" class="headerlink" title="基本地址变换机构"></a>基本地址变换机构</h4><ul><li><p>页表寄存器(PTR)<br>  保存页表在内存中的起始地址F和页表长度M<br>  进程未执行的时候，F和M放在PCB中，进程被调度时，操作系统内核将其放到PTR中</p></li><li><p>地址转换过程</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/2eb2b028d5cd785c98260d6fbc118c24.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/b8eaa75727fb2d37f95172d5dcd91c50.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/c12017d76287105807bebd09920d3783.png"></p><ul><li>对页表项目的探讨</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/2154b9952fc29517e016662477ea7b1b.png"></p><h4 id="快表地址变换机构"><a href="#快表地址变换机构" class="headerlink" title="快表地址变换机构"></a>快表地址变换机构</h4><ul><li><p>局部性原理</p><ol><li>时间局部性:如果执行了程序中的某条指令,那么不久后这条指令很有可能再次执行;如果某个数据被访问过,不久之后该数据很可能再次被访问。(因为程序中存在大量的循环)</li><li>空间局部性:一旦程序访问了某个存储单元,在不久之后,其附近的存储单元也很有可能被访问。(因为很多数据在内存中都是连续存放的）</li></ol></li><li><p>什么是快表(TLB)<br>  又称联想寄存器(TLB) ,是一种访问速度比内存快很多的高速缓冲存储器,用来存放当前访问的若干页表项,以加速地址变换的过程。与此对应,内存中的页表常称为慢表。</p></li><li><p>地址变换过程</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/ec475874aa13a75c6efae864ad8089bb.png"></p><h4 id="两级页表"><a href="#两级页表" class="headerlink" title="两级页表"></a>两级页表</h4><ul><li><p>单级页表的问题<br>Q1：所有的页表项都要连续存放，页表很大时，需要占用很多很多个连续的页框。<br>比如32位逻辑地址分页储存，页面大小4K，则页表最多2^20项，一项占4B，一共需要1024个连续的页框才能放得下<br>Q2：没有必要让整个页表常驻内存，进程在一段时间可能只访问某几个特定的页面</p></li><li><p>两级页表原理</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/76d6a57cd465b8976246e5e9196edc2e.png"></p><ul><li>如何实现地址变换</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/657bc76d734af9c9af1d0a9464585fc3.png"></p><ul><li>注意事项</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/dec992c358e87fa5e9f4fd8b36c3ea51.png"></p><h3 id="基本分段存储管理"><a href="#基本分段存储管理" class="headerlink" title="基本分段存储管理"></a>基本分段存储管理</h3><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/16e9a89e972005edfe77c27ae941e8f2.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/7996687da1d81625eb2e670b73bf4631.png"></p><ul><li><strong>什么是段表</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/04c6fd47091dcdf52e5a5bed77b9ff8a.png"></p><ul><li><strong>如何实现地址变换</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/263cf986df0af5c56a30be57805b6bcf.png"></p><ul><li><strong>分段VS分页</strong>-</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/7158352d0aca697027068159d02d8cd8.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/8ab1305deb6e4491afc4e182ac4b9d0b.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/83f024c57174873268a1e390b80a2e68.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/242d7ee1fa0e36a0309c03ec7eb7a326.png"></p><h3 id="段页式存储管理"><a href="#段页式存储管理" class="headerlink" title="段页式存储管理"></a>段页式存储管理</h3><ul><li>分段分页的优缺点</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/391b4cf087b6c14ebbb1766382492a23.png"></p><ul><li><strong>段页式管理</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/137833abba4059c0befbb3b083a488a1.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/203f30c57ff875d37631b93836ab3cec.png"></p><ul><li><strong>段表、页表</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/efc6d68c9181d25b30b1f1d2dd93bfad.png"></p><ul><li><strong>如何实现地址变换</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/cc29b1687f721912dec313f5802eeb7f.png"></p><h1 id="内存空间的扩充"><a href="#内存空间的扩充" class="headerlink" title="内存空间的扩充"></a>内存空间的扩充</h1><h2 id="覆盖技术"><a href="#覆盖技术" class="headerlink" title="覆盖技术"></a>覆盖技术</h2><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/b8d088c6d7e777d60267200f96df9531.png"></p><h2 id="交换-对换-技术"><a href="#交换-对换-技术" class="headerlink" title="交换(对换)技术"></a>交换(对换)技术</h2><p>内存紧张时，把进程暂时换出到外存（例：进程的中级调度(内存调度)，挂起态，七状态模型）<br>磁盘分为对换区(swap)和文件区，前者连续分配追求I/O速度，后者离散分配追求存储空间利用率<br>优先换出阻塞进程、低优先级进程（可能导致饥饿）、还要考虑进程在内存的驻留时间，PCB不会换出</p><h2 id="虚拟储存技术"><a href="#虚拟储存技术" class="headerlink" title="虚拟储存技术"></a>虚拟储存技术</h2><ul><li>传统存储方式的缺点<br>  连续分配/非连续分配<ol><li>一次性<br>作业必须一次性全部装入内存后才能开始运行。大作业无法运行,多道程序并发度下降。</li><li>驻留性<br>作业在运行期间一直驻留在内存，内存中驻留大量的暂时用不到的数据，浪费了宝贵的内存资源。</li></ol></li><li>局部性原理    <ol><li>时间局部性<br>现在访问的指令、数据在不久后很可能再次访问</li><li>空间局部性<br>现在访问的内存单元周围的内存空间很可能在不久之后访问</li><li>高速缓存<br>频繁访问的数据放到更高速的储存器中</li></ol></li><li>虚拟内存的定义和特征<br>  程序不需要全部装入内存即可运行，运行时根据需要动态调入数据，内存不够时，换出一些数据到外存<ol><li>多次性<br>作业无需在运行时一次装入内存，而是允许分多次调用</li><li>对换性<br>作业无需在运行时常驻内存，允许作业换入、换出</li><li>虚拟性<br>从逻辑上扩充了内存容量，用户看到的容量，远大于实际容量</li></ol></li></ul><div class="note warning flat"><p>虚拟内存的<strong>最大容量</strong>是由计算机的地址结构（CPU寻址范围）确定的<br>虚拟内存的<strong>实际容量</strong>=min（内存和外存容量之和，CPU寻找范围）</p></div><h1 id="如何实现虚拟内存"><a href="#如何实现虚拟内存" class="headerlink" title="如何实现虚拟内存"></a>如何实现虚拟内存</h1><h2 id="请求调页"><a href="#请求调页" class="headerlink" title="请求调页"></a>请求调页</h2><p>访问的信息不存在时，操作系统负责将需要的信息从外存调入内存</p><h2 id="页面置换"><a href="#页面置换" class="headerlink" title="页面置换"></a>页面置换</h2><p>内存空间不足时，将内存中暂时不用的信息换到外存<br>页面的换入换出需要磁盘I/O，时间开销是很大的，缺页率越小越好</p><h3 id="最佳置换算法OPT"><a href="#最佳置换算法OPT" class="headerlink" title="最佳置换算法OPT"></a>最佳置换算法OPT</h3><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/a31e68c46d08157aff900e68175fcdb7.png"></p><h3 id="先进先出置换算法FIFO"><a href="#先进先出置换算法FIFO" class="headerlink" title="先进先出置换算法FIFO"></a>先进先出置换算法FIFO</h3><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/8fbfe8dec801c9679911f48024b89abe.png"></p><h3 id="最近最久未使用算法LRU"><a href="#最近最久未使用算法LRU" class="headerlink" title="最近最久未使用算法LRU"></a>最近最久未使用算法LRU</h3><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/12db53c5ecacba69329f1a320fd0f6ec.png"></p><h3 id="时钟置换算法CLOCK"><a href="#时钟置换算法CLOCK" class="headerlink" title="时钟置换算法CLOCK"></a>时钟置换算法CLOCK</h3><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/3fbda0061a096757ee0b6d7975e53ed3.png"></p><ul><li><strong>改进型时钟置换算法</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/fbc5786e66054fa21ae3e66f4636370e.png"></p><h3 id="对比"><a href="#对比" class="headerlink" title="对比"></a>对比</h3><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/6367b523aa247845d9ad05bbde1f773c.png"></p><h2 id="虚拟内存的实现"><a href="#虚拟内存的实现" class="headerlink" title="虚拟内存的实现"></a>虚拟内存的实现</h2><h3 id="请求分页存储管理"><a href="#请求分页存储管理" class="headerlink" title="请求分页存储管理"></a>请求分页存储管理</h3><ul><li><strong>页表机制</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/87530d9abd6297d27c42da9d19b5e2e3.png"></p><ul><li><p><strong>缺页中断机构</strong></p><ul><li>访问的页面不存在时，产生缺页中断(属于内中断的故障 fault)，操作系统缺页中断处理程序中断，进程放到阻塞队列，待调页完成后将进程唤醒，放到就绪队列</li><li>如果内存有空闲块，则为进程分配一个空闲块，将缺页装入其中，并修改页表相应页表项</li><li>如果内存没有空闲块，由页面置换算法选择一个页面淘汰(若该页面在内存期间被修改过，则需要先将其写回外存)，腾出一个空间再装入缺页​​</li><li>一条指令执行期间，可能产生多次缺页中断</li></ul></li><li><p><strong>地址变换机构</strong></p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/0e3537ef13a2ea5aca18407cb91af5ab.png"></p><h2 id="请求分段存储管理"><a href="#请求分段存储管理" class="headerlink" title="请求分段存储管理"></a>请求分段存储管理</h2><h2 id="请求段页式存储管理"><a href="#请求段页式存储管理" class="headerlink" title="请求段页式存储管理"></a>请求段页式存储管理</h2><h1 id="内存保护"><a href="#内存保护" class="headerlink" title="内存保护"></a>内存保护</h1><p>进程1只能访问进程1的内存，不能越界访问其它进程或者操作系统的内存区<br>方法一：在CPU中设置上限/下限寄存器，保存进程可访问的物理地址的上下限<br>方法二：重定位寄存器(基址寄存器)+界地址寄存器(限长寄存器)<br>重定位寄存器中保存了进程的起始物理地址P1，界地址寄存器保存了进程的最大逻辑地址P2, 进程可以访问的物理内存位置是P1~P1+P2</p><h1 id="页面分配策略"><a href="#页面分配策略" class="headerlink" title="页面分配策略"></a>页面分配策略</h1><ul><li><strong>相关概念</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/e5e89721b565c0911c692b8012b2892e.png"></p><ul><li><p><strong>固定分配局部置换</strong>)</p><ul><li>系统为每个进程分配一定数量的物理块,在整个运行期间都不改变。</li><li>若进程在运行中发生缺页,则只能从该进程在内存中的页面中选出一页换出,然后再调入需要的页面。</li><li>缺点:很难在刚开始就确定应为每个进程分配多少个物理块才算合理。(采用这种策略的系统可以根据进程大小、优先级、或是根据程序员给出的参数来确定为一个进程分配的内存块数)</li></ul></li><li><p><strong>可变分配全局置换</strong></p><ul><li>刚开始会为每个进程分配一定数量的物理块。操作系统会保持一个空闲物理块队列。</li><li>当某进程发生缺页时,从空闲物理块中取出一块分配给该进程;若已无空闲物理块,则可选择一个未锁定的页面换出外存,再将该物理块分配给缺页的进程。</li><li>只要某进程缺页,都将获得新的物理块,仅当空闲物理块用完时,系统才选择一个未锁定的页面调出。</li><li>被选择调出的页可能是系统中任何一个进程中的页,因此这个被选中的进程拥有的物理块会减少,缺页率会增加。</li></ul></li><li><p><strong>可变分配局部置换</strong></p><ul><li>刚开始会为每个进程分配一定数量的物理块。当某进程发生缺页时,只允许从该进程自己的物理块中选出一个进行换出外存。</li><li>如果进程在运行中频繁地缺页,系统会为该进程多分配几个物理块,直至该进程缺页率趋势适当程度;</li><li>反之,如果进程在运行中缺页率特别低,则可适当减少分配给该进程的物理块。</li></ul></li><li><p><strong>调入页面的时机</strong></p><ul><li><strong>预调页策略</strong><br>  运行前调入，根据空间局部性原理,一次调入若干个相邻的页面可能比一次调入一个页面更高效。但如果提前调入的页面中大多数都没被访问过,则又是低效的。<br>  因此可以预测不久之后可能访问到的页面,将它们预先调入内存,但目前预测成功率只有50%左右。故这种策略主要用于进程的首次调入,由程序员指定应该调入的部分。</li><li><strong>请求调页策略</strong><br>运行时调入，进程在运行期间发现缺页时才将所缺页面调入内存。由这种策略调入的页面一定会被访问到,但由于每次只能调入一页,而每次调页都要磁盘I/O操作,因此I/O开销较大。</li></ul></li><li><p><strong>从何处调页</strong></p><ul><li><strong>对换区空间足够</strong><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/cf3dd8df63ee90c85d95c7c43987561e.png"></li><li><strong>对换区空间不够</strong><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/258a8a5c20df486e189abb531c735fa3.png"></li><li><strong>Unix方式</strong><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/2d352762246646b4e081b7b4e4f8e2e7.png"></li></ul></li><li><p><strong>抖动(颠簸)现象</strong><br>给进程分配的物理块太少，刚刚换出的页面马上又要换入内存,刚刚换入的页面马上又要换出外存，这种频繁的页面调度行为称为抖动或颠簸。</p></li><li><p><strong>工作集</strong></p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/c3e0c087bb7b935766cc5956a55a248b.png"></p>]]></content>
      
      
      <categories>
          
          <category> 计算机基础 </category>
          
          <category> 操作系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 操作系统 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>操作系统⚡进程管理</title>
      <link href="2021/01/15/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F_%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86/"/>
      <url>2021/01/15/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F_%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h1 id="进程管理"><a href="#进程管理" class="headerlink" title="进程管理"></a>进程管理</h1><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/01/02066158f4beb9f2c557383fcf86ec8a.png"></p><h2 id="进程的定义"><a href="#进程的定义" class="headerlink" title="进程的定义"></a>进程的定义</h2><ul><li>进程的定义：<strong>程序段、数据段、PCB</strong>三部分组成了<strong>进程实体(进程映像)</strong> </li><li>一般情况下,我们把进程实体就简称为进程,例如,所谓创建进程,实质上是创建进程实体中的PCB;而撤销进程,实质上是撤销进程实体中的PCB</li></ul><blockquote><p>注意: PCB是进程存在的唯一标志!</p></blockquote><p>从不同的角度,进程可以有不同的定义,比较传统典型的定义有:</p><ol><li>进程是程序的一次<strong>执行过程</strong>。</li><li>进程是一个程序及其数据在处理机上顺序执行时所<strong>发生的活动</strong>。</li><li>进程是具有独立功能的程序在数据集合上<strong>运行的过程</strong>，它是系统进行资源分配和调度的一个独立单位（强调“动态性”）</li><li>引入进程实体的概念后，可把进程定义为:进程是进程实体的运行过程，是系统进行<strong>资源分配</strong>和<strong>调度</strong>的一个独立单位。</li></ol><blockquote><p>注：严格来说，进程实体和进程并不一样,进程实体是<code>静态的</code>，进程则是<code>动态的</code>。不过,除非题目专门考察二者区别，否则可以认为进程实体就是进程。因此我们也可以说“进程由程序段、数据段、PCB三部分组成</p></blockquote><h2 id="进程的组成"><a href="#进程的组成" class="headerlink" title="进程的组成"></a>进程的组成</h2><ul><li><p>程序段<br>存放程序代码本身</p></li><li><p>数据段<br>存放程序运行过程中处理的各种数据（如全局变量、局部变量、宏定义的常量等）</p></li><li><p>PCB</p></li></ul><p><strong>进程管理所需的数据</strong>都放在这里，PCB是进程存在的唯一标志，操作系统通过PCB来管理进程<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/27/ce7872a1bfbd5dafc1453de9322ff949.png"></p><h2 id="进程的组织"><a href="#进程的组织" class="headerlink" title="进程的组织"></a>进程的组织</h2><p>系统里面通常有数千个PCB，为了更有效地管理，需要用适当的方式把他们组织起来</p><ul><li><p>链接方式<br>按照进程状态将PCB分为多个队列<br>操作系统持有指向各个队列的指针<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/27/6c73d88223c3f0bbb779a74d23ea0828.png"></p></li><li><p>索引方式<br>根据进程状态不同，建立几张索引表<br>操作系统持有指向各索引表的指针<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/27/7884d54769251ab2cf4a7907c1903ab7.png"></p></li></ul><h2 id="进程的特征"><a href="#进程的特征" class="headerlink" title="进程的特征"></a>进程的特征</h2><p>进程和程序是两个截然不同的概念，相比于程序，进程拥有以下特征：</p><ul><li><p><strong>动态性</strong><br>最基本特征。进程是程序的一次执行过程，是动态地产生、变化和消亡的</p></li><li><p><strong>并发性</strong><br>内存中有多个进程实体，各进程可以并行执行</p></li><li><p><strong>独立性</strong><br>进程是能独立运行、获得资源、接受调度的基本单位</p></li><li><p><strong>异步性</strong><br>各进程按各自独立的、不可预测的速度向前推进，异步性会导致并发程序执行结果的不确定性，操作系统要提供“进程同步机制”来解决异步问题</p></li><li><p><strong>结构性</strong><br>每一个进程都会配置PCB，结构上看，进程由程序段、数据段、PCB组成</p></li></ul><h2 id="进程的状态"><a href="#进程的状态" class="headerlink" title="进程的状态"></a>进程的状态</h2><p>基本状态：运行态、就绪态、阻塞态/等待态</p><ul><li><p><strong>运行态(Running)</strong><br>占有CPU，并在CPU上运行<br>单核处理器一个时刻只有一个进程处于运行态，双核两个</p></li><li><p><strong>就绪态(Ready)</strong><br>进程已经具备一切运行条件，除了没有空闲CPU，导致暂时不能运行<br>万事俱备，只差CPU</p></li><li><p><strong>阻塞态(Waiting/Blocked)</strong><br>等待某一事件而暂时不能运行，比如等待操作系统分配打印机、等待磁盘读写<br>为了提高CPU利用效率，进程需要先准备好其它所需资源，才能得到CPU的服务</p></li><li><p><strong>创建状态(New)</strong><br>操作系统为该进程分配所需内存等系统资源，为其创建、初始化PCB(分配PID等等)</p></li><li><p><strong>终止状态(Terminated)</strong><br>进程运行结束，或者出现Bug导致无法继续执行，操作系统需要撤销进程<br>完成资源回收，撤销PCB</p></li></ul><h2 id="进程间转换"><a href="#进程间转换" class="headerlink" title="进程间转换"></a>进程间转换</h2><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/27/9eb8a430b7220f00df5ca847dca45b51.png"></p><h2 id="进程控制"><a href="#进程控制" class="headerlink" title="进程控制"></a>进程控制</h2><ul><li>什么是进程控制？<br>进程控制的主要功能是对系统中的所有进程实施有效的管理,它具有创建新进程、撤销已有进程、实现进程状态转换等功能。简而言之就是<strong>实现进程状态切换</strong>。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/27/29d4cd4920843ffc47a4b3733fec4c4b.png"><br>某一个进程，把它的PCB从一个队列放到另一个队列，但是并没有把PCB当中的状态标志改成相应的新的状态，为防止这个问题，引入了原语操作。</p><ul><li><p>如何实现进程控制？<br>当关中断指令接收到外部中断信号时，会被忽略掉，暂时不会处理，这就保证了原语执行不被中断。直到执行到开中断指令，接收到外部中断信号才会开始处理。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/27/157f417dd8079f5c82c6d3a5c22eeea6.png"></p></li><li><p>进程控制相关原语<br>进程控制会导致进程状态的转换。无论哪个原语,要做的无非三类事情:</p><ol><li>更新PCB中的信息(如修改进程状态标志、将运行环境保存到PCB、从PCB恢复运行环境)<br>a.  所有的进程控制原语一定都会修改进程状态标志<br>b.  剥夺当前运行进程的CPU使用权必然需要保存其运行环境<br>c. 某进程开始运行前必然要恢复期运行环境</li><li>将PCB插入合适的队列</li><li>分配/回收资源</li></ol></li></ul><h2 id="进程通信"><a href="#进程通信" class="headerlink" title="进程通信"></a>进程通信</h2><ul><li>进程通信就是进程之间的信息交换。</li><li>进程是分配系统资源的单位（包括内存地址空间），因此<strong>各进程</strong>拥有各自的<strong>内存地址空间</strong>，它们<strong>相互独立</strong>。</li><li>为了保证安全，一个进程不能直接访问另一个进程的地址空间</li></ul><p>但是进程之间的信息交换又是必须实现的，为了保证进程间的安全通信，操作系统提供了一些方法实现。</p><ul><li><p><strong>共享存储</strong><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/27/08d60258f07e088ecebb337c84671d64.png"></p></li><li><p><strong>管道通信</strong><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/27/3dc4f522b8dbc5abb2d6e4862e7bd5c2.png"></p></li><li><p><strong>消息传递</strong><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/27/0fb02f609238179957d8dcfeb780e78c.png"></p></li></ul><h1 id="线程"><a href="#线程" class="headerlink" title="线程"></a>线程</h1><h2 id="线程的引入"><a href="#线程的引入" class="headerlink" title="线程的引入"></a>线程的引入</h2><p>在没引入进程之前，系统中各个程序只能串行执行<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/27/297ecbbc8b3077873cfda1029ba5344a.png"></p><ul><li><p>资源分配、调度<br>传统进程机制中，进程是资源分配、调度的基本单位<br>引入线程后，进程是<code>资源分配</code>的基本单位，线程是<code>调度</code>的基本单位</p></li><li><p>并发性<br>传统进程机制，只能进程间并发<br>现在<code>各线程之间</code>也能并发</p></li><li><p>系统开销<br>传统进程并发，需要切换进程的运行环境，系统开销大<br>同一个进程内的线程间并发，不需要切换环境，开销小</p></li></ul><h2 id="线程的属性"><a href="#线程的属性" class="headerlink" title="线程的属性"></a>线程的属性</h2><ul><li>线程是处理机调度的单位</li><li>多CPU计算机中，各个线程可占用不同的CPU</li><li>每个线程都有一个线程ID、线程控制块（TCP）</li><li>线程也有就绪、阻塞、运行三种基本状态</li><li>线程几乎不拥有系统资源，资源分配给进程</li><li>同一进程的不同线程间共享进程的资源</li><li>由于共享内存地址空间，同一进程中的线程间通信甚至无需系统干预</li><li>同一进程中的线程切换，不会引起进程切换</li><li>不同进程中的线程切换，会引起进程切换</li><li>切换进程内的线程，系统开销很小</li><li>切换进程，系统开销较大</li></ul><h2 id="线程的实现方式"><a href="#线程的实现方式" class="headerlink" title="线程的实现方式"></a>线程的实现方式</h2><ul><li><p><strong>用户级线程</strong><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/27/b8c3889fbf0a66a4dcd10cf684baf310.png"></p></li><li><p><strong>内核级线程</strong><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/27/b614794c5a841e7d52093be2763cd3cc.png"></p></li><li><p><strong>组合方式</strong><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/27/c390886b3e93a3c770ccee727878775e.png"></p></li></ul><h2 id="多线程模型"><a href="#多线程模型" class="headerlink" title="多线程模型"></a>多线程模型</h2><ul><li><p><strong>多对一模型</strong><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/27/37604f2c714399daf4da29dba2868864.png"></p></li><li><p><strong>一对一模型</strong><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/27/b3e90c5a7ae02d68a824870fdaed90e4.png"></p></li><li><p><strong>多对多模型</strong><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/27/fbf8215e4d8ed0bdedea85a035f45908.png"></p></li></ul><h1 id="处理机调度"><a href="#处理机调度" class="headerlink" title="处理机调度"></a>处理机调度</h1><ul><li><p>基本概念<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/28/9158e9abe09a10247f33e3f357527e6a.png"></p></li><li><p>调度的三个层次</p><ol><li><strong>高级调度（作业调度）</strong><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/28/40eff0049b00c052639b18441bc4bc18.png"></li><li><strong>中级调度（内存调度）</strong><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/28/89750f6f38ab70cda27a00a136c7b32d.png"></li><li><strong>低级调度（进程调度）</strong><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/28/3459e6ca2806ec06e91c00b4820d5a2a.png"></li><li><strong>区别</strong><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/28/3b55461b8822dd42ed0fdbaf4cd9d8e7.png"></li></ol></li><li><p>补充：<strong>七状态模型</strong><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/28/a66c794973c8f59af02ed109a637ba42.png"></p></li></ul><h2 id="调度的时机和方式"><a href="#调度的时机和方式" class="headerlink" title="调度的时机和方式"></a>调度的时机和方式</h2><ul><li><p>什么适合需要进程调度？</p><ol><li><strong>进程自动放弃处理机</strong><br> 进程正常终止<br> 运行过程中发生异常终止<br> 进程主动请求阻塞（等待I/O）</li><li><strong>进程被动放弃处理机</strong><br> 时间片用完<br> 更紧急的事情需要处理（I/O中断）<br> 更高优先级的进程进入就绪队列</li></ol></li><li><p>不能进行进程调度与切换的情况</p><ol><li><strong>在处理中断的过程中</strong>（中断处理过程很复杂，很难做到同时完成进程切换）</li><li><strong>在原子操作的过程中（原语）</strong>。原子操作不可中断，要一气呵成</li><li><strong>进程在操作系统内核程序临界区中</strong>。</li></ol></li><li><p><strong>临界资源</strong>是指：进程需要互斥访问的资源，<strong>临界区</strong>：访问临界资源的代码</p></li><li><p><strong>内核程序临界区</strong>：访问内核数据结构的代码，比如进程的就绪队列（就绪进程PCB组成）。</p></li><li><p>进程访问就绪队列时会加锁，还没退出临界区（临界资源没解锁）的期间，是无法进行调度和切换的。<strong>内核临界区</strong>访问临界资源应该尽快完成，否则会影响内核其它管理功能。</p></li><li><p><strong>普通临界区</strong>访问临界资源不会直接影响操作系统内核管理工作，这个时候可以调度和切换。比如打印机完成打印之前，进程不允许调度就会导致CPU一直空闲。</p></li></ul><blockquote><p>进程在操作系统<strong>内核程序临界区</strong>中不能进行调度与切换  （√）<br>进程处于<strong>临界区</strong>时不能进行处理机调度    （×）</p></blockquote><ul><li><p>进程调度的方式</p><ol><li><strong>非剥夺(非抢占)式</strong><br>只允许进程主动放弃处理机。在运行过程中即便有更紧迫的任务到达，当前进程依然会继续使用处理机，直到该进程终止或主动要求进入阻塞态。实现简单，开销小，但是无法实时处理紧急任务，适合早期批处理系统。</li><li><strong>剥夺(抢占)式</strong><br>如果有更重要更紧急的进程需要使用处理机，直接剥夺当前进程资源。适合分时操作系统、实时操作系统。</li></ol></li><li><p>进程的切换与过程</p><ol><li>“狭义的进程调度”与“进程切换”的区别<br>狭义调度指：从就绪队列中选择一个要运行的进程，这个进程可能是刚刚暂停的，也可能是另一个进程，后一种情况就需要进程切换<br>进程切换：一个进程让出处理机，由另一个进程占用处理机的过程<br>广义进程调度：包含了选择一个进程和进程切换两个步骤</li><li>进程切换的过程<br>保存原进程的数据<br>恢复新进程的数据（数据包括：程序计数器，程序状态字，各种数据寄存器等现场信息）</li></ol></li></ul><blockquote><p>进程切换是有代价的，过于频繁的调度、切换会导致效率低下，使系统大部分时间都花在了进程切换上，而真正用于执行进程的时间减少</p></blockquote><h2 id="调度算法的评价指标"><a href="#调度算法的评价指标" class="headerlink" title="调度算法的评价指标"></a>调度算法的评价指标</h2><ul><li><p><strong>CPU利用率</strong>：指CPU“忙碌”的时间占总时间的比例<br>  CPU忙碌时间(+IO时间)/总时间</p></li><li><p><strong>系统吞吐量</strong>：单位时间内完成作业的数量<br>  总共完成的作业数/总时间</p></li><li><p><strong>周转时间</strong>：是指从作业被提交给系统开始，到作业完成为止的这段时间间隔，作业被提交给系统开始到作业完成的时间，包括高级调度、低级调度的时间、进程在CPU执行的时间、等待I/O的时间</p><ol><li><strong>周转时间</strong>=作业完成时间-作业提交时间</li><li><strong>平均周转时间</strong>=各作业周转时间之和/作业数</li><li><strong>带权周转时间</strong>= 作业周转时间 / 作业实际运行时间 = （作业完成时间 - 作业提交时间）/ 作业实际运行时间<br>周转时间相同的情况下，作业运行时间长的，用户体验更好（浪费的时间少，带权周转时间一定大于 1，越小越好</li><li><strong>平均带权周转时间</strong>=各作业带权周总时间之和/作业数</li></ol></li><li><p><strong>等待时间</strong>：指进程/作业处于等待处理机状态时间之和，等待时间越长，用户满意度越低</p><ol><li>等待时间=进程/作业处于等待处理机状态时间之和</li><li>对于进程：等待时间是进程建立之后，等待被服务的时间之和（等待I/O的时间不计入）</li><li>对于作业：作业在外存后备队列等待被调度的时间 + 建立进程之后的等待时间</li></ol></li><li><p><strong>响应时间</strong>：用户提交请求到首次产生响应所用的时间</p></li></ul><h2 id="调度算法-早期系统"><a href="#调度算法-早期系统" class="headerlink" title="调度算法(早期系统)"></a>调度算法(早期系统)</h2><h3 id="先来先服务FCFS"><a href="#先来先服务FCFS" class="headerlink" title="先来先服务FCFS"></a>先来先服务FCFS</h3><ul><li><strong>先来先服务</strong>（FCFS：First Come First Service）<ol><li>公平角度考虑，作业/进程谁先到后备/就绪队列的谁先得到服务，非抢占式算法</li><li>优点：公平，算法简单</li><li>缺点：对<strong>长作业（进程）有利，对短作业不利</strong>（带权周转时间很大）比如下面例题中P3的带权周转时间为8</li><li>不会导致饥饿</li></ol></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/28/dceb6edebf04cf607997876d58907fd5.png"></p><h3 id="作业优先SJF"><a href="#作业优先SJF" class="headerlink" title="作业优先SJF"></a>作业优先SJF</h3><ul><li><strong>短作业优先</strong>（SJF：Shortest Job First）<ol><li>算法思想：追求最少的平均等待时间，最少平均周转时间，最少平均带权周转时间</li><li>算法规则：<strong>需要服务时间最短的作业。进程先得到服务</strong></li><li>可以调度作业和进程（短进程优先算法SPF: Shortest Process First）</li><li>SJF和SPF是<strong>非抢占式</strong>算法，抢占式版本：<strong>最短剩余时间优先算法</strong>(SRTN,Shortest Remaining Time Next)</li><li>优点：“最短的”平均等待时间、平均周转时间，最短剩余时间优先算法更短</li><li>缺点：不公平，短作业有利，长作业不利。    </li><li>可能导致饥饿，如果有源源不断的短作业到来，长作业可能一直得不到服务（饿死）</li></ol></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/28/cd4050ae0953e51e7519dd5603430bed.png"></p><h3 id="最短剩余时间优先SRTN"><a href="#最短剩余时间优先SRTN" class="headerlink" title="最短剩余时间优先SRTN"></a>最短剩余时间优先SRTN</h3><ul><li><strong>最短剩余时间优先算法</strong>(SRTN,Shortest Remaining Time Next)<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/28/8e127ff4f943a6e48afc4fe1687d2083.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/28/2302f774fa71363932727c7e4b575f55.png"></li></ul><h3 id="高响应比优先HRRN"><a href="#高响应比优先HRRN" class="headerlink" title="高响应比优先HRRN"></a>高响应比优先HRRN</h3><ul><li><strong>高响应比优先</strong>（HRRN：Highest Response Ratio Next）<ol><li>算法思想：综合考虑作业/进程的等待时间和服务时间</li><li>算法规则：每次调度时选择<strong>响应比最高</strong>的作业/进程。<strong>响应比=(等待时间+要求服务时间)/要求服务时间</strong>（响应比&gt;=1）</li><li>非抢占式，除非当前作业/进程主动放弃处理机，才需要调度</li><li>优点：综合考虑了<strong>等待时间和运行时间</strong>，等待时间相同时，要求服务时间短的优先(SJF的优点)，要求服务时间相同时，等待时间长的优先(FCFS的优点)</li><li>对于长作业来说，随着等待时间越来越久，其响应比也会越来越大，从而避免了长作业饥饿的问题</li></ol></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/28/b7428d46a12c3b8cbeb07fb9a2dc2e25.png"></p><h3 id="对比"><a href="#对比" class="headerlink" title="对比"></a>对比</h3><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/28/6f9fb03aed74db90e1eb9a5f9de21bc2.png"></p><h2 id="调度算法（交互式系统）"><a href="#调度算法（交互式系统）" class="headerlink" title="调度算法（交互式系统）"></a>调度算法（交互式系统）</h2><h3 id="时间片轮转RR"><a href="#时间片轮转RR" class="headerlink" title="时间片轮转RR"></a>时间片轮转RR</h3><ul><li><strong>时间片轮转</strong>（RR：Round-Robin)<ol><li>常用于分时操作系统，注重响应时间，而非周转时间</li><li>算法思想：公平、轮流地为各个进程服务，让每个进程在一定时间间隔内都可以得到响应</li><li>算法规则：按照各进程到达就绪队列的顺序,轮流让各个进程执行一个时间片(如100ms) </li><li>若进程未在一个时间片内执行完,则剥夺处理机,将进程重新放到就绪队列队尾重新排队。</li><li>用于进度调度（作业在放入内存并建立进程后才能被分配处理机时间片）</li><li>抢占式算法，由时钟中断通知CPU时间片已到，不会饥饿</li><li>缺点：高频率进程切换，有一定的开销，不区分任务的紧急程度</li><li>优点：公平；响应快，适用于分时操作系统</li></ol></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/28/5032c3cd79a2b114c0fd32e44967e576.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/28/d54338fb3b4bc407ef4d7351130b235f.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/28/9ee3f45cddc0a8de9b8fc91e5134d7b2.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/28/0c7efc1ec90a7dc093c9643b1309ae10.png"></p><h3 id="优先级调度算法"><a href="#优先级调度算法" class="headerlink" title="优先级调度算法"></a>优先级调度算法</h3><ul><li><strong>优先级调度算法</strong><ol><li>调度时选择<strong>优先级高</strong>的进程，可以作业调度和进程调度以及I/O调度</li><li>适用于实时操作系统，可能发生饥饿</li></ol></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/28/e5c391c62f67a9b137493df6f145b5fa.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/28/037e8caec9acb4e01465e29df0365a24.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/28/0d7a887e9e40726b2837f8f634c457d8.png"></p><h3 id="多级反馈队列调度算法"><a href="#多级反馈队列调度算法" class="headerlink" title="多级反馈队列调度算法"></a>多级反馈队列调度算法</h3><ul><li>对其他算法权衡折中，抢占式，可能导致饥饿</li><li>算法规则<ol><li>设置多级就绪队列，各级队列优先级从高到低，时间片从小到大</li><li>新进程到达时先进入第1级队列，按FCFS原则排队等待被分配时间片，若用完时间片进程还未结束，则进程进入下一级队列队尾。如果此时已经是在最下级的队列，则重新放回该队列队尾</li><li>只有第k级队列为空时，才会为k+1级队头的进程分配时间片</li><li><a href="https://www.bilibili.com/video/BV1YE411D7nH?p=17">动画演示</a></li></ol></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/bb186770ed9559f785aa6812cdabd2cc.png"></p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/dd10ab244dd7d5cc396a45cd05cb0ddc.png"></p><h1 id="进程同步与互斥"><a href="#进程同步与互斥" class="headerlink" title="进程同步与互斥"></a>进程同步与互斥</h1><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/f86ad32bfaea48db1e57a2a8becbd20d.png"></p><ul><li><p><strong>进程同步</strong></p><ol><li>进程具有异步性，各并发执行的进程以各自独立、不可预测的速度向前推进。</li><li>有时需要保证不同的进程按照特地的次序推进，比如管道读、写数据两个操作必需按照“写数据-&gt;读数据”的顺序执行，所以引入进程同步的问题</li><li>进程同步又叫进程的“直接制约关系”，它是指为了完成某种任务而建立两个或多个进程</li><li>这些进程因为需要在某些位置上协调工作次序而产生制约关系。</li></ol></li><li><p><strong>进程互斥</strong></p><ol><li><p>临界资源：一个时间段内只允许一个进程使用的资源（比如一些物理设备，变量数据，内存缓冲区）</p></li><li><p>对临界资源的访问必需互斥地进行，互斥又叫“间接制约关系”</p></li><li><p>进程互斥指一个进程访问某些临界资源时，另一个想要访问该临界资源的进程必需等待，直到资源被释放。</p></li><li><p>对临界资源的互斥访问，可以在逻辑上分为如下四个部分</p><pre><code> do&#123;     entry section;  //进入区 &#123;上锁&#125;     critical section;  //临界区  &#123; 访问临界资源的那段代码&#125;     exit section;     //退出区   &#123;解锁&#125;     remainder section; //剩余区 &#123;做其他处理&#125; &#125;</code></pre></li></ol></li><li><p>为了实现对临界资源的互斥访问，需要遵循以下原则</p><ol><li><strong>空间让进</strong><br>临界区空闲时，可以允许一个请求进入临界区的进程立即进入临界区</li><li><strong>忙则等待</strong><br>当已有进程进入临界区时，其他试图进入临界区的进程必须等待</li><li><strong>有限等待</strong><br>对请求访问的进程，应保证能在有限时间内进入临界区(保证不会饥饿)</li><li><strong>让权等待</strong><br>当进程不能进入临界区时，应立即释放处理机，防止进程忙等待</li></ol></li></ul><h2 id="进程互斥软件实现"><a href="#进程互斥软件实现" class="headerlink" title="进程互斥软件实现"></a>进程互斥软件实现</h2><ul><li><strong>单标志法</strong><br>算法思想：两个进程在<strong>访问完临界区后</strong>会把使用临界区的权限转交给另一个进程。也就是说<strong>每个进程进入临界区的权限只能被另一个进程赋予</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/731b6f044ab528989f2fa1062396c447.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/237f9e041fdfd0123289a1d09713d5f5.png"></p><ul><li><strong>双标志先检查法</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/51e07e90ddadfa31dc0ff035d3c891cb.png"></p><ul><li><strong>双标志后检查法</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/275bd64a2e8d4613edd4a404aa3c59fc.png"></p><ul><li><strong>Peterson算法</strong><br>Perterson算法用软件方法解决了进程互斥问题，<strong>遵循了空闲让进、忙则等待、有限等待三个原则</strong>，但是依然<strong>未遵循让权等待</strong>的原则</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/6f567cdad0d1515a8d8a9d30abc7f3a8.png"></p><h2 id="进程互斥硬件实现"><a href="#进程互斥硬件实现" class="headerlink" title="进程互斥硬件实现"></a>进程互斥硬件实现</h2><ul><li><strong>中断屏蔽方法</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/09f753f261223ebfb6d88b1e6a373acc.png"></p><ul><li><strong>TestAndSet指令</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/2933780d4e37df6a0c7fb0c40ba8c764.png"></p><ul><li><strong>Swap指令</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/a5fe75ea3d34489db4e19d09fc58d1f8.png"></p><h2 id="信号量机制"><a href="#信号量机制" class="headerlink" title="信号量机制"></a>信号量机制</h2><p>针对以上两种实现方法无法实现的问题，1965年，荷兰学者<strong>Dijkstra</strong>提出了一种卓有成效的实现进程互斥、同步的方法——<strong>信号量机制</strong></p><ul><li>用户进程可以通过使用操作系统提供的<strong>一对原语</strong>来对<strong>信号量</strong>进行操作,从而很方便的实现了进程互斥、进程同步。</li><li>信号量其实就是一个变量(可以是 个整数,也可以是更复杂的记录型变量),可以用一个信号量来<strong>表示系统中某种资源的数量</strong>,比如:系统中只有一台打印机,就可以设置一个初值为1的信号量</li><li><strong>原语</strong>是一种特殊的程序段,其<strong>执行只能一气呵成,不可被中断</strong>。原语是由<strong>关中断/开中断指令</strong>实现的。</li><li>软件解决方案的主要问题是由“进入区的各种操作无法一气呵成” ,因此如果能把进入区、退出区的操作都用“原语”实现,使这些操作能“一气呵成”就能避免问题。</li><li><strong>一对原语</strong>：<code>wait(S)</code>原语和<code>signal(S)</code>原语,可以理解为函数,函数名分别为wait和signal,括号里的<code>信号量S</code>就是参数。</li><li>wait, signal原语常<code>简称为P,V操作</code>(来自荷兰语proberen和verhogen) 。因此,做题的时候常把wait(S).signal(S)两个操作分别写为<code>P(S)</code>、<code>V(S)</code></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/f28cd6bd7144dacbc922b8a94f7010e1.png"></p><ul><li><strong>整型信号量</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/550c20f518820ecebbf51f460d359efe.png"></p><ul><li><strong>记录型信号量</strong><br><a href="https://www.bilibili.com/video/BV1YE411D7nH?p=21">动画演示</a></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/bd4a1a080acd5ddc975d40729772c320.png"></p><ul><li><strong>信号量机制实现进程互斥</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/f1d372d4dc89e34140a6f575b0835a82.png"></p><ul><li><strong>信号量机制实现进程同步</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/9725eea0587c84eecbf0439147dab141.png"></p><ul><li><strong>信号量机制实现前驱关系</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/7e90239a4e0b457ceb54070e5c1667d1.png"></p><ul><li><strong>总结</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/787e8c3e0180caba244bdbfcbfd19b9e.png"></p><h2 id="生产者消费者问题"><a href="#生产者消费者问题" class="headerlink" title="生产者消费者问题"></a>生产者消费者问题</h2><ul><li><strong>问题分析</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/11365e55cebc6b74328eb9f4e2b7633c.png"></p><ul><li><strong>如何实现</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/5938225a1587db4475d9a3ac114b64b3.png"></p><p><strong>能否改变相邻P、V操作的顺序？</strong><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/922cca5307bc0561a31645071261302d.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/d533b343f32b290106ec998a784adc7d.png"></p><h2 id="多生产者消费者问题"><a href="#多生产者消费者问题" class="headerlink" title="多生产者消费者问题"></a>多生产者消费者问题</h2><ul><li><strong>问题分析</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/c11ccc721e66cd7735a5dbebad46145c.png"></p><ul><li><strong>如何实现</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/e69f38723527235f89f85c6134974161.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/2d71cc4b72391d7dc071d3cc1d397ec9.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/229c421bee513c9d5ba5a00a83ef767f.png"></p><h2 id="吸烟者问题"><a href="#吸烟者问题" class="headerlink" title="吸烟者问题"></a>吸烟者问题</h2><ul><li><strong>问题分析</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/111a2f89ec29d6f0627531314054fddf.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/2769a0617e764e289a3a302b1eadf690.png"></p><ul><li><strong>如何实现</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/47fd14ae737b5dbd33fbc82bb9be63f4.png"></p><h2 id="读写者问题"><a href="#读写者问题" class="headerlink" title="读写者问题"></a>读写者问题</h2><ul><li><strong>问题分析</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/a7723d8eda3906f698501c25a2e2992a.png"></p><ul><li><strong>如何实现</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/79fa92ea5478be4a56028b3ab0097124.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/7770a31fe3df6639fa87b04344ddd074.png"></p><h2 id="哲学家就餐问题"><a href="#哲学家就餐问题" class="headerlink" title="哲学家就餐问题"></a>哲学家就餐问题</h2><ul><li><strong>问题分析</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/2c373a09712c045b2d8c9cef8e5ce06b.png"></p><ul><li><strong>如何解决</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/741802daff0d4ff4b9ea60c5a7ba550d.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/9003fdffc57851ace8a5a64ac4bf5cc8.png"></p><h2 id="管程"><a href="#管程" class="headerlink" title="管程"></a>管程</h2><ul><li><p>为什么引入管程<br>信号量机制编写程序困难，PV顺序错误可能导致死锁</p></li><li><p><strong>管程的定义</strong><br>  管程是一种高级的同步机制，是一种特殊的软件模块，包括：</p><ol><li>局部于管程的共享数据结构说明</li><li>对数据结构进行操作的一组过程（函数）</li><li>对共享数据初始化的语句</li><li>管程有一个名字（就是OOP里面的封装思想）</li></ol></li><li><p><strong>管程的基本特征</strong></p><ol><li>管程中的共享数据结构只能被管程内部的过程（函数）访问</li><li>一个进程只能通过调用管程内的过程（函数）才能访问管程内的数据</li><li>每次仅允许一个进程在管程内执行某个内部过程（这个特性是编译器实现的）</li></ol></li><li><p><strong>用管程解决生产者消费者问题</strong></p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/4b9be5f3242e839af4169b37c902d306.png"></p><ul><li><strong>Java</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/cc2559b64af379f7a31b797ea898dfd7.png"></p><h1 id="死锁"><a href="#死锁" class="headerlink" title="死锁"></a>死锁</h1><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/dbc130be6a2f1a4bfc16d762c4695f46.png"></p><ul><li><p>什么是死锁<br>并发环境下，各进程因为竞争资源造成的：互相等待对方手里的资源，导致各进程都阻塞，无法向前推进的现象</p></li><li><p>死锁、饥饿、死循环</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/da6e2ff9f6d44e4670622ea6c2d9e0e8.png"></p><ul><li><p>死锁产生的条件<br>  对不可剥夺资源分配不合理可能导致死锁</p><ol><li><strong>互斥条件</strong><br>争抢互斥资源</li><li><strong>不剥夺条件</strong><br>进程获得的资源未使用完成，其它进程不能强行夺走，只能等待主动释放</li><li><strong>请求和保持条件</strong><br>进程已经保持了至少一个资源，但是又提出新的资源请求，同时该资源被其它进程占有，此时请求进程被阻塞，但是对自己拥有资源又保持不放</li><li><strong>循环等待条件</strong><br>死锁时存在循环等待链，但是存在循环等待链不一定出现死锁（同类资源大于1，可能链条外的某个进程释放了资源）</li></ol></li><li><p>死锁的处理策略</p><ol><li><strong>预防死锁</strong><br>破坏产生死锁的条件</li><li><strong>避免死锁</strong><br>避免系统进入不安全状态（银行家算法）</li><li><strong>检测和解除</strong><br>允许死锁发生，操作系统负责检测死锁并解除</li></ol></li></ul><h2 id="死锁的处理"><a href="#死锁的处理" class="headerlink" title="死锁的处理"></a>死锁的处理</h2><h3 id="不允许死锁发生"><a href="#不允许死锁发生" class="headerlink" title="不允许死锁发生"></a>不允许死锁发生</h3><ul><li><strong>静态策略：预防死锁</strong><ol><li><strong>破坏互斥条件</strong><br>将物理互斥的资源改造为逻辑共享设备，SPOOLing技术将打印机改造成共享设备</li><li><strong>破坏不剥夺条件</strong><br>方案一：某个进程所需的资源得不到满足时，主动释放自己保持的资源，以后再重新申请<br>方案二：操作系统协助，将资源剥夺给优先级高的资源<br>实现复杂，可能造成获得资源前一阶段的工作白做，而且反复申请资源增加系统开销，可能导致进程饥饿</li><li><strong>破坏请求和保持条件</strong><br>静态分配法：进程分配好需要的资源再投入运行，运行时不再申请<br>实现简单，但是资源利用率极低，可能导致某些进程饥饿​</li><li><strong>破坏循环等待条件</strong><br>顺序资源分配法：首先给系统资源编号，每一个进程必需按照进程递增的顺序请求资源（大编号无法请求小编号资源，也就不能线程循环等待的情况）<br>按编号申请资源，编程很麻烦不方便添加新设备，需要重新分配编号；进程实际使用资源的顺序可能和编号顺序不一致，导致需要提前申请不必要的资源导致浪费​</li></ol></li><li><strong>动态策略：避免死锁</strong><ol><li>什么是安全序列<br>系统按照这种序列分配资源，能让每个进程都顺利完成</li><li>什么是系统的不安全状态<br>只要存在一个安全序列，系统就是安全状态<br>找不到安全序列，系统就是不安全状态，意味着可能所有进程都无法顺利执行下去（如果有进程提前归还资源，那系统也有可能可以回到安全状态）<br>不安全状态可能发生死锁（不一定发生），安全状态一定不会死锁</li><li>银行家算法</li></ol></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/6b8c8a1fc9771cbf256a401f7cfa6d14.png"></p><h3 id="允许死锁发生"><a href="#允许死锁发生" class="headerlink" title="允许死锁发生"></a>允许死锁发生</h3><ul><li><strong>死锁检测</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/bb14c3d0b17ec907154b4e26ca70deff.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/72761f62025d9ab2c856d77967fb88a9.png"></p><ul><li><strong>死锁解除</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/29/499e642ccb42f3b8792987a11109a31f.png"></p>]]></content>
      
      
      <categories>
          
          <category> 计算机基础 </category>
          
          <category> 操作系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 操作系统 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>操作系统⚡概述</title>
      <link href="2021/01/15/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F_%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%BF%B0/"/>
      <url>2021/01/15/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F_%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%BF%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><div class="note success flat"><p>👉👉👉<a href="https://blog.csdn.net/gl620321/article/details/107128661?utm_source=app">思维导图来源</a>||<a href="https://mubu.com/doc/Cd-Y4YOfkh#">操作系统王道幕布笔记—ZaxTyson</a>||<a href="https://www.bilibili.com/video/BV1YE411D7nH?p=1">操作系统王道学习视频</a></p></div><h1 id="操作系统引论及概述"><a href="#操作系统引论及概述" class="headerlink" title="操作系统引论及概述"></a>操作系统引论及概述</h1><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/04/41a83c1d8dace273dc87b961c251a70f.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/01/24b735899f12b5416d21e4c0ebb4c288.png"></p><h2 id="OS功能和目标"><a href="#OS功能和目标" class="headerlink" title="OS功能和目标"></a>OS功能和目标</h2><p><code>操作系统</code>(Operating System，OS)是计算机系统中最重要的系统软件，它管理整个计算机系统的软件资源和硬件资源，是用户与计算机硬件的桥梁，是其它软件和程序的运行基础。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/01/c2d24416e4d4d5732a88766f3d7817f2.png"><br>（1）<code>作为系统资源的管理者</code></p><ul><li><code>处理机</code>管理<br>计算机系统中最重要的资源是中央处理机（简称CPU），任何计算都必须在CPU上进行。<br>在处理机管理中，最核心的问题是CPU时间的分配问题，这涉及分配的策略和方法。</li><li><code>存储器</code>管理<br>存储管理的主要工作是对内存储器进行合理分配、有效保护和扩充。<br>内存是现代计算机系统的中心，是可以被CPU和I/O设备共同访问的数据仓库。<br>内存通常是CPU直接寻址和访问的、唯一的大容量存储器。</li><li><code>设备</code>管理<br>设备管理是操作系统中最庞杂、琐碎的部分，其原因是：<br>①设备管理涉及很多实际的物理设备，这些设备品种繁多、用法各异。<br>②各种外部设备都能和主机并行工作，而且，有些设备可被多个进程所共享。<br>③主机和外部设备，以及各类外部设备之间的速度极不匹配，极差很大。</li><li><code>文件</code>管理<br>以上三种管理都是针对计算机的硬件资源的管理。<br>文件系统管理则是对软件资源的管理。为了管理庞大的系统软件资源及用户提供的程序和数据，操作系统将它们组织成文件的形式，操作系统对软件的管理实际上是对文件系统的管理。</li><li><code>作业</code>管理<br>作业指用户在一次计算过程中或者事务处理过程中，要求计算机所作工作的集合。<br>作业由程序、数据和作业说明书组成。在批处理系统中，作业是占据内存的基本单位。<br>作业管理是通过管理让这些作业按照自己所想要的方式来进行工作。</li></ul><p>（2）<code>作为用户和计算机硬件之间的接口</code></p><ul><li>命令接口<br>命令接口<code>允许用户直接使用</code>，命令接口又分<code>联机命令接口</code>和<code>脱机命令接口</code>。<br>联机命令接口：用户说一句，系统做一句（<code>交互式命令接口</code>）。<br>脱机命令接口：用户说一堆，系统做一堆（批<code>处理命令接口</code>）。</li><li>程序接口<br>用户程序<code>间接使用</code></li><li>GUI（图像用户界面）</li></ul><h2 id="OS特征"><a href="#OS特征" class="headerlink" title="OS特征"></a>OS特征</h2><p>OS四大特征：<code>并发</code>、<code>共享</code>、<code>虚拟</code>、<code>异步</code>。</p><ul><li><p>并发<br><code>并发</code>: 指两个或多个事件在同一<code>时间间隔内</code>发生。宏观上是同时发生的,但微观上是交替发生的。<br><code>并行</code>: 指两个或多个事件在同一<code>时刻同时</code>发生。<br>并发和共享是操作系统的两个最基本特征。<br>操作系统并发性指计算机系统中同时存在着多个运行着的程序。</p><blockquote><p>例如：8-9点一号执行，9-10点二号执行，10-11点三号执行，为并发情况。而在8点一二号一起执行为并行情况。</p></blockquote></li><li><p>共享<br>资源共享指系统中的资源可供内存中多个并发执行的进程共同调用。<br><code>互斥共享</code><br>｜ 同一个时间段只允许一个进程访问资源(摄像头/麦克风)<br><code>同时共享</code><br>｜ 允许一个时间段多个进程“同时”(宏观上)访问某些资源（微观上是分时共享），比如硬盘读写<br>并发和共享互为存在条件。</p></li><li><p>虚拟<br>虚拟是指把一个物理上的实体变为若干个逻辑上的对应物。物理实体(前者)是实际存在的,而逻辑上对应物(后者)是用户感受到的。</p></li><li><p>异步<br>异步是指,在多道程序环境下,允许多个程序并发执行,但由于资源有限,进程的执行不是一贯到底的,是<code>走走停停</code>（等待资源进程阻塞）,以不可预知的速度向前推。</p></li></ul><h2 id="OS发展与分类"><a href="#OS发展与分类" class="headerlink" title="OS发展与分类"></a>OS发展与分类</h2><ul><li><p>手工操作阶段<br>纸带机（用户独占全机，人机速度矛盾，资源利用率极低）。</p></li><li><p>单道批处理系统<br>引入了脱机输入/输出技术（磁带），通过<code>监督程序</code>（操作系统雏形）控制作业输入输出。<br>外围机负责把输入纸带录入磁带。<br>缓解了人机速度矛盾，提高了资源利用率，但是CPU是串行的，大量CPU时间浪费在I/O等待上。</p></li><li><p>多道批处理系统<br>磁带往内存输入多道程序，并发执行，输入、计算、输出互不干扰<br>操作系统诞生，引入了中断技术，资源利用率大幅上升，但是缺少人机交互功能，用户响应时间长（用户提交作业之后只能等待作业完成）。</p></li><li><p>分时操作系统<br>分时操作系统：计算机以<code>时间片</code>为单位<code>轮流</code>为各个用户/作业服务,各个用户可通过终端与计算机进行交互。<br>主要优点:用户请求可以被即时响应,解决了人机交互问题。允许多个用户同时使用一台计算机,并且用户对计算机的操作相互独立,感受不到别人的存在。<br>主要缺点:不能优先处理一些紧急任务。操作系统对各个用户/作业都是完全公平的,循环地为每个用户/作业服务一个时间片,不区分任务的紧急性。</p></li><li><p>实时操作系统<br><code>硬实时系统</code>：必须在绝对严格的规定时间内完成处理。<br><code>软实时系统</code>：能接受偶尔违法时间规定。<br>主要优点:能够优先响应一些紧急任务,某些紧急任务不需时间片排队。在实时操作系统的控制下,计算机系统接收到外部信号后及时进行处理,并且要在严格的时限内处理完事件。实时操作系统的主要特点是及时性和可靠性。</p></li><li><p>网络操作系统<br>网络操作系统:是伴随着计算机网络的发展而诞生的,能把网络中各个计算机有机地结合起来,实现数据传送等功能,实现网络中各种资源的共享(如文件共享)和各台计算机之间的通信。(如: Windows NT就是一种典型的网络操作系统,网站服务器就可以使用)</p></li><li><p>分布式操作系统<br>分布式操作系统:主要特点是分布性和并行性。系统中的各台计算机地位相同,任何工作都可以分布在这些计算机上,由它们并行、协同完成这个任务。</p></li></ul><h1 id="OS运行机制-体系结构"><a href="#OS运行机制-体系结构" class="headerlink" title="OS运行机制/体系结构"></a>OS运行机制/体系结构</h1><h2 id="运行机制"><a href="#运行机制" class="headerlink" title="运行机制"></a>运行机制</h2><ul><li><p>指令<br>指令就是处理器(CPU)能识别、处理的最基本命令。<br><code>特权指令</code>：如内存清零指令。（不允许用户程序使用）<br><code>非特权指令</code>：如普通的运算指令。</p></li><li><p>处理机状态<br><code>用户态</code>：此时CPU只能执行非特权指令。<br><code>核心态</code>：特权命令、非特权命令都可执行。</p><blockquote><p>处理机状态用程序状态寄存器(PSW)中的某标志位来标识当前处理器处于什么状态。如0为用户态，1为核心态。</p></blockquote></li><li><p>程序<br><code>内核程序</code>：系统的管理者，可以执行特权和非特权指令，运行在核心态。<br><code>应用程序</code>：只能执行非特权指令，运行在用户态。</p></li></ul><h2 id="OS内核"><a href="#OS内核" class="headerlink" title="OS内核"></a>OS内核</h2><p>计算机最底层的软件，是操作系统最核心的部分。实现操作系统<code>内核功能</code>的程序才是<code>内核程序</code>。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/01/222957e356925c52dca1823b5730791a.png"></p><ul><li><code>时钟管理</code><br>实现计时功能。</li><li><code>中断处理</code><br>负责实现中断机制。</li><li><code>原语</code><br>是一种特殊的程序，处于操作系统最底层，是最接近硬件的部分。<br>运行时间短，调用频繁，具有<code>原子性</code>——运行只能一气呵成，不可中断。</li><li><code>系统资源管理</code><br>进程管理、存储管理、设备管理。<blockquote><p>有的操作系统不把这个作为“内核功能”（微内核)，不同操作系统，对内核功能的划分可能不一样。</p></blockquote></li></ul><h2 id="体系结构"><a href="#体系结构" class="headerlink" title="体系结构"></a>体系结构</h2><p>操作系统的体系结构：<code>大内核</code>和<code>微内核</code>。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/01/926936683836e9fe7e5cbf31a498d3c5.png"></p><ul><li><p>大内核<br>将操作系统的<code>主要功能模块</code>都作为系统内核，运行在核心态。<br>高性能，但是内核代码庞大难以维护。</p></li><li><p>微内核<br>只把<code>基本概念</code>保留在内核。<br>功能少，功能清晰方便维护，但是需要频繁的在核心态和用户态之间切换，性能低。</p></li></ul><blockquote><p>OS体系结构可以类比于企业的管理问题：<code>内核</code>就是企业的<code>管理层</code>，负责一些重要的工作。只有管理层才能执行<code>特权指令</code>，普通员工只能执行<code>非特权指令</code>。<code>用户态</code>、<code>核心态</code>之间的<code>切换</code>相当于普通员工和管理层之间的工作交流。<br><code>大内核</code>：企业初创时体量不大，管理层的人会负责大部分的事情。<br><code>微内核</code>：随着企业体力越来越大，管理层只负责最核心的一些工作。</p></blockquote><h1 id="中断和异常"><a href="#中断和异常" class="headerlink" title="中断和异常"></a>中断和异常</h1><p>中断机制的诞生：<br>早期计算机，各程序只能串行执行，系统资源利用率低。<br>为了解决上述问题，人们发明操作系统，引入中断机制，实现了多道程序并发执行。<br><code>本质：发生中断</code>就意味着<code>需要操作系统介入,开展管理工作</code>。</p><h2 id="中断的概念和作用"><a href="#中断的概念和作用" class="headerlink" title="中断的概念和作用"></a>中断的概念和作用</h2><p>中断信号可以使CPU从<code>用户态</code>切换为<code>核心态</code>,<code>使操作系统获得计算机的控制权</code>。有了中断才能实现多道程序并发执行。</p><blockquote><p>由于操作系统的管理工作(比如进程切换、分配I/O设备等)需要使用<code>特权指令</code>,因此CPU要从用户态转为核心态。</p></blockquote><p><code>中断</code>是CPU从用户态-&gt;核心态切换的<code>唯一途径</code>。<br>核心态-&gt;用户态切换只需要执行一个<code>特权指令</code>，将<code>PSW</code>设置为<code>0</code>。</p><h2 id="中断的分类"><a href="#中断的分类" class="headerlink" title="中断的分类"></a>中断的分类</h2><ul><li><p><code>内中断</code>(异常/例外/陷入)<br>信号来源CPU<code>内部</code>，<code>与当前执行的指令有关</code><br><code>自愿中断(指令中断) </code>：</p><pre><code>      系统调用时使用的访管指令(陷入指令/trap指令)</code></pre><p><code>强迫中断</code>：</p><pre><code>      1.硬件故障（缺页错误）2.软件中断（除0错误）</code></pre><p>陷阱、陷入(trap)</p><pre><code>      有意而为之的异常，系统调用</code></pre><p>故障(fault)</p><pre><code>      错误条件引起的，可能被故障处理程序修复的，如缺页</code></pre><p>终止(abort)</p><pre><code>      致命错误，无法修复，终止处理程序不再将控制返回给应用程序，如除0</code></pre></li><li><p><code>外中断</code>(狭义中断)<br>信号来源CPU<code>外部</code>，<code>与当前执行的指令无关</code><br><code>外设请求</code>：</p><pre><code>       外设(比如打印机)I/O操作完成发出中断信号       键盘输入一个字符​</code></pre><p><code>人工干预</code>：</p><pre><code>        用户强制终止一个进程</code></pre></li></ul><h1 id="系统调用"><a href="#系统调用" class="headerlink" title="系统调用"></a>系统调用</h1><p>操作系统作为用户和计算机硬件之间的接口，需要向上提供一些简单易用的服务。主要包括命令接口和程序接口。其中，程序接口由一组<code>系统调用</code>组成。<br>系统调用是操作系统提供给应用程序(程序员/编程人员)使用的接口,可以理解为一种可供应用程序调用的特殊函数,应用程序可以发出<code>系统调用请求</code>来获得操作系统的服务,操作系统会对各个请求进行<code>协调管理</code>。</p><blockquote><p>例如A和B共用打印机，A按下打印后，打印机工作，B接着又按下打印，打印机不会把A和B的打印内容混合在一起。</p></blockquote><p>应用程序通过<code>系统调用请求</code>操作系统的服务。<br>​系统中的各种共享资源都由操作系统统一掌管,因此在用户程序中,凡是与资源有关的操作(如存储分配、I/O操作、文件管理等) ,都必须通过系统调用的方式向操作系统提出服务请求,由操作系统代为完成。这样可以保证系统的稳定性和安全性,防止用户进行非法操作。<br>系统调用相关的处理需要在<code>核心态</code>下完成。</p><h2 id="系统调用与库函数的区别"><a href="#系统调用与库函数的区别" class="headerlink" title="系统调用与库函数的区别"></a>系统调用与库函数的区别</h2><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/01/e7ab8bab64bae5282f57c5f7297e7ec8.png"></p><ul><li>系统调用是操作系统向上提供的接口</li><li>有的库函数是对于系统调用的进一步封装</li><li>大多数高级语言提供的库函数间接进行系统调用</li></ul><h2 id="系统调用过程"><a href="#系统调用过程" class="headerlink" title="系统调用过程"></a>系统调用过程</h2><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/01/7f5ff4cb6568a412aaa0f91b3528db13.png"></p>]]></content>
      
      
      <categories>
          
          <category> 计算机基础 </category>
          
          <category> 操作系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 操作系统 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript🌞Ajax</title>
      <link href="2021/01/15/%E5%89%8D%E7%AB%AF/JavaScript/JavaScript_Ajax/"/>
      <url>2021/01/15/%E5%89%8D%E7%AB%AF/JavaScript/JavaScript_Ajax/</url>
      
        <content type="html"><![CDATA[<h1 id="Ajax"><a href="#Ajax" class="headerlink" title="Ajax"></a>Ajax</h1><ul><li>Ajax：Asynchronous JavaScript And XML，即<strong>异步JavaScript和XML技术</strong>。</li><li>描述：不是一门新的语言或技术，是由JavaScript、XML、DOM、CSS等多种已有技术组合而成的一种浏览器端技术。</li><li>功能：<strong>用于实现与服务器进行异步交互的功能</strong>。</li><li>传统Web工作流程<br>每当用户触发一个页面HTTP请求，就需要服务器返回一个新的页面<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/24/594e68fd5921f40c42a89634c094311c.png"></li><li>Ajax工作流程<br>页面通过Ajax对象与服务器进行通信，然后通过DOM操作将返回的结果更新到页面中，整个过程都是在同一个页面中进行的<br>Ajax技术的创新之处在于，改善了传统的“请求-等待-响应-刷新-返回数据”模式，在信息返回之前，用户可以继续自己的操作，当前页面不会因为请求而刷新。这样大大的提高了交互性。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/24/13af6098b6a7580165ed0f207fc830be.png"></p><ul><li>相较于传统页面，Ajax技术的优势具体有以下几个方面：<ol><li>减轻服务器的负担</li><li>节省带宽</li><li>用户体验更好</li></ol></li></ul><h1 id="PHP服务器"><a href="#PHP服务器" class="headerlink" title="PHP服务器"></a>PHP服务器</h1><ul><li>服务器：若需要网页能被互联网中的其它用户访问，就要将网页发布到服务器上，用户通过网址来访问。</li><li>常用服务器：PHP、Java、Node.js、ASP.NET等</li><li>PHP是一种运行于服务器端的嵌入式脚本编程语言，内置了一个Web服务器。</li><li>PHP开发环境搭建：<ol><li>下载PHP、vc运行库、补丁（可能）<br>进入官网<a href="http://php.net/">http://php.net</a>下载PHP7.3.11版本(可以下最新版本)，得到一个压缩包，并解压到指定目录<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/24/e9e630ef5310e3350faf7c040c6c23d1.png"></li><li>创建目录<br>创建”<code>D:\web\php7.3</code>“作为PHP的安装目录，创建”<code>D:\web\htdocs</code>“作为站点目录</li><li>启动内置服务器<br>压缩包解压到“D:\web\php7.1”目录下，启动cmd命令行工具，<strong>切换目录到该目录中</strong>，执行以下命令<pre><code>  php -S localhost:8081 -t &quot;D:\web\htdocs&quot;</code></pre>上述命令中，”-S”用于启动内置Web服务器（S为大写），后面接网络地址和端口号，”-t”用于指定站点目录，此处为”D:\web\htdocs”</li><li>常见错误<br>”php“不是内部或外部命令,也不是可运行的程序或批处理文件，这是因为没有配置php的path环境变量。找到php的安装路径(包括压缩包名称)复制新建到path中<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/24/5463e84058f29b072b863d4561c12f87.png"><br>在cmd命令中php安装目录下下执行<pre><code> php -version</code></pre>显示版本信息即成功，其他情况可能是8081端口号被占用所造成。</li></ol></li></ul><h1 id="Ajax向服务器发送请求"><a href="#Ajax向服务器发送请求" class="headerlink" title="Ajax向服务器发送请求"></a>Ajax向服务器发送请求</h1><p>使用Ajax需要通过XMLHttpRequest构造函数创建Ajax对象。</p><pre><code>    var xhr=new XMLHttpRequest();</code></pre><p>创建完成后就可以使用该对象提供的方法向服务器发送请求。</p><ol><li><p><strong>open()</strong><br>open()方法用于创建一个新的HTTP请求，并指定请求方式、请求URL等。</p><pre><code> open(&#39;method&#39;,&#39;URL&#39;[,asyncFlag[,&#39;username&#39;[,&#39;password&#39;]]]) method：用于指定请求方式，如GET、POST，不区分大小写。 URL：表示请求的地址。 asyncFlag：可选参数，用于指定请求方式，同步请求为false，默认为异步请求true。 userName和password：可选参数，表示HTTP认证的用户名和密码。</code></pre><blockquote><p>同步请求和异步请求的区别在于是否阻塞代码的执行，默认的异步方式是非阻塞的，浏览器端的JS程序不用等待Web服务器的响应，可以继续处理其他事情，而同步则等待Web服务器的响应。</p></blockquote></li><li><p><strong>send()</strong><br>send()方法用于发送请求到Web服务器并接收响应。</p><pre><code> send(content)</code></pre></li><li><p><strong>setRequestHeader()</strong><br>setRequestHeader()方法用于单独指定某个HTTP请求头。</p><pre><code> setRequestHeader(&#39;header&#39;,&#39;value&#39;);</code></pre></li></ol><h2 id="GET请求"><a href="#GET请求" class="headerlink" title="GET请求"></a>GET请求</h2><ul><li><p>Get方式适合从服务器获取数据<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/24/1b14211b511540f6ef19a042cb403f8c.png"><br>在PHP服务器的Web站点目录<code>D:\web\htdocs</code>中，创建demo.html文件，编码实现Ajax请求，具体如下</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"> <span class="keyword">var</span> xhr = <span class="keyword">new</span> XMLHttpRequest();        <span class="comment">//①创建Ajax对象</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//onreadystatechange：监听Ajax状态变化（Ajax状态发生改变时触发此函数）</span></span></span><br><span class="line"><span class="javascript"> xhr.onreadystatechange = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;  <span class="comment">//④监听</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//readyState属性：表示Ajax状态，如为XMLHttpRequst.DONE表示此次已完成响应。</span></span></span><br><span class="line"><span class="javascript"> <span class="function"><span class="title">if</span>(<span class="params">xhr.readyState==XMLHttpRequest.DONE</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"> <span class="function"><span class="title">if</span>(<span class="params">xhr.status==<span class="number">200</span></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"> <span class="built_in">document</span>.write(xhr.responseText);</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="javascript">xhr.open(<span class="string">&#x27;GET&#x27;</span>,<span class="string">&quot;test.php?a=1&amp;b=2&quot;</span>);  <span class="comment">//②打开，建立HTTP连接</span></span></span><br><span class="line"><span class="javascript">xhr.send();<span class="comment">//③发送请求</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>和html文件同目录下创建<code>test.php</code>文件，写入以下信息：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> json_encode($_GET);  <span class="comment">//将URL参数转换为JSON输出</span></span><br></pre></td></tr></table></figure><p>然后启动PHP服务器后，在浏览器输入<a href="http://localhost:8081/demo.html">http://localhost:8081/demo.html</a>,<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/24/0523753cebb4c82cdb09cfa7eaff7436.png"></p></li><li><p>监听Ajax状态</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/24/27b7857f2e02fc707559e9fe9d126617.png"></p><p><strong>处理服务器返回的信息</strong></p><ul><li><strong>readyState属性</strong><br>readyState属性用于获取Ajax的当前状态，状态值有5种形式。</li></ul><table><thead><tr><th align="center">状态值</th><th align="center">XMLHttpRequest静态属性名</th><th align="center">说明</th><th align="center">解释</th></tr></thead><tbody><tr><td align="center">0</td><td align="center">UNSET</td><td align="center">未发送</td><td align="center">对象已创建</td></tr><tr><td align="center">1</td><td align="center">OPENED</td><td align="center">已打开</td><td align="center">open()方法已调用</td></tr><tr><td align="center">2</td><td align="center">HEADERS_RECEIVED</td><td align="center">收到响应头</td><td align="center">send()方法已调用</td></tr><tr><td align="center">3</td><td align="center">LOADING</td><td align="center">数据传送中</td><td align="center">响应体部分正在被接收</td></tr><tr><td align="center">4</td><td align="center">DONE</td><td align="center">完成</td><td align="center">数据接收完</td></tr></tbody></table><ul><li><p><strong>onreadystatechange属性</strong></p><p>  onreadystatechange事件属性用于感知readyState属性状态的改变，当readyState状态发送改变时，就会调用此事件。</p></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">var</span> xhr=<span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line">xhr.onreadystatechange=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(xhr.readyState);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="built_in">console</span>.log(xhr.readyState);</span><br><span class="line">xhr.open(<span class="string">&#x27;GET&#x27;</span>,<span class="string">&#x27;test.php&#x27;</span>);</span><br><span class="line">xhr.send(); </span><br><span class="line">&lt;/script&gt;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">0</span></span><br><span class="line"><span class="comment">1</span></span><br><span class="line"><span class="comment">2</span></span><br><span class="line"><span class="comment">3</span></span><br><span class="line"><span class="comment">4</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><p>可以看到readyState属性值初始值为0，当调用open()和send()方法后，readyState属性的值会发生变化，每次变化都会触发onreadystatechange事件。</p><ul><li><strong>status属性</strong><br>status属性用于返回当前请求的HTTP状态码，值为数值类型</li></ul><table><thead><tr><th align="center">状态码</th><th align="center">含义</th><th align="center">状态码</th><th align="center">含义</th></tr></thead><tbody><tr><td align="center">200</td><td align="center">正常</td><td align="center">403</td><td align="center">禁止</td></tr><tr><td align="center">301</td><td align="center">永久移动</td><td align="center">404</td><td align="center">找不到</td></tr><tr><td align="center">302</td><td align="center">临时移动</td><td align="center">500</td><td align="center">内部服务器错误</td></tr><tr><td align="center">304</td><td align="center">未修改</td><td align="center">502</td><td align="center">无效网关</td></tr><tr><td align="center">401</td><td align="center">未经授权</td><td align="center">504</td><td align="center">网关超时</td></tr></tbody></table><ul><li><p><strong>获取响应信息的相关属性</strong></p><table><thead><tr><th align="center">属性名</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">responseText</td><td align="center">将响应信息作为字符串返回</td></tr><tr><td align="center">responseXML</td><td align="center">将响应信息格式为XML Document对象并返回(只读)</td></tr></tbody></table></li><li><p><strong>服务端代码简介</strong></p></li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> json_encode($_GET);  <span class="comment">//将URL参数转换为JSON输出</span></span><br></pre></td></tr></table></figure><ol><li>$_GET：GET方式提交到服务器端的数据(必须大写)</li><li>json_encode：将参数转换为json格式</li><li>echo：输出，返回给客户端</li></ol><h2 id="Post请求"><a href="#Post请求" class="headerlink" title="Post请求"></a>Post请求</h2><ul><li>Post方式适合向服务器发送数据</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/24/d29da1c5cf33939f7d3d2f50ef6f3e9f.png"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">       <span class="keyword">var</span> xhr = <span class="keyword">new</span> XMLHttpRequest();</span></span><br><span class="line"><span class="javascript">       xhr.onreadystatechange = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">           <span class="function"><span class="title">if</span>(<span class="params">xhr.readyState==XMLHttpRequest.DONE</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">               <span class="function"><span class="title">if</span>(<span class="params">xhr.status==<span class="number">200</span></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                   <span class="built_in">document</span>.write(xhr.responseText);</span></span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line"><span class="javascript">       xhr.open(<span class="string">&#x27;POST&#x27;</span>,<span class="string">&#x27;test.php&#x27;</span>);</span></span><br><span class="line"><span class="javascript">      <span class="comment">//在HTTP请求头中指定实体内容的编码格式</span></span></span><br><span class="line"><span class="javascript">       xhr.setRequestHeader(<span class="string">&#x27;Content-type&#x27;</span>,<span class="string">&#x27;application/x-www-form-urlencoded&#x27;</span>);</span></span><br><span class="line"><span class="javascript">       <span class="comment">// xhr.send(&#x27;name=Lily&amp;age=18&#x27;);</span></span></span><br><span class="line"><span class="javascript">       <span class="keyword">var</span> name = <span class="string">&#x27;Lily&#x27;</span>;</span></span><br><span class="line"><span class="javascript">       <span class="keyword">var</span> age = <span class="number">18</span>;</span></span><br><span class="line"><span class="javascript">       xhr.send(<span class="string">&#x27;name=&#x27;</span> + name + <span class="string">&#x27;&amp;age=&#x27;</span> + age);</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> json_encode($_POST);</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/24/4b86a86cd1d2681938bb6c9c9e575f8b.png"></p><ul><li><p>通过POST方式向服务器发送ajax请求须设置请求头字段，且在open方法后调用。</p><pre><code>  Content-Type：application/x-www-form-urlencoded</code></pre></li><li><p>拓展阅读<br><a href="https://www.cnblogs.com/qlhMeiMei/p/6846392.html">https://www.cnblogs.com/qlhMeiMei/p/6846392.html</a></p></li><li><p>如果需要传递特殊字符时，可以使用<code>encodeURIComponent()</code>进行URL编码</p><pre><code>  var url=&#39;http://xxx/test.php?name=&#39;+encodeURIComponent(&#39;A&amp;B C&#39;);;  console.log(url);//结果输出：http://xxx/test.php?name=A%26B%20C</code></pre></li></ul><p>在经过URL编码后，”&amp;”被转化为”%26”，空格被转换为”%20”，当服务器收到已编码的内容之后，会对其进行解码，从而正确识别。</p><pre><code>    var str=&#39;A%26B%20C&#39;;    console.log(encodeURIComponent(str)); //输出结果：A&amp;B C</code></pre><h1 id="数据交换格式"><a href="#数据交换格式" class="headerlink" title="数据交换格式"></a>数据交换格式</h1><ul><li>XML</li><li>JSON<br>JSON是一种轻量级的数据交换格式，它采用完全独立于语言的文本格式。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/24/7193183d914eb22d6ade0fab7baeda89.png"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> obj = &#123;<span class="attr">name</span>:<span class="string">&#x27;Tom&#x27;</span>,<span class="attr">age</span>:<span class="number">24</span>&#125;;</span></span><br><span class="line"><span class="javascript">        <span class="comment">//stringify：将对象转换为JSON字符串</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> json = <span class="built_in">JSON</span>.stringify(obj);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> xhr = <span class="keyword">new</span> XMLHttpRequest();</span></span><br><span class="line"><span class="javascript">        xhr.onreadystatechange = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">if</span>(<span class="params">xhr.readyState==XMLHttpRequest.DONE</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="function"><span class="title">if</span>(<span class="params">xhr.status==<span class="number">200</span></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="comment">// var json_res = xhr.responseText;</span></span></span><br><span class="line"><span class="javascript">                    <span class="comment">//JSON.parse：将JSON字符串转换成JS对象。</span></span></span><br><span class="line"><span class="javascript">                    <span class="comment">// var obj_res = JSON.parse(json_res);</span></span></span><br><span class="line"><span class="javascript">                    <span class="comment">//obj.name：JSON对象的成员。</span></span></span><br><span class="line"><span class="javascript">                    <span class="comment">// document.write(obj_res.name);</span></span></span><br><span class="line"><span class="javascript">                    <span class="built_in">document</span>.write(xhr.responseText);</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="javascript">        xhr.open(<span class="string">&#x27;post&#x27;</span>,<span class="string">&#x27;test.php&#x27;</span>);</span></span><br><span class="line"><span class="javascript">        xhr.setRequestHeader(<span class="string">&#x27;Content-type&#x27;</span>,<span class="string">&#x27;application/x-www-form-urlencoded&#x27;</span>);</span></span><br><span class="line"><span class="javascript">        xhr.send(<span class="string">&#x27;msg=&#x27;</span> + <span class="built_in">encodeURIComponent</span>(json));</span></span><br><span class="line"><span class="javascript">        <span class="comment">//encodeURIComponet：对字符串进行URI编码</span></span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"> <span class="keyword">echo</span> $_POST[<span class="string">&#x27;msg&#x27;</span>];</span><br></pre></td></tr></table></figure><p> <img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/24/04d7091a2a8d37f98eb4611d5fcdc164.png"></p><h1 id="无刷新分页"><a href="#无刷新分页" class="headerlink" title="无刷新分页"></a>无刷新分页</h1><ul><li><p>代码思路</p><ol><li>首先读取第一页（客户端提交1，服务端返回第1页内容的json数据）；</li><li>根据点击的按钮，读取相应页。</li></ol></li><li><p>自调用函数<br>用（）包裹匿名函数，其后的（）表示给匿名函数传递参数并立即执行，完成函数的自调用。</p><pre><code>  自调用函数：  ( function  函数名()&#123;      代码;  &#125;) ( )； </code></pre></li><li><p>回调函数<br>若想要函数体中某部分功能由调用者决定，此时可以使用回调函数。<br>简单说，在一个函数执行完毕后，得到想要的特定数据后再去执行的函数，即为回调函数。</p></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//定义函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">f1</span>(<span class="params">f2,f3</span>)</span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;11111&quot;</span>);</span><br><span class="line">f2();</span><br><span class="line">f3();</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;22222&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//调用函数</span></span><br><span class="line">f1(</span><br><span class="line"><span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;33333&quot;</span>);</span><br><span class="line">&#125;,</span><br><span class="line"><span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;44444&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">);</span><br><span class="line"><span class="comment">//运行结果</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">11111</span></span><br><span class="line"><span class="comment">33333</span></span><br><span class="line"><span class="comment">44444</span></span><br><span class="line"><span class="comment">22222</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><ul><li> 继承</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//构造函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Person</span>(<span class="params">name</span>)</span>&#123;</span><br><span class="line"><span class="built_in">this</span>.name=name;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//利用原型对象实现继承</span></span><br><span class="line">Person.prototype.sayHello=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;你好，我是&quot;</span>+<span class="built_in">this</span>.name);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> p1=<span class="keyword">new</span> Person(<span class="string">&#x27;Jim&#x27;</span>);</span><br><span class="line">p1.sayHello();</span><br></pre></td></tr></table></figure><ul><li>源码解析<ol><li>构造函数PageList：封装页面信息，并添加点击事件实现与用户的交互。</li><li>构造函数Comment：向服务器发送ajax请求，获取评论内容，并将服务器返回的JSON数据放入页面中显示出来。</li><li>源码解析–PageList：封装页面信息，并添加点击事件实现与用户的交互。</li><li>页面信息：<br>   页面元素：首页、尾页、上一页、下一页、页码<pre><code>   数据（变量）：页码、总共页数</code></pre></li><li>点击事件：<br>  为四个页面元素添加onclick事件，以更新页面内容。</li><li>函       数:<br> 根据页码更新页面内容。</li></ol></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;</span> <span class="meta-string">&quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.w3.org/1999/xhtml&quot;</span> <span class="attr">xml:lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Type&quot;</span> <span class="attr">content</span>=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">body</span>&#123;<span class="attribute">background</span>:<span class="number">#eee</span>;<span class="attribute">margin</span>:<span class="number">0</span>&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-class">.box</span>&#123;<span class="attribute">width</span>:<span class="number">800px</span>;<span class="attribute">margin</span>:<span class="number">0</span> auto;<span class="attribute">background</span>:<span class="number">#fefefe</span>;<span class="attribute">border-radius</span>:<span class="number">8px</span>;<span class="attribute">padding</span>:<span class="number">20px</span>;<span class="attribute">box-sizing</span>:border-box;<span class="attribute">margin-top</span>:<span class="number">40px</span>&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-class">.title</span>&#123;<span class="attribute">font-family</span>:<span class="string">&#x27;Microsoft YaHei&#x27;</span>;<span class="attribute">color</span>:<span class="number">#666</span>;<span class="attribute">font-size</span>:<span class="number">24px</span>;<span class="attribute">text-align</span>:center;<span class="attribute">margin</span>:<span class="number">10px</span> <span class="number">0</span>&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-class">.comment</span> <span class="selector-tag">ul</span>&#123;<span class="attribute">margin</span>:<span class="number">0</span>;<span class="attribute">padding</span>:<span class="number">10px</span>;<span class="attribute">list-style</span>:none;<span class="attribute">border-bottom</span>:<span class="number">1px</span> solid <span class="number">#ccc</span>&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-class">.comment</span> <span class="selector-tag">li</span>&#123;<span class="attribute">line-height</span>:<span class="number">32px</span>&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-class">.pagelist</span>&#123;<span class="attribute">margin-top</span>:<span class="number">20px</span>;<span class="attribute">text-align</span>:center&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-class">.pagelist</span> <span class="selector-tag">span</span>&#123;<span class="attribute">margin</span>:<span class="number">0</span> <span class="number">2px</span>&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-class">.pagelist</span> <span class="selector-tag">button</span>&#123;<span class="attribute">padding</span>:<span class="number">6px</span> <span class="number">10px</span>;<span class="attribute">cursor</span>:pointer&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-class">.pagelist</span> <span class="selector-tag">button</span><span class="selector-pseudo">:disabled</span>&#123;<span class="attribute">cursor</span>:default&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-class">.progress</span> <span class="selector-tag">div</span>&#123;<span class="attribute">width</span>:<span class="number">0%</span>;<span class="attribute">height</span>:<span class="number">1px</span>;<span class="attribute">position</span>:fixed;<span class="attribute">top</span>:<span class="number">0</span>;<span class="attribute">background-color</span>:<span class="number">#38f</span>;<span class="attribute">box-shadow</span>:<span class="number">1px</span> <span class="number">1px</span> <span class="number">1px</span> <span class="number">#6bf</span>;<span class="attribute">transition</span>: all <span class="number">0.8s</span>&#125;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;progress&quot;</span> <span class="attr">class</span>=<span class="string">&quot;progress&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;title&quot;</span>&gt;</span>查看商品评论<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;comment&quot;</span> <span class="attr">class</span>=<span class="string">&quot;comment&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;pagelist&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>当前是第<span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;page_num&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">span</span>&gt;</span>页<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;page_first&quot;</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;page_prev&quot;</span>&gt;</span>上一页<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;page_next&quot;</span>&gt;</span>下一页<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;page_last&quot;</span>&gt;</span>尾页<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        (<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="keyword">function</span> <span class="title">PageList</span>(<span class="params">options</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">for</span> (<span class="keyword">var</span> i <span class="keyword">in</span> options) &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>[i] = options[i];</span></span><br><span class="line">                &#125;</span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> obj = <span class="built_in">this</span>;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.first.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line">                    obj.page = 1;</span><br><span class="line">                    obj.onChange();</span><br><span class="line">                &#125;;</span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.prev.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line">                    obj.page = (obj.page &gt; 1) ? (obj.page - 1) : 1;</span><br><span class="line">                    obj.onChange();</span><br><span class="line">                &#125;;</span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.next.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line">                    obj.page = (obj.page &gt;= obj.maxPage) ? obj.maxPage : (obj.page + 1);</span><br><span class="line">                    obj.onChange();</span><br><span class="line">                &#125;;</span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.last.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line">                    obj.page = obj.maxPage;</span><br><span class="line">                    obj.onChange();</span><br><span class="line">                &#125;;</span><br><span class="line">            &#125;</span><br><span class="line"><span class="javascript">            <span class="function"><span class="keyword">function</span> <span class="title">Comment</span>(<span class="params">obj</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.obj = obj;</span></span><br><span class="line">            &#125;</span><br><span class="line"><span class="javascript">            Comment.prototype.ajax = <span class="function"><span class="keyword">function</span>(<span class="params">url, start, complete</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">          <span class="keyword">var</span> xhr = <span class="keyword">new</span> XMLHttpRequest();</span></span><br><span class="line"><span class="javascript">          xhr.onreadystatechange = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line">            if (xhr.readyState === 4) &#123;</span><br><span class="line"><span class="handlebars"><span class="xml">              if (xhr.status <span class="tag">&lt; <span class="attr">200</span> || <span class="attr">xhr.status</span> &gt;</span>= 300 &amp;&amp; xhr.status !== 304) &#123;</span></span></span><br><span class="line"><span class="javascript">                alert(<span class="string">&#x27;服务器异常&#x27;</span>);</span></span><br><span class="line"><span class="javascript">                <span class="keyword">return</span>;</span></span><br><span class="line">              &#125;</span><br><span class="line"><span class="javascript">              <span class="keyword">try</span> &#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> json = <span class="built_in">JSON</span>.parse(xhr.responseText);</span></span><br><span class="line"><span class="javascript">              &#125; <span class="function"><span class="title">catch</span>(<span class="params">e</span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">                alert(<span class="string">&#x27;解析服务器返回信息失败&#x27;</span>);</span></span><br><span class="line"><span class="javascript">                <span class="keyword">return</span>;</span></span><br><span class="line">              &#125;</span><br><span class="line">              complete(json);</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;;</span><br><span class="line"><span class="javascript">          xhr.open(<span class="string">&#x27;GET&#x27;</span>, url);</span></span><br><span class="line">          xhr.send();</span><br><span class="line">          start();</span><br><span class="line">        &#125;;</span><br><span class="line"><span class="javascript">         Comment.prototype.create = <span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">          <span class="keyword">var</span> html = <span class="string">&#x27;&#x27;</span>;</span></span><br><span class="line"><span class="javascript">          <span class="keyword">for</span> (<span class="keyword">var</span> i <span class="keyword">in</span> data) &#123;</span></span><br><span class="line"><span class="javascript">            html += <span class="string">&#x27;&lt;ul&gt;&lt;li&gt;用户名：&#x27;</span> + data[i].user + <span class="string">&#x27;　发表时间：&#x27;</span> + data[i].time + <span class="string">&#x27;&lt;/li&gt;&#x27;</span>;</span></span><br><span class="line"><span class="handlebars"><span class="xml">            html += &#x27;<span class="tag">&lt;<span class="name">li</span>&gt;</span>&#x27; + data[i].content + &#x27;<span class="tag">&lt;/<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">ul</span>&gt;</span>&#x27;;</span></span></span><br><span class="line">          &#125;</span><br><span class="line"><span class="javascript">          <span class="built_in">this</span>.obj.innerHTML = html;</span></span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line"><span class="javascript">           <span class="keyword">var</span> comment = <span class="keyword">new</span> Comment(<span class="built_in">document</span>.getElementById(<span class="string">&#x27;comment&#x27;</span>));</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> pageList =<span class="keyword">new</span> PageList(&#123;</span></span><br><span class="line">                page: 1,</span><br><span class="line">                maxPage: 1,</span><br><span class="line"><span class="javascript">                first: <span class="built_in">document</span>.getElementById(<span class="string">&#x27;page_first&#x27;</span>),</span></span><br><span class="line"><span class="javascript">                prev: <span class="built_in">document</span>.getElementById(<span class="string">&#x27;page_prev&#x27;</span>),</span></span><br><span class="line"><span class="javascript">                next: <span class="built_in">document</span>.getElementById(<span class="string">&#x27;page_next&#x27;</span>),</span></span><br><span class="line"><span class="javascript">                last: <span class="built_in">document</span>.getElementById(<span class="string">&#x27;page_last&#x27;</span>),</span></span><br><span class="line"><span class="javascript">                pageNum: <span class="built_in">document</span>.getElementById(<span class="string">&#x27;page_num&#x27;</span>),</span></span><br><span class="line"><span class="javascript">                onChange:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                    comment.ajax(<span class="string">&#x27;data.php?page=&#x27;</span> + <span class="built_in">this</span>.page,</span></span><br><span class="line"><span class="javascript">                        <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="comment">//start回调函数</span></span></span><br><span class="line"></span><br><span class="line">                        &#125;,</span><br><span class="line"><span class="javascript">                        <span class="function"><span class="keyword">function</span>(<span class="params">json</span>)</span>&#123; <span class="comment">//complete回调函数</span></span></span><br><span class="line">                            pageList.maxPage = json.maxPage;</span><br><span class="line">                            comment.create(json.data);</span><br><span class="line">                        &#125;</span><br><span class="line">                    )</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">            pageList.onChange();</span><br><span class="line">        &#125;)();</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//定义data数组，包含10个元素，每个元素表示1条评论</span></span><br><span class="line">$data = [</span><br><span class="line">    [<span class="string">&#x27;id&#x27;</span> =&gt; <span class="number">1</span>, <span class="string">&#x27;user&#x27;</span> =&gt; <span class="string">&#x27;test&#x27;</span>, <span class="string">&#x27;time&#x27;</span> =&gt; <span class="string">&#x27;2018-01-01&#x27;</span>, <span class="string">&#x27;content&#x27;</span> =&gt; <span class="string">&#x27;评论111&#x27;</span>],</span><br><span class="line">    [<span class="string">&#x27;id&#x27;</span> =&gt; <span class="number">2</span>, <span class="string">&#x27;user&#x27;</span> =&gt; <span class="string">&#x27;test&#x27;</span>, <span class="string">&#x27;time&#x27;</span> =&gt; <span class="string">&#x27;2018-01-01&#x27;</span>, <span class="string">&#x27;content&#x27;</span> =&gt; <span class="string">&#x27;评论222&#x27;</span>],</span><br><span class="line">    [<span class="string">&#x27;id&#x27;</span> =&gt; <span class="number">3</span>, <span class="string">&#x27;user&#x27;</span> =&gt; <span class="string">&#x27;test&#x27;</span>, <span class="string">&#x27;time&#x27;</span> =&gt; <span class="string">&#x27;2018-01-01&#x27;</span>, <span class="string">&#x27;content&#x27;</span> =&gt; <span class="string">&#x27;评论233&#x27;</span>],</span><br><span class="line">    [<span class="string">&#x27;id&#x27;</span> =&gt; <span class="number">4</span>, <span class="string">&#x27;user&#x27;</span> =&gt; <span class="string">&#x27;test&#x27;</span>, <span class="string">&#x27;time&#x27;</span> =&gt; <span class="string">&#x27;2018-01-01&#x27;</span>, <span class="string">&#x27;content&#x27;</span> =&gt; <span class="string">&#x27;评论444&#x27;</span>],</span><br><span class="line">    [<span class="string">&#x27;id&#x27;</span> =&gt; <span class="number">5</span>, <span class="string">&#x27;user&#x27;</span> =&gt; <span class="string">&#x27;test&#x27;</span>, <span class="string">&#x27;time&#x27;</span> =&gt; <span class="string">&#x27;2018-01-01&#x27;</span>, <span class="string">&#x27;content&#x27;</span> =&gt; <span class="string">&#x27;评论555&#x27;</span>],</span><br><span class="line">    [<span class="string">&#x27;id&#x27;</span> =&gt; <span class="number">6</span>, <span class="string">&#x27;user&#x27;</span> =&gt; <span class="string">&#x27;test&#x27;</span>, <span class="string">&#x27;time&#x27;</span> =&gt; <span class="string">&#x27;2018-01-01&#x27;</span>, <span class="string">&#x27;content&#x27;</span> =&gt; <span class="string">&#x27;评论666&#x27;</span>],</span><br><span class="line">    [<span class="string">&#x27;id&#x27;</span> =&gt; <span class="number">7</span>, <span class="string">&#x27;user&#x27;</span> =&gt; <span class="string">&#x27;test&#x27;</span>, <span class="string">&#x27;time&#x27;</span> =&gt; <span class="string">&#x27;2018-01-01&#x27;</span>, <span class="string">&#x27;content&#x27;</span> =&gt; <span class="string">&#x27;评论777&#x27;</span>],</span><br><span class="line">    [<span class="string">&#x27;id&#x27;</span> =&gt; <span class="number">8</span>, <span class="string">&#x27;user&#x27;</span> =&gt; <span class="string">&#x27;test&#x27;</span>, <span class="string">&#x27;time&#x27;</span> =&gt; <span class="string">&#x27;2018-01-01&#x27;</span>, <span class="string">&#x27;content&#x27;</span> =&gt; <span class="string">&#x27;评论888&#x27;</span>],</span><br><span class="line">    [<span class="string">&#x27;id&#x27;</span> =&gt; <span class="number">9</span>, <span class="string">&#x27;user&#x27;</span> =&gt; <span class="string">&#x27;test&#x27;</span>, <span class="string">&#x27;time&#x27;</span> =&gt; <span class="string">&#x27;2018-01-01&#x27;</span>, <span class="string">&#x27;content&#x27;</span> =&gt; <span class="string">&#x27;评论999&#x27;</span>],</span><br><span class="line">    [<span class="string">&#x27;id&#x27;</span> =&gt; <span class="number">10</span>, <span class="string">&#x27;user&#x27;</span> =&gt; <span class="string">&#x27;test&#x27;</span>, <span class="string">&#x27;time&#x27;</span> =&gt; <span class="string">&#x27;2018-01-01&#x27;</span>, <span class="string">&#x27;content&#x27;</span> =&gt; <span class="string">&#x27;评论1010&#x27;</span>],</span><br><span class="line">];</span><br><span class="line">$page = <span class="keyword">isset</span>($_GET[<span class="string">&#x27;page&#x27;</span>]) ? max((<span class="keyword">int</span>)$_GET[<span class="string">&#x27;page&#x27;</span>], <span class="number">1</span>) : <span class="number">1</span>;</span><br><span class="line">$size = <span class="number">2</span>;</span><br><span class="line">$maxPage = ceil(count($data) / $size);</span><br><span class="line"><span class="keyword">echo</span> json_encode([</span><br><span class="line">    <span class="string">&#x27;data&#x27;</span> =&gt; array_slice($data, ($page - <span class="number">1</span>) * $size, $size),</span><br><span class="line">    <span class="string">&#x27;maxPage&#x27;</span> =&gt; $maxPage</span><br><span class="line">]);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">page：获取用户端请求的页码值。</span></span><br><span class="line"><span class="comment">size：每页返回的记录数。</span></span><br><span class="line"><span class="comment">maxPage：计算总页数。</span></span><br><span class="line"><span class="comment">json_encode:返回“根据当前页码查询的记录”和“总页数”。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript🌞正则表达式</title>
      <link href="2021/01/15/%E5%89%8D%E7%AB%AF/JavaScript/JavaScript_%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
      <url>2021/01/15/%E5%89%8D%E7%AB%AF/JavaScript/JavaScript_%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<h1 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h1><p><a href="https://ihateregex.io/">正则表达式查询网站I Hate Regex</a></p><ol><li><p>什么是正则表达式<br>正则表达式（Regular Expression，简称regexp）</p><ul><li>概念：是一种描述字符串结构的语法规则（描述字符串特征）</li><li>作用：用于验证各种字符串是否匹配这个特征。</li><li>应用：在项目开发中，手机号码指定位数的隐藏、数据采集、敏感词的过滤以及表单的验证等功能，都可以利用正则表达式来实现。</li></ul></li><li><p>获取正则对象</p><ul><li>字面量方式<pre><code>  /pattern/flags  例如：/abc/gi</code></pre></li><li>RegExp对象构造函数方式<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> <span class="built_in">RegExp</span>(pattern[,flags])</span><br><span class="line"><span class="built_in">RegExp</span>(pattern[,flags])</span><br><span class="line"><span class="comment">//示例</span></span><br><span class="line"><span class="keyword">var</span> str=<span class="string">&#x27;Abc123abc456abc&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> reg=<span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">&#x27;abc&#x27;</span>,<span class="string">&#x27;gi&#x27;</span>);</span><br><span class="line"><span class="built_in">console</span>.log(str.match(reg));</span><br></pre></td></tr></table></figure>pattern：模式文本，由元字符和文本字符（普通字符）组成。<br>flags：模式修饰符。<table><thead><tr><th align="center">模式符</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">g</td><td align="center">用于在目标字符串中实现全局匹配（多次）</td></tr><tr><td align="center">i</td><td align="center">忽略大小写</td></tr><tr><td align="center">m</td><td align="center">实现多行匹配</td></tr><tr><td align="center">u</td><td align="center">以Unicode编码执行正则表达式</td></tr><tr><td align="center">y</td><td align="center">粘性匹配，仅匹配目标字符串中此正则表达式的lastindex属性指示的索引</td></tr><tr><td align="center">^</td><td align="center">匹配字符串开始的位置</td></tr><tr><td align="center">$</td><td align="center">匹配字符串结束的位置</td></tr></tbody></table></li></ul></li><li><p>使用正则对象</p><ul><li>RegExp对象提供的<code>exec()</code>方法，一次仅返回一个匹配结果，匹配成功返回数组，否则返回null<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str=<span class="string">&#x27;Abc123abc456abc&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> reg=<span class="regexp">/abc/gi</span>;</span><br><span class="line"><span class="built_in">console</span>.log(reg.exec(str)); <span class="comment">//返回Abc</span></span><br></pre></td></tr></table></figure></li><li>String对象提供的<code>match()</code>方法，匹配出所有符合要求的内容，匹配成功返回数组，否则返回false<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str=<span class="string">&#x27;Abc123abc456abc&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> reg=<span class="regexp">/abc/gi</span>;</span><br><span class="line"><span class="built_in">console</span>.log(str.match(reg)); <span class="comment">//返回Abc、abc、abc</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>转义字符的处理<br>使用反斜线对特殊字符进行转义</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str=<span class="string">&#x27;^abc\\1.23*edf$&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> reg1=<span class="regexp">/\./</span>;</span><br><span class="line"><span class="built_in">console</span>.log(str.match(reg1));</span><br><span class="line"><span class="keyword">var</span> reg2=<span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">&#x27;\\.&#x27;</span>);</span><br><span class="line"><span class="built_in">console</span>.log(str.match(reg2));</span><br></pre></td></tr></table></figure></li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>请输入用户名<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;username&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&#x27;tips&#x27;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;checkname()&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="keyword">function</span> <span class="title">checkname</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> username = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;username&#x27;</span>).value;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> reg = <span class="regexp">/admin/gi</span>;</span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">if</span>(<span class="params">!(username.match(reg)==<span class="literal">null</span>)</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">document</span>.getElementById(<span class="string">&#x27;tips&#x27;</span>).innerHTML = <span class="string">&#x27;用户名不能包含admin&#x27;</span>;</span></span><br><span class="line"><span class="javascript">            &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">document</span>.getElementById(<span class="string">&#x27;tips&#x27;</span>).innerHTML = <span class="string">&#x27;注册成功&#x27;</span>;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/23/8dd395d313c59a501ded337ff5d2a43c.png"></p><h1 id="字符类别与集合"><a href="#字符类别与集合" class="headerlink" title="字符类别与集合"></a>字符类别与集合</h1><ul><li><strong>字符类别</strong><br>使正则表达式更加简洁，便于阅读。</li></ul><table><thead><tr><th align="center">字符</th><th align="center">含义</th><th align="center">字符</th><th align="center">含义</th></tr></thead><tbody><tr><td align="center">.</td><td align="center">匹配除“\n”外的任何单个字符</td><td align="center">\f</td><td align="center">匹配一个换页符（form-feed)</td></tr><tr><td align="center">\d</td><td align="center">匹配任意一个阿拉伯数字</td><td align="center">\D</td><td align="center">匹配任意一个非阿拉伯数字字符</td></tr><tr><td align="center">\s</td><td align="center">匹配一个空白符，包括空格、制表符、换页符、换行符等</td><td align="center">\S</td><td align="center">匹配一个非空白符</td></tr><tr><td align="center">\w</td><td align="center">匹配任意一个字母（大小写）、数字和下划线</td><td align="center">\W</td><td align="center">匹配任意一个非“字母（大小写）、数字和下划线”的字符</td></tr></tbody></table><ul><li><strong>字符集合</strong><br>正则表达式中的”[]”可以实现一个字符集合</li></ul><table><thead><tr><th align="center">pattern</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">[cat]</td><td align="center">匹配字符集合中的任意一个字符c、a、t</td></tr><tr><td align="center">[^cat]</td><td align="center">匹配除c、a、t以外的字符</td></tr><tr><td align="center">[B-Z]</td><td align="center">匹配字母B~Z范围内的字符</td></tr><tr><td align="center">[^a-z]</td><td align="center">匹配字母a~z范围外的字符</td></tr><tr><td align="center">[a-zA-Z0-9]</td><td align="center">匹配大小写字母和0~9范围内的字符</td></tr><tr><td align="center">[\u4e00-\u9fa5]</td><td align="center">匹配任意一个中文字符</td></tr></tbody></table><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>限定输入内容<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">input</span><span class="selector-attr">[type=text]</span>&#123;<span class="attribute">width</span>: <span class="number">40px</span>;<span class="attribute">border-color</span>: <span class="number">#bbb</span>;<span class="attribute">height</span>: <span class="number">25px</span>;<span class="attribute">font-size</span>: <span class="number">14px</span>;<span class="attribute">border-radius</span>: <span class="number">2px</span>;<span class="attribute">outline</span>: <span class="number">0</span>;<span class="attribute">border</span>: <span class="number">#ccc</span> <span class="number">1px</span> solid;<span class="attribute">padding</span>: <span class="number">0</span> <span class="number">10px</span>;<span class="attribute">-webkit-transition</span>: box-shadow .<span class="number">5s</span>;<span class="attribute">margin-bottom</span>: <span class="number">15px</span>;&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">input</span><span class="selector-attr">[type=text]</span><span class="selector-pseudo">:hover</span>, <span class="selector-tag">input</span><span class="selector-attr">[type=text]</span><span class="selector-pseudo">:focus</span>,<span class="selector-tag">input</span><span class="selector-attr">[type=submit]</span><span class="selector-pseudo">:hover</span>&#123;<span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#56b4ef</span>; <span class="attribute">box-shadow</span>: inset <span class="number">0</span> <span class="number">1px</span> <span class="number">3px</span> <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,.<span class="number">05</span>),<span class="number">0</span> <span class="number">0</span> <span class="number">8px</span> <span class="built_in">rgba</span>(<span class="number">82</span>,<span class="number">168</span>,<span class="number">236</span>,.<span class="number">6</span>); <span class="attribute">-webkit-transition</span>: box-shadow .<span class="number">5s</span>;&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">input</span><span class="selector-pseudo">::-webkit-input-placeholder</span> &#123;<span class="attribute">color</span>: <span class="number">#999</span>; <span class="attribute">-webkit-transition</span>: color .<span class="number">5s</span>;&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">input</span><span class="selector-pseudo">:focus</span><span class="selector-pseudo">::-webkit-input-placeholder</span>,  <span class="selector-tag">input</span><span class="selector-pseudo">:hover</span><span class="selector-pseudo">::-webkit-input-placeholder</span> &#123;<span class="attribute">color</span>: <span class="number">#c2c2c2</span>; <span class="attribute">-webkit-transition</span>: color .<span class="number">5s</span>;&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">input</span><span class="selector-attr">[type=submit]</span>&#123;<span class="attribute">height</span>: <span class="number">30px</span>; <span class="attribute">width</span>: <span class="number">80px</span>; <span class="attribute">background</span>: <span class="number">#4393C9</span>; <span class="attribute">border</span>:<span class="number">1px</span> solid <span class="number">#fff</span>;<span class="attribute">color</span>: <span class="number">#fff</span>;<span class="attribute">font</span>:<span class="number">14px</span> bolder; &#125;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">id</span>=<span class="string">&quot;form&quot;</span>&gt;</span></span><br><span class="line">      年份 <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;year&quot;</span>&gt;</span></span><br><span class="line">      月份 <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;month&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;查询&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;result&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">      <span class="function"><span class="keyword">function</span> <span class="title">checkYear</span>(<span class="params">obj</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">if</span> (!obj.value.match(<span class="regexp">/^\d&#123;4&#125;$/</span>)) &#123;</span></span><br><span class="line"><span class="javascript">          obj.style.borderColor = <span class="string">&#x27;red&#x27;</span>;</span></span><br><span class="line"><span class="javascript">          result.innerHTML = <span class="string">&#x27;输入错误，年份为4位数字表示&#x27;</span>;</span></span><br><span class="line"><span class="javascript">          <span class="keyword">return</span> <span class="literal">false</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="javascript">        result.innerHTML = <span class="string">&#x27;&#x27;</span>;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">return</span> <span class="literal">true</span>;</span></span><br><span class="line">      &#125;</span><br><span class="line"><span class="javascript">      <span class="function"><span class="keyword">function</span> <span class="title">checkMonth</span>(<span class="params">obj</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">if</span> (!obj.value.match(<span class="regexp">/^((0?[1-9])|(1[012]))$/</span>)) &#123;</span></span><br><span class="line"><span class="javascript">          obj.style.borderColor = <span class="string">&#x27;red&#x27;</span>;</span></span><br><span class="line"><span class="javascript">          result.innerHTML = <span class="string">&#x27;输入错误，月份为1~12之间&#x27;</span>;</span></span><br><span class="line"><span class="javascript">          <span class="keyword">return</span> <span class="literal">false</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="javascript">        result.innerHTML = <span class="string">&#x27;&#x27;</span>;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">return</span> <span class="literal">true</span>;</span></span><br><span class="line">      &#125;</span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> form = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;form&#x27;</span>);             <span class="comment">// &lt;form&gt;元素对象</span></span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> result = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;result&#x27;</span>);         <span class="comment">// &lt;div&gt;元素对象</span></span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> inputs = <span class="built_in">document</span>.getElementsByTagName(<span class="string">&#x27;input&#x27;</span>);    <span class="comment">// &lt;input&gt;元素集合</span></span></span><br><span class="line"><span class="javascript">      form.onsubmit = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">return</span> checkYear(inputs.year) &amp;&amp; checkMonth(inputs.month);</span></span><br><span class="line">      &#125;;</span><br><span class="line"><span class="javascript">      inputs.year.onfocus = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">this</span>.style.borderColor = <span class="string">&#x27;&#x27;</span>;</span></span><br><span class="line">      &#125;;</span><br><span class="line"><span class="javascript">      inputs.month.onfocus = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">this</span>.style.borderColor = <span class="string">&#x27;&#x27;</span>;</span></span><br><span class="line">      &#125;;</span><br><span class="line"><span class="javascript">      <span class="keyword">if</span> (!<span class="built_in">String</span>.prototype.trim) &#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">String</span>.prototype.trim = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">          <span class="keyword">return</span> <span class="built_in">this</span>.replace(<span class="regexp">/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g</span>, <span class="string">&#x27;&#x27;</span>);</span></span><br><span class="line">        &#125;;</span><br><span class="line">      &#125;</span><br><span class="line"><span class="javascript">      inputs.year.onblur = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">this</span>.value = <span class="built_in">this</span>.value.trim();</span></span><br><span class="line"><span class="javascript">        checkYear(<span class="built_in">this</span>);</span></span><br><span class="line">      &#125;;</span><br><span class="line"><span class="javascript">      inputs.month.onblur = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">this</span>.value = <span class="built_in">this</span>.value.trim();</span></span><br><span class="line"><span class="javascript">        checkMonth(<span class="built_in">this</span>);</span></span><br><span class="line">      &#125;;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/23/9ea4277327e36652b380f6f9a39f5398.png"></p><h1 id="字符限定与分组"><a href="#字符限定与分组" class="headerlink" title="字符限定与分组"></a>字符限定与分组</h1><ul><li>限定符<pre><code>  var reg=/\d&#123;6&#125;/gi; //匹配6个连续出现的数字</code></pre></li></ul><table><thead><tr><th align="center">限定符</th><th align="center">说明</th><th align="center">举例</th></tr></thead><tbody><tr><td align="center">?</td><td align="center">匹配前面的字符零次或一次</td><td align="center">ht?t</td></tr><tr><td align="center">+</td><td align="center">匹配前面的字符一次或多次</td><td align="center">bre+ad</td></tr><tr><td align="center">*</td><td align="center">匹配前面的字符零次或多次</td><td align="center">ro*se</td></tr><tr><td align="center">{n}</td><td align="center">匹配前面的字符n次</td><td align="center">hit{2}er</td></tr><tr><td align="center">{n,}</td><td align="center">匹配前面的字符最少n次</td><td align="center">hit{2,}er</td></tr><tr><td align="center">{n,m}</td><td align="center">匹配前面的字符最少n次，最多m次</td><td align="center">fe{0,2}</td></tr></tbody></table><ul><li>贪婪与懒惰匹配<ol><li>贪婪匹配表示匹配尽可能多的字符</li><li>懒惰匹配表示匹配尽可能少的字符</li><li>在默认情况下，是贪婪匹配，若想实现懒惰匹配，需在上一个限定符后面加上”?”符号<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str=<span class="string">&#x27;webWEBWebwEb&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> reg1=<span class="regexp">/w.*b/gi</span>;   <span class="comment">//贪婪匹配</span></span><br><span class="line"><span class="keyword">var</span> reg2=<span class="regexp">/w.*?b/gi</span>; <span class="comment">//懒惰匹配</span></span><br><span class="line"><span class="built_in">console</span>.log(reg1.exec(str));   <span class="comment">//webWEBWebwEb 获得最先出现的w到最后出现的b</span></span><br><span class="line"><span class="built_in">console</span>.log(reg2.exec(str));   <span class="comment">//web 获得最先出现的w到最先出现的b</span></span><br></pre></td></tr></table></figure></li></ol></li></ul><h1 id="括号字符"><a href="#括号字符" class="headerlink" title="括号字符"></a>括号字符</h1><p>被括号字符“()”括起来的内容，称之为”子表达式“</p><ol><li>改变限定符的作用范围<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//改变前</span></span><br><span class="line">正则表达式：<span class="keyword">catch</span>|er</span><br><span class="line">可匹配的结果：<span class="keyword">catch</span>、er</span><br><span class="line"><span class="comment">//改变后</span></span><br><span class="line">正则表达式：cat(ch|er)</span><br><span class="line">可匹配的结果：<span class="keyword">catch</span>、cater</span><br></pre></td></tr></table></figure></li><li>分组<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//分组前</span></span><br><span class="line">正则表达式：abc&#123;<span class="number">2</span>&#125;</span><br><span class="line">可匹配的结果：abcc</span><br><span class="line"><span class="comment">//分组后</span></span><br><span class="line">正则表达式： <span class="function"><span class="title">a</span>(<span class="params">bc</span>)</span>&#123;<span class="number">2</span>&#125;</span><br><span class="line">可匹配的结果：abcbc</span><br></pre></td></tr></table></figure></li><li>捕获<br>将子表达式匹配到的内容存储到系统的缓存区中。<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> res1 = <span class="string">&#x27;1234&#x27;</span>.match(<span class="regexp">/\d\d\d\d/g</span>);</span><br><span class="line"><span class="built_in">console</span>.log(res1); <span class="comment">//[&quot;1234&quot;]</span></span><br><span class="line"><span class="keyword">var</span> res2 = <span class="string">&#x27;1234&#x27;</span>.match(<span class="regexp">/(\d)(\d)(\d)(\d)/</span>);</span><br><span class="line"><span class="built_in">console</span>.log(res2); <span class="comment">// [&quot;1234&quot;,&quot;1&quot;,&quot;2&quot;,&quot;3&quot;,&quot;4&quot;]</span></span><br><span class="line"><span class="keyword">var</span> res3 = <span class="string">&#x27;1234&#x27;</span>.match(<span class="regexp">/(\d)(\d)(\d)(\d)/g</span>);</span><br><span class="line"><span class="built_in">console</span>.log(res3);  <span class="comment">//[&quot;1234&quot;]</span></span><br></pre></td></tr></table></figure></li><li>反向引用<br>在正则表达式中，获取存放在缓存区内的子表达式的捕获内容，则可以使用”\n“(n&gt;0)的方式引用<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">\<span class="number">1</span>：第一个子表达式捕获的内容</span><br><span class="line">\<span class="number">2</span>：第二个子表达式捕获的内容</span><br><span class="line"><span class="keyword">var</span> reg1=<span class="regexp">/(\d)\1\1/gi</span>; 连续三个相同的数字</span><br><span class="line"><span class="keyword">var</span> reg2=<span class="regexp">/(\s)(\s)\1\2/gi</span>; ABAB格式</span><br></pre></td></tr></table></figure></li></ol><h1 id="正则相关方法"><a href="#正则相关方法" class="headerlink" title="正则相关方法"></a>正则相关方法</h1><ol><li>RegExp对象 的test()方法：<br>检测正则表达式与指定的字符串是否匹配，返回true或false。<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> reg = <span class="regexp">/([A-Z])([A-Z])\1\2/g</span>;</span><br><span class="line"><span class="built_in">console</span>.log(reg.test(<span class="string">&#x27;1234&#x27;</span>));    <span class="comment">//false    </span></span><br><span class="line"><span class="built_in">console</span>.log(reg.test(<span class="string">&#x27;abab&#x27;</span>));    <span class="comment">//false</span></span><br><span class="line"><span class="built_in">console</span>.log(reg.test(<span class="string">&#x27;CDCD&#x27;</span>));    <span class="comment">//true</span></span><br><span class="line"><span class="built_in">console</span>.log(reg.test(<span class="string">&#x27;EfEf&#x27;</span>));    <span class="comment">//false</span></span><br></pre></td></tr></table></figure></li><li>String对象的search()方法：<br>可以返回指定模式的子串在字符串首次出现的位置，查找失败返回-1。<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">&#x27;123*abc.456&#x27;</span>;</span><br><span class="line"><span class="built_in">console</span>.log(str.search(<span class="string">&#x27;.*&#x27;</span>));       <span class="comment">//0</span></span><br><span class="line"><span class="built_in">console</span>.log(str.search(<span class="regexp">/[\.\*]/</span>));   <span class="comment">//3</span></span><br></pre></td></tr></table></figure><blockquote><p>search()方法如果传入一个非正则表达式对象，则会将其转换为正则表达式对象</p></blockquote></li><li>String对象的split()方法<br>用于根据指定的分隔符将一个字符串分割成字符串数组，其分割后的字符串数组中不包括分隔符。<br>当分隔符不只一个时，需要定义正则对象才能够完成字符串的分割操作。<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">&#x27;test@123.com&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> reg = <span class="regexp">/[@\.]/</span>;</span><br><span class="line"><span class="keyword">var</span> split_res = str.split(reg);</span><br><span class="line"><span class="built_in">console</span>.log(split_res);    <span class="comment">// 输出结果：(3) [&quot;test&quot;, &quot;123&quot;, &quot;com&quot;]</span></span><br></pre></td></tr></table></figure></li><li>String对象的replace()方法<br>用 newChar 字符替换字符串中出现的所有 searchChar 字符，并返回替换后的新字符串。<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">&#x27;test@123.com&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> str_new= str.replace(‘<span class="number">123</span>’,’<span class="number">163</span>’);</span><br><span class="line"><span class="built_in">console</span>.log(str_new);    <span class="comment">// 输出结果：test@163.com</span></span><br></pre></td></tr></table></figure></li></ol><blockquote><p>replace：获取捕获内容，并对捕获内容进行替换</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str=<span class="string">&#x27;12ab34&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> reg=<span class="regexp">/(\d)(\d)/gi</span>;</span><br><span class="line"><span class="built_in">console</span>.log(str.match(reg));</span><br><span class="line"><span class="built_in">console</span>.log(str.replace(reg,<span class="string">&#x27;*&#x27;</span>));  <span class="comment">//[&quot;12&quot;,[&quot;34&quot;]]  *ab*</span></span><br></pre></td></tr></table></figure><blockquote><p>$n:获取第n个字表达式捕获的内容</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">&#x27;Regular Capture&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> reg = <span class="regexp">/(\w+)\s(\w+)/gi</span>;</span><br><span class="line"><span class="keyword">var</span> newStr = str.replace(reg,<span class="string">&#x27;$2 $1&#x27;</span>);</span><br><span class="line"><span class="built_in">console</span>.log(newStr);</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>内容查找与替换<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">div</span>&#123;<span class="attribute">float</span>:left;&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">input</span>&#123;<span class="attribute">margin</span>:<span class="number">0</span> <span class="number">20px</span>;&#125;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>过滤前内容:<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">id</span>=<span class="string">&quot;pre&quot;</span> <span class="attr">rows</span>=<span class="string">&quot;10&quot;</span> <span class="attr">cols</span>=<span class="string">&quot;40&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;btn&quot;</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;过滤&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>过滤后内容:<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">id</span>=<span class="string">&quot;res&quot;</span> <span class="attr">rows</span>=<span class="string">&quot;10&quot;</span> <span class="attr">cols</span>=<span class="string">&quot;40&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">      <span class="built_in">document</span>.getElementById(<span class="string">&#x27;btn&#x27;</span>).onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 定义查找并需要替换的内容规则，[\u4e00-\u9fa5]表示匹配任意中文字符</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> reg = <span class="regexp">/(bad)|[\u4e00-\u9fa5]/gi</span>;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> str = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;pre&#x27;</span>).value;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> newstr = str.replace(reg, <span class="string">&#x27;*&#x27;</span>);</span></span><br><span class="line"><span class="javascript">        <span class="built_in">document</span>.getElementById(<span class="string">&#x27;res&#x27;</span>).innerHTML = newstr;</span></span><br><span class="line">      &#125;;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/23/fba47172672ed97909dab0842fe31f3a.png"></p><h1 id="表单验证"><a href="#表单验证" class="headerlink" title="表单验证"></a>表单验证</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>表单验证<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;case03.css&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box-head&quot;</span>&gt;</span>填写注册信息<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box-body&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">form</span>&gt;</span>  <span class="comment">&lt;!-- ----- --&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">table</span>&gt;</span>   <span class="comment">&lt;!-- ------- --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">th</span>&gt;</span>用户名称：<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;长度4~12，英文大小写字母&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">th</span>&gt;</span>密　　码：<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;pwd&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;长度6~20，大小写字母、数字或下划线&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">th</span>&gt;</span>确认密码：<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;repwd&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请再次输入密码进行确认&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">th</span>&gt;</span>手机号码：<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;tel&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;13、14、15、17、18开头的11位手机号&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">th</span>&gt;</span>电子邮箱：<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;email&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;用户名@域名（域名后缀至少2个字符）&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">&quot;3&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;注册&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;case03.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span>&#123;<span class="attribute">margin-top</span>:<span class="number">20px</span>;&#125;</span><br><span class="line"><span class="selector-class">.box</span>&#123;<span class="attribute">font-size</span>:<span class="number">13px</span>;<span class="attribute">margin</span>:<span class="number">0</span> auto; <span class="attribute">width</span>: <span class="number">80%</span>;&#125;</span><br><span class="line"><span class="selector-class">.box-head</span>&#123;<span class="attribute">padding</span>:<span class="number">15px</span> <span class="number">20px</span>;<span class="attribute">font-size</span>:<span class="number">14px</span>; <span class="attribute">text-align</span>: center; <span class="attribute">font-size</span>:<span class="number">24px</span>; <span class="attribute">font</span>:bolder;&#125;</span><br><span class="line"><span class="selector-class">.box-body</span>&#123;<span class="attribute">padding</span>:<span class="number">10px</span> <span class="number">20px</span>;&#125;</span><br><span class="line"><span class="selector-class">.box-body</span> <span class="selector-tag">th</span>&#123;<span class="attribute">font-weight</span>:normal;<span class="attribute">vertical-align</span>:top;<span class="attribute">padding-top</span>:<span class="number">12px</span>;&#125;</span><br><span class="line"><span class="selector-class">.box-body</span> <span class="selector-tag">tr</span><span class="selector-pseudo">:last-child</span>&#123; <span class="attribute">text-align</span>: center;&#125;</span><br><span class="line"><span class="selector-class">.box-body</span> <span class="selector-tag">input</span>&#123;<span class="attribute">vertical-align</span>:middle;<span class="attribute">font-family</span>:Tahoma,simsun;<span class="attribute">font-size</span>:<span class="number">12px</span>;&#125;</span><br><span class="line"><span class="selector-class">.box-body</span> <span class="selector-tag">input</span><span class="selector-attr">[type=text]</span>,<span class="selector-class">.box-body</span> <span class="selector-tag">input</span><span class="selector-attr">[type=password]</span>&#123;<span class="attribute">border-color</span>: <span class="number">#bbb</span>;<span class="attribute">height</span>: <span class="number">38px</span>;<span class="attribute">font-size</span>: <span class="number">14px</span>;<span class="attribute">border-radius</span>: <span class="number">2px</span>;<span class="attribute">outline</span>: <span class="number">0</span>;<span class="attribute">border</span>: <span class="number">#ccc</span> <span class="number">1px</span> solid;<span class="attribute">padding</span>: <span class="number">0</span> <span class="number">10px</span>; <span class="attribute">width</span>: <span class="number">350px</span>;<span class="attribute">-webkit-transition</span>: box-shadow .<span class="number">5s</span>;<span class="attribute">margin-bottom</span>: <span class="number">15px</span>;&#125;</span><br><span class="line"><span class="selector-class">.box-body</span> <span class="selector-tag">input</span><span class="selector-attr">[type=text]</span><span class="selector-pseudo">:hover</span>, <span class="selector-class">.box-body</span>  <span class="selector-tag">input</span><span class="selector-attr">[type=text]</span><span class="selector-pseudo">:focus</span>, <span class="selector-class">.box-body</span> <span class="selector-tag">input</span><span class="selector-attr">[type=password]</span><span class="selector-pseudo">:hover</span>, <span class="selector-class">.box-body</span>  <span class="selector-tag">input</span><span class="selector-attr">[type=password]</span><span class="selector-pseudo">:focus</span> &#123;<span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#56b4ef</span>; <span class="attribute">box-shadow</span>: inset <span class="number">0</span> <span class="number">1px</span> <span class="number">3px</span> <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,.<span class="number">05</span>),<span class="number">0</span> <span class="number">0</span> <span class="number">8px</span> <span class="built_in">rgba</span>(<span class="number">82</span>,<span class="number">168</span>,<span class="number">236</span>,.<span class="number">6</span>); <span class="attribute">-webkit-transition</span>: box-shadow .<span class="number">5s</span>;&#125;</span><br><span class="line"><span class="selector-class">.box-body</span> <span class="selector-tag">input</span><span class="selector-pseudo">::-webkit-input-placeholder</span> &#123;<span class="attribute">color</span>: <span class="number">#999</span>; <span class="attribute">-webkit-transition</span>: color .<span class="number">5s</span>;&#125;</span><br><span class="line"><span class="selector-class">.box-body</span> <span class="selector-tag">input</span><span class="selector-pseudo">:focus</span><span class="selector-pseudo">::-webkit-input-placeholder</span>,  <span class="selector-tag">input</span><span class="selector-pseudo">:hover</span><span class="selector-pseudo">::-webkit-input-placeholder</span> &#123;<span class="attribute">color</span>: <span class="number">#c2c2c2</span>; <span class="attribute">-webkit-transition</span>: color .<span class="number">5s</span>;&#125;</span><br><span class="line"><span class="selector-class">.box-body</span> <span class="selector-tag">input</span><span class="selector-attr">[type=submit]</span>&#123;<span class="attribute">padding</span>:<span class="number">4px</span> <span class="number">15px</span>;<span class="attribute">cursor</span>:pointer; <span class="attribute">width</span>:<span class="number">120px</span>; <span class="attribute">height</span>:<span class="number">40px</span>; <span class="attribute">background</span>: <span class="number">#4393C9</span>; <span class="attribute">border</span>:<span class="number">1px</span> solid <span class="number">#fff</span>; <span class="attribute">color</span>: <span class="number">#fff</span>;<span class="attribute">font</span>:<span class="number">16px</span> bolder;&#125;</span><br><span class="line"><span class="selector-class">.box-body</span> <span class="selector-class">.error</span>&#123;<span class="attribute">border</span>:<span class="number">1px</span> solid <span class="number">#FF3300</span>; <span class="attribute">background</span>: <span class="number">#FFF2E5</span>; <span class="attribute">font-size</span>:<span class="number">10px</span>; <span class="attribute">height</span>: <span class="number">30px</span>; <span class="attribute">line-height</span>: <span class="number">30px</span>;<span class="attribute">margin-bottom</span>:<span class="number">10px</span>; <span class="attribute">padding</span>:<span class="number">0</span> <span class="number">10px</span>;&#125;</span><br><span class="line"><span class="selector-class">.box-body</span> <span class="selector-class">.success</span>&#123;<span class="attribute">border</span>:<span class="number">1px</span> solid <span class="number">#01BE00</span>; <span class="attribute">background</span>: <span class="number">#E6FEE4</span>; <span class="attribute">font-size</span>:<span class="number">10px</span>; <span class="attribute">height</span>: <span class="number">30px</span>; <span class="attribute">line-height</span>: <span class="number">30px</span>;<span class="attribute">margin-bottom</span>:<span class="number">10px</span>; <span class="attribute">padding</span>:<span class="number">0</span> <span class="number">10px</span>;&#125;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取所有input框</span></span><br><span class="line"><span class="keyword">var</span> inputs = <span class="built_in">document</span>.getElementsByTagName(<span class="string">&#x27;input&#x27;</span>);</span><br><span class="line">inputs[<span class="number">0</span>].focus();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 为每个input框添加失去焦点事件</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; inputs.length - <span class="number">1</span>; ++i) &#123;</span><br><span class="line">  inputs[i].onblur = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    inputBlur(<span class="built_in">this</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">inputBlur</span>(<span class="params">obj</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> name = obj.name;           <span class="comment">// 获取输入框的name值</span></span><br><span class="line">  <span class="keyword">var</span> val = obj.value;           <span class="comment">// 获取输入框的value值</span></span><br><span class="line">  <span class="keyword">var</span> tips = obj.placeholder;    <span class="comment">// 获取输入框中的提示信息</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// var fu = obj.parentNode;</span></span><br><span class="line">  <span class="comment">// var xiongdi = fu.nextSibling.nextSibling;   //回车会被当成一个文本节点，所以要next两次</span></span><br><span class="line">  <span class="keyword">var</span> tips_obj = obj.parentNode.nextSibling.nextSibling.firstChild;  <span class="comment">// 获取提示信息显示的div元素对象</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 1. 去掉两端的空白字符</span></span><br><span class="line">  val = val.trim();</span><br><span class="line">  <span class="comment">// 2. 文本框内容为空，给出提示信息</span></span><br><span class="line">  <span class="keyword">if</span> (!val) &#123;</span><br><span class="line">    error(tips_obj, <span class="string">&#x27;输入框不能为空&#x27;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 3. 获取正则匹配规则和提示信息</span></span><br><span class="line">  <span class="keyword">var</span> reg_msg = getRegMsg(name, tips);</span><br><span class="line">  <span class="comment">// 4. 检测是否否he正则匹配</span></span><br><span class="line">  <span class="keyword">if</span> (reg_msg[<span class="string">&#x27;reg&#x27;</span>].test(val)) &#123;</span><br><span class="line">    <span class="comment">// 匹配成功，显示成功的提示信息</span></span><br><span class="line">    success(tips_obj, reg_msg[<span class="string">&#x27;msg&#x27;</span>][<span class="string">&#x27;success&#x27;</span>]);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// 匹配失败，显示失败的提示信息</span></span><br><span class="line">    error(tips_obj, reg_msg[<span class="string">&#x27;msg&#x27;</span>][<span class="string">&#x27;error&#x27;</span>]);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 根据input的name值，设置正则规则及提示信息</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getRegMsg</span>(<span class="params">name, tips</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> reg = msg = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">  <span class="keyword">switch</span> (name) &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;username&#x27;</span>:</span><br><span class="line">      reg = <span class="regexp">/^[a-zA-Z]&#123;4,12&#125;$/</span>;</span><br><span class="line">      msg = &#123;<span class="string">&#x27;success&#x27;</span>: <span class="string">&#x27;用户名输入正确&#x27;</span>, <span class="string">&#x27;error&#x27;</span>: tips&#125;;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;pwd&#x27;</span>:</span><br><span class="line">      reg = <span class="regexp">/^\w&#123;6,20&#125;$/</span>;</span><br><span class="line">      msg = &#123;<span class="string">&#x27;success&#x27;</span>: <span class="string">&#x27;密码输入正确&#x27;</span>, <span class="string">&#x27;error&#x27;</span>: tips&#125;;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;repwd&#x27;</span>:</span><br><span class="line">      <span class="keyword">var</span> con = <span class="built_in">document</span>.getElementsByTagName(<span class="string">&#x27;input&#x27;</span>)[<span class="number">1</span>].value;</span><br><span class="line">      reg = <span class="built_in">RegExp</span>(<span class="string">&quot;^&quot;</span> + con + <span class="string">&quot;$&quot;</span>);</span><br><span class="line">      msg = &#123;<span class="string">&#x27;success&#x27;</span>: <span class="string">&#x27;两次密码输入正确&#x27;</span>, <span class="string">&#x27;error&#x27;</span>: <span class="string">&#x27;两次输入的密码不一致&#x27;</span>&#125;;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;tel&#x27;</span>:</span><br><span class="line">      reg = <span class="regexp">/^1[34578]\d&#123;9&#125;$/</span>;</span><br><span class="line">      msg = &#123;<span class="string">&#x27;success&#x27;</span>: <span class="string">&#x27;手机号码输入正确&#x27;</span>, <span class="string">&#x27;error&#x27;</span>: tips&#125;;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;email&#x27;</span>:</span><br><span class="line">      reg = <span class="regexp">/^(\w+(\_|\-|\.)*)+@(\w+(\-)?)+(\.\w&#123;2,&#125;)+$/</span>;</span><br><span class="line">      msg = &#123;<span class="string">&#x27;success&#x27;</span>: <span class="string">&#x27;邮箱输入正确&#x27;</span>, <span class="string">&#x27;error&#x27;</span>: tips&#125;;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> &#123;<span class="string">&#x27;reg&#x27;</span>: reg, <span class="string">&#x27;msg&#x27;</span>: msg&#125;;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 成功</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">success</span>(<span class="params">obj, msg</span>) </span>&#123;</span><br><span class="line">  obj.className = <span class="string">&#x27;success&#x27;</span>;</span><br><span class="line">  obj.innerHTML = msg;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 失败</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">error</span>(<span class="params">obj, msg</span>) </span>&#123;</span><br><span class="line">  obj.className = <span class="string">&#x27;error&#x27;</span>;</span><br><span class="line">  obj.innerHTML = msg + <span class="string">&#x27;，请重新输入&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/23/4a94c38f802bec0a3ec225449773b4aa.png"></p>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript🌞jQuery</title>
      <link href="2021/01/15/%E5%89%8D%E7%AB%AF/JavaScript/JavaScript_jQuery/"/>
      <url>2021/01/15/%E5%89%8D%E7%AB%AF/JavaScript/JavaScript_jQuery/</url>
      
        <content type="html"><![CDATA[<h1 id="jQuery"><a href="#jQuery" class="headerlink" title="jQuery"></a>jQuery</h1><ul><li>基本概念<ol><li>jQuery：一款优秀的JavaScript框架库，封装了很多的JavaScript函数。</li><li>作用：简化了HTML与JavaScript之间的操作，使得DOM对象、事件处理、动画效果、Ajax等操作的实现语法更加简洁，提高了程序的开发效率，消除很多跨浏览器的兼容问题。</li></ol></li><li>下载jQuery<ol><li>官方网址：<a href="http://jquery.com/">http://jquery.com</a></li><li>jQuery官网引用地址最近国内访问会经常出现打不开的情况，可以戳<a href="https://www.jq22.com/jquery-info122">jQuery插件库</a></li><li><a href="https://www.runoob.com/jquery/jquery-tutorial.html">jQuery|菜鸟教程</a></li></ol></li><li>引入jQuery<ol><li>下载：minified（压缩版，去掉注释和空白行，引入本地下载的jQuery。<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;jquery-1.12.4.min.js&quot;</span>&gt;</span><span class="handlebars"><span class="xml"><span class="tag">&lt;/<span class="name">scirpt</span>&gt;</span></span></span></span><br></pre></td></tr></table></figure></li><li>CDN：内容分发网络，通过CDN的优势可以加快jQuery文件的访问速度<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>   <span class="attr">src</span>=<span class="string">&quot;https://code.jquery.com/jquery-3.4.1.min.js&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol></li><li>使用jQuery</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">在HTML页面中创建&lt;h2&gt;元素，该元素含有文本“测试”和“居中”属性的。</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">//html实现</span></span><br><span class="line">&lt;h2 align=‘center’&gt;测试&lt;/h2&gt;</span><br><span class="line"><span class="comment">//JS实现</span></span><br><span class="line"><span class="keyword">var</span> h2 = <span class="built_in">document</span>.createElement(<span class="string">&#x27;h2&#x27;</span>); </span><br><span class="line"><span class="keyword">var</span> text = <span class="built_in">document</span>.createTextNode(‘测试’); </span><br><span class="line"><span class="keyword">var</span> attr = <span class="built_in">document</span>.createAttribute(<span class="string">&#x27;align&#x27;</span>);</span><br><span class="line">attr.value = ‘center’; </span><br><span class="line">h2.setAttributeNode(attr);  </span><br><span class="line">h2.appendChild(text); </span><br><span class="line"><span class="built_in">document</span>.querySelector(<span class="string">&#x27;body&#x27;</span>).appendChild(h2);</span><br><span class="line"><span class="comment">//jQuery实现</span></span><br><span class="line"><span class="comment">//美元符号$表示jQuery类，也就是说&quot;$()&quot;等价于&quot;jQuery()&quot;,即jQuery的构造函数。</span></span><br><span class="line">$(<span class="string">&#x27;&lt;h2 align=&quot;center&quot;&gt;测试&lt;/h2&gt;&#x27;</span>).appendTo(<span class="string">&#x27;body&#x27;</span>);</span><br></pre></td></tr></table></figure><h1 id="元素操作"><a href="#元素操作" class="headerlink" title="元素操作"></a>元素操作</h1><h2 id="jQuery选择器"><a href="#jQuery选择器" class="headerlink" title="jQuery选择器"></a>jQuery选择器</h2><p><strong>语法：$(选择器)</strong></p><ul><li>基本选择器、层级选择器</li><li>基本过滤选择器、内容选择器</li><li>可见性选择器、属性选择器</li><li>子元素选择器、表单选择器</li></ul><h3 id="基本选择器"><a href="#基本选择器" class="headerlink" title="基本选择器"></a>基本选择器</h3><p>基本选择器常用的有标签选择器、类选择器和ID选择器</p><table><thead><tr><th align="center">CSS选择器</th><th align="center">功能描述</th><th align="center">示例</th></tr></thead><tbody><tr><td align="center">li{color:red}</td><td align="center">根据指定元素名匹配所有元素</td><td align="center">${“li”}</td></tr><tr><td align="center">.bar{color:red}</td><td align="center">根据指定类名匹配所有元素</td><td align="center">${“.bar”}</td></tr><tr><td align="center">#btn{color:red}</td><td align="center">根据指定id匹配一个元素</td><td align="center">${“#bar}”</td></tr><tr><td align="center">li,.bar,#btn{color:red}</td><td align="center">同时获取多个元素</td><td align="center">${“li,p,div”}</td></tr></tbody></table><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/25/b0ece8129f371bfe621892437397d7a0.png"></p><h3 id="层级选择器"><a href="#层级选择器" class="headerlink" title="层级选择器"></a>层级选择器</h3><table><thead><tr><th align="center">选择器</th><th align="center">示例</th><th align="center">功能描述</th></tr></thead><tbody><tr><td align="center">selector selector1</td><td align="center">$(“div .test”)</td><td align="center">选取&lt;div&gt;下所有class名为test的元素（多级）</td></tr><tr><td align="center">parent &gt; child</td><td align="center">$(“.box &gt; .con”)</td><td align="center">选取class名为box下的所有class名为con的子元素（一级）</td></tr><tr><td align="center">prev + next</td><td align="center">$(“div + .title”)</td><td align="center">获取紧邻&lt;div&gt;的下一个class名为title的兄弟节点</td></tr><tr><td align="center">prev ~ siblings</td><td align="center">$(“.bar ~ li”)</td><td align="center">获取class名为bar的元素后的所有同级元素节点&lt;li&gt;</td></tr></tbody></table><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/25/991e6bf8bb02ade1e9fb757b2dabbcc3.png"></p><h3 id="基本过滤选择器"><a href="#基本过滤选择器" class="headerlink" title="基本过滤选择器"></a>基本过滤选择器</h3><table><thead><tr><th align="center">选择器</th><th align="center">示例</th><th align="center">功能描述</th></tr></thead><tbody><tr><td align="center">:first</td><td align="center">$(“li : first”)</td><td align="center">获取第1个&lt;li&gt;元素</td></tr><tr><td align="center">:last</td><td align="center">$(“li : last”)</td><td align="center">获取最后1个&lt;li&gt;元素</td></tr><tr><td align="center">:even</td><td align="center">$(“li :even”)</td><td align="center">获取所有li元素中，索引为偶数的奇数行数据,从0开始</td></tr><tr><td align="center">:odd</td><td align="center">$(“li :odd”)</td><td align="center">获取所有li元素中，索引为奇数数的偶数行数据，从0开始</td></tr><tr><td align="center">:eq(index)</td><td align="center">$(“li:eq(3)”)</td><td align="center">获取索引为3的li元素</td></tr><tr><td align="center">:gt(index)</td><td align="center">$(“li :eq(3)”)</td><td align="center">获取索引大于3的li元素</td></tr><tr><td align="center">:It(index)</td><td align="center">$(“li :It(3)”)</td><td align="center">获取索引小于3的li元素</td></tr><tr><td align="center">:not(seletor)</td><td align="center">$(“li :not(li:qe(3))”)</td><td align="center">获取除指定选择器外的其他元素，获取除索引为3的li元素</td></tr><tr><td align="center">:focus</td><td align="center">$(“inputs:focus”)</td><td align="center">匹配当前获取焦点的input元素</td></tr><tr><td align="center">:animated</td><td align="center">#(“div:not(:animated)”)</td><td align="center">匹配当前没有执行动画的div元素</td></tr></tbody></table><h3 id="内容选择器"><a href="#内容选择器" class="headerlink" title="内容选择器"></a>内容选择器</h3><table><thead><tr><th align="center">选择器</th><th align="center">功能描述</th><th align="center">示例</th></tr></thead><tbody><tr><td align="center">:contains(text)</td><td align="center">获取内容包含1text文本的元素</td><td align="center">&amp;(“li:contains(‘js’)”)获取内容中含’js’的li元素</td></tr><tr><td align="center">:empty</td><td align="center">获取内容为空的元素</td><td align="center">$(“li:empty”)获取内容为空的li元素</td></tr><tr><td align="center">:has(selector)</td><td align="center">获取内容包含指定选择器元素</td><td align="center">$(“li:has(‘a’)”)获取内容中含a元素的所有li元素</td></tr><tr><td align="center">:parent</td><td align="center">获取内容不为空的元素(特殊)</td><td align="center">$(“li:parent”)获取内容不为空的li元素</td></tr></tbody></table><h3 id="可见性选择器"><a href="#可见性选择器" class="headerlink" title="可见性选择器"></a>可见性选择器</h3><table><thead><tr><th align="center">选择器</th><th align="center">功能描述</th><th align="center">示例</th></tr></thead><tbody><tr><td align="center">:hidden</td><td align="center">获取所有隐藏元素</td><td align="center">$(“li:hidden”)获取所有隐藏的li元素</td></tr><tr><td align="center">:visible</td><td align="center">获取所有可见元素</td><td align="center">$(“li:visible”)获取所有可见的li元素</td></tr></tbody></table><h3 id="属性选择器"><a href="#属性选择器" class="headerlink" title="属性选择器"></a>属性选择器</h3><table><thead><tr><th align="center">选择器</th><th align="center">功能描述</th><th align="center">示例</th></tr></thead><tbody><tr><td align="center">[attr]</td><td align="center">获取具体指定属性的元素</td><td align="center">$(“div[class]”)获取含有class属性的所有div元素</td></tr><tr><td align="center">[attr=value]</td><td align="center">获取属性值等于value的元素</td><td align="center">$(“div[class=current]”)获取class等于current的所有div元素</td></tr><tr><td align="center">[attr！=value]</td><td align="center">获取属性值不等于value的元素</td><td align="center">$(“div[class！=current]”)获取class不等于current的所有div元素</td></tr><tr><td align="center">[attr^=value]</td><td align="center">获取属性值以value开始的元素</td><td align="center">$(“div[class^box]”)获取class以box开始的所有div元素</td></tr><tr><td align="center">[attr$=value]</td><td align="center">获取属性值以value结尾的元素</td><td align="center">$(“div[class$box]”)获取class以box结尾的所有div元素</td></tr><tr><td align="center">[attr*=value]</td><td align="center">获取属性值包含value的元素</td><td align="center">$(“div[class*=’-‘]”)获取class含有’-‘的所有div元素</td></tr><tr><td align="center">[attr~=value]</td><td align="center">获取元素的属性值包含一个value，以空格隔开</td><td align="center">$(“div[class~=’box’]”)获取class属性值等于’box’或通过空格分隔并含有box的div元素，如”t box”</td></tr><tr><td align="center">[attr1][attr2]…[attrN]</td><td align="center">获取同时拥有多个属性的元素</td><td align="center">$(“input[id][name$=’usr’]”)获取同时含有id属性和属性值以usr结尾的name属性的input元素</td></tr></tbody></table><h3 id="子元素选择器"><a href="#子元素选择器" class="headerlink" title="子元素选择器"></a>子元素选择器</h3><table><thead><tr><th align="center">选择器</th><th align="center">功能描述</th></tr></thead><tbody><tr><td align="center">:nth-child(index/even/odd/公式)</td><td align="center">索引index默认从1开始，匹配指定index索引、偶数、奇书、或符合指定公式(如2n,n默认从0开始)的子元素</td></tr><tr><td align="center">:first-child</td><td align="center">获取第一个子元素</td></tr><tr><td align="center">:last-child</td><td align="center">获取最后一个子元素</td></tr><tr><td align="center">:only-child</td><td align="center">如果当前元素时唯一的子元素，则匹配</td></tr><tr><td align="center">:nth-last-child(index/even/odd/公式)</td><td align="center">选择所有它们父元素的第n个子元素，计数从最后一个元素开始到第一个</td></tr><tr><td align="center">:nth-of-type(index/even/odd/公式)</td><td align="center">选择同一个父元素之下，并且标签名相同的子元素中的第n个子元素</td></tr><tr><td align="center">:first-of-type</td><td align="center">选择所有相同的元素名称的第一个子元素</td></tr><tr><td align="center">:last-of-type</td><td align="center">选择所有相同的元素名称的最后一个子元素</td></tr><tr><td align="center">:only-of-type</td><td align="center">选择所有没有兄弟元素，且具有相同的元素名称的元素</td></tr><tr><td align="center">:nth-last-of-type(index/even/odd/公式)</td><td align="center">选择所有它们的父级元素的第n个子元素，计数从最后一个元素开始到第一个</td></tr></tbody></table><h3 id="表单选择器"><a href="#表单选择器" class="headerlink" title="表单选择器"></a>表单选择器</h3><table><thead><tr><th align="center">选择器</th><th align="center">功能描述</th></tr></thead><tbody><tr><td align="center">:input</td><td align="center">获取页面中的所有表单元素，包含select元素和textarea元素</td></tr><tr><td align="center">:text</td><td align="center">选取页面中的所有文本框</td></tr><tr><td align="center">:password</td><td align="center">选取所有的密码框</td></tr><tr><td align="center">:radio</td><td align="center">选取所有的单选按钮</td></tr><tr><td align="center">:checkbox</td><td align="center">选取所有的复选框</td></tr><tr><td align="center">:submit</td><td align="center">获取submit提交按钮</td></tr><tr><td align="center">:reset</td><td align="center">获取reset重置按钮</td></tr><tr><td align="center">:image</td><td align="center">获取type=”image”的图像域</td></tr><tr><td align="center">:button</td><td align="center">获取button按钮，包括button标签和type=”button”</td></tr><tr><td align="center">:file</td><td align="center">获取type=”file”的文件域</td></tr><tr><td align="center">:hidden</td><td align="center">获取隐藏表单项</td></tr><tr><td align="center">:enabled</td><td align="center">获取所有可用表单元素</td></tr><tr><td align="center">:disabled</td><td align="center">获取所有不可用表单元素</td></tr><tr><td align="center">:checked</td><td align="center">获取所有选中的表单元素，主要针对radio和checkbox</td></tr><tr><td align="center">:selected</td><td align="center">获取所有可用表单元素，主要针对select</td></tr></tbody></table><h3 id="元素筛选函数"><a href="#元素筛选函数" class="headerlink" title="元素筛选函数"></a>元素筛选函数</h3><table><thead><tr><th align="center">语法</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">$(“ul”).find(“span”)</td><td align="center">返回&lt;ul&gt; 后代中所有的&lt;span&gt; 元素</td></tr><tr><td align="center">$(“ul”).siblings(“span”))</td><td align="center">返回与&lt;ul&gt; 同级的所有的 &lt;span&gt; 元素</td></tr><tr><td align="center">$(“ul”).next(“span”))</td><td align="center">匹配&lt;ul&gt;紧邻的同级的下一个&lt;span&gt;元素</td></tr><tr><td align="center">$(“ul”). prev(“span”))</td><td align="center">匹配&lt;ul&gt;紧邻的同级的上一个&lt;span&gt;元素</td></tr></tbody></table><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/25/ce1673e1b45dc9421d7a6c4652b96f37.png"></p><p>获取第三层的第一个li</p><pre><code>    $(&#39;#fold&gt;ul&gt;li:first&#39;)</code></pre><p>通过上面的li，获得其下class为wrap的元素</p><pre><code>    $(&#39;#fold&gt;ul&gt;li:first&#39;).find(&#39;.wrap&#39;);</code></pre><h2 id="元素操作-1"><a href="#元素操作-1" class="headerlink" title="元素操作"></a>元素操作</h2><h3 id="元素遍历"><a href="#元素遍历" class="headerlink" title="元素遍历"></a>元素遍历</h3><p>each()方法可以对元素进行遍历</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>PHP<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>IOS<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>JAVA<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>JS<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="comment">//each参数：回调函数</span></span></span><br><span class="line"><span class="javascript">$(<span class="string">&#x27;li&#x27;</span>).each(<span class="function"><span class="keyword">function</span>(<span class="params">index,element</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.og(<span class="string">&quot;第&quot;</span>+(index+<span class="number">1</span>)+<span class="string">&#x27;个:&#x27;</span>+$(element).text());</span></span><br><span class="line">&#125;);</span><br><span class="line"><span class="javascript"><span class="comment">//each：遍历选择器匹配到的所有&lt;li&gt;元素</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//index：当前元素的索引位置</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//element：当前元素</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//text():函数，元素的文本</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">/*</span><br><span class="line">第1个:PHP</span><br><span class="line">第2个:IOS</span><br><span class="line">第3个:JAVA</span><br><span class="line">第4个:JS</span><br><span class="line">*/</span><br></pre></td></tr></table></figure><h3 id="元素内容"><a href="#元素内容" class="headerlink" title="元素内容"></a>元素内容</h3><table><thead><tr><th align="center">语法</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">html()</td><td align="center">获取第一个匹配元素的HTML内容</td></tr><tr><td align="center">html(content)</td><td align="center">设置第一个匹配元素的HTML内容</td></tr><tr><td align="center">text()</td><td align="center">获取所有匹配元素包含的文本内容组合起来的文本</td></tr><tr><td align="center">text(content)</td><td align="center">设置所有匹配元素的文本内容</td></tr><tr><td align="center">val()</td><td align="center">获取表单元素的value值</td></tr><tr><td align="center">val(value)</td><td align="center">设置表单元素的value值</td></tr></tbody></table><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;</span> <span class="meta-string">&quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.w3.org/1999/xhtml&quot;</span> <span class="attr">xml:lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Type&quot;</span> <span class="attr">content</span>=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>PHP<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>ios<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>java<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>js<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;jquery-3.4.1.min.js&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        $(<span class="string">&#x27;li&#x27;</span>).each(<span class="function"><span class="keyword">function</span>(<span class="params">index,element</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            $(element).text(<span class="string">&#x27;修改后的内容&#x27;</span> + index);</span></span><br><span class="line">        &#125;);</span><br><span class="line"><span class="javascript">        $(<span class="string">&#x27;li&#x27;</span>).each(<span class="function"><span class="keyword">function</span>(<span class="params">index,element</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">&quot;第&quot;</span> + (index+<span class="number">1</span>) + <span class="string">&#x27;个:&#x27;</span></span></span><br><span class="line"><span class="javascript">                + $(element).text());</span></span><br><span class="line">        &#125;);</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/25/63efebe8bea84d084a689d34e0d14a17.png"></p><h3 id="元素样式"><a href="#元素样式" class="headerlink" title="元素样式"></a>元素样式</h3><pre><code>    var ele=$(&#39;div&#39;);    ele.css(&#123;border:&#39;2px solid black&#39;,backgroundColor:&#39;#ccc&#39;&#125;);    var w=ele.css(&#39;width&#39;);    var h=ele.css(&#39;height&#39;);    ele.css(&#39;width&#39;,&#39;200px&#39;);    ele.css(&#39;height&#39;,&#39;200px&#39;);</code></pre><table><thead><tr><th align="center">语法</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">css(name)</td><td align="center">name:样式名称，获得样式的值</td></tr><tr><td align="center">css(properties)</td><td align="center">properties：键值对形式的对象，设置样式值</td></tr><tr><td align="center">css(name,value)</td><td align="center">设置样式的值</td></tr><tr><td align="center">width()/width(value)</td><td align="center">获取/设置第一个匹配元素的当前宽度值</td></tr><tr><td align="center">height()/height(value)</td><td align="center">获取/设置第一个匹配元素的当前高度值</td></tr><tr><td align="center">offset()</td><td align="center">获取元素的位置，返回的是一个对象，包含left和top属性</td></tr><tr><td align="center">offset(properties)</td><td align="center">利用对象设置元素的位置，必须包含left和top属性</td></tr></tbody></table><h3 id="元素属性"><a href="#元素属性" class="headerlink" title="元素属性"></a>元素属性</h3><pre><code>    $(element).prop(&#39;checked&#39;,false);</code></pre><table><thead><tr><th align="center">语法</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">attr(name)</td><td align="center">取得第一个匹配元素的属性值，否则返回undefined</td></tr><tr><td align="center">attr(properties)</td><td align="center">将一个键值对形式的对象设置为所有匹配元素的属性</td></tr><tr><td align="center">attr(name,value)</td><td align="center">为所有匹配的元素设置一个属性值</td></tr><tr><td align="center">removeAtrre(name)</td><td align="center">从每一个匹配的元素中删除一个属性</td></tr><tr><td align="center">prop(name)</td><td align="center">取得第一个匹配元素的属性值，否则返回undefined</td></tr><tr><td align="center">prop(properties)</td><td align="center">将一个键值对形式的对象设置为所有匹配元素的属性</td></tr><tr><td align="center">prop(name,value)</td><td align="center">为所有匹配的元素设置一个属性值</td></tr></tbody></table><blockquote><p>attr（）和prop（）只能获取第一个匹配元素的属性值。<br>操作状态，如checked、selected、disabled时(有true/false)用prop；其它用attr。</p></blockquote><h3 id="元素基本属性"><a href="#元素基本属性" class="headerlink" title="元素基本属性"></a>元素基本属性</h3><table><thead><tr><th align="center">语法</th><th align="center">作用</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">addClass(class)</td><td align="center">追加样式</td><td align="center">为每个匹配的元素追加指定的类名</td></tr><tr><td align="center">removeClass(class)</td><td align="center">移除样式</td><td align="center">从所有匹配的元素中删除全部或者指定的类</td></tr><tr><td align="center">toggleClass(class)</td><td align="center">切换样式</td><td align="center">判断指定类是否存在，存在则删除，不存在则添加</td></tr><tr><td align="center">hasClass(class)</td><td align="center">判断样式</td><td align="center">判断元素是否具有class样式</td></tr></tbody></table><h2 id="折叠菜单"><a href="#折叠菜单" class="headerlink" title="折叠菜单"></a>折叠菜单</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;jquery-3.4.1.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">ul</span>&#123;<span class="attribute">list-style</span>:none;<span class="attribute">padding</span>:<span class="number">0</span>;<span class="attribute">margin</span>:<span class="number">0</span>&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">div</span>&#123;<span class="attribute">width</span>:<span class="number">150px</span>;<span class="attribute">border</span>:<span class="number">1px</span> solid <span class="number">#515E7B</span>;<span class="attribute">margin</span>:<span class="number">10px</span>;&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">div</span> <span class="selector-tag">li</span>&#123;<span class="attribute">background</span>:<span class="number">#515E7B</span>;<span class="attribute">border-bottom</span>:<span class="number">1px</span> solid <span class="number">#fff</span>;&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">div</span> <span class="selector-tag">li</span> <span class="selector-tag">a</span>&#123;<span class="attribute">text-decoration</span>:none;<span class="attribute">color</span>:<span class="number">#fff</span>;<span class="attribute">font-size</span>:<span class="number">16px</span>;<span class="attribute">height</span>:<span class="number">40px</span>;<span class="attribute">line-height</span>:<span class="number">40px</span>;<span class="attribute">padding-left</span>:<span class="number">10px</span>;&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">div</span> <span class="selector-tag">li</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span>&#123;<span class="attribute">text-decoration</span>:underline;&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-class">.wrap</span> &#123;<span class="attribute">width</span>:<span class="number">150px</span>;<span class="attribute">display</span>:none;&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-class">.wrap</span> <span class="selector-tag">li</span>&#123;<span class="attribute">background</span>: <span class="number">#fff</span>;<span class="attribute">margin</span>: <span class="number">0</span>;&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-class">.wrap</span> <span class="selector-tag">li</span> <span class="selector-tag">a</span>&#123;<span class="attribute">color</span>:<span class="number">#3B475F</span>;<span class="attribute">font-size</span>:<span class="number">12px</span>;&#125;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;fold&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>信息管理<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;wrap&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>未读信息<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>已读信息<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>信息列表<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>商品管理<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;wrap&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>商品添加<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>商品列表<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>商品分类<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>用户管理<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;wrap&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>权限设置<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>用户列表<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>重置密码<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 默认第一个显示：css--display:block</span></span></span><br><span class="line"><span class="javascript">        $(<span class="string">&quot;.wrap:first&quot;</span>).css(<span class="string">&#x27;display&#x27;</span>,<span class="string">&#x27;block&#x27;</span>);</span></span><br><span class="line"><span class="javascript">        <span class="comment">//添加点击事件，当前显示,其它隐藏</span></span></span><br><span class="line"><span class="javascript">        $(<span class="string">&quot;#fold&gt;ul&gt;li&quot;</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;   <span class="comment">//无需遍历，直接添加事件</span></span></span><br><span class="line"><span class="javascript">            $(<span class="built_in">this</span>).siblings(<span class="string">&#x27;li&#x27;</span>).find(<span class="string">&#x27;.wrap&#x27;</span>).css(&#123;<span class="attr">display</span>:<span class="string">&#x27;none&#x27;</span>&#125;);</span></span><br><span class="line"><span class="javascript">            $(<span class="built_in">this</span>).find(<span class="string">&#x27;.wrap&#x27;</span>).css(&#123;<span class="attr">display</span>:<span class="string">&#x27;block&#x27;</span>&#125;);</span></span><br><span class="line">            &#125;</span><br><span class="line">        );</span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/25/91b2836348482ddd0439b8c1de7080b9.png"></p><h1 id="DOM节点操作"><a href="#DOM节点操作" class="headerlink" title="DOM节点操作"></a>DOM节点操作</h1><h2 id="节点追加"><a href="#节点追加" class="headerlink" title="节点追加"></a>节点追加</h2><p>content是一段字符串形式的HTML代码<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/25/608d27904a43f74dec06c6a54354296e.png"></p><blockquote><p>父子节点添加是在匹配到的元素内部进行，兄弟节点是在匹配的元素外部进行。</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">//父子节点</span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>hello&gt;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">$(&#x27;p&#x27;).append(&#x27;<span class="tag">&lt;<span class="name">b</span>&gt;</span>append<span class="tag">&lt;/<span class="name">b</span>&gt;</span>&#x27;);</span><br><span class="line">//添加在结束标签之前</span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>hello<span class="tag">&lt;<span class="name">b</span>&gt;</span>append<span class="tag">&lt;/<span class="name">b</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">$(&#x27;p&#x27;).prepend(&#x27;<span class="tag">&lt;<span class="name">b</span>&gt;</span>append<span class="tag">&lt;/<span class="name">b</span>&gt;</span>&#x27;);</span><br><span class="line">//添加在开始标签之后</span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">b</span>&gt;</span><span class="tag">&lt;<span class="name">append</span>&gt;</span><span class="tag">&lt;/<span class="name">b</span>&gt;</span>hello<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">//兄弟节点</span><br><span class="line">$(&#x27;p&#x27;).after(&#x27;<span class="tag">&lt;<span class="name">b</span>&gt;</span>didi<span class="tag">&lt;/<span class="name">b</span>&gt;</span>&#x27;);</span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>hello<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">b</span>&gt;</span>didi<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">$(&#x27;p&#x27;).before(&#x27;<span class="tag">&lt;<span class="name">b</span>&gt;</span>didi<span class="tag">&lt;/<span class="name">b</span>&gt;</span>&#x27;);</span><br><span class="line"><span class="tag">&lt;<span class="name">b</span>&gt;</span>didi<span class="tag">&lt;/<span class="name">b</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>hello&gt;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/25/3f67b7eb565d49fc1270c7406fb57cb1.png"></p><h2 id="节点替换"><a href="#节点替换" class="headerlink" title="节点替换"></a>节点替换</h2><table><thead><tr><th align="center">语法</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">replaceWith(content)</td><td align="center">将所有匹配的元素替换成指定的HTML或DOM元素</td></tr><tr><td align="center">replaceAll(selector)</td><td align="center">用匹配的元素替换掉所有selector匹配到的元素</td></tr></tbody></table><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>hello<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>world<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="handlebars"><span class="xml">        // $(&#x27;p:first&#x27;).replaceWith(&#x27;<span class="tag">&lt;<span class="name">p</span>&gt;</span>你好<span class="tag">&lt;/<span class="name">p</span>&gt;</span>&#x27;);</span></span></span><br><span class="line"><span class="handlebars"><span class="xml">        // $(&#x27;p:eq(1)&#x27;).replaceWith(&#x27;<span class="tag">&lt;<span class="name">p</span>&gt;</span>世界<span class="tag">&lt;/<span class="name">p</span>&gt;</span>&#x27;);</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">        $(<span class="string">&#x27;&lt;p&gt;你好&lt;/p&gt;&#x27;</span>).replaceAll($(<span class="string">&#x27;p:first&#x27;</span>));</span></span><br><span class="line"><span class="javascript">        $(<span class="string">&#x27;&lt;p&gt;世界&lt;/p&gt;&#x27;</span>).replaceAll($(<span class="string">&#x27;p:eq(1)&#x27;</span>));</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="节点删除"><a href="#节点删除" class="headerlink" title="节点删除"></a>节点删除</h2><table><thead><tr><th align="center">语法</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">empty()</td><td align="center">清空元素的内容，但不删除元素本身</td></tr><tr><td align="center">remove()</td><td align="center">清空元素的内容，并删除元素本身</td></tr></tbody></table><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">li</span>&gt;</span>1111<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">li</span>&gt;</span>2222<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">li</span>&gt;</span>3333<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">li</span>&gt;</span>4444<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">       <span class="comment">//移除第一个节点的内容</span></span></span><br><span class="line"><span class="javascript">       $(<span class="string">&#x27;li:first&#x27;</span>).empty();</span></span><br><span class="line"><span class="javascript">       <span class="comment">//移除第二个元素的内容及元素本身</span></span></span><br><span class="line"><span class="javascript">       $(<span class="string">&#x27;li:eq(1)&#x27;</span>).remove();</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/25/be846db6a9a21c2aa000b70fc203b348.png"></p><h2 id="节点复制"><a href="#节点复制" class="headerlink" title="节点复制"></a>节点复制</h2><table><thead><tr><th align="center">语法</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">clone([false])</td><td align="center">复制匹配的元素，默认参数为false</td></tr><tr><td align="center">clone(true)</td><td align="center">参数设置为true时，复制元素的所有事件处理</td></tr></tbody></table><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">li</span>&gt;</span>1111<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">li</span>&gt;</span>2222<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">li</span>&gt;</span>3333<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">li</span>&gt;</span>4444<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">       $(<span class="string">&#x27;ul&#x27;</span>).clone().appendTo($(<span class="string">&#x27;body&#x27;</span>));</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/25/089e1fb74bc937a7141481d94270ac65.png"></p><h2 id="左移与右移"><a href="#左移与右移" class="headerlink" title="左移与右移"></a>左移与右移</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>左移与右移<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">select</span>&#123;<span class="attribute">width</span>:<span class="number">100px</span>;<span class="attribute">height</span>:<span class="number">150px</span>&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">input</span><span class="selector-attr">[type=button]</span>&#123;<span class="attribute">width</span>:<span class="number">50px</span>&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-id">#opt</span>&#123;<span class="attribute">margin</span>:<span class="number">90px</span> <span class="number">10px</span> <span class="number">0</span>&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-class">.box</span>&#123;<span class="attribute">width</span>:<span class="number">80%</span>;<span class="attribute">margin</span>:<span class="number">0</span> auto;<span class="attribute">background-color</span>:<span class="number">#999999</span>&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-class">.box</span> <span class="selector-tag">div</span>&#123;<span class="attribute">float</span>:left&#125;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;left&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>可选项<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">select</span> <span class="attr">multiple</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">option</span>&gt;</span>添加<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">option</span>&gt;</span>移动<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">option</span>&gt;</span>修改<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">option</span>&gt;</span>查询<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">option</span>&gt;</span>打印<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">option</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;opt&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;toRight&quot;</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;&gt;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;toLeft&quot;</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;&lt;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;toAllRight&quot;</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;&gt;&gt;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;toAllLeft&quot;</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;&lt;&lt;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;right&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>已选项<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">select</span> <span class="attr">multiple</span>=<span class="string">&quot;multiple&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;jquery-3.4.1.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">      <span class="comment">// 获取按钮添加单击事件，获取第一个下拉框中被选中的option添加到第二个下拉框</span></span></span><br><span class="line"><span class="javascript">      $(<span class="string">&#x27;#toRight&#x27;</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;       <span class="comment">// 右移</span></span></span><br><span class="line"><span class="javascript">        $(<span class="string">&#x27;#right&gt;select&#x27;</span>).append($(<span class="string">&#x27;#left&gt;select&gt;option:selected&#x27;</span>));</span></span><br><span class="line">      &#125;);</span><br><span class="line"><span class="javascript">      $(<span class="string">&#x27;#toLeft&#x27;</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;        <span class="comment">// 左移</span></span></span><br><span class="line"><span class="javascript">        $(<span class="string">&#x27;#left&gt;select&#x27;</span>).append($(<span class="string">&#x27;#right&gt;select&gt;option:selected&#x27;</span>));</span></span><br><span class="line">      &#125;);</span><br><span class="line"><span class="javascript">      $(<span class="string">&#x27;#toAllRight&#x27;</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;    <span class="comment">// 全部右移</span></span></span><br><span class="line"><span class="javascript">        $(<span class="string">&#x27;#right&gt;select&#x27;</span>).append($(<span class="string">&#x27;#left&gt;select&gt;option&#x27;</span>));</span></span><br><span class="line">      &#125;);</span><br><span class="line"><span class="javascript">      $(<span class="string">&#x27;#toAllLeft&#x27;</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;     <span class="comment">// 全部左移</span></span></span><br><span class="line"><span class="javascript">        $(<span class="string">&#x27;#left&gt;select&#x27;</span>).append($(<span class="string">&#x27;#right&gt;select&gt;option&#x27;</span>));</span></span><br><span class="line">      &#125;);</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/25/c8e2b69a10be668bdb5a127790ea6062.png"></p><h1 id="事件操作"><a href="#事件操作" class="headerlink" title="事件操作"></a>事件操作</h1><ul><li>标签中通过属性设置事件，每个属性都由一个on和事件名组成。例如，点击事件对应的属性为onclick。</li><li>在jQuery中则可直接使用其提供的与事件类型同名的方法。例如，点击事件对应的方法为click()。</li><li>这些事件方法允许重复绑定处理程序，按照绑定顺序依次执行。</li></ul><h2 id="表单事件"><a href="#表单事件" class="headerlink" title="表单事件"></a>表单事件</h2><table><thead><tr><th align="center">方法</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">blur()</td><td align="center">当元素失去焦点时触发</td></tr><tr><td align="center">focus()</td><td align="center">当元素获得焦点时触发</td></tr><tr><td align="center">change()</td><td align="center">当元素的值发生改变时触发</td></tr><tr><td align="center">select()</td><td align="center">当文本框（包括&lt;input&gt;和&lt;textarea&gt;）中的文本被选中时触发</td></tr><tr><td align="center">submit()</td><td align="center">表单提交时触发</td></tr></tbody></table><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;</span> <span class="meta-string">&quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.w3.org/1999/xhtml&quot;</span> <span class="attr">xml:lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Type&quot;</span> <span class="attr">content</span>=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;jquery-3.4.1.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>用户名称：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;uname&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>电子邮箱：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;email&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>手机号码：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;tel&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        $(<span class="string">&#x27;input[type=text]&#x27;</span>).focus(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> tips = $(<span class="string">&#x27;&lt;span&gt;&lt;/span&gt;&#x27;</span>);</span></span><br><span class="line"><span class="javascript">            tips.html(<span class="string">&#x27;请按要求输入&#x27;</span>);</span></span><br><span class="line"><span class="javascript">            $(<span class="string">&#x27;input:focus&#x27;</span>).after(tips);</span></span><br><span class="line">        &#125;);</span><br><span class="line"><span class="javascript">        $(<span class="string">&#x27;input[type=text]&#x27;</span>).blur(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            $(<span class="built_in">this</span>).next().remove();</span></span><br><span class="line">        &#125;);</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/25/84ff5255a8425a2dd3860eb8d6f253cf.png"></p><h2 id="键盘事件"><a href="#键盘事件" class="headerlink" title="键盘事件"></a>键盘事件</h2><table><thead><tr><th align="center">方法</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">keydown()</td><td align="center">键盘按键被按下时触发</td></tr><tr><td align="center">keyup()</td><td align="center">键盘按键弹起时触发</td></tr><tr><td align="center">keypress()</td><td align="center">键盘按键（Shift等非字符键除外）被按下时触发</td></tr></tbody></table><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>左移与右移<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">      <span class="selector-class">.boxes</span>&#123;<span class="attribute">width</span>:<span class="number">10px</span>;<span class="attribute">height</span>:<span class="number">10px</span>;<span class="attribute">background-color</span>:red;&#125;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&#x27;boxes&#x27;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;jquery-3.4.1.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">       $(<span class="built_in">document</span>).</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">       keydown(<span class="function"><span class="keyword">function</span>(<span class="params">event</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">       <span class="comment">//获取按键码(37、38、39、40)</span></span></span><br><span class="line"><span class="javascript">           <span class="keyword">var</span> opt = event.which;</span></span><br><span class="line"><span class="javascript">           <span class="keyword">var</span> item = $(<span class="string">&#x27;.boxes&#x27;</span>);</span></span><br><span class="line"><span class="javascript">           <span class="comment">//获取元素距离文档的位置</span></span></span><br><span class="line"><span class="javascript">           <span class="keyword">var</span> left = item.offset().left;</span></span><br><span class="line"><span class="javascript">           <span class="keyword">var</span> top = item.offset().top;;</span></span><br><span class="line"><span class="javascript">           <span class="built_in">console</span>.log(opt);</span></span><br><span class="line"><span class="javascript">           <span class="function"><span class="title">switch</span>(<span class="params">opt</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">case</span> <span class="number">37</span>:item.offset(&#123;<span class="attr">left</span>:left-<span class="number">1</span>,<span class="attr">top</span>:top&#125;);<span class="keyword">break</span>;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">case</span> <span class="number">38</span>:item.offset(&#123;<span class="attr">left</span>:left,<span class="attr">top</span>:top-<span class="number">1</span>&#125;);<span class="keyword">break</span>;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">case</span> <span class="number">39</span>:item.offset(&#123;<span class="attr">left</span>:left+<span class="number">1</span>,<span class="attr">top</span>:top&#125;);<span class="keyword">break</span>;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">case</span> <span class="number">40</span>:item.offset(&#123;<span class="attr">left</span>:left,<span class="attr">top</span>:top+<span class="number">1</span>&#125;);<span class="keyword">break</span>;</span></span><br><span class="line">           &#125;</span><br><span class="line">       &#125;);</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/25/3355318cfc0459182e0575a1c5acd4c6.png"></p><h2 id="鼠标事件"><a href="#鼠标事件" class="headerlink" title="鼠标事件"></a>鼠标事件</h2><table><thead><tr><th align="center">方法</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">mouseover()</td><td align="center">当鼠标移入对象时触发</td></tr><tr><td align="center">mouseout()</td><td align="center">鼠标从元素上离开时触发</td></tr><tr><td align="center">click()</td><td align="center">当单击元素时触发</td></tr><tr><td align="center">dbclick()</td><td align="center">当双击元素时触发</td></tr><tr><td align="center">mousedown()</td><td align="center">当鼠标指针移动到元素上方，并按下鼠标按键时触发</td></tr><tr><td align="center">mouseup()</td><td align="center">当在元素上放松鼠标按钮时，会被触发</td></tr></tbody></table><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">/*</span><br><span class="line">鼠标移入时，为本文添加背景颜色；</span><br><span class="line">鼠标移出时，为文本移除背景颜色。</span><br><span class="line">鼠标单击时，打印单击位置。</span><br><span class="line"></span><br><span class="line">*/</span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>左移与右移<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">      <span class="selector-class">.boxes</span>&#123;<span class="attribute">width</span>:<span class="number">10px</span>;<span class="attribute">height</span>:<span class="number">10px</span>;<span class="attribute">background-color</span>:red;&#125;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;hit&quot;</span>&gt;</span>jQuery介绍<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;jquery-3.4.1.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">       $(<span class="string">&#x27;.hit&#x27;</span>).mouseover(<span class="function"><span class="keyword">function</span>(<span class="params">event</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">           $(<span class="built_in">this</span>).css(<span class="string">&#x27;background-color&#x27;</span>,<span class="string">&#x27;green&#x27;</span>);</span></span><br><span class="line"></span><br><span class="line">       &#125;);</span><br><span class="line"><span class="javascript">       $(<span class="string">&#x27;.hit&#x27;</span>).mouseout(<span class="function"><span class="keyword">function</span>(<span class="params">event</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">           $(<span class="built_in">this</span>).css(<span class="string">&#x27;background-color&#x27;</span>,<span class="string">&#x27;&#x27;</span>);</span></span><br><span class="line">       &#125;);</span><br><span class="line"><span class="javascript">       $(<span class="string">&#x27;.hit&#x27;</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params">event</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">           <span class="built_in">console</span>.log(event.pageY);</span></span><br><span class="line"></span><br><span class="line">       &#125;);</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="页面加载事件"><a href="#页面加载事件" class="headerlink" title="页面加载事件"></a>页面加载事件</h2><table><thead><tr><th align="center">类比选项</th><th align="center">window.onload</th><th align="center">$(document).ready()</th></tr></thead><tbody><tr><td align="center">执行时机</td><td align="center">必须等待网页中的所有内容加载完成后(包括外部元素，如图片)才能执行</td><td align="center">网页中的所有DOM结构绘制完成后就执行（可能关联内容并未加载完成）</td></tr><tr><td align="center">编写个数</td><td align="center">不能同时编写多个</td><td align="center">能够同时编写多个</td></tr><tr><td align="center">简化写法</td><td align="center">无</td><td align="center">$()</td></tr></tbody></table><p>jQuery中的页面加载事件方法有3种语法形式，具体如下。</p><pre><code>    $(document).ready(function() &#123;  &#125;);         // 语法方式1    $().ready(function() &#123;  &#125;);             // 语法方式2    $(function() &#123;  &#125;);                 // 语法方式3</code></pre><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>页面加载<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;jquery-3.4.1.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">          $(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">              alert(<span class="string">&quot;欢迎光临&quot;</span>);</span></span><br><span class="line">          &#125;)</span><br><span class="line">      <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/25/2776a6a8b120b78267a95c9aa433c8f5.png"></p><h2 id="事件绑定与切换"><a href="#事件绑定与切换" class="headerlink" title="事件绑定与切换"></a>事件绑定与切换</h2><table><thead><tr><th align="center">方法</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">on(events,function)</td><td align="center">在匹配元素上绑定一个或多个事件处理函数</td></tr><tr><td align="center">off(events)</td><td align="center">在匹配元素上移除一个或多个事件处理函数</td></tr><tr><td align="center">one(events,function)</td><td align="center">为每个匹配元素的事件绑定一次性的处理函数</td></tr><tr><td align="center">hover([over,]out)</td><td align="center">元素鼠标移入与移出事件切换</td></tr></tbody></table><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>页面加载<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;jquery-3.4.1.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">div</span>&gt;</span>文本<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">          $(<span class="string">&#x27;div&#x27;</span>).on(<span class="string">&#x27;click&#x27;</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">              <span class="built_in">console</span>.log(<span class="string">&#x27;触发点击事件&#x27;</span>);</span></span><br><span class="line"><span class="javascript">              $(<span class="string">&#x27;div&#x27;</span>).off(<span class="string">&#x27;click&#x27;</span>);</span></span><br><span class="line">          &#125;)</span><br><span class="line"><span class="javascript">          $(<span class="string">&#x27;div&#x27;</span>).on(&#123;</span></span><br><span class="line"><span class="javascript">              mouseover:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">&#x27;鼠标移入&#x27;</span>);</span></span><br><span class="line">              &#125;,</span><br><span class="line"><span class="javascript">              mouseout:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">&#x27;鼠标移出&#x27;</span>);</span></span><br><span class="line">              &#125;</span><br><span class="line">          &#125;)</span><br><span class="line">       <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/25/67f8db8f8d37d276874a7977b13105aa.png"></p><h1 id="手风琴效果"><a href="#手风琴效果" class="headerlink" title="手风琴效果"></a>手风琴效果</h1><ul><li><p>页面组成<br>  5张图片<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/25/b121fdc5918a1143cbcf60403f0c6bed.png"></p></li><li><p>动态效果：<br>  鼠标移入图片时，该图片完整显示；鼠标移出时，该图片回复默认大小。overflow:hidden多余隐藏。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/25/1cc77ff4965b51597b5e50718b693c10.png"></p></li><li><p>图片素材</p></li></ul><p>1.jpg<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/25/92f6b154568bc50a88a2bb755847c57f.png"><br>2.jpg<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/25/470f55c119b2c75fc21c898ee7fd470f.png"><br>3.jpg<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/25/744f096e12d235ff3feaaae3758cd653.png"><br>4.jpg<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/25/5547663bea41be8ae50f6bcd4e152e26.png"><br>5.jpg<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/25/046dc5f515f8200717a5f6062f617146.png"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>手风琴效果<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">ul</span>&#123;<span class="attribute">list-style</span>:none;<span class="attribute">margin</span>:<span class="number">0</span>;<span class="attribute">padding</span>:<span class="number">0</span>&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">div</span>&#123;<span class="attribute">width</span>:<span class="number">1200px</span>;<span class="attribute">height</span>:<span class="number">400px</span>;<span class="attribute">margin</span>:<span class="number">50px</span> auto;<span class="attribute">overflow</span>:hidden&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">div</span> <span class="selector-tag">li</span>&#123;<span class="attribute">width</span>:<span class="number">240px</span>;<span class="attribute">height</span>:<span class="number">400px</span>;<span class="attribute">float</span>:left&#125;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;jquery-3.4.1.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;images/1.jpg&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;images/2.jpg&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;images/3.jpg&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;images/4.jpg&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;images/5.jpg&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        $(<span class="string">&#x27;div&gt;ul&gt;li&#x27;</span>).on(&#123;</span></span><br><span class="line"><span class="javascript">            mouseover:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">              $(<span class="built_in">this</span>).siblings(<span class="string">&#x27;li&#x27;</span>).css(<span class="string">&#x27;width&#x27;</span>,<span class="string">&#x27;60.5px&#x27;</span>);</span></span><br><span class="line"><span class="javascript">              $(<span class="built_in">this</span>).css(<span class="string">&#x27;width&#x27;</span>,<span class="string">&#x27;958px&#x27;</span>);</span></span><br><span class="line">            &#125;,</span><br><span class="line"><span class="javascript">            mouseout:<span class="function"><span class="keyword">function</span>(<span class="params">event</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">              $(<span class="string">&#x27;#box&gt;ul&gt;li&#x27;</span>).css(<span class="string">&#x27;width&#x27;</span>,<span class="string">&#x27;240px&#x27;</span>);</span></span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/25/cf52d7fed1bb639bfa23b09f5dc42f26.png"></p><h1 id="动画特效"><a href="#动画特效" class="headerlink" title="动画特效"></a>动画特效</h1><p>jQuery提供了两种增加动画特效的方法</p><ol><li>内置的动画方法</li><li>提供<code>animate()</code>方法自定义动画</li></ol><h2 id="常用内置动画"><a href="#常用内置动画" class="headerlink" title="常用内置动画"></a>常用内置动画</h2><ul><li><strong>基本特效</strong></li></ul><table><thead><tr><th align="center">方法</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">show([speed,[easing],[fn]])</td><td align="center">显示匹配元素</td></tr><tr><td align="center">hide([speed,[easing],[fn]])</td><td align="center">隐藏匹配元素</td></tr><tr><td align="center">toggle([speed],[easing],[ fn])</td><td align="center">元素显示与隐藏切换</td></tr></tbody></table><ol><li><code>speed</code> ：动画的速度（持续时长），如1000（毫秒），或者预定的3种速度(slow、fast、normal)</li><li><code>easing</code>：切换效果，默认为swing，另有linear</li><li><code>fn</code>    ：动画完成时执行的函数</li></ol><blockquote><p>linear方法提供了一个稳定的动画，以使得动画的每个步骤都是相同的(例如，如果要让一个元素以逐渐变化的方式穿过屏幕，每一步的距离和前一步都是相同的)。</p></blockquote><blockquote><p>swing要更加动态一些，随着动画的开始变得更加快一些，然后再慢下来。swing是一个常用设置，因此，如果没有指定任何缓动，jQuery会使用swing方法。 </p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;</span> <span class="meta-string">&quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.w3.org/1999/xhtml&quot;</span> <span class="attr">xml:lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Type&quot;</span> <span class="attr">content</span>=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">media</span>=<span class="string">&quot;screen&quot;</span>&gt;</span></span><br><span class="line">      div&#123;</span><br><span class="line">        width: 200px;</span><br><span class="line"><span class="css">        <span class="selector-tag">height</span><span class="selector-pseudo">:200px</span>;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">border</span><span class="selector-pseudo">:1px</span> <span class="selector-tag">solid</span> <span class="selector-tag">red</span>;</span></span><br><span class="line">      &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span></span></span><br><span class="line"><span class="tag">      <span class="attr">src</span>=<span class="string">&quot;jquery-3.4.1.js&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;images/1.jpg&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">      fefwefew</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="comment">//1.基本特效</span></span></span><br><span class="line"><span class="javascript">        $(<span class="string">&#x27;img&#x27;</span>).hide(<span class="number">5000</span>);</span></span><br><span class="line"><span class="javascript">        $(<span class="string">&#x27;img&#x27;</span>).show(<span class="number">5000</span>);</span></span><br><span class="line"><span class="javascript">        $(<span class="string">&#x27;img&#x27;</span>).toggle(<span class="number">5000</span>);</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/30/b23cb4c356a35318d3c36cd00de42b63.png"></p><ul><li><strong>滑动特效</strong></li></ul><table><thead><tr><th align="center">方法</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">slideDown([speed],[easing],[ fn])</td><td align="center">使用滑动效果，显示隐藏的被选元素（向下）</td></tr><tr><td align="center">slideUp([speed,[easing],[ fn]])</td><td align="center">使用滑动效果，显示隐藏的被选元素（向上）</td></tr><tr><td align="center">slideToggle([speed],[easing],[ fn])</td><td align="center">使用滑动效果，显示隐藏的被选元素（向下)</td></tr></tbody></table><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Type&quot;</span> <span class="attr">content</span>=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span></span></span><br><span class="line"><span class="tag">          <span class="attr">src</span>=<span class="string">&quot;jquery-3.4.1.js&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">div</span><span class="selector-class">.panel</span>,<span class="selector-tag">p</span><span class="selector-class">.flip</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">margin</span><span class="selector-pseudo">:0px</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">padding</span><span class="selector-pseudo">:5px</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">text-align</span><span class="selector-pseudo">:center</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">background</span>:<span class="selector-id">#e5eecc</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">border</span><span class="selector-pseudo">:solid</span> 1<span class="selector-tag">px</span> <span class="selector-id">#c3c3c3</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-tag">div</span><span class="selector-class">.panel</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">height</span><span class="selector-pseudo">:120px</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">display</span><span class="selector-pseudo">:none</span>;  <span class="comment">/*如果此元素不隐藏，则不能滑动--视觉效果滑动的是flip，其实滑动的是。panel*/</span></span></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;panel&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>W3School - 领先的 Web 技术教程站点<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>在 W3School，你可以找到你所需要的所有网站建设教程。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;flip&quot;</span>&gt;</span>请点击这里<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="comment">// $(document).ready(function()&#123;</span></span></span><br><span class="line"><span class="javascript">          $(<span class="string">&quot;.flip&quot;</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">              $(<span class="string">&quot;.panel&quot;</span>).slideDown(<span class="string">&quot;slow&quot;</span>);</span></span><br><span class="line">          &#125;);</span><br><span class="line"><span class="javascript">        <span class="comment">// &#125;);</span></span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/30/400422ae2228282d3fd51a3eb6bd290a.png"></p><ul><li><strong>淡入淡出特效</strong></li></ul><table><thead><tr><th align="center">方法</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">fadeIn()</td><td align="center">淡入显示匹配元素</td></tr><tr><td align="center">fadeOut()</td><td align="center">淡出隐藏匹配元素</td></tr><tr><td align="center">fadeToggle()</td><td align="center">在fadeIn()和fadeOut()两种效果间的切换</td></tr></tbody></table><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--设置编码--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Type&quot;</span> <span class="attr">content</span>=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span></span></span><br><span class="line"><span class="tag">      <span class="attr">src</span>=<span class="string">&quot;jquery-3.4.1.js&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">  $(<span class="string">&quot;button&quot;</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">    $(<span class="string">&quot;#div1&quot;</span>).fadeIn();</span></span><br><span class="line"><span class="javascript">    $(<span class="string">&quot;#div2&quot;</span>).fadeIn(<span class="string">&quot;slow&quot;</span>);</span></span><br><span class="line"><span class="javascript">    $(<span class="string">&quot;#div3&quot;</span>).fadeIn(<span class="number">3000</span>);</span></span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>演示带有不同参数的 fadeIn() 方法。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span>&gt;</span>点击这里，使三个矩形淡入<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;div1&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width:80px;height:80px;display:none;background-color:red;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;div2&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width:80px;height:80px;display:none;background-color:green;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;div3&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width:80px;height:80px;display:none;background-color:blue;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/30/609da2f27cd557c4025af99ecc3ac40f.png"></p><h2 id="自定义动画"><a href="#自定义动画" class="headerlink" title="自定义动画"></a>自定义动画</h2><p>除了内置动画，用户还可以根据开发需求自定义动画效果。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$(&#x27;div&#x27;).animate(</span><br><span class="line">&#123;width:&#x27;100px&#x27;,height:&#x27;100px&#x27;&#125;,</span><br><span class="line">3000,</span><br><span class="line">&#x27;swing&#x27;,</span><br><span class="line">function()&#123;&#125;</span><br><span class="line">);</span><br></pre></td></tr></table></figure><ul><li>样式名称采用驼峰形式，如maginLeft</li><li>无法识别颜色属性，如color、bordercolor、backgroundcolor</li><li>鼓励通过$.speed()设置动画效果（时长和缓动）</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var params=&#123;width:&#x27;100px&#x27;,height:&#x27;100px&#x27;&#125;;</span><br><span class="line">var settings=$.speed(3000,&#x27;swing&#x27;);</span><br><span class="line">$(&#x27;div&#x27;).animate(params,setting);```</span><br></pre></td></tr></table></figure><ul><li>动画队列</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"> function runQue() &#123;</span><br><span class="line">div.show(&#x27;slow&#x27;)</span><br><span class="line">.animate(&#123;left: &#x27;+=200&#x27;&#125;, 2000)   </span><br><span class="line">        .queue(function() &#123;</span><br><span class="line">        //弥补jquery不能识别颜色属性的缺陷</span><br><span class="line">        $(this).css(&#x27;background&#x27;, &#x27;green&#x27;).dequeue();</span><br><span class="line">        &#125;)</span><br><span class="line">        .animate(&#123;left: &#x27;-=200&#x27;&#125;, 1500)</span><br><span class="line">        //构成一个永不停止的动画的</span><br><span class="line">        .slideUp(&#x27;normal&#x27;, runQue);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th align="center">方自定义动画相关方法</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">animate(params[,speed][,easing][,fn])</td><td align="center">用于创建自定义动画的函数</td></tr><tr><td align="center">$.speed([speed][,settings])</td><td align="center">创建一个包含一组属性的对象用来定义自定义动画</td></tr><tr><td align="center">queue([queueName])</td><td align="center">显示被选元素上要执行的函数队列（入队）</td></tr><tr><td align="center">delay(speed[,queueName])</td><td align="center">设置一个延时来推迟执行队列中之后的项目</td></tr><tr><td align="center">clearQueue([queueName])</td><td align="center">从尚未运行的队列中移除所有项目</td></tr><tr><td align="center">dequeue([queueName])</td><td align="center">从队列移除下一个函数，然后执行函数（出队）</td></tr><tr><td align="center">finish([queueName])</td><td align="center">停止当前正在运行的动画，删除所有排队的动画，并完成匹配元素所有的动画</td></tr><tr><td align="center">stop([clearQueue][,jumpToEnd])</td><td align="center">停止所有在指定元素上正在运行的动画</td></tr></tbody></table><ol><li><code>params</code>：表示一组包含动画最终属性值的集合</li><li><code>settings</code>：是easing与fn组成的一个对象集合</li><li><code>queueName</code>：表示队列名称，默认值为fx(标准效果队列)</li><li><code>clearQueue</code>：布尔类型，默认为false，用于规定是否停止被选元素所有加入队列的动画</li><li><code>jumpToEnd</code>：布尔类型，默认为false，用于规定是否立即完成当前的动画</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Type&quot;</span> <span class="attr">content</span>=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span></span></span><br><span class="line"><span class="tag">          <span class="attr">src</span>=<span class="string">&quot;jquery-3.4.1.js&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">media</span>=<span class="string">&quot;screen&quot;</span>&gt;</span></span><br><span class="line">        div&#123;</span><br><span class="line">            background: red;</span><br><span class="line">            width: 0px;</span><br><span class="line">            height: 0px;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;btn&quot;</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;开始动画&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        $(<span class="string">&#x27;#btn&#x27;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="comment">//1. 直接调用animate，所有效果均作为参数</span></span></span><br><span class="line"><span class="javascript">            $(<span class="string">&#x27;div&#x27;</span>).animate(</span></span><br><span class="line"><span class="javascript">                &#123;<span class="attr">width</span>:<span class="string">&#x27;100px&#x27;</span>,<span class="attr">height</span>:<span class="string">&#x27;100px&#x27;</span>&#125;,</span></span><br><span class="line">                3000,</span><br><span class="line"><span class="javascript">                <span class="string">&#x27;swing&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;</span></span><br><span class="line">            );</span><br><span class="line"></span><br><span class="line"><span class="javascript">            <span class="comment">// 2. 单独设置参数</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">// var params = &#123;width:&#x27;100px&#x27;,height:&#x27;100px&#x27;&#125;;</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">// var settings = $.speed(3000,&#x27;swing&#x27;);</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">// $(&#x27;div&#x27;).animate(params,settings);</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">            <span class="comment">//3. 动画队列</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">// var div = $(&#x27;div&#x27;);    // 获取指定动画的元素</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">// div.css(&#123;width:&#x27;100px&#x27;,height:&#x27;100px&#x27;,display:&#x27;none&#x27;,position:&#x27;absolute&#x27;&#125;);       //初始状态设置</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">// runQue();              // 执行队列动画</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">// function runQue() &#123;</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//     div.show(&#x27;slow&#x27;)</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//        .animate(&#123;left: &#x27;+=200&#x27;&#125;, 2000)   //修改left，应设position为absolute</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//        .queue(function() &#123;</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//             $(this).css(&#x27;background&#x27;, &#x27;green&#x27;).dequeue();</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//         &#125;)</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//        .animate(&#123;left: &#x27;-=200&#x27;&#125;, 1500)</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//        .slideUp(&#x27;normal&#x27;, runQue);</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">// &#125;</span></span></span><br><span class="line">        &#125;);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="无缝轮播"><a href="#无缝轮播" class="headerlink" title="无缝轮播"></a>无缝轮播</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;</span> <span class="meta-string">&quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.w3.org/1999/xhtml&quot;</span> <span class="attr">xml:lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Type&quot;</span> <span class="attr">content</span>=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>无缝轮播图<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.banner</span>&#123;<span class="attribute">position</span>:relative;<span class="attribute">overflow</span>:hidden;</span></span><br><span class="line"><span class="css">          <span class="selector-tag">margin</span><span class="selector-pseudo">:100px</span> <span class="selector-tag">auto</span>;<span class="selector-tag">width</span><span class="selector-pseudo">:958px</span>;<span class="selector-tag">height</span><span class="selector-pseudo">:400px</span>;&#125;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.banner</span> <span class="selector-tag">ul</span>&#123;<span class="attribute">margin</span>:<span class="number">0</span>;<span class="attribute">padding</span>:<span class="number">0</span>;<span class="attribute">list-style</span>:none;&#125;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.hot</span>&#123;<span class="attribute">position</span>:absolute;<span class="attribute">top</span>:<span class="number">0</span>;<span class="attribute">left</span>:<span class="number">0</span>;&#125;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.hot</span> <span class="selector-tag">li</span>&#123;<span class="attribute">float</span>:left;&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.dot</span>&#123;<span class="attribute">position</span>:absolute;<span class="attribute">bottom</span>:<span class="number">10px</span>;<span class="attribute">width</span>:<span class="number">100%</span>;<span class="attribute">text-align</span>:center;<span class="attribute">font-size</span>:<span class="number">0</span>;&#125;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.dot</span> <span class="selector-tag">li</span>&#123;<span class="attribute">display</span>:inline-block;<span class="attribute">margin</span>:<span class="number">0</span> <span class="number">5px</span>;<span class="attribute">width</span>:<span class="number">15px</span>;<span class="attribute">height</span>:<span class="number">15px</span>;<span class="attribute">border-radius</span>:<span class="number">100%</span>;<span class="attribute">background</span>:<span class="built_in">rgba</span>(<span class="number">145</span>,<span class="number">144</span>,<span class="number">144</span>,.<span class="number">5</span>);<span class="attribute">cursor</span>:pointer;&#125;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.dot</span> <span class="selector-class">.on</span>&#123;<span class="attribute">background-color</span>:<span class="number">#fff</span>;&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="comment">/* 左右翻页箭头样式 */</span></span></span><br><span class="line"><span class="css">        <span class="selector-class">.arrow</span>&#123;<span class="attribute">display</span>:none;&#125;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.arrow</span> <span class="selector-tag">span</span>&#123;<span class="attribute">display</span>:block;<span class="attribute">width</span>:<span class="number">50px</span>;<span class="attribute">height</span>:<span class="number">100px</span>;<span class="attribute">background</span>:<span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,.<span class="number">6</span>);<span class="attribute">color</span>:<span class="number">#fff</span>;<span class="attribute">text-align</span>:center;<span class="attribute">font-size</span>:<span class="number">40px</span>;<span class="attribute">line-height</span>:<span class="number">100px</span>;<span class="attribute">cursor</span>:pointer;&#125;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.arrow</span> <span class="selector-class">.prev</span>&#123;<span class="attribute">position</span>:absolute;<span class="attribute">top</span>:<span class="number">50%</span>;<span class="attribute">left</span>:<span class="number">0</span>;<span class="attribute">margin-top</span>:-<span class="number">50px</span>;&#125;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.arrow</span> <span class="selector-class">.next</span>&#123;<span class="attribute">position</span>:absolute;<span class="attribute">top</span>:<span class="number">50%</span>;<span class="attribute">right</span>:<span class="number">0</span>;<span class="attribute">margin-top</span>:-<span class="number">50px</span>;&#125;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">script</span></span></span><br><span class="line"><span class="tag">          <span class="attr">src</span>=<span class="string">&quot;jquery-3.4.1.js&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;banner&quot;</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!--轮播图片--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;hot&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;images/1.jpg&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;images/2.jpg&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;images/3.jpg&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;images/4.jpg&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;images/5.jpg&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">&lt;!--小圆点--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;dot&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;on&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">&lt;!-- 左右翻页箭头--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;arrow&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;prev&quot;</span>&gt;</span><span class="symbol">&amp;lt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;next&quot;</span>&gt;</span><span class="symbol">&amp;gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">      <span class="comment">//1.初始工作</span></span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> i = <span class="number">0</span>;           <span class="comment">// 当前显示的图片索引</span></span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> timer = <span class="literal">null</span>;    <span class="comment">// 定时器</span></span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> delay = <span class="number">1000</span>;    <span class="comment">// 图片自动切换的间隔时间</span></span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> width = <span class="number">958</span>;     <span class="comment">// 每张图片的宽度</span></span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> speed = <span class="number">400</span>;     <span class="comment">// 动画时间</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">      <span class="comment">// 复制列表中的第一个图片，追加到列表最后，设置ul的宽度为图片张数 * 图片宽度</span></span></span><br><span class="line">  </span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> firstimg = $(<span class="string">&#x27;.hot li&#x27;</span>).first().clone();</span></span><br><span class="line"><span class="javascript">      $(<span class="string">&#x27;.hot&#x27;</span>).append(firstimg).width($(<span class="string">&#x27;.hot li&#x27;</span>).length * width);</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">      <span class="comment">// 设置周期计时器，实现图片自动切换</span></span></span><br><span class="line"><span class="javascript">      timer = <span class="built_in">setInterval</span>(imgChange, delay);</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">       <span class="comment">//2. 自动切换图片</span></span></span><br><span class="line"><span class="javascript">      <span class="function"><span class="keyword">function</span> <span class="title">imgChange</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line">        ++i;</span><br><span class="line"><span class="javascript">        isCrack();  <span class="comment">//实现无缝轮播</span></span></span><br><span class="line"><span class="javascript">        dotChange();  <span class="comment">//自动切换对应的圆点样式</span></span></span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line"><span class="javascript">      <span class="function"><span class="keyword">function</span> <span class="title">isCrack</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">if</span> (i == $(<span class="string">&#x27;.hot li&#x27;</span>).length) &#123;</span></span><br><span class="line">          i = 1;</span><br><span class="line"><span class="javascript">          $(<span class="string">&#x27;.hot&#x27;</span>).css(&#123;<span class="attr">left</span>: <span class="number">0</span>&#125;);</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="javascript">        $(<span class="string">&#x27;.hot&#x27;</span>).stop().animate(&#123;<span class="attr">left</span>: -i * width&#125;, speed);</span></span><br><span class="line">      &#125;</span><br><span class="line"><span class="javascript">      <span class="comment">// 3.自动切换对应的圆点</span></span></span><br><span class="line"><span class="javascript">      <span class="function"><span class="keyword">function</span> <span class="title">dotChange</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">if</span> (i == $(<span class="string">&#x27;.hot li&#x27;</span>).length - <span class="number">1</span>) &#123;</span></span><br><span class="line"><span class="javascript">          $(<span class="string">&#x27;.dot li&#x27;</span>).eq(<span class="number">0</span>).addClass(<span class="string">&#x27;on&#x27;</span>).</span></span><br><span class="line"><span class="javascript">               siblings().removeClass(<span class="string">&#x27;on&#x27;</span>);</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="javascript">        <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">          $(<span class="string">&#x27;.dot li&#x27;</span>).eq(i).addClass(<span class="string">&#x27;on&#x27;</span>).</span></span><br><span class="line"><span class="javascript">               siblings().removeClass(<span class="string">&#x27;on&#x27;</span>);</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line"><span class="javascript">      <span class="comment">// 4. 设置左右切换的箭头显示和隐藏</span></span></span><br><span class="line"><span class="javascript">      $(<span class="string">&#x27;.banner&#x27;</span>).hover(</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">           $(<span class="string">&#x27;.arrow&#x27;</span>).show();</span></span><br><span class="line">        &#125;,</span><br><span class="line"><span class="javascript">        <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">           $(<span class="string">&#x27;.arrow&#x27;</span>).hide();</span></span><br><span class="line">        &#125;);</span><br><span class="line"><span class="javascript">        <span class="comment">//  鼠标移入，暂停自动播放，移出，开始自动播放</span></span></span><br><span class="line"><span class="javascript">        $(<span class="string">&#x27;.banner&#x27;</span>).hover(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">          <span class="built_in">clearInterval</span>(timer);</span></span><br><span class="line"><span class="javascript">        &#125;, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">          timer = <span class="built_in">setInterval</span>(imgChange, delay);</span></span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line"><span class="javascript">      <span class="comment">//5.设置右箭头的事件</span></span></span><br><span class="line"><span class="javascript">      $(<span class="string">&#x27;.next&#x27;</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line">          imgChange()</span><br><span class="line">      &#125;);</span><br><span class="line"><span class="javascript">      <span class="comment">//6.设置左箭头的事件</span></span></span><br><span class="line"><span class="javascript">      $(<span class="string">&#x27;.prev&#x27;</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line">        --i;</span><br><span class="line">        if (i == -1) &#123;</span><br><span class="line"><span class="javascript">          i = $(<span class="string">&#x27;.hot li&#x27;</span>).length - <span class="number">2</span>;</span></span><br><span class="line"><span class="javascript">          $(<span class="string">&#x27;.hot&#x27;</span>).css(&#123;<span class="attr">left</span>: -($(<span class="string">&#x27;.hot li&#x27;</span>).length - <span class="number">1</span>) * width&#125;);</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="javascript">        $(<span class="string">&#x27;.hot&#x27;</span>).stop().animate(&#123;<span class="attr">left</span>: -i * width&#125;, speed);</span></span><br><span class="line">        dotChange();</span><br><span class="line">      &#125;);</span><br><span class="line">   <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/30/96517f17aa403959789e9ce6cd54a26c.png"></p>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript🌞事件</title>
      <link href="2021/01/15/%E5%89%8D%E7%AB%AF/JavaScript/JavaScript_%E4%BA%8B%E4%BB%B6/"/>
      <url>2021/01/15/%E5%89%8D%E7%AB%AF/JavaScript/JavaScript_%E4%BA%8B%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h1 id="事件"><a href="#事件" class="headerlink" title="事件"></a>事件</h1><ul><li>事件：用户行为，如单击、鼠标移动等；</li><li>事件处理程序：对事件进行处理的代码；</li><li>事件驱动式：侦测到用户行为、执行事件处理程序的过程；</li><li>事件流：事件传播的过程（捕获+冒泡）<ol><li>事件捕获方式（网景）<br>事件流传播的顺序应该是从DOM树的根节点到发生事件的元素节点。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/23/b315bc6e374e49e06599e3358da1c234.png"></li><li>事件冒泡方式（微软）<br>事件流传播的顺序应该是从发生事件的元素节点到DOM树的根节点。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/23/f8841c573e31a54e16e3e49579b65763.png"></li></ol></li></ul><h2 id="事件绑定方式"><a href="#事件绑定方式" class="headerlink" title="事件绑定方式"></a>事件绑定方式</h2><ol><li>行内绑定式<br> 事件处理程序中this关键字用于指向window对象<pre><code>     &lt;标签名 事件=&quot;事件的处理程序&quot;&gt;</code></pre></li><li>动态绑定式<br> 事件处理程序中this关键字用于指向当前正在操作的DOM元素对象<pre><code>     DOM元素对象.事件=事件的处理程序</code></pre></li><li>事件监听<br> 事件监听：可以为一个事件添加多个事件处理程序。</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">DOM对象.addEventListener(type,callback,[capture]);</span></span><br><span class="line"><span class="comment">type：事件类型 </span></span><br><span class="line"><span class="comment">callback：表示事件的处理程序</span></span><br><span class="line"><span class="comment">capture：</span></span><br><span class="line"><span class="comment">默认false表示在冒泡阶段完成事件处理 </span></span><br><span class="line"><span class="comment">true表示在捕获阶段完成事件的处理</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">var</span> div=<span class="built_in">document</span>.getElementById(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line">div.addEventListener(<span class="string">&#x27;click&#x27;</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;one&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line">div.addEventListener(<span class="string">&#x27;click&#x27;</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;two&quot;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="事件对象"><a href="#事件对象" class="headerlink" title="事件对象"></a>事件对象</h2><ul><li>在Javascript中，当发生事件时，都会产生一个<strong>事件对象event</strong>，这个对象中包含着所有与事件有关的信息。</li><li>获取事件对象<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">btn.onclick=<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line"><span class="keyword">var</span> event = e || <span class="built_in">window</span>.event; <span class="comment">//e为现版本 window.event为早期版本</span></span><br><span class="line"><span class="built_in">console</span>.log(event);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>补充：</li><li>假false：undefined、null、NaN、0、空串</li><li>真true：其它都为真</li><li>真前：true||任何值，都返回前面的值</li><li>假后：false||任何值，都返回后面的值</li></ul><table><thead><tr><th align="center">事件对象常用属性/方法</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">type</td><td align="center">返回当前事件的类型，如click</td></tr><tr><td align="center">target</td><td align="center">返回触发此事件的元素（事件的目标节点）</td></tr><tr><td align="center">stopPropagation()</td><td align="center">阻止事件冒泡</td></tr></tbody></table><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;</span> <span class="meta-string">&quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.w3.org/1999/xhtml&quot;</span> <span class="attr">xml:lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Type&quot;</span> <span class="attr">content</span>=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.d1</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">width</span><span class="selector-pseudo">:100px</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">height</span><span class="selector-pseudo">:100px</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">border</span><span class="selector-pseudo">:1px</span> <span class="selector-tag">red</span> <span class="selector-tag">solid</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;div&quot;</span> <span class="attr">class</span>=<span class="string">&#x27;d1&#x27;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;点击我&quot;</span> <span class="attr">id</span>=<span class="string">&quot;btn&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> div = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;div&#x27;</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> btn = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;btn&#x27;</span>);</span></span><br><span class="line"><span class="javascript">        div.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">&quot;div div div&quot;</span>);</span></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"><span class="javascript">        btn.onclick = <span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">&quot;btn btn btn&quot;</span>);</span></span><br><span class="line"><span class="javascript">           <span class="comment">//type  类型    target目标   event.stopPropagation()阻止冒泡</span></span></span><br><span class="line"><span class="javascript">           <span class="comment">//得到事件对象</span></span></span><br><span class="line"><span class="javascript">           <span class="keyword">var</span> event = e || <span class="built_in">window</span>.event;</span></span><br><span class="line"><span class="javascript">           <span class="built_in">console</span>.log( event.type );   <span class="comment">//--click</span></span></span><br><span class="line"><span class="handlebars"><span class="xml">           console.log( event.target );   //-- <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;点击我&quot;</span> <span class="attr">id</span>=<span class="string">&quot;btn&quot;</span>/&gt;</span></span></span></span><br><span class="line"><span class="javascript">           event.stopPropagation();  <span class="comment">//-- btn</span></span></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="页面事件"><a href="#页面事件" class="headerlink" title="页面事件"></a>页面事件</h1><table><thead><tr><th align="center">事件名称</th><th align="center">事件触发时机</th></tr></thead><tbody><tr><td align="center">load</td><td align="center">当页面载入完毕后触发</td></tr><tr><td align="center">unload</td><td align="center">当页面关闭时触发</td></tr></tbody></table><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;</span> <span class="meta-string">&quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.w3.org/1999/xhtml&quot;</span> <span class="attr">xml:lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Type&quot;</span> <span class="attr">content</span>=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">       <span class="comment">&lt;!--  &lt;script&gt;</span></span><br><span class="line"><span class="comment">        document.getElementById(&#x27;demo&#x27;).onclick = function()&#123;</span></span><br><span class="line"><span class="comment">            console.log(&#x27;单击&#x27;);</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">    &lt;/script&gt; --&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">              <span class="built_in">document</span>.getElementById(<span class="string">&#x27;demo&#x27;</span>).onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">&#x27;单击&#x27;</span>);</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&#x27;demo&#x27;</span>&gt;</span>点我<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="焦点事件"><a href="#焦点事件" class="headerlink" title="焦点事件"></a>焦点事件</h1><p>焦点事件多用于表单验证功能</p><table><thead><tr><th align="center">事件名称</th><th align="center">事件触发时机</th></tr></thead><tbody><tr><td align="center">focus</td><td align="center">当获得焦点时触发（不会冒泡）</td></tr><tr><td align="center">blur</td><td align="center">当失去焦点时（不会冒泡）</td></tr></tbody></table><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>验证用户名和密码是否为空<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">body</span>&#123;<span class="attribute">background</span>:<span class="number">#ddd</span>;&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-class">.box</span>&#123;<span class="attribute">background</span>:<span class="number">#fff</span>;<span class="attribute">padding</span>:<span class="number">20px</span> <span class="number">30px</span>;<span class="attribute">width</span>:<span class="number">400px</span>;<span class="attribute">margin</span>: <span class="number">0</span> auto;<span class="attribute">text-align</span>:center;&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-class">.btn</span>&#123;<span class="attribute">width</span>:<span class="number">180px</span>;<span class="attribute">height</span>:<span class="number">40px</span>;<span class="attribute">background</span>:<span class="number">#3388ff</span>;<span class="attribute">border</span>:<span class="number">1px</span> solid <span class="number">#fff</span>;<span class="attribute">color</span>:<span class="number">#fff</span>;<span class="attribute">font-size</span>:<span class="number">14px</span>;&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-class">.ipt</span>&#123;<span class="attribute">width</span>:<span class="number">260px</span>;<span class="attribute">padding</span>:<span class="number">4px</span> <span class="number">2px</span>;&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-class">.tips</span>&#123;<span class="attribute">width</span>:<span class="number">440px</span>;<span class="attribute">height</span>:<span class="number">30px</span>;<span class="attribute">margin</span>:<span class="number">5px</span> auto;<span class="attribute">background</span>:<span class="number">#fff</span>;<span class="attribute">color</span>:red;<span class="attribute">border</span>:<span class="number">1px</span> solid <span class="number">#ccc</span>;<span class="attribute">display</span>:none;<span class="attribute">line-height</span>:<span class="number">30px</span>;<span class="attribute">padding-left</span>:<span class="number">20px</span>;<span class="attribute">font-size</span>:<span class="number">13px</span>;&#125;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;tips&quot;</span> <span class="attr">class</span>=<span class="string">&quot;tips&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">label</span>&gt;</span>用户名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;user&quot;</span> <span class="attr">class</span>=<span class="string">&quot;ipt&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">label</span>&gt;</span>密　码：<span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;pass&quot;</span> <span class="attr">class</span>=<span class="string">&quot;ipt&quot;</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;login&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn&quot;</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> user = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;user&#x27;</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> pass = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;pass&#x27;</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> tips = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;tips&#x27;</span>);</span></span><br><span class="line"><span class="javascript">        user.onblur = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">if</span>(<span class="params">user.value===<span class="string">&#x27;&#x27;</span></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                tips.innerHTML = <span class="string">&#x27;用户名不能为空&#x27;</span>;</span></span><br><span class="line"><span class="javascript">                tips.style.display = <span class="string">&#x27;block&#x27;</span>;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="javascript">        pass.onblur = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">if</span>(<span class="params">user.value===<span class="string">&#x27;&#x27;</span></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                tips.innerHTML = <span class="string">&#x27;密码不能为空&#x27;</span>;</span></span><br><span class="line"><span class="javascript">                tips.style.display = <span class="string">&#x27;block&#x27;</span>;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--  &lt;script&gt;</span></span><br><span class="line"><span class="comment">      window.onload = function() &#123;</span></span><br><span class="line"><span class="comment">        addBlur(getElement(&#x27;user&#x27;));      // 检测id为user的元素失去焦点后，value值是否为空</span></span><br><span class="line"><span class="comment">        addBlur(getElement(&#x27;pass&#x27;));      // 检测id为pass的元素失去焦点后，value值是否为空</span></span><br><span class="line"><span class="comment">      &#125;;</span></span><br><span class="line"><span class="comment">      function getElement(obj) &#123;          // 根据id获取指定元素</span></span><br><span class="line"><span class="comment">        return document.getElementById(obj);</span></span><br><span class="line"><span class="comment">      &#125;</span></span><br><span class="line"><span class="comment">      function addBlur(obj) &#123;    // 为指定元素添加失去焦点事件</span></span><br><span class="line"><span class="comment">        obj.onblur = function() &#123;</span></span><br><span class="line"><span class="comment">          isEmpty(this);</span></span><br><span class="line"><span class="comment">        &#125;;</span></span><br><span class="line"><span class="comment">      &#125;</span></span><br><span class="line"><span class="comment">      function isEmpty(obj) &#123;    // 检测表单是否为空</span></span><br><span class="line"><span class="comment">        if (obj.value === &#x27;&#x27;) &#123;</span></span><br><span class="line"><span class="comment">          getElement(&#x27;tips&#x27;).style.display = &#x27;block&#x27;;</span></span><br><span class="line"><span class="comment">          getElement(&#x27;tips&#x27;).innerHTML = &#x27;注意：输入内容不能为空! &#x27;;</span></span><br><span class="line"><span class="comment">        &#125; else &#123;</span></span><br><span class="line"><span class="comment">          getElement(&#x27;tips&#x27;).style.display = &#x27;none&#x27;;</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">      &#125;</span></span><br><span class="line"><span class="comment">    &lt;/script&gt; --&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/23/b1fc049c00843685e04a843150a47ea2.png"></p><h1 id="鼠标事件"><a href="#鼠标事件" class="headerlink" title="鼠标事件"></a>鼠标事件</h1><table><thead><tr><th align="center">事件名称</th><th align="center">事件触发时机</th></tr></thead><tbody><tr><td align="center">click</td><td align="center">单击(动态绑定用onclick)</td></tr><tr><td align="center">dblclick</td><td align="center">双击</td></tr><tr><td align="center">mouseover/mouseout</td><td align="center">鼠标进入/离开</td></tr><tr><td align="center">change</td><td align="center">当内容发生改变时触发，一般用于select对象</td></tr><tr><td align="center">mousedown/mouseup</td><td align="center">按下 / 松开 任意鼠标键</td></tr><tr><td align="center">mousemove</td><td align="center">在元素内当鼠标移动时持续触发</td></tr></tbody></table><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/23/3893d35aef54b8c820472f5c8619fd76.png"></p><table><thead><tr><th align="center">位置属性</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">clientX/clinetY</td><td align="center">触发点相对浏览器可视区域左上角距离，不随页面滚动而变化（所有浏览器）</td></tr><tr><td align="center">pageX / pageY</td><td align="center">触发点相对文档区域左上角距离，随页面滚动而滚动（IE6~8不兼容）</td></tr><tr><td align="center">screenX / screenY</td><td align="center">触发点位于屏幕的距离，不随页面滚动而变化</td></tr></tbody></table><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;</span> <span class="meta-string">&quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.w3.org/1999/xhtml&quot;</span> <span class="attr">xml:lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Type&quot;</span> <span class="attr">content</span>=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">      <span class="selector-class">.mouse</span>&#123;<span class="attribute">position</span>:absolute;<span class="attribute">background</span>:<span class="number">#ffd965</span>;<span class="attribute">width</span>:<span class="number">40px</span>;<span class="attribute">height</span>:<span class="number">40px</span>;<span class="attribute">border-radius</span>:<span class="number">20px</span>;&#125;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;mouse&quot;</span> <span class="attr">class</span>=<span class="string">&quot;mouse&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">document</span>.onclick = <span class="function"><span class="keyword">function</span>(<span class="params">event</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="comment">//获取事件对象的兼容性</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span>  event = event || <span class="built_in">window</span>.event;</span></span><br><span class="line"><span class="javascript">            <span class="comment">//鼠标在页面上的位置</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> pageX = event.pageX ||</span></span><br><span class="line"><span class="javascript">                  event.clientX + <span class="built_in">document</span>.documentElement.scrollLeft;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> pageY = event.pageY ||</span></span><br><span class="line"><span class="javascript">                  event.clientY + <span class="built_in">document</span>.documentElement.scrollTop;</span></span><br><span class="line"><span class="javascript">            <span class="comment">//计算div应该显示的位置</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> targetX = pageX - mouse.offsetWidth/<span class="number">2</span>;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> targetY = pageY - mouse.offsetHeight / <span class="number">2</span>;</span></span><br><span class="line"><span class="javascript">            <span class="comment">//在鼠标位置显示div</span></span></span><br><span class="line"><span class="javascript">            mouse.style.display = <span class="string">&#x27;block&#x27;</span>;</span></span><br><span class="line"><span class="javascript">            mouse.style.left = targetX + <span class="string">&#x27;px&#x27;</span>;</span></span><br><span class="line"><span class="javascript">            mouse.style.top = targetY + <span class="string">&#x27;px&#x27;</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/23/8a51609ea5ea1dd95937bc2e0e1125b3.png"></p><h1 id="键盘事件"><a href="#键盘事件" class="headerlink" title="键盘事件"></a>键盘事件</h1><table><thead><tr><th align="center">事件名称</th><th align="center">事件触发时机</th></tr></thead><tbody><tr><td align="center">keypress</td><td align="center">键盘非功能键按下时触发</td></tr><tr><td align="center">keydown</td><td align="center">键盘所有键键按下时触发</td></tr><tr><td align="center">keyup</td><td align="center">键盘按键弹起时触发</td></tr></tbody></table><blockquote><p>keypress事件保存的按键值是ASCII码，<br>keydown和keyup事件保存的按键值是虚拟键码keycode。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/23/ecac96b22b955aee35cf5b9814b25cbe.png"><br>常用的keycode</p><ul><li> 回车：13</li><li>左上右下：37、38、39、40</li><li>Tab：9</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line">/*</span><br><span class="line">按下键盘的enter键，下一个文本框获得焦点。 </span><br><span class="line">第一步：查找页面元素</span><br><span class="line">第二步：为每一个input添加“键盘按下”事件</span><br><span class="line">第三步：判断按下的是否为Enter键</span><br><span class="line">第四步：如果是enter键，则寻找当前input框</span><br><span class="line">第五步：根据当前，计算下一个input框的index</span><br><span class="line">第六步：下一个input框获得焦点</span><br><span class="line">*/</span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>按Enter键切换<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>用户姓名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>电子邮箱：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>手机号码：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>个人描述：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 为四个input添加键盘事件</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">// 查找页面元</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> inputs = <span class="built_in">document</span>.getElementsByTagName(<span class="string">&#x27;input&#x27;</span>);</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">for</span>(<span class="params"><span class="keyword">var</span> i=<span class="number">0</span>;i&lt;inputs.length;i++</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            inputs[i].onkeydown = <span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="comment">//                    处理：如果按下的是回车键，</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//                    下一个输入框（当前—遍历，？==this）获得焦点（focus）</span></span></span><br><span class="line"><span class="javascript">                e = e || <span class="built_in">window</span>.event;</span></span><br><span class="line"><span class="javascript">                <span class="function"><span class="title">if</span>(<span class="params">e.keyCode==<span class="number">13</span></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="function"><span class="title">for</span>(<span class="params"><span class="keyword">var</span> j=<span class="number">0</span>;j&lt;inputs.length;j++</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                        <span class="function"><span class="title">if</span>(<span class="params">inputs[j]==<span class="built_in">this</span></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                            <span class="keyword">var</span> index = j+<span class="number">1</span>;</span></span><br><span class="line"><span class="javascript">                            <span class="comment">// 边界处理</span></span></span><br><span class="line"><span class="javascript">                            <span class="function"><span class="title">if</span>(<span class="params">index==inputs.length</span>)</span>&#123;</span></span><br><span class="line">                                index = 0;</span><br><span class="line">                            &#125;</span><br><span class="line">                            inputs[index].focus();</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="javascript">        <span class="comment">// //查找页面元素</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">// var inputs = document.getElementsByTagName(&#x27;input&#x27;);</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">// //为每一个input添加“键盘按下”事件</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">// for(var i=0;i&lt;inputs.length;i++)&#123;</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">//     inputs[i].onkeydown = function(e)&#123;</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">//         //判断按下的是否为Enter键</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">//         var e = e || window.event;</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">//         if(e.keyCode===13)&#123;</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">//             //是enter键，则寻找当前input框</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">//             for(var j=0;j&lt;inputs.length;j++)&#123;</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">//                 if(inputs[j]===this)&#123;</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">//                     //console.log(j);</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">//                     //下一个input框的index</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">//                     var index = ++j;</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">//                     if(index==inputs.length)&#123;</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">//                         index=0;</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">//                     &#125;</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">//                     console.log(index);</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">//                     //下一个input框获得焦点</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">//                     inputs[index].focus();</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">//                     break;</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">//                 &#125;</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">//             &#125;</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">//         &#125;</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">//     &#125;</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">// &#125;</span></span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/23/7d6946a12612945ad0b169c50d4f7de8.png"></p><h1 id="表单事件"><a href="#表单事件" class="headerlink" title="表单事件"></a>表单事件</h1><table><thead><tr><th align="center">事件名称</th><th align="center">事件触发条件</th></tr></thead><tbody><tr><td align="center">submit</td><td align="center">当表单提交时触发</td></tr><tr><td align="center">reset</td><td align="center">当表单重置时触发</td></tr></tbody></table><p>这两个事件的返回值若是false则会取消默认操作，否则将执行默认操作</p><h1 id="图片放大特效"><a href="#图片放大特效" class="headerlink" title="图片放大特效"></a>图片放大特效</h1><p>素材：<br>    big.jpg<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/23/27526e27bf54e49ae8ca76b8aca0b014.png"><br>    small.jpg<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/23/7afa6108f3aefd19e34000981327ad18.png"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line">/*</span><br><span class="line">（1）页面构成</span><br><span class="line">大div：包括左div+右div</span><br><span class="line">左div：包含图片+div(遮罩--移动、显示或隐藏)</span><br><span class="line">右div：包含 图片（显示或隐藏）</span><br><span class="line">（2）JS实现步骤</span><br><span class="line">第一步：鼠标经过与移出，遮罩和大图的显示与隐藏</span><br><span class="line">第二步：遮罩的移动，通过为小图添加鼠标移动事件来实现</span><br><span class="line">第三步：大图的显示区域</span><br><span class="line"></span><br><span class="line">*/</span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;</span> <span class="meta-string">&quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.w3.org/1999/xhtml&quot;</span> <span class="attr">xml:lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Type&quot;</span> <span class="attr">content</span>=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">      <span class="selector-class">.box</span>&#123;<span class="attribute">width</span>:<span class="number">350px</span>;<span class="attribute">height</span>:<span class="number">350px</span>;<span class="attribute">border</span>:<span class="number">1px</span> solid <span class="number">#ccc</span>;<span class="attribute">position</span>:relative&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-class">.big</span>&#123;<span class="attribute">width</span>:<span class="number">400px</span>;<span class="attribute">height</span>:<span class="number">400px</span>;<span class="attribute">position</span>:absolute;<span class="attribute">top</span>:<span class="number">0</span>;<span class="attribute">left</span>:<span class="number">360px</span>;<span class="attribute">border</span>:<span class="number">1px</span> solid <span class="number">#ccc</span>;<span class="attribute">overflow</span>:hidden;<span class="attribute">display</span>:none&#125; <span class="comment">/* overflow:hidden是当元素内的内容溢出的时候使它隐藏溢出的部分，即超出部分隐藏 */</span></span></span><br><span class="line"><span class="css">      <span class="selector-class">.mask</span>&#123;<span class="attribute">width</span>:<span class="number">175px</span>;<span class="attribute">height</span>:<span class="number">175px</span>;<span class="attribute">background</span>:<span class="built_in">rgba</span>(<span class="number">255</span>,<span class="number">255</span>,<span class="number">0</span>,.<span class="number">4</span>);<span class="attribute">position</span>:absolute;<span class="attribute">top</span>:<span class="number">0</span>;<span class="attribute">left</span>:<span class="number">0</span>;<span class="attribute">cursor</span>:move;<span class="attribute">display</span>:none&#125;<span class="comment">/*cursor:move 光标形状*/</span></span></span><br><span class="line"><span class="css">      <span class="selector-class">.small</span>&#123;<span class="attribute">position</span>:relative&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-class">.box</span> <span class="selector-tag">img</span>&#123;<span class="attribute">vertical-align</span>:top&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-id">#bigBox</span> <span class="selector-tag">img</span>&#123;<span class="attribute">position</span>:absolute&#125;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span> <span class="attr">id</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;smallBox&quot;</span> <span class="attr">class</span>=<span class="string">&quot;small&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;images/small.jpg&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;mask&quot;</span> <span class="attr">class</span>=<span class="string">&quot;mask&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;bigBox&quot;</span> <span class="attr">class</span>=<span class="string">&quot;big&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">id</span>=<span class="string">&quot;bigImg&quot;</span> <span class="attr">src</span>=<span class="string">&quot;images/big.jpg&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="comment">//第一步：鼠标经过与移出，遮罩和大图的显示与隐藏 -- 遮罩默认在小图的左上角</span></span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="keyword">function</span> <span class="title">$</span>(<span class="params">id</span>)</span>&#123;  <span class="comment">//定义函数，根据id值获取元素对象</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> <span class="built_in">document</span>.getElementById(id);</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="javascript">        $(<span class="string">&#x27;smallBox&#x27;</span>).onmouseover = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">&quot;jirnu &quot;</span>);</span></span><br><span class="line"><span class="javascript">            $(<span class="string">&#x27;mask&#x27;</span>).style.display = <span class="string">&#x27;block&#x27;</span>;</span></span><br><span class="line"><span class="javascript">            $(<span class="string">&#x27;bigBox&#x27;</span>).style.display = <span class="string">&#x27;block&#x27;</span>;</span></span><br><span class="line">        &#125;;</span><br><span class="line"><span class="javascript">        $(<span class="string">&#x27;smallBox&#x27;</span>).onmouseout = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            $(<span class="string">&#x27;mask&#x27;</span>).style.display = <span class="string">&#x27;none&#x27;</span>;</span></span><br><span class="line"><span class="javascript">            $(<span class="string">&#x27;bigBox&#x27;</span>).style.display = <span class="string">&#x27;none&#x27;</span>;</span></span><br><span class="line">        &#125;;</span><br><span class="line"><span class="javascript">        <span class="comment">//第二步：遮罩的移动，通过为小图添加鼠标移动事件来实现</span></span></span><br><span class="line"><span class="javascript">        $(<span class="string">&#x27;smallBox&#x27;</span>).onmousemove = <span class="function"><span class="keyword">function</span>(<span class="params">event</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> event = event || <span class="built_in">window</span>.event;</span></span><br><span class="line"><span class="javascript">            <span class="comment">//计算鼠标在页面中的坐标</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> pageX = event.pageX || event.clientX + dodument.documentElement.scroll;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> pageY = event.pageY || event.clientY + <span class="built_in">document</span>.documentElement.scrollTop;</span></span><br><span class="line"><span class="javascript">            <span class="comment">//计算遮罩的位置:x = 鼠标位置的x - 遮罩宽度的一半， y类似</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> maskX = pageX - $(<span class="string">&#x27;mask&#x27;</span>).offsetWidth / <span class="number">2</span>;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> maskY = pageY - $(<span class="string">&#x27;mask&#x27;</span>).offsetHeight / <span class="number">2</span>;</span></span><br><span class="line"><span class="javascript">            <span class="comment">//遮罩边界处理 -- 遮罩不能移动到小图以外的位置</span></span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">if</span>(<span class="params">maskX&lt;<span class="number">0</span></span>)</span>&#123;  <span class="comment">//左边界</span></span></span><br><span class="line">                maskX = 0;</span><br><span class="line">            &#125;</span><br><span class="line"><span class="javascript">            <span class="keyword">if</span>(maskX&gt;$(<span class="string">&#x27;smallBox&#x27;</span>).offsetWidth - $(<span class="string">&#x27;mask&#x27;</span>).offsetWidth)&#123;<span class="comment">//右边界</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//修改遮罩的显示位置 -- 移动</span></span></span><br><span class="line"><span class="javascript">                maskX = $(<span class="string">&#x27;smallBox&#x27;</span>).offsetWidth - $(<span class="string">&#x27;mask&#x27;</span>).offsetWidth;</span></span><br><span class="line">            &#125;</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">if</span>(<span class="params">maskY&lt;<span class="number">0</span></span>)</span>&#123;  <span class="comment">//上边界</span></span></span><br><span class="line">                maskY = 0;</span><br><span class="line">            &#125;</span><br><span class="line"><span class="javascript">            <span class="keyword">if</span>(maskY&gt;$(<span class="string">&#x27;smallBox&#x27;</span>).offsetHeight - $(<span class="string">&#x27;mask&#x27;</span>).offsetHeight)&#123;  <span class="comment">//下边界</span></span></span><br><span class="line"><span class="javascript">                maskY=$(<span class="string">&#x27;smallBox&#x27;</span>).offsetHeight - $(<span class="string">&#x27;mask&#x27;</span>).offsetHeight;</span></span><br><span class="line">            &#125;</span><br><span class="line"><span class="javascript">            $(<span class="string">&#x27;mask&#x27;</span>).style.left = maskX + <span class="string">&#x27;px&#x27;</span>;</span></span><br><span class="line"><span class="javascript">            $(<span class="string">&#x27;mask&#x27;</span>).style.top = maskY + <span class="string">&#x27;px&#x27;</span>;</span></span><br><span class="line"><span class="javascript">            <span class="comment">//第三步：大图的显示区域 -- 按照遮罩在小图中的区域，显示大图中相应区域 -- 比例计算</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">// 按照比例移动大图 大图片能够移动的总距离 = 大图的宽度 - 大盒子的宽度</span></span></span><br><span class="line"><span class="javascript">           <span class="keyword">var</span> bigImgToMove = $(<span class="string">&#x27;bigImg&#x27;</span>).offsetWidth - $(<span class="string">&#x27;bigBox&#x27;</span>).offsetWidth;</span></span><br><span class="line"><span class="javascript">           <span class="comment">// 遮罩能够移动的总距离 = 小盒子的宽度 - 遮罩的宽度</span></span></span><br><span class="line"><span class="javascript">           <span class="keyword">var</span> maskToMove = $(<span class="string">&#x27;smallBox&#x27;</span>).offsetWidth - $(<span class="string">&#x27;mask&#x27;</span>).offsetWidth;</span></span><br><span class="line"><span class="javascript">           <span class="comment">// 计算移动比例rate = 大图片能够移动的总距离/遮罩能够移动的总距离</span></span></span><br><span class="line"><span class="javascript">           <span class="keyword">var</span> rate = bigImgToMove / maskToMove;</span></span><br><span class="line"><span class="javascript">           <span class="comment">// 设置大图片当前的位置 = rate * 遮罩当前的位置</span></span></span><br><span class="line"><span class="javascript">           $(<span class="string">&#x27;bigImg&#x27;</span>).style.left = - rate * maskX + <span class="string">&#x27;px&#x27;</span>;</span></span><br><span class="line"><span class="javascript">           $(<span class="string">&#x27;bigImg&#x27;</span>).style.top = - rate * maskY + <span class="string">&#x27;px&#x27;</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/23/ecb6e3c873d1493ef7af732291722a28.png"></p>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript🌞DOM</title>
      <link href="2021/01/15/%E5%89%8D%E7%AB%AF/JavaScript/JavaScript_DOM/"/>
      <url>2021/01/15/%E5%89%8D%E7%AB%AF/JavaScript/JavaScript_DOM/</url>
      
        <content type="html"><![CDATA[<h1 id="DOM"><a href="#DOM" class="headerlink" title="DOM"></a>DOM</h1><ol><li><p>什么是DOM？</p><ul><li>文 档（Document）表示HTML文件。</li><li>节 点：文档中所有的内容，都称为节点。</li><li>节点类型：标签节点（元素）、文本节点、属性节点、注释节点。</li><li>DOM：Document Object Model，文档对象模型。</li><li>作 用：完成对HTML文档内所有元素的获取、访问、标签属性和样式的设置等操作。</li></ul></li><li><p>DOM HTML 节点树</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>DOM节点<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;t1.png&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>喜欢的水果<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>DOM应用<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/23/97f95e864fdad767351f408505972143.png"></p></li></ol><h1 id="HTML元素操作"><a href="#HTML元素操作" class="headerlink" title="HTML元素操作"></a>HTML元素操作</h1><h2 id="获取页面元素"><a href="#获取页面元素" class="headerlink" title="获取页面元素"></a>获取页面元素</h2><ol><li><strong><em>利用document对象的方法</em></strong></li></ol><table><thead><tr><th align="center">document对象的方法</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">getElementById()</td><td align="center">返回对拥有指定id的第一个对象的引用</td></tr><tr><td align="center">getElementsByName()</td><td align="center">返回带有指定名称的对象集合</td></tr><tr><td align="center">getElementsByTagName()</td><td align="center">返回带有指定标签名的对象集合</td></tr><tr><td align="center">getElementsByClassName()</td><td align="center">返回带有指定类名的对象集合（不支持IE6~8）</td></tr><tr><td align="center">querySelector()</td><td align="center">返回文档中匹配到指定元素或CSS选择器的第1个对象的引用</td></tr><tr><td align="center">querySelectorAll()</td><td align="center">返回文档中匹配到指定元素或CSS选择器的第1个对象集合</td></tr></tbody></table><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;box&quot;</span>&gt;</span>box<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;bar&quot;</span>&gt;</span>bar1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;bar&quot;</span>&gt;</span>bar2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">name</span>=<span class="string">&quot;main&quot;</span>&gt;</span>main1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">name</span>=<span class="string">&quot;main&quot;</span>&gt;</span>main2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(<span class="built_in">document</span>.getElementById(<span class="string">&quot;box&quot;</span>));</span></span><br><span class="line"><span class="javascript"><span class="comment">//返回对象集合，可以通过下标获得指定项</span></span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(<span class="built_in">document</span>.getElementsByName(<span class="string">&quot;main&quot;</span>)[<span class="number">0</span>]);</span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(<span class="built_in">document</span>.getElementsByClassName(<span class="string">&quot;bar&quot;</span>));</span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(<span class="built_in">document</span>.getElementsByTagName(<span class="string">&quot;div&quot;</span>));</span></span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="comment">//HTML5新增方法</span></span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(<span class="built_in">document</span>.querySelector(<span class="string">&quot;div&quot;</span>)); <span class="comment">//获取匹配到的第1个div</span></span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(<span class="built_in">document</span>.querySelector(<span class="string">&quot;#box&quot;</span>)); <span class="comment">//获取id为box的第1个div</span></span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(<span class="built_in">document</span>.querySelector(<span class="string">&quot;.bar&quot;</span>)); <span class="comment">//获取class为bar的第1个div</span></span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(<span class="built_in">document</span>.querySelector(<span class="string">&quot;div[name]&quot;</span>)); <span class="comment">//获取含有name属性的第1个div</span></span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(<span class="built_in">document</span>.querySelector(<span class="string">&quot;div.bar&quot;</span>)); <span class="comment">//获取文档中class为bar的第1个div</span></span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(<span class="built_in">document</span>.querySelector(<span class="string">&quot;div#box&quot;</span>)); <span class="comment">//获取文档中id为box的第1个div</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>2.<strong><em>利用documetn对象的属性</em></strong></p><table><thead><tr><th align="center">document对象的属性</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">document.body</td><td align="center">返回文档的body元素</td></tr><tr><td align="center">document.documentElement</td><td align="center">返回文档的html元素</td></tr><tr><td align="center">document.forms</td><td align="center">返回对文档中所有Form对象引用</td></tr><tr><td align="center">document.images</td><td align="center">返回对文档中所有Image对象引用</td></tr></tbody></table><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> body=<span class="built_in">document</span>.getElementsByTagName(<span class="string">&#x27;body&#x27;</span>)[<span class="number">0</span>];  <span class="comment">//获取body元素</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span>html=<span class="built_in">document</span>.getElementsByTagName(<span class="string">&#x27;html&#x27;</span>)[<span class="number">0</span>];  <span class="comment">//获取html元素</span></span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(<span class="built_in">document</span>.body === body);             <span class="comment">//返回比较结果 true</span></span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(<span class="built_in">document</span>.documentElement === html);   <span class="comment">//返回比较结果 true</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>3.<strong><em>利用Element对象的方法</em></strong></p><table><thead><tr><th align="center">Element对象的方法</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">getElementsByClassName</td><td align="center">返回某个元素内具有指定class的元素</td></tr><tr><td align="center">getElementsByTagName</td><td align="center">返回某个元素内具有指定tag的元素</td></tr></tbody></table><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">id</span>=<span class="string">&quot;ul&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>PHP<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>JS<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>JQuery<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"> var lis = document.getElementById(&#x27;ul&#x27;).getElementsByTagName(&#x27;li&#x27;);</span><br><span class="line"> console.log(lis);</span><br></pre></td></tr></table></figure><blockquote><p>通过document对象或者Element对象调用getElementsByClassName()方法、getElementsByTagName()方法、children属性等返回的对象集合，实际上是一个<strong>HTMLCollection对象</strong>;<br>document对象调用getElementsByName()方法在Chrom浏览器中返回的是<strong>NodeList对象</strong>，IE11返回的是HTMLCOllection对象。<br>HTMLCollection用于元素操作，NodeList用于节点操作</p></blockquote><h2 id="更改元素内容"><a href="#更改元素内容" class="headerlink" title="更改元素内容"></a>更改元素内容</h2><table><thead><tr><th align="center">Element对象的属性</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center"><strong>innerHTML</strong></td><td align="center">设置或返回元素开始和结束标签之间的HTML</td></tr><tr><td align="center">innerText(不推荐)</td><td align="center">设置或返回元素中去除所有标签的内容</td></tr><tr><td align="center">textContent</td><td align="center">设置或者返回指定节点的文本内容</td></tr></tbody></table><table><thead><tr><th align="center">document对象的方法</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">document.write()</td><td align="center">向文档写入指定的内容</td></tr><tr><td align="center">document.writeln()</td><td align="center">向文档写入指定的内容后并换行</td></tr></tbody></table><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">//html代码</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&#x27;div&#x27;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>标题文字<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>段落1111<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">//JS代码实现</span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> div=<span class="built_in">document</span>.getElementById(<span class="string">&#x27;div&#x27;</span>);</span></span><br><span class="line"><span class="handlebars"><span class="xml">var str=&#x27;<span class="tag">&lt;<span class="name">h2</span>&gt;</span>标题文字<span class="tag">&lt;/<span class="name">h2</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>段落1111<span class="tag">&lt;/<span class="name">p</span>&gt;</span>&#x27;;</span></span></span><br><span class="line">div.innerHTML=str;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="更改元素属性"><a href="#更改元素属性" class="headerlink" title="更改元素属性"></a>更改元素属性</h2><pre><code>    ele.setAttribute(&#39;属性名&#39;,&#39;属性值&#39;);</code></pre><table><thead><tr><th align="center">方法</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">setAttribute(name, value)</td><td align="center">设置或者改变指定属性的值</td></tr><tr><td align="center">getAttribute(name)</td><td align="center">返回指定元素的属性值</td></tr><tr><td align="center">removeAttribute(name)</td><td align="center">从元素中删除指定的属性</td></tr></tbody></table><blockquote><p>利用<strong>attributes属性</strong>可以获取一个HTML元素的所有属性，以及所有属性的个数length</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span>php<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span>js<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;red&quot;</span>&gt;</span>java<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">      <span class="comment">//获得节点</span></span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> child = <span class="built_in">document</span>.getElementsByTagName(<span class="string">&#x27;li&#x27;</span>)[<span class="number">2</span>];</span></span><br><span class="line"><span class="javascript">      <span class="comment">//删除属性1</span></span></span><br><span class="line"><span class="javascript">      child.removeAttribute(<span class="string">&#x27;class&#x27;</span>);</span></span><br><span class="line"><span class="javascript">      <span class="comment">//删除属性2</span></span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> attr = child.getAttributeNode(<span class="string">&#x27;class&#x27;</span>);</span></span><br><span class="line">      child.removeAttributeNode(attr);</span><br><span class="line"><span class="javascript">      <span class="comment">//删除节点</span></span></span><br><span class="line">      child.parentNode.removeChild(child);</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&#x27;gray&#x27;</span> <span class="attr">id</span>=<span class="string">&#x27;thick&#x27;</span> <span class="attr">align</span>=<span class="string">&#x27;center&#x27;</span>&gt;</span>test word.<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> ele = <span class="built_in">document</span>.getElementsByTagName(<span class="string">&#x27;div&#x27;</span>)[<span class="number">0</span>];</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(<span class="string">&quot;当前属性个数：&quot;</span>  + ele.attributes.length);</span></span><br><span class="line"><span class="javascript">        <span class="comment">//添加属性 -- 实现和第12行同样的效果（二者留其一即可）</span></span></span><br><span class="line"><span class="javascript">        ele.setAttribute(<span class="string">&#x27;align&#x27;</span>, <span class="string">&#x27;center&#x27;</span>);</span></span><br><span class="line"><span class="javascript">        ele.setAttribute(<span class="string">&#x27;class&#x27;</span>, <span class="string">&#x27;gray&#x27;</span>);</span></span><br><span class="line"><span class="javascript">        ele.setAttribute(<span class="string">&#x27;id&#x27;</span>, <span class="string">&#x27;thick&#x27;</span>);</span></span><br><span class="line"><span class="javascript">        <span class="comment">//移除属性</span></span></span><br><span class="line"><span class="javascript">        ele.removeAttribute(<span class="string">&#x27;id&#x27;</span>);</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="更改元素样式"><a href="#更改元素样式" class="headerlink" title="更改元素样式"></a>更改元素样式</h2><pre><code>    ele.style.样式名:值;</code></pre><table><thead><tr><th align="center">常见style属性操作样式名</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">background</td><td align="center">设置或返回元素的背景属性</td></tr><tr><td align="center">backgroundColor</td><td align="center">设置或返回元素的背景色</td></tr><tr><td align="center">display</td><td align="center">设置或返回元素的显示类型</td></tr><tr><td align="center">height</td><td align="center">设置或返回元素的高度</td></tr><tr><td align="center">left</td><td align="center">设置或返回定位元素的左部位置</td></tr><tr><td align="center">textAlign</td><td align="center">设置或返回文本的水平对齐方式</td></tr><tr><td align="center">textDecoration</td><td align="center">设置或返回文本的修饰</td></tr><tr><td align="center">textIndent</td><td align="center">设置或返回文本第一行的缩进</td></tr></tbody></table><blockquote><p>在操作样式名称时，需要去掉CSS样式名里的中横线”-“,并将第二个英文首字母大写<br>例如background-color，需要修改为：backgroundColor</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span></span><br><span class="line"><span class="css">     <span class="selector-class">.gray</span>&#123;<span class="attribute">background</span>:<span class="number">#ccc</span>;&#125;</span></span><br><span class="line"><span class="css">     <span class="selector-id">#thick</span>&#123;<span class="attribute">font-weight</span>:bolder;&#125;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"> <span class="tag">&lt;<span class="name">div</span>&gt;</span>test word.<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"> <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">     <span class="keyword">var</span> ele = <span class="built_in">document</span>.getElementsByTagName(<span class="string">&#x27;div&#x27;</span>)[<span class="number">0</span>];</span></span><br><span class="line"><span class="javascript">     <span class="built_in">console</span>.log(<span class="string">&quot;当前属性个数：&quot;</span>  + ele.attributes.length);</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">     ele.style.textAlign = <span class="string">&#x27;center&#x27;</span>;</span></span><br><span class="line"><span class="javascript">     ele.style.background = <span class="string">&#x27;#ccc&#x27;</span>;</span></span><br><span class="line"><span class="javascript">     ele.style.fontWeight = <span class="string">&#x27;bolder&#x27;</span>;</span></span><br><span class="line"><span class="javascript">     <span class="comment">// //添加属性 -- 实现和第12行同样的效果（二者留其一即可）</span></span></span><br><span class="line"><span class="javascript">     <span class="comment">// ele.setAttribute(&#x27;align&#x27;, &#x27;center&#x27;);</span></span></span><br><span class="line"><span class="javascript">     <span class="comment">// ele.setAttribute(&#x27;class&#x27;, &#x27;gray&#x27;);</span></span></span><br><span class="line"><span class="javascript">     <span class="comment">// ele.setAttribute(&#x27;id&#x27;, &#x27;thick&#x27;);</span></span></span><br><span class="line"><span class="javascript">     <span class="comment">// //移除属性</span></span></span><br><span class="line"><span class="javascript">     <span class="comment">// ele.removeAttribute(&#x27;id&#x27;);</span></span></span><br><span class="line"></span><br><span class="line"> <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="classList"><a href="#classList" class="headerlink" title="classList"></a>classList</h2><p>由于一个元素的类选择器可以有多个，可以利用“div元素对象.classList”的方式，获取类选择器列表。</p><table><thead><tr><th align="center">classList方法</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">add()</td><td align="center">可以给元素添加类名，一次只能添加一个</td></tr><tr><td align="center">remove()</td><td align="center">可以将元素的类名删除，一次只能删除一个</td></tr><tr><td align="center">toggle()</td><td align="center">切换元素的样式，若元素之前没有指定名称的样式则添加，如果有则移除</td></tr><tr><td align="center">item()</td><td align="center">根据接收的数字索引参数，获取元素的类名</td></tr><tr><td align="center">contains</td><td align="center">判断元素是否包含指定名称的样式，若包含则返回true，否则返回false</td></tr></tbody></table><blockquote><p>可以通过classList的属性length获取元素类名的个数</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;bar bar1&quot;</span>&gt;</span>bar1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">media</span>=<span class="string">&quot;screen&quot;</span>&gt;</span></span><br><span class="line"><span class="css"><span class="selector-class">.ys</span>&#123;</span></span><br><span class="line"><span class="css"><span class="selector-tag">color</span><span class="selector-pseudo">:red</span>;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> mydiv=<span class="built_in">document</span>.getElementsByTagName(<span class="string">&#x27;div&#x27;</span>)[<span class="number">0</span>];</span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(mydiv.classList.length);  <span class="comment">//获得元素的所有类名</span></span></span><br><span class="line"><span class="javascript">mydiv.classList.add(<span class="string">&quot;ys&quot;</span>);    <span class="comment">//添加样式</span></span></span><br><span class="line"><span class="javascript">mydiv.classList.remove(<span class="string">&quot;ys&quot;</span>); <span class="comment">//删除样式s</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>标签栏切换效果<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">body</span>&#123;<span class="attribute">margin</span>:<span class="number">0</span>;<span class="attribute">padding</span>:<span class="number">0</span>;&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-class">.tab-box</span>&#123;<span class="attribute">width</span>:<span class="number">383px</span>;<span class="attribute">margin</span>:<span class="number">10px</span>;<span class="attribute">border</span>:<span class="number">1px</span> solid <span class="number">#ccc</span>;<span class="attribute">border-top</span>:<span class="number">2px</span> solid <span class="number">#206F96</span>;&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-class">.tab-head</span>&#123;<span class="attribute">height</span>:<span class="number">31px</span>;&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-class">.tab-head-div</span>&#123;<span class="attribute">width</span>:<span class="number">95px</span>;<span class="attribute">height</span>:<span class="number">30px</span>;<span class="attribute">float</span>:left;<span class="attribute">border-bottom</span>:<span class="number">1px</span> solid <span class="number">#ccc</span>;<span class="attribute">border-right</span>:<span class="number">1px</span> solid <span class="number">#ccc</span>;<span class="attribute">background</span>:<span class="number">#206F96</span>;<span class="attribute">line-height</span>:<span class="number">30px</span>;<span class="attribute">text-align</span>:center;<span class="attribute">cursor</span>:pointer;<span class="attribute">color</span>:<span class="number">#fff</span>;&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-class">.tab-head</span> <span class="selector-class">.current</span>&#123;<span class="attribute">background</span>:<span class="number">#fff</span>;<span class="attribute">border-bottom</span>:<span class="number">1px</span> solid <span class="number">#fff</span>;<span class="attribute">color</span>:<span class="number">#000</span>;&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-class">.tab-head-r</span>&#123;<span class="attribute">border-right</span>:<span class="number">0</span>;&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-class">.tab-body-div</span>&#123;<span class="attribute">display</span>:none;<span class="attribute">margin</span>:<span class="number">20px</span> <span class="number">10px</span>;&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-class">.tab-body</span> <span class="selector-class">.current</span>&#123;<span class="attribute">display</span>:block;&#125;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;tab-box&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;tab-head&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;tab-head-div current&quot;</span>&gt;</span>标签一<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;tab-head-div&quot;</span>&gt;</span>标签二<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;tab-head-div&quot;</span>&gt;</span>标签三<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;tab-head-div tab-head-r&quot;</span>&gt;</span>标签四<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!--jkdjfk?--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;tab-body&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;tab-body-div current&quot;</span>&gt;</span> 1 <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;tab-body-div&quot;</span>&gt;</span> 2 <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;tab-body-div&quot;</span>&gt;</span> 3 <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;tab-body-div&quot;</span>&gt;</span> 4 <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 获取标签栏的所有标签元素对象</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> tabs = <span class="built_in">document</span>.getElementsByClassName(<span class="string">&#x27;tab-head-div&#x27;</span>);</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 获取标签栏的所有内容对象</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> divs = <span class="built_in">document</span>.getElementsByClassName(<span class="string">&#x27;tab-body-div&#x27;</span>);</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 遍历标签的元素对象,为每个标签元素对象添加鼠标滑过事件</span></span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">for</span>(<span class="params"><span class="keyword">var</span> i <span class="keyword">in</span> tabs</span>)</span>&#123;  <span class="comment">//遍历</span></span></span><br><span class="line"><span class="javascript">            tabs[i].onmouseover = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;  <span class="comment">//加事件</span></span></span><br><span class="line"><span class="javascript">                <span class="function"><span class="title">for</span>(<span class="params"><span class="keyword">var</span> j <span class="keyword">in</span> tabs</span>)</span>&#123;  <span class="comment">//再次遍历</span></span></span><br><span class="line"><span class="javascript">                    <span class="function"><span class="title">if</span>(<span class="params">tabs[j]==<span class="built_in">this</span></span>)</span>&#123;  <span class="comment">//判断当前，加current</span></span></span><br><span class="line"><span class="javascript">                        tabs[j].classList.add(<span class="string">&#x27;current&#x27;</span>);</span></span><br><span class="line"><span class="javascript">                        divs[j].classList.add(<span class="string">&#x27;current&#x27;</span>);</span></span><br><span class="line"><span class="javascript">                    &#125;<span class="keyword">else</span>&#123;  <span class="comment">//非当前，去current</span></span></span><br><span class="line"><span class="javascript">                        tabs[j].classList.remove(<span class="string">&#x27;current&#x27;</span>);</span></span><br><span class="line"><span class="javascript">                        divs[j].classList.remove(<span class="string">&#x27;current&#x27;</span>);</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/23/0d8b8e41bf64e9a5cfa7745cceabac11.png"></p><h1 id="DOM节点操作"><a href="#DOM节点操作" class="headerlink" title="DOM节点操作"></a>DOM节点操作</h1><ul><li>文档中的所有内容，称为节点。</li><li>根据作用，划分为：标签节点、文本节点和属性节点。</li></ul><h2 id="获取节点"><a href="#获取节点" class="headerlink" title="获取节点"></a>获取节点</h2><pre><code>    document.getElementById（）    element.firstChild()    element.lastChild()    element.parentNode()    element.childNodes()</code></pre><table><thead><tr><th>属性</th><th>说明</th></tr></thead><tbody><tr><td>firstChild</td><td>访问当前节点的首个子节点</td></tr><tr><td>lastChild</td><td>访问当前节点的最后一个子节点</td></tr><tr><td>nodeName</td><td>访问当前节点名称</td></tr><tr><td>nodeValue</td><td>访问当前节点的值</td></tr><tr><td>nextSibiling</td><td>返回同ff一树层级中指定节点之后紧跟的节点（下一个兄弟）</td></tr><tr><td>previousSibling</td><td>返回同ff一树层级中指定节点的前一个节点（前一个兄弟）</td></tr><tr><td>parentNode</td><td>访问当前元素节点的父节点</td></tr><tr><td>childNodes</td><td>访问当前元素节点的所有子节点集合（含回车符，返回NodeList）</td></tr></tbody></table><blockquote><p>childNodes属性用于节点操作，返回NdeList对象的集合，包括回车符、文本节点等其他类型的节点</p><p>children属性用于元素操作，返回HTMLCollection对象的集合，不包括文本节点等其他类型的节点</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">id</span>=<span class="string">&quot;ul1&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>JS<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>BOM<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>DOM<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--注释--&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> ul1 = <span class="built_in">document</span>.getElementById(<span class="string">&quot;ul1&quot;</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(<span class="string">&quot;1--nodeName--&quot;</span> + ul1.nodeName);</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(<span class="string">&quot;2--nodeValue--&quot;</span> + ul1.nodeValue);</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> txt1 = ul1.firstChild;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(<span class="string">&quot;3--nodeName--&quot;</span> + txt1.nodeName);</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(<span class="string">&quot;4--nodeValue--&quot;</span> + txt1.nodeValue);</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> li1 = txt1.nextSibling;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(<span class="string">&quot;5--nodeName--&quot;</span> + li1.nodeName);</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(<span class="string">&quot;6--nodeValue--&quot;</span> + li1.nodeValue);</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> txtJS = li1.firstChild.nodeValue;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(<span class="string">&quot;7--txtJS--&quot;</span> + txtJS);</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(<span class="string">&quot;8--&quot;</span> + li1.nextSibling.nodeName);</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(<span class="string">&quot;9--&quot;</span> + ul1.childNodes.length);</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(<span class="string">&quot;10--&quot;</span> + ul1.children.length);</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="节点追加"><a href="#节点追加" class="headerlink" title="节点追加"></a>节点追加</h2><table><thead><tr><th align="center">方法名</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">document.createElement()</td><td align="center">创建元素节点</td></tr><tr><td align="center">document.createTextNode()</td><td align="center">创建文本节点</td></tr><tr><td align="center">document.createAttribute()</td><td align="center">创建属性节点</td></tr><tr><td align="center">appendChild()</td><td align="center">在指定元素的子节点列表的末尾添加一个节点</td></tr><tr><td align="center">insertBefore()</td><td align="center">为当前节点增加一个子节点（插入到指定子节点之后）</td></tr><tr><td align="center">getAttributeNode()</td><td align="center">返回指定名称的属性节点</td></tr><tr><td align="center">setAttributeNode()</td><td align="center">设置或者改变名称的属性节点</td></tr></tbody></table><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;</span> <span class="meta-string">&quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.w3.org/1999/xhtml&quot;</span> <span class="attr">xml:lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Type&quot;</span> <span class="attr">content</span>=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span> <span class="attr">align</span>=<span class="string">&#x27;center&#x27;</span>&gt;</span>Hello JS!<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">//JS实现</span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> h2 = <span class="built_in">document</span>.createElement(<span class="string">&#x27;h2&#x27;</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> text = <span class="built_in">document</span>.createTextNode(<span class="string">&#x27;hello JS&#x27;</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> attr = <span class="built_in">document</span>.createAttribute(<span class="string">&#x27;algin&#x27;</span>);</span></span><br><span class="line"><span class="javascript">        attr.value = <span class="string">&#x27;center&#x27;</span>;</span></span><br><span class="line"></span><br><span class="line">        h2.setAttributeNode(attr);</span><br><span class="line">        h2.appendChild(text);</span><br><span class="line"><span class="javascript">        <span class="built_in">document</span>.body.appendChild(h2);</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="删除节点"><a href="#删除节点" class="headerlink" title="删除节点"></a>删除节点</h2><ul><li>删除节点使用<code>removeChild()</code>和<code>removeAttributeNode()</code>实现，它们的返回值是被移出的元素节点或属性节点</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;</span> <span class="meta-string">&quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.w3.org/1999/xhtml&quot;</span> <span class="attr">xml:lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Type&quot;</span> <span class="attr">content</span>=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">media</span>=<span class="string">&quot;screen&quot;</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.strong</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">font-weight</span><span class="selector-pseudo">:bolder</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>PHP<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>JavaScript<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;strong&quot;</span>&gt;</span>UI<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="comment">//删除第3个li的文本</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> li3 = <span class="built_in">document</span>.getElementsByTagName(<span class="string">&quot;li&quot;</span>)[<span class="number">2</span>];  <span class="comment">//获得元素 li</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> attr = li3.getAttributeNode(<span class="string">&#x27;class&#x27;</span>);  <span class="comment">//通过li获得其名称为class的属性节点</span></span></span><br><span class="line"><span class="javascript">        li3.removeAttributeNode(attr); <span class="comment">//删除li3的属性节点</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">        <span class="comment">//删除第3个li</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> ul = <span class="built_in">document</span>.getElementsByTagName(<span class="string">&#x27;ul&#x27;</span>)[<span class="number">0</span>];</span></span><br><span class="line">        ul.removeChild(li3);</span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="折叠菜单"><a href="#折叠菜单" class="headerlink" title="折叠菜单"></a>折叠菜单</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">media</span>=<span class="string">&quot;screen&quot;</span>&gt;</span></span><br><span class="line">        *&#123;</span><br><span class="line"><span class="css">            <span class="selector-tag">margin</span><span class="selector-pseudo">:0</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">padding</span><span class="selector-pseudo">:0</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">list-style</span><span class="selector-pseudo">:none</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">font-size</span><span class="selector-pseudo">:14px</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-id">#nav</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">margin</span><span class="selector-pseudo">:10px</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">text-align</span><span class="selector-pseudo">:center</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">line-height</span><span class="selector-pseudo">:25px</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">width</span><span class="selector-pseudo">:200px</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.title</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">background</span>: <span class="selector-id">#336699</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">color</span>:<span class="selector-id">#fff</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">border-bottom</span><span class="selector-pseudo">:1px</span> <span class="selector-tag">solid</span> <span class="selector-id">#fff</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">cursor</span><span class="selector-pseudo">:pointer</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.title1</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">background</span>:<span class="selector-id">#888</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">color</span>:<span class="selector-id">#000</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">border-bottom</span><span class="selector-pseudo">:1px</span> <span class="selector-tag">solid</span> <span class="selector-id">#666</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">cursor</span><span class="selector-pseudo">:pointer</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.content</span> <span class="selector-tag">li</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">color</span>:<span class="selector-id">#336699</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">background</span>:<span class="selector-id">#ddd</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">border-bottom</span><span class="selector-pseudo">:1px</span> <span class="selector-tag">solid</span> <span class="selector-id">#fff</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;nav&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;menu1&quot;</span> <span class="attr">class</span>=<span class="string">&quot;title&quot;</span>  <span class="attr">onclick</span>=<span class="string">&quot;showmenu(&#x27;1&#x27;)&quot;</span>&gt;</span>Ajax下载<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;list1&quot;</span> <span class="attr">class</span>=<span class="string">&quot;content&quot;</span> <span class="attr">style</span>=<span class="string">&quot;display:none&quot;</span>&gt;</span>    <span class="comment">&lt;!-- 探究：文档末 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span>AAA<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span>BBB<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span>CCC<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;menu2&quot;</span> <span class="attr">class</span>=<span class="string">&quot;title&quot;</span>  <span class="attr">onclick</span>=<span class="string">&quot;showmenu(&#x27;2&#x27;)&quot;</span>&gt;</span>JQuery下载<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;list2&quot;</span> <span class="attr">class</span>=<span class="string">&quot;content&quot;</span> <span class="attr">style</span>=<span class="string">&quot;display:none&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span>AAA<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span>BBB<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span>CCC<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="keyword">function</span> <span class="title">showmenu</span>(<span class="params">id</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> list = <span class="built_in">document</span>.getElementById(<span class="string">&quot;list&quot;</span> + id);</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> menu = <span class="built_in">document</span>.getElementById(<span class="string">&quot;menu&quot;</span> + id);</span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">if</span>(<span class="params">list.style.display==<span class="string">&#x27;none&#x27;</span></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                list.style.display=<span class="string">&#x27;block&#x27;</span>;  <span class="comment">//用元素操作：样式</span></span></span><br><span class="line"><span class="javascript">                menu.setAttribute(<span class="string">&#x27;class&#x27;</span>, <span class="string">&#x27;title1&#x27;</span>);</span></span><br><span class="line"><span class="javascript">            &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="javascript">                list.style.display=<span class="string">&#x27;none&#x27;</span>;</span></span><br><span class="line"><span class="javascript">                menu.setAttribute(<span class="string">&#x27;class&#x27;</span>, <span class="string">&#x27;title&#x27;</span>);</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/23/91fd175a02f7b27dded211fe6cb07bf1.png"></p>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript🌞BOM</title>
      <link href="2021/01/15/%E5%89%8D%E7%AB%AF/JavaScript/JavaScript_BOM/"/>
      <url>2021/01/15/%E5%89%8D%E7%AB%AF/JavaScript/JavaScript_BOM/</url>
      
        <content type="html"><![CDATA[<h1 id="BOM"><a href="#BOM" class="headerlink" title="BOM"></a>BOM</h1><ul><li>JS组成<ol><li>ECMAScript：JS基本语法、数组、函数和对象。</li><li>BOM：浏览器对象模型（Brower Object Model）。</li><li>DOM：文档对象模型（Document Object Model )。</li></ol></li><li>BOM作用及结构图<ol><li>浏览器对象：内置对象，实现JS操作浏览器窗口及窗口上的控件，实现用户和页面的动态交互。</li><li>BOM：浏览器对象模型。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/22/fde59ae943452104dec1eb6697a007dc.png"></li></ol></li></ul><h1 id="window"><a href="#window" class="headerlink" title="window"></a>window</h1><ul><li>window对象是BOM中所有对象的核心，同时也是BOM中所有对象的父对象。</li><li>全局变量、函数、内置对象均能被window对象调用。</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> area = <span class="string">&#x27;Beijing&#x27;</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getArea</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"> <span class="keyword">return</span> <span class="built_in">this</span>.area;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">window</span>.area);        <span class="comment">//访问变量，输出结果：Beijing</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">window</span>.area());<span class="comment">//访问window对象的属性，输出结果为：Beijing</span></span><br><span class="line"><span class="built_in">console</span>.log(getArea());  <span class="comment">//调用自定义函数，输出结果：Beijing</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">window</span>.getArea());  <span class="comment">//调用window对象的方法，输出结果：Beijing</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">window</span>.Number(area));  <span class="comment">//调用内置函数，将变量area转换为数值型，输出结果：NaN</span></span><br></pre></td></tr></table></figure><ul><li><p>定义在全局作用域中的getArea()函数，函数体内的this关键字指向window对象。</p></li><li><p>对于window对象的属性和方法在调用时可以省略window，直接访问其属性和方法即可。</p></li><li><p>弹出对话框和窗口</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/22/f7c0de03573b5943357e4e28d54fe66a.png"></p><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/22/a5afa659fcf7196d587d016fcac0b3bc.png"></p><ul><li><p>输入对话框</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str=prompt(<span class="string">&#x27;请输入测试的选项&#x27;</span>,<span class="string">&#x27;用户名和密码&#x27;</span>);</span><br></pre></td></tr></table></figure></li><li><p>确认对话框</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;input type=<span class="string">&quot;button&quot;</span> value=<span class="string">&quot;删除&quot;</span> onclick=<span class="string">&quot;del()&quot;</span>&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">del</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="function"><span class="title">if</span>(<span class="params">confirm(<span class="string">&#x27;确定要删除吗？&#x27;</span>)</span>)</span>&#123;</span><br><span class="line"><span class="comment">//你按下了“确定”按钮</span></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="comment">//你按下了“取消”按钮</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li><li><p>打开与关闭窗口</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">open(URL,name,specs,replace);</span><br><span class="line"><span class="comment">//name指定target属性或窗口的名称</span></span><br><span class="line"><span class="comment">//specs设置浏览器窗口的特征（如大小、位置）</span></span><br><span class="line"><span class="comment">//replace设置为true，表示替换浏览器历史中的当前条目,设置为false(默认值)，表示在浏览历史中创建新的条目</span></span><br></pre></td></tr></table></figure></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>这是第一个页面<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;test1 windowd对象的属性和方法_submit&quot;</span> <span class="attr">method</span>=<span class="string">&quot;get&quot;</span> <span class="attr">accept-charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">value</span>=<span class="string">&quot;打开窗口&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;openWin()&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="comment">//第一组：对话框</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">// window.alert(&quot;alert&quot;);</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">// console.log(&quot;confirm:&quot; + window.confirm(&quot;confirm&quot;));  //观察点击”确认“和”取消“两种情况的输出结果</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">// console.log(&quot;prompt:&quot; +  window.prompt(&quot;prompt&quot;,100));</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">        <span class="comment">//第二组：窗口的打开与关闭</span></span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="keyword">function</span> <span class="title">openWin</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">window</span>.open(<span class="string">&quot;test1 第二个页面.html&quot;</span>,<span class="string">&quot;_blank&quot;</span>,<span class="string">&#x27;width=400,height=200,left=200&#x27;</span>);</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li> 窗口位置和大小</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/22/b12c6d694892607202cbe6b6c8f4b4d2.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/22/e1c6f927ee07c68790ff6149ba98f6fd.png"></p><h2 id="定时器"><a href="#定时器" class="headerlink" title="定时器"></a>定时器</h2><p>通过window对象提供的方法实现在指定时间后执行特定操作，也可以让程序代码每隔一段时间执行一次，实现间歇操作。</p><table><thead><tr><th align="center">方法</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">setTimeout()</td><td align="center">在指定的毫秒数后调用函数或执行一段代码</td></tr><tr><td align="center">setInterval()</td><td align="center">按照指定的周期(以毫秒计)来调用函数或执行一段代码</td></tr><tr><td align="center">clearTimeout()</td><td align="center">取消由setTimeout()方法设置的定时器</td></tr><tr><td align="center">clearInterval()</td><td align="center">取消由setInterval()方法设置的定时器</td></tr></tbody></table><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">//一次性定时器</span><br><span class="line">var timer = window.setTimeout(echoStr,3000); //echoStr定时调用的函数,3000为时间，单位毫秒</span><br><span class="line">  function echoStr()&#123;</span><br><span class="line">            console.log(&quot;Hello JS!&quot;);</span><br><span class="line">   &#125;</span><br><span class="line"> window.clearTimeout(timer);</span><br><span class="line"> //周期性定时器</span><br><span class="line"> var timer = window.setInterval(echoStr,3000);       </span><br><span class="line">  function echoStr()&#123;</span><br><span class="line">            console.log(&quot;Hello JS!&quot;);</span><br><span class="line">   &#125;</span><br><span class="line">window.clearInterval(timer);</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;</span> <span class="meta-string">&quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.w3.org/1999/xhtml&quot;</span> <span class="attr">xml:lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Type&quot;</span> <span class="attr">content</span>=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">div</span>&#123;<span class="attribute">width</span>:<span class="number">50px</span>;<span class="attribute">height</span>:<span class="number">50px</span>;<span class="attribute">border</span>:<span class="number">1px</span> solid <span class="number">#ccc</span>;<span class="attribute">margin-left</span>:<span class="number">5px</span>;<span class="attribute">line-height</span>:<span class="number">50px</span>;<span class="attribute">text-align</span>: center;<span class="attribute">color</span>:red;&#125;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;timeDiv&quot;</span>&gt;</span>0<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">     <span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span> = <span class="string">&quot;开始&quot;</span> <span class="attr">id</span>=<span class="string">&quot;start&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span> = <span class="string">&quot;暂停&quot;</span> <span class="attr">id</span>=<span class="string">&quot;pause&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> start = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;start&#x27;</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> pause = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;pause&#x27;</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> timeDiv = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;timeDiv&#x27;</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> time = <span class="number">0</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">        start.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            timer = <span class="built_in">window</span>.setInterval(startFun, <span class="number">1000</span>);</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="javascript">        pause.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">window</span>.clearInterval(timer);</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="javascript">        <span class="function"><span class="keyword">function</span> <span class="title">startFun</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line">            time++;</span><br><span class="line">            timeDiv.innerHTML = time;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/22/3c71904f4ddcba4c36d76dcec829915a.png"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>限时秒杀<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">      <span class="selector-class">.box</span>&#123;<span class="attribute">margin</span>:<span class="number">0</span> auto;<span class="attribute">position</span>:relative;<span class="attribute">background</span>:<span class="built_in">url</span>(images/flash_sale.png);<span class="attribute">width</span>:<span class="number">702px</span>;<span class="attribute">height</span>:<span class="number">378px</span>;&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-class">.box</span> <span class="selector-tag">div</span>&#123;<span class="attribute">float</span>:left;<span class="attribute">width</span>:<span class="number">50px</span>;<span class="attribute">height</span>:<span class="number">50px</span>;<span class="attribute">border</span>:<span class="number">1px</span> solid <span class="number">#ccc</span>;<span class="attribute">margin-left</span>:<span class="number">5px</span>;<span class="attribute">line-height</span>:<span class="number">50px</span>;<span class="attribute">text-align</span>: center;<span class="attribute">color</span>:red;<span class="attribute">position</span>:relative;<span class="attribute">top</span>:<span class="number">260px</span>;<span class="attribute">left</span>:<span class="number">305px</span>;&#125;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;s&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span>        <span class="comment">&lt;!-- 剩余的秒数 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> s = <span class="number">5</span>;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> timer = <span class="built_in">window</span>.setInterval(myFun,<span class="number">1000</span>);</span></span><br><span class="line"><span class="javascript">      <span class="function"><span class="keyword">function</span> <span class="title">myFun</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">           <span class="built_in">document</span>.getElementById(<span class="string">&#x27;s&#x27;</span>).innerHTML = s + <span class="string">&#x27;秒&#x27;</span>;</span></span><br><span class="line">           s--;</span><br><span class="line"><span class="javascript">           <span class="function"><span class="title">if</span>(<span class="params">s&lt;<span class="number">0</span></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">window</span>.clearInterval(timer);</span></span><br><span class="line">           &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/22/fc3bf46530e987d249f98c6db03ca728.png"></p><h1 id="location"><a href="#location" class="headerlink" title="location"></a>location</h1><ul><li><p>localtion对象可以更改当前用户中浏览器中访问的URL，实现新文档的载入、重载以及替换等功能。</p></li><li><p>每一个网页文件都有一个访问标记符，用于唯一标识它的访问位置，以便浏览器可以访问的，这个访问标记符称为URL(Uniform Resource Locator,统一资源定位符)。URL中包含了网络协议、服务器的主机名、端口号、资源名称字符串、参数以及锚点</p><pre><code>  http://www.example.com:80/web/index.html?a=3&amp;b=4#res</code></pre></li><li><p>更改URL</p><table><thead><tr><th align="center">location对象的方法</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">assign()</td><td align="center">载入一个新的文档</td></tr><tr><td align="center">reload()</td><td align="center">重新载入当前文档</td></tr><tr><td align="center">replace</td><td align="center">用新的文档替换当前文档</td></tr></tbody></table></li></ul><blockquote><p>reload() 参数为true时，它会绕过缓存，从服务器上重新下载该文档，类似于浏览器中的刷新页面按钮。</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;载入新页面&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;newPage()&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;刷新页面&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;freshPage()&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;替换页面&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;replacePage()&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;time&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="comment">//获取并显示当前页面载入的时间</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> ds=<span class="keyword">new</span> <span class="built_in">Date</span>();</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> d=ds.getDate();</span></span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.getElementById(<span class="string">&#x27;time&#x27;</span>).innerHTML=t;</span></span><br><span class="line"><span class="javascript"><span class="comment">//载入新的页面</span></span></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">newPage</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="built_in">window</span>.location.assign(<span class="string">&#x27;http://www.baidu.com&#x27;</span>);</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="javascript"> <span class="comment">//刷新页面        </span></span></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">freshPage</span>(<span class="params"></span>)</span>&#123;          </span></span><br><span class="line"><span class="javascript"><span class="built_in">window</span>.location.reload(<span class="literal">true</span>);</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="javascript"><span class="comment">//替换，不能后退</span></span></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">replace</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="built_in">window</span>.location.replace(‘http:<span class="comment">//www.baidu.com’);  </span></span></span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>获取URL参数</li></ul><table><thead><tr><th align="center">属性</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">search</td><td align="center">返回URL地址中的参数</td></tr><tr><td align="center">hash</td><td align="center">返回一个URL的锚部分</td></tr><tr><td align="center">host</td><td align="center">返回一个URL的主机名和端口</td></tr><tr><td align="center">hostname</td><td align="center">返回URL的主机名</td></tr><tr><td align="center">href</td><td align="center">返回完整的主机名</td></tr><tr><td align="center">pathname</td><td align="center">返回URL的路径名</td></tr><tr><td align="center">port</td><td align="center">返回一个URL服务器使用的端口号</td></tr><tr><td align="center">protocol</td><td align="center">返回一个URL协议</td></tr></tbody></table><ul><li>获取URL的指定部分：location.属性名。</li><li>设置URL的指定部分：location.属性名 = 值。</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//假设用户在地址栏中访问:http://localhost/search.html?goods=books&amp;price=40</span></span><br><span class="line">location.search;  <span class="comment">//获取:&quot;?goods=books&amp;price=40&quot;</span></span><br><span class="line"><span class="comment">//获取URL地址</span></span><br><span class="line">location.href;</span><br><span class="line"><span class="comment">//设置URL地址</span></span><br><span class="line">location.href=<span class="string">&quot;http://www.baidu.com&quot;</span>;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>定时跳转<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">body</span>&#123;<span class="attribute">background</span>:gray;&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">div</span>&#123;<span class="attribute">margin</span>:<span class="number">20px</span> auto;<span class="attribute">width</span>:<span class="number">350px</span>;<span class="attribute">height</span>:<span class="number">150px</span>;<span class="attribute">border</span>:<span class="number">1px</span> solid <span class="number">#000</span>;<span class="attribute">background</span>:white;<span class="attribute">padding</span>:<span class="number">10px</span>;&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">h2</span>&#123;<span class="attribute">text-align</span>:center;&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">span</span>&#123;<span class="attribute">font-size</span>:<span class="number">150%</span>;<span class="attribute">color</span>:red;<span class="attribute">margin</span>:<span class="number">0</span> <span class="number">10px</span>;&#125;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h2</span>&gt;</span>提交成功<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://www.baidu.com&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;seconds&quot;</span>&gt;</span>3<span class="tag">&lt;/<span class="name">span</span>&gt;</span>秒后系统会自动跳转，也可单击此链接跳转</span><br><span class="line">      <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">     <span class="function"><span class="keyword">function</span> <span class="title">timing</span>(<span class="params">secs,url</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> seconds=<span class="built_in">document</span>.getElementById(<span class="string">&#x27;seconds&#x27;</span>);</span></span><br><span class="line">seconds.innerHTML=--secs;</span><br><span class="line"><span class="javascript"><span class="function"><span class="title">if</span>(<span class="params">secs&gt;<span class="number">0</span></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">  <span class="built_in">setTimeout</span>(<span class="string">&#x27;timing(&#x27;</span>+secs+<span class="string">&#x27;,\&#x27;&#x27;</span>+url+<span class="string">&#x27;\&#x27;)&#x27;</span>,<span class="number">1000</span>); </span></span><br><span class="line"><span class="javascript">&#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"> location.href=url;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="javascript">timing(<span class="number">3</span>,<span class="string">&#x27;http://www.baidu.com&#x27;</span>);</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/22/6ce17e2ba00d43144f24cacf7fbb696a.png"></p><h1 id="history"><a href="#history" class="headerlink" title="history"></a>history</h1><p>history对象可以对用户在浏览器中访问过的URL历史记录进行操作。但history不能直接获取用户浏览过的URL。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/22/94c388f221c2b7c8d15a47bcd46fabd6.png"></p><ul><li>go()方法：当参数值是一个负整数时，表示“后退”指定的页数；当参数值是一个正整数时，表示“前进”指定的页数。</li><li>当go()方法的参数为1或-1时，与forward()和back()方法的作用相同。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/22/0563d51aaf7af1fa4858b0b3fef727fc.png"></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">//第一个页面</span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>定时跳转<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">h1</span>&gt;</span>这是第一个页面<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;前进&quot;</span> <span class="attr">id</span>=<span class="string">&quot;qianjin&quot;</span>/&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;打开新页面&quot;</span> <span class="attr">id</span>=<span class="string">&quot;dakai&quot;</span> /&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line">       <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">           <span class="keyword">var</span> qianjin = <span class="built_in">document</span>.getElementById(<span class="string">&quot;qianjin&quot;</span>);</span></span><br><span class="line"><span class="javascript">           qianjin.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">window</span>.history.forward();  <span class="comment">//window.history.go(1);</span></span></span><br><span class="line">           &#125;</span><br><span class="line"></span><br><span class="line"><span class="javascript">           <span class="keyword">var</span> dakai = <span class="built_in">document</span>.getElementById(<span class="string">&quot;dakai&quot;</span>);</span></span><br><span class="line"><span class="javascript">           dakai.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">window</span>.location.assign(<span class="string">&quot;u6 前进和后退2.html&quot;</span>);</span></span><br><span class="line">           &#125;</span><br><span class="line">       <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line">//第二个页面</span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>定时跳转<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">h2</span>&gt;</span>这是第二个页面<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">id</span>=<span class="string">&quot;houtui&quot;</span> <span class="attr">value</span>=<span class="string">&quot;后退&quot;</span>/&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line">       <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">           <span class="keyword">var</span> houtui = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;houtui&#x27;</span>);</span></span><br><span class="line"><span class="javascript">           houtui.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">window</span>.history.back();</span></span><br><span class="line">           &#125;</span><br><span class="line">       <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/22/cc6d3cf4bfe42d635f73f20bd8663e9f.png"></p><h1 id="navigator"><a href="#navigator" class="headerlink" title="navigator"></a>navigator</h1><p>navigator对象提供了有关浏览器的信息。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/22/02f974b05a95d0f7da7eb30125bacd35.png"></p><h1 id="screen"><a href="#screen" class="headerlink" title="screen"></a>screen</h1><p>返回当前渲染窗口中与屏幕相关的属性信息，如屏幕的宽度和高度等。</p><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/22/8aa35d76cbc9fc6e0eac08b9045ac9cd.png"></p><h1 id="红绿灯倒计时"><a href="#红绿灯倒计时" class="headerlink" title="红绿灯倒计时"></a>红绿灯倒计时</h1><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/22/b6f3e06ee4682dfae9a3b4f8a1d57724.png"><br>分析红绿灯：<br>① 横向三色交通信号灯的亮灯的顺序一般为“绿-&gt;黄-&gt;红-&gt;绿”依次循环。<br>② 亮灯时长需根据路口的实际情况等因素来考虑设置，如红灯亮设置为3秒，绿灯亮设置为5秒，黄灯亮设置为3秒。<br>核心功能：  改变背景颜色 + 倒计时</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>红绿灯倒计时<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">      <span class="selector-class">.box</span>&#123;<span class="attribute">width</span>:<span class="number">250px</span>;<span class="attribute">height</span>:<span class="number">52px</span>;<span class="attribute">padding</span>:<span class="number">15px</span> <span class="number">30px</span>;<span class="attribute">border</span>:<span class="number">2px</span> solid <span class="number">#ccc</span>;<span class="attribute">border-radius</span>:<span class="number">16px</span>;<span class="attribute">margin</span>:<span class="number">0</span> auto;&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-class">.box</span> <span class="selector-class">.count</span>&#123;<span class="attribute">width</span>:<span class="number">60px</span>;<span class="attribute">color</span>:<span class="number">#666</span>;<span class="attribute">font-size</span>:<span class="number">280%</span>;<span class="attribute">line-height</span>:<span class="number">50px</span>;<span class="attribute">padding-left</span>:<span class="number">6px</span>;<span class="attribute">margin-left</span>:<span class="number">5px</span>;<span class="attribute">border</span>:<span class="number">1px</span> solid <span class="number">#fff</span>&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-class">.box</span> <span class="selector-tag">div</span>&#123;<span class="attribute">margin-left</span>:<span class="number">5px</span>;<span class="attribute">float</span>:left;<span class="attribute">width</span>:<span class="number">50px</span>;<span class="attribute">height</span>:<span class="number">50px</span>;<span class="attribute">border-radius</span>:<span class="number">50px</span>;<span class="attribute">border</span>:<span class="number">1px</span> solid <span class="number">#666</span>;&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-class">.gray</span>&#123;<span class="attribute">background-color</span>:<span class="number">#eee</span>;&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-class">.red</span>&#123;<span class="attribute">background-color</span>:red;&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-class">.yellow</span>&#123;<span class="attribute">background-color</span>:yellow;&#125;</span></span><br><span class="line"><span class="css">      <span class="selector-class">.green</span>&#123;<span class="attribute">background-color</span>:<span class="number">#26ff00</span>;&#125;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  //编写HTML页面</span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;red&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;yellow&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;green&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;count&quot;</span> <span class="attr">id</span>=<span class="string">&quot;count&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">      <span class="comment">// 获取红、黄、绿灯以及倒计时的元素对象</span></span></span><br><span class="line"><span class="javascript">      <span class="comment">//lamp：整个红绿灯对象</span></span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> lamp = &#123;</span></span><br><span class="line"><span class="javascript">        red: &#123;  <span class="comment">//red:lamp的成员,红灯对象</span></span></span><br><span class="line"><span class="javascript">          obj: <span class="built_in">document</span>.getElementById(<span class="string">&#x27;red&#x27;</span>), <span class="comment">//obj:存储信号灯的元素对象</span></span></span><br><span class="line"><span class="javascript">          timeout: <span class="number">3</span>,    <span class="comment">//信号灯剩余亮灯时间</span></span></span><br><span class="line"><span class="javascript">          style: [<span class="string">&#x27;red&#x27;</span>, <span class="string">&#x27;gray&#x27;</span>, <span class="string">&#x27;gray&#x27;</span>],  <span class="comment">//当红灯亮起时，红、黄、绿信号灯的背景颜色</span></span></span><br><span class="line"><span class="javascript">          next: <span class="string">&#x27;green&#x27;</span> <span class="comment">//红灯之后亮起的信号灯</span></span></span><br><span class="line">        &#125;,</span><br><span class="line">        yellow: &#123;</span><br><span class="line"><span class="javascript">          obj: <span class="built_in">document</span>.getElementById(<span class="string">&#x27;yellow&#x27;</span>),</span></span><br><span class="line">          timeout: 3,</span><br><span class="line"><span class="javascript">          style: [<span class="string">&#x27;gray&#x27;</span>, <span class="string">&#x27;yellow&#x27;</span>, <span class="string">&#x27;gray&#x27;</span>],</span></span><br><span class="line"><span class="javascript">          next: <span class="string">&#x27;red&#x27;</span></span></span><br><span class="line">        &#125;,</span><br><span class="line">        green: &#123;</span><br><span class="line"><span class="javascript">          obj: <span class="built_in">document</span>.getElementById(<span class="string">&#x27;green&#x27;</span>),</span></span><br><span class="line">          timeout: 5,</span><br><span class="line"><span class="javascript">          style: [<span class="string">&#x27;gray&#x27;</span>, <span class="string">&#x27;gray&#x27;</span>, <span class="string">&#x27;green&#x27;</span>],</span></span><br><span class="line"><span class="javascript">          next: <span class="string">&#x27;yellow&#x27;</span></span></span><br><span class="line">        &#125;,</span><br><span class="line"><span class="javascript">        <span class="comment">//创建红绿灯对象（增加设置信号灯背景颜色的函数）</span></span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">changeStyle</span>(<span class="params">style</span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">          <span class="built_in">this</span>.red.obj.className = style[<span class="number">0</span>];  <span class="comment">//根据参数，更改obj的样式名称，实现更改背景颜色</span></span></span><br><span class="line"><span class="javascript">          <span class="built_in">this</span>.yellow.obj.className = style[<span class="number">1</span>];</span></span><br><span class="line"><span class="javascript">          <span class="built_in">this</span>.green.obj.className = style[<span class="number">2</span>];</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;;</span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> count = &#123;  <span class="comment">//根据参数，更改num的值，即更改倒计时时间</span></span></span><br><span class="line"><span class="javascript">        obj: <span class="built_in">document</span>.getElementById(<span class="string">&#x27;count&#x27;</span>),</span></span><br><span class="line"><span class="javascript">        change: <span class="function"><span class="keyword">function</span>(<span class="params">num</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">          <span class="built_in">this</span>.obj.innerHTML = (num &lt; <span class="number">10</span>) ? (<span class="string">&#x27;0&#x27;</span> + num) : num;</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;;</span><br><span class="line"><span class="javascript">      <span class="comment">//初始状态 -- 绿灯亮</span></span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> now = lamp.green;   <span class="comment">//用变量now记录当前状态</span></span></span><br><span class="line"><span class="javascript">      lamp.changeStyle(now.style);  <span class="comment">//设置信号灯的背景颜色</span></span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> timeout = now.timeout; <span class="comment">//记录信号灯亮起时的时间</span></span></span><br><span class="line"><span class="javascript">      count.change(timeout); <span class="comment">//设置倒计时时间</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">      <span class="comment">//改变时间 -- 定时器</span></span></span><br><span class="line"><span class="javascript">      <span class="built_in">window</span>.setInterval(myfun,<span class="number">1000</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">      <span class="function"><span class="keyword">function</span> <span class="title">myfun</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">           timeout--;  <span class="comment">//倒计时</span></span></span><br><span class="line"><span class="javascript">           <span class="function"><span class="title">if</span>(<span class="params">timeout&gt;<span class="number">0</span></span>)</span>&#123;  <span class="comment">//倒计时时间未结束</span></span></span><br><span class="line"><span class="javascript">                 count.change(timeout);   <span class="comment">//，刷新页面</span></span></span><br><span class="line"><span class="javascript">           &#125;<span class="keyword">else</span>&#123;  <span class="comment">//倒计时时间结束</span></span></span><br><span class="line"><span class="javascript">                now = lamp[now.next];   <span class="comment">//切换信号灯颜色  -- 注意：不能写为 now = now.next;  这样是将一个字符串如yellow赋值给now；</span></span></span><br><span class="line">                lamp.changeStyle(now.style);</span><br><span class="line">                timeout = now.timeout;</span><br><span class="line">                count.change(timeout);</span><br><span class="line">           &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/22/21f270060615dc63bbc199e10fe57fd1.png"></p>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript🌞对象</title>
      <link href="2021/01/15/%E5%89%8D%E7%AB%AF/JavaScript/JavaScript_%E5%AF%B9%E8%B1%A1/"/>
      <url>2021/01/15/%E5%89%8D%E7%AB%AF/JavaScript/JavaScript_%E5%AF%B9%E8%B1%A1/</url>
      
        <content type="html"><![CDATA[<h1 id="对象"><a href="#对象" class="headerlink" title="对象"></a>对象</h1><p>面向对象的特征主要可以概括为<strong>封装性、继承性、多态性</strong>。</p><h2 id="自定义对象"><a href="#自定义对象" class="headerlink" title="自定义对象"></a>自定义对象</h2><h3 id="字面量-创建对象"><a href="#字面量-创建对象" class="headerlink" title="字面量{}创建对象"></a>字面量{}创建对象</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">var</span> o1=&#123;&#125;;</span><br><span class="line"> <span class="keyword">var</span> o2=&#123;<span class="attr">name</span>:<span class="string">&#x27;Jim&#x27;</span>&#125;;</span><br><span class="line"> <span class="keyword">var</span> o3=&#123;<span class="attr">name</span>:<span class="string">&#x27;Jim&#x27;</span>,<span class="attr">age</span>:<span class="number">19</span>,<span class="attr">gender</span>:<span class="string">&#x27;男&#x27;</span>&#125;;</span><br><span class="line"> <span class="keyword">var</span> o4 = &#123;</span><br><span class="line">            name: <span class="string">&#x27;Jim&#x27;</span>,</span><br><span class="line">            age: <span class="number">19</span>,</span><br><span class="line">            gender: <span class="string">&#x27;男&#x27;</span>,</span><br><span class="line">            sayHello: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">&#x27;你好&#x27;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="访问对象成员"><a href="#访问对象成员" class="headerlink" title="访问对象成员"></a>访问对象成员</h3><pre><code>对象名.属性;对象名.方法名()</code></pre><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">o4.name;</span><br><span class="line">o4.sayHello();</span><br></pre></td></tr></table></figure><h3 id="增加对象成员"><a href="#增加对象成员" class="headerlink" title="增加对象成员"></a>增加对象成员</h3><pre><code>引用不存在的成员，即增加成员</code></pre><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">o4.tall=<span class="number">181</span>;</span><br><span class="line">o4.introduce=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(o4.name+o4.tall);</span><br><span class="line">&#125;</span><br><span class="line">o4.introduce();</span><br></pre></td></tr></table></figure><h3 id="可变成员名"><a href="#可变成员名" class="headerlink" title="可变成员名"></a>可变成员名</h3><pre><code>如果对象的成员名不确定时，还可通过一个变量保存成员的名称，使用[]语法来实现可变成员名。`成员名：是字符串`。</code></pre><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> key=<span class="string">&#x27;id&#x27;</span>;</span><br><span class="line">o4[key]=<span class="number">123</span>;</span><br></pre></td></tr></table></figure><h3 id="对象成员遍历"><a href="#对象成员遍历" class="headerlink" title="对象成员遍历"></a>对象成员遍历</h3><p>typeof：判断成员类型，function表示方法<br>访问方法：o4[i]()<br>访问属性：o4[i]</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">for</span>(<span class="params"><span class="keyword">var</span> i <span class="keyword">in</span> o4</span>)</span>&#123;</span><br><span class="line">   <span class="built_in">console</span>.log(<span class="keyword">typeof</span>(o4[i]));  </span><br><span class="line">   <span class="function"><span class="title">if</span>(<span class="params"><span class="keyword">typeof</span>(o4[i])==<span class="string">&quot;function&quot;</span></span>)</span>&#123;</span><br><span class="line">    o4[i]();  <span class="comment">//访问方法</span></span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">     <span class="built_in">console</span>.log(o4[i]);  <span class="comment">//访问属性</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>动态增加对象成员<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;key&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">value</span>=<span class="string">&quot;name&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;val&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Jack&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;btn&quot;</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;测试&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> k = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;key&#x27;</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> v = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;val&#x27;</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> btn = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;btn&#x27;</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> o = &#123;&#125;;  <span class="comment">//创建空对象</span></span></span><br><span class="line"><span class="javascript">        btn.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;  <span class="comment">//当点击btn时，调用匿名函数</span></span></span><br><span class="line"><span class="javascript">            o[k.value] = v.value;  <span class="comment">//增加属性，k的value为键、v的value为值</span></span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(o);  <span class="comment">//打印对象</span></span></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/21/6d0f7bf592c5985c9fce00bb75d2b2d7.png"></p><h2 id="深拷贝与浅拷贝"><a href="#深拷贝与浅拷贝" class="headerlink" title="深拷贝与浅拷贝"></a>深拷贝与浅拷贝</h2><ul><li>浅拷贝—复制快捷方式</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> o1 = &#123;<span class="attr">name</span>: <span class="string">&#x27;Jim&#x27;</span>, <span class="attr">age</span>: <span class="number">19</span>, <span class="attr">gender</span>: <span class="string">&#x27;男&#x27;</span>&#125;;</span><br><span class="line"><span class="keyword">var</span> o2=o1;</span><br></pre></td></tr></table></figure><ul><li>深拷贝—复制文件本身</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">deepCopy</span>(<span class="params">obj</span>)</span>&#123;</span><br><span class="line"><span class="keyword">var</span> o = &#123;&#125;;</span><br><span class="line">  <span class="function"><span class="title">for</span>(<span class="params"><span class="keyword">var</span> k <span class="keyword">in</span> obj</span>)</span>&#123;     <span class="comment">//假设k是简单的成员（不是对象）</span></span><br><span class="line">o[k] = obj[k];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="this指向"><a href="#this指向" class="headerlink" title="this指向"></a>this指向</h2><ul><li> 使用new调用构造函数时，this指向新创建的对象</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span>  <span class="title">Person</span>(<span class="params">name,age</span>)</span>&#123;</span><br><span class="line"><span class="built_in">this</span>.name = name;</span><br><span class="line"><span class="built_in">this</span>.age = age;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> o1 = <span class="keyword">new</span> Person(“Jack”,<span class="number">18</span>);</span><br><span class="line"><span class="keyword">var</span> o2 = <span class="keyword">new</span> Person(“Lily”,<span class="number">20</span>);</span><br></pre></td></tr></table></figure><ul><li>将函数作为对象的方法调用，this指向该对象</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">name:”Jack”,</span><br><span class="line">age:<span class="number">19</span>,</span><br><span class="line">sayHello:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log( <span class="built_in">this</span>.name + “,” + <span class="built_in">this</span>.age);</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line">obj.sayHello();</span><br></pre></td></tr></table></figure><ul><li> 直接通过函数名调用函数，this指向全局对象window</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(foo()===<span class="built_in">window</span>); <span class="comment">//true</span></span><br></pre></td></tr></table></figure><h1 id="内置对象"><a href="#内置对象" class="headerlink" title="内置对象"></a>内置对象</h1><h2 id="String对象"><a href="#String对象" class="headerlink" title="String对象"></a>String对象</h2><table><thead><tr><th align="center">成员</th><th align="center">作用</th></tr></thead><tbody><tr><td align="center">length</td><td align="center">获取字符串长度</td></tr><tr><td align="center">charAt(index)</td><td align="center">获取index位置的字符，位置从0开始</td></tr><tr><td align="center">indexOf(searchValue)</td><td align="center">获取seerchValue在字符串中首次出现的位置</td></tr><tr><td align="center">lastIndexOf(searchValue)</td><td align="center">获取seerchValue在字符串中最后出现的位置</td></tr><tr><td align="center">substring(start[,end])</td><td align="center">截取从start位置到end位置之间的一个子字符串</td></tr><tr><td align="center">substr(start[,length])</td><td align="center">截取从start位置开始到length长度的子字符串</td></tr><tr><td align="center">toLowerCase()</td><td align="center">获取字符串的小写形式</td></tr><tr><td align="center">toUpperCase()</td><td align="center">获取字符串的大写形式</td></tr><tr><td align="center">split([separator[,limit])</td><td align="center">使用separator分隔符将字符串分隔成数组，limit用于限制数量</td></tr><tr><td align="center">replace(str1,str2)</td><td align="center">使用str2替换字符串中的str1，返回替换结果</td></tr></tbody></table><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">var name=&#x27;Administrator&#x27;;</span><br><span class="line">if(name.length<span class="tag">&lt;<span class="name">3||name.length</span>&gt;</span>10)&#123;</span><br><span class="line">alert(&#x27;用户名必须在3~10之间&#x27;);</span><br><span class="line">&#125;</span><br><span class="line">if(name.toLowerCase().indexOf(&#x27;admini&#x27;)!== -1)&#123; //indexOf查找失败返回-1</span><br><span class="line">alert(&#x27;用户名中不能包含敏感词：admin&#x27;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Number对象"><a href="#Number对象" class="headerlink" title="Number对象"></a>Number对象</h2><p>Number对象用于处理整数、浮点数等数值，常用的属性和方法如下。</p><table><thead><tr><th align="center">成员</th><th align="center">作用</th></tr></thead><tbody><tr><td align="center">MAX_VALUE</td><td align="center">在JavaScript中所能表示的最大数值（静态成员）</td></tr><tr><td align="center">MIN_VALUE</td><td align="center">在JavaScript中所能表示的最小正值（静态成员）</td></tr><tr><td align="center">toFixed(digits)</td><td align="center">使用定点表示法来格式化一个数值</td></tr></tbody></table><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> num=<span class="number">12345.6789</span>;</span><br><span class="line">num.toFixed();  <span class="comment">//四舍五入，不包括小数部分，返回结果：12345</span></span><br><span class="line">num.toFixed(<span class="number">1</span>); <span class="comment">//四舍五入，保留1位小数，返回结果：12345.7</span></span><br><span class="line">num.toFixed(<span class="number">6</span>); <span class="comment">//用0填充不足的小数位，返回结果：12345.678900</span></span><br><span class="line">num.MAX_VALUE;</span><br><span class="line">num.MIN_VALUE;</span><br></pre></td></tr></table></figure><h2 id="Math对象"><a href="#Math对象" class="headerlink" title="Math对象"></a>Math对象</h2><p>Math对象用于对数值进行数学运算。</p><table><thead><tr><th align="center">成员</th><th align="center">作用</th></tr></thead><tbody><tr><td align="center">PI</td><td align="center">获取圆周率，结果为3.141592653589793</td></tr><tr><td align="center">abs(x)</td><td align="center">获取x的绝对值，可传入普通数值或是用字符串表示的数值</td></tr><tr><td align="center">pow(base,xponent)</td><td align="center">获取基数(base)的指数(exponent)次幂，即baseexponnet</td></tr><tr><td align="center">sqrt(x)</td><td align="center">获取x的平方根</td></tr><tr><td align="center">ceil(x)</td><td align="center">获取大于或等于x的最小整数，即向上取整</td></tr><tr><td align="center">floor(x)</td><td align="center">获取小于或等于x的最大整数，即向下取整</td></tr><tr><td align="center">round(x)</td><td align="center">获取x的四舍五入后的整数值</td></tr><tr><td align="center">random()</td><td align="center">获取大于或等于0.0且小于1.0的随机值</td></tr></tbody></table><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> num=<span class="number">10.88</span>;</span><br><span class="line"><span class="built_in">Math</span>.ceil(num);</span><br><span class="line"><span class="built_in">Math</span>.random();</span><br><span class="line"><span class="comment">//Math.floor( Math.random() * (max-min+1) + min)，生成[min,max]的随机整数。</span></span><br><span class="line"><span class="built_in">Math</span>.random()*(<span class="number">3</span>-<span class="number">1</span>+<span class="number">1</span>)+<span class="number">1</span>; <span class="comment">//[1,3]  //Math.random()*(Max-Min+1)+Min</span></span><br><span class="line"><span class="built_in">Math</span>.random()*(<span class="number">99</span>-<span class="number">88</span>)+<span class="number">88</span>; <span class="comment">//[88,99) //Math.random()*(Max-Min)+Min</span></span><br></pre></td></tr></table></figure><h2 id="Date对象"><a href="#Date对象" class="headerlink" title="Date对象"></a>Date对象</h2><p>Date对象用于处理日期和时间。</p><table><thead><tr><th align="center">成员</th><th align="center">作用</th></tr></thead><tbody><tr><td align="center">getFullYear()</td><td align="center">获取表示年份的4位数字，如2020</td></tr><tr><td align="center">setFullYear(value)</td><td align="center">设置年份</td></tr><tr><td align="center">getMonth()</td><td align="center"><strong>获取月份，范围0~11（0表示一月，1表示二月，依次类推）</strong></td></tr><tr><td align="center">setMonth(value)</td><td align="center">设置月份</td></tr><tr><td align="center">getDate()</td><td align="center"><strong>获取月份中的某一天，范围1~31</strong></td></tr><tr><td align="center">setDate(value)</td><td align="center">设置月份中的某一天</td></tr><tr><td align="center">getDay()</td><td align="center"><strong>获取星期，范围0~6（0表示星期日，1表示星期一，依次类推</strong>）</td></tr><tr><td align="center">getHours()</td><td align="center">获取小时数，返回0~23</td></tr><tr><td align="center">setHours(value)</td><td align="center">设置小时数</td></tr><tr><td align="center">getMinutes()</td><td align="center">获取分钟数，范围0~59</td></tr><tr><td align="center">setMinutes(value)</td><td align="center">设置分钟数</td></tr><tr><td align="center">getSeconds()</td><td align="center">获取秒数，范围0~59</td></tr><tr><td align="center">setSeconds(value)</td><td align="center">设置秒数</td></tr><tr><td align="center">getMilliseconds()</td><td align="center">获取毫秒数，范围0~999</td></tr><tr><td align="center">getMilliseconds(value)</td><td align="center">设置毫秒数</td></tr><tr><td align="center">getTime()</td><td align="center">获取从1970-01-01 00:00:00 距离Date对象所代表时间</td></tr></tbody></table><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> date=<span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line"><span class="built_in">document</span>.write(date+<span class="string">&quot;&lt;br&gt;&quot;</span>);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;年：&quot;</span>+date.getYear());  <span class="comment">//年：120</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;年：&quot;</span>+date.getFullYear());  <span class="comment">//年：2020</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;月：&quot;</span>+date.getMonth());  <span class="comment">//月：9</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;日：&quot;</span>+date.getDate());  <span class="comment">//日：15</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;时：&quot;</span>+date.getHours());  <span class="comment">//时：8</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;分：&quot;</span>+date.getMinutes());  <span class="comment">//分：52</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;秒：&quot;</span>+date.getSeconds());  <span class="comment">//秒：54</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;周几：&quot;</span>+date.getDay());  <span class="comment">//周几：4</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;</span> <span class="meta-string">&quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.w3.org/1999/xhtml&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Type&quot;</span> <span class="attr">content</span>=<span class="string">&quot;text/html; charset=utf-8&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>制作年历<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span></span><br><span class="line">body&#123;</span><br><span class="line"><span class="css"><span class="selector-tag">text-align</span><span class="selector-pseudo">:center</span>;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-class">.box</span>&#123;</span></span><br><span class="line"><span class="css"><span class="selector-tag">margin</span><span class="selector-pseudo">:0</span> <span class="selector-tag">auto</span>;</span></span><br><span class="line"><span class="css"><span class="selector-tag">width</span><span class="selector-pseudo">:880px</span>;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-class">.title</span>&#123;</span></span><br><span class="line"><span class="css"><span class="selector-tag">background</span>:<span class="selector-id">#ccc</span>;</span></span><br><span class="line">&#125;</span><br><span class="line">table&#123;</span><br><span class="line"><span class="css"><span class="selector-tag">height</span><span class="selector-pseudo">:200px</span>;</span></span><br><span class="line"><span class="css"><span class="selector-tag">width</span><span class="selector-pseudo">:200px</span>;</span></span><br><span class="line"><span class="css"><span class="selector-tag">font-size</span><span class="selector-pseudo">:12px</span>;</span></span><br><span class="line"><span class="css"><span class="selector-tag">text-align</span><span class="selector-pseudo">:center</span>;</span></span><br><span class="line"><span class="css"><span class="selector-tag">float</span><span class="selector-pseudo">:left</span>;   <span class="comment">/*浮动属性，脱离文档流，向左移动，直至遇到父元素或另一个浮动元素的边缘*/</span></span></span><br><span class="line"><span class="css"><span class="selector-tag">margin</span><span class="selector-pseudo">:10px</span>;</span></span><br><span class="line"><span class="css"><span class="selector-tag">font-family</span><span class="selector-pseudo">:Arial</span>;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="comment">/*定义年历生成函数*/</span></span></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">calendar</span>(<span class="params">y</span>)</span>&#123;  <span class="comment">//y：从网页获取到的年份</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//获取指定年份1月1日的星期数值</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> w = <span class="keyword">new</span> <span class="built_in">Date</span>(y,<span class="number">0</span>).getDay();  </span></span><br><span class="line"><span class="javascript"><span class="comment">//Date创建方式1： var date1 = new Date(2017,9,1,11,53,4);年月日时分秒，至少给出年和月；另外月的范围是0~11，即参数为0，实际月份为1月；</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//Date创建方式2： var date2 = new Date(&#x27;2017-10-01 11:53:04&#x27;);//getDay() 获取星期，范围0~6</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> html=<span class="string">&#x27;&lt;div class=&quot;box&quot;&gt;&#x27;</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="comment">//拼接每个月份的表格</span></span></span><br><span class="line"><span class="javascript"><span class="function"><span class="title">for</span>(<span class="params"><span class="keyword">var</span> m=<span class="number">1</span>;m&lt;=<span class="number">12</span>;m++</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">html += <span class="string">&#x27;&lt;table&gt;&#x27;</span>;</span></span><br><span class="line"><span class="handlebars"><span class="xml">                html += &#x27;<span class="tag">&lt;<span class="name">tr</span> <span class="attr">class</span>=<span class="string">&quot;title&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">th</span> <span class="attr">colspan</span>=<span class="string">&quot;7&quot;</span>&gt;</span>&#x27; + y + &#x27; 年 &#x27; + m + &#x27; 月<span class="tag">&lt;/<span class="name">th</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span>&#x27;;</span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                html += &#x27;<span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>日<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>一<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>二<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>三<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>四<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>五<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>六<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span>&#x27;;</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="comment">//获取月份m共有多少天？</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> max = (<span class="keyword">new</span> <span class="built_in">Date</span>(y,m,<span class="number">0</span>)).getDate();   <span class="comment">//getDate获取月份中的某一天，范围1~31；当日为0时，可获得该月的天数。</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//开始tr标签</span></span></span><br><span class="line"><span class="javascript">html = html+<span class="string">&#x27;&lt;tr&gt;&#x27;</span>;</span></span><br><span class="line"><span class="javascript"><span class="function"><span class="title">for</span>(<span class="params"><span class="keyword">var</span> d=<span class="number">1</span>;d&lt;=max;d++</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">if</span>((w!=<span class="number">0</span>) &amp;&amp; (d==<span class="number">1</span>))&#123;  <span class="comment">//如果该月的第一天不是星期日，则填充空白</span></span></span><br><span class="line"><span class="handlebars"><span class="xml">html = html+&#x27;<span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">&quot;&#x27; + w + &#x27;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span>&#x27;;  </span></span></span><br><span class="line">&#125;</span><br><span class="line"><span class="javascript">html = html + <span class="string">&#x27;&lt;td&gt;&#x27;</span> + d + <span class="string">&#x27;&lt;/td&gt;&#x27;</span>;</span></span><br><span class="line"><span class="javascript"><span class="function"><span class="title">if</span>(<span class="params">w==<span class="number">6</span> &amp;&amp; d!=max</span>)</span>&#123;  <span class="comment">//如果星期六不是该月的最后一天，则换行 </span></span></span><br><span class="line"><span class="handlebars"><span class="xml">html = html + &#x27;<span class="tag">&lt;/<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">tr</span>&gt;</span>&#x27;;</span></span></span><br><span class="line"><span class="javascript">&#125;<span class="keyword">else</span> <span class="function"><span class="title">if</span>(<span class="params">d==max</span>)</span>&#123;   <span class="comment">//该月的最后一天，闭合&lt;tr&gt;标签</span></span></span><br><span class="line"><span class="javascript">html = html + <span class="string">&#x27;&lt;/tr&gt;&#x27;</span>;</span></span><br><span class="line">&#125;</span><br><span class="line">w = (w+1&gt;6)?0:w+1;</span><br><span class="line">&#125;</span><br><span class="line"><span class="javascript">html = html + <span class="string">&#x27;&lt;/table&gt;&#x27;</span>;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="javascript">html = html + <span class="string">&#x27;&lt;/div&gt;&#x27;</span>;</span></span><br><span class="line"><span class="javascript"><span class="keyword">return</span> html;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> year = <span class="built_in">parseInt</span>(prompt(<span class="string">&#x27;输入年份:&#x27;</span>,<span class="string">&#x27;2019&#x27;</span>));</span></span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.write(calendar(year));</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/22/5a45bff2253fc06cc1a9d9c7ee84bfff.png"></p><h1 id="JSON"><a href="#JSON" class="headerlink" title="JSON"></a>JSON</h1><ul><li><p>JSON: <strong>JavaScript Object Notation</strong>(JavaScript 对象表示法)。</p></li><li><p>JSON 是<strong>轻量级的文本数据交换格式</strong>，类似 XML，但 比 XML 更小、更快，更易解析。</p></li><li><p>JSON 独立于语言和平台，目前非常多的动态（PHP，JSP，.NET）编程语言都支持JSON。</p></li></ul><h2 id="JSON对象"><a href="#JSON对象" class="headerlink" title="JSON对象"></a>JSON对象</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//JSON对象</span></span><br><span class="line"><span class="keyword">var</span> obj = &#123;“name”:“Jerry”，“age”:<span class="number">15</span>&#125; </span><br><span class="line"><span class="comment">//JS对象</span></span><br><span class="line"><span class="keyword">var</span> obj = &#123;<span class="attr">name</span>:“Jerry”，age:<span class="number">15</span>，    </span><br><span class="line">                sayHello:<span class="function"><span class="keyword">function</span></span>&#123;……&#125;</span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure><ul><li><p>JSON对象的属性名（key）必须被包含在双引号之中，而JavaScript对象除了有空格的属性名、中间有连字符-的属性名必须在双引号之中外，其它随意；</p></li><li><p>不能在JSON对象中定义方法，而在JavaScript对象中可以；</p></li><li><p>JSON对象可以被很多语言操作，而JavaScript对象只有JS自己可以识别。</p></li></ul><h2 id="JSON数组"><a href="#JSON数组" class="headerlink" title="JSON数组"></a>JSON数组</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> myJson =&#123;</span><br><span class="line">         <span class="string">&quot;country&quot;</span>:<span class="string">&quot;China&quot;</span>,</span><br><span class="line">    <span class="string">&quot;population&quot;</span>:<span class="string">&quot;1.3billion&quot;</span>,</span><br><span class="line">        <span class="string">&quot;bigCity&quot;</span>:[<span class="string">&quot;Peking&quot;</span>,<span class="string">&quot;Shanghai&quot;</span>,<span class="string">&quot;ShenZhen&quot;</span>,<span class="string">&quot;HongKong&quot;</span>]</span><br><span class="line">        &#125;</span><br><span class="line">       myJson .bigCity[<span class="number">0</span>] = <span class="string">&quot;GuangZhou&quot;</span>;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript🌞函数</title>
      <link href="2021/01/15/%E5%89%8D%E7%AB%AF/JavaScript/JavaScript_%E5%87%BD%E6%95%B0/"/>
      <url>2021/01/15/%E5%89%8D%E7%AB%AF/JavaScript/JavaScript_%E5%87%BD%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h1><p>函数封装一段完成特定功能的代码。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> 函数名(<span class="params">[参数<span class="number">1</span>, 参数<span class="number">2</span>, ……]</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    函数体……</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">maxNum</span>(<span class="params">a, b</span>) </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">      a =  <span class="built_in">parseInt</span>(a);</span><br><span class="line">      b =  <span class="built_in">parseInt</span>(b);</span><br><span class="line">      <span class="keyword">return</span> a &gt;= b ? a : b;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>大小写转换<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>大小写转换<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>原数据:<span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;old&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>操<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span>作<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;转大写&quot;</span> <span class="attr">onClick</span>=<span class="string">&quot;deal(&#x27;upper&#x27;)&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;转小写&quot;</span> <span class="attr">onClick</span>=<span class="string">&quot;deal(&#x27;lower&#x27;)&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>新数据:<span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;new&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">deal</span>(<span class="params">opt</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> str=<span class="built_in">document</span>.getElementById(<span class="string">&#x27;old&#x27;</span>).value; <span class="comment">//取元数据的值</span></span></span><br><span class="line"><span class="javascript"><span class="function"><span class="title">switch</span>(<span class="params">opt</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">case</span> <span class="string">&#x27;upper&#x27;</span>:</span></span><br><span class="line">str=str.toUpperCase();</span><br><span class="line"><span class="javascript"><span class="keyword">break</span>;</span></span><br><span class="line"><span class="javascript"><span class="keyword">case</span> <span class="string">&#x27;lower&#x27;</span>:</span></span><br><span class="line">str=str.toLowerCase();</span><br><span class="line"><span class="javascript"><span class="keyword">break</span>;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.getElementById(<span class="string">&#x27;new&#x27;</span>).value=str;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/21/966bae02db2b5af925719320b9082bfd.png"></p><h2 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h2><p>开发时若不能确定函数的形参个数，可以不设置形参；<br>之后通过arguments对象获取调用时传递的实参。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sum</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">arguments</span>);</span><br><span class="line"><span class="keyword">var</span> sum=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="title">for</span>(<span class="params"><span class="keyword">var</span> i <span class="keyword">in</span> <span class="built_in">arguments</span></span>)</span>&#123;</span><br><span class="line">sum+=<span class="built_in">arguments</span>[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">document</span>.write(sum(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>));</span><br></pre></td></tr></table></figure><h2 id="变量的作用域"><a href="#变量的作用域" class="headerlink" title="变量的作用域"></a>变量的作用域</h2><p>全局变量：函数外声明，或者函数内省略var声明；<br>局部变量：函数体内用var声明。<br>块级变量：ES6提供的let关键字声明，仅在”{}”内有效。</p><h1 id="匿名函数"><a href="#匿名函数" class="headerlink" title="匿名函数"></a>匿名函数</h1><p>匿名函数指没有函数名称的函数，可以避免全局变量的污染以及函数名的冲突问题。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//方式1：函数表达式中省略函数名</span></span><br><span class="line"><span class="keyword">var</span> fn=<span class="function"><span class="keyword">function</span>(<span class="params">num1,num2</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> num1+num2;</span><br><span class="line">&#125;;</span><br><span class="line">fn(<span class="number">1</span>,<span class="number">2</span>);</span><br><span class="line"><span class="comment">//方式2：自调用方式</span></span><br><span class="line">(<span class="function"><span class="keyword">function</span> (<span class="params">num1,num2</span>)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> num1+num2;</span><br><span class="line">&#125;)(<span class="number">2</span>,<span class="number">3</span>);</span><br><span class="line"><span class="comment">//方式3：处理事件</span></span><br><span class="line"><span class="built_in">document</span>.body.onclick=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">alert(<span class="string">&#x27;Hi&#x27;</span>);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h1 id="回调函数"><a href="#回调函数" class="headerlink" title="回调函数"></a>回调函数</h1><p>回调函数指一个函数A作为参数传递给一个函数B，然后在B的函数体内调用函数A，称A为回调函数。其中，匿名函数常作为函数的参数传递，实现回调函数。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">      <span class="function"><span class="keyword">function</span> <span class="title">cal</span>(<span class="params">num1,num2,fn</span>)</span>&#123;</span><br><span class="line">          <span class="keyword">return</span> fn(num1,num2);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="built_in">console</span>.log(cal(<span class="number">10</span>,<span class="number">20</span>,<span class="function"><span class="keyword">function</span>(<span class="params">a,b</span>)</span>&#123;</span><br><span class="line">                  <span class="keyword">return</span> a+b;</span><br><span class="line">              &#125;</span><br><span class="line">           )</span><br><span class="line">      );</span><br><span class="line"></span><br><span class="line">      <span class="built_in">console</span>.log(cal(<span class="number">10</span>,<span class="number">20</span>,<span class="function"><span class="keyword">function</span>(<span class="params">a,b</span>)</span>&#123;</span><br><span class="line">                  <span class="keyword">return</span> a*b;</span><br><span class="line">              &#125;</span><br><span class="line">           )</span><br><span class="line">      );</span><br><span class="line">  &lt;/script&gt;</span><br></pre></td></tr></table></figure><h1 id="闭包函数"><a href="#闭包函数" class="headerlink" title="闭包函数"></a>闭包函数</h1><p>JavaScript中内部函数可引用外部函数的变量，但是在函数外部则不能访问函数的内部变量和嵌套函数，此时就需要使用”闭包“。<br>”闭包“指有权访问另一函数作用域内变量(局部变量)的函数。它主要的用途是以下两点：</p><ol><li>可以在函数外部读取函数内部的变量</li><li>可以让变量的值始终保持在内存中</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">var</span> times=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">var</span> c=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> ++times;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">return</span> c;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> count=fn();  <span class="comment">//保存fn()返回的函数，此时count就是一个闭包</span></span><br><span class="line"><span class="built_in">console</span>.log(count());</span><br><span class="line"><span class="built_in">console</span>.log(count());</span><br><span class="line"><span class="built_in">console</span>.log(count());</span><br><span class="line"><span class="built_in">console</span>.log(count());</span><br><span class="line"><span class="built_in">console</span>.log(count());</span><br><span class="line"><span class="comment">//使用闭包函数实现了在全局作用域中访问局部变量times，并让其始终存储在内存中</span></span><br><span class="line"><span class="comment">//运行结果：1，2，3，4，5</span></span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript🌞数组</title>
      <link href="2021/01/15/%E5%89%8D%E7%AB%AF/JavaScript/JavaScript_%E6%95%B0%E7%BB%84/"/>
      <url>2021/01/15/%E5%89%8D%E7%AB%AF/JavaScript/JavaScript_%E6%95%B0%E7%BB%84/</url>
      
        <content type="html"><![CDATA[<h1 id="创建数组"><a href="#创建数组" class="headerlink" title="创建数组"></a>创建数组</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 元素值类型为字符串</span></span><br><span class="line"><span class="keyword">var</span> area = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="string">&#x27;Beijing&#x27;</span>, <span class="string">&#x27;Shanghai&#x27;</span>, <span class="string">&#x27;Shenzhen&#x27;</span>);</span><br><span class="line"><span class="comment">// 元素值类型为数值型</span></span><br><span class="line"><span class="keyword">var</span> score = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="number">56</span>, <span class="number">68</span>, <span class="number">98</span>, <span class="number">44</span>);</span><br><span class="line"><span class="comment">// 元素值类型为混合型</span></span><br><span class="line"><span class="keyword">var</span> mix = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="number">123</span>, <span class="string">&#x27;abc&#x27;</span>, <span class="literal">null</span>, <span class="literal">true</span>, <span class="literal">undefined</span>);</span><br><span class="line"><span class="comment">// 空数组</span></span><br><span class="line"><span class="keyword">var</span> arr1 = <span class="keyword">new</span> <span class="built_in">Array</span>();   或    <span class="keyword">var</span> arr2 = <span class="keyword">new</span> <span class="built_in">Array</span>;</span><br><span class="line"><span class="comment">//使用“[]”创建数组</span></span><br><span class="line"><span class="keyword">var</span> weather = [<span class="string">&#x27;wind&#x27;</span>, <span class="string">&#x27;fine&#x27;</span>]; </span><br><span class="line"><span class="keyword">var</span> empty = [];       </span><br></pre></td></tr></table></figure><h1 id="获取数组长度"><a href="#获取数组长度" class="headerlink" title="获取数组长度"></a>获取数组长度</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取数组长度</span></span><br><span class="line"><span class="keyword">var</span> area = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="string">&#x27;Beijing&#x27;</span>, <span class="string">&#x27;Shanghai&#x27;</span>, <span class="string">&#x27;Shenzhen&#x27;</span>);</span><br><span class="line"><span class="built_in">console</span>.log(area.length);</span><br><span class="line"><span class="comment">// 修改数组长度</span></span><br><span class="line"><span class="keyword">var</span> area = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="string">&#x27;Beijing&#x27;</span>, <span class="string">&#x27;Shanghai&#x27;</span>, <span class="string">&#x27;Shenzhen&#x27;</span>);</span><br><span class="line">area.length = <span class="number">5</span>;     <span class="built_in">console</span>.log(area);</span><br><span class="line">area.length = <span class="number">1</span>;      <span class="built_in">console</span>.log(area);</span><br></pre></td></tr></table></figure><h1 id="数组的遍历"><a href="#数组的遍历" class="headerlink" title="数组的遍历"></a>数组的遍历</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 元素值类型为字符串</span></span><br><span class="line"><span class="keyword">var</span> area = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="string">&#x27;Beijing&#x27;</span>, <span class="string">&#x27;Shanghai&#x27;</span>, <span class="string">&#x27;Shenzhen&#x27;</span>);</span><br><span class="line"><span class="comment">// 遍历</span></span><br><span class="line"><span class="function"><span class="title">for</span>(<span class="params"><span class="keyword">var</span> i=<span class="number">0</span>;i&lt;area.length;i++</span>)</span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(area[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">for</span>(<span class="params"><span class="keyword">var</span>  i  <span class="keyword">in</span> area</span>)</span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(area[i]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="数组元素的添加与删除"><a href="#数组元素的添加与删除" class="headerlink" title="数组元素的添加与删除"></a>数组元素的添加与删除</h1><ul><li><strong>添加数组元素</strong><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="string">&#x27;Asa&#x27;</span>,<span class="string">&#x27;Taylor&#x27;</span>];</span><br><span class="line">arr[<span class="number">2</span>] = <span class="string">&#x27;Tom&#x27;</span>;</span><br><span class="line">arr[<span class="number">3</span>] =  <span class="string">&#x27;Jack&#x27;</span>;</span><br><span class="line"><span class="built_in">console</span>.log(arr); </span><br></pre></td></tr></table></figure></li><li><strong>修改数组元素</strong><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;d&#x27;</span>];</span><br><span class="line">arr[<span class="number">2</span>] = <span class="number">123</span>;</span><br><span class="line">arr[<span class="number">3</span>] = <span class="number">456</span>;</span><br><span class="line"><span class="built_in">console</span>.log(arr);</span><br></pre></td></tr></table></figure></li><li><strong>元素的删除</strong><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> stu = [<span class="string">&#x27;Tom&#x27;</span>, <span class="string">&#x27;Jimmy&#x27;</span>, <span class="string">&#x27;Lucy&#x27;</span>];</span><br><span class="line"><span class="built_in">console</span>.log(stu);</span><br><span class="line"><span class="comment">// 输出结果：(3) [&quot;Tom&quot;, &quot;Jimmy&quot;, &quot;Lucy&quot;]</span></span><br><span class="line"><span class="keyword">delete</span> stu[<span class="number">1</span>];  <span class="comment">// 删除数组中第2个元素</span></span><br><span class="line"><span class="built_in">console</span>.log(stu);</span><br><span class="line"><span class="comment">// 输出结果：(3) [&quot;Tom&quot;, empty, &quot;Lucy&quot;]</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="二维数组"><a href="#二维数组" class="headerlink" title="二维数组"></a>二维数组</h1><ul><li><strong>创建二维数组</strong><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 使用Array对象创建数组</span></span><br><span class="line"><span class="keyword">var</span> info = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="keyword">new</span> <span class="built_in">Array</span>(<span class="string">&#x27;Tom&#x27;</span>, <span class="number">13</span>, <span class="number">155</span>),<span class="keyword">new</span> <span class="built_in">Array</span>(<span class="string">&#x27;Lucy&#x27;</span>, <span class="number">11</span>, <span class="number">152</span>)  );</span><br><span class="line"><span class="comment">// 使用“[]”创建数组</span></span><br><span class="line"><span class="keyword">var</span> num = [[<span class="number">1</span>, <span class="number">3</span>], [<span class="number">2</span>, <span class="number">4</span>]];</span><br></pre></td></tr></table></figure></li><li><strong>遍历二维数组</strong><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 使用“[]”创建数组</span></span><br><span class="line"><span class="keyword">var</span> num = [[<span class="number">1</span>, <span class="number">3</span>], [<span class="number">2</span>, <span class="number">4</span>]];</span><br><span class="line"><span class="comment">//遍历数组</span></span><br><span class="line"><span class="function"><span class="title">for</span>(<span class="params"><span class="keyword">var</span> i  <span class="keyword">in</span> num</span>)</span>&#123;</span><br><span class="line"> <span class="function"><span class="title">for</span>(<span class="params"><span class="keyword">var</span>  j  <span class="keyword">in</span>   num[i]</span>)</span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(num[i][j]));</span><br><span class="line">      &#125;&#125;</span><br></pre></td></tr></table></figure></li></ul><h1 id="常见数组方法"><a href="#常见数组方法" class="headerlink" title="常见数组方法"></a>常见数组方法</h1><ul><li> <strong>栈和队列方法</strong></li></ul><table><thead><tr><th>方法名称</th><th>功能描述</th></tr></thead><tbody><tr><td>push()</td><td>将一个或多个元素添加到数组的末尾，并返回数组的新长度。</td></tr><tr><td>unshift()</td><td>将一个或多个元素添加到数组的开头，并返回数组的新长度。</td></tr><tr><td>pop()</td><td>从数组的末尾移出并返回一个元素，若是空数组则返回undefined。</td></tr><tr><td>shift()</td><td>从数组的开头移出并返回一个元素，若是空数组则返回undefined。</td></tr></tbody></table><div class="note success flat"><p>push()和unshift()方法的返回值是新数组的长度。<br>pop()和shift()方法返回的是移出的数组元素。</p></div><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>];</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;原数组：&quot;</span> + arr);</span><br><span class="line"><span class="keyword">var</span> last = arr.pop();</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;末尾元素：&quot;</span> + last + <span class="string">&quot;,移除后数组：&quot;</span> + arr);</span><br><span class="line"><span class="keyword">var</span> first = arr.shift();</span><br><span class="line">arr.push(<span class="number">5</span>);</span><br><span class="line">arr.unshift(<span class="number">0</span>);</span><br></pre></td></tr></table></figure><ul><li><strong>检索方法</strong></li></ul><table><thead><tr><th>方法名称</th><th>功能描述</th></tr></thead><tbody><tr><td>includes()</td><td>用于确定数组中是否含有某个元素，含有返回true，否则返回false。</td></tr><tr><td>Array.isArray()</td><td>用于确定传递的值是否是一个 Array，是返回true，不是返回false。</td></tr><tr><td>indexOf()</td><td>返回在数组中可以找到给定值的第一个索引，如果不存在，则返回-1</td></tr><tr><td>lastIndexOf()</td><td>返回指定元素在数组中的最后一个的索引，如果不存在则返回 -1</td></tr></tbody></table><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;</span> <span class="meta-string">&quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.w3.org/1999/xhtml&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Type&quot;</span> <span class="attr">content</span>=<span class="string">&quot;text/html; charset=utf-8&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>无标题文档<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--首先：编写HTML页面，准备3个下拉菜单--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;sheng&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;-1&quot;</span>&gt;</span>请选择<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;shi&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;qu&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">select</span>&gt;</span>        </span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="comment">//省份数组</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> shengArr=[<span class="string">&#x27;上海&#x27;</span>, <span class="string">&#x27;江苏&#x27;</span>, <span class="string">&#x27;河北&#x27;</span>];</span></span><br><span class="line"><span class="javascript"><span class="comment">//市数组</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> shiArr = [</span></span><br><span class="line"><span class="javascript"> [<span class="string">&#x27;上海市&#x27;</span>],</span></span><br><span class="line"><span class="javascript"> [<span class="string">&#x27;苏州市&#x27;</span>, <span class="string">&#x27;南京市&#x27;</span>, <span class="string">&#x27;扬州市&#x27;</span>],</span></span><br><span class="line"><span class="javascript"> [<span class="string">&#x27;石家庄&#x27;</span>, <span class="string">&#x27;秦皇岛&#x27;</span>, <span class="string">&#x27;张家口&#x27;</span>]];</span></span><br><span class="line"><span class="javascript"> <span class="comment">//区数组 </span></span></span><br><span class="line"><span class="javascript"> <span class="keyword">var</span> quArr=[</span></span><br><span class="line">        [</span><br><span class="line"><span class="javascript">          [<span class="string">&#x27;黄浦区&#x27;</span>, <span class="string">&#x27;静安区&#x27;</span>, <span class="string">&#x27;长宁区&#x27;</span>, <span class="string">&#x27;浦东区&#x27;</span>]</span></span><br><span class="line">        ], [</span><br><span class="line"><span class="javascript">          [<span class="string">&#x27;虎丘区&#x27;</span>, <span class="string">&#x27;吴中区&#x27;</span>, <span class="string">&#x27;相城区&#x27;</span>, <span class="string">&#x27;姑苏区&#x27;</span>, <span class="string">&#x27;吴江区&#x27;</span>],</span></span><br><span class="line"><span class="javascript">          [<span class="string">&#x27;玄武区&#x27;</span>, <span class="string">&#x27;秦淮区&#x27;</span>, <span class="string">&#x27;建邺区&#x27;</span>, <span class="string">&#x27;鼓楼区&#x27;</span>, <span class="string">&#x27;浦口区&#x27;</span>],</span></span><br><span class="line"><span class="javascript">          [<span class="string">&#x27;邗江区&#x27;</span>, <span class="string">&#x27;广陵区&#x27;</span>, <span class="string">&#x27;江都区&#x27;</span>]</span></span><br><span class="line">        ], [</span><br><span class="line"><span class="javascript">          [<span class="string">&#x27;长安区&#x27;</span>, <span class="string">&#x27;桥西区&#x27;</span>, <span class="string">&#x27;新华区&#x27;</span>, <span class="string">&#x27;井陉矿区&#x27;</span>],</span></span><br><span class="line"><span class="javascript">          [<span class="string">&#x27;海港区&#x27;</span>, <span class="string">&#x27;山海关区&#x27;</span>, <span class="string">&#x27;北戴河区&#x27;</span>, <span class="string">&#x27;抚宁区&#x27;</span>],</span></span><br><span class="line"><span class="javascript">          [<span class="string">&#x27;桥东区&#x27;</span>, <span class="string">&#x27;桥西区&#x27;</span>, <span class="string">&#x27;宣化区&#x27;</span>, <span class="string">&#x27;下花园区&#x27;</span>]</span></span><br><span class="line">        ]</span><br><span class="line"> ];</span><br><span class="line"><span class="javascript"> <span class="comment">//1. 定义函数，将data数组中的值，添加到obj这个select中</span></span></span><br><span class="line"><span class="javascript"> <span class="function"><span class="keyword">function</span> <span class="title">createOption</span>(<span class="params">obj,data</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="function"><span class="title">for</span>(<span class="params"><span class="keyword">var</span> i <span class="keyword">in</span> data</span>)</span>&#123;  <span class="comment">//遍历数组</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> op = <span class="keyword">new</span> Option(data[i],i); <span class="comment">//创建Option，data[i]为显示的文本，i为value</span></span></span><br><span class="line"><span class="javascript">obj.options.add(op); <span class="comment">//将Option（op）添加到Select（obj）</span></span></span><br><span class="line">&#125; </span><br><span class="line"> &#125;</span><br><span class="line"><span class="javascript"> <span class="comment">//2.调用函数，设置省份下拉菜单的值</span></span></span><br><span class="line"><span class="javascript"> <span class="keyword">var</span> sheng = <span class="built_in">document</span>.getElementById(<span class="string">&quot;sheng&quot;</span>);</span></span><br><span class="line"> createOption(sheng,shengArr);</span><br><span class="line"><span class="javascript"> <span class="comment">//3.调用函数，设置市下拉菜单的值 -- 联动</span></span></span><br><span class="line"><span class="javascript"> <span class="keyword">var</span> shi = <span class="built_in">document</span>.getElementById(<span class="string">&quot;shi&quot;</span>);</span></span><br><span class="line"><span class="javascript"> sheng.onchange=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="comment">//清空市原有数据</span></span></span><br><span class="line">shi.options.length = 0;</span><br><span class="line"><span class="javascript"><span class="comment">//调用函数，设置市下拉菜单，注意下标为当前省的value</span></span></span><br><span class="line">createOption(shi,shiArr[sheng.value]); </span><br><span class="line"><span class="javascript"><span class="comment">//5.省修改时，市修改（代码如上），区也应该随着修改，即需要调用第四步的函数</span></span></span><br><span class="line"><span class="javascript"><span class="function"><span class="title">if</span>(<span class="params">sheng.value!=-<span class="number">1</span></span>)</span>&#123;  <span class="comment">//编码严谨，考虑省选择的“请选择”，此时：区清空</span></span></span><br><span class="line">shi.onchange();</span><br><span class="line"><span class="javascript">&#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line">qu.options.length=0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"> &#125;</span><br><span class="line"><span class="javascript"> <span class="comment">//4.调用函数，设置区下拉菜单的值 -- 联动</span></span></span><br><span class="line"><span class="javascript"> <span class="keyword">var</span> qu = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;qu&#x27;</span>);</span></span><br><span class="line"><span class="javascript"> shi.onchange=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="comment">//清空区原有数据</span></span></span><br><span class="line">qu.options.length = 0;</span><br><span class="line"><span class="javascript"><span class="comment">//调用函数，设置区下拉菜单，注意下标为：一维sheng.value，二维shi.value</span></span></span><br><span class="line">createOption(qu,quArr[sheng.value][shi.value]); </span><br><span class="line"> &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/21/f6cf616aa5f5f1adb55466e6efc8449c.png"></p>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript🌞语法基础</title>
      <link href="2021/01/15/%E5%89%8D%E7%AB%AF/JavaScript/JavaScript_%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/"/>
      <url>2021/01/15/%E5%89%8D%E7%AB%AF/JavaScript/JavaScript_%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h1 id="JavaScript快速入门"><a href="#JavaScript快速入门" class="headerlink" title="JavaScript快速入门"></a>JavaScript快速入门</h1><ul><li>网站推荐：<a href="https://www.liaoxuefeng.com/wiki/1022910821149312">JavaSript教程</a>  || <a href="https://www.w3school.com.cn/">W3school</a></li><li>JavaScript是一种运行在浏览器中的解释型的编程语言。</li><li>在Web世界里，只有JavaScript能跨平台、跨浏览器驱动网页，与用户交互.</li><li>JavaScript内嵌于HTML网页中,通过浏览器内置的JavaScript引擎直接编译，使静态转变成支持用户交互的页面程序。</li></ul><table><thead><tr><th align="center">语言</th><th align="center">作用</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">HTML</td><td align="center">结构</td><td align="center">从语义的角度，描述页面结构</td></tr><tr><td align="center">CSS</td><td align="center">样式</td><td align="center">从审美的角度，美化页面</td></tr><tr><td align="center">JavaScript</td><td align="center">行为</td><td align="center">从交互的角度，提升用户体验</td></tr></tbody></table><ul><li>JavaScript是脚本语言<br><strong>脚本(Script)就是一条条的文本命令，按照程序流程执行</strong>。常见脚本语言有     JavaScript,VBScript,Perl,PHP,Python等,而C,C++,Java,C#属于非脚本语言。<br>非脚本语言需要编译、链接，生成独立的可执行文件后才能运行。<br>脚本语言依赖于解释器，只在被调用时自动进行解释或调用。</li><li>JavaScript可以跨平台<br>JavaScript语言不依赖操作系统，只需要浏览器的支持。</li><li>JavaScript支持面向对象</li></ul><h1 id="开发工具"><a href="#开发工具" class="headerlink" title="开发工具"></a>开发工具</h1><ul><li>JavaScript开发工具主要包括浏览器和代码编译器两种软件。</li><li>浏览器用于执行、调试代码，代码编译器用于编写代码。</li><li>种类繁多的浏览器只需要了解其内核就能对其有一个清晰的归类。</li><li>浏览器内核分两部分：排版引擎和Javascript引擎。</li><li>sublime-text编译工具快捷键<ol><li>Ctrl + N，新建一个文档；</li><li>Ctrl + Shift + P，打开命令模式，再输入 sshtml 进行模糊匹配，将语法切换到html模式；</li><li>输入  !，再按下Tab键或者Ctrl + E ，就能快速打开HTML5的整体结构。</li></ol></li></ul><h1 id="引入方式"><a href="#引入方式" class="headerlink" title="引入方式"></a>引入方式</h1><ul><li><strong>嵌入式</strong><br>直接编写在HTML文件中</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span></span><br><span class="line">JavaScript语句</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li> <strong>外链式</strong><br>保存在一个单独的文件中，用“js”作为文件扩展名,最好放在body标签的底部，可以减少对整个页面的下载影响</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;js/test.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>行内式</strong><br>将Javascript代码作为HTML标签的属性值使用</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:alert(&#x27;Hello&#x27;);&quot;</span>&gt;</span>test<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>JavaScript异步加载<br>无论使用内嵌式还是外链式，页面的下载和渲染都会暂停，等待脚本执行完成后才会继续。为了降低阻塞问题对页面造成的影响，可以使用可选属性：async和defer,添加后，即使文件下载失败，也不会阻塞javascript代码的执行</p></blockquote><ul><li><strong>async</strong><br>async用于异步加载，即先下载文件，不阻塞其他代码执行，下载完成后再执行</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;http://js.test/file.js&quot;</span> <span class="attr">async</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>defer</strong><br>defer用于延后执行，即先下载文件，直到网页加载完成后再执行</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;http://js.test/file.js&quot;</span> <span class="attr">defer</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="输出语句"><a href="#输出语句" class="headerlink" title="输出语句"></a>输出语句</h1><ul><li><strong>alert()</strong><br>弹出一个警告框</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alert(<span class="string">&quot;提示信息&quot;</span>);</span><br></pre></td></tr></table></figure><ul><li> <strong>console.log()</strong><br>在浏览器的控制台中输出内容(按F12)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;你好！&#x27;</span>);</span><br></pre></td></tr></table></figure><ul><li> <strong>document.write()</strong><br>在HTML文档页面输出内容，也可以输出标签</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.write(<span class="string">&#x27;&lt;b&gt;加粗文本&lt;/b&gt;&#x27;</span>);</span><br></pre></td></tr></table></figure><ul><li><strong>prompt()</strong><br>弹出一个输入框</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> value=prompt(<span class="string">&quot;提示输入&quot;</span>,<span class="string">&quot;默认值&quot;</span>);</span><br></pre></td></tr></table></figure><h1 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h1><ul><li><strong>布尔型</strong></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> flag=<span class="literal">true</span>;</span><br></pre></td></tr></table></figure><ul><li><p><strong>数值型(Number)</strong><br>javaScript不区分整数和浮点数，统一用Number表示</p></li><li><p><strong>字符型(String)</strong><br>字符串是以单引号’或双引号”括起来的任意文本</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> color=<span class="string">&#x27;&quot;red&quot;blue&#x27;</span>;</span><br></pre></td></tr></table></figure></li><li><p><strong>空型(Null)</strong><br>空型只有一个特殊的null值，用于表示一个不存在的或无效的对象或地址。</p></li><li><p><strong>未定义型(Undefined)</strong><br>未定义型只有一个特殊的undefined值，用于声明的变量还未被初始化时，变量的默认值为undefined。</p></li></ul><blockquote><p>undefined表示没有为变量设置值，null表示变量（对象或地址）不存在或无效。</p></blockquote><ul><li><strong>转布尔型</strong><br>Boolean()函数将如何非空字符串和非零的数组转为true，将空字符串、0、NaN、undefined和null转换为false</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> con=prompt(); <span class="comment">//保存用户的输出内容</span></span><br><span class="line"><span class="function"><span class="title">if</span>(<span class="params"><span class="built_in">Boolean</span>(con)</span>)</span>&#123;</span><br><span class="line"><span class="built_in">document</span>.write(<span class="string">&#x27;已输入内容&#x27;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="built_in">document</span>.write(<span class="string">&#x27;未输入内容&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Boolean</span>(con));</span><br></pre></td></tr></table></figure><ul><li><strong>转数值型</strong><br>Number()、parseInt( )、parseFloat()，isNaN()表示不是一个数值</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取用户的输入，完成自动求和</span></span><br><span class="line"><span class="keyword">var</span> num1=prompt(<span class="string">&#x27;输入求和的第1个数：&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> num2=prompt(<span class="string">&#x27;输入求和的第1个数：&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">isNaN</span>(num1)||<span class="built_in">isNaN</span>(num2))&#123;  <span class="comment">//判断出不是数值型 返回ture</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;非法数字&#x27;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(num1+num2);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>转字符型</strong><br>String()、toString()</li></ul><h2 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h2><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/21/cca461f12daf99245406348455b0c6c3.png"></p><h1 id="流程控制"><a href="#流程控制" class="headerlink" title="流程控制"></a>流程控制</h1><h2 id="选择结构"><a href="#选择结构" class="headerlink" title="选择结构"></a>选择结构</h2><ul><li><p><strong>单分支结构</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//单分支</span></span><br><span class="line"><span class="function"><span class="title">if</span>(<span class="params">判断条件</span>)</span>&#123;</span><br><span class="line">代码段</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><strong>双分支结构</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//双分支</span></span><br><span class="line"><span class="function"><span class="title">if</span>(<span class="params">判断条件</span>)</span>&#123;</span><br><span class="line">代码段<span class="number">1</span></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">代码段<span class="number">2</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><strong>多分支结构</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//多分支</span></span><br><span class="line"><span class="function"><span class="title">if</span>(<span class="params">条件<span class="number">1</span></span>)</span>&#123;</span><br><span class="line">代码段<span class="number">1</span>;</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="function"><span class="title">if</span>(<span class="params">条件<span class="number">2</span></span>)</span>&#123;</span><br><span class="line">代码段<span class="number">2</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">switch</span>(<span class="params">表达式</span>)</span>&#123;</span><br><span class="line"><span class="keyword">case</span> 值<span class="number">1</span>:</span><br><span class="line">代码段<span class="number">1</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> 值<span class="number">1</span>:</span><br><span class="line">代码段<span class="number">1</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">...</span><br><span class="line"><span class="keyword">default</span>: </span><br><span class="line">代码段n;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="循环结构"><a href="#循环结构" class="headerlink" title="循环结构"></a>循环结构</h2><ul><li><p><strong>while循环</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">while</span>(<span class="params">循环条件</span>)</span>&#123;</span><br><span class="line">循环体</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><strong>do…while循环</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">do</span>&#123;</span><br><span class="line">循环体</span><br><span class="line">&#125;<span class="keyword">while</span>(循环条件);</span><br></pre></td></tr></table></figure></li><li><p><strong>for循环</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">for</span>(<span class="params">初始条件;循环条件;迭代条件</span>)</span>&#123;</span><br><span class="line">代码块</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><blockquote><p>在ES6中，不仅可以使用var定义变量，还可以使用let声明一个块级作用域(可以理解为{}之间的代码)的本地变量，let关键字在快级作用域内不能重复定义同名的变量，该变量仅在块级作用范围内有效。</p></blockquote><ul><li><strong>跳转语句</strong><br>  break语句和continue语句</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">//实现九九乘法表</span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.write(<span class="string">&quot;&lt;h1&gt;九九乘法表&lt;/h1&gt;&quot;</span>)</span></span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.write(<span class="string">&quot;&lt;table border=1px&gt;&quot;</span>)</span></span><br><span class="line"><span class="javascript"><span class="function"><span class="title">for</span>(<span class="params"><span class="keyword">var</span> i=<span class="number">1</span>;i&lt;<span class="number">10</span>;i++</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.write(<span class="string">&quot;&lt;tr&gt;&quot;</span>)</span></span><br><span class="line"><span class="javascript"><span class="function"><span class="title">for</span>(<span class="params"> <span class="keyword">var</span> j=<span class="number">1</span>;j&lt;i;j++</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.write(<span class="string">&quot;&lt;td&gt;&quot;</span>)</span></span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.write(j+<span class="string">&quot;*&quot;</span>+i+<span class="string">&quot;=&quot;</span>+i*j);</span></span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.write(<span class="string">&quot;&lt;/td&gt;&quot;</span>)</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.write(<span class="string">&quot;&lt;/tr&gt;&quot;</span>)</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaWeb🌍分页功能</title>
      <link href="2021/01/15/%E5%89%8D%E7%AB%AF/JavaWeb/JavaWeb_%E5%88%86%E9%A1%B5%E5%8A%9F%E8%83%BD/"/>
      <url>2021/01/15/%E5%89%8D%E7%AB%AF/JavaWeb/JavaWeb_%E5%88%86%E9%A1%B5%E5%8A%9F%E8%83%BD/</url>
      
        <content type="html"><![CDATA[<h1 id="分页功能"><a href="#分页功能" class="headerlink" title="分页功能"></a>分页功能</h1><p><a href="https://github.com/lzyblog/MyCode/tree/main/%E5%88%86%E9%A1%B5%E5%8A%9F%E8%83%BD/PageDemo">项目GitHub源码分享</a>，源码下载后，需要修改对应的数据库和表名！</p><ul><li>对于MySQL8.*以上可能无法运行，需要进行相关操作<ol><li>换成最近MySQL驱动包<ol start="2"><li>url地址增加 参数 serverTimezone=UTC</li></ol></li><li> url地址 ；不识别，需要改成 &amp;</li><li>mysql驱动包改com.mysql.cj.jdbc.Driver</li><li>设置MySQL时区： set global time_zone = ‘+8:00’;</li></ol></li></ul><p>项目总览<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/27/2cddea7f2b2e0019fc85569622f2c570.png"><br>数据库</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">database</span> student;</span><br><span class="line"><span class="keyword">use</span> student;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> <span class="keyword">user</span>(<span class="keyword">id</span> <span class="built_in">int</span> primary <span class="keyword">key</span> auto_increment,<span class="keyword">name</span> <span class="built_in">varchar</span>(<span class="number">255</span>),<span class="keyword">password</span> <span class="built_in">varchar</span>(<span class="number">255</span>));</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//封装了页面Page信息</span></span><br><span class="line"><span class="keyword">package</span> com.cheng.Bean;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Page</span> </span>&#123;</span><br><span class="line"><span class="comment">// 页码索引</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> pageIndex;</span><br><span class="line"><span class="comment">// 每页的容量</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> pageSize;</span><br><span class="line"><span class="comment">//  总页数</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> pageCount;</span><br><span class="line"><span class="comment">// 分页后的数据集合</span></span><br><span class="line"><span class="keyword">private</span> List&lt;?&gt; dataList;</span><br><span class="line"><span class="comment">// 数据总条数</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> total;</span><br><span class="line"><span class="comment">// 准备一个集合显示分页条数</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span>[] bar;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getPageIndex</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> pageIndex;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPageIndex</span><span class="params">(<span class="keyword">int</span> pageIndex)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.pageIndex = pageIndex;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getPageSize</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> pageSize;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPageSize</span><span class="params">(<span class="keyword">int</span> pageSize)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.pageSize = pageSize;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getPageCount</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> pageCount;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPageCount</span><span class="params">(<span class="keyword">int</span> pageCount)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.pageCount = pageCount;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> List&lt;?&gt; getDataList() &#123;</span><br><span class="line"><span class="keyword">return</span> dataList;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setDataList</span><span class="params">(List&lt;?&gt; dataList)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.dataList = dataList;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getTotal</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> total;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setTotal</span><span class="params">(<span class="keyword">int</span> total)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.total = total;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">int</span>[] getBar() &#123;</span><br><span class="line"><span class="keyword">return</span> bar;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setBar</span><span class="params">(<span class="keyword">int</span>[] bar)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.bar = bar;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//封装了用户User的信息</span></span><br><span class="line"><span class="keyword">package</span> com.cheng.Bean;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> id ;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> String name  ;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> String password  ;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> id;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.id = id;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.name = name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getPassword</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> password;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPassword</span><span class="params">(String password)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.password = password;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//PageDao页面DAO接口</span></span><br><span class="line"><span class="keyword">package</span> com.cheng.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cheng.Bean.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">PageDao</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getCount</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">selectUserByPage</span><span class="params">(<span class="keyword">int</span> begin, <span class="keyword">int</span> pageSize)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//UserDao用户DAO接口</span></span><br><span class="line"><span class="keyword">package</span> com.cheng.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cheng.Bean.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserDao</span> </span>&#123;</span><br><span class="line"><span class="comment">////檢查用戶名和密碼是否匹配</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">selectPasswordByName</span><span class="params">(User user)</span> </span>;</span><br><span class="line"><span class="comment">//插入数据</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Boolean <span class="title">insert</span><span class="params">(User user)</span> <span class="keyword">throws</span> SQLException </span>;</span><br><span class="line"><span class="comment">// 根据用户名称返回对象</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> User <span class="title">selectUserByName</span><span class="params">(String name)</span> <span class="keyword">throws</span> SQLException </span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//PageDaoImpl 页面DAO实现类</span></span><br><span class="line"><span class="keyword">package</span> com.cheng.daoImpl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.dbutils.QueryRunner;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.dbutils.handlers.BeanListHandler;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.dbutils.handlers.ScalarHandler;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cheng.Bean.User;</span><br><span class="line"><span class="keyword">import</span> com.cheng.dao.PageDao;</span><br><span class="line"><span class="keyword">import</span> com.cheng.utils.C3p0Utils;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.bcel.internal.generic.NEW;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PageDaoImpl</span> <span class="keyword">implements</span> <span class="title">PageDao</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getCount</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> pageCount = <span class="number">0</span>;</span><br><span class="line"><span class="comment">// // 创建QueryRunner对象</span></span><br><span class="line">QueryRunner runner = <span class="keyword">new</span> QueryRunner(C3p0Utils.getDataSource());</span><br><span class="line"><span class="comment">// 写SQL语句</span></span><br><span class="line">String sql = <span class="string">&quot;select * from user&quot;</span>;</span><br><span class="line"><span class="comment">// 调用方法</span></span><br><span class="line">List&lt;User&gt; list = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">list = (List&lt;User&gt;) runner.query(sql,</span><br><span class="line">        <span class="keyword">new</span> BeanListHandler&lt;User&gt;(User.class));</span><br><span class="line">pageCount = list.size() ;</span><br><span class="line">&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> pageCount;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">selectUserByPage</span><span class="params">(<span class="keyword">int</span> begin, <span class="keyword">int</span> pageSize)</span> </span>&#123;</span><br><span class="line"><span class="comment">// 创建QueryRunner对象</span></span><br><span class="line">QueryRunner runner = <span class="keyword">new</span> QueryRunner(C3p0Utils.getDataSource());</span><br><span class="line"><span class="comment">// 写SQL语句</span></span><br><span class="line">String sql = <span class="string">&quot;select * from user limit ?, ?&quot;</span>;</span><br><span class="line"><span class="comment">// 调用方法</span></span><br><span class="line">List&lt;User&gt; list = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">list = (List&lt;User&gt;) runner.query(sql,</span><br><span class="line">        <span class="keyword">new</span> BeanListHandler&lt;User&gt;(User.class),<span class="keyword">new</span> Object[]&#123;begin, pageSize&#125;);</span><br><span class="line">&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> list;</span><br><span class="line">&#125;&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//UserDaoImpl 用户DAO接口实现类</span></span><br><span class="line"><span class="keyword">package</span> com.cheng.daoImpl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.commons.dbutils.QueryRunner;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.dbutils.handlers.BeanHandler;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cheng.Bean.User;</span><br><span class="line"><span class="keyword">import</span> com.cheng.dao.UserDao;</span><br><span class="line"><span class="keyword">import</span> com.cheng.utils.C3p0Utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserDaoImpl</span> <span class="keyword">implements</span> <span class="title">UserDao</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> User <span class="title">selectUserByName</span><span class="params">(String name)</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line"><span class="comment">// 创建QueryRunner对象</span></span><br><span class="line">QueryRunner runner = <span class="keyword">new</span> QueryRunner(C3p0Utils.getDataSource());</span><br><span class="line"><span class="comment">// 写SQL语句</span></span><br><span class="line">String sql = <span class="string">&quot;select * from user where name=?&quot;</span>;</span><br><span class="line"><span class="comment">// 调用方法</span></span><br><span class="line">User user = (User) runner.query(sql, <span class="keyword">new</span> BeanHandler(User.class), <span class="keyword">new</span> Object[] &#123; name &#125;);</span><br><span class="line"><span class="keyword">return</span> user;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Boolean <span class="title">insert</span><span class="params">(User user)</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line"><span class="comment">// 创建QueryRunner对象</span></span><br><span class="line">QueryRunner runner = <span class="keyword">new</span> QueryRunner(C3p0Utils.getDataSource());</span><br><span class="line"><span class="comment">// 写SQL语句</span></span><br><span class="line">String sql = <span class="string">&quot;insert into user (name,password) values (?,?)&quot;</span>;</span><br><span class="line"><span class="comment">// 调用方法</span></span><br><span class="line"><span class="keyword">int</span> num = runner.update(sql, <span class="keyword">new</span> Object[] &#123; user.getName(), user.getPassword() &#125;);</span><br><span class="line"><span class="keyword">if</span> (num &gt; <span class="number">0</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">selectPasswordByName</span><span class="params">(User user)</span> </span>&#123;</span><br><span class="line"><span class="comment">// 创建QueryRunner对象</span></span><br><span class="line">QueryRunner runner = <span class="keyword">new</span> QueryRunner(C3p0Utils.getDataSource());</span><br><span class="line"><span class="comment">// 写SQL语句</span></span><br><span class="line">String sql = <span class="string">&quot;select * from user where name=? and password=?&quot;</span>;</span><br><span class="line"><span class="comment">// 调用方法</span></span><br><span class="line">User user_ = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">user_ = (User) runner.query(sql, <span class="keyword">new</span> BeanHandler(User.class),user.getName(),user.getPassword());</span><br><span class="line">&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(user_!=<span class="keyword">null</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//PageService 页面业务接口</span></span><br><span class="line"><span class="keyword">package</span> com.cheng.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cheng.Bean.Page;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">PageService</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> Page <span class="title">findUserByPage</span><span class="params">(<span class="keyword">int</span> pageIndex)</span> </span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//UserService 用户业务接口</span></span><br><span class="line"><span class="keyword">package</span> com.cheng.service;</span><br><span class="line"><span class="keyword">import</span> com.cheng.Bean.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">registerUser</span><span class="params">(User st)</span> </span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> User <span class="title">findUserByName</span><span class="params">(String name)</span> </span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">login</span><span class="params">(User user)</span> </span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//PageServiceImpl 页面业务接口实现类</span></span><br><span class="line"><span class="keyword">package</span> com.cheng.serviceImpl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cheng.Bean.Page;</span><br><span class="line"><span class="keyword">import</span> com.cheng.Bean.User;</span><br><span class="line"><span class="keyword">import</span> com.cheng.dao.PageDao;</span><br><span class="line"><span class="keyword">import</span> com.cheng.daoImpl.PageDaoImpl;</span><br><span class="line"><span class="keyword">import</span> com.cheng.service.PageService;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PageServiceImpl</span> <span class="keyword">implements</span> <span class="title">PageService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Page <span class="title">findUserByPage</span><span class="params">(<span class="keyword">int</span> pageIndex)</span> </span>&#123;</span><br><span class="line">PageDao pageDao = <span class="keyword">new</span> PageDaoImpl() ;</span><br><span class="line"><span class="comment">// 1、total总记录数</span></span><br><span class="line"><span class="keyword">int</span> total = <span class="number">0</span>;</span><br><span class="line">List&lt;User&gt; dataList = <span class="keyword">null</span>;</span><br><span class="line">total = pageDao.getCount();</span><br><span class="line"><span class="comment">// 2、一页显示多少个数据</span></span><br><span class="line"><span class="keyword">int</span> pageSize = <span class="number">3</span>;</span><br><span class="line"><span class="comment">// 3、计算总页数</span></span><br><span class="line"><span class="keyword">int</span> pageCount = total % pageSize == <span class="number">0</span> ? (total / pageSize) : (total / pageSize) + <span class="number">1</span>;</span><br><span class="line">System.out.println(<span class="string">&quot;pageCount=&quot;</span>+pageCount);</span><br><span class="line"><span class="comment">// 当前页的开始检索的数据索引（start）为 （当前页码-1）*每页数据容量</span></span><br><span class="line">dataList = pageDao.selectUserByPage((pageIndex - <span class="number">1</span>) * pageSize, pageSize);</span><br><span class="line"><span class="comment">// 封装数据</span></span><br><span class="line">Page page = <span class="keyword">new</span> Page();</span><br><span class="line">page.setTotal(total);</span><br><span class="line">page.setPageCount(pageCount);</span><br><span class="line">page.setPageIndex(pageIndex);</span><br><span class="line">page.setDataList(dataList);</span><br><span class="line">page.setPageSize(pageSize);</span><br><span class="line"> </span><br><span class="line"><span class="keyword">return</span> page;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//UserService 用户业务接口实现类</span></span><br><span class="line"><span class="keyword">package</span> com.cheng.serviceImpl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cheng.Bean.User;</span><br><span class="line"><span class="keyword">import</span> com.cheng.dao.UserDao;</span><br><span class="line"><span class="keyword">import</span> com.cheng.daoImpl.UserDaoImpl;</span><br><span class="line"><span class="keyword">import</span> com.cheng.service.UserService;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">registerUser</span><span class="params">(User user)</span> </span>&#123;</span><br><span class="line"><span class="keyword">boolean</span> flag = <span class="keyword">false</span> ;</span><br><span class="line">UserDao stDao = <span class="keyword">new</span> UserDaoImpl() ;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">flag = stDao.insert(user) ;</span><br><span class="line">&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> flag;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> User <span class="title">findUserByName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">UserDao userDao = <span class="keyword">new</span> UserDaoImpl() ;</span><br><span class="line">User user = <span class="keyword">new</span> User() ;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">user = userDao.selectUserByName(name) ;</span><br><span class="line">&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> user;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">login</span><span class="params">(User user)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">UserDao userDao = <span class="keyword">new</span> UserDaoImpl() ;</span><br><span class="line">Boolean flag = userDao.selectPasswordByName(user);</span><br><span class="line"><span class="keyword">return</span> flag;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//loginServlet 登录请求信息页面</span></span><br><span class="line"><span class="keyword">package</span> com.cheng.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpSession;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cheng.Bean.User;</span><br><span class="line"><span class="keyword">import</span> com.cheng.service.UserService;</span><br><span class="line"><span class="keyword">import</span> com.cheng.serviceImpl.UserServiceImpl;</span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet(&quot;/loginServlet&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">loginServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">loginServlet</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">super</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">super</span>.destroy(); <span class="comment">// Just puts &quot;destroy&quot; string in log</span></span><br><span class="line"><span class="comment">// Put your code here</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.doPost(request, response);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">request.setCharacterEncoding(<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">User st = <span class="keyword">new</span> User();</span><br><span class="line">HttpSession session = request.getSession();</span><br><span class="line">UserService ss = <span class="keyword">new</span> UserServiceImpl();</span><br><span class="line">st.setName(request.getParameter(<span class="string">&quot;name&quot;</span>));</span><br><span class="line">st.setPassword(request.getParameter(<span class="string">&quot;password&quot;</span>));</span><br><span class="line"><span class="keyword">boolean</span> flag = ss.login(st);</span><br><span class="line"><span class="keyword">if</span>(!flag) &#123;</span><br><span class="line">session.setAttribute(<span class="string">&quot;msg&quot;</span>, <span class="string">&quot;Ture&quot;</span>);</span><br><span class="line">request.getRequestDispatcher(<span class="string">&quot;/msg.jsp&quot;</span>).forward(request, response);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">session.setAttribute(<span class="string">&quot;msg&quot;</span>, <span class="string">&quot;false&quot;</span>);</span><br><span class="line">request.getRequestDispatcher(<span class="string">&quot;/msg.jsp&quot;</span>).forward(request, response);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line"><span class="comment">// Put your code here</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//LogoutServlet 注销处理</span></span><br><span class="line"><span class="keyword">package</span> com.cheng.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpSession;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LogoutServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line">       </span><br><span class="line">   </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">LogoutServlet</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>();</span><br><span class="line">        <span class="comment">// TODO Auto-generated constructor stub</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">HttpSession session = request.getSession() ;</span><br><span class="line">session.removeAttribute(<span class="string">&quot;st&quot;</span>);</span><br><span class="line">response.sendRedirect(<span class="string">&quot;success.jsp&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">doGet(request, response);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//PageServlet 页面处理</span></span><br><span class="line"><span class="keyword">package</span> com.cheng.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cheng.Bean.Page;</span><br><span class="line"><span class="keyword">import</span> com.cheng.service.PageService;</span><br><span class="line"><span class="keyword">import</span> com.cheng.serviceImpl.PageServiceImpl;</span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet(&quot;/pageServlet&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PageServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line">       </span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"><span class="comment">// 接收页码</span></span><br><span class="line"><span class="keyword">int</span> pageIndex = Integer.parseInt(request.getParameter(<span class="string">&quot;pageIndex&quot;</span>));</span><br><span class="line">PageService productService = <span class="keyword">new</span> PageServiceImpl();</span><br><span class="line">Page page = productService.findUserByPage(pageIndex);</span><br><span class="line">request.setAttribute(<span class="string">&quot;page&quot;</span>, page);</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">request.getRequestDispatcher(<span class="string">&quot;/list.jsp&quot;</span>).forward(request, response);</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">doGet(request, response);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//registerServlet 注册处理</span></span><br><span class="line"><span class="keyword">package</span> com.cheng.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpSession;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cheng.Bean.User;</span><br><span class="line"><span class="keyword">import</span> com.cheng.service.UserService;</span><br><span class="line"><span class="keyword">import</span> com.cheng.serviceImpl.UserServiceImpl;</span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet(&quot;/registerServlet&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">registerServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">registerServlet</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">super</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">super</span>.destroy(); <span class="comment">// Just puts &quot;destroy&quot; string in log</span></span><br><span class="line"><span class="comment">// Put your code here</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.doPost(request, response);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">request.setCharacterEncoding(<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">User st = <span class="keyword">new</span> User();</span><br><span class="line">HttpSession session = request.getSession();</span><br><span class="line">UserService ss = <span class="keyword">new</span> UserServiceImpl();</span><br><span class="line">st.setName(request.getParameter(<span class="string">&quot;name&quot;</span>));</span><br><span class="line">st.setPassword(request.getParameter(<span class="string">&quot;password&quot;</span>));</span><br><span class="line">ss.registerUser(st);</span><br><span class="line">session.setAttribute(<span class="string">&quot;st&quot;</span>, st);</span><br><span class="line">request.getRequestDispatcher(<span class="string">&quot;/success.jsp&quot;</span>).forward(request, response);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line"><span class="comment">// Put your code here</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//validateServlet 验证处理</span></span><br><span class="line"><span class="keyword">package</span> com.cheng.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cheng.Bean.User;</span><br><span class="line"><span class="keyword">import</span> com.cheng.service.UserService;</span><br><span class="line"><span class="keyword">import</span> com.cheng.serviceImpl.UserServiceImpl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">validateServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">response.setCharacterEncoding(<span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">String name = request.getParameter(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">UserService us = <span class="keyword">new</span> UserServiceImpl();</span><br><span class="line">User user = us.findUserByName(name);</span><br><span class="line"><span class="keyword">if</span> (user != <span class="keyword">null</span>) &#123;</span><br><span class="line"><span class="comment">// 表示已经存在这个用户</span></span><br><span class="line">response.getWriter().print(<span class="string">&quot;&lt;font color=&#x27;red&#x27;&gt;用户名已经存在&lt;/font&gt; &quot;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">// 表示该用户不存在，可以注册</span></span><br><span class="line">response.getWriter().println(<span class="string">&quot;&lt;font color=&#x27;green&#x27;&gt;用户名可以使用&lt;/font&gt; &quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.doGet(request, response);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//创建C3p0类</span></span><br><span class="line"><span class="keyword">package</span> com.cheng.utils;</span><br><span class="line"><span class="keyword">import</span> javax.sql.DataSource;</span><br><span class="line"><span class="keyword">import</span> com.mchange.v2.c3p0.ComboPooledDataSource;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">C3p0Utils</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> DataSource ds;</span><br><span class="line"><span class="keyword">static</span> &#123;</span><br><span class="line">ds = <span class="keyword">new</span> ComboPooledDataSource();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> DataSource <span class="title">getDataSource</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> ds;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--c3p0-config.xml--&gt;</span></span><br><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">c3p0-config</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">default-config</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driverClass&quot;</span>&gt;</span>com.mysql.jdbc.Driver<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;jdbcUrl&quot;</span>&gt;</span></span><br><span class="line">     jdbc:mysql://localhost:3306/student?characterEncoding=utf8</span><br><span class="line">     <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;user&quot;</span>&gt;</span>root<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span>&gt;</span>root<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;checkoutTimeout&quot;</span>&gt;</span>30000<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;initialPoolSize&quot;</span>&gt;</span>10<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;maxIdleTime&quot;</span>&gt;</span>30<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;maxPoolSize&quot;</span>&gt;</span>100<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;minPoolSize&quot;</span>&gt;</span>10<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;maxStatements&quot;</span>&gt;</span>200<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">default-config</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">named-config</span> <span class="attr">name</span>=<span class="string">&quot;itcast&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driverClass&quot;</span>&gt;</span>com.mysql.jdbc.Driver<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;jdbcUrl&quot;</span>&gt;</span></span><br><span class="line">           jdbc:mysql://localhost:3306/student?characterEncoding=utf8</span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;user&quot;</span>&gt;</span>root<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span>&gt;</span>root<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;initialPoolSize&quot;</span>&gt;</span>5<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;maxPoolSize&quot;</span>&gt;</span>15<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">named-config</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">c3p0-config</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--list交互页面--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">language</span>=<span class="string">&quot;java&quot;</span> <span class="attr">contentType</span>=<span class="string">&quot;text/html; charset=UTF-8&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">pageEncoding</span>=<span class="string">&quot;UTF-8&quot;</span>%&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">taglib</span> <span class="attr">uri</span>=<span class="string">&quot;http://java.sun.com/jsp/jstl/core&quot;</span> <span class="attr">prefix</span>=<span class="string">&quot;c&quot;</span>%&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>用户列表<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span></span><br><span class="line"><span class="javascript">onload=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="comment">// 如果当前页码为空，则首先查询一次</span></span></span><br><span class="line"><span class="javascript"><span class="function"><span class="title">if</span>(<span class="params"><span class="string">&quot;$&#123;page.pageIndex&#125;&quot;</span> == <span class="string">&quot;&quot;</span> || <span class="string">&quot;$&#123;page.pageIndex&#125;&quot;</span> == <span class="literal">null</span></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="built_in">window</span>.location.href=<span class="string">&quot;$&#123;pageContext.servletContext.contextPath&#125;/pageServlet?pageIndex=1&quot;</span>;</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 遍历显示用户信息 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;1&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">c:forEach</span> <span class="attr">var</span>=<span class="string">&quot;user&quot;</span> <span class="attr">items</span>=<span class="string">&quot;$&#123;page.dataList&#125;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">用户名：$&#123;user.name&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">c:forEach</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">&lt;!-- 上一页 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 判断是否是第一页 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">c:if</span> <span class="attr">test</span>=<span class="string">&quot;$&#123;page.pageIndex == 1&#125;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:void(0)&quot;</span> <span class="attr">aria-label</span>=<span class="string">&quot;Previous&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">aria-hidden</span>=<span class="string">&quot;true&quot;</span>&gt;</span><span class="symbol">&amp;laquo;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">c:if</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">c:if</span> <span class="attr">test</span>=<span class="string">&quot;$&#123;page.pageIndex != 1&#125;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;$&#123;pageContext.servletContext.contextPath&#125;/pageServlet?pageIndex=$&#123;page.pageIndex-1&#125;&quot;</span> <span class="attr">aria-label</span>=<span class="string">&quot;Previous&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">aria-hidden</span>=<span class="string">&quot;true&quot;</span>&gt;</span><span class="symbol">&amp;laquo;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">c:if</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">c:forEach</span> <span class="attr">begin</span>=<span class="string">&quot;1&quot;</span> <span class="attr">end</span>=<span class="string">&quot;$&#123;page.pageCount&#125;&quot;</span> <span class="attr">var</span>=<span class="string">&quot;pageNum&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 判断当前页 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">c:if</span> <span class="attr">test</span>=<span class="string">&quot;$&#123;page.pageIndex == pageNum&#125;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:void(0)&quot;</span>&gt;</span>$&#123;pageNum&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">c:if</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">c:if</span> <span class="attr">test</span>=<span class="string">&quot;$&#123;page.pageIndex != pageNum&#125;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;$&#123;pageContext.servletContext.contextPath&#125;/pageServlet?pageIndex=$&#123;pageNum&#125;&quot;</span>&gt;</span>$&#123;pageNum&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">c:if</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">c:forEach</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">&lt;!-- 下一页 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 判断当前页是否是最后一页 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">c:if</span> <span class="attr">test</span>=<span class="string">&quot;$&#123;page.pageIndex == page.pageCount&#125;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:void(0)&quot;</span> <span class="attr">aria-label</span>=<span class="string">&quot;Next&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">aria-hidden</span>=<span class="string">&quot;true&quot;</span>&gt;</span><span class="symbol">&amp;raquo;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">c:if</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">c:if</span> <span class="attr">test</span>=<span class="string">&quot;$&#123;page.pageIndex != page.pageCount&#125;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;$&#123;pageContext.servletContext.contextPath&#125;/pageServlet?pageIndex=$&#123;page.pageIndex+1&#125;&quot;</span> <span class="attr">aria-label</span>=<span class="string">&quot;Next&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">aria-hidden</span>=<span class="string">&quot;true&quot;</span>&gt;</span><span class="symbol">&amp;raquo;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">c:if</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 分页结束 --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/27/2d1de7a3aef1b3d37c27e7620b99a71b.png"></p>]]></content>
      
      
      <categories>
          
          <category> Web前端 </category>
          
          <category> JavaWeb </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaWeb </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaWeb🌍文件上传和下载</title>
      <link href="2021/01/15/%E5%89%8D%E7%AB%AF/JavaWeb/JavaWeb_%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E5%92%8C%E4%B8%8B%E8%BD%BD/"/>
      <url>2021/01/15/%E5%89%8D%E7%AB%AF/JavaWeb/JavaWeb_%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E5%92%8C%E4%B8%8B%E8%BD%BD/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> Web前端 </category>
          
          <category> JavaWeb </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaWeb </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaWeb🌍Frame框架</title>
      <link href="2021/01/15/%E5%89%8D%E7%AB%AF/JavaWeb/JavaWeb_Frame%E6%A1%86%E6%9E%B6/"/>
      <url>2021/01/15/%E5%89%8D%E7%AB%AF/JavaWeb/JavaWeb_Frame%E6%A1%86%E6%9E%B6/</url>
      
        <content type="html"><![CDATA[<h1 id="Frame框架"><a href="#Frame框架" class="headerlink" title="Frame框架"></a>Frame框架</h1><h2 id="Frameset和Frame"><a href="#Frameset和Frame" class="headerlink" title="Frameset和Frame"></a>Frameset和Frame</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">frameset</span> <span class="attr">rows</span>=<span class="string">&quot;20%,80%&quot;</span> <span class="attr">frameborder</span>=<span class="string">yes</span> <span class="attr">bordercolor</span>=<span class="string">&quot;green&quot;</span>&gt;</span> //top页面占20%，剩余页面占80%</span><br><span class="line">    <span class="tag">&lt;<span class="name">frame</span> <span class="attr">src</span>=<span class="string">&quot;top.html&quot;</span> <span class="attr">noresize</span>/&gt;</span>  //顶层页面，不可推动</span><br><span class="line">    <span class="tag">&lt;<span class="name">frameset</span> <span class="attr">cols</span>=<span class="string">&quot;20%,*&quot;</span> &gt;</span>   //左页面占20%，余下为右页面</span><br><span class="line">        <span class="tag">&lt;<span class="name">frame</span> <span class="attr">src</span>=<span class="string">&quot;left.html&quot;</span>/&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">frame</span> <span class="attr">src</span>=<span class="string">&quot;right.html&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">frameset</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">frameset</span>&gt;</span></span><br></pre></td></tr></table></figure><table><thead><tr><th align="center">Frameset属性</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">border</td><td align="center">设置框架的边框粗细</td></tr><tr><td align="center">bordercolor</td><td align="center">设置框架的边框颜色</td></tr><tr><td align="center">frameborder</td><td align="center">设置是否显示框架边框。设定值只有0、1；0 表示不要边框，1 表示要显示边框。</td></tr><tr><td align="center">cols</td><td align="center">纵向分割页面。其数值表示方法有三种：“30%、30（或者30px）、*”；数值的个数代表分成的视窗数目且数值之间用“,”隔开。“30%”表示该框架区域占全部浏览器页面区域的30%；“30”表示该区域横向宽度为30像素；“*”表示该区域占用余下页面空间。例如：cols=”25%,200,*“ 表示将页面分为三部分，左面部分占页面30%，中间横向宽度为200像素，页面余下的作为右面部分。</td></tr><tr><td align="center">rows</td><td align="center">横向分割页面。数值表示方法与意义与cols相同</td></tr><tr><td align="center">framespacing</td><td align="center">设置框架与框架间的保留的空白距离</td></tr></tbody></table><blockquote><p><strong>注意: 在使用frameset的使用就不要用body标签包裹了,一定要记住呀</strong></p></blockquote><table><thead><tr><th align="center">Frame属性</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">name</td><td align="center">设置框架名称。此为必须设置的属性</td></tr><tr><td align="center">src</td><td align="center">设置此框架要显示的网页名称或路径,此为必须设置的属性</td></tr><tr><td align="center">scrolling</td><td align="center">设置是否要显示滚动条。设定值为auto, yes, no</td></tr><tr><td align="center">bordercolor</td><td align="center">设置框架的边框颜色</td></tr><tr><td align="center">frameborder</td><td align="center">设置是否显示框架边框。设定值只有0、1；0 表示不要边框，1 表示要显示边框</td></tr><tr><td align="center">noresize</td><td align="center">设置框架大小是否能手动调节</td></tr><tr><td align="center">marginwidth</td><td align="center">设置框架边界和其中内容之间的宽度</td></tr><tr><td align="center">marginhight</td><td align="center">设置框架边界和其中内容之间的高度</td></tr><tr><td align="center">width</td><td align="center">设置框架宽度</td></tr><tr><td align="center">height</td><td align="center">设置框架高度</td></tr></tbody></table><h2 id="IFrame"><a href="#IFrame" class="headerlink" title="IFrame"></a>IFrame</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://www.sina.com.cn&quot;</span> <span class="attr">target</span>=<span class="string">&quot;iframe1&quot;</span>&gt;</span>sina<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://www.163.com&quot;</span> <span class="attr">target</span>=<span class="string">&quot;iframe1&quot;</span>&gt;</span>163<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://www.sohu.com&quot;</span> <span class="attr">target</span>=<span class="string">&quot;iframe1&quot;</span>&gt;</span>sohu<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">name</span>=<span class="string">&quot;iframe1&quot;</span> <span class="attr">src</span>=<span class="string">&quot;http://www.sina.com.cn&quot;</span> <span class="attr">width</span>=<span class="string">500</span> <span class="attr">height</span>=<span class="string">500/</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="区别"><a href="#区别" class="headerlink" title="区别"></a>区别</h2><ul><li><p>frame不能脱离frameSet单独使用，iframe可以；</p></li><li><p>frame不能放在body中；<br>如下可以正常显示：</p><pre><code>  &lt;!--&lt;body&gt;--&gt;       &lt;frameset rows=&quot;50%,*&quot;&gt;           &lt;frame   name=&quot;frame1&quot;   src=&quot;test1.htm&quot;/&gt;            &lt;frame   name=&quot;frame2&quot;   src=&quot;test2.htm&quot;/&gt;        &lt;/frameset&gt;   &lt;!--&lt;body&gt;--&gt; </code></pre><p>如下不能正常显示：</p><pre><code>  &lt;body&gt;       &lt;frameset rows=&quot;50%,*&quot;&gt;           &lt;frame   name=&quot;frame1&quot;   src=&quot;test1.htm&quot;/&gt;            &lt;frame   name=&quot;frame2&quot;   src=&quot;test2.htm&quot;/&gt;        &lt;/frameset&gt;   &lt;body&gt; </code></pre></li></ul><p><strong>相反，假如iframe放在frameSet属性下面，则必需放在body中</strong></p><pre><code>    &lt;body&gt;         &lt;frameset&gt;              &lt;iframe   name=&quot;frame1&quot;   src=&quot;test1.htm&quot;/&gt;              &lt;iframe   name=&quot;frame2&quot;   src=&quot;test2.htm&quot;/&gt;          &lt;/frameset&gt;      &lt;/body&gt; </code></pre><ul><li><p>iframe是一个html标签，在html中任何地方，都可以随意使用，而frame不可以。</p><pre><code>  &lt;body&gt;       &lt;iframe   name=&quot;frame1&quot;   src=&quot;test1.htm&quot;/&gt;        &lt;iframe   name=&quot;frame2&quot;   src=&quot;test2.htm&quot;/&gt;    &lt;/body&gt;  &lt;table&gt;       &lt;tr&gt;           &lt;td&gt;&lt;iframe id=&quot;&quot; src=&quot;&quot;&gt;&lt;/iframe&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;       &lt;/tr&gt;   &lt;/table&gt; </code></pre></li></ul><p><strong>而frame必须嵌套在frameSet中，且不能再table等标签中使用</strong>。</p><ul><li><p>frame的高度只能通过frameSet控制；iframe可以自己控制，不能通过frameSet控制</p><pre><code>  &lt;!--&lt;body&gt;--&gt;       &lt;frameset rows=&quot;50%,*&quot;&gt;        &lt;frame   name=&quot;frame1&quot;   src=&quot;test1.htm&quot;/&gt;         &lt;frame   name=&quot;frame2&quot;   src=&quot;test2.htm&quot;/&gt;        &lt;/frameset&gt;   &lt;!--&lt;/body&gt;--&gt;   &lt;body&gt;       &lt;frameset&gt;           &lt;iframe height=&quot;30%&quot;  name=&quot;frame1&quot;   src=&quot;test1.htm&quot;/&gt;           &lt;iframe height=&quot;100&quot;  name=&quot;frame2&quot;   src=&quot;test2.htm&quot;/&gt;       &lt;/frameset&gt;   &lt;/body&gt;</code></pre></li><li><p>如果在同一个页面使用了两个以上的iframe，在IE中可以正常显示，在firefox中只能显示出第一个；使用两个以上的frame在IE和firefox中均可正常</p><h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/27/3d52ea07c218d8759a3d57cb8ab74b60.png"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//W3C//DTD XHTML 1.0 Strict//EN&quot;</span> <span class="meta-string">&quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.w3.org/1999/xhtml&quot;</span> <span class="attr">xml:lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Type&quot;</span> <span class="attr">content</span>=<span class="string">&quot;text/html;charset=UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>FrameDemo_A.html<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">bgcolor</span> = <span class="string">&quot;silver&quot;</span>&gt;</span></span><br><span class="line">这里是 AAAAAAAAAAAAAAAAAA</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//W3C//DTD XHTML 1.0 Strict//EN&quot;</span> <span class="meta-string">&quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.w3.org/1999/xhtml&quot;</span> <span class="attr">xml:lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Type&quot;</span> <span class="attr">content</span>=<span class="string">&quot;text/html;charset=UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>FrameDemo_B.html<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">bgcolor</span> = <span class="string">&quot;silver&quot;</span>&gt;</span></span><br><span class="line">这里是 BBBBBBBBBBBBBBBBBBB</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//W3C//DTD XHTML 1.0 Strict//EN&quot;</span> <span class="meta-string">&quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.w3.org/1999/xhtml&quot;</span> <span class="attr">xml:lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Type&quot;</span> <span class="attr">content</span>=<span class="string">&quot;text/html;charset=UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>FrameDemo_left.html<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">bgcolor</span> = <span class="string">&quot;pink&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span> = <span class="string">&quot;A.html&quot;</span> <span class="attr">target</span> = <span class="string">&quot;myframe&quot;</span>&gt;</span>A<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span> = <span class="string">&quot;B.html&quot;</span> <span class="attr">target</span> = <span class="string">&quot;myframe&quot;</span>&gt;</span>B<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--这里target的属性值是 frame中的name值--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">_blank:新窗口</span></span><br><span class="line"><span class="comment">_self:本窗口</span></span><br><span class="line"><span class="comment">_parent:父窗口</span></span><br><span class="line"><span class="comment">_top: 整个浏览器窗口</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//W3C//DTD XHTML 1.0 Strict//EN&quot;</span> <span class="meta-string">&quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.w3.org/1999/xhtml&quot;</span> <span class="attr">xml:lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Type&quot;</span> <span class="attr">content</span>=<span class="string">&quot;text/html;charset=UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>FrameDemo_right.html<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">bgcolor</span> = <span class="string">&quot;silver&quot;</span>&gt;</span></span><br><span class="line">Right</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//W3C//DTD XHTML 1.0 Strict//EN&quot;</span> <span class="meta-string">&quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.w3.org/1999/xhtml&quot;</span> <span class="attr">xml:lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Type&quot;</span> <span class="attr">content</span>=<span class="string">&quot;text/html;charset=UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>FrameDemo_top.html<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">b</span>&gt;</span>这里是Top<span class="tag">&lt;/<span class="name">b</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//W3C//DTD XHTML 1.0 Strict//EN&quot;</span> <span class="meta-string">&quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.w3.org/1999/xhtml&quot;</span> <span class="attr">xml:lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Type&quot;</span> <span class="attr">content</span>=<span class="string">&quot;text/html;charset=UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>FrameDemo_iframe.html<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">frameset</span> <span class="attr">rows</span> = <span class="string">&quot;10%,*&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">frame</span> <span class="attr">src</span> = <span class="string">&quot;top.html&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">frameset</span> <span class="attr">cols</span> = <span class="string">&quot;20%,*&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">frame</span> <span class="attr">src</span> = <span class="string">&quot;left.html&quot;</span> <span class="attr">frameborder</span> = <span class="string">&quot;1&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">frame</span> <span class="attr">src</span> = <span class="string">&quot;right.html&quot;</span> <span class="attr">name</span> = <span class="string">&quot;myframe&quot;</span> <span class="attr">frameborder</span> = <span class="string">&quot;0&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">frameset</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">frameset</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Web前端 </category>
          
          <category> JavaWeb </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaWeb </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaWeb🌍Ajax异步检测</title>
      <link href="2021/01/15/%E5%89%8D%E7%AB%AF/JavaWeb/JavaWeb_Ajax%E5%BC%82%E6%AD%A5%E6%A3%80%E6%B5%8B/"/>
      <url>2021/01/15/%E5%89%8D%E7%AB%AF/JavaWeb/JavaWeb_Ajax%E5%BC%82%E6%AD%A5%E6%A3%80%E6%B5%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="Ajax异步检测"><a href="#Ajax异步检测" class="headerlink" title="Ajax异步检测"></a>Ajax异步检测</h1><p>Ajax异步检测用户名是否存在<br>项目总览：<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/27/d0c038d69ca0dc972f849ebc77621469.png"><br>数据库</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">database</span> student;</span><br><span class="line"><span class="keyword">use</span> student;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> <span class="keyword">user</span>(<span class="keyword">id</span> <span class="built_in">int</span> primary <span class="keyword">key</span> auto_increment,<span class="keyword">name</span> <span class="built_in">varchar</span>(<span class="number">255</span>),<span class="keyword">password</span> <span class="built_in">varchar</span>(<span class="number">255</span>));</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//封装User信息</span></span><br><span class="line"><span class="keyword">package</span> com.cheng.Bean;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> id ;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> String name  ;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> String password  ;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> id;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.id = id;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.name = name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getPassword</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> password;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPassword</span><span class="params">(String password)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.password = password;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//创建Dao接口</span></span><br><span class="line"><span class="keyword">package</span> com.cheng.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cheng.Bean.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserDao</span> </span>&#123;</span><br><span class="line"><span class="comment">// 插入数据</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Boolean <span class="title">insert</span><span class="params">(User user)</span> <span class="keyword">throws</span> SQLException </span>;</span><br><span class="line"><span class="comment">// 根据用户名称返回对象</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> User <span class="title">selectUserByName</span><span class="params">(String name)</span> <span class="keyword">throws</span> SQLException </span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//创建Dao实现类</span></span><br><span class="line"><span class="keyword">package</span> com.cheng.daoImpl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.commons.dbutils.QueryRunner;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.dbutils.handlers.BeanHandler;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cheng.Bean.User;</span><br><span class="line"><span class="keyword">import</span> com.cheng.dao.UserDao;</span><br><span class="line"><span class="keyword">import</span> com.cheng.utils.C3p0Utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserDaoImpl</span> <span class="keyword">implements</span> <span class="title">UserDao</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> User <span class="title">selectUserByName</span><span class="params">(String name)</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line"><span class="comment">// 创建QueryRunner对象</span></span><br><span class="line">QueryRunner runner = <span class="keyword">new</span> QueryRunner(C3p0Utils.getDataSource());</span><br><span class="line"><span class="comment">// 写SQL语句</span></span><br><span class="line">String sql = <span class="string">&quot;select * from user where name=?&quot;</span>;</span><br><span class="line"><span class="comment">// // 调用方法</span></span><br><span class="line">User user = (User) runner.query(sql, <span class="keyword">new</span> BeanHandler(User.class), <span class="keyword">new</span> Object[] &#123; name &#125;);</span><br><span class="line"><span class="keyword">return</span> user;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Boolean <span class="title">insert</span><span class="params">(User user)</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line"><span class="comment">// 创建QueryRunner对象</span></span><br><span class="line">QueryRunner runner = <span class="keyword">new</span> QueryRunner(C3p0Utils.getDataSource());</span><br><span class="line"><span class="comment">// 写SQL语句</span></span><br><span class="line">String sql = <span class="string">&quot;insert into user (name,password) values (?,?)&quot;</span>;</span><br><span class="line"><span class="comment">// 调用方法</span></span><br><span class="line"><span class="keyword">int</span> num = runner.update(sql, <span class="keyword">new</span> Object[] &#123; user.getName(), user.getPassword() &#125;);</span><br><span class="line"><span class="keyword">if</span> (num &gt; <span class="number">0</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//创建Service业务层接口</span></span><br><span class="line"><span class="keyword">package</span> com.cheng.service;</span><br><span class="line"><span class="keyword">import</span> com.cheng.Bean.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">registerUser</span><span class="params">(User st)</span> </span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> User <span class="title">findUserByName</span><span class="params">(String name)</span> </span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//创建Service业务接口实现类</span></span><br><span class="line"><span class="keyword">package</span> com.cheng.serviceImpl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cheng.Bean.User;</span><br><span class="line"><span class="keyword">import</span> com.cheng.dao.UserDao;</span><br><span class="line"><span class="keyword">import</span> com.cheng.daoImpl.UserDaoImpl;</span><br><span class="line"><span class="keyword">import</span> com.cheng.service.UserService;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">registerUser</span><span class="params">(User user)</span> </span>&#123;</span><br><span class="line"><span class="keyword">boolean</span> flag = <span class="keyword">false</span> ;</span><br><span class="line">UserDao stDao = <span class="keyword">new</span> UserDaoImpl() ;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">flag = stDao.insert(user) ;</span><br><span class="line">&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> flag;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> User <span class="title">findUserByName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">UserDao userDao = <span class="keyword">new</span> UserDaoImpl() ;</span><br><span class="line">User user = <span class="keyword">new</span> User() ;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">user = userDao.selectUserByName(name) ;</span><br><span class="line">&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> user;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//注销Servlet程序</span></span><br><span class="line"><span class="keyword">package</span> com.cheng.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpSession;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LogoutServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line">  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">LogoutServlet</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>();</span><br><span class="line">        <span class="comment">// TODO Auto-generated constructor stub</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">HttpSession session = request.getSession() ;</span><br><span class="line">session.removeAttribute(<span class="string">&quot;st&quot;</span>);</span><br><span class="line">response.sendRedirect(<span class="string">&quot;success.jsp&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">doGet(request, response);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//注册Servlet程序</span></span><br><span class="line"><span class="keyword">package</span> com.cheng.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpSession;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cheng.Bean.User;</span><br><span class="line"><span class="keyword">import</span> com.cheng.service.UserService;</span><br><span class="line"><span class="keyword">import</span> com.cheng.serviceImpl.UserServiceImpl;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">registerServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">registerServlet</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">super</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">super</span>.destroy(); <span class="comment">// Just puts &quot;destroy&quot; string in log</span></span><br><span class="line"><span class="comment">// Put your code here</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.doPost(request, response);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">request.setCharacterEncoding(<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">User st = <span class="keyword">new</span> User();</span><br><span class="line">HttpSession session = request.getSession();</span><br><span class="line">UserService ss = <span class="keyword">new</span> UserServiceImpl();</span><br><span class="line">st.setName(request.getParameter(<span class="string">&quot;name&quot;</span>));</span><br><span class="line">st.setPassword(request.getParameter(<span class="string">&quot;password&quot;</span>));</span><br><span class="line">ss.registerUser(st);</span><br><span class="line">session.setAttribute(<span class="string">&quot;st&quot;</span>, st);</span><br><span class="line">request.getRequestDispatcher(<span class="string">&quot;/success.jsp&quot;</span>).forward(request, response);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line"><span class="comment">// Put your code here</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//验证用户名validateServlet程序</span></span><br><span class="line"><span class="keyword">package</span> com.cheng.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cheng.Bean.User;</span><br><span class="line"><span class="keyword">import</span> com.cheng.service.UserService;</span><br><span class="line"><span class="keyword">import</span> com.cheng.serviceImpl.UserServiceImpl;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">validateServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">response.setCharacterEncoding(<span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">String name = request.getParameter(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">UserService us = <span class="keyword">new</span> UserServiceImpl();</span><br><span class="line">User user = us.findUserByName(name);</span><br><span class="line"><span class="keyword">if</span> (user != <span class="keyword">null</span>) &#123;</span><br><span class="line"><span class="comment">// 表示已经存在这个用户</span></span><br><span class="line">response.getWriter().print(<span class="string">&quot;&lt;font color=&#x27;red&#x27;&gt;用户名已经存在&lt;/font&gt; &quot;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">// 表示该用户不存在，可以注册</span></span><br><span class="line">response.getWriter().println(<span class="string">&quot;&lt;font color=&#x27;green&#x27;&gt;用户名可以使用&lt;/font&gt; &quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.doGet(request, response);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//创建C3p0Utils类</span></span><br><span class="line"><span class="keyword">package</span> com.cheng.utils;</span><br><span class="line"><span class="keyword">import</span> javax.sql.DataSource;</span><br><span class="line"><span class="keyword">import</span> com.mchange.v2.c3p0.ComboPooledDataSource;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">C3p0Utils</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> DataSource ds;</span><br><span class="line"><span class="keyword">static</span> &#123;</span><br><span class="line">ds = <span class="keyword">new</span> ComboPooledDataSource();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> DataSource <span class="title">getDataSource</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> ds;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--c3p0-config.xml文件--&gt;</span></span><br><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">c3p0-config</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">default-config</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driverClass&quot;</span>&gt;</span>com.mysql.jdbc.Driver<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;jdbcUrl&quot;</span>&gt;</span></span><br><span class="line">     jdbc:mysql://localhost:3306/student?characterEncoding=utf8</span><br><span class="line">     <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;user&quot;</span>&gt;</span>root<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span>&gt;</span>root<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;checkoutTimeout&quot;</span>&gt;</span>30000<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;initialPoolSize&quot;</span>&gt;</span>10<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;maxIdleTime&quot;</span>&gt;</span>30<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;maxPoolSize&quot;</span>&gt;</span>100<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;minPoolSize&quot;</span>&gt;</span>10<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;maxStatements&quot;</span>&gt;</span>200<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">default-config</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">named-config</span> <span class="attr">name</span>=<span class="string">&quot;itcast&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driverClass&quot;</span>&gt;</span>com.mysql.jdbc.Driver<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;jdbcUrl&quot;</span>&gt;</span></span><br><span class="line">           jdbc:mysql://localhost:3306/student?characterEncoding=utf8</span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;user&quot;</span>&gt;</span>root<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span>&gt;</span>root<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;initialPoolSize&quot;</span>&gt;</span>5<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;maxPoolSize&quot;</span>&gt;</span>15<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">named-config</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">c3p0-config</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>registerServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.cheng.servlet.registerServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>registerServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/registerServlet<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>LogoutServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.cheng.servlet.LogoutServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>LogoutServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/LogoutServlet<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"> <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>validateServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.cheng.servlet.validateServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>validateServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/validateServlet<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--register.jsp注册页面--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">language</span>=<span class="string">&quot;java&quot;</span> <span class="attr">import</span>=<span class="string">&quot;java.util.*&quot;</span> <span class="attr">pageEncoding</span>=<span class="string">&quot;utf-8&quot;</span>%&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%</span></span></span><br><span class="line"><span class="tag"><span class="attr">String</span> <span class="attr">path</span> = <span class="string">request.getContextPath();</span></span></span><br><span class="line"><span class="tag"><span class="attr">String</span> <span class="attr">basePath</span> = <span class="string">request.getScheme()+</span>&quot;<span class="attr">:</span>//&quot;+<span class="attr">request.getServerName</span>()+&quot;<span class="attr">:</span>&quot;+<span class="attr">request.getServerPort</span>()+<span class="attr">path</span>+&quot;/&quot;;</span></span><br><span class="line"><span class="tag">%&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%=basePath</span> %&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">HTML</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">base</span> <span class="attr">href</span>=<span class="string">&quot;&lt;%=basePath%&gt;&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>注册页面<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;pragma&quot;</span> <span class="attr">content</span>=<span class="string">&quot;no-cache&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;cache-control&quot;</span> <span class="attr">content</span>=<span class="string">&quot;no-cache&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;expires&quot;</span> <span class="attr">content</span>=<span class="string">&quot;0&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;keywords&quot;</span> <span class="attr">content</span>=<span class="string">&quot;keyword1,keyword2,keyword3&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;description&quot;</span> <span class="attr">content</span>=<span class="string">&quot;This is my page&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;registerServlet&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">用户名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;name&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">onblur</span>=<span class="string">&quot;checkUsername()&quot;</span> /&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;msg&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">密<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span>码:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">id</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;注册&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">checkUsername</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="comment">// 获得文本框值:</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> name = <span class="built_in">document</span>.getElementById(<span class="string">&quot;name&quot;</span>).value;</span></span><br><span class="line"><span class="javascript"><span class="comment">// 1.创建异步交互对象</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> xhr = createXmlHttp();</span></span><br><span class="line"><span class="javascript"><span class="comment">// 2.设置监听</span></span></span><br><span class="line"><span class="javascript">xhr.onreadystatechange = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="function"><span class="title">if</span>(<span class="params">xhr.readyState == <span class="number">4</span></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="function"><span class="title">if</span>(<span class="params">xhr.status == <span class="number">200</span></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.getElementById(<span class="string">&quot;msg&quot;</span>).innerHTML = xhr.responseText;</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="javascript"><span class="comment">// 3.打开连接</span></span></span><br><span class="line"><span class="javascript">xhr.open(<span class="string">&quot;GET&quot;</span>,<span class="string">&quot;$&#123;pageContext.request.contextPath&#125;/validateServlet?time=&quot;</span>+<span class="keyword">new</span> <span class="built_in">Date</span>().getTime()+<span class="string">&quot;&amp;name=&quot;</span>+name,<span class="literal">true</span>);</span></span><br><span class="line"><span class="javascript"><span class="comment">// 4.发送</span></span></span><br><span class="line"><span class="javascript">xhr.send(<span class="literal">null</span>);</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">createXmlHttp</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">   <span class="keyword">var</span> xmlHttp;</span></span><br><span class="line"><span class="javascript">   <span class="keyword">try</span>&#123; <span class="comment">// Firefox, Opera 8.0+, Safari</span></span></span><br><span class="line"><span class="javascript">        xmlHttp=<span class="keyword">new</span> XMLHttpRequest();</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="javascript">    <span class="keyword">catch</span> (e)&#123;</span></span><br><span class="line"><span class="javascript">   <span class="keyword">try</span>&#123;<span class="comment">// Internet Explorer</span></span></span><br><span class="line"><span class="javascript">         xmlHttp=<span class="keyword">new</span> ActiveXObject(<span class="string">&quot;Msxml2.XMLHTTP&quot;</span>);</span></span><br><span class="line">      &#125;</span><br><span class="line"><span class="javascript">    <span class="keyword">catch</span> (e)&#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">try</span>&#123;</span></span><br><span class="line"><span class="javascript">         xmlHttp=<span class="keyword">new</span> ActiveXObject(<span class="string">&quot;Microsoft.XMLHTTP&quot;</span>);</span></span><br><span class="line">      &#125;</span><br><span class="line"><span class="javascript">      <span class="keyword">catch</span> (e)&#123;&#125;</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="keyword">return</span> xmlHttp;</span></span><br><span class="line"> &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--success.jsp登陆成功页面--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">language</span>=<span class="string">&quot;java&quot;</span> <span class="attr">pageEncoding</span>=<span class="string">&quot;utf-8&quot;</span>%&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%</span></span></span><br><span class="line"><span class="tag"><span class="attr">String</span> <span class="attr">path</span> = <span class="string">request.getContextPath();</span></span></span><br><span class="line"><span class="tag"><span class="attr">String</span> <span class="attr">basePath</span> = <span class="string">request.getScheme()+</span>&quot;<span class="attr">:</span>//&quot;+<span class="attr">request.getServerName</span>()+&quot;<span class="attr">:</span>&quot;+<span class="attr">request.getServerPort</span>()+<span class="attr">path</span>+&quot;/&quot;;</span></span><br><span class="line"><span class="tag">%&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">HTML</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">base</span> <span class="attr">href</span>=<span class="string">&quot;&lt;%=basePath%&gt;&quot;</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>注册成功<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;pragma&quot;</span> <span class="attr">content</span>=<span class="string">&quot;no-cache&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;cache-control&quot;</span> <span class="attr">content</span>=<span class="string">&quot;no-cache&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;expires&quot;</span> <span class="attr">content</span>=<span class="string">&quot;0&quot;</span>&gt;</span>    </span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">href</span>=<span class="string">&quot;CSS/style.css&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">                注册成功！当前用户是：$&#123;st.name&#125; <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/AjaxDemo/LogoutServlet&quot;</span>&gt;</span>退出登录<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/27/4618470d0558d836917ddb3371a2b7d1.png"></p>]]></content>
      
      
      <categories>
          
          <category> Web前端 </category>
          
          <category> JavaWeb </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaWeb </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaWeb🌍数据库技术</title>
      <link href="2021/01/15/%E5%89%8D%E7%AB%AF/JavaWeb/JavaWeb_%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8A%80%E6%9C%AF/"/>
      <url>2021/01/15/%E5%89%8D%E7%AB%AF/JavaWeb/JavaWeb_%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8A%80%E6%9C%AF/</url>
      
        <content type="html"><![CDATA[<h1 id="JDBC"><a href="#JDBC" class="headerlink" title="JDBC"></a>JDBC</h1><p>JDBC全称是Java数据库连接（Java Database Connectivity），它是一套用于执行SQL语句的Java API。应用程序可通过这套API连接到关系数据库，并使用SQL语句来完成对数据库中数据的查询、更新、新增和删除的操作。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/26/8438d24f18438c5609acb9a5a447927f.png"><br>应用程序使用JDBC访问特定的数据库时，需要与不同的数据库驱动进行连接。由于不同数据库厂商提供的数据库驱动不同，因此，为了使应用程序与数据库真正建立连接，JDBC不仅需要提供访问数据库的API，还需要封装与各种数据库服务器通信的细节。</p><h2 id="常用SQL语句"><a href="#常用SQL语句" class="headerlink" title="常用SQL语句"></a>常用SQL语句</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">1、创建数据库</span><br><span class="line"><span class="keyword">Create</span> <span class="keyword">database</span>-<span class="keyword">name</span></span><br><span class="line"><span class="number">2</span>、创建表</span><br><span class="line"> <span class="keyword">create</span> <span class="keyword">table</span> student(sno <span class="built_in">int</span> primary <span class="keyword">key</span>);</span><br><span class="line">3、说明：增加一个列</span><br><span class="line"> <span class="keyword">alter</span> <span class="keyword">table</span> student <span class="keyword">add</span> sname <span class="built_in">varchar</span>(<span class="number">10</span>);</span><br><span class="line">4、插入数据</span><br><span class="line"> <span class="keyword">insert</span> <span class="keyword">into</span> student (sno,sname) <span class="keyword">values</span>(<span class="number">10</span>,<span class="string">&#x27;程子为&#x27;</span>);</span><br><span class="line">5、查询数据</span><br><span class="line">mysql&gt; select * from student;</span><br><span class="line">6、修改数据（如果出现中文插入不了错误，使用<span class="keyword">set</span> <span class="keyword">names</span>  gbk;）</span><br><span class="line"> <span class="keyword">update</span> student <span class="keyword">set</span> sno=<span class="number">1</span> <span class="keyword">where</span> sname=<span class="string">&#x27;程子为&#x27;</span>;</span><br><span class="line">7、删除数据</span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> student <span class="keyword">where</span> sno=<span class="number">2</span>;</span><br><span class="line">8、在某一行的指定列添加数据（更新和插入的区别）</span><br><span class="line"> <span class="keyword">alter</span> <span class="keyword">table</span>  student <span class="keyword">add</span> sage <span class="built_in">int</span>;</span><br><span class="line"> <span class="keyword">alter</span> <span class="keyword">table</span>  student <span class="keyword">add</span> ssex <span class="built_in">varchar</span>(<span class="number">5</span>);</span><br><span class="line"> <span class="keyword">update</span> student <span class="keyword">set</span> sage=<span class="number">20</span>,ssex=<span class="string">&#x27;男&#x27;</span> <span class="keyword">where</span> sno=<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    查看列：desc 表名;</span><br><span class="line">    修改表名：<span class="keyword">alter</span> <span class="keyword">table</span> t_book <span class="keyword">rename</span> <span class="keyword">to</span> bbb;</span><br><span class="line">    添加列：<span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">add</span> <span class="keyword">column</span> 列名 <span class="built_in">varchar</span>(<span class="number">30</span>);</span><br><span class="line">    删除列：<span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">drop</span> <span class="keyword">column</span> 列名;</span><br><span class="line">    修改列名MySQL： <span class="keyword">alter</span> <span class="keyword">table</span> bbb <span class="keyword">change</span> nnnnn hh <span class="built_in">int</span>;</span><br><span class="line"></span><br><span class="line">查询条件</span><br><span class="line">（1）排序</span><br><span class="line">降序： <span class="keyword">select</span> * <span class="keyword">from</span> student <span class="keyword">order</span> <span class="keyword">by</span> sage <span class="keyword">desc</span>;</span><br><span class="line">升序： <span class="keyword">select</span> * <span class="keyword">from</span> student <span class="keyword">order</span> <span class="keyword">by</span> sage <span class="keyword">asc</span>;</span><br><span class="line">（2）求总数</span><br><span class="line"> <span class="keyword">select</span> <span class="keyword">count</span>（*） <span class="keyword">from</span> student;</span><br><span class="line"> <span class="keyword">select</span> <span class="keyword">count</span>(*) <span class="keyword">from</span> student <span class="keyword">where</span> sage=<span class="number">20</span>;</span><br><span class="line">（3）求和</span><br><span class="line"> <span class="keyword">select</span> <span class="keyword">sum</span>(sage) <span class="keyword">as</span> age  <span class="keyword">from</span> student;</span><br><span class="line">（4）求平均</span><br><span class="line"> <span class="keyword">select</span> <span class="keyword">avg</span>(sage) <span class="keyword">as</span> 平均年龄  <span class="keyword">from</span> student;</span><br><span class="line">（5）最大值</span><br><span class="line"> <span class="keyword">select</span> <span class="keyword">max</span>(sage) <span class="keyword">as</span> 最大年龄  <span class="keyword">from</span> student;</span><br><span class="line">（6）最小值</span><br><span class="line"> <span class="keyword">select</span> <span class="keyword">min</span>(sage) <span class="keyword">as</span> 最大年龄  <span class="keyword">from</span> student;</span><br><span class="line">（7）分组</span><br><span class="line"> <span class="keyword">select</span> sage,<span class="keyword">count</span>(*) <span class="keyword">from</span> student <span class="keyword">group</span> <span class="keyword">by</span> sage;</span><br><span class="line">（8）多条件查询</span><br><span class="line"> <span class="keyword">select</span> * <span class="keyword">from</span> student <span class="keyword">where</span> sname=<span class="string">&#x27;小红&#x27;</span> <span class="keyword">and</span> sno=<span class="number">5</span>;</span><br><span class="line">（9）多表查询</span><br><span class="line"> <span class="keyword">select</span> * <span class="keyword">from</span> student,course <span class="keyword">where</span> student.sno=course.sno <span class="keyword">and</span> student.sno=<span class="number">6</span>;</span><br></pre></td></tr></table></figure><h2 id="JDBC常用API"><a href="#JDBC常用API" class="headerlink" title="JDBC常用API"></a>JDBC常用API</h2><ul><li><p>Driver接口：所有JDBC驱动必须实现的接口。<br>该接口专门提供给数据库厂商使用。在编写JDBC程序时，必须要把指定数据库驱动程序或类库加载到项目的classpath中。</p></li><li><p>DriverManager类：加载JDBC驱动并创建与数据库的连接。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/26/5cc8e5fa39a85e28a673a9cbf70b5cac.png"></p></li><li><p>Connection接口：代表Java程序和数据库的连接。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/26/7cfd0553765725530ffef326d22d70b5.png"></p></li><li><p>Statement接口：执行静态的SQL语句，并返回一个结果对象。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/26/959eb6d5cedfeb8379a8e3344b145b69.png"></p></li><li><p>PreparedStatement接口：执行预编译的SQL语句。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/26/3465f4d014ffdb30f2342a4f4dba7d77.png"></p></li><li><p>ResultSet接口：保存JDBC执行查询时返回的结果集。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/26/3792e3234a44f5647d84a16d6638ea3e.png"></p></li></ul><h2 id="实现JDBC程序"><a href="#实现JDBC程序" class="headerlink" title="实现JDBC程序"></a>实现JDBC程序</h2><ol><li>加载并注册数据库驱动。    <pre><code> Class.forName(&quot;DriverName&quot;);</code></pre></li><li>通过DriverManager获取数据库连接。<pre><code> Conncetion conn=DriverManager.getConncetion(url,username,password);</code></pre></li><li>通过Connection对象获取Statement对象。<pre><code> Statement stmt=conn.createStatement();</code></pre></li><li>使用Statement执行SQL语句。<pre><code> ResultSet rs=stmt.executeQuery(sql);</code></pre></li><li>操作ResultSet结果集。</li><li>关闭连接，释放资源。</li></ol><ul><li><p>搭建数据库</p><ol><li>下载MySQL<a href="https://dev.mysql.com/downloads/mysql/">Download</a></li><li><a href="https://blog.csdn.net/weixin_42869365/article/details/83472466">MySQL下载与安装</a></li></ol></li><li><p>导入数据库驱动<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/26/70372897707542c231ec9c76df6b14c0.png"></p></li><li><p>添加数据</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">create database student;</span><br><span class="line">use student;</span><br><span class="line">create table stu(id int primary key auto_increment,name varchar(20),password varchar(20));</span><br><span class="line">set name gbk; </span><br><span class="line">insert into stu(name,password) values(&quot;张三&quot;,&quot;123&quot;);</span><br><span class="line">insert into stu(name,password) values(&quot;李四&quot;,&quot;123&quot;);</span><br><span class="line">insert into stu(name,password) values(&quot;王五&quot;,&quot;123&quot;);</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> JDBC_01;</span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.DriverManager;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.sql.Statement;</span><br><span class="line"><span class="keyword">import</span> java.sql.Date;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JDBC_01</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">Statement stmt = <span class="keyword">null</span>;</span><br><span class="line">ResultSet rs = <span class="keyword">null</span>;</span><br><span class="line">Connection conn = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="comment">// 1. 注册数据库的驱动</span></span><br><span class="line">Class.forName(<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>);</span><br><span class="line"><span class="comment">// 2.通过DriverManager获取数据库连接</span></span><br><span class="line">String url = <span class="string">&quot;jdbc:mysql://localhost:3306/student&quot;</span>;</span><br><span class="line">String username = <span class="string">&quot;root&quot;</span>;</span><br><span class="line">String password = <span class="string">&quot;root&quot;</span>;</span><br><span class="line">conn = DriverManager.getConnection (url, username, </span><br><span class="line">     password);</span><br><span class="line"><span class="comment">// 3.通过Connection对象获取Statement对象</span></span><br><span class="line"> stmt = conn.createStatement();</span><br><span class="line"><span class="comment">// 4.使用Statement执行SQL语句。</span></span><br><span class="line">String sql = <span class="string">&quot;select * from stu&quot;</span>;</span><br><span class="line">rs = stmt.executeQuery(sql);</span><br><span class="line"><span class="comment">// 5. 操作ResultSet结果集</span></span><br><span class="line">System.out.println(<span class="string">&quot;| id | name   | password | &quot;</span>);</span><br><span class="line"><span class="keyword">while</span> (rs.next()) &#123;</span><br><span class="line"><span class="keyword">int</span> id = rs.getInt(<span class="string">&quot;id&quot;</span>); <span class="comment">// 通过列名获取指定字段的值</span></span><br><span class="line">String name = rs.getString(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">String psd =rs.getString(<span class="string">&quot;password&quot;</span>);</span><br><span class="line">System.out.println(<span class="string">&quot;| &quot;</span>+id + <span class="string">&quot; | &quot;</span> + name + <span class="string">&quot; | &quot;</span> + psd + <span class="string">&quot; | &quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">catch</span> (ClassNotFoundException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125; <span class="keyword">finally</span>&#123;</span><br><span class="line"><span class="comment">// 6.回收数据库资源</span></span><br><span class="line"><span class="keyword">if</span>(rs!=<span class="keyword">null</span>) &#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">rs.close();</span><br><span class="line">&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">rs = <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(stmt!=<span class="keyword">null</span>) &#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">stmt.close();</span><br><span class="line">&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">stmt = <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(conn!=<span class="keyword">null</span>) &#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">conn.close();</span><br><span class="line">&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">conn = <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">运行结果</span></span><br><span class="line"><span class="comment">| id | name   | password | </span></span><br><span class="line"><span class="comment">| 7 | 张三 |    123    | </span></span><br><span class="line"><span class="comment">| 8 | 李四 |    123    | </span></span><br><span class="line"><span class="comment">| 9 | 王五 |    123    | </span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h2 id="PreparedStatement对象"><a href="#PreparedStatement对象" class="headerlink" title="PreparedStatement对象"></a>PreparedStatement对象</h2><p>PreparedStatement对象可以对SQL语句进行预编译，预编译的信息会存储在该对象中。当相同的SQL语句再次执行时，程序会使用PreparedStatement对象中的数据，而不需要对SQL语句再次编译去查询数据库，这样就大大的提高了数据的访问效率。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> JDBC_01;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.DriverManager;</span><br><span class="line"><span class="keyword">import</span> java.sql.PreparedStatement ;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JDBC_02</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">Connection conn = <span class="keyword">null</span>;</span><br><span class="line">PreparedStatement  preStmt = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">             <span class="comment">// 加载数据库驱动</span></span><br><span class="line">Class.forName(<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>);</span><br><span class="line">String url = <span class="string">&quot;jdbc:mysql://localhost:3306/student&quot;</span>;</span><br><span class="line">String username = <span class="string">&quot;root&quot;</span>;</span><br><span class="line">String password = <span class="string">&quot;root&quot;</span>;</span><br><span class="line">             <span class="comment">// 创建应用程序与数据库连接的Connection对象</span></span><br><span class="line">conn = DriverManager.getConnection(url, username, password);</span><br><span class="line"><span class="comment">// 执行的SQL语句</span></span><br><span class="line">String sql = <span class="string">&quot;INSERT INTO stu(name,password)&quot;</span></span><br><span class="line">+ <span class="string">&quot;VALUES(?,?)&quot;</span>;</span><br><span class="line">             <span class="comment">// 创建执行SQL语句的PreparedStatement 对象</span></span><br><span class="line">preStmt = conn.prepareStatement(sql);</span><br><span class="line">preStmt.setString(<span class="number">1</span>, <span class="string">&quot;赵六&quot;</span>);</span><br><span class="line">preStmt.setString(<span class="number">2</span>, <span class="string">&quot;123456&quot;</span>);</span><br><span class="line">preStmt.executeUpdate();</span><br><span class="line">&#125; <span class="keyword">catch</span> (ClassNotFoundException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;    <span class="comment">// 释放资源</span></span><br><span class="line"><span class="keyword">if</span> (preStmt != <span class="keyword">null</span>) &#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">preStmt.close();</span><br><span class="line">&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">preStmt = <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (conn != <span class="keyword">null</span>) &#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">conn.close();</span><br><span class="line">&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">conn = <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="ResultSet对象"><a href="#ResultSet对象" class="headerlink" title="ResultSet对象"></a>ResultSet对象</h2><p>ResultSet主要用于存储结果集，可以通过next()方法由前向后逐个获取结果集中的数据，如果想获取结果集中任意位置的数据，则需要在创建Statement对象时，设置两个ResultSet定义的常量，具体设置方式如下：</p><pre><code>    Statement st = conn.createStatement(        ResultSet.TYPE_SCROLL_INSENITIVE,         ResultSet.CONCUR_READ_ONLY    );    ResultSet rs = st.excuteQuery(sql);</code></pre><p>在上述方式中，常量“Result.TYPE_SCROLL_INSENITIVE”表示结果集可滚动，常量“ResultSet.CONCUR_READ_ONLY”表示以只读形式打开结果集。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> JDBC_01;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.DriverManager;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.sql.Statement;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JDBC_03</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    Connection conn = <span class="keyword">null</span>;</span><br><span class="line">Statement stmt = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">   Class.forName(<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>);</span><br><span class="line">   String url = <span class="string">&quot;jdbc:mysql://localhost:3306/student&quot;</span>;</span><br><span class="line">   String username = <span class="string">&quot;root&quot;</span>;</span><br><span class="line">   String password = <span class="string">&quot;root&quot;</span>;</span><br><span class="line">   <span class="comment">//1.获取Connection对象</span></span><br><span class="line">   conn = DriverManager.getConnection(url, username, password);</span><br><span class="line">   String sql = <span class="string">&quot;select * from stu&quot;</span>;</span><br><span class="line">   <span class="comment">//2.创建Statement对象并设置常量</span></span><br><span class="line">           Statement st =conn.createStatement(</span><br><span class="line">ResultSet.TYPE_SCROLL_INSENSITIVE, </span><br><span class="line">ResultSet.CONCUR_READ_ONLY);</span><br><span class="line">           <span class="comment">//3.执行SQL并将获取的数据信息存放在ResultSet中</span></span><br><span class="line">ResultSet rs = st.executeQuery(sql);</span><br><span class="line">   <span class="comment">//4.取出ResultSet中指定数据的信息</span></span><br><span class="line">System.out.print(<span class="string">&quot;第2条数据的name值为:&quot;</span>);</span><br><span class="line">rs.absolute(<span class="number">2</span>);        <span class="comment">//将指针定位到结果集中第2行数据</span></span><br><span class="line">System.out.println(rs.getString(<span class="string">&quot;name&quot;</span>));</span><br><span class="line">System.out.print(<span class="string">&quot;第1条数据的name值为:&quot;</span>);</span><br><span class="line">rs.beforeFirst();      <span class="comment">//将指针定位到结果集中第1行数据之前</span></span><br><span class="line">rs.next();              <span class="comment">//将指针向后滚动</span></span><br><span class="line">System.out.println(rs.getString(<span class="string">&quot;name&quot;</span>));</span><br><span class="line">System.out.print(<span class="string">&quot;第4条数据的name值为:&quot;</span>);</span><br><span class="line">rs.afterLast();        <span class="comment">//将指针定位到结果集中最后一条数据之后</span></span><br><span class="line">rs.previous();         <span class="comment">//将指针向前滚动</span></span><br><span class="line">System.out.println(rs.getString(<span class="string">&quot;name&quot;</span>));</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125; <span class="keyword">finally</span> &#123; <span class="comment">// 释放资源</span></span><br><span class="line"><span class="keyword">if</span> (stmt != <span class="keyword">null</span>) &#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">stmt.close();</span><br><span class="line">&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">stmt = <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (conn != <span class="keyword">null</span>) &#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">conn.close();</span><br><span class="line">&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">conn = <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">运行结果</span></span><br><span class="line"><span class="comment">第2条数据的name值为:李四</span></span><br><span class="line"><span class="comment">第1条数据的name值为:张三</span></span><br><span class="line"><span class="comment">第4条数据的name值为:赵六</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h2 id="CURD"><a href="#CURD" class="headerlink" title="CURD"></a>CURD</h2><p>CURD即创建（Create）、更新（Update）、读取（Retrieve）和删除（Delete）操作。<br>项目介绍：</p><ol><li>Dao包，创建UsersDao类用于执行SQL语句的方法</li><li>UserBean包，创建User类，封装了用户id，username，password，email，birthday</li><li>Utils包，创建JDBCUtils，封装了数据库连接和关闭的方法</li><li>JDBC_Test包，用于测试CURD</li></ol><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/26/c358177fdc410041a241629a769f3062.png"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*UserBean.User 创建User类，封装了用户id，username，password，email，birthday*/</span></span><br><span class="line"><span class="keyword">package</span> UserBean;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line"><span class="keyword">private</span> String username;</span><br><span class="line"><span class="keyword">private</span> String password;</span><br><span class="line"><span class="keyword">private</span> String email;</span><br><span class="line"><span class="keyword">private</span> Date birthday;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> id;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.id = id;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getUsername</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> username;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUsername</span><span class="params">(String username)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.username = username;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getPassword</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> password;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPassword</span><span class="params">(String password)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.password = password;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getEmail</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> email;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setEmail</span><span class="params">(String email)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.email = email;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> Date <span class="title">getBirthday</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> birthday;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setBirthday</span><span class="params">(Date birthday)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.birthday = birthday;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Utils.JDBCUtils 封装了数据库连接和关闭的方法</span></span><br><span class="line"><span class="keyword">package</span> Utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.DriverManager;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.sql.Statement;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JDBCUtils</span> </span>&#123;</span><br><span class="line"><span class="comment">// 加载驱动，并建立数据库连接</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Connection <span class="title">getConnection</span><span class="params">()</span> <span class="keyword">throws</span> SQLException,</span></span><br><span class="line"><span class="function">ClassNotFoundException </span>&#123;</span><br><span class="line">Class.forName(<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>);</span><br><span class="line">String url = <span class="string">&quot;jdbc:mysql://localhost:3306/student&quot;</span>;</span><br><span class="line">String username = <span class="string">&quot;root&quot;</span>;</span><br><span class="line">    String password = <span class="string">&quot;root&quot;</span>;</span><br><span class="line">Connection conn = DriverManager.getConnection(url, username, </span><br><span class="line">password);</span><br><span class="line"><span class="keyword">return</span> conn;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 关闭数据库连接，释放资源</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">release</span><span class="params">(Statement stmt, Connection conn)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (stmt != <span class="keyword">null</span>) &#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">stmt.close();</span><br><span class="line">&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">stmt = <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (conn != <span class="keyword">null</span>) &#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">conn.close();</span><br><span class="line">&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">conn = <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">     <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">release</span><span class="params">(ResultSet rs, Statement stmt, </span></span></span><br><span class="line"><span class="function"><span class="params">     Connection conn)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (rs != <span class="keyword">null</span>) &#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">rs.close();</span><br><span class="line">&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">rs = <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line">release(stmt, conn);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Dao.UsersDao 创建UsersDao类用于执行SQL语句的方法</span></span><br><span class="line"><span class="keyword">package</span> Dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.Statement;</span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> UserBean.User;</span><br><span class="line"><span class="keyword">import</span> Utils.JDBCUtils;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UsersDao</span> </span>&#123;</span><br><span class="line"><span class="comment">// 添加用户的操作</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">insert</span><span class="params">(User user)</span> </span>&#123;</span><br><span class="line">Connection conn = <span class="keyword">null</span>;</span><br><span class="line">Statement stmt = <span class="keyword">null</span>;</span><br><span class="line">ResultSet rs = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="comment">// 获得数据的连接</span></span><br><span class="line">conn = JDBCUtils.getConnection();</span><br><span class="line"><span class="comment">// 获得Statement对象</span></span><br><span class="line">stmt = conn.createStatement();</span><br><span class="line"><span class="comment">// 发送SQL语句</span></span><br><span class="line">SimpleDateFormat sdf = <span class="keyword">new</span> SimpleDateFormat(<span class="string">&quot;yyyy-MM-dd&quot;</span>);</span><br><span class="line">String birthday = sdf.format(user.getBirthday());</span><br><span class="line">    String sql = <span class="string">&quot;INSERT INTO users(id,username,password,email,birthday) &quot;</span>+</span><br><span class="line"><span class="string">&quot;VALUES(&quot;</span></span><br><span class="line">+ user.getId()</span><br><span class="line">+ <span class="string">&quot;,&#x27;&quot;</span></span><br><span class="line">+ user.getUsername()</span><br><span class="line">+ <span class="string">&quot;&#x27;,&#x27;&quot;</span></span><br><span class="line">+ user.getPassword()</span><br><span class="line">+ <span class="string">&quot;&#x27;,&#x27;&quot;</span></span><br><span class="line">+ user.getEmail()</span><br><span class="line">+ <span class="string">&quot;&#x27;,&#x27;&quot;</span></span><br><span class="line">+ birthday + <span class="string">&quot;&#x27;)&quot;</span>;</span><br><span class="line"><span class="keyword">int</span> num = stmt.executeUpdate(sql);</span><br><span class="line"><span class="keyword">if</span> (num &gt; <span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">JDBCUtils.release(rs, stmt, conn);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 查询所有的User对象</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> ArrayList&lt;User&gt; <span class="title">findAll</span><span class="params">()</span> </span>&#123;</span><br><span class="line">Connection conn = <span class="keyword">null</span>;</span><br><span class="line">Statement stmt = <span class="keyword">null</span>;</span><br><span class="line">ResultSet rs = <span class="keyword">null</span>;</span><br><span class="line">ArrayList&lt;User&gt; list = <span class="keyword">new</span> ArrayList&lt;User&gt;();</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="comment">// 获得数据的连接</span></span><br><span class="line">conn = JDBCUtils.getConnection();</span><br><span class="line"><span class="comment">// 获得Statement对象</span></span><br><span class="line">stmt = conn.createStatement();</span><br><span class="line"><span class="comment">// 发送SQL语句</span></span><br><span class="line">String sql = <span class="string">&quot;SELECT * FROM users&quot;</span>;</span><br><span class="line">rs = stmt.executeQuery(sql);</span><br><span class="line"><span class="comment">// 处理结果集</span></span><br><span class="line"><span class="keyword">while</span> (rs.next()) &#123;</span><br><span class="line">User user = <span class="keyword">new</span> User();</span><br><span class="line">user.setId(rs.getInt(<span class="string">&quot;id&quot;</span>));</span><br><span class="line">user.setUsername(rs.getString(<span class="string">&quot;username&quot;</span>));</span><br><span class="line">user.setPassword(rs.getString(<span class="string">&quot;password&quot;</span>));</span><br><span class="line">user.setEmail(rs.getString(<span class="string">&quot;email&quot;</span>));</span><br><span class="line">user.setBirthday(rs.getDate(<span class="string">&quot;birthday&quot;</span>));</span><br><span class="line">list.add(user);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> list;</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">JDBCUtils.release(rs, stmt, conn);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 根据id查找指定的user</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> User <span class="title">find</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line">Connection conn = <span class="keyword">null</span>;</span><br><span class="line">Statement stmt = <span class="keyword">null</span>;</span><br><span class="line">ResultSet rs = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="comment">// 获得数据的连接</span></span><br><span class="line">conn = JDBCUtils.getConnection();</span><br><span class="line"><span class="comment">// 获得Statement对象</span></span><br><span class="line">stmt = conn.createStatement();</span><br><span class="line"><span class="comment">// 发送SQL语句</span></span><br><span class="line">String sql = <span class="string">&quot;SELECT * FROM users WHERE id=&quot;</span> + id;</span><br><span class="line">rs = stmt.executeQuery(sql);</span><br><span class="line"><span class="comment">// 处理结果集</span></span><br><span class="line"><span class="keyword">while</span> (rs.next()) &#123;</span><br><span class="line">User user = <span class="keyword">new</span> User();</span><br><span class="line">user.setId(rs.getInt(<span class="string">&quot;id&quot;</span>));</span><br><span class="line">user.setUsername(rs.getString(<span class="string">&quot;username&quot;</span>));</span><br><span class="line">user.setPassword(rs.getString(<span class="string">&quot;password&quot;</span>));</span><br><span class="line">user.setEmail(rs.getString(<span class="string">&quot;email&quot;</span>));</span><br><span class="line">user.setBirthday(rs.getDate(<span class="string">&quot;birthday&quot;</span>));</span><br><span class="line"><span class="keyword">return</span> user;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">JDBCUtils.release(rs, stmt, conn);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 删除用户</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">delete</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line">Connection conn = <span class="keyword">null</span>;</span><br><span class="line">Statement stmt = <span class="keyword">null</span>;</span><br><span class="line">ResultSet rs = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="comment">// 获得数据的连接</span></span><br><span class="line">conn = JDBCUtils.getConnection();</span><br><span class="line"><span class="comment">// 获得Statement对象</span></span><br><span class="line">stmt = conn.createStatement();</span><br><span class="line"><span class="comment">// 发送SQL语句</span></span><br><span class="line">String sql = <span class="string">&quot;DELETE FROM users WHERE id=&quot;</span> + id;</span><br><span class="line"><span class="keyword">int</span> num = stmt.executeUpdate(sql);</span><br><span class="line"><span class="keyword">if</span> (num &gt; <span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">JDBCUtils.release(rs, stmt, conn);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 修改用户</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">update</span><span class="params">(User user)</span> </span>&#123;</span><br><span class="line">Connection conn = <span class="keyword">null</span>;</span><br><span class="line">Statement stmt = <span class="keyword">null</span>;</span><br><span class="line">ResultSet rs = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="comment">// 获得数据的连接</span></span><br><span class="line">conn = JDBCUtils.getConnection();</span><br><span class="line"><span class="comment">// 获得Statement对象</span></span><br><span class="line">stmt = conn.createStatement();</span><br><span class="line"><span class="comment">// 发送SQL语句</span></span><br><span class="line">SimpleDateFormat sdf = <span class="keyword">new</span> SimpleDateFormat(<span class="string">&quot;yyyy-MM-dd&quot;</span>);</span><br><span class="line">String birthday = sdf.format(user.getBirthday());</span><br><span class="line">String sql = <span class="string">&quot;UPDATE users set username=&#x27;&quot;</span> + user.getUsername()</span><br><span class="line">+ <span class="string">&quot;&#x27;,password=&#x27;&quot;</span> + user.getPassword() + <span class="string">&quot;&#x27;,email=&#x27;&quot;</span></span><br><span class="line">+ user.getEmail() + <span class="string">&quot;&#x27;,birthday=&#x27;&quot;</span> + birthday</span><br><span class="line">+ <span class="string">&quot;&#x27; WHERE id=&quot;</span> + user.getId();</span><br><span class="line"><span class="keyword">int</span> num = stmt.executeUpdate(sql);</span><br><span class="line"><span class="keyword">if</span> (num &gt; <span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">JDBCUtils.release(rs, stmt, conn);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//插入操作</span></span><br><span class="line"><span class="comment">//JDBC_Test.jdbcInsertTest.java</span></span><br><span class="line"><span class="keyword">package</span> JDBC_Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> Dao.UsersDao;</span><br><span class="line"><span class="keyword">import</span> UserBean.User;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">jdbcInsertTest</span></span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">         <span class="comment">// 向users表插入一个用户信息</span></span><br><span class="line">UsersDao ud = <span class="keyword">new</span> UsersDao();</span><br><span class="line">User user=<span class="keyword">new</span> User();</span><br><span class="line">user.setId(<span class="number">5</span>);</span><br><span class="line">user.setUsername(<span class="string">&quot;hl&quot;</span>);</span><br><span class="line">user.setPassword(<span class="string">&quot;123&quot;</span>);</span><br><span class="line">user.setEmail(<span class="string">&quot;hl@sina.com&quot;</span>);</span><br><span class="line">user.setBirthday(<span class="keyword">new</span> Date());</span><br><span class="line"><span class="keyword">boolean</span> b=ud.insert(user);</span><br><span class="line">System.out.println(b);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//更新操作</span></span><br><span class="line"><span class="comment">//JDBC_Test.UpdateUserTest.java</span></span><br><span class="line"><span class="keyword">package</span> JDBC_Test;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> Dao.UsersDao;</span><br><span class="line"><span class="keyword">import</span> UserBean.User;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UpdateUserTest</span></span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">         <span class="comment">// 修改User对象的数据</span></span><br><span class="line">UsersDao usersDao = <span class="keyword">new</span> UsersDao();</span><br><span class="line">User user = <span class="keyword">new</span> User();</span><br><span class="line">user.setId(<span class="number">5</span>);</span><br><span class="line">user.setUsername(<span class="string">&quot;zhaoxiaoliu&quot;</span>);</span><br><span class="line">user.setPassword(<span class="string">&quot;456&quot;</span>);</span><br><span class="line">user.setEmail(<span class="string">&quot;zhaoxiaoliu@sina.com&quot;</span>);</span><br><span class="line">user.setBirthday(<span class="keyword">new</span> Date());</span><br><span class="line"><span class="keyword">boolean</span> b = usersDao.update(user);</span><br><span class="line">System.out.println(b);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//通过ID查找</span></span><br><span class="line"><span class="comment">//JDBC_Test. FindUserByIdTest</span></span><br><span class="line"><span class="keyword">package</span> JDBC_Test;</span><br><span class="line"><span class="keyword">import</span> Dao.UsersDao;</span><br><span class="line"><span class="keyword">import</span> UserBean.User;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FindUserByIdTest</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">UsersDao usersDao = <span class="keyword">new</span> UsersDao();</span><br><span class="line">User user = usersDao.find(<span class="number">6</span>);</span><br><span class="line">System.out.println(<span class="string">&quot;id为6的User对象的name值为：&quot;</span> + user.getUsername());</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//查询全部数据</span></span><br><span class="line"><span class="keyword">package</span> JDBC_Test;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> Dao.UsersDao;</span><br><span class="line"><span class="keyword">import</span> UserBean.User;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FindAllUsersTest</span></span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">//创建一个名称为usersDao的对象</span></span><br><span class="line">UsersDao usersDao = <span class="keyword">new</span> UsersDao();</span><br><span class="line"><span class="comment">//将UsersDao对象的findAll()方法执行后的结果放入list集合</span></span><br><span class="line">ArrayList&lt;User&gt; list = usersDao.findAll();</span><br><span class="line"><span class="comment">//循环输出集合中的数据</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; list.size(); i++) &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;第&quot;</span> + (i + <span class="number">1</span>) + <span class="string">&quot;条数据的username值为:&quot;</span></span><br><span class="line">+ list.get(i).getUsername());</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//根据ID删除数据</span></span><br><span class="line"><span class="keyword">package</span> JDBC_Test;</span><br><span class="line"><span class="keyword">import</span> Dao.UsersDao;</span><br><span class="line"><span class="keyword">import</span> UserBean.User;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DeleteUserTest</span></span>&#123;</span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"> <span class="comment">// 删除操作</span></span><br><span class="line"> UsersDao usersDao = <span class="keyword">new</span> UsersDao();</span><br><span class="line"> <span class="keyword">boolean</span> b = usersDao.delete(<span class="number">7</span>);</span><br><span class="line"> System.out.println(<span class="string">&quot;删除id为7的数据：&quot;</span>+b);</span><br><span class="line"> &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h1 id="数据库连接池"><a href="#数据库连接池" class="headerlink" title="数据库连接池"></a>数据库连接池</h1><p>在JDBC编程中，每次创建和断开Connection对象都会消耗一定的时间和IO资源。频繁地创建、断开数据库连接势必会影响数据库的访问效率，甚至导致数据库崩溃。<br>为了避免频繁的创建数据库连接，工程师们提出了数据库连接池技术。</p><ul><li>数据库连接池负责分配、管理和释放数据库连接，它允许应用程序重复使用现有的数据库连接，而不是重新建立。下面通过一张图来简单描述应用程序如何通过连接池连接数据库。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/26/862e2d18125cef97df103b696c3fbaf9.png"></p><h2 id="DataSource接口"><a href="#DataSource接口" class="headerlink" title="DataSource接口"></a>DataSource接口</h2><p>为了获取数据库连接对象（Connection），JDBC提供了javax.sql.DataSource接口，它负责与数据库建立连接，并定义了返回值为Connection对象的方法：</p><pre><code>    Connection getConnection()     Connection getConnection(String username, String password)</code></pre><p>我们习惯性的把实现了javax.sql.DataSource接口的类称为数据源，顾名思义，数据源即数据的来源。在数据源中存储了所有建立数据库连接的信息。</p><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/26/73a8871e6520e1c0a06baf06aff4c683.png"></p><h2 id="DBCP数据源"><a href="#DBCP数据源" class="headerlink" title="DBCP数据源"></a>DBCP数据源</h2><p>DBCP是数据库连接池（DataBase Connection Pool）的简称，是Apache组织下的开源连接池实现，也是Tomcat服务器使用的连接池组件。单独使用DBCP数据源时，需要在应用程序中导入两个jar包。这两个包可以在<a href="http://commons.apache.org/proper/">Apache官网</a>下载<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/26/2bcc67086852073b7d41513ea2e5d6eb.png"></p><ul><li><p>Commons-dbcp.jar：连接池的实现</p></li><li><p>Commons-pool.jar：连接池实现的依赖库</p></li><li><p>commons-dbcp.jar包中包含两个核心类，分别是BasicDataSourceFactory和BasicDataSource，它们都包含获取DBCP数据源对象的方法。</p></li><li><p>BasicDataSource是DataSource接口的实现类，主要包括设置数据源对象的方法。</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/26/9a6a498088470a37a812d95dfa3304c3.png"></p><ul><li>数据源对象创建的两种方式<ol><li>使用BasicDataSource类创建一个数据源对象，手动给数据源对象设置属性值，然后获取数据库连接对象。</li><li>使用BasicDataSourceFactory工厂类读取配置文件，创建数据源对象，然后获取数据库连接对象。</li></ol></li></ul><h2 id="C3P0数据源"><a href="#C3P0数据源" class="headerlink" title="C3P0数据源"></a>C3P0数据源</h2><p>C3P0是目前最流行的开源数据库连接池之一，它实现了DataSource数据源接口，支持JDBC2和JDBC3的标准规范，易于扩展并且性能优越，著名的开源框架Hibernate和 Spring使用的都是该数据源。编程之前需要导入<code>c3p0-0.9.1.2jar</code>包<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/26/1abed06828422708d5d78d166a3c2653.png"></p><ul><li>我们在使用C3P0数据源开发时，需要了解C3P0中DataSource接口的实现类ComboPooledDataSource，它是C3P0的核心类，提供了数据源对象的相关方法。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/26/f5749b855745e48b0158de36f37db5be.png"></p><ul><li>数据源对象创建的两种方式<ol><li>使用ComboPooledDataSource()构造方法创建数据源对象，需要手动给数据源对象设置属性值，然后获取数据库连接对象。<br>2 使用ComboPooledDataSource(String configName)构造方法读取c3p0-config.xml配置文件，从而创建数据源对象，然后获取数据库连接对象。（推荐使用）</li></ol></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/26/90831d536edff41388ad8143ff4b819f.png"></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">c3p0-config</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">default-config</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driverClass&quot;</span>&gt;</span>com.mysql.jdbc.Driver<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;jdbcUrl&quot;</span>&gt;</span></span><br><span class="line">     jdbc:mysql://localhost:3306/student</span><br><span class="line">     <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;user&quot;</span>&gt;</span>root<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span>&gt;</span>root<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;checkoutTimeout&quot;</span>&gt;</span>30000<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;initialPoolSize&quot;</span>&gt;</span>10<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;maxIdleTime&quot;</span>&gt;</span>30<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;maxPoolSize&quot;</span>&gt;</span>100<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;minPoolSize&quot;</span>&gt;</span>10<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;maxStatements&quot;</span>&gt;</span>200<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">default-config</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">named-config</span> <span class="attr">name</span>=<span class="string">&quot;itcast&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driverClass&quot;</span>&gt;</span>com.mysql.jdbc.Driver<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;jdbcUrl&quot;</span>&gt;</span></span><br><span class="line">           jdbc:mysql://localhost:3306/student</span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;user&quot;</span>&gt;</span>root<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span>&gt;</span>root<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;initialPoolSize&quot;</span>&gt;</span>5<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;maxPoolSize&quot;</span>&gt;</span>15<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">named-config</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">c3p0-config</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> c3p0;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> javax.sql.DataSource;</span><br><span class="line"><span class="keyword">import</span> com.mchange.v2.c3p0.ComboPooledDataSource;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">c3p0_test</span> </span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> DataSource ds = <span class="keyword">null</span>;</span><br><span class="line"><span class="comment">// 初始化C3P0数据源</span></span><br><span class="line"><span class="keyword">static</span> &#123;</span><br><span class="line"><span class="comment">// 使用c3p0-config.xml配置文件中的named-config节点中name属性的值</span></span><br><span class="line">ComboPooledDataSource cpds = <span class="keyword">new</span> ComboPooledDataSource(<span class="string">&quot;root&quot;</span>);</span><br><span class="line">ds = cpds;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">System.out.println(ds.getConnection());</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/26/81c22010088b51234b34fdf60a6e12c5.png"></p><blockquote><p>注意，配置文件名必须为c3p0-config.xml或者c3p0.properties，并且位于该项目的src根目录下<br>当传入的configName的值为空或者不存在时，则使用默认的配置方式创建数据源</p></blockquote><h1 id="DBUtils工具"><a href="#DBUtils工具" class="headerlink" title="DBUtils工具"></a>DBUtils工具</h1><p>为了更加简单地使用JDBC，Apache组织提供了一个工具类库commons-dbutils组件。<br>该组件实现了对JDBC的简单封装，可以在不影响性能的情况下极大简化JDBC的编码工作量。编码前需要导入<code>commons-dbutils-1.6.jar</code></p><h2 id="QueryRunner类"><a href="#QueryRunner类" class="headerlink" title="QueryRunner类"></a>QueryRunner类</h2><ul><li><p>QueryRunner类简化了执行SQL语句的代码，它与ResultSetHandler组合在一起就能完成大部分的数据库操作，大大的减少了编码量。</p></li><li><p>QueryRunner类提供了带有一个参数的构造方法，该方法以javax.sql.DataSource作为参数传递到QueryRunner的构造方法中来获取Connection对象。针对不同的数据库操作，QueryRunner类提供了几种常见的方法，具体如下：</p><pre><code>  query(String sql, ResultSetHandler rsh, Object… params)方法  update(String sql, Object… params)方法  update(String sql)方法</code></pre></li></ul><blockquote><p>params用SQL语句中的参数(?)置换，当有多个参数时有如下两种方法</p></blockquote><pre><code>    update(sql,1,2,3);  //直接用逗号隔开    update(sql,new Object[]&#123;1,2,3&#125;);  //创建一个数组</code></pre><h2 id="ResultSetHandler接口"><a href="#ResultSetHandler接口" class="headerlink" title="ResultSetHandler接口"></a>ResultSetHandler接口</h2><ul><li>ResultSetHandler接口用于处理ResultSet结果集，它可以将结果集中的数据转为不同的形式。根据结果集中数据类型的不同，ResultSetHandler提供了几种常见的实现类，具体如下：<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/26/35af9fad43f9e640a8b35da64df05e28.png"></li></ul><h2 id="ResultSetHandler实现类"><a href="#ResultSetHandler实现类" class="headerlink" title="ResultSetHandler实现类"></a>ResultSetHandler实现类</h2><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/26/60428a3d66600833c459e7aa6d744a7f.png"></p><h2 id="DBUtils实现CURD"><a href="#DBUtils实现CURD" class="headerlink" title="DBUtils实现CURD"></a>DBUtils实现CURD</h2><p>项目工程总览<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/26/6da3beff6a7b6449492f773029ddd436.png"><br>搭建数据库</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">database</span> student;</span><br><span class="line"><span class="keyword">use</span> student;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> <span class="keyword">user</span>(<span class="keyword">id</span> <span class="built_in">int</span> primary <span class="keyword">key</span> auto_increment,<span class="keyword">name</span> <span class="built_in">varchar</span>(<span class="number">255</span>),<span class="keyword">password</span> <span class="built_in">varchar</span>(<span class="number">255</span>));</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//封装用户信息</span></span><br><span class="line"><span class="keyword">package</span> UserBean;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line"><span class="keyword">private</span> String name;</span><br><span class="line"><span class="keyword">private</span> String password;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> id;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.id = id;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> name;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.name = name;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getPassword</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> password;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPassword</span><span class="params">(String password)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.password = password;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//创建C3p0类型</span></span><br><span class="line"><span class="keyword">package</span> C3p0_Utils;</span><br><span class="line"><span class="keyword">import</span> javax.sql.DataSource;</span><br><span class="line"><span class="keyword">import</span> com.mchange.v2.c3p0.ComboPooledDataSource;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">C3p0Utils</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> DataSource ds;</span><br><span class="line"><span class="keyword">static</span> &#123;</span><br><span class="line">ds = <span class="keyword">new</span> ComboPooledDataSource();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> DataSource <span class="title">getDataSource</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> ds;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//封装了对User表增删查改的方法</span></span><br><span class="line"><span class="keyword">package</span> DBUtils_Dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.dbutils.QueryRunner;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.dbutils.handlers.BeanHandler;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.dbutils.handlers.BeanListHandler;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> C3p0_Utils.C3p0Utils;</span><br><span class="line"><span class="keyword">import</span> UserBean.User;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DBUtilsDao</span> </span>&#123;</span><br><span class="line"><span class="comment">// 查询所有，返回List集合</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List <span class="title">findAll</span><span class="params">()</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line"><span class="comment">// 创建QueryRunner对象</span></span><br><span class="line">QueryRunner runner = <span class="keyword">new</span> QueryRunner(C3p0Utils.getDataSource());</span><br><span class="line"><span class="comment">// 写SQL语句</span></span><br><span class="line">String sql = <span class="string">&quot;select * from user&quot;</span>;</span><br><span class="line"><span class="comment">// 调用方法</span></span><br><span class="line">List list = (List) runner.query(sql,</span><br><span class="line">                     <span class="keyword">new</span> BeanListHandler(User.class));</span><br><span class="line"><span class="keyword">return</span> list;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 查询单个，返回对象</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> User <span class="title">find</span><span class="params">(<span class="keyword">int</span> id)</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line"><span class="comment">// 创建QueryRunner对象</span></span><br><span class="line">QueryRunner runner = <span class="keyword">new</span> QueryRunner(C3p0Utils.getDataSource());</span><br><span class="line"><span class="comment">// 写SQL语句</span></span><br><span class="line">String sql = <span class="string">&quot;select * from user where id=?&quot;</span>;</span><br><span class="line"><span class="comment">// 调用方法</span></span><br><span class="line">User user = (User) runner.query(sql, </span><br><span class="line">                 <span class="keyword">new</span> BeanHandler(User.class), <span class="keyword">new</span> Object[] &#123; id &#125;);</span><br><span class="line"><span class="keyword">return</span> user;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 添加用户的操作</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Boolean <span class="title">insert</span><span class="params">(User user)</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line"><span class="comment">// 创建QueryRunner对象</span></span><br><span class="line">QueryRunner runner = <span class="keyword">new</span> QueryRunner(C3p0Utils.getDataSource());</span><br><span class="line"><span class="comment">// 写SQL语句</span></span><br><span class="line">String sql = <span class="string">&quot;insert into user (name,password) values (?,?)&quot;</span>;</span><br><span class="line"><span class="comment">// 调用方法</span></span><br><span class="line"><span class="keyword">int</span> num = runner.update(sql,</span><br><span class="line"><span class="keyword">new</span> Object[] &#123; user.getName(), user.getPassword() &#125;);</span><br><span class="line"><span class="keyword">if</span> (num &gt; <span class="number">0</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 修改用户的操作</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Boolean <span class="title">update</span><span class="params">(User user)</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line"><span class="comment">// 创建QueryRunner对象</span></span><br><span class="line">QueryRunner runner = <span class="keyword">new</span> QueryRunner(C3p0Utils.getDataSource());</span><br><span class="line"><span class="comment">// 写SQL语句</span></span><br><span class="line">String sql = <span class="string">&quot;update  user set name=?,password=? where id=?&quot;</span>;</span><br><span class="line"><span class="comment">// 调用方法</span></span><br><span class="line"><span class="keyword">int</span> num = runner.update(sql, <span class="keyword">new</span> Object[] &#123; user.getName(),</span><br><span class="line">                     user.getPassword(),user.getId() &#125;);</span><br><span class="line"><span class="keyword">if</span> (num &gt; <span class="number">0</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 删除用户的操作</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Boolean <span class="title">delete</span><span class="params">(<span class="keyword">int</span> id)</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line"><span class="comment">// 创建QueryRunner对象</span></span><br><span class="line">QueryRunner runner = <span class="keyword">new</span> QueryRunner(C3p0Utils.getDataSource());</span><br><span class="line"><span class="comment">// 写SQL语句</span></span><br><span class="line">String sql = <span class="string">&quot;delete from user where id=?&quot;</span>;</span><br><span class="line"><span class="comment">// 调用方法</span></span><br><span class="line"><span class="keyword">int</span> num = runner.update(sql, id);</span><br><span class="line"><span class="keyword">if</span> (num &gt; <span class="number">0</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--c3p0-config配置--&gt;</span></span><br><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">c3p0-config</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">default-config</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driverClass&quot;</span>&gt;</span>com.mysql.jdbc.Driver<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;jdbcUrl&quot;</span>&gt;</span></span><br><span class="line">     jdbc:mysql://localhost:3306/student</span><br><span class="line">     <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;user&quot;</span>&gt;</span>root<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span>&gt;</span>root<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;checkoutTimeout&quot;</span>&gt;</span>30000<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;initialPoolSize&quot;</span>&gt;</span>10<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;maxIdleTime&quot;</span>&gt;</span>30<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;maxPoolSize&quot;</span>&gt;</span>100<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;minPoolSize&quot;</span>&gt;</span>10<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;maxStatements&quot;</span>&gt;</span>200<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">default-config</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">named-config</span> <span class="attr">name</span>=<span class="string">&quot;itcast&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driverClass&quot;</span>&gt;</span>com.mysql.jdbc.Driver<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;jdbcUrl&quot;</span>&gt;</span></span><br><span class="line">           jdbc:mysql://localhost:3306/student</span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;user&quot;</span>&gt;</span>root<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span>&gt;</span>root<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;initialPoolSize&quot;</span>&gt;</span>5<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;maxPoolSize&quot;</span>&gt;</span>15<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">named-config</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">c3p0-config</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//插入数据</span></span><br><span class="line"><span class="keyword">package</span> DBUtils_Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> DBUtils_Dao.DBUtilsDao;</span><br><span class="line"><span class="keyword">import</span> UserBean.User;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Insert_test</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> DBUtilsDao dao = <span class="keyword">new</span> DBUtilsDao();</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">testInsert</span><span class="params">()</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">User user = <span class="keyword">new</span> User();</span><br><span class="line">user.setName(<span class="string">&quot;zhaoliu&quot;</span>);</span><br><span class="line">user.setPassword(<span class="string">&quot;666666&quot;</span>);</span><br><span class="line"><span class="keyword">boolean</span> b = dao.insert(user);</span><br><span class="line">System.out.println(b);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">testInsert();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//更新数据</span></span><br><span class="line"><span class="keyword">package</span> DBUtils_Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> DBUtils_Dao.DBUtilsDao;</span><br><span class="line"><span class="keyword">import</span> UserBean.User;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Update_test</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> DBUtilsDao dao = <span class="keyword">new</span> DBUtilsDao();</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">testupdate</span><span class="params">()</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">User user = <span class="keyword">new</span> User();</span><br><span class="line">user.setName(<span class="string">&quot;zhaoliu&quot;</span>);</span><br><span class="line">user.setPassword(<span class="string">&quot;666777&quot;</span>);</span><br><span class="line">user.setId(<span class="number">2</span>);</span><br><span class="line"><span class="keyword">boolean</span> b = dao.update(user);</span><br><span class="line">System.out.println(b);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">testupdate();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//根据ID删除</span></span><br><span class="line"><span class="keyword">package</span> DBUtils_Test;</span><br><span class="line"><span class="keyword">import</span> DBUtils_Dao.DBUtilsDao;</span><br><span class="line"><span class="keyword">import</span> UserBean.User;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Delete_Test</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> DBUtilsDao dao = <span class="keyword">new</span> DBUtilsDao();</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">testdelete</span><span class="params">()</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line"><span class="keyword">boolean</span> b = dao.delete(<span class="number">2</span>);</span><br><span class="line">System.out.println(b);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">testdelete();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//根据ID查询</span></span><br><span class="line"><span class="keyword">package</span> DBUtils_Test;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> DBUtils_Dao.DBUtilsDao;</span><br><span class="line"><span class="keyword">import</span> UserBean.User;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Query_Test</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> DBUtilsDao dao = <span class="keyword">new</span> DBUtilsDao();</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">testfind</span><span class="params">()</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">User user = dao.find(<span class="number">3</span>);</span><br><span class="line">System.out.println(user.getId() + <span class="string">&quot;,&quot;</span> + user.getName() + <span class="string">&quot;,&quot;</span></span><br><span class="line">+ user.getPassword());</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">testfind();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Web前端 </category>
          
          <category> JavaWeb </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaWeb </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaWeb🌍过滤/监听</title>
      <link href="2021/01/15/%E5%89%8D%E7%AB%AF/JavaWeb/JavaWeb_Servlet%E9%AB%98%E7%BA%A7/"/>
      <url>2021/01/15/%E5%89%8D%E7%AB%AF/JavaWeb/JavaWeb_Servlet%E9%AB%98%E7%BA%A7/</url>
      
        <content type="html"><![CDATA[<h1 id="Filter过滤器"><a href="#Filter过滤器" class="headerlink" title="Filter过滤器"></a>Filter过滤器</h1><p>Filter被称作过滤器或者拦截器，其基本功能就是对Servlet容器调用Servlet的过程进行拦截，从而在Servlet进行响应处理前后实现一些特殊功能。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/26/a0070a2b3b2d8c5e5a60004e29bf9cad.png"><br>当浏览器访问服务器中的目标资源时，会被Filter拦截，在Filter中进行预处理操作，然后再将请求转发给目标资源。当服务器接收到这个请求后会对其进行响应，在服务器处理响应的过程中，也需要先将响应结果发送给拦截器，在拦截器中对响应结果进行处理后，才会发送给客户端。</p><ul><li><p>Filter过滤器就是一个实现了javax.servlet.Filter接口的类，在javax.servlet.Filter接口中定义了三个方法</p><ol><li>init(FilterConfig filterConfig)</li><li>doFilter(ServletRequest request,ServletResponse response,FilterChain chain）</li><li>destroy()</li></ol></li><li><p>第一个Filter程序</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> MyFilter;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request,HttpServletResponse response)</span><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">response.getWriter().write(<span class="string">&quot;Hello MyServlet &quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">doGet(request, response);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>MyServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">MyFilter.MyServlet</span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>MyServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/MyServlet<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/26/35e5e770fb47c821d54b3d7663cc729e.png"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> MyFilter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.Filter;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyFilter</span> <span class="keyword">implements</span> <span class="title">Filter</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(FilterConfig fConfig)</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line"><span class="comment">// 过滤器对象在初始化时调用，可以配置一些初始化参数</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doFilter</span><span class="params">(ServletRequest request,</span></span></span><br><span class="line"><span class="function"><span class="params">     ServletResponse response,</span></span></span><br><span class="line"><span class="function"><span class="params">FilterChain chain)</span> <span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line"><span class="comment">// 用于拦截用户的请求，如果和当前过滤器的拦截路径匹配，该方法会被调用</span></span><br><span class="line">PrintWriter out=response.getWriter();</span><br><span class="line">out.write(<span class="string">&quot;Hello MyFilter&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">// 过滤器对象在销毁时自动调用，释放资源</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--filter用于注册一个Filter--&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line"> <span class="comment">&lt;!--filter-name用于设置Filter名称--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>MyFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--filter-class用于设置Filter完整名称--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>MyFilter.MyFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line"> <span class="comment">&lt;!--filter-mapping用于设置一个过滤器所拦截的资源--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>MyFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--filter-pattern用于匹配用户请求的URL--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/MyServlet<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/26/4e88d237279d76c11d70b663827d2601.png"></p><h2 id="Filter映射"><a href="#Filter映射" class="headerlink" title="Filter映射"></a>Filter映射</h2><ul><li>Filter拦截的资源需要在web.xml文件中进行配置，即Filter映射。</li><li>Filter的映射方式可分为两种、<ol><li>使用通配符（”*“）拦截用户所有请q求<pre><code> &lt;filter&gt;     &lt;filter-name&gt;MyFilter&lt;/filter-name&gt;     &lt;filter-class&gt;MyFilter.MyFilter&lt;/filter-class&gt; &lt;/filter&gt; &lt;filter-mapping&gt;     &lt;filter-name&gt;MyFilter&lt;/filter-name&gt;     &lt;url-pattern&gt;/*&lt;/url-pattern&gt;</code></pre></li><li>拦截不同方式请求<br>&lt;filter-mapping&gt;元素中有一个特殊的子元素&lt;dispatcher&gt;，该元素用于指定过滤器所拦截的资源被Servlet容器调用的方式</li></ol></li></ul><blockquote><p>&lt;dispatcher&gt;元素的值共有四个：REQUEST、INCLUDE、FORWARD、ERROR。</p></blockquote><ol><li>REQUEST<br>当用户直接访问页面时，Web容器将会调用过滤器。如果目标资源是通过RequestDispatcher的include()或forward()方法访问的，那么该过滤器将不会被调用。</li><li>INCLUDE<br>如果目标资源是通过RequestDispatcher的include()方法访问的，那么该过滤器将被调用</li><li>FORWARD<br>如果目标资源是通过RequestDispatcher的forward()方法访问的，那么该过滤器将被调用</li><li>ERROR<br>如果目标资源是通过声明式异常处理机制调用的，那么该过滤器将被调用</li></ol><h2 id="Filter链"><a href="#Filter链" class="headerlink" title="Filter链"></a>Filter链</h2><ul><li>在一个Web应用程序中可以注册多个Filter程序，每个Filter程序都可以针对某一个URL进行拦截。如果多个Filter程序都对同一个URL进行拦截，那么这些Filter就会组成一个Filter链（也叫过滤器链）。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/26/c47e95f6b30100ebb21260fa2ae176b9.png"></p><blockquote><p>Filter链用FilterChain对象来表示，FilterChain对象中有一个doFilter()方法，该方法作用就是让Filter链上的当前过滤器放行，请求进入下一个Filter</p></blockquote><h2 id="Filter接口"><a href="#Filter接口" class="headerlink" title="Filter接口"></a>Filter接口</h2><p>为了获取Filter程序在web.xml文件中的配置信息，Servlet API提供了一个<code>FilterConfig</code>接口，该接口封装了Filter程序在web.xml中的所有注册信息，并且提供了一系列获取这些配置信息的方法。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/26/b9b412777070751161a3d1271a01a123.png"></p><h2 id="实现自动登录"><a href="#实现自动登录" class="headerlink" title="实现自动登录"></a>实现自动登录</h2><h2 id="统一全站编码"><a href="#统一全站编码" class="headerlink" title="统一全站编码"></a>统一全站编码</h2><h1 id="Listener监听器"><a href="#Listener监听器" class="headerlink" title="Listener监听器"></a>Listener监听器</h1><p>在程序开发中，经常需要对某些事件进行监听，如监听鼠标点击事件、监听键盘按下事件等，此时就需要使用事件监听器。<br>事件监听器用于对程序中发生的事件进行监听，在监听的过程中会涉及几个重要组成部分:</p><ul><li><p>事件（Event）<br>用户的一个操作，如点击一个按钮、调用一个方法、创建一个对象等。</p></li><li><p>事件源<br>产生事件的对象。</p></li><li><p>事件监听器（Listener）<br>负责监听发生在事件源上的事件。</p></li><li><p>事件处理器<br>监听器的成员方法，当事件发生的时候会触发对应的处理器（成员方法）。</p></li></ul><p>事件监听器在进行工作时，可分为几个步骤，具体如下：</p><ol><li>注册监听器<br>将监听器绑定到事件源，也就是注册监听器</li><li>传递事件对象<br>事件发生时会触发监听器的成员方法，即事件处理器，传递事件对象。</li><li>处理时间源<br>事件处理器通过事件对象获得事件源，并对事件源进行处理。</li></ol><p>在开发Web应用程序时，也经常会使用事件监听器，这个事件监听器被称为Servlet事件监听器，Servlet事件监听器是一个实现特定接口的Java程序，专门用于监听Web应用程序，根据监听事件的不同可将这些接口分为三类。</p><ul><li><p>用于监听域对象创建和销毁的事件监听器<br>  ServletContextListener接口<br>  HttpSessionListener接口<br>  ServletRequestListener接口</p></li><li><p>用于监听域对象属性增加和删除的事件监听器<br>  ServletContextAttributeListener接口<br>  HttpSessionAttributeListener接口<br>  ServletRequestAttributeListener接口</p></li><li><p>用于监听绑定到HttpSession域中某个对象状态的事件监听器<br>  HttpSessionBindingListener接口<br>  HttpSessionActivationListener接口</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Web前端 </category>
          
          <category> JavaWeb </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaWeb </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaWeb🌍JSP技术</title>
      <link href="2021/01/15/%E5%89%8D%E7%AB%AF/JavaWeb/JavaWeb_JSTL/"/>
      <url>2021/01/15/%E5%89%8D%E7%AB%AF/JavaWeb/JavaWeb_JSTL/</url>
      
        <content type="html"><![CDATA[<h1 id="JSTL"><a href="#JSTL" class="headerlink" title="JSTL"></a>JSTL</h1><p>从JSP1.1规范开始，JSP就支持使用自定义标签，使用自定义标签大大降低了JSP页面的复杂度，同时增强了代码的重用性。<br>为此，许多Web应用厂商都定制了自身应用的标签库，然而同一功能的标签由不同的Web应用厂商制定可能是不同的，这就导致市面上出现了很多功能相同的标签，令网页制作者无从选择。</p><ul><li>为了解决同一功能标签的不统一问题，Sun公司制定了一套标准标签库（<code>JavaServer Pages Standard Tag Library</code>），简称JSTL。</li><li>JSTL虽然被称为标准标签库，而实际上这个标签库是由5个不同功能的标签库共同组成。在JSTL1.1规范中，为这5个标签库分别指定了不同的URI以及建议使用的前缀。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/26/3acaf694b2d74be72e7c76bb25a68936.png"></p><ul><li>Core是一个核心标签库，它包含了实现Web应用中通用操作的标签。</li><li>I18N是一个国际化/格式化标签库，它包含实现Web应用程序的国际化标签和格式化标签。</li><li>SQL是一个数据库标签库，它包含了用于访问数据库和对数据库中的数据进行操作的标签。</li><li>XML是一个操作XML文档的标签库，它包含对XML文档中的数据进行操作的标签。</li><li>Function是一个函数标签库，它提供了一套自定义EL函数，包含了JSP网页制作用到的字符串操作。</li></ul><h1 id="JSTL下载和使用"><a href="#JSTL下载和使用" class="headerlink" title="JSTL下载和使用"></a>JSTL下载和使用</h1><ul><li><p>从Apache的网站下载JSTL的JAR包。戳<a href="http://archive.apache.org/dist/jakarta/taglibs/standard/binaries/">JSTL下载链接</a>，下载<a href="http://archive.apache.org/dist/jakarta/taglibs/standard/binaries/jakarta-taglibs-standard-1.1.2.zip">jakarta-taglibs-standard-1.1.2.zip</a></p></li><li><p>下载解压后，进入bin目录<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/26/4dcc09a67c75dc4e132c3772673ba996.png"></p></li><li><p>把jstl.jar和standard.jar复制到eclipse工程项目中—【WebContent】—【WEB-INF】的lib目录下<br><a href="https://www.runoob.com/jsp/jsp-jstl.html">JSP 标准标签库（JSTL）</a><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/26/23ca8fa9e99fc2a66233331916ff9d11.png"></p></li></ul><h1 id="Core标签库"><a href="#Core标签库" class="headerlink" title="Core标签库"></a>Core标签库</h1><h2 id="lt-c-out-gt-标签"><a href="#lt-c-out-gt-标签" class="headerlink" title="&lt;c:out&gt;标签"></a>&lt;c:out&gt;标签</h2><ul><li>&lt;c:out&gt;标签可以将一段文本内容或表达式的结果输出到客户端。</li><li>语法1：没有标签体的情况<pre><code>  &lt;c:out value=&quot;value&quot; [default=&quot;defaultValue&quot;]     [escapeXml=&quot;&#123;true|false&#125;&quot;]/&gt;</code></pre></li></ul><p><code>value</code>属性：用于指定输出的文本内容<br><code>default</code>属性：指定当value属性为null时所输出的默认值。</p><ul><li>语法2：有标签体的情况，在标签体中指定输出的默认值<pre><code>  &lt;c:out value=&quot;value&quot; [escapeXml=&quot;&#123;true|false&#125;&quot;]&gt;        defaultValue    &lt;/c:out&gt;</code></pre></li></ul><p><code>escapeXml</code>用于指定是否将&gt;、&lt;、&amp;、’、” 等特殊字符进行HTML编码转换后再进行输出，默认值为true。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">language</span>=<span class="string">&quot;java&quot;</span> <span class="attr">contentType</span>=<span class="string">&quot;text/html;charset=utf-8&quot;</span> <span class="attr">pageEncoding</span>=<span class="string">&quot;utf-8&quot;</span>%&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">taglib</span> <span class="attr">uri</span>=<span class="string">&quot;http://java.sun.com/jsp/jstl/core&quot;</span> <span class="attr">prefix</span>=<span class="string">&quot;c&quot;</span>%&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%--第1个out标签</span> <span class="attr">--</span>%&gt;</span></span><br><span class="line">userName属性的值为：</span><br><span class="line"><span class="tag">&lt;<span class="name">c:out</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;param.username&#125;&quot;</span> <span class="attr">default</span>=<span class="string">&quot;unknown&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%--第2个out标签</span> <span class="attr">--</span>%&gt;</span></span><br><span class="line">userName属性的值为：</span><br><span class="line"><span class="tag">&lt;<span class="name">c:out</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;param.username&#125;&quot;</span>&gt;</span></span><br><span class="line">       unknown</span><br><span class="line"><span class="tag">&lt;/<span class="name">c:out</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/26/e8f8f8492c4229ee4076751ca042270f.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/26/a03486dba7bee3f4ff083de15d1e3d59.png"></p><h2 id="lt-c-if-gt-标签"><a href="#lt-c-if-gt-标签" class="headerlink" title="&lt;c:if&gt;标签"></a>&lt;c:if&gt;标签</h2><ul><li>在程序开发中，需要使用if语句进行条件判断，如果要在JSP页面中进行条件判断，就需要使用Core标签库提供的&lt;c:if&gt;标签，用于完成JSP页面中的条件判断。</li><li>语法1：没有标签体的情况<pre><code>  &lt;c:if test=&quot;testCondition&quot; var=&quot;resulst&quot;    [scope=&quot;&#123;page|request|session|application&#125;&quot;]/&gt;</code></pre></li></ul><p>test用于设置逻辑表达式<br>var用于用于指定逻辑表达式中变量的名字</p><ul><li>语法2：有标签体的情况，在标签体中指定要输出的内容<pre><code>       &lt;c:if test=&quot;testCondition&quot; var=&quot;resulst&quot;            [scope=&quot;&#123;page|request|session|application&#125;&quot;]&gt;              body content         &lt;/c:if&gt;</code></pre></li></ul><p>scope用于指定var变量的作用范围，默认值为page。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">language</span>=<span class="string">&quot;java&quot;</span> <span class="attr">contentType</span>=<span class="string">&quot;text/html; charset=utf-8&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">pageEncoding</span>=<span class="string">&quot;utf-8&quot;</span> <span class="attr">import</span>=<span class="string">&quot;java.util.*&quot;</span>%&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">taglib</span> <span class="attr">uri</span>=<span class="string">&quot;http://java.sun.com/jsp/jstl/core&quot;</span> <span class="attr">prefix</span>=<span class="string">&quot;c&quot;</span>%&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">c:set</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span> <span class="attr">var</span>=<span class="string">&quot;visitCount&quot;</span> <span class="attr">property</span>=<span class="string">&quot;visitCount&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">c:if</span> <span class="attr">test</span>=<span class="string">&quot;$&#123;visitCount==1 &#125;&quot;</span>&gt;</span> <span class="comment">&lt;!--判断访问次数是否为1--&gt;</span></span><br><span class="line">This is you first visit. Welcome to the site!</span><br><span class="line"><span class="tag">&lt;/<span class="name">c:if</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/26/00cf9d98f17ce855ac000d37eea71381.png"></p><h2 id="lt-c-choose-gt-标签"><a href="#lt-c-choose-gt-标签" class="headerlink" title="&lt;c:choose&gt;标签"></a>&lt;c:choose&gt;标签</h2><p>Core标签库提供了&lt;c:choose&gt;标签，该标签用于指定多个条件选择的组合边界，它必须与&lt;c:when&gt;、&lt;c:otherwise&gt;标签一起使用。&lt;c:choose&gt;标签没有属性，在它的标签体中只能嵌套一个或多个&lt;c:when&gt;标签和零个或一个&lt;c:otherwise&gt;标签，并且同一个&lt;c:choose&gt;标签中所有的&lt;c:when&gt;子标签必须出现在&lt;c:otherwise&gt;子标签之前，其语法格式如下：</p><pre><code>    &lt;c:choose&gt;     Body content(&lt;when&gt; and &lt;otherwise&gt; subtags)    &lt;/c:choose&gt;</code></pre><ul><li><p>&lt;c:when&gt;标签只有一个test属性，该属性的值为布尔类型。test属性支持动态值，其值可以是一个条件表达式，如果条件表达式的值为true，就执行这个&lt;c:when&gt;标签体的内容，其语法格式如下：</p><pre><code>  &lt;c:when test=&quot;testCondition&quot;&gt;Body content&lt;/c:when&gt;</code></pre></li><li><p>&lt;c:otherwise&gt;标签没有属性，它必须作为&lt;c:choose&gt;标签最后分支出现，当所有的&lt;c:when&gt;标签的test条件都不成立时，才执行和输出&lt;c:otherwise&gt;标签体的内容，其语法格式如下：</p><pre><code>  &lt;c:otherwise&gt;conditional block&lt;/c:otherwise&gt;</code></pre></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">language</span>=<span class="string">&quot;java&quot;</span> <span class="attr">contentType</span>=<span class="string">&quot;text/html; charset=utf-8&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">pageEncoding</span>=<span class="string">&quot;utf-8&quot;</span> <span class="attr">import</span>=<span class="string">&quot;java.util.*&quot;</span>%&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">taglib</span> <span class="attr">uri</span>=<span class="string">&quot;http://java.sun.com/jsp/jstl/core&quot;</span> <span class="attr">prefix</span>=<span class="string">&quot;c&quot;</span>%&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">c:choose</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">c:when</span> <span class="attr">test</span>=<span class="string">&quot;$&#123;empty param.username&#125;&quot;</span>&gt;</span></span><br><span class="line">    unKnown user.</span><br><span class="line">    <span class="tag">&lt;/<span class="name">c:when</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">c:when</span> <span class="attr">test</span>=<span class="string">&quot;$&#123;param.username==&#x27;itcast&#x27;&#125;&quot;</span>&gt;</span></span><br><span class="line">    $&#123; param.username&#125; is manager.</span><br><span class="line">    <span class="tag">&lt;/<span class="name">c:when</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">c:otherwise</span>&gt;</span></span><br><span class="line">     $&#123; param.username&#125; is employee.</span><br><span class="line">    <span class="tag">&lt;/<span class="name">c:otherwise</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">c:choose</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/26/6f51066dbe50bacf283b5085ab3c3b88.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/26/f9b1950fa479970e7908cff429ca4901.png"></p><h2 id="lt-c-foreach-gt-标签"><a href="#lt-c-foreach-gt-标签" class="headerlink" title="&lt;c:foreach&gt;标签"></a>&lt;c:foreach&gt;标签</h2><p>在JSP页面中，经常需要对集合对象进行<strong>循环迭代操作</strong>，为此，Core标签库提供了一个&lt;c:forEach&gt;标签，该标签专门用于迭代集合对象中的元素，如Set、List、Map、数组等，并且能重复执行标签体中的内容。</p><ul><li><p>语法1：迭代包含多个对象的集合</p><pre><code>  &lt;c:forEach [var=&quot;varName&quot;] items=&quot;collection&quot;    [varStatus=&quot;varStatusName&quot;]  [begin=&quot;begin&quot;] [end=&quot;end&quot;] [step=&quot;step&quot;]&gt;  body content</code></pre><p>   </p></li></ul><p>var用于指将当前迭代到的元素保存到page域中的名称<br>items用于指定将要迭代的集合对象<br>varStatus用于指定当前迭代状态信息的对象保存到page域中的名称<br>begin用于指定从集合中第几个元素开始进行迭代，begin的索引值从0开始<br>step用于指定迭代的步长，即迭代因子的增量</p><ul><li>语法2：迭代指定范围内的集合<pre><code>  &lt;c:forEach [var=&quot;varName&quot;] [varStatus=&quot;varStatusName&quot;] begin=&quot;begin&quot;   end=&quot;end&quot; [step=&quot;step&quot;]&gt;  body content</code></pre>   </li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">language</span>=<span class="string">&quot;java&quot;</span> <span class="attr">contentType</span>=<span class="string">&quot;text/html; charset=utf-8&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">pageEncoding</span>=<span class="string">&quot;utf-8&quot;</span> <span class="attr">import</span>=<span class="string">&quot;java.util.*&quot;</span>%&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">taglib</span> <span class="attr">uri</span>=<span class="string">&quot;http://java.sun.com/jsp/jstl/core&quot;</span> <span class="attr">prefix</span>=<span class="string">&quot;c&quot;</span>%&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%</span></span></span><br><span class="line"><span class="tag"><span class="attr">String</span>[] <span class="attr">fruits</span> = <span class="string">&#123;</span> &quot;<span class="attr">apple</span>&quot;, &quot;<span class="attr">orange</span>&quot;, &quot;<span class="attr">grape</span>&quot;, &quot;<span class="attr">banana</span>&quot; &#125;;</span></span><br><span class="line"><span class="tag">%&gt;</span></span><br><span class="line">String数组中的元素：</span><br><span class="line"><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">c:forEach</span> <span class="attr">var</span>=<span class="string">&quot;name&quot;</span> <span class="attr">items</span>=<span class="string">&quot;&lt;%=fruits%&gt;&quot;</span>&gt;</span></span><br><span class="line"> $&#123;name&#125;<span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">c:forEach</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%</span></span></span><br><span class="line"><span class="tag"><span class="attr">Map</span> <span class="attr">userMap</span> = <span class="string">new</span> <span class="attr">HashMap</span>();</span></span><br><span class="line"><span class="tag"><span class="attr">userMap.put</span>(&quot;<span class="attr">Tom</span>&quot;, &quot;<span class="attr">123</span>&quot;);</span></span><br><span class="line"><span class="tag"><span class="attr">userMap.put</span>(&quot;<span class="attr">Make</span>&quot;, &quot;<span class="attr">123</span>&quot;);</span></span><br><span class="line"><span class="tag"><span class="attr">userMap.put</span>(&quot;<span class="attr">Lina</span>&quot;, &quot;<span class="attr">123</span>&quot;);</span></span><br><span class="line"><span class="tag">%&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>/&gt;</span></span><br><span class="line">HashMap集合中的元素：</span><br><span class="line"><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">c:forEach</span> <span class="attr">var</span>=<span class="string">&quot;entry&quot;</span> <span class="attr">items</span>=<span class="string">&quot;&lt;%=userMap%&gt;&quot;</span>&gt;</span></span><br><span class="line">$&#123;entry.key&#125;<span class="symbol">&amp;nbsp;</span>$&#123;entry.value&#125;<span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">c:forEach</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/26/33af5e2d21a9f86c0c8abd585360a873.png"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">language</span>=<span class="string">&quot;java&quot;</span> <span class="attr">contentType</span>=<span class="string">&quot;text/html; charset=utf-8&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">pageEncoding</span>=<span class="string">&quot;utf-8&quot;</span> <span class="attr">import</span>=<span class="string">&quot;java.util.*&quot;</span>%&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">taglib</span> <span class="attr">uri</span>=<span class="string">&quot;http://java.sun.com/jsp/jstl/core&quot;</span> <span class="attr">prefix</span>=<span class="string">&quot;c&quot;</span>%&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  colorsList集合（指定迭代范围和步长）<span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%</span></span></span><br><span class="line"><span class="tag"><span class="attr">List</span> <span class="attr">colorsList</span>=<span class="string">new</span> <span class="attr">ArrayList</span>();</span></span><br><span class="line"><span class="tag"><span class="attr">colorsList.add</span>(&quot;<span class="attr">red</span>&quot;);</span></span><br><span class="line"><span class="tag"><span class="attr">colorsList.add</span>(&quot;<span class="attr">yellow</span>&quot;);</span></span><br><span class="line"><span class="tag"><span class="attr">colorsList.add</span>(&quot;<span class="attr">blue</span>&quot;);</span></span><br><span class="line"><span class="tag"><span class="attr">colorsList.add</span>(&quot;<span class="attr">green</span>&quot;);</span></span><br><span class="line"><span class="tag"><span class="attr">colorsList.add</span>(&quot;<span class="attr">black</span>&quot;);</span></span><br><span class="line"><span class="tag">%&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">c:forEach</span> <span class="attr">var</span>=<span class="string">&quot;color&quot;</span> <span class="attr">items</span>=<span class="string">&quot;&lt;%=colorsList%&gt;&quot;</span> <span class="attr">begin</span>=<span class="string">&quot;1&quot;</span> </span></span><br><span class="line"><span class="tag">     <span class="attr">end</span>=<span class="string">&quot;3&quot;</span> <span class="attr">step</span>=<span class="string">&quot;2&quot;</span>&gt;</span></span><br><span class="line">$&#123;color&#125;<span class="symbol">&amp;nbsp;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">c:forEach</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/26/2c56de61d519b9f97967073f5f211d98.png"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">language</span>=<span class="string">&quot;java&quot;</span> <span class="attr">contentType</span>=<span class="string">&quot;text/html; charset=utf-8&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">pageEncoding</span>=<span class="string">&quot;utf-8&quot;</span> <span class="attr">import</span>=<span class="string">&quot;java.util.*&quot;</span>%&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">taglib</span> <span class="attr">uri</span>=<span class="string">&quot;http://java.sun.com/jsp/jstl/core&quot;</span> <span class="attr">prefix</span>=<span class="string">&quot;c&quot;</span>%&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">style</span>=<span class="string">&quot;text-align: center;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%</span></span></span><br><span class="line"><span class="tag"><span class="attr">List</span> <span class="attr">userList</span> = <span class="string">new</span> <span class="attr">ArrayList</span>();</span></span><br><span class="line"><span class="tag"><span class="attr">userList.add</span>(&quot;<span class="attr">Tom</span>&quot;);</span></span><br><span class="line"><span class="tag"><span class="attr">userList.add</span>(&quot;<span class="attr">Make</span>&quot;);</span></span><br><span class="line"><span class="tag"><span class="attr">userList.add</span>(&quot;<span class="attr">Lina</span>&quot;);</span></span><br><span class="line"><span class="tag">%&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;1&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>序号<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>索引<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>是否为第一个元素<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>是否为最后一个元素<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>元素的值<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">c:forEach</span> <span class="attr">var</span>=<span class="string">&quot;name&quot;</span> <span class="attr">items</span>=<span class="string">&quot;&lt;%=userList%&gt;&quot;</span> <span class="attr">varStatus</span>=<span class="string">&quot;status&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>$&#123;status.count&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>$&#123;status.index&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>$&#123;status.first&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>$&#123;status.last&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>$&#123;name&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">c:forEach</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/26/c3c7b0a48727dbbef1d278ef89d3527e.png"></p>]]></content>
      
      
      <categories>
          
          <category> Web前端 </category>
          
          <category> JavaWeb </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaWeb </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaWeb🌍EL表达式</title>
      <link href="2021/01/15/%E5%89%8D%E7%AB%AF/JavaWeb/JavaWeb_EL%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
      <url>2021/01/15/%E5%89%8D%E7%AB%AF/JavaWeb/JavaWeb_EL%E8%A1%A8%E8%BE%BE%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<h1 id="JavaBean"><a href="#JavaBean" class="headerlink" title="JavaBean"></a>JavaBean</h1><ul><li>JavaBean 是Java开发语言中一个可以重复使用的软件组件，本质是一个Java类</li><li>编码规范：具有一个公共的、无参的构造方法，提供公共的setter方法和getter方法</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Book</span></span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">double</span> price;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">getPrice</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> price;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">publice <span class="keyword">void</span> <span class="title">setPrice</span><span class="params">(<span class="keyword">double</span> price)</span></span>&#123;</span><br><span class="line"><span class="keyword">this</span>.price=price;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>如果一个属性只有getter方法，则该属性为只读属性</li><li>如果一个属性只有setter方法，则该属性为只写属性</li><li>如果一个属性既有getter方法，又有setter方法，则该属性为读写属性</li><li>如果属性的类型为boolean，它的命名方式应该使用<code>is/set</code>而不是get/set。</li></ul><h1 id="BeanUtils"><a href="#BeanUtils" class="headerlink" title="BeanUtils"></a>BeanUtils</h1><ul><li>由于各种Java工具和框架层出不穷，并不能保证属性对应的getter和setter方法总能被调用，因此动态访问Java对象的属性是十分必要的，为此，Apache软件基金会提供了一套简单、易用的API——BeanUtils工具。</li></ul><blockquote><p>需要注意的是，除了BeanUtils工具包外还需要一个logging包来配合使用，logging包中包装了各种日志API的实现。</p></blockquote><ul><li>下载引入第三方包<ol><li>戳<a href="http://commons.apache.org/proper/commons-beanutils/">Apache官网链接</a></li><li>戳<a href="https://www.cnblogs.com/fjdingsd/p/4716268.html">配置教程</a><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/26/b1730a0828d73661667f7aff5a1fcb45.png"></li></ol></li><li>BeanUtils类的常用方法</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/26/1cb10b0d97ff61b94cf7348cef203fa7.png"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> beanutils;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> String name;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> name;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.name = name;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getAge</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> age;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(<span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.age = age;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> beanutils;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.beanutils.BeanUtils;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BeanUtilsDemo</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">Person p = <span class="keyword">new</span> Person();</span><br><span class="line"><span class="comment">// 使用BeanUtils为属性赋值</span></span><br><span class="line">BeanUtils.setProperty(p, <span class="string">&quot;name&quot;</span>, <span class="string">&quot;Jack&quot;</span>);</span><br><span class="line">BeanUtils.setProperty(p, <span class="string">&quot;age&quot;</span>, <span class="number">10</span>);</span><br><span class="line"><span class="comment">// 使用BeanUtils获取属性值</span></span><br><span class="line">String name = BeanUtils.getProperty(p, <span class="string">&quot;name&quot;</span>);</span><br><span class="line">String age = BeanUtils.getProperty(p, <span class="string">&quot;age&quot;</span>);</span><br><span class="line">System.out.println(<span class="string">&quot;我的名字是&quot;</span> + name + <span class="string">&quot;,我今年&quot;</span> + age + <span class="string">&quot;岁了！&quot;</span>);</span><br><span class="line"><span class="comment">// 创建map集合，用于存放属性及其属性值</span></span><br><span class="line">Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;String, Object&gt;();</span><br><span class="line">map.put(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;张三&quot;</span>);</span><br><span class="line">map.put(<span class="string">&quot;age&quot;</span>, <span class="number">10</span>);</span><br><span class="line"><span class="comment">// 使用populate()方法为对象的属性赋值</span></span><br><span class="line">BeanUtils.populate(p, map);</span><br><span class="line"><span class="comment">// 打印赋值后对象的信息</span></span><br><span class="line">System.out.println(<span class="string">&quot;姓名：&quot;</span> + p.getName() + <span class="string">&quot;, 年龄：&quot;</span> + p.getAge());</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">运行结果</span></span><br><span class="line"><span class="comment">我的名字是Jack，我今年10岁了</span></span><br><span class="line"><span class="comment">姓名：张三，年龄：10</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h1 id="EL表达式"><a href="#EL表达式" class="headerlink" title="EL表达式"></a>EL表达式</h1><ul><li><p>EL：Expression Language，一种简单的数据访问语言，可以在JSP页面中直接使用！ </p></li><li><p>EL表达式的语法是以“${”符号开始，以“}”符号结束的，具体格式如下：</p><pre><code>       $&#123;表达式&#125;</code></pre></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.servlet;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, </span></span></span><br><span class="line"><span class="function"><span class="params">      HttpServletResponse  response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">request.setAttribute(<span class="string">&quot;username&quot;</span>, <span class="string">&quot;itcast&quot;</span>);</span><br><span class="line">request.setAttribute(<span class="string">&quot;password&quot;</span>, <span class="string">&quot;123&quot;</span>);</span><br><span class="line">         RequestDispatcher dispatcher = request</span><br><span class="line">.getRequestDispatcher(<span class="string">&quot;/myjsp.jsp&quot;</span>);</span><br><span class="line">dispatcher.forward(request, response);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request,</span></span></span><br><span class="line"><span class="function"><span class="params">      HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">doGet(request, response);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">language</span>=<span class="string">&quot;java&quot;</span> <span class="attr">contentType</span>=<span class="string">&quot;text/html; charset=utf-8&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">pageEncoding</span>=<span class="string">&quot;utf-8&quot;</span>%&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">用户名：<span class="tag">&lt;<span class="name">%=request.getAttribute(&quot;username&quot;)%</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span> </span><br><span class="line">密 码：<span class="tag">&lt;<span class="name">%=request.getAttribute(&quot;password&quot;)%</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">使用EL表达式:<span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">用户名：$&#123;username&#125;<span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"> 密 码：$&#123;password&#125;<span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line">/*</span><br><span class="line">运行结果</span><br><span class="line">用户名：itcast</span><br><span class="line">密码：123</span><br><span class="line">--------------------------------</span><br><span class="line">使用EL表达式</span><br><span class="line">用户名：itcast</span><br><span class="line">密码：123</span><br><span class="line">*/</span><br></pre></td></tr></table></figure><h1 id="EL标识符"><a href="#EL标识符" class="headerlink" title="EL标识符"></a>EL标识符</h1><ul><li><p>不能以数字开头</p></li><li><p>不能是EL中的保留字，如and、or、gt</p></li><li><p>不能是EL隐式对象，如pageContext</p></li><li><p>不能包含单引号（’）、双引号（”）、减号（-）和正斜线等特殊字符。</p></li><li><p>保留字就是编程语言里事先定义好并赋予了特殊含义的单词，和其他语言一样，EL表达式中也定义了许多保留字，如false、not等，接下来就列举EL中所有的保留字，具体如下：</p><pre><code>      and         eq           gt           true           instanceof          or         ne           le           false           empty          not         lt           ge           null           div           mod</code></pre></li></ul><h1 id="EL变量常量"><a href="#EL变量常量" class="headerlink" title="EL变量常量"></a>EL变量常量</h1><ul><li><p>EL表达式中的变量就是一个基本的存储单元，EL表达式可以将变量映射到一个对象上，具体示例如下所示：</p><pre><code>       $&#123;product&#125;</code></pre></li></ul><blockquote><p>product就是一个变量。EL表达式中的变量不用事先定义就可以直接使用，例如，表达式${product}就可以访问变量product的值。</p></blockquote><ul><li>EL常量分以下几种：<ol><li>布尔常量<br>布尔常量用于区分一个事物的正反两面，它的值只有两个，分别是true和false</li><li>整型常量<br>整型常量的取值范围是Java语言中定义的常量Long.MIN_VALUE和Long.MAX_VALUE之间，即（-2）63~263-1之间的整数</li><li>浮点型常量<br>浮点数常量的取值范围是Java语言中定义的常量Double.MIN_VALUE到Double.MAX_VALUE之间，即4.9E-324~1.8E308之间的整数</li><li>字符串常量<br>字符串常量是用单引号或双引号引起来的一连串字符。由于字符串常量需要用单引号或双引号引起来，所以字符串本身包含的单引号或双引号需要用反斜杠（\）进行转义，即用“\‘”表示字面意义上的单引号，用“\””表示字面意义上的双引号。如果字符串本身包含反斜杠（\），也要进行转义，即用“\”表示字面意义上的一个反斜杠</li><li>Null常量<br>Null常量用于表示变量引用的对象为空，它只有一个值，用null表示</li></ol></li></ul><h1 id="EL运算符"><a href="#EL运算符" class="headerlink" title="EL运算符"></a>EL运算符</h1><ul><li><p>EL表达式支持简单的运算，例如，加（+）、减（-）、乘（*）、除（/）等。为此，在EL中提供了多种运算符，EL中的运算符包括以下几种：</p><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/26/32cf12aa081a463db629c99562084317.png"></p></li></ul><ol><li>点运算符（.）<br>EL表达式中的点运算符，用于访问JSP页面中某些对象的属性，如JavaBean对象、List对象、Array对象等，其语法格式如下：<pre><code>$&#123;customer.name&#125;</code></pre></li><li>方括号运算符（[]）<br>EL表达式中的方括号运算符与点运算符的功能相同，都用于访问JSP页面中某些对象的属性，当获取的属性名中包含一些特殊符号，如“-”或“?”等并非字母或数字的符号，就只能使用方括号运算符来访问该属性，其语法格式如下：    <pre><code> $&#123;user[&quot;My-Name&quot;]&#125;</code></pre></li><li>算术运算符<br>EL表达式中的算术运算符用于对整数和浮点数的值进行算术运算。使用这些算术运算符可以非常方便地在JSP页面进行算术运算，并且可以简化页面的代码量，如 “+、-、*、/、%”。</li><li>比较运算符<br>EL表达式中的比较运算符用于比较两个操作数的大小，操作数可以是各种常量、EL变量或EL表达式，所有的运算符执行的结果都是布尔类型，如“==、！=、&lt;、&gt;、&lt;=、&gt;=”</li><li>逻辑运算符<br>EL表达式中的逻辑运算符用于对结果为布尔类型的表达式进行运算，运算的结果仍为布尔类型，如“&amp;&amp;、||、！”。</li><li>empty运算符<br>EL表达式中的empty运算符用于判断某个对象是否为null或””，结果为布尔类型，其基本的语法格式如下所示：<pre><code> $&#123;empty var&#125;</code></pre></li><li>条件运算符<br>EL表达式中条件运算符用于执行某种条件判断，它类似于Java语言中的if-else语句，其语法格式如下：<pre><code> $&#123;A?B:C&#125;</code></pre></li><li>“（）”运算符<br>EL表达式中的圆括号用于改变其它运算符的优先级</li></ol><h1 id="EL隐式对象"><a href="#EL隐式对象" class="headerlink" title="EL隐式对象"></a>EL隐式对象</h1><ul><li>EL中<code>11个</code>隐式对象</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/26/ffb7cfe9c7c742da8dccb092d649777b.png"></p><h2 id="pageContext对象"><a href="#pageContext对象" class="headerlink" title="pageContext对象"></a>pageContext对象</h2><p>为了获取JSP页面的隐式对象，可以使用EL表达式中的pageContext隐式对象获取其他10个隐式对象。 pageContext隐式对象的示例代码如下：</p><pre><code>         $&#123;pageContext.response.characterEncoding&#125;</code></pre><p>pageContext对象获取response对象中的characterEncoding属性</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">language</span>=<span class="string">&quot;java&quot;</span> <span class="attr">contentType</span>=<span class="string">&quot;text/html; charset=utf-8&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">pageEncoding</span>=<span class="string">&quot;utf-8&quot;</span>%&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">请求URI为：$&#123;pageContext.request.requestURI&#125; <span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">Content-Type响应头：$&#123;pageContext.response.contentType&#125; <span class="tag">&lt;<span class="name">br</span> /&gt;</span> </span><br><span class="line">服务器信息为：$&#123;pageContext.servletContext.serverInfo&#125; <span class="tag">&lt;<span class="name">br</span> /&gt;</span> </span><br><span class="line">Servlet注册名为：$&#123;pageContext.servletConfig.servletName&#125; <span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/26/08bedc07bcad2569d6f05a4b5dd60f81.png"></p><h2 id="Web域相关对象"><a href="#Web域相关对象" class="headerlink" title="Web域相关对象"></a>Web域相关对象</h2><p>HttpRequest对象存储的数据只在当前请求中可以获取到。习惯性的，我们把这些Map集合称为域，这些Map集合所在的对象称为域对象。在EL表达式中，为了获取指定域中的数据，提供了<code>pageScope</code>、<code>requestScope</code>、<code>sessionScope</code>和<code>applicationScope</code>(<strong>范围由小到大</strong>)四个隐式对象，示例代码如下</p><pre><code>    $&#123;pageScope.userName&#125;         $&#123;requestScope.userName&#125;        $&#123;sessionScope.userName&#125;     $&#123;applicationScope.userName&#125;</code></pre><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">language</span>=<span class="string">&quot;java&quot;</span> <span class="attr">contentType</span>=<span class="string">&quot;text/html; charset=utf-8&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">pageEncoding</span>=<span class="string">&quot;utf-8&quot;</span>%&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%</span> <span class="attr">pageContext.setAttribute</span>(&quot;<span class="attr">userName</span>&quot;, &quot;<span class="attr">itcast</span>&quot;); %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%</span> <span class="attr">request.setAttribute</span>(&quot;<span class="attr">bookName</span>&quot;, &quot;<span class="attr">Java</span> <span class="attr">Web</span>&quot;); %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%</span> <span class="attr">session.setAttribute</span>(&quot;<span class="attr">userName</span>&quot;, &quot;<span class="attr">itheima</span>&quot;); %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%</span> <span class="attr">application.setAttribute</span>(&quot;<span class="attr">bookName</span>&quot;, &quot;<span class="attr">Java</span> 基础&quot;); %&gt;</span></span><br><span class="line">表达式\$&#123;pageScope.userName&#125;的值为：$&#123;pageScope.userName&#125; <span class="tag">&lt;<span class="name">br</span> /&gt;</span> </span><br><span class="line">表达式\$&#123;requestScope.bookName&#125;的值为：$&#123;requestScope.bookName&#125; <span class="tag">&lt;<span class="name">br</span> /&gt;</span> </span><br><span class="line">表达式\$&#123;sessionScope.userName&#125;的值为：$&#123;sessionScope.userName&#125; <span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">表达式\$&#123;applicationScope.bookName&#125;的值为：$&#123;applicationScope.bookName&#125; </span><br><span class="line">     <span class="tag">&lt;<span class="name">br</span> /&gt;</span> </span><br><span class="line">表达式\$&#123;userName&#125;的值为：$&#123;userName&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/26/d5af5f595332d313c549e8a317ad962a.png"></p><h2 id="param和paramValues对象"><a href="#param和paramValues对象" class="headerlink" title="param和paramValues对象"></a>param和paramValues对象</h2><ul><li><p>param对象用于获取请求参数的某个值，它是Map类型，与request.getParameter()方法相同，在使用EL获取参数时，如果参数不存在，返回的是空字符串，而不是null，具体示例如下：</p><pre><code>  $&#123;param.num&#125;</code></pre></li><li><p>如果一个请求参数有多个值，可以使用paramValues对象来获取请求参数的所有值，该对象用于返回请求参数所有值组成的数组，如果要获取某个请求参数的第一个值，可以使用如下代码：</p><pre><code>  $&#123;paramValues.nums[0]&#125; </code></pre></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">language</span>=<span class="string">&quot;java&quot;</span> <span class="attr">contentType</span>=<span class="string">&quot;text/html; charset=utf-8&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">pageEncoding</span>=<span class="string">&quot;utf-8&quot;</span>%&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">style</span>=<span class="string">&quot;text-align: center;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;$&#123;pageContext.request.contextPath&#125;/param.jsp&quot;</span>&gt;</span></span><br><span class="line">num1：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;num1&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span> </span><br><span class="line">num2：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;num&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span> </span><br><span class="line">num3：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;num&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span> <span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交&quot;</span> /&gt;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;重置&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">num1：$&#123;param.num1&#125;<span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">num2：$&#123;paramValues.num[0]&#125;<span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">num3：$&#123;paramValues.num[1]&#125;<span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/26/84d9c560b5e429d9003816d64990731d.png"></p><h2 id="header和headerValues对象"><a href="#header和headerValues对象" class="headerlink" title="header和headerValues对象"></a>header和headerValues对象</h2><ul><li><p>header对象用于获取请求头字段的某个值，具体示例如下：</p><pre><code>        $&#123;header[&quot;user-agent&quot;]&#125;</code></pre></li><li><p>如果一个请求头字段有多个值，可以使用headerValues对象，该对象用于返回请求头字符的所有值组成的数组，如果要获取某个请求头字段的第一个值，可以使用如下代码： </p><pre><code>  $&#123;headerValues[&quot;Accept-Language&quot;][0]&#125;</code></pre></li></ul><h2 id="Cookie对象"><a href="#Cookie对象" class="headerlink" title="Cookie对象"></a>Cookie对象</h2><ul><li>在JSP开发中，经常需要获取客户端的Cookie信息，为此，在EL表达式中，提供了Cookie隐式对象，该对象是一个代表所有Cookie信息的Map集合， Map集合中元素的关键字为各个Cookie的名称，值则为对应的Cookie对象，具体示例如下：<pre><code>  获取cookie对象的信息：$&#123;cookie.userName&#125;  获取cookie对象的名称：$&#123;cookie.userName.name&#125;  获取cookie对象的值：$&#123;cookie.userName.value&#125;</code></pre></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">language</span>=<span class="string">&quot;java&quot;</span> <span class="attr">contentType</span>=<span class="string">&quot;text/html; charset=utf-8&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">pageEncoding</span>=<span class="string">&quot;utf-8&quot;</span>%&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">Cookie对象的信息：<span class="tag">&lt;<span class="name">br</span> /&gt;</span> </span><br><span class="line">$&#123;cookie.userName &#125; <span class="tag">&lt;<span class="name">br</span> /&gt;</span> </span><br><span class="line">Cookie对象的名称和值：<span class="tag">&lt;<span class="name">br</span> /&gt;</span> </span><br><span class="line">$&#123;cookie.userName.name &#125;=$&#123;cookie.userName.value &#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">%</span> <span class="attr">response.addCookie</span>(<span class="attr">new</span> <span class="attr">Cookie</span>(&quot;<span class="attr">userName</span>&quot;, &quot;<span class="attr">itcast</span>&quot;)); %&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/26/2129243477c2df72040944e8b01922bc.png"></p><blockquote><p>第一次访问并不会显示信息，服务器会向浏览器回写一个Cookie，此时的Cookie信息存储在浏览器中，当刷新页面第二次访问时，浏览器会将此Cookie信息一同发送给服务器，使用表达式获取名称和值</p></blockquote><h2 id="initParam对象"><a href="#initParam对象" class="headerlink" title="initParam对象"></a>initParam对象</h2><p>在开发一个Web应用程序时，通常会在web.xml文件中配置一些初始化参数，为了方便获取这些参数，EL表达式提供了一个initParam隐式对象，该对象可以获取Web应用程序中全局初始化参数，具体示例如下所示：</p><pre><code>    $&#123;initParam.count&#125; </code></pre>]]></content>
      
      
      <categories>
          
          <category> Web前端 </category>
          
          <category> JavaWeb </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaWeb </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaWeb🌍JSP技术</title>
      <link href="2021/01/15/%E5%89%8D%E7%AB%AF/JavaWeb/JavaWeb_JSP%E6%8A%80%E6%9C%AF/"/>
      <url>2021/01/15/%E5%89%8D%E7%AB%AF/JavaWeb/JavaWeb_JSP%E6%8A%80%E6%9C%AF/</url>
      
        <content type="html"><![CDATA[<h1 id="JSP技术"><a href="#JSP技术" class="headerlink" title="JSP技术"></a>JSP技术</h1><ul><li><a href="https://www.vxzsk.com/2015.html">JSP入门教程</a></li><li>JSP全名是Java Server Pages，它是建立在Servlet规范之上的动态网页开发技术。在JSP文件中，HTML代码与Java代码共同存在，其中，HTML代码用来实现网页中静态内容的显示，Java代码用来实现网页中动态内容的显示。</li><li>JSP特征<ol><li><strong>跨平台</strong>：当从一个平台移植到另一个平台时，JSP和JavaBean的代码并不需要重新编译，这是因为Java的字节码是与平台无关的。</li><li><strong>业务代码相分离</strong>：在使用JSP技术开发Web应用时，可以将界面的开发与应用程序的开发分离开。</li><li><strong>预编译</strong>：预编译就是在用户第一次通过浏览器访问JSP页面时，服务器将对JSP页面代码进行编译，并且仅执行一次编译。编译好的代码将被保存，在用户下一次访问时，会直接执行编译好的代码。</li><li><strong>组件重用</strong>：JSP中可以使用JavaBean编写业务组件，也就是使用一个JavaBean类封装业务处理代码或者作为一个数据存储模型。</li></ol></li></ul><h1 id="JSP运行原理"><a href="#JSP运行原理" class="headerlink" title="JSP运行原理"></a>JSP运行原理</h1><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/25/fcff5a3c072c415dab9b5351da9d067d.png"></p><ol><li>客户端发出请求，请求访问JSP文件</li><li>JSP容器先将JSP文件<strong>转换</strong>成一个<code>Java源文件</code>(Java Servlet源程序)，在转换过程中，如果发现JSP文件中存在错误，则中断转换过程，并向服务器和客户端返回错误信息</li><li>如果转换成功，将Java源文件<strong>编译</strong>成字节码文件<code>.class</code>，该class文件就是一个Servlet</li><li>由Servlet容器加载转换后的Serlvet类（.class文件）创建该类对象，即Servlet实例，并<strong>执行</strong>Servlet的<code>jspInit()</code>方法，只调用一次</li><li>执行<code>jspService()</code>方法来处理客户端的请求，<strong>对于每一个请求，JSP容器都会创建一个新的线程来处理它</strong></li><li>当请求处理完成后，响应对象由<strong>JSP容器</strong>接收，并将<strong>HTML格式</strong>的响应信息发送回客户端</li></ol><h1 id="JSP基本语法"><a href="#JSP基本语法" class="headerlink" title="JSP基本语法"></a>JSP基本语法</h1><p>JSP脚本元素是指嵌套在&lt;%和%&gt;之中的一条或多条Java程序代码。通过JSP脚本元素可以将Java代码嵌入HTML页面中，所有可执行的Java代码，都可以通过JSP脚本来执行。</p><p>JSP脚本元素主要包含如下3中类型：</p><ol><li><strong>JSP Scriptlets</strong><br>JSP Scriptlets 是一段代码段。可以<strong>定义变量，调用表达式，输出内容，但不能定义方法，因为其本身就是一个方法</strong>。JSP Scriptlets的语法格式如下所示：<pre><code>&lt;% java 代码（变量、方法、表达式等）%&gt;</code></pre>在 JSP Scriptlets中声明的变量是JSP页面的<strong>局部变量</strong>，调用 JSP Scriptlets时，会为局部变量分配内存空间，调用结束后，释放局部变量占用的内存空间</li><li><strong>JSP声明语句</strong><br>JSP的声明语句用于<strong>声明变量和方法</strong>，其定义的变量为<strong>全局变量</strong>，它以“&lt;%!”开始，以“%&gt;”结束，其语法格式如下所示：<pre><code>&lt;%!   定义的变量或方法等%&gt;</code></pre><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">language</span>=<span class="string">&quot;java&quot;</span> <span class="attr">contentType</span>=<span class="string">&quot;text/html; charset=UTF-8&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">pageEncoding</span>=<span class="string">&quot;UTF-8&quot;</span>%&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot;</span> </span></span><br><span class="line"><span class="meta">                        <span class="meta-string">&quot;http://www.w3.org/TR/html4/loose.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Type&quot;</span> <span class="attr">content</span>=<span class="string">&quot;text/html; charset=UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>JSP声明语句<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%!</span></span></span><br><span class="line"><span class="tag"><span class="attr">int</span> <span class="attr">a</span> = <span class="string">1,</span> <span class="attr">b</span> = <span class="string">2;</span> //定义两个变量<span class="attr">a</span>,<span class="attr">b</span></span></span><br><span class="line"><span class="tag">%&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%!</span></span></span><br><span class="line"><span class="tag">   <span class="attr">public</span> <span class="attr">String</span> <span class="attr">print</span>() &#123; //定义<span class="attr">print</span>方法</span></span><br><span class="line"><span class="tag">    <span class="attr">String</span> <span class="attr">str</span> = <span class="string">&quot;itcast&quot;</span>; //方法内定义的变量<span class="attr">str</span></span></span><br><span class="line"><span class="tag"><span class="attr">return</span> <span class="attr">str</span>;</span></span><br><span class="line"><span class="tag">&#125;</span></span><br><span class="line"><span class="tag">%&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">%</span></span></span><br><span class="line"><span class="tag"> <span class="attr">out.println</span>(<span class="attr">a</span> + <span class="attr">b</span>); //输出两个变量的和 <span class="attr">--</span>&gt;</span></span><br><span class="line">%&gt; </span><br><span class="line"> <span class="tag">&lt;<span class="name">br</span> /&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">%</span></span></span><br><span class="line"><span class="tag"><span class="attr">out.println</span>(<span class="attr">print</span>());//调用<span class="attr">print</span>()方法，输出其返回值 </span></span><br><span class="line"><span class="tag">%&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">br</span> /&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">%=a+b</span> %&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%=print()</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line">/*</span><br><span class="line">3</span><br><span class="line">itcast</span><br><span class="line">*/</span><br></pre></td></tr></table></figure></li><li><strong>JSP表达式</strong><br>JSP表达式（expression）用于将程序数据输出到客户端，<strong>不能定义变量</strong>，它将要输出的变量或者表达式直接封装在“&lt;%” 开头和以“%&gt;”结尾的标记中，其基本的语法格式如下所示： <pre><code>&lt;%= expression %&gt;</code></pre></li></ol><h1 id="JSP注释"><a href="#JSP注释" class="headerlink" title="JSP注释"></a>JSP注释</h1><pre><code>    &lt;%-- 注释信息 --%&gt;</code></pre><blockquote><p>注意：Tomcat在将JSP页面编译成Servlet程序时，会忽略JSP页面中被注释的内容，不会将注释信息发送到客户端。</p></blockquote><h1 id="JSP指令"><a href="#JSP指令" class="headerlink" title="JSP指令"></a>JSP指令</h1><p>为了设置JSP页面中的一些信息，SUN公司提供了JSP指令。 JSP 2.0中共定义了page、include和taglib三种指令，每种指令都定义了各自的属性。接下来，本节将针对page和include指令进行详细地讲解。</p><h2 id="page指令"><a href="#page指令" class="headerlink" title="page指令"></a>page指令</h2><p>page指令用于对页面的某些特性进行描述，例如，页面的编码方式，JSP页面采用的语言等。其语法为：</p><pre><code>    &lt;%@ page 属性名= &quot;属性值&quot;%&gt;</code></pre><p>在page指令的语法格式中，page用于声明指令名称，属性用来指定JSP页面的某些特性。page指令提供了一系列与JSP页面相关的属性。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/25/9bae8c8caaf6e233dcb5ec4f2cdc8f24.png"></p><blockquote><p>注意：page指令对整个页面都有效，而与其书写的位置无关，但是习惯上把page指令写在JSP页面的最前面。<strong>其中import属性可以多次使用，其他属性只能出现一次</strong>。</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">language</span>=<span class="string">&quot;java&quot;</span> <span class="attr">contentType</span>=<span class="string">&quot;text/html; charset=UTF-8&quot;</span> <span class="attr">pageEncoding</span>=<span class="string">&quot;UTF-8&quot;</span>%&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">import</span>=<span class="string">&quot;java.awt.*&quot;</span>%&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">import</span>=<span class="string">&quot;java.util.*&quot;</span>,&quot;<span class="attr">java.awt.</span>*&quot;%&gt;</span></span><br></pre></td></tr></table></figure><p><strong>errorPage</strong>(发生错误的页面)：当前页面如果抛出异常，那么要转发到哪一个页面，由errorPage来指定<br><strong>isErrorPage</strong>(显示异常信息)：它指定当前页面是否为处理错误的页面！当该属性为true时，这个页面会设置状态码为500！而且这个页面可以使用9大内置对象中的exception!</p><h2 id="include指令"><a href="#include指令" class="headerlink" title="include指令"></a>include指令</h2><p>include指令用于在JSP页面静态包含一个文件，例如HTML文件，文本文件等。其语法为：</p><pre><code>    &lt;%@ include file=&quot;被包含的文件地址&quot;%&gt;</code></pre><p>include指令只有一个file属性，该属性用来指定插入到JSP页面目标位置的文件资源。需要注意的是，插入文件的路径一般不以“/”开头，而是使用相对路径。</p><ul><li>需要注意的问题<ol><li>被引入的文件必须遵循JSP语法，其中的内容可以包含静态HTML、JSP脚本元素和JSP指令等普通JSP页面所具有的一切内容。</li><li>除了指令元素之外，被引入的文件中的其他元素都被转换成相应的Java源代码，然后插入进当前JSP页面所翻译成的Servlet源文件中，插入位置与include指令在当前JSP页面中的位置保持一致。</li><li>file属性的设置值必须使用相对路径，如果以“/”开头，表示相对于<strong>当前Web应用程序的根目录（注意不是站点根目录8080）</strong>，否则，表示相对于当前文件。需要注意的是，这里的file属性指定的相对路径是相对于文件（file），而不是相对于页面（page）。</li></ol></li></ul><blockquote><p>超链接、重定向、action地址不用加”/“</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">language</span>=<span class="string">&quot;java&quot;</span> <span class="attr">contentType</span>=<span class="string">&quot;text/html; charset=UTF-8&quot;</span>%&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Insert title here<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%</span></span></span><br><span class="line"><span class="tag"><span class="attr">out.println</span>(<span class="attr">new</span> <span class="attr">java.util.Date</span>()<span class="attr">.toLocaleString</span>());</span></span><br><span class="line"><span class="tag">%&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">language</span>=<span class="string">&quot;java&quot;</span> <span class="attr">contentType</span>=<span class="string">&quot;text/html; charset=UTF-8&quot;</span>%&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>欢迎你<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">欢迎你，现在的时间是：</span><br><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">include</span> <span class="attr">file</span>=<span class="string">&quot;date.jsp&quot;</span>%&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>inlcude指令是静态包含：其处理是<strong>先合并再编译</strong>，所以两个页面中不能重复定义变量<br>&lt;jsp: inlcude&gt;是动态包含：其处理是<strong>先编译再合并</strong>，所以两个页面可以重复定义变量</p></blockquote><h2 id="taglib指令"><a href="#taglib指令" class="headerlink" title="taglib指令"></a>taglib指令</h2><p>JSP API允许用户自定义标签，一个自定义标签库就是自定义标签的集合。<br>Taglib指令引入一个自定义标签集合的定义，包括库路径、自定义标签。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">taglib</span> <span class="attr">prefix</span>=<span class="string">&quot;c&quot;</span> <span class="attr">uri</span>=<span class="string">&quot;http://java.sun.com/jsp/jstl/core&quot;</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">c:out</span> <span class="attr">value</span>=<span class="string">&quot;renliang&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">c:out</span>&gt;</span>  <span class="comment">&lt;!--使用标签库--&gt;</span></span><br></pre></td></tr></table></figure><p><code>prefix</code>：指定标签库在本页面中的前缀！由我们自己来起名称！<br><code>uri</code>: 指定标签库的位置！ </p><h1 id="JSP隐式对象"><a href="#JSP隐式对象" class="headerlink" title="JSP隐式对象"></a>JSP隐式对象</h1><p>为了简化Web应用程序的开发，JSP 2.0规范中提供了<code>9个隐式（内置）对象</code>，它们是JSP默认创建的，可以直接在JSP页面中使用。</p><ul><li>隐式对象的名称、类型和描述信息如下所示：</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/25/2a951c795d2c9e5fc5f0832209d1c9bf.png"></p><h2 id="out对象"><a href="#out对象" class="headerlink" title="out对象"></a>out对象</h2><ul><li>out对象是<code>java.servlet.jsp.JspWriter</code>类的实例对象，其作用是用来向客户端发送文本形式的实体内容。out对象的类型为JspWriter，它相当于一种<strong>带缓存功能</strong>的PrintWriter。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/25/813615da3d4215e4895733d00d131efb.png"><br>从图中可以看出，在JSP页面中，通过out隐式对象写入数据相当于将数据插入到JspWriter对象的缓冲区中，只有调用了ServletResponse.getWriter()方法，缓冲区的数据才能真正写入到Servlet引擎所提供的缓冲区中。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">language</span>=<span class="string">&quot;java&quot;</span> <span class="attr">contentType</span>=<span class="string">&quot;text/html; charset=UTF-8&quot;</span> <span class="attr">buffer</span>=<span class="string">&quot;0kb&quot;</span>%&gt;</span></span><br><span class="line"><span class="comment">&lt;!--buffer属性用于设置out对象的缓冲区大小--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Insert title here<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%</span></span></span><br><span class="line">out.println(&quot;first line&lt;br /&gt;&quot;);</span><br><span class="line">response.getWriter().println(&quot;second line<span class="tag">&lt;<span class="name">br</span> /&gt;</span>&quot;);</span><br><span class="line">%&gt;</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>设置buffer=”0kb” 可以不经过缓冲区，此字段用于设置缓冲区大小</p></blockquote><h2 id="pageContext对象"><a href="#pageContext对象" class="headerlink" title="pageContext对象"></a>pageContext对象</h2><p>pageContext对象是javax.servlet.jsp.PageContext类的实例对象，它代表当前JSP页面的运行环境，并提供了一系列用于获取其他隐式对象的方法。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/25/d021d90f09b95073b24589c4bc585a23.png"><br>pageContext对象不仅提供了获取隐式对象的方法，还提供了存储数据的功能。pageContext对象存储数据是通过操作属性来实现的，其操作属性的一系列方法如下。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/25/bf9b1fa0790c5fe95877feec750d086d.png"><br>参数scope指定的是属性的作用范围。它有四个值：</p><ul><li>pageContext.PAGE_SCOPE：表示页面范围</li><li>pageContext.REQUEST_SCOPE：表示请求范围</li><li>pageContext.SESSION_SCOPE：表示会话范围</li><li>pageContext.APPLICATION_SCOPE：表示Web应用程序范围</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">language</span>=<span class="string">&quot;java&quot;</span> <span class="attr">contentType</span>=<span class="string">&quot;text/html; charset=UTF-8&quot;</span>%&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>pageContext<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%</span></span></span><br><span class="line"><span class="tag">//获取<span class="attr">request</span>对象</span></span><br><span class="line"><span class="tag"><span class="attr">HttpServletRequest</span> <span class="attr">req</span> = <span class="string">(HttpServletRequest)</span> <span class="attr">pageContext.getRequest</span>();</span></span><br><span class="line"><span class="tag">//设置<span class="attr">page</span>范围内属性</span></span><br><span class="line"><span class="tag"><span class="attr">pageContext.setAttribute</span>(&quot;<span class="attr">str</span>&quot;, &quot;<span class="attr">Java</span>&quot;,<span class="attr">pageContext.PAGE_SCOPE</span>);</span></span><br><span class="line"><span class="tag">//设置<span class="attr">request</span>范围内属性</span></span><br><span class="line"><span class="tag"><span class="attr">req.setAttribute</span>(&quot;<span class="attr">str</span>&quot;, &quot;<span class="attr">Java</span> <span class="attr">Web</span>&quot;);</span></span><br><span class="line"><span class="tag">//获得的<span class="attr">page</span>范围属性</span></span><br><span class="line"><span class="tag"><span class="attr">String</span> <span class="attr">str1</span> = <span class="string">(String)pageContext.getAttribute(</span>&quot;<span class="attr">str</span>&quot;,<span class="attr">pageContext.PAGE_SCOPE</span>);</span></span><br><span class="line"><span class="tag">//获得的<span class="attr">request</span>范围属性</span></span><br><span class="line"><span class="tag"><span class="attr">String</span> <span class="attr">str2</span> = <span class="string">(String)pageContext.getAttribute(</span>&quot;<span class="attr">str</span>&quot;,<span class="attr">pageContext.REQUEST_SCOPE</span>);</span></span><br><span class="line"><span class="tag">%&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%=&quot;page范围：&quot;+str1</span> %&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%=&quot;request范围：&quot;+str2</span> %&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">page范围:Java</span></span><br><span class="line"><span class="comment">request范围:Java Web</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br></pre></td></tr></table></figure><ul><li>pageContext的特点(一个顶9个！)<ul><li>Servlet中有三大域，而JSP中有四大域！<ol><li>ServletContext：整个应用程序</li><li>session：整个会话(一个会话中只有一个用户)</li><li>request：一个请求链！</li><li>pageContext：一个jsp页面！这个域是在当前jsp页面和当前jsp页面中使用的标签之间共享数据！</li></ol></li><li>域对象</li><li>代理其他域：pageContext.setAttribute(“xxx”, “XXX”, PageContext.SESSION_SCOPE);</li><li>全域查找：pageContext.findAttribute(“xxx”);从小到大，依赖查找！</li><li>获取其他8个内置对象</li></ul></li></ul><h2 id="exception对象"><a href="#exception对象" class="headerlink" title="exception对象"></a>exception对象</h2><p>在JSP页面中，经常需要处理一些异常信息，这时，可以通过exception对象来实现。exception对象是java.lang.Exception类的实例对象，用于封装JSP中抛出的异常信息。需要注意的是，exception对象只有在错误处理页面才可以使用，即page指令中指定了属性&lt;%@ page isErrorPage=”true”%&gt;的页面。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--exception.jsp--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">language</span>=<span class="string">&quot;java&quot;</span> <span class="attr">contentType</span>=<span class="string">&quot;text/html; charset=UTF-8&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">pageEncoding</span>=<span class="string">&quot;UTF-8&quot;</span> <span class="attr">errorPage</span>=<span class="string">&quot;error.jsp&quot;</span>%&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot;</span> </span></span><br><span class="line"><span class="meta">                        <span class="meta-string">&quot;http://www.w3.org/TR/html4/loose.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Type&quot;</span> <span class="attr">content</span>=<span class="string">&quot;text/html; charset=UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>exception object test<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%</span></span></span><br><span class="line"><span class="tag"><span class="attr">int</span> <span class="attr">a</span> = <span class="string">3;</span></span></span><br><span class="line"><span class="tag"><span class="attr">int</span> <span class="attr">b</span> = <span class="string">0;</span></span></span><br><span class="line"><span class="tag">%&gt;</span></span><br><span class="line">输出结果为：<span class="tag">&lt;<span class="name">%=(a</span> / <span class="attr">b</span>)%&gt;</span><span class="comment">&lt;!--此处会产生异常  --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--error.jsp--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">language</span>=<span class="string">&quot;java&quot;</span> <span class="attr">contentType</span>=<span class="string">&quot;text/html; charset=UTF-8&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">pageEncoding</span>=<span class="string">&quot;UTF-8&quot;</span> <span class="attr">isErrorPage</span>=<span class="string">&quot;true&quot;</span>%&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot;</span></span></span><br><span class="line"><span class="meta">                       <span class="meta-string">&quot;http://www.w3.org/TR/html4/loose.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Type&quot;</span> <span class="attr">content</span>=<span class="string">&quot;text/html; charset=UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>error page<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--       显示异常信息 --&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">%=exception.getMessage()</span> %&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>运行exception.jsp页面，浏览器将错误显示了出来，说明当exception.jsp页面发生错误时，会自动调用error.jsp页面进行错误处理</p><h1 id="JSP动作元素"><a href="#JSP动作元素" class="headerlink" title="JSP动作元素"></a>JSP动作元素</h1><p>JSP动作元素用来控制JSP的行为，执行一些常用的JSP页面动作<br>动作标签是由tomcat(服务器)来解释执行！而html标签由浏览器来执行！</p><h2 id="lt-jsp-include-gt-动作元素"><a href="#lt-jsp-include-gt-动作元素" class="headerlink" title="&lt;jsp:include&gt;动作元素"></a>&lt;jsp:include&gt;动作元素</h2><p>在JSP页面中，为了把其他资源的输出内容插入到当前JSP页面的输出内容中，JSP技术提供了&lt;jsp:include&gt;动作元素<br>其语法格式为：</p><pre><code>    &lt;jsp:include page=&quot;relativeURL&quot; flush=&quot;true|false&quot; /&gt;</code></pre><ul><li><p>page指定被引入的<strong>相对路径</strong>，<code>flush</code>指定是否将当前页面的输出内容<strong>刷新</strong>到客户端，默认<strong>false</strong></p></li><li><p>&lt;jsp:include&gt;包含的原理是将被包含的页面编译处理后将结果包含在页面中。当浏览器第一次请求一个使用&lt;jsp:include&gt;包含其他页面的页面时，Web容器首先会编译被包含的页面，然后将编译处理后的返回结果包含在页面中，之后编译包含页面，最后将两个页面组合的结果回应给浏览器。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--included.jsp--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">language</span>=<span class="string">&quot;java&quot;</span> <span class="attr">contentType</span>=<span class="string">&quot;text/html; charset=UTF-8&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">pageEncoding</span>=<span class="string">&quot;UTF-8&quot;</span>%&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot;</span> </span></span><br><span class="line"><span class="meta">                        <span class="meta-string">&quot;http://www.w3.org/TR/html4/loose.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Type&quot;</span> <span class="attr">content</span>=<span class="string">&quot;text/html; charset=UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>include<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">%Thread.sleep(5000);%</span>&gt;</span></span><br><span class="line"> included.jsp内的中文<span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--dynamicInclude.jsp--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">language</span>=<span class="string">&quot;java&quot;</span> <span class="attr">contentType</span>=<span class="string">&quot;text/html; charset=UTF-8&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">pageEncoding</span>=<span class="string">&quot;UTF-8&quot;</span>%&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot;</span></span></span><br><span class="line"><span class="meta">                          <span class="meta-string">&quot;http://www.w3.org/TR/html4/loose.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Type&quot;</span> <span class="attr">content</span>=<span class="string">&quot;text/html; charset=UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>dynamicInclude page<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">dynamicInclude.jsp内的中文</span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">jsp:include</span> <span class="attr">page</span>=<span class="string">&quot;included.jsp&quot;</span> <span class="attr">flush</span>=<span class="string">&quot;false&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">dynamicInclude.jsp内的中文</span></span><br><span class="line"><span class="comment">included.jsp内的中文</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br></pre></td></tr></table></figure><p>浏览器首先显示dynamicInclude.jsp页面的输出内容，等待5秒后，才会显示include.jsp页面的输出内容。说明被引用的资源included.jsp在当前JSP页面输出内容后才被调用。</p><blockquote><p>&lt;jsp:include page=”xxx”/&gt;，用来包含指定的页面。假如有两个jsp. 分别为a.jsp和b.jsp,他们分别编码成Servlet，然后在执行Servlet时才会执行包含过程。这也是include指令与include标签的区别。<br>该标签内部使用的是RequestDispatcher#include()方法完成的包含</p></blockquote></li></ul><h2 id="lt-jsp-forward-gt-动作元素"><a href="#lt-jsp-forward-gt-动作元素" class="headerlink" title="&lt;jsp:forward&gt;动作元素"></a>&lt;jsp:forward&gt;动作元素</h2><ul><li><p>&lt;jsp:forward&gt;动作元素将当前请求转发到其他Web资源（HTML页面、JSP页面和Servlet等）</p></li><li><p><code>在执行请求转发之后的当前页面将不再执行(后面的代码不再执行)</code>，而是执行该元素指定的目标页面。<br>其语法格式为：</p><pre><code>  &lt;jsp:forward page=&quot;relativeURL&quot; /&gt;</code></pre></li></ul><p>page指定请求转发到的资源的<strong>相对路径</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--jspforward.jsp--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">language</span>=<span class="string">&quot;java&quot;</span> <span class="attr">contentType</span>=<span class="string">&quot;text/html; charset=UTF-8&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">pageEncoding</span>=<span class="string">&quot;UTF-8&quot;</span>%&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot;</span> </span></span><br><span class="line"><span class="meta">                        <span class="meta-string">&quot;http://www.w3.org/TR/html4/loose.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Type&quot;</span> <span class="attr">content</span>=<span class="string">&quot;text/html; charset=UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>forword page<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">jsp:forward</span> <span class="attr">page</span>=<span class="string">&quot;welcome.jsp&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--welcome.jsp--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">language</span>=<span class="string">&quot;java&quot;</span> <span class="attr">contentType</span>=<span class="string">&quot;text/html; charset=UTF-8&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">pageEncoding</span>=<span class="string">&quot;UTF-8&quot;</span>%&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot;</span> </span></span><br><span class="line"><span class="meta">                         <span class="meta-string">&quot;http://www.w3.org/TR/html4/loose.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Type&quot;</span> <span class="attr">content</span>=<span class="string">&quot;text/html; charset=UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>welcome page<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">你好，欢迎进入首页，当前访问时间是：</span><br><span class="line"><span class="tag">&lt;<span class="name">%</span></span></span><br><span class="line"><span class="tag"><span class="attr">out.print</span>(<span class="attr">new</span> <span class="attr">java.util.Date</span>());</span></span><br><span class="line"><span class="tag">    %&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>运行后，地址栏中显示的是jspforward.jsp，但浏览器显示出welcome.jsp的输出内容。由于请求转发是服务器端的操作，浏览器并不知道请求的页面，所以地址栏不会发生改变</p><blockquote><p>&lt;jsp:forward page=”xxx”/&gt;，用来转发到指定页面<br>例如在a.jsp中存在如下内容：&lt;jsp:fowrad page=”b.jsp”/&gt;<br>a.jsp中的内容不会显示在浏览器上，而只是显示b.jsp的内容。而且在&lt;jsp:forwad&gt;标签下面的内容不会被执行。</p></blockquote><h2 id="lt-jsp-param-gt-动作元素"><a href="#lt-jsp-param-gt-动作元素" class="headerlink" title="&lt;jsp:param&gt;动作元素"></a>&lt;jsp:param&gt;动作元素</h2><p>标签是和的子标签，用来向其他页面传递参数。</p><pre><code>    &lt;jsp:include page=&quot;/b.jsp&quot;&gt;            &lt;jsp:param value=&quot;zhangSan&quot; name=&quot;username&quot;/&gt;     &lt;/jsp:include&gt;</code></pre><p>在b.jsp中可以使用request.getParameter(“username”)来获取参数值。 </p><h2 id="lt-jsp-useBean-gt-动作元素"><a href="#lt-jsp-useBean-gt-动作元素" class="headerlink" title="&lt;jsp:useBean&gt;动作元素"></a>&lt;jsp:useBean&gt;动作元素</h2><p>假设有一个JavaBean，如下所示</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> UserBean;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> id ;</span><br><span class="line"><span class="keyword">private</span> String username  ;</span><br><span class="line"><span class="keyword">private</span> String password  ;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> id;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.id = id;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getUserame</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> username;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUsername</span><span class="params">(String username)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.username = username;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getPassword</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> password;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPassword</span><span class="params">(String password)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.password = password;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>访问JavaBean</strong></li></ul><p>&lt;jsp:useBean&gt; 标签可以在 JSP 中声明一个 JavaBean，然后使用。声明后，JavaBean 对象就成了脚本变量，可以通过脚本元素或其他自定义标签来访问。&lt;jsp:useBean&gt; 标签的语法格式如下： </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">jsp:useBean</span> <span class="attr">id</span>=<span class="string">&quot;user&quot;</span> <span class="attr">class</span>=<span class="string">&quot;UserBean.User&quot;</span> <span class="attr">scope</span>=<span class="string">&quot;page&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>这样就new了一个User类型的对象，id表示对象名为user，class表示完整路径在UserBean.User包下，等价于User user=new User()，scope表示作用域范围，可以有如下取值：</p><ol><li>application作用域<br>当指定JavaBean的作用域为application表示在整个项目的生命周期中都有效，服务器重启后失效。</li><li>session作用域<br>session作用域表示在当前会话周期内有效，只要仍在当前的会话生命周期内，就可以获取到相应的属性值。</li><li>request作用域<br>request作用域表示在当前用户的请求内有效，如果超过了当前请求，则获取不到相应的JavaBean的值。</li><li>page作用域<br>page作用域表示只在当前的页面有效，所以不管是请求重定向还是服务器内部转发，当发生页面跳转时都不能获取到JavaBean的属性值信息。page作用域是jsp:useBean的默认作用域。</li></ol><ul><li><strong>访问 JavaBean 对象的属性</strong><br>在 &lt;jsp:useBean&gt; 标签主体中使用 &lt;jsp:getProperty/&gt; 标签来调用 getter 方法，使用 &lt;jsp:setProperty/&gt; 标签来调用 setter 方法，语法格式如下：</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">jsp:useBean</span> <span class="attr">id</span>=<span class="string">&quot;user&quot;</span> <span class="attr">class</span>=<span class="string">&quot;UserBean.User&quot;</span> <span class="attr">scope</span>=<span class="string">&quot;page&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--name是Bean的id属性,property表示需要访问的Bean属性，value表示默认值--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">jsp:setProperty</span> <span class="attr">name</span>=<span class="string">&quot;user&quot;</span> <span class="attr">property</span>=<span class="string">&quot;usename&quot;</span> <span class="attr">value</span>=<span class="string">&quot;张三&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">jsp:setProperty</span> <span class="attr">name</span>=<span class="string">&quot;user&quot;</span> <span class="attr">property</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;123&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">jsp:useBean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>用户名: </span><br><span class="line"><span class="tag">&lt;<span class="name">jsp:getProperty</span> <span class="attr">name</span>=<span class="string">&quot;user&quot;</span> <span class="attr">property</span>=<span class="string">&quot;username&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>用户密码:</span><br><span class="line"><span class="tag">&lt;<span class="name">jsp:getProperty</span> <span class="attr">name</span>=<span class="string">&quot;user&quot;</span> <span class="attr">property</span>=<span class="string">&quot;password&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">用户名: 张三</span></span><br><span class="line"><span class="comment">密码: 123</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br></pre></td></tr></table></figure><ul><li>实例：用户提交用户名和密码后，显示信息</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">language</span>=<span class="string">&quot;java&quot;</span> <span class="attr">contentType</span>=<span class="string">&quot;text/html; charset=UTF-8&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">pageEncoding</span>=<span class="string">&quot;UTF-8&quot;</span>%&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Insert title here<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--传了一个myName的参数，在另一页面用param取--&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;test.jsp?myName=lisi&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;userName&quot;</span>&gt;</span>用户名:<span class="tag">&lt;/<span class="name">label</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">id</span>=<span class="string">&quot;userName&quot;</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span> /&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>/&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;password&quot;</span>&gt;</span>密码：<span class="tag">&lt;/<span class="name">label</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">id</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>/&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;登录&quot;</span> /&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">language</span>=<span class="string">&quot;java&quot;</span> <span class="attr">contentType</span>=<span class="string">&quot;text/html; charset=UTF-8&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">pageEncoding</span>=<span class="string">&quot;UTF-8&quot;</span>%&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Insert title here<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">jsp:useBean</span> <span class="attr">id</span>=<span class="string">&quot;user&quot;</span> <span class="attr">class</span>=<span class="string">&quot;UserBean.User&quot;</span> <span class="attr">scope</span>=<span class="string">&quot;page&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">jsp:useBean</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>跟表单关联，设置所有的属性值<span class="tag">&lt;/<span class="name">h2</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>/&gt;</span>  </span><br><span class="line"> &lt;%--*表示取所有属性&lt;jsp:setProperty property=&quot;*&quot; name=&quot;user&quot;/&gt;--%&gt; </span><br><span class="line"> &lt;%--设置默认值value&lt;jsp:setProperty property=&quot;username&quot;name=&quot;user&quot;value=&quot;zhangsan&quot;/&gt;--%&gt;</span><br><span class="line"> &lt;%--param用于取参数 &lt;jsp:setProperty property=&quot;username&quot; name=&quot;user&quot; param=&quot;myName&quot;/&gt;  --%&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">jsp:setProperty</span> <span class="attr">property</span>=<span class="string">&quot;username&quot;</span> <span class="attr">name</span>=<span class="string">&quot;user&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">jsp:setProperty</span> <span class="attr">property</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;user&quot;</span>/&gt;</span>  </span><br><span class="line">用户名：<span class="tag">&lt;<span class="name">jsp:getProperty</span> <span class="attr">property</span>=<span class="string">&quot;username&quot;</span> <span class="attr">name</span>=<span class="string">&quot;user&quot;</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span>  </span><br><span class="line">密码：<span class="tag">&lt;<span class="name">jsp:getProperty</span> <span class="attr">property</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;user&quot;</span>/&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2021/01/07/8368d8f59add75150a73b2aac8f14f8d.png"></p><h1 id="JSP开发模型"><a href="#JSP开发模型" class="headerlink" title="JSP开发模型"></a>JSP开发模型</h1><p>JSP技术在Web应用程序的开发过程中运用十分广泛，为了更方便地使用JSP技术，Sun公司提供了JSP开发模型。接下来讲解JSP模型的发展历史。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/26/84560c2964c3d1c1b70039e0d9b9ca24.png"></p><ul><li>JSP Model 2架构模型采用JSP+Servlet+ JavaBean的技术，此技术将原本JSP页面中的流程控制代码提取出来，封装到Servlet中，从而实现了整个程序页面显示、流程控制和业务逻辑的分离。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/26/7271302580069c6cd9aeccbdf1fe7356.png"></p><ul><li>Servlet充当了控制器的角色，它首先接收浏览器发送的请求，然后根据请求信息实例化JavaBean对象用来封装操作数据库后返回的数据，最后选择相应的JSP页面将响应结果显示在浏览器中。</li></ul><h2 id="MVC设计模式"><a href="#MVC设计模式" class="headerlink" title="MVC设计模式"></a>MVC设计模式</h2><p>MVC将程序分为3个核心模块：模型(<code>Model</code>)、视图(<code>View</code>)和控制器(<code>Controller</code>)<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/26/d8b57faf03cc68a63b926ee75b2fda2a.png"></p><p>JSP Model 2模型是一种MVC模式。由于MVC模式中的功能模块相互独立，并且使用该模式的软件具有极高的可维护性、可扩展性和可复用性，因此，使用MVC开发模式的Web应用越来越受到欢迎。<br> 接下来按照JSP Model 2的模型思想编写一个用户注册的程序，程序中各组件如下</p><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/26/ba7f0404399f27e632056c01ec09cb96.png"></p><ul><li>UserBean是代表用户信息的JavaBean，ControllerServlet根据用户注册信息创建出一个UserBean对象，并将对象添加到DBUtil对象中，logSuccess.jsp页面从UserBean对象中提取用户信息进行显示。</li><li>RegisterFormBean是封装注册表单信息的JavaBean，用于对从ControllerServlet中获取到的注册表单信息中的各个属性进行校验。</li><li>DBUtil是用于访问数据库的辅助类，它相当于一个DAO（数据访问对象）。DBUtil类中封装了一个HashMap对象，用于模拟数据库，HashMap对象中的每一个元素即为一个UserBean对象。</li><li>ControllerServlet是控制器，负责处理用户注册的请求。注册成功跳转到loginSuccess.jso页面；注册失败跳转到register.jsp页面并显示错误信息</li><li>register.jsp是显示用户注册表单的页面，它将注册请求提交给ControllerServlet程序处理</li><li>loginSuccess.jsp是用户登录成功后进入的页面，新注册成功的用户自动完成登录，直接进入loginSuccess.jsp页面</li></ul>]]></content>
      
      
      <categories>
          
          <category> Web前端 </category>
          
          <category> JavaWeb </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaWeb </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaWeb🌍会话技术</title>
      <link href="2021/01/15/%E5%89%8D%E7%AB%AF/JavaWeb/JavaWeb_%E4%BC%9A%E8%AF%9D%E6%8A%80%E6%9C%AF/"/>
      <url>2021/01/15/%E5%89%8D%E7%AB%AF/JavaWeb/JavaWeb_%E4%BC%9A%E8%AF%9D%E6%8A%80%E6%9C%AF/</url>
      
        <content type="html"><![CDATA[<h1 id="会话及其会话技术"><a href="#会话及其会话技术" class="headerlink" title="会话及其会话技术"></a>会话及其会话技术</h1><p>两个人你问我答的过程就是一个会话，在Web开发中，服务器跟踪用户信息的技术称为<strong>会话技术</strong>。</p><ul><li>Web应用中的会话过程类似于生活中的打电话过程，它指的是一个客户端（浏览器）与Web服务器之间连续发生的一系列请求和响应过程。</li><li>在Servlet技术中，提供了两个用于保存会话数据的对象，分别是Cookie和Session。</li></ul><h1 id="Cookie对象"><a href="#Cookie对象" class="headerlink" title="Cookie对象"></a>Cookie对象</h1><p>Cookie是一种会话技术，它用于将会话过程中的数据保存到用户的浏览器中，从而使浏览器和服务器可以更好地进行数据交互。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/25/07dd99cc031964e999ffd142d8a911f1.png"></p><ul><li>Cookie在浏览器和服务器之间的传输<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/25/fc8b31e06f87ee022c52102e76314e68.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/25/f555f0f756132aa1aab9c6869ade163a.png"></li></ul><ol><li>第一次访问服务器，服务器会增加<code>Set-Cookie</code>头字段，将Cookie信息发送给浏览器，并保存在客户端。<pre><code> Set-Cookie: user=lzy; Path=/;</code></pre> user表示Cookie的名称，lzy表示Cookie的值，Path表示Cookie的属性。需要注意的是，Cookie必须以<code>键值对</code>的形式出现，其属性可以有多个，属性之间<code>必须用分号和空格隔开</code>。</li><li>当后续访问服务器时，会在请求消息中将用户信息以Cookie的形式发送给服务器，从而使服务器端分辨出当前请求是由哪个用户发出的。</li></ol><h2 id="Cookie-API"><a href="#Cookie-API" class="headerlink" title="Cookie API"></a>Cookie API</h2><ul><li>在Servlet API中提供了javax.servlet.http.Cookie类，它包含了生成Cookie信息和提取Cookie信息各个属性的方法。</li><li>构造方法<pre><code>  public Cookie(java.lang.String name,java.lang.String value)</code></pre></li></ul><blockquote><p>注意 ：Cookie一旦被创建，它的名称就不能更改，值可以为任何值，创建后允许被修改。</p></blockquote><ul><li>Cookie类的常用方法</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/25/5e6b90d03c322e0eaf4e8516580b25a6.png"></p><ul><li><p><strong>setMaxAge(int expiry)和getMaxAge()方法</strong><br>这两个方法用于<strong>设置和返回Cookie在浏览器上保持有效的秒数</strong>。如果设置的值为一个<strong>正整数</strong>时，浏览器会将Cookie信息保存在本地硬盘中。如果设置值为<strong>负整数</strong>时，浏览器会将Cookie信息保存在的缓存中，当浏览器关闭时，Cookie信息会被删除。如果设置值为0时，则表示通知浏览器立即删除这个Cookie信息。默认情况下，Max-Age属性的值是-1。</p></li><li><p><strong>setPath(String uri)和getPath()方法</strong><br>这两个方法是针对Cookie的Path属性。如果创建的某个Cookie对象没有设置Path属性，那么该Cookie只对当前访问路径所属的目录及其子目录有效。如果想让某个Cookie项对站点的所有目录下的访问路径都有效，应调用Cookie对象的setPath()方法将其Path属性设置为“/”。</p></li><li><p><strong>setDomain(String pattern)和getDomain()方法</strong><br>这两个方法是针对Cookie的Domain属性的。Domain属性是用来指定浏览器访问的域。例如，传智播客的域为“itcast.cn”。那么，当设置Domain属性时，其值必须以“.”开头，如Domain=.itcast.cn。默认情况下，Domain属性的值为当前主机名，浏览器在访问当前主机下的资源时，都会将Cookie信息回送给服务器。需要注意的是，Domain属性的值是不区分大小写的。</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//显示用户上次访问时间</span></span><br><span class="line"><span class="keyword">package</span> chapter04;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.*;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">import</span> java.text.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LastAccessServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID=<span class="number">1L</span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"><span class="comment">//输出服务器输出内容的编码方式UTF-8，防止发送乱码</span></span><br><span class="line">response.setContentType(<span class="string">&quot;text/html;charset=utf-8&quot;</span>);</span><br><span class="line">String lastAccessTime=<span class="keyword">null</span>;</span><br><span class="line"><span class="comment">//获取所有的cookie，并将这些cookie存放在数组中</span></span><br><span class="line">Cookie[] cookies=request.getCookies();</span><br><span class="line"><span class="comment">//遍历cookies数组</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;cookies!=<span class="keyword">null</span>&amp;&amp;i&lt;cookies.length;i++) &#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="string">&quot;lastAccess&quot;</span>.equals(cookies[i].getName())) &#123;</span><br><span class="line"><span class="comment">//如果cookie的名称为lastAccess,则获取该cookie的值</span></span><br><span class="line">lastAccessTime=cookies[i].getValue();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//判断是否存在名称为lastAccess的cookie</span></span><br><span class="line"><span class="keyword">if</span>(lastAccessTime==<span class="keyword">null</span>) &#123;</span><br><span class="line">response.getWriter().print(<span class="string">&quot;您是首次访问本站!&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">response.getWriter().print(<span class="string">&quot;您上次的访问时间是:&quot;</span>+lastAccessTime);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//创建cookie,将当前时间作为cookie的值发给客户端</span></span><br><span class="line">String currentTime=<span class="keyword">new</span> SimpleDateFormat(<span class="string">&quot;yyyy-MM-dd-hh:mm:ss&quot;</span>).format(<span class="keyword">new</span> Date());</span><br><span class="line">Cookie cookie=<span class="keyword">new</span> Cookie(<span class="string">&quot;lastAccess&quot;</span>,currentTime);</span><br><span class="line">cookie.setMaxAge(<span class="number">60</span>*<span class="number">60</span>);</span><br><span class="line"><span class="comment">//发送cookie</span></span><br><span class="line">response.addCookie(cookie);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line"><span class="keyword">this</span>.doGet(request, response);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">servlet&gt;</span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>LastAccessServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>chapter04.LastAccessServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>LastAccessServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/LastAccessServlet<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/25/069c45945c6d6bf099567248c0c96eac.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/25/bb38e98c7d2362d59c05b749e1aff14b.png"></p><h1 id="Session对象"><a href="#Session对象" class="headerlink" title="Session对象"></a>Session对象</h1><p>Cookie可以将用户信息保存在各自的浏览器中，<strong>但Cookie传递的数据量很小</strong>，通常只有4KB，如果数据量过大，会加大服务器端的处理难度。所有引入Session技术，<strong>Session是一种将会话数据保存到服务器端的技术</strong>。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/25/a4c8cc1a3ee85c4a7fe601931b8473b0.png"></p><ul><li><p>当浏览器访问Web服务器时，Servlet容器就会创建一个Session对象和<strong>ID属性</strong>，其中，Session对象就相当于病历档案，ID就相当于就医卡号。Session对象的ID属性以以下这种形式存在</p><pre><code>  Cookie(Set-Cookie:JSESSIONID=111)</code></pre></li><li><p>当客户端后续访问服务器时，只要将<strong>标识号</strong>传递给服务器，服务器就能判断出该请求是哪个客户端发送的，从而选择与之对应的Session对象为其服务。</p></li><li><p>通常情况下，<strong>Session是借助Cookie技术来传递ID属性的。</strong></p></li></ul><h2 id="Session-API"><a href="#Session-API" class="headerlink" title="Session API"></a>Session API</h2><p>HttpServletRequest定义了用于获取Session对象的getSession()方法<br>        public HttpSession  getSession(boolean create)<br>        public HttpSession  getSession()</p><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/25/42277573bd73c9a314987459f2d7d310.png"></p><h2 id="Session超时管理"><a href="#Session超时管理" class="headerlink" title="Session超时管理"></a>Session超时管理</h2><p>在程序中，Web服务器无法判断当前客户端是否已经离开或关闭，还会保留与之对应的Session对象。But，Session对象还会占用内存，导致Web服务器崩溃怎么办？<br>Web服务器采用了<strong>超时管理来判断客户端是否存在！</strong><br>在一定时间内，如果某个客户端一直没有请求访问，那么，Web服务器会认为客户端已经结束请求，将对应的Session对象变成垃圾对象，并进行清除。反之，Web服务器会创建一个新的Session对象，并分配一个新的ID属性。</p><ul><li><p>在会话过程中，会话的有效时间可以在web.xml文件中设置，其默认值由Servlet容器定义。在&lt;tomcat安装目录&gt;\conf\web.xml文件中，可以找到如下一段配置信息：</p><pre><code>  &lt;session-config&gt;  //超时的时间值，单位为分钟，Tomcat的默认超时间隔为30分种      &lt;session-timeout&gt;30&lt;/session-timeout&gt;  &lt;/session-config&gt;</code></pre></li></ul><blockquote><p>注意：如果将&lt;session-timeout&gt;元素中的时间值设置成0或负数，则表示会话永不超时！</p></blockquote><h2 id="实现购物车"><a href="#实现购物车" class="headerlink" title="实现购物车"></a>实现购物车</h2><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/25/e4f2e7fadbe121cbd66989c4be42cf04.png"></p><ol><li>创建封装图书信息类</li><li>创建数据库模拟类</li><li>创建Servlet程序</li><li>运行项目，查看结果</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Cart;</span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Book</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line"><span class="keyword">private</span> String id;</span><br><span class="line"><span class="keyword">private</span> String name;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Book</span><span class="params">()</span> </span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Book</span><span class="params">(String id, String name)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.id = id;</span><br><span class="line"><span class="keyword">this</span>.name = name;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> id;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(String id)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.id = id;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> name;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.name = name;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Cart;</span><br><span class="line"><span class="keyword">import</span> java.util.Collection;</span><br><span class="line"><span class="keyword">import</span> java.util.LinkedHashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BookDB</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> Map&lt;String, Book&gt; books = <span class="keyword">new</span> LinkedHashMap&lt;String, Book&gt;();</span><br><span class="line"><span class="keyword">static</span> &#123;</span><br><span class="line">    books.put(<span class="string">&quot;1&quot;</span>, <span class="keyword">new</span> Book(<span class="string">&quot;1&quot;</span>, <span class="string">&quot;javaweb开发&quot;</span>));</span><br><span class="line">    books.put(<span class="string">&quot;2&quot;</span>, <span class="keyword">new</span> Book(<span class="string">&quot;2&quot;</span>, <span class="string">&quot;jdbc开发&quot;</span>));</span><br><span class="line">books.put(<span class="string">&quot;3&quot;</span>, <span class="keyword">new</span> Book(<span class="string">&quot;3&quot;</span>, <span class="string">&quot;java基础&quot;</span>));</span><br><span class="line">books.put(<span class="string">&quot;4&quot;</span>, <span class="keyword">new</span> Book(<span class="string">&quot;4&quot;</span>, <span class="string">&quot;struts开发&quot;</span>));</span><br><span class="line">books.put(<span class="string">&quot;5&quot;</span>, <span class="keyword">new</span> Book(<span class="string">&quot;5&quot;</span>, <span class="string">&quot;spring开发&quot;</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 获得所有的图书</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Collection&lt;Book&gt; <span class="title">getAll</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> books.values();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 根据指定的id获得图书</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Book <span class="title">getBook</span><span class="params">(String id)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> books.get(id);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Cart;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CartServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">resp.setContentType(<span class="string">&quot;text/html;charset=utf-8&quot;</span>);</span><br><span class="line">PrintWriter out = resp.getWriter();</span><br><span class="line"><span class="comment">// 变量cart引用用户的购物车</span></span><br><span class="line">List&lt;Book&gt; cart = <span class="keyword">null</span>;</span><br><span class="line"><span class="comment">// 变量pruFlag标记用户是否买过商品</span></span><br><span class="line"><span class="keyword">boolean</span> purFlag = <span class="keyword">true</span>;</span><br><span class="line"><span class="comment">// 获得用户的session</span></span><br><span class="line">HttpSession session = req.getSession(<span class="keyword">false</span>);</span><br><span class="line"><span class="comment">// 如果session为null，purFlag置为false</span></span><br><span class="line"><span class="keyword">if</span> (session == <span class="keyword">null</span>) &#123;</span><br><span class="line">purFlag = <span class="keyword">false</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">// 获得用户购物车</span></span><br><span class="line">cart = (List) session.getAttribute(<span class="string">&quot;cart&quot;</span>);</span><br><span class="line"><span class="comment">// 如果用的购物车为null，purFlag置为false</span></span><br><span class="line"><span class="keyword">if</span> (cart == <span class="keyword">null</span>) &#123;</span><br><span class="line">purFlag = <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 如果purFlag为false，表明用户没有购买图书 重定向到ListServlet页面</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">if</span> (!purFlag) &#123;</span><br><span class="line">out.write(<span class="string">&quot;对不起！您还没有购买任何商品！&lt;br&gt;&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">// 否则显示用户购买图书的信息</span></span><br><span class="line">out.write(<span class="string">&quot;您购买的图书有：&lt;br&gt;&quot;</span>);</span><br><span class="line"><span class="keyword">double</span> price = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (Book book : cart) &#123;</span><br><span class="line">out.write(book.getName() + <span class="string">&quot;&lt;br&gt;&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Cart;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.util.Collection;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ListBookServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">resp.setContentType(<span class="string">&quot;text/html;charset=utf-8&quot;</span>);</span><br><span class="line">PrintWriter out = resp.getWriter();</span><br><span class="line">Collection&lt;Book&gt; books = BookDB.getAll();</span><br><span class="line">out.write(<span class="string">&quot;本站提供的图书有：&lt;br&gt;&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (Book book : books) &#123;</span><br><span class="line"><span class="comment">//String url = &quot;/Session_Car/PurchaseServlet?id=&quot; + book.getId();</span></span><br><span class="line"><span class="comment">//out.write(book.getName() + &quot;&lt;a href=&#x27;&quot; + url </span></span><br><span class="line"><span class="comment">//+ &quot;&#x27;&gt;点击购买&lt;/a&gt;&lt;br&gt;&quot;);</span></span><br><span class="line">String url = <span class="string">&quot;/Session_Car/PurchaseServlet?id=&quot;</span> + book.getId();</span><br><span class="line">HttpSession s=req.getSession();</span><br><span class="line">String newUrl=resp.encodeRedirectURL(url);</span><br><span class="line">out.write(book.getName() + <span class="string">&quot;&lt;a href=&#x27;&quot;</span> + newUrl + <span class="string">&quot;&#x27;&gt;点击购买&lt;/a&gt;&lt;br&gt;&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">package</span> Cart;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"> <span class="keyword">import</span> java.util.*;</span><br><span class="line"> <span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"> <span class="keyword">import</span> javax.servlet.http.*;</span><br><span class="line"> <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PurchaseServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"> <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span></span></span><br><span class="line"><span class="function"> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"> <span class="comment">// 获得用户购买的商品</span></span><br><span class="line"> String id = req.getParameter(<span class="string">&quot;id&quot;</span>);</span><br><span class="line"> <span class="keyword">if</span> (id == <span class="keyword">null</span>) &#123;</span><br><span class="line"> <span class="comment">// 如果id为null，重定向到ListBookServlet页面</span></span><br><span class="line"> String url = <span class="string">&quot;/Session_Car/ListBookServlet&quot;</span>;</span><br><span class="line"> resp.sendRedirect(url);</span><br><span class="line"> <span class="keyword">return</span>;</span><br><span class="line"> &#125;</span><br><span class="line"> Book book = BookDB.getBook(id);</span><br><span class="line"> <span class="comment">// 创建或者获得用户的Session对象</span></span><br><span class="line"> HttpSession session = req.getSession();</span><br><span class="line"> <span class="comment">// 从Session对象中获得用户的购物车</span></span><br><span class="line"> List&lt;Book&gt; cart = (List) session.getAttribute(<span class="string">&quot;cart&quot;</span>);</span><br><span class="line"> <span class="keyword">if</span> (cart == <span class="keyword">null</span>) &#123;</span><br><span class="line"> <span class="comment">// 首次购买，为用户创建一个购物车(List集合模拟购物车)</span></span><br><span class="line"> cart = <span class="keyword">new</span> ArrayList&lt;Book&gt;();</span><br><span class="line"> <span class="comment">// 将购物城存入Session对象</span></span><br><span class="line"> session.setAttribute(<span class="string">&quot;cart&quot;</span>, cart);</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="comment">// 将商品放入购物车</span></span><br><span class="line"> cart.add(book);</span><br><span class="line"> <span class="comment">// 创建Cookie存放Session的标识号</span></span><br><span class="line"> Cookie cookie = <span class="keyword">new</span> Cookie(<span class="string">&quot;JSESSIONID&quot;</span>, session.getId());</span><br><span class="line"> cookie.setMaxAge(<span class="number">60</span> * <span class="number">30</span>);</span><br><span class="line"> cookie.setPath(<span class="string">&quot;/Session_Car&quot;</span>);</span><br><span class="line"> resp.addCookie(cookie);</span><br><span class="line"> <span class="comment">// 重定向到购物车页面</span></span><br><span class="line"> String url = <span class="string">&quot;/Session_Car/CartServlet&quot;</span>;</span><br><span class="line"><span class="comment">// resp.sendRedirect(url);</span></span><br><span class="line"> String newurl=resp.encodeRedirectURL(url);</span><br><span class="line"> resp.sendRedirect(newurl);</span><br><span class="line"></span><br><span class="line"> &#125;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>CartServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>Cart.CartServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>CartServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/CartServlet<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"> <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>ListBookServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>Cart.ListBookServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>ListBookServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/ListBookServlet<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"> <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>PurchaseServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>Cart.PurchaseServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>PurchaseServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/PurchaseServlet<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/25/e9d616950b7dd7a0f5a580734353d660.png"></p><h2 id="URL重写"><a href="#URL重写" class="headerlink" title="URL重写"></a>URL重写</h2><p>服务器在传递Session对象的ID属性时，是以Cookie的形式传递给浏览器的。但是，如果浏览器的Cookie功能被禁止，那么服务器端是无法通过Session保存用户会话信息的。考虑到浏览器可能不支持Cookie的情况，Servlet规范中引入了URL重写机制来保存用户的会话信息。当浏览器不支持Cookie或者关闭了Cookie功能，这时，在会话过程中，如果想让Web服务器可以保存用户的信息，必须对所有可能被客户端访问的请求路径进行URL重写。</p><ul><li>所谓URL重写，<strong>指的是将Session的会话标识号以参数的形式附加在超链接的URL地址后面。</strong></li><li>对于Tomcat来说，就是将JSESSIONID关键字作为参数名以及会话标识号的值作为参数值附加到URL地址后面。</li><li>HttpServletResponse接口中，定义了两个用于完成URL重写的方法<ol><li>encodeURL(String url)<br>用于对超链接和Form表单的action属性中设置的URL进行重写</li><li>encodeRedirectURL(String url)<br>用于对要传递给HttpServletResponse.sendRedirect方法dURL进行重写</li></ol></li><li>以以上购物车为实例<br>  1.对ListBookServlet类中for循环内的代码进行修改<pre><code>      String url = &quot;/Session_Car/PurchaseServlet?id=&quot; + book.getId();      HttpSession s=req.getSession();      String newUrl=resp.encodeRedirectURL(url);      out.write(book.getName()+&quot;&lt;a href=&#39;&quot;+newUrl+&quot;&#39;&gt;点击购买&lt;/a&gt;&lt;br/&gt;&quot;);</code></pre><ol start="2"><li>需要修改PurchaseServlet类的第38行代码<pre><code> String newurl=resp.encodeRedirectURL(url); resp.sendRedirect(newurl);</code></pre></li></ol></li></ul><h2 id="一次性验证码"><a href="#一次性验证码" class="headerlink" title="一次性验证码"></a>一次性验证码</h2><ul><li>在实际开发中，为了保证用户信息的安全，都会在网站登录的界面中添加一次性验证码，从而限制人们使用软件来暴力猜测密码。一次性验证码的功能同样可以使用Session来实现。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/25/3579a94014595c7307a78f4a7108f061.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/25/0828c1220021175acef9745c21d89c6b.png"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> CheckCode;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> String username;</span><br><span class="line"><span class="keyword">private</span> String password;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getUsername</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> username;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUsername</span><span class="params">(String username)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.username = username;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getPassword</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> password;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPassword</span><span class="params">(String password)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.password = password;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> CheckCode;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LogoutServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, </span></span></span><br><span class="line"><span class="function"><span class="params">                      HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">     <span class="comment">// 将Session对象中的User对象移除</span></span><br><span class="line">request.getSession().removeAttribute(<span class="string">&quot;user&quot;</span>);</span><br><span class="line">response.sendRedirect(<span class="string">&quot;/CheckCode/IndexServlet&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, </span></span></span><br><span class="line"><span class="function"><span class="params">       HttpServletResponse response)</span><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">doGet(request, response);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> CheckCode;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoginServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 未添加验证码</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">//public void doGet(HttpServletRequest request, </span></span><br><span class="line"><span class="comment">//                          HttpServletResponse response)</span></span><br><span class="line"><span class="comment">//throws ServletException, IOException &#123;</span></span><br><span class="line"><span class="comment">//response.setContentType(&quot;text/html;charset=utf-8&quot;);</span></span><br><span class="line"><span class="comment">//String username = request.getParameter(&quot;username&quot;);</span></span><br><span class="line"><span class="comment">//String password = request.getParameter(&quot;password&quot;);</span></span><br><span class="line"><span class="comment">//PrintWriter pw = response.getWriter();</span></span><br><span class="line"><span class="comment">//          //假设正确的用户名 是itcast 密码是123</span></span><br><span class="line"><span class="comment">//if ((&quot;itcast&quot;).equals(username) &amp;&amp; (&quot;123&quot;).equals(password)) &#123;</span></span><br><span class="line"><span class="comment">//User user = new User();</span></span><br><span class="line"><span class="comment">//user.setUsername(username);</span></span><br><span class="line"><span class="comment">//user.setPassword(password);</span></span><br><span class="line"><span class="comment">//request.getSession().setAttribute(&quot;user&quot;, user);</span></span><br><span class="line"><span class="comment">//response.sendRedirect(&quot;/Servlet_Project/IndexServlet&quot;);</span></span><br><span class="line"><span class="comment">//&#125; else &#123;</span></span><br><span class="line"><span class="comment">//pw.write(&quot;用户名或密码错误，登录失败&quot;);</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 添加了验证码</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request,HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">response.setContentType(<span class="string">&quot;text/html;charset=utf-8&quot;</span>);</span><br><span class="line">String username = request.getParameter(<span class="string">&quot;username&quot;</span>);</span><br><span class="line">String password = request.getParameter(<span class="string">&quot;password&quot;</span>);</span><br><span class="line">String checkCode = request.getParameter(<span class="string">&quot;check_code&quot;</span>);</span><br><span class="line">String savedCode = (String) request.getSession().getAttribute(</span><br><span class="line"><span class="string">&quot;check_code&quot;</span>);</span><br><span class="line">PrintWriter pw = response.getWriter();</span><br><span class="line"><span class="keyword">if</span> ((<span class="string">&quot;lzy&quot;</span>).equals(username) &amp;&amp; (<span class="string">&quot;123&quot;</span>).equals(password)</span><br><span class="line">&amp;&amp; checkCode.equals(savedCode)) &#123;</span><br><span class="line">User user = <span class="keyword">new</span> User();</span><br><span class="line">user.setUsername(username);</span><br><span class="line">user.setPassword(password);</span><br><span class="line">request.getSession().setAttribute(<span class="string">&quot;user&quot;</span>, user);</span><br><span class="line">response.sendRedirect(<span class="string">&quot;/CheckCode/IndexServlet&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (checkCode.equals(savedCode)) &#123;</span><br><span class="line">pw.write(<span class="string">&quot;用户名或密码错误，登录失败&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">pw.write(<span class="string">&quot;验证码错误&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, </span></span></span><br><span class="line"><span class="function"><span class="params">                           HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">doGet(request, response);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> CheckCode;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">IndexServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request,HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">          <span class="comment">// 解决乱码问题</span></span><br><span class="line">response.setContentType(<span class="string">&quot;text/html;charset=utf-8&quot;</span>);</span><br><span class="line">         <span class="comment">// 创建或者获取保存用户信息的Session对象</span></span><br><span class="line">HttpSession session = request.getSession();</span><br><span class="line">User user = (User) session.getAttribute(<span class="string">&quot;user&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (user == <span class="keyword">null</span>) &#123;</span><br><span class="line">response.getWriter().print(</span><br><span class="line"><span class="string">&quot;您还没有登录，请&lt;a href=&#x27;/CheckCode/login.html&#x27;&gt;登录&lt;/a&gt;&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            response.getWriter().print(<span class="string">&quot;您已登录，欢迎你，&quot;</span> + user.getUsername() + <span class="string">&quot;！&quot;</span>);</span><br><span class="line">response.getWriter().print(</span><br><span class="line"><span class="string">&quot;&lt;a href=&#x27;/CheckCode/LogoutServlet&#x27;&gt;退出&lt;/a&gt;&quot;</span>);</span><br><span class="line"><span class="comment">// 创建Cookie存放Session的标识号</span></span><br><span class="line">Cookie cookie = <span class="keyword">new</span> Cookie(<span class="string">&quot;JSESSIONID&quot;</span>, session.getId());</span><br><span class="line">cookie.setMaxAge(<span class="number">60</span> * <span class="number">30</span>);</span><br><span class="line">cookie.setPath(<span class="string">&quot;/CheckCode&quot;</span>);</span><br><span class="line">response.addCookie(cookie);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, </span></span></span><br><span class="line"><span class="function"><span class="params">                           HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">doGet(request, response);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> CheckCode;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">IndexServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request,HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">          <span class="comment">// 解决乱码问题</span></span><br><span class="line">response.setContentType(<span class="string">&quot;text/html;charset=utf-8&quot;</span>);</span><br><span class="line">         <span class="comment">// 创建或者获取保存用户信息的Session对象</span></span><br><span class="line">HttpSession session = request.getSession();</span><br><span class="line">User user = (User) session.getAttribute(<span class="string">&quot;user&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (user == <span class="keyword">null</span>) &#123;</span><br><span class="line">response.getWriter().print(</span><br><span class="line"><span class="string">&quot;您还没有登录，请&lt;a href=&#x27;/CheckCode/login.html&#x27;&gt;登录&lt;/a&gt;&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            response.getWriter().print(<span class="string">&quot;您已登录，欢迎你，&quot;</span> + user.getUsername() + <span class="string">&quot;！&quot;</span>);</span><br><span class="line">response.getWriter().print(</span><br><span class="line"><span class="string">&quot;&lt;a href=&#x27;/CheckCode/LogoutServlet&#x27;&gt;退出&lt;/a&gt;&quot;</span>);</span><br><span class="line"><span class="comment">// 创建Cookie存放Session的标识号</span></span><br><span class="line">Cookie cookie = <span class="keyword">new</span> Cookie(<span class="string">&quot;JSESSIONID&quot;</span>, session.getId());</span><br><span class="line">cookie.setMaxAge(<span class="number">60</span> * <span class="number">30</span>);</span><br><span class="line">cookie.setPath(<span class="string">&quot;/CheckCode&quot;</span>);</span><br><span class="line">response.addCookie(cookie);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, </span></span></span><br><span class="line"><span class="function"><span class="params">                           HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">doGet(request, response);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot;</span> </span></span><br><span class="line"><span class="meta">                           <span class="meta-string">&quot;http://www.w3.org/TR/html4/loose.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Type&quot;</span> <span class="attr">content</span>=<span class="string">&quot;text/html; charset=UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Insert title here<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">name</span>=<span class="string">&quot;reg&quot;</span> <span class="attr">action</span>=<span class="string">&quot;/CheckCode/LoginServlet&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">用户名: <span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">密<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span>码：<span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">验证码：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;check_code&quot;</span>&gt;</span> </span><br><span class="line">               <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;/CheckCode/CheckServlet&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交&quot;</span> <span class="attr">id</span>=<span class="string">&quot;bt&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>CheckServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">CheckCode.CheckServlet</span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>CheckServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/CheckServlet<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>IndexServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">CheckCode.IndexServlet</span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>IndexServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/IndexServlet<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>LogoutServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">CheckCode.LogoutServlet</span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>LogoutServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/LogoutServlet<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>LoginServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">CheckCode.LoginServlet</span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>LoginServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/LoginServlet<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/25/f2b336ae75e6bb9b46ac3c824df13f0c.png"></li></ul>]]></content>
      
      
      <categories>
          
          <category> Web前端 </category>
          
          <category> JavaWeb </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaWeb </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaWeb🌍请求与响应</title>
      <link href="2021/01/15/%E5%89%8D%E7%AB%AF/JavaWeb/JavaWeb_%E8%AF%B7%E6%B1%82%E4%B8%8E%E5%93%8D%E5%BA%94/"/>
      <url>2021/01/15/%E5%89%8D%E7%AB%AF/JavaWeb/JavaWeb_%E8%AF%B7%E6%B1%82%E4%B8%8E%E5%93%8D%E5%BA%94/</url>
      
        <content type="html"><![CDATA[<h1 id="请求和响应"><a href="#请求和响应" class="headerlink" title="请求和响应"></a>请求和响应</h1><ul><li>Servlet最主要的作用就是处理客户端请求，并向客户端做出响应。为此，针对Servlet的每次请求，Web服务器在调用service()之前，都会创建两个对象，分别是HttpServletRequest和HttpServletResponse。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/25/cafcfa6ea0bc21091d736408ef921bdd.png"></p><h1 id="HttpServletResponse对象"><a href="#HttpServletResponse对象" class="headerlink" title="HttpServletResponse对象"></a>HttpServletResponse对象</h1><p>HttpServletResponse接口中定义了向客户端发送<strong>响应状态码、响应消息头、响应消息体</strong> 的方法。</p><h2 id="发送状态码"><a href="#发送状态码" class="headerlink" title="发送状态码"></a>发送状态码</h2><ol><li><p><code>setStatus(int status)</code>方法<br>该方法用于<strong>设置HTTP响应消息的状态码</strong>，并生成响应状态行。正常情况下，Web服务器默认产生一个状态码为200的状态行。</p></li><li><p><code>sendError(int sc)</code>方法<br>该方法用于<strong>发送错误信息的状态码</strong>,例如，404状态码表示找不到客户端请求的资源。在response对象中，提供了两个重载sendError(int sc)的方法。</p></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sendError</span><span class="params">(<span class="keyword">int</span> code)</span> <span class="keyword">throws</span> java.io.IOException</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sendError</span><span class="params">(<span class="keyword">int</span> code,String message)</span> <span class="keyword">throws</span> java.io.IOException</span></span><br></pre></td></tr></table></figure><h2 id="发送响应消息头"><a href="#发送响应消息头" class="headerlink" title="发送响应消息头"></a>发送响应消息头</h2><ul><li>设置各种头字段</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/25/de58e02f6b40bd02f82eec44d0bcfb1d.png"></p><ul><li>设置字符编码</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/25/208b32de0996f4acd4c67a9310568a88.png"></p><h2 id="发送响应消息体"><a href="#发送响应消息体" class="headerlink" title="发送响应消息体"></a>发送响应消息体</h2><ol><li><code>getOutputStream()</code>方法<br>该方法所获取的<strong>字节输出流</strong>对象为ServletOutputStream类型。用于ServletOutputStream是OutputStream的子类,它可以直接输出字节数组中的二进制数据。因此，要想输出二进制格式的响应正文，就需要使用getOutputStream()方法。</li><li><code>getWriter()</code>方法<br>该方法所获取的<strong>字符输出流</strong>对象为PrintWriter类型。由于PrintWriter类型的对象可以直接输出字符文本内容，因此，要想输出内容全为字符文本的网页文档，需要使用getWriter()方法。</li></ol><blockquote><p>注意：两种方法不能同时写，不然会报错出500，并且谁在前报谁错。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Review;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PrintServlet1</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">String data=<span class="string">&quot;itcast&quot;</span>;</span><br><span class="line"><span class="comment">//获取字节输出流对象</span></span><br><span class="line">OutputStream out=response.getOutputStream();</span><br><span class="line">out.write(data.getBytes());</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.doGet(request, response);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Review;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PrintServlet2</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">String data=<span class="string">&quot;itcast&quot;</span>;</span><br><span class="line"><span class="comment">//获取字符输出流对象</span></span><br><span class="line">PrintWriter print=response.getWriter();</span><br><span class="line">print.write(data);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.doGet(request, response);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="HttServletResponse应用"><a href="#HttServletResponse应用" class="headerlink" title="HttServletResponse应用"></a>HttServletResponse应用</h2><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/25/09c2797cfa990bcf4965749d153e2f27.png"></p><h3 id="中文乱码问题"><a href="#中文乱码问题" class="headerlink" title="中文乱码问题"></a>中文乱码问题</h3><p>由于计算机中的数据都是以二进制形式存储的，因此，当传输文本时，就会发生字符和字节之间的转换。字符与字节之间是通过查<code>码表</code>完成的，字符转换成字节的过程为<code>编码</code>，字节转换成字符的过程为<code>解码</code>。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> chapter04;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ChineseServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"><span class="comment">//response.setCharacterEncoding(&quot;utf-8&quot;);</span></span><br><span class="line">response.setContentType(<span class="string">&quot;text/html;charset=utf-8&quot;</span>);</span><br><span class="line">String data=<span class="string">&quot;中国&quot;</span>;</span><br><span class="line">PrintWriter out=response.getWriter();</span><br><span class="line">out.println(data);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">doGet(request, response);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>response对象的字符输出流在编码时，采用的是<code>ISO-8859-1</code>的字符码表，不兼容中文，会将”中国”编码为“63 63”，当浏览器接收解码时，会采用默认的码表<code>GB2312</code>，将”63”解码为”?”。</p><blockquote><p>综上分析，需要设置HttpServletResponse和浏览器都设置为”UTF-8”</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//设置HttpServletResponse使用utf-8</span></span><br><span class="line">response.setCharacterEncoding(<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line"><span class="comment">//设置浏览器使用utf-8</span></span><br><span class="line">response.setHeader(<span class="string">&quot;Content-Type&quot;</span>,<span class="string">&quot;text/html;charset=utf-8&quot;</span>);</span><br><span class="line"><span class="comment">//包含以上两种方式的写法:</span></span><br><span class="line">response.setContentType(<span class="string">&quot;text/html;charset=utf-8&quot;</span>);</span><br></pre></td></tr></table></figure><h3 id="定时刷新跳转"><a href="#定时刷新跳转" class="headerlink" title="定时刷新跳转"></a>定时刷新跳转</h3><p>在HTTP协议中，定义了一个Refresh头字段，可以通知浏览器在指定的时间内自动刷新并跳转到其他页面。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> MyProject;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RefreshServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"><span class="comment">//2秒后跳转到我的博客</span></span><br><span class="line">response.setHeader(<span class="string">&quot;Refresh&quot;</span>, <span class="string">&quot;2;URL=http://www.lzyblog.github.io&quot;</span>);</span><br><span class="line"><span class="comment">//每隔3秒定时刷新当前页面</span></span><br><span class="line"><span class="comment">//reponse.setHeader(&quot;Refresh&quot;,&quot;3&quot;);</span></span><br><span class="line"><span class="comment">//response.getWriter().println(new java.util.Date());//输出当前时间</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.doGet(request, response);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="请求重定向"><a href="#请求重定向" class="headerlink" title="请求重定向"></a>请求重定向</h3><p>Web服务器接受到客户端的请求后，由于某些条件限制，不能访问当前请求URL所指向的Web资源，而是指定了一个新的资源路径，让客户端重新发送请求。</p><p>为了实现请求重定向，在HttpServletResponse接口中，定义了一个<code>sendRedirect()</code>方法，该方法用于生成<code>302响应码和Location响应头</code>，从而通知客户端重新访问Location响应头中指定的URL，sendRedirect()方法的完整语法如下:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sendRedirect</span><span class="params">(java.lang.String  Location)</span> <span class="keyword">throws</span> java.io.IOException</span>&#123;</span><br><span class="line">            <span class="comment">//代码</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/25/5889a54e1e0e33c81ca7d439bfb19b6c.png"><br>以下模拟用户登录来帮助理解，创建login.html登录表单和welcome.html欢迎界面(在WebContent下建立)，再创一个LoginServlet的类用于处理用户登录请求。<code>Servlet_Project</code>为包名。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Insert title here<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;/Servlet_Poject/LoginServlet&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">用户名:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">密<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span>码:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;登录&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Insert title here<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">欢迎您,登陆成功！</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> chapter04;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoginServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">response.setContentType(<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line"><span class="comment">//用HttpServletRequest对象的getParameter()方法获取用户名和密码;</span></span><br><span class="line">String username=request.getParameter(<span class="string">&quot;username&quot;</span>);</span><br><span class="line">String password=request.getParameter(<span class="string">&quot;password&quot;</span>);</span><br><span class="line"><span class="comment">//假设用户名和密码分别为：itcase和123</span></span><br><span class="line"><span class="keyword">if</span>((<span class="string">&quot;itcast&quot;</span>).equals(username)&amp;&amp;(<span class="string">&quot;123&quot;</span>).equals(password)) &#123;</span><br><span class="line"><span class="comment">//如果用户名和密码正确，重定位到welcome.html</span></span><br><span class="line">response.sendRedirect(<span class="string">&quot;/Servlet_Poject/welcome.html&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">   <span class="comment">//如果用户名和密码错误，重定位到login.html</span></span><br><span class="line">response.sendRedirect(<span class="string">&quot;/Servlet_Poject/login.html&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">doGet(request, response);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="HttpServletRequest对象"><a href="#HttpServletRequest对象" class="headerlink" title="HttpServletRequest对象"></a>HttpServletRequest对象</h1><p>HttpServletRequest接口中定义了获取<strong>请求行、请求头、请求消息体</strong>的相关方法。</p><h2 id="获取请求行信息"><a href="#获取请求行信息" class="headerlink" title="获取请求行信息"></a>获取请求行信息</h2><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/25/19681439b47ff60b1a35f37da958ce18.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/25/c2b3460a19bd56c8006abb30cf5051b9.png"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> MyProject;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.*;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RequestLineServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">response.setContentType(<span class="string">&quot;text/html;charset=utf-8&quot;</span>);</span><br><span class="line">PrintWriter out=response.getWriter();</span><br><span class="line"><span class="comment">//获取请求行的相关信息</span></span><br><span class="line">out.println(<span class="string">&quot;getMethod:&quot;</span>+request.getMethod()+<span class="string">&quot;&lt;br/&gt;&quot;</span>);</span><br><span class="line">out.println(<span class="string">&quot;getRequestURI:&quot;</span>+request.getRequestURI()+<span class="string">&quot;&lt;br/&gt;&quot;</span>);</span><br><span class="line">out.println(<span class="string">&quot;getQueryString:&quot;</span>+request.getQueryString()+<span class="string">&quot;&lt;br/&gt;&quot;</span>);</span><br><span class="line">out.println(<span class="string">&quot;getProtocol:&quot;</span>+request.getProtocol()+<span class="string">&quot;&lt;br/&gt;&quot;</span>);</span><br><span class="line">out.println(<span class="string">&quot;getContextPath:&quot;</span>+request.getContextPath()+<span class="string">&quot;&lt;br/&gt;&quot;</span>);</span><br><span class="line">out.println(<span class="string">&quot;getPathInfo:&quot;</span>+request.getPathInfo()+<span class="string">&quot;&lt;br/&gt;&quot;</span>);</span><br><span class="line">out.println(<span class="string">&quot;getPathTranslated:&quot;</span>+request.getPathTranslated()+<span class="string">&quot;&lt;br/&gt;&quot;</span>);</span><br><span class="line">out.println(<span class="string">&quot;getServletPath:&quot;</span>+request.getServletPath()+<span class="string">&quot;&lt;br/&gt;&quot;</span>);</span><br><span class="line">out.println(<span class="string">&quot;getRemoteAddr:&quot;</span>+request.getRemoteAddr()+<span class="string">&quot;&lt;br/&gt;&quot;</span>);</span><br><span class="line">out.println(<span class="string">&quot;getRemoteHost:&quot;</span>+request.getRemoteHost()+<span class="string">&quot;&lt;br/&gt;&quot;</span>);</span><br><span class="line">out.println(<span class="string">&quot;getLocalAddr:&quot;</span>+request.getLocalAddr()+<span class="string">&quot;&lt;br/&gt;&quot;</span>);</span><br><span class="line">out.println(<span class="string">&quot;getLocalName:&quot;</span>+request.getLocalName()+<span class="string">&quot;&lt;br/&gt;&quot;</span>);</span><br><span class="line">out.println(<span class="string">&quot;getServerName:&quot;</span>+request.getServerName()+<span class="string">&quot;&lt;br/&gt;&quot;</span>);</span><br><span class="line">out.println(<span class="string">&quot;getServerPort:&quot;</span>+request.getServerPort()+<span class="string">&quot;&lt;br/&gt;&quot;</span>);</span><br><span class="line">out.println(<span class="string">&quot;getScheme:&quot;</span>+request.getScheme()+<span class="string">&quot;&lt;br/&gt;&quot;</span>);</span><br><span class="line">out.println(<span class="string">&quot;getRequestURL:&quot;</span>+request.getRequestURL()+<span class="string">&quot;&lt;br/&gt;&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.doGet(request, response);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/22/6293072a469cd6c13bafc1d6c9000866.png"></p><h2 id="获取请求消息头"><a href="#获取请求消息头" class="headerlink" title="获取请求消息头"></a>获取请求消息头</h2><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/25/181df91ab8785ed50a5d9b74129e3765.png"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> MyProject;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RequestHeadersServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">response.setContentType(<span class="string">&quot;text/html;charset=utf-8&quot;</span>);</span><br><span class="line">PrintWriter out=response.getWriter();</span><br><span class="line"><span class="comment">//获取请求消息中所有头字段</span></span><br><span class="line">Enumeration headerNames =request.getHeaderNames();</span><br><span class="line"><span class="comment">//循环遍历所有请求头，并通过getHeader()方法获取一个指定名称的头字段</span></span><br><span class="line"><span class="keyword">while</span>(headerNames.hasMoreElements()) &#123;</span><br><span class="line">String headerName=(String)headerNames.nextElement();</span><br><span class="line">out.print(headerName+<span class="string">&quot;:&quot;</span>+request.getHeader(headerName)+<span class="string">&quot;&lt;br&gt;&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.doGet(request, response);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/22/fc58899708146068305991f61da59086.png"></p><h2 id="Referer防”盗链”"><a href="#Referer防”盗链”" class="headerlink" title="Referer防”盗链”"></a>Referer防”盗链”</h2><p>Referer头字段可以用于网站的<strong>防盗链</strong>。什么是盗链呢？假如A网站并没有某些资源，而是通过HTMl文件中使用&lt;a&gt;&lt;/a&gt;标签链接到B网站的资源，将其展示给浏览者。A网站提高了自己网站的访问量，却加重了B网站服务器的负担，损害了合法利益。而当你单击一个网页上的超链接时，浏览器会使用<strong>Referer头字段标识发出请求的超链接所在网页的URL</strong>，从而阻止访问或者跳转到指定的页面。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/25/db0ed410b8b886db61e9fbcda9d33239.png"><br><strong>实例描述</strong>：在Servlet_Project项目下Myproject包中，编写一个<code>DownManagertServlet</code>的类负责提供下载内容，要求下载请求的链接必须是通过本网站进入的，否则会将请求转发给下载说明的HTML页面（<code>download.html</code>）。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> MyProject;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DownManagertServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">response.setContentType(<span class="string">&quot;text/html;charset=utf-8&quot;</span>);</span><br><span class="line">PrintWriter out=response.getWriter();</span><br><span class="line"><span class="comment">//获取Referer头的值</span></span><br><span class="line">String referer=request.getHeader(<span class="string">&quot;referer&quot;</span>);</span><br><span class="line"><span class="comment">//获取访问地址</span></span><br><span class="line">String sitePart=<span class="string">&quot;http://&quot;</span>+request.getServerName();</span><br><span class="line"><span class="comment">//判断referer头是否为空,这个头的地址是否以sitePart开始</span></span><br><span class="line"><span class="keyword">if</span>(referer !=<span class="keyword">null</span> &amp;&amp; referer.startsWith(sitePart)) &#123;</span><br><span class="line"><span class="comment">//处理正在下载的请求</span></span><br><span class="line">out.println(<span class="string">&quot;dealing download....&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">//非法下载请求跳转到download.html页面</span></span><br><span class="line">RequestDispatcher rd=request.getRequestDispatcher(<span class="string">&quot;/download.html&quot;</span>);</span><br><span class="line">rd.forward(request, response);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.doGet(request, response);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Insert title here<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/Servlet_Project/DownManagertServlet&quot;</span>&gt;</span>download<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><p>当<code>第一次</code>请求DownManagerServlet时，请求消息中<code>不含Referer请求头</code>，所以DownMagaerServlet将下载请求转发给了download.html页面。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/22/4e288eccd3fc3a86463ea81a1fbf7685.png"></p></li><li><p>单击”download”链接后，请求信息中<code>包含了Referer头字段</code>，并且其值与DownManagerServlet位于<code>同一个Web站点</code>，因此接受下载请求。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/22/1680ba3174d45170c1b4a72387f7aa88.png"></p></li></ul><h1 id="HttpServletRequest应用"><a href="#HttpServletRequest应用" class="headerlink" title="HttpServletRequest应用"></a>HttpServletRequest应用</h1><h2 id="获取请求参数"><a href="#获取请求参数" class="headerlink" title="获取请求参数"></a>获取请求参数</h2><p>在实际开发中，经常需要获取用户提交的表单数据，例如，用户名、密码、电子邮件等<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/25/d96ea8f5c81d0442c979d75c827a7fe8.png"><br>在HttpServletRequest接口中，定义了一系列获取请求参数的方法<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/25/e2d15bbe2e2458b4b39efafef4886be5.png"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> MyProject;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ResquestParamsServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">  request.setCharacterEncoding(<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">  String name=request.getParameter(<span class="string">&quot;username&quot;</span>);</span><br><span class="line">  String password=request.getParameter(<span class="string">&quot;password&quot;</span>);</span><br><span class="line">  System.out.println(<span class="string">&quot;用户名:&quot;</span>+name);</span><br><span class="line">  System.out.println(<span class="string">&quot;密码:&quot;</span>+password);</span><br><span class="line">  <span class="comment">//获取参数名为&quot;hobby&quot;的值</span></span><br><span class="line">  String hobby[]=request.getParameterValues(<span class="string">&quot;hobby&quot;</span>);</span><br><span class="line">  System.out.println(<span class="string">&quot;爱好:&quot;</span>);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;hobby.length;i++) &#123;</span><br><span class="line">  System.out.println(hobby[i]+<span class="string">&quot;,&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.doGet(request, response);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Insert title here<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;/Servlet_Project/ResquestParamsServlet&quot;</span> <span class="attr">method</span>=<span class="string">&quot;POST&quot;</span>&gt;</span></span><br><span class="line">用户名:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">密<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span>码:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">爱好:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;hobby&quot;</span> <span class="attr">value</span>=<span class="string">&quot;sing&quot;</span>&gt;</span>唱歌</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;hobby&quot;</span> <span class="attr">value</span>=<span class="string">&quot;dance&quot;</span>&gt;</span>跳舞</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;hobby&quot;</span> <span class="attr">value</span>=<span class="string">&quot;football&quot;</span>&gt;</span>足球<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/22/3fc118d7cf3c48afc36577cfdda7adac.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/22/9e3fbc05610ff87a24b3c1b19c077b15.png"><br> 由于HTML设置了浏览器在传递参数是采用utf-8编码，但在解码是采用默认的ISO-8859-1，会发生乱码问题。</p><ul><li>解决方案：<ol><li>POST: request.setCharacterEncoding(“utf-8”); （只对POST有效）</li><li>GET: name=new String(<code>name.getBytes(&quot;iso8859-1&quot;)</code>,”<code>utf-8</code>“); （先使用错误码表ISO-8859-1将用户名重新编码，再使用UTF-8进行解码）</li></ol></li></ul><h2 id="Request对象传递数据"><a href="#Request对象传递数据" class="headerlink" title="Request对象传递数据"></a>Request对象传递数据</h2><p>1.<code>setAttriute()</code>方法<br>用于将一个对象与一个名称关联后存储进ServletRequest对象中<br>如果ServletRequest对象中已经存在指定名称的属性，会先删除原来的属性，再添加新的属性。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAttribute</span><span class="params">(java.lang.String name,java.lang.Object o)</span></span>;</span><br></pre></td></tr></table></figure><p>2.<code>getAttribute()</code>方法<br>从ServletRequest对象中返回指定名称的属性对象。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> java.lang.<span class="function">Object <span class="title">getAttribute</span><span class="params">(java.lang.String name)</span></span>;</span><br></pre></td></tr></table></figure><p>3.<code>removeAttribute()</code>方法<br>从ServletRequest对象中删除指定名称的属性。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">removeAttribute</span><span class="params">(java.lang.String name)</span></span>;</span><br></pre></td></tr></table></figure><p>4.<code>getAttributeNames()</code>方法<br>返回一个包含ServletRequest对象中所有属性名的Enumeration对象。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> java.util.<span class="function">Enumeration <span class="title">getAttributeNames</span><span class="params">(java.lang.String name)</span></span>;</span><br></pre></td></tr></table></figure><h1 id="RequestDispatcher对象"><a href="#RequestDispatcher对象" class="headerlink" title="RequestDispatcher对象"></a>RequestDispatcher对象</h1><p>当一个Web资源收到客户端的请求后，如果希望服务器通知另外一个资源去处理请求，除了使用sendRedirect()请求重定向外，还可以通过<strong>RequestDispatcher接口的实例对象</strong>来实现。</p><ul><li>ServletRequest接口中获取RequestDispatcher对象的方法</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/25/2da870415f0037d6da628f69e0f24a3d.png"></p><ul><li>RequestDispatcher对象中的相关方法</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/25/472946e0119d0927ce640ef55d8c3eeb.png"></p><h2 id="请求转发forward"><a href="#请求转发forward" class="headerlink" title="请求转发forward()"></a>请求转发forward()</h2><p>在Servlet中，如果当前Web资源不想处理请求时，可以通过<code>forward()</code>方法将当前请求<code>传递给其他Web资源</code>进行处理。如图所示，当客户端访问Servlet1时，可以通过foward()方法将请求转发给其他Web资源(如Servlet2)，处理完后，返回客户端。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/25/b23c812ce032d50008017410fb8901b4.png"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> chapter04;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RequestForwardServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">response.setContentType(<span class="string">&quot;text/html;charset=utf-8&quot;</span>);</span><br><span class="line"><span class="comment">//将数据存储到request对象中</span></span><br><span class="line">request.setAttribute(<span class="string">&quot;company&quot;</span>, <span class="string">&quot;北京传智播客有限公司&quot;</span>);</span><br><span class="line">RequestDispatcher dispatcher=request.getRequestDispatcher(<span class="string">&quot;/ResultServlet&quot;</span>);</span><br><span class="line"><span class="comment">//用forward()方法将当前Servlet的请求转发到ResultServlet页面。</span></span><br><span class="line">dispatcher.forward(request, response);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">doGet(request, response);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> chapter04;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ResultServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">response.setContentType(<span class="string">&quot;text/html;charset=utf-8&quot;</span>);</span><br><span class="line"><span class="comment">//获取PrintWriter对象用于输出信息</span></span><br><span class="line">PrintWriter out=response.getWriter();</span><br><span class="line"><span class="comment">//获取request请求对象中保存的数据</span></span><br><span class="line">String company=(String) request.getAttribute(<span class="string">&quot;company&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(company!=<span class="keyword">null</span>) &#123;</span><br><span class="line">out.println(<span class="string">&quot;公司名称:&quot;</span>+company+<span class="string">&quot;&lt;br&gt;&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">doGet(request, response);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/23/889ff7ef685e07393bb0ce23c2ae8171.png"></p><blockquote><p>可以看出地址栏是RequestForwardServlet的请求路径，却显示了另一个页面的内容，这是因为请求转发是发生在服务内部的行为，在一次请求中可以使用request进行数据共享。</p></blockquote><h2 id="请求包含incude"><a href="#请求包含incude" class="headerlink" title="请求包含incude()"></a>请求包含incude()</h2><p>指使用include()方法将Servlet请求转发给其他Web资源进行处理，在请求包含返回的响应消息中，即包含了<code>当前Servlet的响应消息</code>，也包含了<code>其他Web资源所作出的响应消息</code>。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/25/eb96075d37370c30167f6167987c079d.png"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> chapter04;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.*;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">IncludingServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">response.setContentType(<span class="string">&quot;text/html;charset=utf-8&quot;</span>);</span><br><span class="line">PrintWriter out=response.getWriter();</span><br><span class="line">RequestDispatcher rd=request.getRequestDispatcher(<span class="string">&quot;/IncludedServlet?p1=abc&quot;</span>);</span><br><span class="line">out.println(<span class="string">&quot;before including&quot;</span>+<span class="string">&quot;&lt;br/&gt;&quot;</span>);</span><br><span class="line">rd.include(request, response);</span><br><span class="line">out.println(<span class="string">&quot;after including&quot;</span>+<span class="string">&quot;&lt;br/&gt;&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">doGet(request, response);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> chapter04;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.*;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">IncludedServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"><span class="comment">//设置响应时使用的字符编码</span></span><br><span class="line">response.setContentType(<span class="string">&quot;text/html;charset=utf-8&quot;</span>);</span><br><span class="line">response.setCharacterEncoding(<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">PrintWriter out=response.getWriter();</span><br><span class="line">out.println(<span class="string">&quot;中国&quot;</span>+<span class="string">&quot;&lt;br/&gt;&quot;</span>);</span><br><span class="line">out.println(<span class="string">&quot;URI:&quot;</span>+request.getRequestURI()+<span class="string">&quot;&lt;br/&gt;&quot;</span>);</span><br><span class="line">out.println(<span class="string">&quot;QueryString:&quot;</span>+request.getQueryString()+<span class="string">&quot;&lt;br/&gt;&quot;</span>);</span><br><span class="line">out.println(<span class="string">&quot;parameter p1:&quot;</span>+request.getParameter(<span class="string">&quot;p1&quot;</span>)+<span class="string">&quot;&lt;br/&gt;&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">doGet(request, response);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/23/91910f1c29dc8020b1ee5b92e1b55d70.png"></p>]]></content>
      
      
      <categories>
          
          <category> Web前端 </category>
          
          <category> JavaWeb </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaWeb </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaWeb🌍Servlet基础</title>
      <link href="2021/01/15/%E5%89%8D%E7%AB%AF/JavaWeb/JavaWeb_Servlet%E5%9F%BA%E7%A1%80/"/>
      <url>2021/01/15/%E5%89%8D%E7%AB%AF/JavaWeb/JavaWeb_Servlet%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h1 id="Servlet基础"><a href="#Servlet基础" class="headerlink" title="Servlet基础"></a>Servlet基础</h1><ul><li>Servlet由Servlet容器提供，所谓的Servlet容器是指提供了Servlet 功能的服务器（指Tomcat），Servlet容器将Servlet动态的加载到服务器上。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/25/d8d5297706bd994c04e66e7af09eac98.png"></p><ol><li>Servlet的请求首先会被HTTP服务器接收，HTTP服务器只负责静态HTML页面的解析。</li><li>Servlet的请求转交给Servlet容器，Servlet容器会根据web.xml文件中的映射关系，调用相应的Servlet。</li><li>Servlet将处理的结果返回给Servlet容器，并通过HTTP服务器将响应传输给客户端。</li></ol><ul><li>Servlet的特点<ol><li>方便：Servlet提供了大量的实用工具例程，如处理很难完成的HTML表单数据、读取和设置HTTP头，以及处理Cookie和跟踪会话等。</li><li>跨平台：Servlet用Java类编写，可以在不同操作系统平台和不同应用服务器平台下运行。</li><li>灵活性和可扩展性：采用Servlet开发的Web应用程序，由于Java类的继承性及构造函数等特点，使得应用灵活，可随意扩展。</li></ol></li></ul><h1 id="Servlet接口及其实现类"><a href="#Servlet接口及其实现类" class="headerlink" title="Servlet接口及其实现类"></a>Servlet接口及其实现类</h1><ul><li><p>在Servlet接口中定义了5个抽象方法</p><ol><li> void init(ServletConfig config)</li><li> ServletConfig getServletConfig()</li><li> String getServletInfo()</li><li> void service(ServletRequest req，ServletResponse res)</li><li> void destroy()</li></ol></li><li><p>HttpServlet类的常用方法</p><ol><li>protected void doGet(HttpServletRequest req, HttpServletResponse resp)</li><li>protected void doPost(HttpServletRequest req, HttpServletResponse resp)</li><li>protected void doPut(HttpServletRequest req, HttpServletResponse resp)</li></ol></li></ul><h1 id="第一个Servlet程序"><a href="#第一个Servlet程序" class="headerlink" title="第一个Servlet程序"></a>第一个Servlet程序</h1><ul><li>创建web工程<br>【FIle】-&gt;【new】-&gt;【Dynamic Web Project】-&gt;<img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/25/6aaa5d2395e4ca603e1baf7d88475a2b.png"><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/25/6ee4c399dc4d9fe61a13a39cb02e3332.png"><blockquote><p>继承GenericServlet后，除了service()方法，其他方法都已经实现。可见，继承GenericServlet类比实现Servlet接口更加简便。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloWorldServlet</span> <span class="keyword">extends</span> <span class="title">GenericServlet</span></span>&#123;</span><br><span class="line">       <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">service</span><span class="params">(ServletRequest request,ServletResponse response)</span><span class="keyword">throws</span> ServletException,IOException</span>&#123;</span><br><span class="line">       <span class="comment">//得到输出流PrinterWriter对象,Servlet使用输出流来产生响应</span></span><br><span class="line">       PrintWriter out=response.getWriter();</span><br><span class="line">       <span class="comment">//使用输出流对象向客户端发送字符数据</span></span><br><span class="line">       out.println(<span class="string">&quot;Hello World&quot;</span>);</span><br><span class="line">       &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p><code>配置web.xml文件,虚拟路径的映射</code></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- servlet标签给Tomcat配置Servlet程序 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- servlet-name标签给Servlet程序起一个别名(一般是类名) --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>HelloServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- servlet-class是Servlet程序的全类名(一般为包名.类名) --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>Review.HelloServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!-- servlet-mapping标签给Tomcat配置访问地址，用于映射一个对外访问的路径 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- servlet-name标签告诉服务器，我当前配置的地址给哪个Servlet程序使用 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>HelloServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- url-pattern标签配置访问地址</span></span><br><span class="line"><span class="comment">    / 斜杠在服务器解析时，表示地址为:http://ip:port/工程路径</span></span><br><span class="line"><span class="comment">    /HelloServlet表示http://ip:port/工程路径/HelloServlet)</span></span><br><span class="line"><span class="comment">     --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/HelloServlet<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><p> 运行结果<img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/21/418f2a4cabf96e3d271477b5ecf41bb9.png"></p><hr><h1 id="Servlet的生命周期"><a href="#Servlet的生命周期" class="headerlink" title="Servlet的生命周期"></a>Servlet的生命周期</h1><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/25/ce0927404631979902fbfd0cdc2226b7.png"></p><ul><li>init()初始化阶段</li><li>service()处理客户端请求阶段</li><li>destroy()终止阶段</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Review;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloServlet</span> <span class="keyword">extends</span> <span class="title">GenericServlet</span></span>&#123;</span><br><span class="line">     <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(ServletConfig config)</span><span class="keyword">throws</span> ServletException</span>&#123;</span><br><span class="line">     System.out.println(<span class="string">&quot;----init()----&quot;</span>);</span><br><span class="line">     &#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">service</span><span class="params">(ServletRequest arg0, ServletResponse arg1)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"> System.out.println(<span class="string">&quot;----service()----&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line"> System.out.println(<span class="string">&quot;----destroy()----&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/21/992f2d62dc60a007cb5afd5cf04d7d69.png"></p><h1 id="自动加载Servlet程序"><a href="#自动加载Servlet程序" class="headerlink" title="自动加载Servlet程序"></a>自动加载Servlet程序</h1><p>当希望某些Servlet程序可以在Tomcat启动时<strong>随即启动</strong>，可以使用&lt;load-on-startup&gt;元素,最常使用在<strong>配置数据库</strong>时。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>HelloServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>chapter04.HelloServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">load-on-startup</span>&gt;</span>1<span class="tag">&lt;/<span class="name">load-on-startup</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>HelloServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/HelloServlet<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><p>load-on-startup用于指定Servlet被加载的时机和顺序，所设置的值必须为一个<strong>整数</strong>,如果为<strong>负数或者没有设</strong>，Servlet容器将在客户端首次请求这个Servlet时加载它。如果为<strong>整数或0</strong>，Servlet容器将在Web应用<strong>启动时加载并初始化Servlet其值越小，对应Servlet就越先被加载</strong>。</p><h1 id="ServletConfig接口"><a href="#ServletConfig接口" class="headerlink" title="ServletConfig接口"></a>ServletConfig接口</h1><p>Servlet的配置信息封装到一个ServletConfig对象中，ServletConfig定义了一系列获取配置信息的方法，有三大作用:</p><ul><li>可以区号Servlet程序的别名<code>servlet-name</code>的值</li><li>获取初始化参数<code>ini-param</code></li><li>获取<code>ServletContext对象</code></li></ul><p>常用方法:</p><ul><li>获取servlet的初始化参数的值：String  <code>getInitParameter</code>（String name）</li><li> 获取servlet的初始化参数的名称：Enumeratrion <code> getInitParameterNames</code>（）</li><li>得到当前Web应用的ServletContext对象：ServletContext <code>getServletContext</code>（）</li><li>获取servlet的名称,即web.xml中servlet-name元素的值：String <code>getServletName</code>（）</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Review;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestServletConfig</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"><span class="comment">//1.首先得到servletconfig对象</span></span><br><span class="line">ServletConfig config=<span class="keyword">this</span>.getServletConfig();</span><br><span class="line"><span class="comment">//2.获取servlet的名称，对应web.xml里面</span></span><br><span class="line">String servletName=config.getServletName();</span><br><span class="line">System.out.println(<span class="string">&quot;servlet的名称&quot;</span>+servletName);</span><br><span class="line"><span class="comment">//3.获取servlet的初始化参数</span></span><br><span class="line">String value=config.getInitParameter(<span class="string">&quot;encoding&quot;</span>);</span><br><span class="line">System.out.println(<span class="string">&quot;初始化参数值：&quot;</span>+value);</span><br><span class="line"><span class="comment">//4.获取servlet的初始化参数的名称</span></span><br><span class="line">Enumeration&lt;String&gt; er=config.getInitParameterNames();</span><br><span class="line"><span class="keyword">while</span>(er.hasMoreElements()) &#123;</span><br><span class="line"><span class="comment">//获取初始化参数的名称</span></span><br><span class="line">String name=er.nextElement();</span><br><span class="line"><span class="comment">//根据初始化参数的名称，获取对应的值</span></span><br><span class="line">String value2=config.getInitParameter(name);</span><br><span class="line">System.out.println(<span class="string">&quot;初始化参数的名称：&quot;</span>+name);</span><br><span class="line">System.out.println(<span class="string">&quot;该名称的值:&quot;</span>+value2);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.doGet(request, response);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>TestServletConfig<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>Review.TestServletConfig<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- servlet的初始化参数的配置 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>encoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>username<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>lizhenye<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>TestServletConfig<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/TestServletConfig<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/21/2ee772c543a40806ff1d5c0d080acd91.png"></p><h1 id="ServletContext接口"><a href="#ServletContext接口" class="headerlink" title="ServletContext接口"></a>ServletContext接口</h1><p>当Servlet容器启动时，会为每个Web应用创建一个唯一的<code>ServletContext对象</code>代表当前Web应用，该对象不仅封装了当前Web应用的所有信息，而且实现了多个Servlet之间数据的共享。</p><ul><li>ServletContext接口的作用:<ol><li> 获取Web应用程序的<strong>初始化参数:</strong></li><li>实现多个Servlet对象共享数据</li><li>读取Web应用下的资源文件</li></ol></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Review;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.*;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestServletContext</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">response.setContentType(<span class="string">&quot;text/html;charset=utf-8&quot;</span>);</span><br><span class="line">PrintWriter out=response.getWriter();</span><br><span class="line"><span class="comment">//1.首先得到ServletContext对象</span></span><br><span class="line">ServletContext context=<span class="keyword">this</span>.getServletContext();</span><br><span class="line"><span class="comment">//2.得到包含所有初始化参数名的Enumberation对象</span></span><br><span class="line">Enumeration&lt;String&gt; er=context.getInitParameterNames();</span><br><span class="line">out.println(<span class="string">&quot;所有的参数名和参数值:&quot;</span>+<span class="string">&quot;&lt;br/&gt;&quot;</span>);</span><br><span class="line"><span class="keyword">while</span>(er.hasMoreElements()) &#123;</span><br><span class="line"><span class="comment">//获取初始化参数的名称</span></span><br><span class="line">String name=er.nextElement();</span><br><span class="line"><span class="comment">//根据初始化参数的名称，获取对应的值</span></span><br><span class="line">String value=context.getInitParameter(name);</span><br><span class="line">out.println(name+<span class="string">&quot;:&quot;</span>+value);</span><br><span class="line">out.println(<span class="string">&quot;&lt;br/&gt;&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.doGet(request, response);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">context-param</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>CompanyName<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>itcast<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">context-param</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">context-param</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>address<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>beijing<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">context-param</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"> <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>TestServletContext<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>Review.TestServletContext<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>TestServletContext<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/TestServletContext<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/21/5fd0719196f0f9afb1dfd9dc4d3c7fb2.png"></p><ul><li>ServletContext接口的方法:<ol><li> Enumberation getAttributeNames() ： 返回一个Enumberation对象，该对象包含了所有存放在ServletContext中的·所有域属性名·。</li><li> Object <code>getAttribute(String name)</code>：根据指定的参数名返回一个与之匹配的域属性值。</li><li> void removeAttribute(String name)：根据参数指定的域属性名，从ServletContext中·删除·匹配的域属性。</li><li> void <code>setAttribute(String name,Object obj)</code>：设置ServletContext的域属性，其中name是域属性名，obj是域属性值。</li></ol></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Review;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.*;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestServletContext1</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">ServletContext context=<span class="keyword">this</span>.getServletContext();</span><br><span class="line"><span class="comment">//通过setAttribute()方法设置属性值</span></span><br><span class="line">context.setAttribute(<span class="string">&quot;data&quot;</span>, <span class="string">&quot;this servlet save data&quot;</span>);</span><br><span class="line">System.out.println(<span class="string">&quot;运行一下，将数据存入ServletContext对象&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.doGet(request, response);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Review;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.*;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestServletContext2</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">ServletContext context=<span class="keyword">this</span>.getServletContext();</span><br><span class="line">PrintWriter out=response.getWriter();</span><br><span class="line"><span class="comment">//通过getAttribute()方法获得属性值</span></span><br><span class="line">String data=(String) context.getAttribute(<span class="string">&quot;data&quot;</span>);</span><br><span class="line">out.println(data);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.doGet(request, response);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>TestServletContext1<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>Review.TestServletContext1<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>TestServletContext1<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/TestServletContext1<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"> <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>TestServletContext2<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>Review.TestServletContext2<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>TestServletContext2<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/TestServletContext2<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/21/64f4dd4820124509c04f9d8ae19d54a2.png"></p>]]></content>
      
      
      <categories>
          
          <category> Web前端 </category>
          
          <category> JavaWeb </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaWeb </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaWeb🌍基础概述</title>
      <link href="2021/01/15/%E5%89%8D%E7%AB%AF/JavaWeb/JavaWeb_%E5%9F%BA%E7%A1%80%E6%A6%82%E8%BF%B0/"/>
      <url>2021/01/15/%E5%89%8D%E7%AB%AF/JavaWeb/JavaWeb_%E5%9F%BA%E7%A1%80%E6%A6%82%E8%BF%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="JavaWeb概述"><a href="#JavaWeb概述" class="headerlink" title="JavaWeb概述"></a>JavaWeb概述</h1><p>Java Web 其实就是一个技术的总和,把<code>Web</code>看成一个容器而已主要使用<code>JavaEE</code>技术来实现.再加上各种中间件。</p><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/20/4c1f2fae25ee652b3d52c3bba84fa862.png"></p><h2 id="工具包分享"><a href="#工具包分享" class="headerlink" title="工具包分享"></a>工具包分享</h2><p>本博客所涉及到的扩展包及软件，已打包好，请戳<a href="https://pan.baidu.com/s/1Lp8QRTdYKVg3031-yRmB4Q">提取码：t2gg</a></p><h1 id="XML"><a href="#XML" class="headerlink" title="XML"></a>XML</h1><ul><li><p>XML是EXtensible Markup Language的缩写，它是一种类似于HTML的标记语言，称为<code>可扩展标记语言</code>。</p></li><li><p>XML是由W3C组织推出的，它是一种通用的<code>数据交换格式</code>，可以使数据在各种应用程序之间轻松地实现数据的交换。</p></li><li><p>使用XML可以实现不同操作系统间数据的交换。比如电脑、手机、平板等设备操作系统存储数据的格式不兼容，但它们可以实现数据的交换。</p></li><li><p>若用XML表示国家、省市间的关系，如下<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/23/cb4ed771870010b30048e39247020cdd.png"></p></li><li><p>XML和HTML的区别</p><ol><li>HTML不区分大小写，XML严格区分大小写</li><li>HTML标记用来显示数据，XML标记用来描述信息</li><li>HTML可以有多个根元素，格式良好的XML只能有一个根元素</li><li>HTML中是属性是可用可不用的，XML属性值必须放在引号中</li><li>HTML中的空格会自动过滤，XML中的空格不会自动删除</li><li>HTML中的标记是预定义的，XML中的标记是可以随便定义的</li></ol></li><li><p>XML约束</p><ol><li>DTD约束是早期出现的一种XML约束模式语言，根据它的语法创建的文件称为DTD文件</li><li>Schema约束也是一种用于定义和描述XML文档结构与内容的模式语言，它比DTD功能强大很多，但相应的语法也复杂很多。</li></ol></li></ul><p><a href="https://www.runoob.com/xml/xml-tutorial.html">XML|菜鸟教程请戳这里</a></p><h1 id="HTTP"><a href="#HTTP" class="headerlink" title="HTTP"></a>HTTP</h1><ul><li><p>HTTP是Hyper Text Transfer Protocol的缩写，即<code>超文本传输协议</code>。它是一种<code>请求/响应式</code>的协议</p></li><li><p>HTTP协议<strong>专门用于定义浏览器与服务器之间交换数据的过程以及数据本身的格式</strong>。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/23/a559f61f2b0418788e1f1dfdd7255e8f.png"></p></li><li><p>HTTP协议特点</p><ol><li><strong>支持客户端(浏览器就是一种Web客户端)/服务器模式。</strong></li><li><strong>简单快速</strong>：客户端向服务器请求服务时，只需传送请求方式和路径。常用的请求方式有GET、POST等，每种方式规定了客户端与服务器联系的类型不同。由于HTTP简单，使得HTTP服务器的程序规模小，因而通信速度很快。</li><li><strong>灵活</strong>：HTTP允许传输任意类型的数据，正在传输的数据类型由<code>Content-Type</code>加以标记。</li><li><strong>无状态</strong>：HTTP是无状态协议。无状态是指协议对于事务处理没有记忆能力，如果后续处理需要前面的信息，则它必须重传，这样可能导致每次连接传送的数据量增大。</li></ol></li><li><p>HTTP版本</p><ol><li>HTTP 1.0<br>基于HTTP1.0协议的客户端与服务器在交互过程中需要经过<strong>建立连接、发送请求信息、回送响应信息、关闭连接</strong>四个步骤，并且每次请求都需要与服务器重新建立连接。</li><li>HTTP 1.1<br>客户端可以向服务器端发送多个请求，并且在发送下个请求时，无需等待上次请求的返回结果。必须按照接受客户端请求的先后顺序依次返回响应 结果，以保证客户端能够区分出每次请求的响应内容。</li></ol></li></ul><h2 id="HTTP请求消息"><a href="#HTTP请求消息" class="headerlink" title="HTTP请求消息"></a>HTTP请求消息</h2><ul><li><p>HTTP消息分为<strong>HTTP请求消息</strong>和<strong>HTTP响应消息</strong>。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/23/709de51d4891feaeb1d6cef5b9d3d112.png"></p></li><li><p>HTTP请求行位于请求消息的第一行<br>它包括<strong>请求方式</strong>、<strong>资源路径及协议版本</strong>三个部分</p><pre><code>  GET/index.html HTTP/1.1</code></pre></li><li><p>常见的HTTP请求方式是<code>GET</code>和<code>POST</code>请求方式<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/23/0687224dff6fc5538dbcdabf26c42334.png"></p></li><li><p>请求消息头</p><ol><li>每个请求消息头都是由一个头字段名称和一个值构成;</li><li>头字段名称和值之间用冒号(:)和空格( )分隔；</li><li>每个请求消息头之后使用一个回车换行符标志结束<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/23/ab470b7b33b94e9dbcb41b0cc48e8409.png"></li></ol></li></ul><h2 id="HTTP响应信息"><a href="#HTTP响应信息" class="headerlink" title="HTTP响应信息"></a>HTTP响应信息</h2><ul><li><p>HTTP响应消息分为<strong>响应状态行、响应消息头和实体内容</strong>。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/23/aac7a853cddf4f8834a6dec27bdb050c.png"></p></li><li><p>HTTP响应状态行位于响应消息的第一行<br>它包括<strong>HTTP协议版本、状态码及状态码描述</strong></p><pre><code>  HTTP/1.1 200 OK</code></pre></li><li><p>HTTP状态码由3位数字组成，它的第一个数字有5种可能的取值。</p><ol><li>1xx：表示请求已接收，需要继续处理</li><li>2xx：表示请求已成功被服务器接收、理解并接受</li><li>3xx：为完成请求，客户端需进一步细化请求</li><li>4xx：客户端请求有错误</li><li>5xx：服务器端出现错误</li></ol></li></ul><table><thead><tr><th align="center">状态码</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">200</td><td align="center">表示服务器成功处理了客户端的请求</td></tr><tr><td align="center">302</td><td align="center">表示请求的资源临时从不同的URI响应请求</td></tr><tr><td align="center">404</td><td align="center">表示服务器找不到请求的资源</td></tr><tr><td align="center">500</td><td align="center">表示服务器发生错误，无法处理客户端的请求</td></tr></tbody></table><ul><li>响应消息头<ol><li>每个请求消息头都是由一个头字段名称和一个值构成;</li><li>头字段名称和值之间用冒号(:)和空格( )分隔；</li><li>每个请求消息头之后使用一个回车换行符标志结束<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/23/c8ef3a38a4eb042f1adf3016d0d28395.png"></li></ol></li></ul><h1 id="Web服务器"><a href="#Web服务器" class="headerlink" title="Web服务器"></a>Web服务器</h1><p>1、<code>Web服务器</code>是指驻留于因特网上某种类型计算机的<code>程序</code>，是可以向发出请求的浏览器提供文档的程序。当Web浏览器（客户端）连到服务器上并请求文件时，服务器将处理该请求并将文件反馈到该浏览器上，附带的信息会告诉浏览器如何查看该文件（即文件类型）。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/25/5514c816b54a022ae6dc13f8e179d40e.png"><br>2、服务器是一种<code>被动程序</code>：只有当Internet上运行在其他计算机中的浏览器发出请求时，服务器才会响应。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/25/56e0a7ee29c9e3b138360427eed39a82.png"></p><h1 id="Tomcat"><a href="#Tomcat" class="headerlink" title="Tomcat"></a>Tomcat</h1><ul><li><p>一个动态Web资源开发完毕后需要发布在Web服务器才能被外界访问。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/23/9e29de0f70b60055ceea4f8ad1f00b4c.png"></p></li><li><p>Tomcat是Apache组织推荐的运行Servlet和JSP的容器</p></li><li><p>它不仅具有Web服务器的基本功能，还提供了数据库连接池等许多通用组件功能。</p></li></ul><p>Tomcat下载请戳这里——<a href="http://tomcat.apache.org/">Tomcat官网</a></p><ul><li>下载后直接解压到指定目录:<ol><li>找到Tomcat目录<code>\bin\startup.bat</code>文件双击</li><li>或者DOS命令:<code>catalina  run</code></li><li>浏览器窗口输入”<a href="http://localhost:8080&quot;">http://localhost:8080&quot;</a></li><li>关闭Tomcat：<code>bin\shutdown.bat</code></li></ol></li><li>Tomcat安装常见问题:<ol><li>Tomcat依赖Java环境，需要在<code>JAVA_HOME</code>配好<code>JDK</code>的路径。（如出现窗口一闪而过）</li><li>Tomcat默认端口8080，当出现端口被占用时(<code>netstat -ano</code>命令查看)，去Tomcat目录找到<code>conf\server.xml</code>文件里找到<code>port</code>修改</li></ol></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Connector</span> <span class="attr">executor</span>=<span class="string">&quot;tomcatThreadPool&quot;</span></span></span><br><span class="line"><span class="tag">               <span class="attr">port</span>=<span class="string">&quot;8080&quot;</span> <span class="attr">protocol</span>=<span class="string">&quot;HTTP/1.1&quot;</span></span></span><br><span class="line"><span class="tag">               <span class="attr">connectionTimeout</span>=<span class="string">&quot;20000&quot;</span></span></span><br><span class="line"><span class="tag">               <span class="attr">redirectPort</span>=<span class="string">&quot;8443&quot;</span> /&gt;</span></span><br><span class="line">    --&gt;</span><br></pre></td></tr></table></figure><h1 id="Web应用"><a href="#Web应用" class="headerlink" title="Web应用"></a>Web应用</h1><ul><li>所谓Web应用就是多个Web资源的集合，它也称为Web应用程序或Web工程。</li><li>一个web应用由多个<code>静态web资源</code>和<code>动态web资源</code>组成，如:html、css、js文件，Jsp文件、java程序、支持jar包、配置文件等等。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/23/a2f5cc290ad63c73e84007ba9cead3bb.png"></p><ul><li>Web应用开发好后，若想供外界访问，需要把web应用所在目录交给web服务器管理，这个过程称之为<code>虚似目录的映射</code>。配置有两种方式：<ol><li>在server.xml文件中配置虚拟目录</li><li>在自定义xml文件配置虚拟目录</li></ol></li></ul><h1 id="Web默认页面"><a href="#Web默认页面" class="headerlink" title="Web默认页面"></a>Web默认页面</h1><p>当访问一个Web应用程序时，通常需要指定访问的资源名称，如果没有指定资源名称，则会访问默认页面。例如，访问<a href="http://www.w3school.com.cn/index.htm">http://www.w3school.com.cn/index.htm</a> ,如果想输入<a href="http://www.w3school.com.cn/">http://www.w3school.com.cn</a> 就能访问，需要配置WEB-INF目录下的web.xml文件，即虚拟目录的映射。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">welcome-file-list&gt; </span><br><span class="line">     <span class="tag">&lt;<span class="name">welcome-flie</span>&gt;</span>index.html<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">welcome-flie</span>&gt;</span>index.htm<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">welcome-flie</span>&gt;</span>index.jsp<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">welcome-flie</span>&gt;</span>资源名.后缀<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">welcome-flie-list</span>&gt;</span></span><br><span class="line"> 上述代码中，<span class="tag">&lt;<span class="name">welcome-file-list</span>&gt;</span>用于配置默认页面列表，它包含多个<span class="tag">&lt;<span class="name">welcome-flie</span>&gt;</span>子元素，</span><br><span class="line"> 每个<span class="tag">&lt;<span class="name">welcome-flie</span>&gt;</span>都指定一个页面文件。当用户没有指定具体要访问的页面资源时，Tomcat会</span><br><span class="line"> 依次查找这些默认列表，如果找到，则返回给用户，停止查找。如果找不到，则返回错误信息。</span><br></pre></td></tr></table></figure><h1 id="Elicpse配置Tomcat"><a href="#Elicpse配置Tomcat" class="headerlink" title="Elicpse配置Tomcat"></a>Elicpse配置Tomcat</h1><ol><li><p>启动Eclipse开发工具，点击工具栏的【Window】—&gt;【Preferences】选项，此时会弹出一个【Preferences】窗口，在该窗口中点击左边菜单中的【Server】选项，在展开的菜单中选择最后一项【Runtime Environments】，这时窗口右侧会出现【Server Runtime Environments】选项卡</p></li><li><p>在Preferences窗口中点击【Add】按钮，弹出一个【New Server Runtime Environment】窗口，该窗口显示出了可在Eclipse中配置的各种服务器及其版本。由于我们需要配置的服务器版本是apache-tomcat-7.0.55，所以选择【Apache】，在展开的版本中选择【Apache Tomcat v7.0】选项</p></li><li><p>在【New Server Runtime Environment】窗口中点击【Next】按钮执行下一步，在弹出的窗口中点击【Browser】按钮，选择安装Tomcat服务器的目录（Tomcat服务器安装在D:\Tomcat\apache-tomcat-7.0.55目录下），最后依次点击【Finish】—&gt;【OK】按钮关闭窗口，并完成Eclipse和Tomcat服务器的关联</p></li><li><p>在Eclipse中创建Tomcat服务器。点击Eclipse下侧窗口的【Servers】选项卡（如果没有这个选项卡，则可以通过【Windows】【Show View】打开），在该选项卡中可以看到一个“No servers available.Define a new server from the new server wizard…”的链接，点击这个链接，会弹出一个【New Server】的窗口</p></li><li><p>Tomcat服务器创建完毕后，还需要进行配置。双击图2-32中创建好的Tomcat服务器，在打开的【Overview】页面中，选择【Server Locations】选项中的“Use Tomcat installation”，并将【Deploy path】文本框内容修改为webapps</p></li></ol><h1 id="Tomcat常见问题"><a href="#Tomcat常见问题" class="headerlink" title="Tomcat常见问题"></a>Tomcat常见问题</h1><h2 id="出现端口被占用"><a href="#出现端口被占用" class="headerlink" title="出现端口被占用"></a>出现端口被占用</h2><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/26/77f74eb8b460ae836ff81d5353915f7b.png"></p><ol><li>首先打开tomcat在eclipse中的视图，如下所示<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/26/66fa3890912739eb774ab440fb5fff07.png"></li><li>双击Tomcat打开配置，勾选Publish module contexts to separate XML files<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/26/ba59d320ea27d6d194ceaf0ee06f2e95.png"><br>这个意思就是说，发布模块上下文以分离XML文件。</li><li>重新启动tomcat，发现可以运行了<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/26/4e9339a5cf951b947b97f2ab6b5df170.png"></li></ol><h2 id="导入项目报错"><a href="#导入项目报错" class="headerlink" title="导入项目报错"></a>导入项目报错</h2><ol><li>【file】-》【import】<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/26/404e9a9087692a096e412de76c055ec9.png"><br>选择文件导入后出现<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/26/7ecb8542d92cffe852d6517d2133bf1a.png"></li><li>解决方法<br>【右击项目】——》【Build Path】——》【Configure Build Path】<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/26/1fc802b987fa0fe2c872afb256337bad.png">双击进去，选择jdk版本<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/26/c2b089127f57392192519c8d35ca8e29.png"></li></ol><h2 id="常见状态码原因"><a href="#常见状态码原因" class="headerlink" title="常见状态码原因"></a>常见状态码原因</h2><h3 id="404"><a href="#404" class="headerlink" title="404"></a>404</h3><ul><li><p>没有配置web.xml文件或配置有误，解放方法删除web.xml重写或在&lt;servlet-class&gt;标签中按Ctrl判断能否进入<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/27/6074a1004dbdec949fee7607ff6b38a2.png"></p></li><li><p>将访问的文件(如：b.html)放到了webapps的根目录下，然后访问<a href="http://localhost:8080/b.html%EF%BC%8C%E8%BF%99%E7%A7%8D%E6%96%B9%E5%BC%8F%E4%B9%9F%E4%BC%9A%E9%80%A0%E6%88%90404%E9%94%99%E8%AF%AF%EF%BC%8C">http://localhost:8080/b.html，这种方式也会造成404错误，</a>               解决方法是在webapps下新建一个目录（如：test），然后将b.html 放到test目录里面。访问网址  <a href="http://localhost:8080/test/b.html">http://localhost:8080/test/b.html</a></p></li><li><p>其他原因可能是程序语法语义出错。</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Web前端 </category>
          
          <category> JavaWeb </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaWeb </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C语言⭐文件操作</title>
      <link href="2021/01/15/%E5%90%8E%E7%AB%AF/C%E8%AF%AD%E8%A8%80/C%E8%AF%AD%E8%A8%80_%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/"/>
      <url>2021/01/15/%E5%90%8E%E7%AB%AF/C%E8%AF%AD%E8%A8%80/C%E8%AF%AD%E8%A8%80_%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
          <category> C </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C语言⭐链表</title>
      <link href="2021/01/15/%E5%90%8E%E7%AB%AF/C%E8%AF%AD%E8%A8%80/C%E8%AF%AD%E8%A8%80_%E9%93%BE%E8%A1%A8/"/>
      <url>2021/01/15/%E5%90%8E%E7%AB%AF/C%E8%AF%AD%E8%A8%80/C%E8%AF%AD%E8%A8%80_%E9%93%BE%E8%A1%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="动态存储分配"><a href="#动态存储分配" class="headerlink" title="动态存储分配"></a>动态存储分配</h1><p>全局变量是分配在内存中的静态存储区的，非静态的局部变量是分配在内存中的动态存储区的，这个存储区是一个称为<code>栈(stack)</code>的区域。<br>此外，C语言和允许建立内存动态分配区域，以存放一些临时用的数据，这些数据不必在程序的声明部分定义，也不必等到函数结束时才释放，而是需要时随时开辟，不需要时随时释放。<br>这些数据是存放在一个特别的自由存储区，称为<code>堆区(heap)</code>。<br>对内存的动态分配主要通过系统提供的库函数来实现的,主要有malloc,calloc,free,realloc这4个函数。</p><pre><code>    #include&lt;stdlib.h&gt;</code></pre><ul><li><p><strong>malloc函数</strong></p><pre><code>  void *malloc(unsigned int size);  malloc(100); //开辟100字节的临时分配域，函数值为其第1个字节的地址</code></pre></li></ul><p>在内存的动态存储区中分配一个长度为size的连续空间。形参size的类型定为无符号整型(不允许为负数)。此函数的值(即”返回值”)是所分配区域的<code>第一字节的地址</code>，或者说，此函数是一个指针型函数，返回的指针指向该分配域的开头位置。</p><blockquote><p>注意指针的基类型为void,即不指向任何类型的数据，只提供一个地址。如果此函数未能成功地执行(例如内存空间不足),则返回<code>空指针(NULL)</code>。</p></blockquote><ul><li><p><strong>calloc函数</strong></p><pre><code>  void *calloc(unsigned n,unsigned size);  p=calloc(50,4);  //开辟50*4个字节的临时分配域，把起始地址赋给指针变量p</code></pre></li></ul><p>在内存的动态存储区中分配n个长度为size的连续空间，这个空间一般比较大，足以<code>保存一个数组</code>。<br>用calloc函数可以为一维数组开辟动态存储空间，n为数组元素个数，每个元素长度为size。这就是动态数组。函数返回指向所分配域的起始位置的指针；如果分配不成功，返回NULL。</p><ul><li><p><strong>free函数</strong></p><pre><code>  void free(void *p)  free(p);  //释放指针变量p所指向的已分配的动态空间</code></pre></li></ul><p>释放指针变量p所指向的动态空间，使这部分空间能重新被其它变量使用。<br>p是最近一次调用calloc或malloc函数时得到的函数返回值。free函数无返回值。</p><ul><li><p><strong>realloc函数</strong></p><pre><code>  void *realloc(void *p,unsigned int size)  realloc(p,50);   //将p所指向的已分配的动态空间改为50字节</code></pre></li></ul><p>如果已经通过malloc函数或者calloc函数获得了动态空间，想改变其大小，可以使用realloc函数<code>重新分配</code>。<br>使用realloc函数将p所指向的动态空间的大小改为size。p的值不变。如果重新分配不唱歌，返回NULL。</p><h1 id="链表"><a href="#链表" class="headerlink" title="链表"></a>链表</h1><p>链表是动态地进行存储分配的一种结构。<br>链表的组成：</p><ul><li>头指针<br>存放一个地址，该地址指向第一个元素</li><li>结点<br>用户需要的实际数据和链接节点的指针(数据域和指针域)</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/13/438aed32557a8ad5fd91581d99a1f5f7.png"></p><p>根据下图建立链表</p><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/13/22856f77e6266b65c762fb94d68d77fe.png"></p><h2 id="静态链表"><a href="#静态链表" class="headerlink" title="静态链表"></a>静态链表</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="comment">//数据域 </span></span><br><span class="line"><span class="keyword">long</span> num;</span><br><span class="line"><span class="keyword">float</span> score;</span><br><span class="line"><span class="comment">//指针域 </span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span> *<span class="title">next</span>;</span> <span class="comment">//指向struct student的指针 </span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span> <span class="title">a</span>,<span class="title">b</span>,<span class="title">c</span>,*<span class="title">head</span>,*<span class="title">p</span>;</span><span class="comment">//头指针 </span></span><br><span class="line"></span><br><span class="line">a.num=<span class="number">10101</span>;</span><br><span class="line">a.score=<span class="number">89.5</span>;</span><br><span class="line">b.num=<span class="number">10103</span>;</span><br><span class="line">b.score=<span class="number">90</span>;</span><br><span class="line">c.num=<span class="number">10107</span>;</span><br><span class="line">c.score=<span class="number">85</span>;</span><br><span class="line"></span><br><span class="line">head=&amp;a;  <span class="comment">//头指针指向第一个元素 </span></span><br><span class="line">a.next=&amp;b; <span class="comment">//存放下一个元素的地址 </span></span><br><span class="line">b.next=&amp;c; <span class="comment">//存放下一个元素的地址 </span></span><br><span class="line">c.next=<span class="literal">NULL</span>; <span class="comment">// </span></span><br><span class="line">p=head;  <span class="comment">//使指针p指向head </span></span><br><span class="line"><span class="keyword">do</span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%ld %5.1f\n&quot;</span>,p-&gt;num,p-&gt;score); <span class="comment">//输出p指向的结点的数据 </span></span><br><span class="line">p=p-&gt;next;  <span class="comment">//使p指向下一结点 </span></span><br><span class="line">&#125;<span class="keyword">while</span>(p!=<span class="literal">NULL</span>); <span class="comment">//最后一个指针指向NULL </span></span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">10101  89.5</span></span><br><span class="line"><span class="comment">10103  90.0</span></span><br><span class="line"><span class="comment">10107  85.0</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h2 id="动态链表"><a href="#动态链表" class="headerlink" title="动态链表"></a>动态链表</h2><p>所谓动态链表是指在程序执行过程中<code>从无到有</code>地建立起一个链表，即一个一个地开辟结点和输入各结点数据，并建立起前后相链的关系。<br>根据下面的分析写程序建立一个含有学生(学号、成绩)数据的单向动态链表。</p><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/13/e1f408b7fa777e88c9ca528a7c7ee638.png"></p><ul><li>约定学号不会为0，如果输入学号为0，则表示建立链表的过程完成，该结点不会连接到链表中</li><li>如果输入的p1-&gt;num≠0，则输入的是第一个结点数据(n=1)，令heaad=p1,即把p1的值赋给head,也就是使head也指向新开辟的结点p1所指向的新开辟的结点就成为链第一个结点<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/13/b064f1235a628c1ffa102ac1fddbf7fd.png"></li><li>再开辟另一个结点并使p1指向它，接着输入该结点的数据</li><li>如果输入的p1-&gt;num不等于0，则应链入第2个结点(n=2)，将新结点的地址赋给第一个结点的next成员</li><li>接着使p2=p1,也就是使p2指向刚才建立的结点<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/13/07899a62115e93e738c7b8e3c2e26e7e.png"></li><li>再开辟一个结点并使p1指向它，并输入该结点的数据</li><li>在第三次循环中，由于n=3(n≠1),又将p1的值赋给p2-&gt;next,也就是将第3个结点连接到第2个结点之后,并使p2=p1,使p2指向最后一个结点<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/13/dad0a42dc7e428ec02b64e99d9af8317.png"></li><li>再开辟一个新结点，并使p1指向它，输入该结点的数据。由于p1-&gt;num的值为0,不再执行循环,此新结点不应被连接到链表中</li><li>将NULL赋给p2-&gt;next</li><li>建立链表过程至此结束，p1最后所指的结点未链入链表中，第三个结点的next成员的值为NULL,它不指向任何结点<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/13/4edfab5febfc3d57d5324441f4dd2733.png"></li></ul><h2 id="链表输出"><a href="#链表输出" class="headerlink" title="链表输出"></a>链表输出</h2><ul><li>首先要知道链表第一个结点的地址,也就是要知道head的值。</li><li>然后设一个指针变量p,先指向第一个结点,输出p所指的结点,然后使p后移一个结点,再输出,直到链表的尾结点。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/13/ff33f3e7ac2f23d6d07c098b69e195b1.png"><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;malloc.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LEN sizeof(struct student) <span class="comment">//student结构的大小</span></span></span><br><span class="line"></span><br><span class="line"><span class="function">struct student *<span class="title">creat</span><span class="params">()</span></span>;  <span class="comment">//创建链表</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">(struct student *head)</span></span>;  <span class="comment">//打印链表</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">int</span> num;</span><br><span class="line"><span class="keyword">float</span> score;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span> *<span class="title">next</span>;</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n;  <span class="comment">//全局变量，用来记录存放了多少数据</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span> *<span class="title">stu</span>;</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;********************\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;--当num为0结束输入--\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;********************\n&quot;</span>);</span><br><span class="line">stu=creat();  <span class="comment">//得到head头指针 </span></span><br><span class="line">print(stu);  <span class="comment">//根据头指针找到链表并输出 </span></span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n\n&quot;</span>);</span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125; </span><br><span class="line"><span class="function">struct student *<span class="title">creat</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span> *<span class="title">head</span>;</span> <span class="comment">//只是创建了一个指针，并没有分配内存大小 </span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span> *<span class="title">p1</span>,*<span class="title">p2</span>;</span></span><br><span class="line"><span class="comment">//动态申请空间，并使p1,p2指向这个新生成的空间 </span></span><br><span class="line">p1=p2=(struct student *)<span class="built_in">malloc</span>(LEN);<span class="comment">//LEN是结构体的大小</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//输入第1个学生的学号和成绩 </span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Please enter the num :&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;p1-&gt;num);  </span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Please enter the score :&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%f&quot;</span>,&amp;p1-&gt;score);</span><br><span class="line"></span><br><span class="line">head=<span class="literal">NULL</span>;  <span class="comment">//初始化 </span></span><br><span class="line">n=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(p1-&gt;num != <span class="number">0</span>) <span class="comment">//不等于0 </span></span><br><span class="line">&#123;</span><br><span class="line">n++;   <span class="comment">//出现新结点 </span></span><br><span class="line"><span class="keyword">if</span>(n==<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">head=p1;  <span class="comment">//头节点指向 </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">p2-&gt;next=p1;</span><br><span class="line">&#125;</span><br><span class="line">p2=p1;</span><br><span class="line">p1=(struct student *)<span class="built_in">malloc</span>(LEN);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\nPlease enter the num :&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;p1-&gt;num);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Please enter the score :&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%f&quot;</span>,&amp;p1-&gt;score); </span><br><span class="line"> &#125; </span><br><span class="line"> p2-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line"> <span class="keyword">return</span> head;  <span class="comment">//首地址，链表的标识记号 </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">(struct student *head)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span> *<span class="title">p</span>;</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\nPlease are %d records!\n\n&quot;</span>,n);</span><br><span class="line"></span><br><span class="line">p=head;   <span class="comment">//使p指向第1个结点 </span></span><br><span class="line"><span class="keyword">if</span>(head!=<span class="literal">NULL</span>) <span class="comment">//不是空表 </span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;   </span><br><span class="line"><span class="comment">//输出一个结点中的学号和成绩 </span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;学号为 %d 的成绩是: %f\n&quot;</span>,p-&gt;num,p-&gt;score);</span><br><span class="line">p=p-&gt;next;   <span class="comment">//p指向下一结点 </span></span><br><span class="line">&#125;<span class="keyword">while</span>(p!=<span class="literal">NULL</span>);<span class="comment">//p不为空地址 </span></span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">********************</span></span><br><span class="line"><span class="comment">--当num为0结束输入--</span></span><br><span class="line"><span class="comment">********************</span></span><br><span class="line"><span class="comment">Please enter the num :01</span></span><br><span class="line"><span class="comment">Please enter the score :99</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">Please enter the num :02</span></span><br><span class="line"><span class="comment">Please enter the score :78</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">Please enter the num :03</span></span><br><span class="line"><span class="comment">Please enter the score :66</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">Please enter the num :0</span></span><br><span class="line"><span class="comment">Please enter the score :0</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">Please are 3 records!</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">学号为 1 的成绩是: 99.000000</span></span><br><span class="line"><span class="comment">学号为 2 的成绩是: 78.000000</span></span><br><span class="line"><span class="comment">学号为 3 的成绩是: 66.000000</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h2 id="链表删除"><a href="#链表删除" class="headerlink" title="链表删除"></a>链表删除</h2>从一个动态链表中删去一个结点,并不是真正从内存中把它抹掉,而是把它从链表中分离开来,只要撤销原来的链接关系即可。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/13/66f3e5fafdc6ffbc594a4d77e675c0b6.png"></li></ul><p>写一函数以删除动态链表中指定的结点。<br>解题思路：</p><ul><li>从p指向的第一个结点开始，检查该结点中的num值是否等于输入的要求删除的那个学号</li><li>如果相等就将该结点删除，若不相等，就将p后移一个结点，再如此进行下去，直到遇到表尾为止。</li><li>可以设两个指针变量p1和p2,先使p1指向第一个结点</li><li>如果要删除的不是第一个结点,则使p1后移指向下一个结点(将p1-&gt;next赋给p1),在此之前应将p1的值赋给p2,使p2指向刚才检查过的那个结点。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/13/5fd8e0e9c712c50255acec82b8dc72e8.png"><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;malloc.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LEN sizeof(struct student)  <span class="comment">//student结构的大小</span></span></span><br><span class="line"></span><br><span class="line"><span class="function">struct student *<span class="title">creat</span><span class="params">()</span></span>;  <span class="comment">//创建链表</span></span><br><span class="line"><span class="comment">//del函数用于删除结点,*head即链表的头指针，num是要删除的结点num </span></span><br><span class="line"><span class="function">struct student *<span class="title">del</span><span class="params">(struct student *head,<span class="keyword">int</span> num)</span></span>; </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">(struct student *head)</span></span>; <span class="comment">//打印链表</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">int</span> num;</span><br><span class="line"><span class="keyword">float</span> score;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span> *<span class="title">next</span>;</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n;  <span class="comment">//全局变量，用来记录存放了多少数据</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span> *<span class="title">stu</span>,*<span class="title">p</span>;</span></span><br><span class="line"><span class="keyword">int</span> num;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;********************\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;--当num为0结束输入--\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;********************\n&quot;</span>);</span><br><span class="line">stu=creat();  <span class="comment">//得到head头指针 </span></span><br><span class="line">p=stu;</span><br><span class="line">print(p);  <span class="comment">//根据头指针找到链表并输出 </span></span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Please enter the num to delete :&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;num);</span><br><span class="line">print(del(p,num));</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n\n&quot;</span>);</span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125; </span><br><span class="line"><span class="function">struct student *<span class="title">creat</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span> *<span class="title">head</span>;</span> <span class="comment">//只是创建了一个指针，并没有分配内存大小 </span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span> *<span class="title">p1</span>,*<span class="title">p2</span>;</span></span><br><span class="line"><span class="comment">//动态申请空间，并使p1,p2指向这个新生成的空间 </span></span><br><span class="line">p1=p2=(struct student *)<span class="built_in">malloc</span>(LEN);<span class="comment">//LEN是结构体的大小</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//输入第1个学生的学号和成绩 </span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Please enter the num :&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;p1-&gt;num);  </span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Please enter the score :&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%f&quot;</span>,&amp;p1-&gt;score);</span><br><span class="line"></span><br><span class="line">head=<span class="literal">NULL</span>;  <span class="comment">//初始化 </span></span><br><span class="line">n=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(p1-&gt;num != <span class="number">0</span>) <span class="comment">//不等于0 </span></span><br><span class="line">&#123;</span><br><span class="line">n++;   <span class="comment">//出现新结点 </span></span><br><span class="line"><span class="keyword">if</span>(n==<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">head=p1;  <span class="comment">//头节点指向 </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">p2-&gt;next=p1;</span><br><span class="line">&#125;</span><br><span class="line">p2=p1;</span><br><span class="line">p1=(struct student *)<span class="built_in">malloc</span>(LEN);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\nPlease enter the num :&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;p1-&gt;num);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Please enter the score :&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%f&quot;</span>,&amp;p1-&gt;score); </span><br><span class="line"> &#125; </span><br><span class="line"> p2-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line"> <span class="keyword">return</span> head;  <span class="comment">//首地址，链表的标识记号 </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">(struct student *head)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span> *<span class="title">p</span>;</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\nPlease are %d records!\n\n&quot;</span>,n);</span><br><span class="line"></span><br><span class="line">p=head;   <span class="comment">//使p指向第1个结点 </span></span><br><span class="line"><span class="keyword">if</span>(head!=<span class="literal">NULL</span>) <span class="comment">//不是空表 </span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;   </span><br><span class="line"><span class="comment">//输出一个结点中的学号和成绩 </span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;学号为 %d 的成绩是: %f\n&quot;</span>,p-&gt;num,p-&gt;score);</span><br><span class="line">p=p-&gt;next;   <span class="comment">//p指向下一结点 </span></span><br><span class="line">&#125;<span class="keyword">while</span>(p!=<span class="literal">NULL</span>);<span class="comment">//p不为空地址 </span></span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line"><span class="function">struct student *<span class="title">del</span><span class="params">(struct student *head,<span class="keyword">int</span> num)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span> *<span class="title">p1</span>,*<span class="title">p2</span>;</span></span><br><span class="line"><span class="keyword">if</span>(head==<span class="literal">NULL</span>) <span class="comment">//如果头结点指向NULL，这是一个空链表 </span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\nThis list is null!\n&quot;</span>);</span><br><span class="line"><span class="keyword">goto</span> END;  <span class="comment">//goto直接跳到end </span></span><br><span class="line">&#125;</span><br><span class="line">p1=head; <span class="comment">//p1指向head </span></span><br><span class="line"><span class="keyword">while</span>(p1-&gt;num!=num&amp;&amp;p1-&gt;next!=<span class="literal">NULL</span>) <span class="comment">//指向第一个结点数据不等于所删除数据,且不是最后一个结点 </span></span><br><span class="line">&#123;</span><br><span class="line">p2=p1;   <span class="comment">//p1的值给p2 </span></span><br><span class="line">p1=p1-&gt;next; <span class="comment">//p1指向下一个结点 </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(num==p1-&gt;num)  <span class="comment">//找到所要删除的学号 </span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(p1==head)  <span class="comment">//为头结点时 </span></span><br><span class="line">&#123;</span><br><span class="line">head=p1-&gt;next;  <span class="comment">//头结点给p1的下一个,把p1去掉 </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//p1-&gt;next就是B-&gt;C,p2-&gt;next就是A-&gt;B,next为指向下一地址的指针 </span></span><br><span class="line">p2-&gt;next=p1-&gt;next;  <span class="comment">//例A(p2),B(p1),C三个结点，改成A,C </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\nDelete No: %d succeed!\n&quot;</span>,num);</span><br><span class="line">n=n<span class="number">-1</span>;  <span class="comment">//n为全局变量，接收学生个数 </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>  <span class="comment">//到达尾结点 </span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d not been found!\n&quot;</span>,num);</span><br><span class="line">&#125;</span><br><span class="line">END:</span><br><span class="line"><span class="keyword">return</span> head;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">--当num为0结束输入--</span></span><br><span class="line"><span class="comment">********************</span></span><br><span class="line"><span class="comment">Please enter the num :01</span></span><br><span class="line"><span class="comment">Please enter the score :90</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">Please enter the num :02</span></span><br><span class="line"><span class="comment">Please enter the score :78</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">Please enter the num :03</span></span><br><span class="line"><span class="comment">Please enter the score :66</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">Please enter the num :0</span></span><br><span class="line"><span class="comment">Please enter the score :0</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">Please are 3 records!</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">学号为 1 的成绩是: 90.000000</span></span><br><span class="line"><span class="comment">学号为 2 的成绩是: 78.000000</span></span><br><span class="line"><span class="comment">学号为 3 的成绩是: 66.000000</span></span><br><span class="line"><span class="comment">Please enter the num to delete :2</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">Delete No: 2 succeed!</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">Please are 2 records!</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">学号为 1 的成绩是: 90.000000</span></span><br><span class="line"><span class="comment">学号为 3 的成绩是: 66.000000</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h2 id="链表插入"><a href="#链表插入" class="headerlink" title="链表插入"></a>链表插入</h2>对链表的插入是指将一个结点插入到一个已有的链表中。<br>为了能正确插入，必须解决两个问题:<br>①怎样找到插入的位置<br>②怎样实现插入</li><li>我们可以先用指针变量p0指向待插入的结点,p1指向第一个结点。将p0-&gt;num与p1-&gt;num相比较,如果p0-&gt;num&gt;p1-&gt;num,此时将p1后移,并使p2指向刚才p1所指的结点。<br>三种情况：<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/13/b269953d32c1271e7b610a34b89822d1.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/13/d884a8af5a256a5340c1b75929fc7979.png"><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;malloc.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LEN sizeof(struct student)  <span class="comment">//student结构的大小</span></span></span><br><span class="line"></span><br><span class="line"><span class="function">struct student *<span class="title">creat</span><span class="params">()</span></span>;  <span class="comment">//创建链表</span></span><br><span class="line"><span class="comment">//del函数用于删除结点,*head即链表的头指针，num是要删除的结点num </span></span><br><span class="line"><span class="function">struct student *<span class="title">del</span><span class="params">(struct student *head,<span class="keyword">int</span> num)</span></span>; </span><br><span class="line"><span class="comment">//第一个参数是需要被插入的链表，第二个参数是待插入的结构的地址 </span></span><br><span class="line"><span class="function">struct student *<span class="title">insert</span><span class="params">(struct student *head,struct student *stud)</span></span>; </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">(struct student *head)</span></span>; <span class="comment">//打印链表</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">int</span> num;</span><br><span class="line"><span class="keyword">float</span> score;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span> *<span class="title">next</span>;</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n;  <span class="comment">//全局变量，用来记录存放了多少数据</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span> *<span class="title">stu</span>,*<span class="title">p</span>,<span class="title">stud</span>;</span></span><br><span class="line"><span class="keyword">int</span> num;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;********************\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;--当num为0结束输入--\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;********************\n&quot;</span>);</span><br><span class="line">stu=creat();  <span class="comment">//得到head头指针 </span></span><br><span class="line">p=stu;</span><br><span class="line">print(p);  <span class="comment">//根据头指针找到链表并输出 </span></span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Please enter the num to delete :&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;num);</span><br><span class="line">print(del(p,num));</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Please enter the num to insert :&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;stud.num);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Please enter the score :&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%f&quot;</span>,&amp;stud.score);</span><br><span class="line">p=insert(stu,&amp;stud);</span><br><span class="line">print(p);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n\n&quot;</span>);</span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125; </span><br><span class="line"><span class="function">struct student *<span class="title">creat</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span> *<span class="title">head</span>;</span> <span class="comment">//只是创建了一个指针，并没有分配内存大小 </span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span> *<span class="title">p1</span>,*<span class="title">p2</span>;</span></span><br><span class="line"><span class="comment">//动态申请空间，并使p1,p2指向这个新生成的空间 </span></span><br><span class="line">p1=p2=(struct student *)<span class="built_in">malloc</span>(LEN);<span class="comment">//LEN是结构体的大小</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//输入第1个学生的学号和成绩 </span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Please enter the num :&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;p1-&gt;num);  </span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Please enter the score :&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%f&quot;</span>,&amp;p1-&gt;score);</span><br><span class="line"></span><br><span class="line">head=<span class="literal">NULL</span>;  <span class="comment">//初始化 </span></span><br><span class="line">n=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(p1-&gt;num != <span class="number">0</span>) <span class="comment">//不等于0 </span></span><br><span class="line">&#123;</span><br><span class="line">n++;   <span class="comment">//出现新结点 </span></span><br><span class="line"><span class="keyword">if</span>(n==<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">head=p1;  <span class="comment">//头节点指向 </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">p2-&gt;next=p1;</span><br><span class="line">&#125;</span><br><span class="line">p2=p1;</span><br><span class="line">p1=(struct student *)<span class="built_in">malloc</span>(LEN);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\nPlease enter the num :&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;p1-&gt;num);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Please enter the score :&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%f&quot;</span>,&amp;p1-&gt;score); </span><br><span class="line"> &#125; </span><br><span class="line"> p2-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line"> <span class="keyword">return</span> head;  <span class="comment">//首地址，链表的标识记号 </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">(struct student *head)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span> *<span class="title">p</span>;</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\nPlease are %d records!\n\n&quot;</span>,n);</span><br><span class="line"></span><br><span class="line">p=head;   <span class="comment">//使p指向第1个结点 </span></span><br><span class="line"><span class="keyword">if</span>(head!=<span class="literal">NULL</span>) <span class="comment">//不是空表 </span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;   </span><br><span class="line"><span class="comment">//输出一个结点中的学号和成绩 </span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;学号为 %d 的成绩是: %f\n&quot;</span>,p-&gt;num,p-&gt;score);</span><br><span class="line">p=p-&gt;next;   <span class="comment">//p指向下一结点 </span></span><br><span class="line">&#125;<span class="keyword">while</span>(p!=<span class="literal">NULL</span>);<span class="comment">//p不为空地址 </span></span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line"><span class="function">struct student *<span class="title">del</span><span class="params">(struct student *head,<span class="keyword">int</span> num)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span> *<span class="title">p1</span>,*<span class="title">p2</span>;</span></span><br><span class="line"><span class="keyword">if</span>(head==<span class="literal">NULL</span>) <span class="comment">//如果头结点指向NULL，这是一个空链表 </span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\nThis list is null!\n&quot;</span>);</span><br><span class="line"><span class="keyword">goto</span> END;  <span class="comment">//goto直接跳到end </span></span><br><span class="line">&#125;</span><br><span class="line">p1=head; <span class="comment">//p1指向head </span></span><br><span class="line"><span class="keyword">while</span>(p1-&gt;num!=num&amp;&amp;p1-&gt;next!=<span class="literal">NULL</span>) <span class="comment">//指向第一个结点数据不等于所删除数据,且不是最后一个结点 </span></span><br><span class="line">&#123;</span><br><span class="line">p2=p1;   <span class="comment">//p1的值给p2 </span></span><br><span class="line">p1=p1-&gt;next; <span class="comment">//p1指向下一个结点 </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(num==p1-&gt;num)  <span class="comment">//找到所要删除的学号 </span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(p1==head)  <span class="comment">//为头结点时 </span></span><br><span class="line">&#123;</span><br><span class="line">head=p1-&gt;next;  <span class="comment">//头结点给p1的下一个,把p1去掉 </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//p1-&gt;next就是B-&gt;C,p2-&gt;next就是A-&gt;B,next为指向下一地址的指针 </span></span><br><span class="line">p2-&gt;next=p1-&gt;next;  <span class="comment">//例A(p2),B(p1),C三个结点，改成A,C </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\nDelete No: %d succeed!\n&quot;</span>,num);</span><br><span class="line">n=n<span class="number">-1</span>;  <span class="comment">//n为全局变量，接收学生个数 </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>  <span class="comment">//到达尾结点 </span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d not been found!\n&quot;</span>,num);</span><br><span class="line">&#125;</span><br><span class="line">END:</span><br><span class="line"><span class="keyword">return</span> head;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">struct student *<span class="title">insert</span><span class="params">(struct student *head,struct student *stud)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span> *<span class="title">p0</span>,*<span class="title">p1</span>,*<span class="title">p2</span>;</span></span><br><span class="line"></span><br><span class="line">p1=head; <span class="comment">//p1指向head头结点 </span></span><br><span class="line">p0=stud; <span class="comment">//p0指向待插入的结构 </span></span><br><span class="line"><span class="keyword">if</span>(head==<span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line">head=p0;</span><br><span class="line">p0-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//两种情况退出while </span></span><br><span class="line"><span class="keyword">while</span>((p0-&gt;num&gt;p1-&gt;num)&amp;&amp;(p1-&gt;next!=<span class="literal">NULL</span>))</span><br><span class="line">&#123; </span><br><span class="line">p2=p1;</span><br><span class="line">p1=p1-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(p0-&gt;num&lt;=p1-&gt;num)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(head==p1) <span class="comment">//p1是头结点,插入头部 </span></span><br><span class="line">&#123;</span><br><span class="line">head=p0;</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">else</span>   <span class="comment">//普通情况，插入中间 </span></span><br><span class="line">&#123;</span><br><span class="line">p2-&gt;next=p0;</span><br><span class="line">&#125;</span><br><span class="line">p0-&gt;next=p1;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>  <span class="comment">//p0的num最大,插入到末尾 </span></span><br><span class="line">&#123;</span><br><span class="line">p1-&gt;next=p0;</span><br><span class="line">p0-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">n=n+<span class="number">1</span>;   <span class="comment">//增加了数据 </span></span><br><span class="line"><span class="keyword">return</span> head;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">********************</span></span><br><span class="line"><span class="comment">--当num为0结束输入--</span></span><br><span class="line"><span class="comment">********************</span></span><br><span class="line"><span class="comment">Please enter the num :01</span></span><br><span class="line"><span class="comment">Please enter the score :88</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">Please enter the num :02</span></span><br><span class="line"><span class="comment">Please enter the score :78</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">Please enter the num :03</span></span><br><span class="line"><span class="comment">Please enter the score :67</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">Please enter the num :0</span></span><br><span class="line"><span class="comment">Please enter the score :0</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">Please are 3 records!</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">学号为 1 的成绩是: 88.000000</span></span><br><span class="line"><span class="comment">学号为 2 的成绩是: 78.000000</span></span><br><span class="line"><span class="comment">学号为 3 的成绩是: 67.000000</span></span><br><span class="line"><span class="comment">Please enter the num to delete :2</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">Delete No: 2 succeed!</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">Please are 2 records!</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">学号为 1 的成绩是: 88.000000</span></span><br><span class="line"><span class="comment">学号为 3 的成绩是: 67.000000</span></span><br><span class="line"><span class="comment">Please enter the num to insert :4</span></span><br><span class="line"><span class="comment">Please enter the score :100</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">Please are 3 records!</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">学号为 1 的成绩是: 88.000000</span></span><br><span class="line"><span class="comment">学号为 3 的成绩是: 67.000000</span></span><br><span class="line"><span class="comment">学号为 4 的成绩是: 100.000000</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
          <category> C </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C语言⭐结构体与共用体</title>
      <link href="2021/01/15/%E5%90%8E%E7%AB%AF/C%E8%AF%AD%E8%A8%80/C%E8%AF%AD%E8%A8%80_%E7%BB%93%E6%9E%84%E4%BD%93/"/>
      <url>2021/01/15/%E5%90%8E%E7%AB%AF/C%E8%AF%AD%E8%A8%80/C%E8%AF%AD%E8%A8%80_%E7%BB%93%E6%9E%84%E4%BD%93/</url>
      
        <content type="html"><![CDATA[<h1 id="结构体"><a href="#结构体" class="headerlink" title="结构体"></a>结构体</h1><p>将不同类型的数组组合成一个有机的整体，以便于引用。</p><h2 id="结构体定义"><a href="#结构体定义" class="headerlink" title="结构体定义"></a>结构体定义</h2><p>定义一个结构的一般形式为：</p><pre><code>    struct 结构名    &#123;        成员列表    &#125;;</code></pre><p>成员列表由若干个成员组成，每个成员都是该结构的一个组成部分。对对每个成员也必须作类型说明，其形式为:</p><pre><code>    类型说明符 成员名;</code></pre><ul><li>定义结构类型变量的方法</li></ul><p><strong>①先声明结构体类型再定义变量名</strong></p><pre><code>    类型名      结构体   变量名1，变量名2    struct student student1,student2;</code></pre><p>定义了student1和student2为strcut student类型的变量,即它们具有strcut student类型的结构。</p><p><strong>②在声明类型的同时定义变量</strong></p><pre><code>    strcut 结构体名    &#123;        成员表列    &#125;变量名变量;    strcut student    &#123;        int num;        char name[20];        char sex;        int age;        float score;        char addr[30];    &#125;student1,student2</code></pre><p>在定义了结构体变量后，系统会为之分配内存单元<br>例如：student1和student2在内存中各占(4+20+1+4+4+30=67)个字节。</p><p><strong>③直接定义结构体类型变量</strong></p><pre><code>    struct    &#123;        成员表列    &#125;变量名表列;</code></pre><p>即不出现结构体名。</p><ul><li>结构体嵌套</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">date</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">int</span> month;</span><br><span class="line"><span class="keyword">int</span> day;</span><br><span class="line"><span class="keyword">int</span> year;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">int</span> num;</span><br><span class="line"><span class="keyword">char</span> name[<span class="number">20</span>];</span><br><span class="line"><span class="keyword">char</span> sex;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">date</span> <span class="title">birthday</span>;</span> <span class="comment">//成员birthday被说明为data结构类型，成员名可与程序中其他变量同名，互不干扰。</span></span><br><span class="line"><span class="keyword">float</span> score;</span><br><span class="line">&#125;boy1,boy2;</span><br></pre></td></tr></table></figure><h2 id="结构体变量的引用"><a href="#结构体变量的引用" class="headerlink" title="结构体变量的引用"></a>结构体变量的引用</h2><p>不能将一个结构体变量作为一个整体进行输出<br>正确引用方式：</p><pre><code>    结构体变量名.成员名    student1.num  //表示student1变量中的num成员    student1.num=100; //对变量成员赋值</code></pre><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">int</span> num;</span><br><span class="line"><span class="keyword">char</span> *name;</span><br><span class="line"><span class="keyword">char</span> sex;</span><br><span class="line"><span class="keyword">float</span> score;</span><br><span class="line">&#125;boy1,boy2;</span><br><span class="line"></span><br><span class="line">boy1.num=<span class="number">007</span>;</span><br><span class="line">boy1.name=<span class="string">&quot;Jake&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Please input sex and score\n&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%c %f&quot;</span>,&amp;boy1.sex,&amp;boy1.score);</span><br><span class="line"></span><br><span class="line">boy2=boy1;  <span class="comment">//把boy1全体成员赋给boy2 </span></span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Number = %d\nName = %s\n&quot;</span>,boy2.num,boy2.name);<span class="comment">// </span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Sex = %c\nScore = %f\n&quot;</span>,boy2.sex,boy2.score);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">Please input sex and score</span></span><br><span class="line"><span class="comment">M 91</span></span><br><span class="line"><span class="comment">Number = 7</span></span><br><span class="line"><span class="comment">Name = Jake</span></span><br><span class="line"><span class="comment">Sex = M</span></span><br><span class="line"><span class="comment">Score = 91.000000</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><ul><li><p>如果成员本身又属于一个结构体类型，则要用若干个成员运算符，一级一级地找到最低的一级的成员。只能对最低级的成员进行赋值或存取以及运算。<br>例如以上结构体嵌套：</p><pre><code>  student1.num;  student1.birthday.month  //多个点运算符访问最低级成员</code></pre></li><li><p>对结构体变量的成员可以向普通变量一样进行各种运算(根据其类型决定可以进行的运算)</p></li><li><p>可以引用结构体变量成员的地址，也可以引用结构体变量的地址。<br>结构体变量的地址注意用在函数参数，传递结构体变量的地址。</p></li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">int</span> num;</span><br><span class="line"><span class="keyword">char</span> *name;</span><br><span class="line"><span class="keyword">char</span> sex;</span><br><span class="line"><span class="keyword">float</span> score;</span><br><span class="line">&#125;boy1;</span><br><span class="line">boy1.num=<span class="number">007</span>;</span><br><span class="line">boy1.name=<span class="string">&quot;Jake&quot;</span>;</span><br><span class="line"><span class="comment">//结构体地址和第一个成员地址一样</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;The address of struct is %o \n&quot;</span>,&amp;boy1);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;The address of num is %o \n&quot;</span>,&amp;boy1.num);</span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">The address of struct is 30577000</span></span><br><span class="line"><span class="comment">The address of num is 30577000</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h2 id="结构体变量初始化"><a href="#结构体变量初始化" class="headerlink" title="结构体变量初始化"></a>结构体变量初始化</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">int</span> num;</span><br><span class="line"><span class="keyword">char</span> name[<span class="number">20</span>];</span><br><span class="line"><span class="keyword">char</span> sex;</span><br><span class="line">&#125;a=&#123;<span class="number">101</span>,<span class="string">&quot;LEE SIN&quot;</span>,<span class="string">&#x27;M&#x27;</span>&#125;;</span><br><span class="line"><span class="comment">//a.num=101;  </span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;num=%d\nname=%s\nsex=%s\n&quot;</span>,a.num,a.name,a.sex);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="结构体数组"><a href="#结构体数组" class="headerlink" title="结构体数组"></a>结构体数组</h2><p>结构体数组每一个元素都是一个结构体类型的数据，它们都分别包括各个成员项。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> NUM 3</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">person</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">char</span> name[<span class="number">20</span>];</span><br><span class="line"><span class="keyword">char</span> phone[<span class="number">10</span>];</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">person</span> <span class="title">man</span>[<span class="title">NUM</span>];</span> <span class="comment">//结构体数组 </span></span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;NUM;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;input name:\n&quot;</span>);</span><br><span class="line">gets(man[i].name); </span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;input phone:\n&quot;</span>);</span><br><span class="line">gets(man[i].phone); </span><br><span class="line">&#125; </span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\tname\t\t\t\t\tphone\n\n&quot;</span>);</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;NUM;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%20s\t\t\t%20s\n&quot;</span>,man[i].name,man[i].phone);</span><br><span class="line">&#125;</span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">input name:</span></span><br><span class="line"><span class="comment">1</span></span><br><span class="line"><span class="comment">input phone:</span></span><br><span class="line"><span class="comment">2</span></span><br><span class="line"><span class="comment">input name:</span></span><br><span class="line"><span class="comment">3</span></span><br><span class="line"><span class="comment">input phone:</span></span><br><span class="line"><span class="comment">4</span></span><br><span class="line"><span class="comment">input name:</span></span><br><span class="line"><span class="comment">5</span></span><br><span class="line"><span class="comment">input phone:</span></span><br><span class="line"><span class="comment">6</span></span><br><span class="line"><span class="comment">        name                                    phone</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">                   1                                       2</span></span><br><span class="line"><span class="comment">                   3                                       4</span></span><br><span class="line"><span class="comment">                   5                                       6</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h2 id="结构体数组定义"><a href="#结构体数组定义" class="headerlink" title="结构体数组定义"></a>结构体数组定义</h2><pre><code>    //第一种方法    struct student    &#123;        int num;        char sex;    &#125;;    struct student a[3];  //a为结构体数组名    //第二种方法    struct student    &#123;        int num;        char sex;    &#125;a[3];</code></pre><h2 id="结构体数组初始化"><a href="#结构体数组初始化" class="headerlink" title="结构体数组初始化"></a>结构体数组初始化</h2><pre><code>    //第一种方法    struct student    &#123;        int num;        char sex;    &#125;a[3]=&#123;&#123;1,'M'&#125;,&#123;2,'M'&#125;,&#123;3,'M'&#125;&#125;;    //第二种方法    struct student    &#123;        int num;        char sex;    &#125;;    struct student a[3]=&#123;&#123;1,'M'&#125;,&#123;2,'M'&#125;,&#123;3,'M'&#125;&#125;;</code></pre><h2 id="指向结构体类型数据的指针"><a href="#指向结构体类型数据的指针" class="headerlink" title="指向结构体类型数据的指针"></a>指向结构体类型数据的指针</h2><ul><li><p>一个结构体变量的指针就是该结构体变量所占据的内存段的<code>起始地址</code>。</p></li><li><p>可以设一个指针变量，用来指向一个结构体变量，此时该指针变量的值是结构体变量的起始地址。</p></li><li><p>指针变量也可以用来指向结构体数组中的元素。</p></li><li><p>结构体变量声明的一般形式:</p><pre><code>  struct 结构名 *结构指针变量名  struct student *pstu; </code></pre></li><li><p>赋值是把结构变量的首地址赋予该指针变量，不能把结构名赋予该指针变量。因为结构名只能表示一个结构形式，编译系统并不对它分配内存空间。</p></li><li><p>有了结构指针变量，就能更方便地访问结构变量的各个成员。<br>其访问形式如下:</p><pre><code>  (*结构指针变量).成员名  (*pstu).num;  //或者  结构指针变量-&gt;成员名  pstu-&gt;num</code></pre></li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">stu</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">int</span> num;</span><br><span class="line"><span class="keyword">char</span> *name;</span><br><span class="line"><span class="keyword">char</span> sex;</span><br><span class="line"><span class="keyword">float</span> score;</span><br><span class="line">&#125;boy=&#123;<span class="number">102</span>,<span class="string">&quot;Lzy&quot;</span>,<span class="string">&#x27;M&#x27;</span>,<span class="number">88.0</span>&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">stu</span> *<span class="title">pstu</span>;</span></span><br><span class="line">pstu=&amp;boy;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Number = %d\n Name = %s\n&quot;</span>,boy.num,boy.name);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Sex = %c\n Score = %f\n\n&quot;</span>,boy.sex,boy.score);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Number = %d\n Name = %s\n&quot;</span>,(*pstu).num,(*pstu).name);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Sex = %c\n Score = %f\n\n&quot;</span>,(*pstu).sex,(*pstu).score);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Number = %d\n Name = %s\n&quot;</span>,pstu-&gt;num,pstu-&gt;name);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Sex = %c\n Score = %f\n\n&quot;</span>,pstu-&gt;sex,pstu-&gt;score);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">Number = 102</span></span><br><span class="line"><span class="comment"> Name = Lzy</span></span><br><span class="line"><span class="comment">Sex = M</span></span><br><span class="line"><span class="comment"> Score = 88.000000</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">Number = 102</span></span><br><span class="line"><span class="comment"> Name = Lzy</span></span><br><span class="line"><span class="comment">Sex = M</span></span><br><span class="line"><span class="comment"> Score = 88.000000</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">Number = 102</span></span><br><span class="line"><span class="comment"> Name = Lzy</span></span><br><span class="line"><span class="comment">Sex = M</span></span><br><span class="line"><span class="comment"> Score = 88.000000</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h2 id="结构指针变量作函数参数"><a href="#结构指针变量作函数参数" class="headerlink" title="结构指针变量作函数参数"></a>结构指针变量作函数参数</h2><p>将一个结构体变量的值传递给另一个函数，有3个方法:</p><ul><li>用结构体变量的成员作参数</li><li>用结构体变量作实参</li><li>用指向结构体变量(或数组)的指针作实参，将结构体变量(或数组)的地址传给形参</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//有一个结构体变量stu，内含学生学号、姓名和3门课程的成绩。通过调用函数print将它们输出。</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">int</span> num;</span><br><span class="line"><span class="keyword">char</span> name[<span class="number">20</span>];</span><br><span class="line"><span class="keyword">float</span> score[<span class="number">3</span>];</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">(struct student)</span></span>;  <span class="comment">//函数声明</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span> <span class="title">stu</span>;</span></span><br><span class="line">stu.num=<span class="number">8</span>;</span><br><span class="line"><span class="built_in">strcpy</span>(stu.name,<span class="string">&quot;I Love China!!&quot;</span>);<span class="comment">//使用stu.name=&quot;I Love China!!&quot;，结构体成员必须定义成char *name;</span></span><br><span class="line">stu.score[<span class="number">0</span>]=<span class="number">98.5</span>;</span><br><span class="line">stu.score[<span class="number">1</span>]=<span class="number">99.0</span>;</span><br><span class="line">stu.score[<span class="number">2</span>]=<span class="number">99.5</span>;</span><br><span class="line">print(stu);   <span class="comment">//结构体变量作实参</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">(struct student stu)</span>  <span class="comment">//接收到结构体变量，知道了结构体变量的位置,相当于将整个结构体复制过去</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\tnum: %d\n&quot;</span>,stu.num);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\tname: %s\n&quot;</span>,stu.name);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\tscore_1: %5.2f\n&quot;</span>,stu.score[<span class="number">0</span>]);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\tscore_2: %5.2f\n&quot;</span>,stu.score[<span class="number">1</span>]);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\tscore_3: %5.2f\n&quot;</span>,stu.score[<span class="number">2</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">     num     : 8</span></span><br><span class="line"><span class="comment">        name    : I Love China!!</span></span><br><span class="line"><span class="comment">        score_1 : 98.50</span></span><br><span class="line"><span class="comment">        score_2 : 99.00</span></span><br><span class="line"><span class="comment">        score_3 : 99.50</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//改用指向结构体变量的指针作实参 </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">int</span> num;</span><br><span class="line"><span class="keyword">char</span> name[<span class="number">20</span>];</span><br><span class="line"><span class="keyword">float</span> score[<span class="number">3</span>];</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">(struct student *p)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span> <span class="title">stu</span>;</span></span><br><span class="line">stu.num=<span class="number">8</span>;</span><br><span class="line"><span class="built_in">strcpy</span>(stu.name,<span class="string">&quot;I Love China!!&quot;</span>);<span class="comment">//stu.name=&quot;I Love China!!&quot;</span></span><br><span class="line">stu.score[<span class="number">0</span>]=<span class="number">98.5</span>;</span><br><span class="line">stu.score[<span class="number">1</span>]=<span class="number">99.0</span>;</span><br><span class="line">stu.score[<span class="number">2</span>]=<span class="number">99.5</span>;</span><br><span class="line">print(&amp;stu);      <span class="comment">//传结构体变量的地址 </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">(struct student *p)</span> <span class="comment">//接收结构体变量地址，用结构体指针p指向它 ，复制过去的只是地址，比上一种方法效率高</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\tnum: %d\n&quot;</span>,p-&gt;num);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\tname: %s\n&quot;</span>,p-&gt;name);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\tscore_1: %5.2f\n&quot;</span>,p-&gt;score[<span class="number">0</span>]);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\tscore_2: %5.2f\n&quot;</span>,p-&gt;score[<span class="number">1</span>]);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\tscore_3: %5.2f\n&quot;</span>,p-&gt;score[<span class="number">2</span>]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="共用体"><a href="#共用体" class="headerlink" title="共用体"></a>共用体</h1><p>使几个不同的变量<code>共同占同一段内存</code>的结构称为“共用体”类型的结构。<br>定义共同体类型变量的一般形式为:</p><pre><code>    union 共用体名    &#123;        成员表列    &#125;变量表列;</code></pre><p>例如</p><pre><code>    union data    &#123;        int;        char ch;        float f;    &#125;a,b,c;    //或    union data    &#123;        int i;        char ch;        float f;    &#125;;    union data a,b,c;</code></pre>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
          <category> C </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C语言⭐针指</title>
      <link href="2021/01/15/%E5%90%8E%E7%AB%AF/C%E8%AF%AD%E8%A8%80/C%E8%AF%AD%E8%A8%80_%E9%92%88%E6%8C%87/"/>
      <url>2021/01/15/%E5%90%8E%E7%AB%AF/C%E8%AF%AD%E8%A8%80/C%E8%AF%AD%E8%A8%80_%E9%92%88%E6%8C%87/</url>
      
        <content type="html"><![CDATA[<h1 id="指针"><a href="#指针" class="headerlink" title="指针"></a>指针</h1><p>感谢<a href="https://blog.csdn.net/best_xiaolong/article/details/110152320?utm_source=app">C语言指针，这可能是史上最干最全的讲解啦（附代码）！！！</a></p><ul><li>指针的使用使得不同区域的代码可以轻易的共享内存数据,可以动态的分配内存。</li><li>指针使得一些复杂的链接性的数据结构的构建成为可能，比如链表，链式二叉树等等。</li><li>有些操作必须使用指针。如操作申请的堆内存。</li><li>C语言中的一切函数调用中，值传递都是“按值传递”的。如果我们要在函数中修改被传递过来的对象，就必须通过这个对象的指针来完成。</li></ul><h2 id="数据存储方式"><a href="#数据存储方式" class="headerlink" title="数据存储方式"></a>数据存储方式</h2><ul><li>计算机访问某个数据的时候，首先要通过<code>地址总线</code>传送数据存储或者读取的位置，然后在通过<code>数据总线</code>传送需要存储或者读取的数据。一般地，int整型的位数等于数据总线的宽度，指针的位数等于地址总线的宽度。</li><li>计算机是以<code>一个字节(8位)</code>为基本访问单元，小于一个字节的数据，必须通过位操作来进行访问。所以可以认为，计算每次都是从第p个字节开始访问的。访问的长度将由编译器根据实际类型进行计算.<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/08/fedde9697c0f70e1d88f3b8e0306fae7.png"></li><li><code>sizeof</code>关键字是编译器用来计算某些类型的数据的长度的，以<code>字节</code>为基本单位。<pre><code>  sizeof(char)=1;    sizeof(int)=4;</code></pre></li></ul><h2 id="数据具有地址"><a href="#数据具有地址" class="headerlink" title="数据具有地址"></a>数据具有地址</h2><p>内存在<code>物理上</code>是由一组<code>DRAM芯片</code>组成的。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/08/8a1d29718a181cd42b1b1c775be52bdd.png"><br>而作为一个程序员，我们不需要了解内存的物理结构，<code>操作系统</code>将<code>RAM等硬件和软件结合起来</code>，给程序员提供的一种对内存使用的抽象。这种抽象机制使得程序使用的是<code>虚拟存储器</code>,而不是直接操作和使用真实存在的物理存储器。所有的虚拟地址形成的集合就是<code>虚拟地址空间</code>。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/08/81d7302266706682d303fe496474e92c.png"><br>也就是说，内存是一个很大的，线性的字节数组（平坦寻址）。每一个字节都是固定的大小，由8个二进制位组成。<code>且都有一个唯一的编号,编号从0开始，一直到最后一个字节</code>。<br>如上图中，这是一个256M的内存，他一共有256x1024x1024  = 268435456个字节，那么它的地址范围就是 0 ~268435455  。<br>由于内存中的每一个字节都有一个唯一的编号。<br>因此，在程序中使用的变量，常量，甚至数函数等数据，当他们被载入到内存中后，都有自己唯一的一个编号，这个编号就是这个数据的地址。<br>指针就是这样形成的。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;    </span><br><span class="line"><span class="keyword">char</span> ch = <span class="string">&#x27;a&#x27;</span>;    </span><br><span class="line"><span class="keyword">int</span>  num = <span class="number">97</span>;    </span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;ch 的地址:%p&quot;</span>,&amp;ch);   </span><br><span class="line"><span class="comment">//ch 的地址:0028FF47    </span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;num的地址:%p&quot;</span>,&amp;num); </span><br><span class="line"> <span class="comment">//num的地址:0028FF40    </span></span><br><span class="line"> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="comment">/*</span></span><br><span class="line"><span class="comment"> ch 的地址:0028FF47</span></span><br><span class="line"><span class="comment"> num的地址:0028FF40</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure><ul><li>指针的值实质是内存单元（即字节）的编号，所以指针单独从数值上看，也是整数，他们一般用16进制表示。</li><li>指针的值（虚拟地址值）使用一个机器字的大小来存储。</li><li>也就是说,对于一个机器字为w位的电脑而言,它的虚拟地址空间是0~2w － 1 ,程序最多能访问2w个字节。</li><li>这就是为什么xp这种32位系统最大支持4GB内存的原因了。<br>我们可以大致画出变量ch和num在内存模型中的存储。（假设 char占1个字节，int占4字节）</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/08/039219167813dd4cf772ef2df8648e55.png"></p><h2 id="变量和内存"><a href="#变量和内存" class="headerlink" title="变量和内存"></a>变量和内存</h2><p>用上面例子中的  int num = 97 这个局部变量来分析变量在内存中的存储模型。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/08/039219167813dd4cf772ef2df8648e55.png"><br>已知：num的类型是int，占用了4个字节的内存空间，其值是97，地址是0028FF40。我们从以下几个方面去分析。</p><ul><li>内存的数据<br>内存的数据就是变量的值对应的二进制。<br>97的二进制是 : 00000000 00000000 00000000 0110000 , 但使用的小端模式存储时，低位数据存放在低地址，所以图中画的时候是倒过来的。</li><li>内存数据的类型<br>内存的数据类型决定了这个数据占用的字节数，以及计算机将如何解释这些字节。<br>num的类型是int，因此将被解释为 一个整数。</li><li>内存数据的名称<br>内存的名称就是变量名。实质上，内存数据都是以地址来标识的，根本没有内存的名称这个说法，这只是高级语言提供的抽象机制 ，方便我们操作内存数据。<br>而且在C语言中，并不是所有的内存数据都有名称，例如使用malloc申请的堆内存就没有。</li><li>内存数据的地址<br>如果一个类型占用的字节数大于1，则其变量的地址就是地址值最小的那个字节的地址。<br>因此num的地址是 0028FF40。内存的地址用于标识这个内存块。</li><li>内存数据的生命周期<br>num是main函数中的局部变量，因此当main函数被启动时，它被分配于栈内存上，当main执行结束时，消亡。</li></ul><h2 id="什么是指针"><a href="#什么是指针" class="headerlink" title="什么是指针"></a>什么是指针</h2><ul><li>在程序中定义一个变量，在对程序进行编译时，系统就会给这个变量分配内存单元，并根据变量类型，分配一定长度的空间。<br>例如：对int型变量分配4个字节，<code>内存区的每一个字节都有一个编号</code>，即“地址”，它相当于旅馆中的房间号，地址所标识的内存单元中存放的数据就相当于居住的旅客。</li><li>由于通过地址能找到所需的单元变量，可以说，<code>地址指向该变量单元</code>，因此将地址形象化地称为“<code>指针</code>”。<br>例如：有一个房间号为2008的房间，地址就是2008，或者说2008指向这个房间。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/08/3deace18cca60dd5b8169b8cc9fe6db9.png"></li><li>在C语言中，对变量的访问有<code>直接访问</code>和<code>间接访问</code>。<br>例如以下，直接通过<code>变量名i</code>找到存储单元称为直接访问方式。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/08/7e1ea1bfca185d8222b5820e060057e4.png"><br>另外一种指通过把变量i的地址存放在另一变量中，然后通过该变量来间接找到变量i的地址，从而访问变量i，称为“<code>间接访问</code>”。而这个存储变量地址的特殊变量称为“<code>指针变量</code>”。</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> i=<span class="number">3</span>;</span><br><span class="line"><span class="keyword">int</span> *i_pointer; <span class="comment">//定义指向整型的指针变量，能存放整型数据地址(int *)，*只是表示它为指针变量</span></span><br><span class="line">i_pointer=&amp;i;   <span class="comment">//将i的地址存放到i_pointer中,即(2000),&amp;为取地址操作符</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,*i_pointer);<span class="comment">//*为取值操作符，取出所指向地址的值。</span></span><br><span class="line"><span class="comment">//即找到存放变量i地址的变量i_pointer，从中取出i的地址(2000),然后到2000字节开始的存储单元中取出i的值(3)</span></span><br></pre></td></tr></table></figure><blockquote><p>总之，一个变量的地址称为该变量的“<code>指针</code>”。例如，地址2000是变量i的指针<br>存放另一变量的地址的变量(指针)，称为“<code>指针变量</code>”，例如，i_pointer就是指针变量。<br>指针变量就是地址变量，用来存放地址，指针变量的值是地址(即指针)。<code>指针是一个地址，指针变量是存放地址的变量</code>。</p></blockquote><h2 id="指针变量"><a href="#指针变量" class="headerlink" title="指针变量"></a>指针变量</h2><p>存放地址的变量是指针变量，它用来指向另一个对象（如变量、数组、函数等）。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//通过指针变量访问整型变量</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a=<span class="number">100</span>,b=<span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> *pointer1,*pointer2; <span class="comment">//定义指向整型的指针变量</span></span><br><span class="line">pointer1=&amp;a;             <span class="comment">//把a的地址赋值pointer1</span></span><br><span class="line">pointer2=&amp;b;<span class="comment">//把b的地址赋值pointer2</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;a的地址:%p\n&quot;</span>,pointer1); <span class="comment">//%p为指针格式符</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;b的地址:%p\n&quot;</span>,pointer2);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;a=%d,b=%d&quot;</span>,*pointer1,*pointer2);</span><br><span class="line"> &#125; </span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">a的地址:000000000062FE0C</span></span><br><span class="line"><span class="comment">b的地址:000000000062FE08</span></span><br><span class="line"><span class="comment">a=100,b=10</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><ul><li>定义指针变量<pre><code>  类型名 *指针变量名；  int *p1;  //指向int型变量的指针变量  float *p2; //指向float型变量的指针变量  char *p3; //指向char型变量的指针变量</code></pre></li><li>不同数据类型在内存中所占的字节数和存放方式是不同的，必须指定数据类型，才能按存储单元的长度以及数据的存储形式正确的存取数据。</li><li>一个变量的指针的含义包括两个方面：<code>一是以存储单元编号表示的地址(如编号为2000的字节)，一是它指向的存储单元的数据类型(如int，char)</code>，所以在说明变量类型时，不能单一说“a是一个指针变量”，而应该完整地说“a是指向整型数据的指针变量”。</li><li>指针变量只能存放地址，不能存放数据。</li></ul><h2 id="引用指针变量"><a href="#引用指针变量" class="headerlink" title="引用指针变量"></a>引用指针变量</h2><ul><li><p>给指针变量赋值</p><pre><code>  p=&amp;a;  //把a的地址赋给变量p</code></pre><p>指针变量p的值是变量a的地址，p指向a。</p></li><li><p>引用指针变量指向的变量<br>如果已执行”p=&amp;a”,即p指向了a的地址，则</p><pre><code>  printf(&quot;%d&quot;,*p); //*取值运算符  *p=1;  //表示将整数1赋给p所指向的变量a，即等价于a=1</code></pre><p>以整数的形式输出指针变量p所指向的变量a的值。</p></li><li><p>引用指针变量的值</p><pre><code>  printf(&quot;%o&quot;,p);  //以八进制输出变量p的值，即p指向的a的地址。</code></pre><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//输入a和b两个整数，按先大后小的顺序输出a和b </span></span><br><span class="line"><span class="comment">//输入a和b两个整数，按先大后小的顺序输出a和b </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a,b;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入两个整数(输入一个数，按下回车):\n&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;a,&amp;b);</span><br><span class="line"><span class="keyword">int</span> *p1,*p2,*t;</span><br><span class="line">p1=&amp;a;</span><br><span class="line">p2=&amp;b;</span><br><span class="line"><span class="keyword">if</span>(a&lt;b)</span><br><span class="line">&#123;</span><br><span class="line">t=p1;  <span class="comment">//t为中间变量也要是同类型指针变量</span></span><br><span class="line">p1=p2;</span><br><span class="line">p2=t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;a=%d,b=%d\n&quot;</span>,a,b); </span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Max:%d,min:%d&quot;</span>,*p1,*p2);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">请输入两个整数(输入一个数，按下回车):</span></span><br><span class="line"><span class="comment">3</span></span><br><span class="line"><span class="comment">100</span></span><br><span class="line"><span class="comment">a=3,b=100</span></span><br><span class="line"><span class="comment">Max:100,min:3</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/08/4826b2e82d5fe87d981cafdc6629a4db.png"></p><blockquote><p>a和b的值并未交换，但p1和p2的值却改变了。p1的值由&amp;a变成了&amp;b，p2的值由&amp;b变成了&amp;a，也就是a和b的地址发生交换，值不变，这样输出<em>p1和</em>p2时，实际上是输出变量b和a的值。</p></blockquote></li><li><p>如果已经执行了语句pointer_1=&a;则&amp;<em>pointer_1与&amp;a相同。因为&amp;和</em>优先级相同，但按自右向左方向结合，因此先进行*pointer_i的运算，它就是变量a，再执行&amp;运算。</p></li><li><p><em>&amp;a的含义是先进行&amp;a运算，得到a的地址，再进行</em>运算，即&amp;a所指向的变量，也就是变量a。与*pointer_1作用一样。</p></li><li><p>(*pointer_1)++等价于a++;</p></li></ul><h2 id="指针变量作为函数参数"><a href="#指针变量作为函数参数" class="headerlink" title="指针变量作为函数参数"></a>指针变量作为函数参数</h2><p>作用是将一个变量的地址传送到另一个函数中。<br><code>实参为地址(p)，形参为指向的变量(int *p)</code></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">swap</span><span class="params">(<span class="keyword">int</span> *p1,<span class="keyword">int</span> *p2)</span></span>;</span><br><span class="line"><span class="keyword">int</span> a,b;</span><br><span class="line"><span class="keyword">int</span> *p1,*p2;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入两个整数(输入一个数，按下回车):\n&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;a,&amp;b);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;未交换：a=%d,b=%d\n&quot;</span>,a,b); <span class="comment">//未交换 </span></span><br><span class="line">p1=&amp;a;</span><br><span class="line">p2=&amp;b;</span><br><span class="line"><span class="keyword">if</span>(a&lt;b)</span><br><span class="line">&#123;</span><br><span class="line">swap(p1,p2);  <span class="comment">//实现交换 </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;交换后：a=%d,b=%d\n&quot;</span>,a,b);   <span class="comment">//函数中是交换a和b值，故发生交换变化 </span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Max:%d,min:%d&quot;</span>,*p1,*p2);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">swap</span><span class="params">(<span class="keyword">int</span> *p1,<span class="keyword">int</span> *p2)</span>  <span class="comment">//*p1和*p2就是a，b变量 </span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line">t=*p1;  <span class="comment">//t=a </span></span><br><span class="line">*p1=*p2; <span class="comment">//a=b</span></span><br><span class="line">*p2=t;   <span class="comment">//b=t</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//输入a,b,c三个整数，按大小顺序输出。</span></span><br><span class="line"><span class="comment">//a&lt;b,ab交换,a&lt;c,ac交换 ,b&lt;c,bc交换</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">exchange</span><span class="params">(<span class="keyword">int</span> *p1,<span class="keyword">int</span> *p2,<span class="keyword">int</span> *p3)</span></span>;<span class="comment">//函数声明，该函数使得a&gt;b&gt;c </span></span><br><span class="line"><span class="keyword">int</span> a,b,c;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输入3个整数:\n&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>,&amp;a,&amp;b,&amp;c);</span><br><span class="line"><span class="keyword">int</span> *p1,*p2,*p3;</span><br><span class="line">p1=&amp;a;</span><br><span class="line">p2=&amp;b;</span><br><span class="line">p3=&amp;c;</span><br><span class="line"><span class="comment">//extern swap(p1,p2); //扩展作用域</span></span><br><span class="line">exchange(p1,p2,p3);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&gt;%d&gt;%d&quot;</span>,a,b,c); </span><br><span class="line">&#125; </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">exchange</span><span class="params">(<span class="keyword">int</span> *p1,<span class="keyword">int</span> *p2,<span class="keyword">int</span> *p3)</span> <span class="comment">//等价于 int *p1=p1 </span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">swap</span><span class="params">(<span class="keyword">int</span> *p,<span class="keyword">int</span> *q)</span></span>;  <span class="comment">//函数声明 </span></span><br><span class="line"><span class="keyword">if</span>(*p1&lt;*p2)</span><br><span class="line">swap(p1,p2);</span><br><span class="line"><span class="keyword">if</span>(*p1&lt;*p3)</span><br><span class="line">swap(p1,p3);</span><br><span class="line"><span class="keyword">if</span>(*p2&lt;*p3)</span><br><span class="line">swap(p2,p3);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">swap</span><span class="params">(<span class="keyword">int</span> *p,<span class="keyword">int</span> *q)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line">t=*p;</span><br><span class="line">*p=*q;</span><br><span class="line">*q=t;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="数组和指针"><a href="#数组和指针" class="headerlink" title="数组和指针"></a>数组和指针</h2><ul><li>一个变量有地址，一个数组包含若干元素，每个数组元素都在内存中占用存储单元，它们都有相应的地址。</li><li>指针变量既然可以指向变量，当然也可以指向数组元素(把某一元素的地址放到一个指针变量中)。</li><li><code>所谓数组元素的指针就是数组元素的地址</code>。</li><li>指针变量指向一个数组元素<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> a[<span class="number">10</span>]=&#123;<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">9</span>,<span class="number">11</span>,<span class="number">13</span>,<span class="number">15</span>,<span class="number">17</span>,<span class="number">19</span>; /</span><br><span class="line"><span class="keyword">int</span> *p;    </span><br><span class="line">p=&amp;[<span class="number">0</span>];   <span class="comment">//把a[0]元素的地址赋给指针变量p，也就是指向第0号元素。</span></span><br><span class="line"><span class="comment">//由于数组名就是数组首元素的地址，故p=&amp;[0]等价于p=a</span></span><br></pre></td></tr></table></figure><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/08/a026acc530af4c753fc1f6ea7d8247bc.png"></li></ul><h2 id="引用数组元素"><a href="#引用数组元素" class="headerlink" title="引用数组元素"></a>引用数组元素</h2><p>①下标法，如a[i]形式<br>②<code>指针法，如*(a+i)或*(p+i)</code> //表示从a[0]开始通过i累加查找数组元素<br>其中a是<code>数组名</code>(首元素的地址)，p是指向数组元素的指针变量，其初值<code>p=a</code>。<br>即通过数组名计算数组元素地址，找出元素的值。</p><blockquote><p>p+1并不是将p的值(地址)简单地加1，而是加上一个数组元素所占的字节数。例如，int型数组每个元素占4字节，p+1意味着p的值(地址)加4个字节，以使它指向下一个元素。p+1所代表的地址实际上是<code>(p+1)*d</code>,d是一个数组元素所占的字节数(依据数据类型)。</p></blockquote><p>③<code>用指针变量指向数组元素</code>。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//通过数组名计算数组元素地址，找出元素的值</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">10</span>];</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入10个整数:\n&quot;</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)&#123;</span><br><span class="line"><span class="comment">//通过数组名和元素序号计算元素地址，再找到该元素</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\t&quot;</span>,*(a+i));   </span><br><span class="line"><span class="comment">//(a+i)是a数组中序号为i的元素的地址，*(a+i)是该元素的值。 </span></span><br><span class="line">&#125;</span><br><span class="line"> &#125; </span><br></pre></td></tr></table></figure> <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">10</span>];</span><br><span class="line"><span class="keyword">int</span> *p;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入10个整数:\n&quot;</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// p=a(p=&amp;a[0])表示指针指向数组a的首地址，p++每次指向下一个元素</span></span><br><span class="line"><span class="keyword">for</span>(p=a;p&lt;(a+<span class="number">10</span>);p++)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\t&quot;</span>,*p);   </span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line"> &#125; </span><br></pre></td></tr></table></figure><h2 id="数组名做函数参数"><a href="#数组名做函数参数" class="headerlink" title="数组名做函数参数"></a>数组名做函数参数</h2><pre><code>    f(int arr[],int n)</code></pre><p>在编译时是将arr按指针变量处理的，相当于将函数的首部写成</p><pre><code>    f(int *arr,int n)</code></pre><blockquote><p>C语言调用函数时虚实结合的方法都是采用“<code>值传递</code>”方式，当用变量名作为函数参数时传递的是变量的值，当用<code>数组名</code>作为函数参数时，由于数组名代表的是数组<code>首元素地址</code>，因此传递的值是<code>地址</code>，所以要求<code>形参为指针变量</code>。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/08/e6c4326ff26c355b50dc5847ed1888ba.png"></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">///将数组a中n个整数按相反顺序存放 </span></span><br><span class="line"><span class="comment">//将a[0]与a[n-1]对换,a[1]与a[n-2]对换。。。。 </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//void reserve(int a[],int n);  //reverse函数声明</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">reserve</span><span class="params">(<span class="keyword">int</span> *a,<span class="keyword">int</span> n)</span></span>; <span class="comment">//传递指针变量 </span></span><br><span class="line"><span class="keyword">int</span> i,a[<span class="number">10</span>]=&#123;<span class="number">3</span>,<span class="number">7</span>,<span class="number">9</span>,<span class="number">11</span>,<span class="number">0</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">5</span>,<span class="number">4</span>,<span class="number">2</span>&#125;;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;原数组:\n&quot;</span>);</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\t&quot;</span>,a[i]);</span><br><span class="line"> &#125;</span><br><span class="line"> reserve(a,<span class="number">10</span>); <span class="comment">//数组名作地址，等价于传递了首元素地址 </span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n倒序后:\n&quot;</span>);</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)</span><br><span class="line"> &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\t&quot;</span>,a[i]);</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">reserve</span><span class="params">(<span class="keyword">int</span> *a,<span class="keyword">int</span> n)</span> <span class="comment">//x为指针变量</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> *p,t,*i,*j,m;</span><br><span class="line">m=(n<span class="number">-1</span>)/<span class="number">2</span>;</span><br><span class="line">i=a;   <span class="comment">//i指向a，即指向数组第一个元素 </span></span><br><span class="line">j=a+n<span class="number">-1</span>;  <span class="comment">//j指向数组的最后一个元素 ，从0开始要减1 </span></span><br><span class="line">p=a+m;<span class="comment">//p指向中间值</span></span><br><span class="line"><span class="keyword">for</span>(;i&lt;=p;i++,j--)</span><br><span class="line">&#123;</span><br><span class="line">t=*i;</span><br><span class="line">*i=*j;</span><br><span class="line">*j=t;</span><br><span class="line">&#125;</span><br><span class="line"> &#125; </span><br><span class="line"></span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">void reverve(int a[],int n)  //x是数组名 </span></span><br><span class="line"><span class="comment">&#123;</span></span><br><span class="line"><span class="comment">int t,i,j,m;</span></span><br><span class="line"><span class="comment">m=(n-1)/2;   //中间变量 </span></span><br><span class="line"><span class="comment">for(i=0;i&lt;=m;i++)  //小于中间值就发生提供 </span></span><br><span class="line"><span class="comment">&#123;</span></span><br><span class="line"><span class="comment">j=n-1-i;  //j指向对应的元素，例a[0]对应倒数第一个元素 a[n-1]</span></span><br><span class="line"><span class="comment">t=a[i];</span></span><br><span class="line"><span class="comment">a[i]=a[j];</span></span><br><span class="line"><span class="comment">a[j]=t;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">*/</span> </span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//从十个数中找出其中最大值和最小值</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">max_min_value</span><span class="params">(<span class="keyword">int</span> a[],<span class="keyword">int</span> n)</span></span>; <span class="comment">//函数声明 </span></span><br><span class="line"><span class="keyword">int</span> max,min;  <span class="comment">//全局变量 </span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i,a[<span class="number">10</span>];</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入10个整数:\n&quot;</span>);</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]); </span><br><span class="line">&#125; </span><br><span class="line">max_min_value(a,<span class="number">10</span>);  <span class="comment">//数组名当参数 </span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\nmax=%d,min=%d\n&quot;</span>,max,min);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125; </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">max_min_value</span><span class="params">(<span class="keyword">int</span> a[],<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> *p,*a_end; <span class="comment">//定义两个指针变量 </span></span><br><span class="line">a_end=a+n;    <span class="comment">//指向最后一个元素地址 </span></span><br><span class="line">max=min=*a;  <span class="comment">//设a[0]为最大最小值 </span></span><br><span class="line"><span class="keyword">for</span>(p=a+<span class="number">1</span>;p&lt;a_end;p++) <span class="comment">//p=a+1即a[1],p&lt;a[n],p++即a下一个元素 </span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(*p&gt;max)</span><br><span class="line">&#123;</span><br><span class="line">max=*p;</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(*p&lt;min)</span><br><span class="line">&#123;</span><br><span class="line">min=*p;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"> &#125; </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1.形参和实参都用数组名</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">10</span>];</span><br><span class="line">f(a,<span class="number">10</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">f</span><span class="params">(<span class="keyword">int</span> a[],<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">...</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//2.实参用数组名，形参用指针变量</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">10</span>];</span><br><span class="line">f(a,<span class="number">10</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">f</span><span class="params">(<span class="keyword">int</span> *a,<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">...</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//3.实参形参都用指针变量</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">10</span>],*p=a;</span><br><span class="line">f(p,<span class="number">10</span>);    <span class="comment">//传地址</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">f</span><span class="params">(<span class="keyword">int</span> *a,<span class="keyword">int</span> n)</span>  <span class="comment">//接收地址</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">...</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//4.实参为指针变量，形参为数组名</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">10</span>],*p=a;</span><br><span class="line">f(p,<span class="number">10</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">f</span><span class="params">(<span class="keyword">int</span> a[],<span class="keyword">int</span> n)</span>  <span class="comment">//实现同一首地址</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="多维数组与指针"><a href="#多维数组与指针" class="headerlink" title="多维数组与指针"></a>多维数组与指针</h2><p>二维数组在内存中是线性存放的，但在逻辑上可以认为是“数组的数组”，分行和列来理解。</p><pre><code>    int a[3][4]=&#123;&#123;1,3,5,7&#125;,&#123;9,11,13,15&#125;,&#123;17,19,21,23&#125;&#125;;</code></pre><p>设二维数组的首行的首地址为2000，则有：</p><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/09/01d7f1351a27ceb6940a80be6dc48455.png"></p><table><thead><tr><th align="center">表示形式</th><th align="center">含义</th><th align="center">地址</th></tr></thead><tbody><tr><td align="center">a</td><td align="center">二维数组名，指向一维数组a[0]，即0行首地址</td><td align="center">2000</td></tr><tr><td align="center">a[0],* (a+0),* a</td><td align="center">0行0列元素地址</td><td align="center">2000</td></tr><tr><td align="center">a+1,&amp;a[1]</td><td align="center">1行首地址</td><td align="center">2016</td></tr><tr><td align="center">a[1],*(a+1)</td><td align="center">1行0列元素a[1] [0]的地址</td><td align="center">2016</td></tr><tr><td align="center">a[1]+2,*(a+1)+2,&amp;a[1] [2]</td><td align="center">1行2列元素a[1] [2]的地址</td><td align="center">2024</td></tr><tr><td align="center">*(a[1]+2), *( *(a+1)+2),a[1] [2]</td><td align="center">1行2列元素a[1] [2]的地址</td><td align="center">元素值为13</td></tr></tbody></table><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">3</span>][<span class="number">4</span>]=&#123;&#123;<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>&#125;,&#123;<span class="number">9</span>,<span class="number">11</span>,<span class="number">13</span>,<span class="number">15</span>&#125;,&#123;<span class="number">17</span>,<span class="number">19</span>,<span class="number">21</span>,<span class="number">23</span>&#125;&#125;;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;************指向第一个元素的地址***************\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;a:%d\n&quot;</span>,a);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;*a:%d\n&quot;</span>,*a); </span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;a[0]:%d\n&quot;</span>,a[<span class="number">0</span>]);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;&amp;a[0]:%d\n&quot;</span>,&amp;a[<span class="number">0</span>]);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;&amp;a[0][0]:%d\n&quot;</span>,&amp;a[<span class="number">0</span>][<span class="number">0</span>]);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;************指向第二行的地址，相差16字节*************\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;a+1:%d\n&quot;</span>,a+<span class="number">1</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;*(a+1):%d\n&quot;</span>,*(a+<span class="number">1</span>));  </span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;a[1]:%d\n&quot;</span>,a[<span class="number">1</span>]);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;&amp;a[1]:%d\n&quot;</span>,&amp;a[<span class="number">1</span>]);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;&amp;a[1][0]:%d\n&quot;</span>,&amp;a[<span class="number">1</span>][<span class="number">0</span>]);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;************指向第三行的地址，相差16字节***************\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;a+2:%d\n&quot;</span>,a+<span class="number">2</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;*(a+2):%d\n&quot;</span>,*(a+<span class="number">2</span>));</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;a[2]:%d\n&quot;</span>,a[<span class="number">2</span>]); </span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;&amp;a[2]:%d\n&quot;</span>,&amp;a[<span class="number">2</span>]);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;&amp;a[2][0]:%d\n&quot;</span>,&amp;a[<span class="number">2</span>][<span class="number">0</span>]);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;   </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">************指向第一个元素的地址***************</span></span><br><span class="line"><span class="comment">a:6487536</span></span><br><span class="line"><span class="comment">*a:6487536</span></span><br><span class="line"><span class="comment">a[0]:6487536</span></span><br><span class="line"><span class="comment">&amp;a[0]:6487536</span></span><br><span class="line"><span class="comment">&amp;a[0][0]:6487536</span></span><br><span class="line"><span class="comment">************指向第二行的地址，相差16字节*************</span></span><br><span class="line"><span class="comment">a+1:6487552</span></span><br><span class="line"><span class="comment">*(a+1):6487552</span></span><br><span class="line"><span class="comment">a[1]:6487552</span></span><br><span class="line"><span class="comment">&amp;a[1]:6487552</span></span><br><span class="line"><span class="comment">&amp;a[1][0]:6487552</span></span><br><span class="line"><span class="comment">************指向第三行的地址，相差16字节***************</span></span><br><span class="line"><span class="comment">a+2:6487568</span></span><br><span class="line"><span class="comment">*(a+2):6487568</span></span><br><span class="line"><span class="comment">a[2]:6487568</span></span><br><span class="line"><span class="comment">&amp;a[2]:6487568</span></span><br><span class="line"><span class="comment">&amp;a[2][0]:6487568</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><ul><li><p>指向多维数组元素的指针变量<br>把二维数组a分解为一维数组a[0],a[1],a[2]之后，设p为指向二维数组的指针变量。可定义为：</p><pre><code>  int(*p)[4];</code></pre><p>它表示p是一个指针变量，它指向包含<code>4个元素的一维数组</code>。若指向第一个一维数组a[0],其值等于a,a[0],或&amp;a[0][0]等。<br><code>而p+i则指向一维数组a[i]</code>。</p><blockquote><p>从前面分析可得出<code>*(p+i)+j</code>是二维数组<code>i行j列</code>的元素的地址，而<code>*(*(p+i)+j)</code>则是i行j列元素的<code>值</code>。</p></blockquote></li><li><p>二维数组指针变量说明的一般形式为：</p><pre><code>  类型说明符(*指针变量名)[长度]</code></pre><p>其中“<code>类型说明符</code>”为所指数组的<code>数据类型</code>。”<code>*</code>“表示其后的变量是<code>指针类型</code>。“<code>长度</code>”表示<code>二维数组分解为多个一维数组时，一维数组的长度，也就是二维数组的列数</code>。</p></li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//用指针输出二维数组的指 </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">3</span>][<span class="number">4</span>]=&#123;&#123;<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>&#125;,&#123;<span class="number">9</span>,<span class="number">11</span>,<span class="number">13</span>,<span class="number">15</span>&#125;,&#123;<span class="number">17</span>,<span class="number">19</span>,<span class="number">21</span>,<span class="number">23</span>&#125;&#125;;</span><br><span class="line"><span class="keyword">int</span> (*p)[<span class="number">4</span>];  <span class="comment">//二维数组指针   4为每个一维数组的长度</span></span><br><span class="line"><span class="keyword">int</span> i,j;   <span class="comment">//行列 </span></span><br><span class="line">p=a;    <span class="comment">//指针指向二维数组a的首地址 </span></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">3</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;<span class="number">4</span>;j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%2d  &quot;</span>,*(*(p+i)+j));</span><br><span class="line"><span class="comment">//*(*(p+i)+j)则是i行j列元素的值 </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"> &#125; </span><br><span class="line"> &#125; </span><br></pre></td></tr></table></figure><h2 id="字符串与指针"><a href="#字符串与指针" class="headerlink" title="字符串与指针"></a>字符串与指针</h2> <img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/09/13a3ccf618dabfdbeeb9f215cb06c0c0.png" width="400px" height="400px"><pre><code>     //char string[]=&quot;I love China!&quot;;    char *string=&quot;I love China!&quot;;  //定义一个字符指针     printf(&quot;%s\n&quot;,string);</code></pre><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//实现字符数组的复制 (下标法)</span></span><br><span class="line"><span class="keyword">char</span> a[]=<span class="string">&quot;I Love China!&quot;</span>,b[<span class="number">40</span>];</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;*(a+i)!=<span class="string">&#x27;\0&#x27;</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">*(b+i)=*(a+i);</span><br><span class="line">&#125;</span><br><span class="line">*(b+i)=<span class="string">&#x27;\0&#x27;</span>;  <span class="comment">//最后补上0，若不补会不知道字符串结尾在哪 </span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;String a is:%s\n&quot;</span>,a);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;String b is:&quot;</span>);</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;b[i]!=<span class="string">&#x27;\0&#x27;</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,b[i]); </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//实现字符数组的复制 </span></span><br><span class="line"><span class="keyword">char</span> a[]=<span class="string">&quot;I Love China!&quot;</span>,b[<span class="number">40</span>];</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;*(a+i)!=<span class="string">&#x27;\0&#x27;</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">*(b+i)=*(a+i);</span><br><span class="line">&#125;</span><br><span class="line">*(b+i)=<span class="string">&#x27;\0&#x27;</span>;  <span class="comment">//最后补上0，若不补会不知道字符串结尾在哪 </span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;String a is:%s\n&quot;</span>,a);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;String b is:&quot;</span>);</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;b[i]!=<span class="string">&#x27;\0&#x27;</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,b[i]); </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">String a is:I Love China!</span></span><br><span class="line"><span class="comment">String b is:I Love China!</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><ul><li>字符指针做函数参数<br>①用字符数组作参数<br>②形参用字符指针变量</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">copy_string</span><span class="params">(<span class="keyword">char</span> *from,<span class="keyword">char</span> *to)</span></span>;</span><br><span class="line"><span class="keyword">char</span> *a=<span class="string">&quot;I Love China!&quot;</span>;</span><br><span class="line"><span class="comment">//区别以下两种写法 第二种不能运行 </span></span><br><span class="line"><span class="keyword">char</span> b[]=<span class="string">&quot;We are family!&quot;</span>;</span><br><span class="line"><span class="comment">//如果用指针指向字符串(常量存储区),则它不能被修改</span></span><br><span class="line"><span class="comment">//char *b=&quot;We are family!&quot;;</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;String a=%s\nstring b=%s\n&quot;</span>,a,b);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\ncopy string a to string b:\n&quot;</span>);</span><br><span class="line">copy_string(a,b);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\nstring a=%s\nstring b=%s\n&quot;</span>,a,b);</span><br><span class="line">&#125; </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">copy_string</span><span class="params">(<span class="keyword">char</span> *from,<span class="keyword">char</span> *to)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(;*from!=<span class="string">&#x27;\0&#x27;</span>;from++,to++)</span><br><span class="line">&#123;</span><br><span class="line">*to=*from;</span><br><span class="line">&#125;</span><br><span class="line">*to=<span class="string">&#x27;\0&#x27;</span>; </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">String a=I Love China!</span></span><br><span class="line"><span class="comment">string b=We are family!</span></span><br><span class="line"><span class="comment">copy string a to string b:</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">string a=I Love China!</span></span><br><span class="line"><span class="comment">string b=I Love China!!</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><p><a href="https://fishc.com.cn/blog-9-1097.html">C++内存分配方式详解——堆、栈、自由存储区、全局/静态存储区和常量存储区</a></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//以上copy_string还有六种简化版写法</span></span><br><span class="line"><span class="comment">//1.</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">copy_string</span><span class="params">(<span class="keyword">char</span> *from,<span class="keyword">char</span> *to)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span>((*to=*from)!=<span class="string">&#x27;\0&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">to++;</span><br><span class="line">from++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//2.</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">copy_string</span><span class="params">(<span class="keyword">char</span> *from,<span class="keyword">char</span> *to)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//  *比++优先级高</span></span><br><span class="line"><span class="keyword">while</span>((*to++=*from++)!=<span class="string">&#x27;\0&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//3.</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">copy_string</span><span class="params">(<span class="keyword">char</span> *from,<span class="keyword">char</span> *to)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(*from!=<span class="string">&#x27;\0&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">*to++=*from++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//4.</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">copy_string</span><span class="params">(<span class="keyword">char</span> *from,<span class="keyword">char</span> *to)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//&#x27;\0&#x27;整型为0,当循环条件为0，即退出循环</span></span><br><span class="line"><span class="keyword">while</span>(*to++=*from++)</span><br><span class="line">&#123;</span><br><span class="line">;    </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//5.</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">copy_string</span><span class="params">(<span class="keyword">char</span> *from,<span class="keyword">char</span> *to)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(;*to++=*from++;)</span><br><span class="line">&#123;</span><br><span class="line">;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//6.</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">copy_string</span><span class="params">(<span class="keyword">char</span> *from,<span class="keyword">char</span> *to)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> *p1,*p2;</span><br><span class="line">p1=from;</span><br><span class="line">p2=to;</span><br><span class="line"><span class="keyword">while</span>((*p2++=*p1++)!=<span class="string">&#x27;\0&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>字符指针变量和字符数组的区别</p></li><li><p>字符数组由若干个元素组成，每个元素中放一个字符，而字符指针变量中存放的是地址(字符串第1个字符的地址)，决不是将字符串放到字符指针变量中。</p></li><li><p>赋值方法。对字符数组只能对各个元素赋值，不能用以下方法对字符数组赋值。</p><pre><code>  char str[20];  str=&quot;I love China!&quot;;</code></pre></li></ul><p>而对字符指针变量，可以采用下面方法赋值：</p><pre><code>    char *a;    a=&quot;I love Chia!&quot;;</code></pre><p>但注意赋给a的不是字符，而是字符串第一个元素的地址。</p><ul><li><p>对字符指针变量赋初值</p><pre><code>  char *a=&quot;I love China!&quot;;  等价于  char *a;  a=&quot;I love China!&quot;;</code></pre></li></ul><p>而对数组的初始化:</p><pre><code>    char str[20]=&#123;&quot;I love China!&quot;&#125;;    不能等价于    char str[20];    str[]=&quot;I love China&quot;;</code></pre><ul><li><p>如果定义了一个字符数组，在编译时为它分配内存单元，它有确定的地址。而定义一个字符指针变量时，给指针变量分配内存单元，在其中可以放一个字符变量的地址也就是说，该指针变量可以指向一个字符型数据，但如果未给它赋予一个地址值，则它并未具体指向一个确定的字符数据。</p><pre><code>  char str[10];  scanf(&quot;%s&quot;,str);  //以上是完全可以的，但下面方法不行  char *a;  scanf(&quot;%s&quot;,a);</code></pre></li><li><p>指针变量的值是可以变化的，使其指向不同的数据</p></li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> *a=<span class="string">&quot;I Love China!&quot;</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>,a);</span><br><span class="line"></span><br><span class="line">a+=<span class="number">7</span>;  <span class="comment">//指向第7个数据</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>,a);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">I Love China!</span></span><br><span class="line"><span class="comment">China!</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><p>另外需要说明的是，若定义了一个指针变量，并使它指向一个字符串，就可以用下标形式引用指针变量所指的字符串中的字符。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> *a=<span class="string">&quot;I Love China!&quot;</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;The sixth character is %c\n\n&quot;</span>,a[<span class="number">5</span>]);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;a[i]!=<span class="string">&#x27;\0&#x27;</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,a[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">The sixth character is e</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">I Love China!</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h2 id="指向函数的指针"><a href="#指向函数的指针" class="headerlink" title="指向函数的指针"></a>指向函数的指针</h2><p><code>用函数指针变量调用函数</code>。一个函数在编译时被分配给一个入口地址，这个函数的入口地址就称为函数的指针。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">比较a和b的大小，求大值 </span></span><br><span class="line"><span class="comment">**/</span> </span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//c语言不允许嵌套注释，下列这种方法可以方便使用 </span></span><br><span class="line"><span class="comment">//相当于开关，用哪段代码就填1，不用就0 </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span>(0)  <span class="comment">//#为预编译,(1)为真，就执行下面代码到endif为止</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">max</span><span class="params">(<span class="keyword">int</span>,<span class="keyword">int</span>)</span></span>;</span><br><span class="line"><span class="keyword">int</span> a,b,c;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;a,&amp;b);</span><br><span class="line">c=max(a,b);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;a=%d,b=%d,max=%d\n\n&quot;</span>,a,b,c);</span><br><span class="line"> &#125; </span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> </span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">max</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> c;</span><br><span class="line"><span class="keyword">if</span>(a&gt;b)</span><br><span class="line">&#123;</span><br><span class="line">c=a;</span><br><span class="line">&#125;<span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">c=b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> c;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span>(1)</span></span><br><span class="line"><span class="comment">//将main函数改为</span></span><br><span class="line"><span class="meta"># <span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">max</span><span class="params">(<span class="keyword">int</span>,<span class="keyword">int</span>)</span></span>;</span><br><span class="line"><span class="keyword">int</span> (*p)(<span class="keyword">int</span>,<span class="keyword">int</span>); <span class="comment">//定义指向函数的指针 </span></span><br><span class="line"><span class="keyword">int</span> a,b,c;</span><br><span class="line">p=max;    <span class="comment">//使p指向max函数 </span></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;a,&amp;b);</span><br><span class="line">c=(*p)(a,b);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;a=%d,b=%d,max=%d\n\n&quot;</span>,a,b,c);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"> &#125; </span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure><ul><li>函数指针变量常用的用途之一是<code>把指针作为参数传递到其他函数</code>。函数的指针也可以作为参数，以实现函数地址的传递，这样就能够在被调用的函数中使用实参函数。</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//实参函数名    f1            f2</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">sub</span><span class="params">(<span class="keyword">int</span>(*x1)(<span class="keyword">int</span>),<span class="keyword">int</span>(*x2)(<span class="keyword">int</span>,<span class="keyword">int</span>))</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a,b,i,j;</span><br><span class="line">a=(*x1)(i);  <span class="comment">//调用f1函数</span></span><br><span class="line">b=(*x2)(i,j); <span class="comment">//调用f2函数</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上函数的原理可以简述如下：有一个函数(sub()),它有两个形参(x1,x2)，定义x1和x2为指向函数的指针变量。在调用函数sub时，实参为两个函数名f1和f2,给形参传递的是函数f1和f2的地址。这样在函数sub中就可以调用f1和f2函数了。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/********************************************************/</span> </span><br><span class="line"><span class="comment">/*有两个整数a和b，由用户输入1，2或3。*/</span> </span><br><span class="line"><span class="comment">/*如输入1，程序就给出a和b中最大者*/</span></span><br><span class="line"><span class="comment">/*输入2就给出a和b中最小者，输入3则求和*/</span></span><br><span class="line"><span class="comment">/*******************************************************/</span> </span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">max</span><span class="params">(<span class="keyword">int</span>,<span class="keyword">int</span>)</span></span>; <span class="comment">//函数声明 </span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">min</span><span class="params">(<span class="keyword">int</span>,<span class="keyword">int</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span>,<span class="keyword">int</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">fun</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">int</span> (*p)(<span class="keyword">int</span>,<span class="keyword">int</span>))</span></span>; <span class="comment">//fun函数声明 </span></span><br><span class="line"><span class="keyword">int</span> a,b,n;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Enter a and b:\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;a=&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;b=&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;b);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;please choose 1,2or3\n&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line"><span class="keyword">if</span>(n==<span class="number">1</span>) fun(a,b,max);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(n==<span class="number">2</span>) fun(a,b,min);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(n==<span class="number">3</span>) fun(a,b,add); </span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">fun</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">int</span>(*p)(<span class="keyword">int</span>,<span class="keyword">int</span>))</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> result;</span><br><span class="line">result=(*p)(x,y);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,result);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">max</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> z;</span><br><span class="line"><span class="keyword">if</span>(x&gt;y)</span><br><span class="line">z=x;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">z=y;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;max=&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> z;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">min</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> z;</span><br><span class="line"><span class="keyword">if</span>(x&lt;y)</span><br><span class="line">z=x;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">z=y;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;min=&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> z;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;add=&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> x+y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">Enter a and b:</span></span><br><span class="line"><span class="comment">a=2</span></span><br><span class="line"><span class="comment">b=3</span></span><br><span class="line"><span class="comment">please choose 1,2or3</span></span><br><span class="line"><span class="comment">2</span></span><br><span class="line"><span class="comment">min=2ff</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h2 id="返回指针值的函数"><a href="#返回指针值的函数" class="headerlink" title="返回指针值的函数"></a>返回指针值的函数</h2><pre><code>    类型名 *函数名(参数列表)    int *a(int x,int y); //带回整型指针值</code></pre><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">有若干个学生的成绩 (每个学生有4门课程)</span></span><br><span class="line"><span class="comment">要求在用户输入学生序号以后，能输出该学生的全部成绩</span></span><br><span class="line"><span class="comment">用指针函数来实现 </span></span><br><span class="line"><span class="comment">*/</span> </span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">double</span>score[][<span class="number">4</span>]=&#123;&#123;<span class="number">60.0</span>,<span class="number">70.0</span>,<span class="number">80.5</span>,<span class="number">90.5</span>&#125;,&#123;<span class="number">56.0</span>,<span class="number">55.0</span>,<span class="number">67.0</span>,<span class="number">88.0</span>&#125;,&#123;<span class="number">99.0</span>,<span class="number">78.0</span>,<span class="number">78.8</span>,<span class="number">79.8</span>&#125;,&#123;<span class="number">56</span>,<span class="number">78</span>,<span class="number">77</span>,<span class="number">90</span>&#125;&#125;;</span><br><span class="line"><span class="function"><span class="keyword">double</span> *<span class="title">search</span><span class="params">(<span class="keyword">double</span>(*pointer)[<span class="number">4</span>],<span class="keyword">int</span> n)</span></span>;  <span class="comment">//指针函数声明，返回指向double型的指针 </span></span><br><span class="line"><span class="keyword">double</span> *p;</span><br><span class="line"><span class="keyword">int</span> i,m;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Please enter the number of Studnet:&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;m);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;The scores of NO.%d are:\n&quot;</span>,m);</span><br><span class="line">p=search(score,m);  <span class="comment">//把地址赋给p </span></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%5.2f\t&quot;</span>,*(p+i));  <span class="comment">//打印 </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n\n\n&quot;</span>); </span><br><span class="line">&#125; </span><br><span class="line"><span class="function"><span class="keyword">double</span> *<span class="title">search</span><span class="params">(<span class="keyword">double</span> (*pointer)[<span class="number">4</span>],<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">double</span> *p;</span><br><span class="line">p=*(pointer+n);  <span class="comment">//序号加行数的索引 </span></span><br><span class="line"><span class="keyword">return</span> p;  <span class="comment">//返回地址 </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">Please enter the number of Studnet:1</span></span><br><span class="line"><span class="comment">The scores of NO.1 are:</span></span><br><span class="line"><span class="comment">56.00   55.00   67.00   88.00</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><ul><li>指针函数和函数指针的区别</li><li>指针函数是带指针的函数，其本质是一个函数</li><li>函数指针是指向函数的指针变量，因而函数指针本身首先应是指针变量，只不过该指针变量指向函数。</li></ul><h2 id="指针数组"><a href="#指针数组" class="headerlink" title="指针数组"></a>指针数组</h2><p>一个数组，若其元素均为指针类型的数据，称为指针数组，也就是说，指针数组中的每一个元素都相当于一个指针变量。<br>一维数组的定义形式为：</p><pre><code>    类型名 数组名[数组长度]    int *name[4];</code></pre><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt; </span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">5</span>]=&#123;<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">9</span>&#125;;<span class="comment">//整型数组</span></span><br><span class="line"><span class="comment">//指针数组，5个指针指向a数组的对应元素 </span></span><br><span class="line"><span class="keyword">int</span> *name[<span class="number">5</span>]=&#123;&amp;a[<span class="number">0</span>],&amp;a[<span class="number">1</span>],&amp;a[<span class="number">2</span>],&amp;a[<span class="number">3</span>],&amp;a[<span class="number">4</span>]&#125;;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d  &quot;</span>,*name[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">1  3  5  7  9</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">将下边字符串按字符顺序(由小到大)输出</span></span><br><span class="line"><span class="comment">char *name[]=&#123;&quot;Fishc.com&quot;,&quot;www.fishc.com&quot;,&quot;home.fishc.com&quot;,&quot;Fishc.com/dz&quot;&#125;; </span></span><br><span class="line"><span class="comment">我们可以声明一个数组指针来指向；</span></span><br><span class="line"><span class="comment">将排序利用strcmp()函数来解决</span></span><br><span class="line"><span class="comment">各个功能抽象为函数或文件 </span></span><br><span class="line"><span class="comment">*/</span> </span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt; </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">sort</span><span class="params">(<span class="keyword">char</span> *name[],<span class="keyword">int</span> n)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">(<span class="keyword">char</span> *name[],<span class="keyword">int</span> n)</span></span>;</span><br><span class="line"><span class="keyword">char</span> *name[]=&#123;<span class="string">&quot;Fishc.com&quot;</span>,<span class="string">&quot;www.fishc.com&quot;</span>,<span class="string">&quot;home.fishc.com&quot;</span>,<span class="string">&quot;Fishc.com/dz&quot;</span>&#125;; </span><br><span class="line"><span class="keyword">int</span> n=<span class="number">4</span>;</span><br><span class="line">sort(name,n);</span><br><span class="line">print(name,n);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">sort</span><span class="params">(<span class="keyword">char</span> *name[],<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> *t;</span><br><span class="line"><span class="keyword">int</span> i,j,k;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n<span class="number">-1</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">k=i;</span><br><span class="line"><span class="keyword">for</span>(j=i+<span class="number">1</span>;j&lt;n;j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">strcmp</span>(name[k],name[j])&gt;<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">k=j;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(k!=i)</span><br><span class="line">&#123;</span><br><span class="line">t=name[i];</span><br><span class="line">name[i]=name[k];</span><br><span class="line">name[k]=t;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">(<span class="keyword">char</span> *name[],<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>,name[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">Fishc.com</span></span><br><span class="line"><span class="comment">Fishc.com/dz</span></span><br><span class="line"><span class="comment">home.fishc.com</span></span><br><span class="line"><span class="comment">www.fishc.com</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><p>字符在内存中存放形式:<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/10/60c4d36002b6af45500021b0cf3129e7.png"><br>可以声明数组指针：<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/10/e67f6074740f9eec435d31b12221b8cf.png"></p><h2 id="指向指针的指针"><a href="#指向指针的指针" class="headerlink" title="指向指针的指针"></a>指向指针的指针</h2><pre><code>    char **p;</code></pre><p>p的前面有两个<em>号。</em>运算符的结合性是<code>从右到左</code>，因此*<em>p相当于</em>(<em>p),显然</em>p是指针变量的定义形式。如果没有最前面的<em>，那就是定义了一个指向字符数据的指针变量。现在它前面又有一个</em>号，表示<code>指针变量p是指向一个字符指针变量的。*p就是p所指向的另一个指针变量</code>。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> *name[]=&#123;<span class="string">&quot;I Love China&quot;</span>,<span class="string">&quot;Lzyblog&quot;</span>,<span class="string">&quot;github&quot;</span>,<span class="string">&quot;Very Good!&quot;</span>&#125;;<span class="comment">//指针数组每一个指针指向了字符串的首地址 </span></span><br><span class="line"><span class="keyword">char</span> **p; <span class="comment">//指向指针的指针 </span></span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">p=name+i; <span class="comment">//指向下一个元素，即下一个字符串 </span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>,*p);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">I Love China</span></span><br><span class="line"><span class="comment">Lzyblog</span></span><br><span class="line"><span class="comment">github</span></span><br><span class="line"><span class="comment">Very Good!</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h2 id="指针数组作main函数的形参"><a href="#指针数组作main函数的形参" class="headerlink" title="指针数组作main函数的形参"></a>指针数组作main函数的形参</h2><p>指针数组的一个重要应用是<code>作为main函数的形参</code>。</p><pre><code>    int main() //一般形式    int main(int agrc,char *argv[]); //main函数带参数</code></pre><p>main函数是由<code>操作系统</code>调用的，那么main函数形参的值不可能是在程序中得到的，而是和命令一起给出的。也就是在一个命令行中包括<code>命令名</code>和<code>需要传给main函数的参数</code>。</p><p>命令行的一般形式为:</p><pre><code>    命令名 参数1 参数2...参数n</code></pre><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc,<span class="keyword">char</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;the number of string is:%d\n&quot;</span>,argc<span class="number">-1</span>);</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;argc;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;the string %d is:%s\n&quot;</span>,i,argv[i]);</span><br><span class="line"> &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>找到运行后形成的.exe文件<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/10/5ccb7555bdacc776487665fdd0ceb61d.png"><br>打开DOS命令行:<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/10/a3f91c0630712c2f61490b72f7e3b859.png"></p><h2 id="指针总结"><a href="#指针总结" class="headerlink" title="指针总结"></a>指针总结</h2><ul><li>指针数据类型总结</li></ul><table><thead><tr><th align="center"><strong>定义</strong></th><th align="center"><strong>含义</strong></th></tr></thead><tbody><tr><td align="center">int i;</td><td align="center"><strong>定义整型变量</strong></td></tr><tr><td align="center">int *p;</td><td align="center"><strong>p为指向整型数据的指针变量</strong></td></tr><tr><td align="center">int a[n];</td><td align="center"><strong>定义整型数组a，它有n个元素</strong></td></tr><tr><td align="center">int *p[n];</td><td align="center"><strong>定义指针数组p，它由n个指向整型数据的指针元素组成</strong></td></tr><tr><td align="center">int (*p)[n];</td><td align="center"><strong>p为指向含n个元素的一维数组的指针变量</strong></td></tr><tr><td align="center">int f();</td><td align="center"><strong>f为带回整型函数值的函数</strong></td></tr><tr><td align="center">int *p();</td><td align="center"><strong>p为带回一个指针的函数，该指针指向整型数据</strong></td></tr><tr><td align="center">int (*p)();</td><td align="center"><strong>p为指向函数的指针，该函数返回一个整型值</strong></td></tr><tr><td align="center">int **p;</td><td align="center"><strong>p是一个指针变量，它指向一个指向整型数据的指针变量</strong></td></tr></tbody></table><ul><li>指针运算小结</li></ul><p><strong>①指针变量加(减)一duh个整数</strong><br>例如:p++、p–、p+i、p-i、p+=i、p-=i等。</p><p><strong>②指针变量赋值</strong><br>将一个变量地址赋给一个指针变量，如:</p><pre><code>    p=&amp;a;        //将变量a的地址赋给p    p=array;     //将数组array首元素地址赋给p    p=&amp;array[i]; //将数组array第i个元素的地址赋给p    p=max;    //max为已定义的函数，将max的入口地址赋给p    p1=p2;      //p1和p2都是指针变量，将p2的值赋给p1</code></pre><p><strong>③指针变量可以有空值，即该指针变量不指向任何变量，可以这样表示:</strong></p><pre><code>    p=NULL;</code></pre><p><strong>④两个指针变量可以相减。</strong><br>如果两个指针变量都指向一个数组中的元素，则两个指针变量值之差是两个指针之间的元素个数。</p><p><strong>⑤两个指针变量比较</strong><br>若两个指针指向同一个数组的元素，则可以进行比较。指向前面的元素的指针变量”小于”指向后面元素的指针变量。</p><h2 id="关于void类型"><a href="#关于void类型" class="headerlink" title="关于void类型"></a>关于void类型</h2><p>void真正发挥的作用在于：</p><ul><li><p>对函数返回的确定</p></li><li><p>对函数参数的限定</p><pre><code>  void abc(void);</code></pre></li><li><p>void指针和const指针<br>ANSI C新标准增加了一种”void”指针类型，即不指定它是指向哪一种类型数据的指针变量。</p></li></ul><pre><code>    void *p;</code></pre><p>表示指针变量p不指向一个确定的类型数据，它的作用仅仅是用来<code>存放一个地址</code>。<br>void指针它可以指向<code>任何类型数据</code>。也就是说，可以用任何类型的指针直接给void指针赋值.但是，如果需要将void指针的值赋给其他类型的指针，则需要进行强制类型转换。</p><p><code>Const作用</code>:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//const放前面使变量常量化，使其不能改变，每一个字符都是const变量</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span> *str=<span class="string">&quot;I Love China!&quot;</span>;</span><br><span class="line"><span class="comment">//声明一个名为str的指针变量</span></span><br><span class="line"><span class="comment">//它指向一个字符型常量，初始化str为指向字符串</span></span><br><span class="line"><span class="comment">//I Love China! </span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n\n%s&quot;</span>,str); </span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span>(1) </span></span><br><span class="line">str[<span class="number">0</span>]=<span class="string">&#x27;L&#x27;</span>;  <span class="comment">//这条语句是错的，但可以改变str指针的值 </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">str=<span class="string">&quot;I Love MyCountry!\n\n&quot;</span>; <span class="comment">//合法！ </span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n\n%s&quot;</span>,str); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> *<span class="keyword">const</span> str=<span class="string">&quot;I Love China!&quot;</span>;</span><br><span class="line"><span class="comment">//常量指针是一个固定的指针，不可以改变它的值，但它所指的数据可以改变 </span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n\n%s&quot;</span>,str); </span><br><span class="line">str[<span class="number">0</span>]=<span class="string">&#x27;I&#x27;</span>;  <span class="comment">//合法！ </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span>(0) </span></span><br><span class="line">str=<span class="string">&quot;I Love MyCountry!\n\n&quot;</span>; <span class="comment">//非法！ </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n\n%s&quot;</span>,str); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> *<span class="keyword">const</span> str=<span class="string">&quot;I Love China!&quot;</span>;</span><br><span class="line"><span class="comment">//常量指针是一个固定的指针，不可以改变它的值，但它所指的数据可以改变 </span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n\n%s&quot;</span>,str); </span><br><span class="line">str[<span class="number">0</span>]=<span class="string">&#x27;I&#x27;</span>;  <span class="comment">//非法！ </span></span><br><span class="line"></span><br><span class="line">str=<span class="string">&quot;I Love MyCountry!\n\n&quot;</span>; <span class="comment">//非法！ </span></span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n\n%s&quot;</span>,str); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>扩展知识点<br>hmemcpy() //万能断点<br>memcpy()</p><pre><code>  void *memcpy()(void *dest,const void *src,size_t count);</code></pre></li></ul><h1 id="预处理"><a href="#预处理" class="headerlink" title="预处理"></a>预处理</h1><p>预处理命令如包含命令#include&lt;stdio.h&gt;,宏定义命令#define PI 3.1415926等。<br>在源程序中这些命令都放在函数之外，而且一般都放在源文件的前面，它们称为预处理部分。</p><h2 id="define"><a href="#define" class="headerlink" title="define"></a>define</h2><ul><li>无参宏定义</li></ul><p>无参宏的宏名后不带参数。<br>其定义的一般形式为：</p><pre><code>    #define 标识符 字符串    #define PI 3.1415926   //不带分号，它的作用是用PI代替3.1415926</code></pre><p>其中的“#”表示这是一条预处理命令。。<br>凡是以“#”开头的均为<code>预处理命令</code>。<br><code>define</code>为宏定义命令。”标识符”为所定义的宏名。”字符串”可以是常数、表达式、格式串等。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PI 3.1415926</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">double</span> s;</span><br><span class="line"><span class="keyword">int</span> r;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Please enter the radius:&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;r);</span><br><span class="line">s=PI*r*r;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%g\n\n&quot;</span>,s);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>宏定义是用宏名表示一个字符串，只是一种简单的代换，字符串中可以含任何字符，可以是常数，也可以是表达式。</li><li>宏定义不是说明或语句，在行末<code>不必加分红</code>，如加上分号则连分号也一起置换。</li><li>宏定义必须写在函数之外，其作用域为宏定义命令起到源程序结束。如要终止其作用域可使用<code>#undef</code>命令，例#undef PI。</li><li>宏名在源程序中若用引号括起来，则预处理程序不对其作宏代换。</li><li>宏定义允许嵌套，在宏定义的字符串中可以使用已经定义的宏名。在宏展开时由预处理程序层层代换。</li><li>习惯上宏名用大写字母表示，以便于于变量区别。但也允许用小写字母。</li><li>也可以用宏定义表示数据类型，使书法方便。</li></ul><pre><code>    #define INTEGER1 int    typedef INTEGER2 int;</code></pre><ul><li>宏定义和typedef定义的区别</li></ul><p>宏定义只是简单的字符串代换，是在<code>预处理</code>完成的。<br><code>typedef</code>是在<code>编译时</code>处理的，它不是作简单的代换，而是对类型说明符<code>重新命名</code>。被命名的标识符<code>具有类型定义说明的功能</code>,且后面带分号。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> P1N1 char*</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">char</span>* P1N2;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">P1N1 x,y; <span class="comment">//替换后变成: char *x,y;  //x为指针变量，y为字符型 </span></span><br><span class="line">P1N2 a,b; <span class="comment">//替换后变成: char *a,*b; //a和b都为指针类型，占4个字节 </span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;By #define : %d %d\n\n&quot;</span>,<span class="keyword">sizeof</span>(x),<span class="keyword">sizeof</span>(y)) ;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;By typedef : %d %d\n\n&quot;</span>,<span class="keyword">sizeof</span>(a),<span class="keyword">sizeof</span>(b)) ;</span><br><span class="line"> &#125; </span><br><span class="line"> <span class="comment">/*</span></span><br><span class="line"><span class="comment">By #define : 8 1</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">By typedef : 8 8</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure><blockquote><p>指针的长度跟CPU的位数相等，大部分CPU都是32位，所以指针的长度是32bit，也就是4个字节。(任何指针长度都是4个字节，不管是什么指针)</p></blockquote><ul><li>带参宏定义</li></ul><p>C语言允许带有参数。在宏定义中的参数称为形式参数，在宏调用中的参数称为实际参数。<br>对带参数的宏，在调用中，不仅要宏展开，而且要用实参去代换形参。<br>带参宏定义的一般形式为：</p><pre><code>    #define 宏名(形参表) 字符串</code></pre><p>带参宏调用的一般形式为：宏名(实参表);</p><pre><code>    #define M(y) y*y+3*y  //宏定义    ...    k=M(5);     //宏调用    ...</code></pre><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX(a,b) (a&gt;b)?a:b</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">char</span>* P1N2;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> x,y,max;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Input two numbers: &quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>,&amp;x,&amp;y);</span><br><span class="line">max=MAX(x,y);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;The Max is %d\n&quot;</span>,max);</span><br><span class="line"> &#125; </span><br><span class="line"> <span class="comment">/*</span></span><br><span class="line"><span class="comment">Input two numbers: 3 9</span></span><br><span class="line"><span class="comment">The Max is 9</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure><ul><li><p>带参宏定义中，宏名和形参表之间不能用空格重新。</p></li><li><p>在带参宏定义中，形式参数不分配内存单元，因此不必作类型定义。而宏调用中的实参有具体的值。要用它的去代换形参，因此必须作类型说明。这用函数的实参与形参传递不同，在函数中，形参和实参是两个不同的量，各有自己的作用域，调用时要把实参值赋予形参，进行“值传递”。而在带参宏中，<code>只是符号代换，不存在值传递的问题</code>。</p></li><li><p>在宏定义中的形参是标识符，而宏调用中的实参可以是表达式。</p><pre><code>  #define ADD(y) (y)  SAY(a+b+c);</code></pre></li><li><p>在宏定义中，字符串内的形参通常要用括号括起来以避免出错。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="comment">//#define SQ(y) (y)*(y)  //不加括号,160/(a+1)*(a+1)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SQ(y) ((y)*(y))<span class="comment">//加了括号,160/((a+1)*(a+1))</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a,sq;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;input a number: &quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a);</span><br><span class="line">sq=<span class="number">160</span>/SQ(a+<span class="number">1</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;sq = %d\n&quot;</span>,sq);</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="comment">/*</span></span><br><span class="line"><span class="comment">input a number: 3</span></span><br><span class="line"><span class="comment">sq = 10</span></span><br><span class="line"><span class="comment">input a number: 3</span></span><br><span class="line"><span class="comment">sq = 160</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="include"><a href="#include" class="headerlink" title="include"></a>include</h2><ul><li><p>一个include命令只能指定一个被包含文件，若有多个文件要包含，则需要用多个include命令。</p></li><li><p>文件包含允许被嵌套，即在一个被包含的文件中又可以包含另一个文件。</p></li><li><p>包含命令中的文件名可以用双引号括起来，也可以用尖括号括起来。</p><pre><code>  #include“stdio.h”  #include&lt;math.h&gt;</code></pre></li><li><p>使用尖括号表示在包含文件目录中去查找(包含目录是由用户在设置环境时设置的)，而不在源文件目录去查找。</p></li><li><p>使用双引号则表示首先在当前的源文件目录中查找，若未找到才到包含目录中去查找。用户编程时可根据自己文件所在的目录来选择某一种命令形式。</p></li></ul><h2 id="条件编译"><a href="#条件编译" class="headerlink" title="条件编译"></a>条件编译</h2><table><thead><tr><th align="center">条件编译指令</th><th>说明</th></tr></thead><tbody><tr><td align="center"><strong>#if</strong></td><td>如果条件为真，则执行相应操作</td></tr><tr><td align="center"><strong>#elif</strong></td><td>如果前面条件为假，而该条件为真，则执行相应操作</td></tr><tr><td align="center"><strong>#else</strong></td><td>如果前面条件均为假，则执行相应操作</td></tr><tr><td align="center"><strong>#endif</strong></td><td>结束相应的条件编译指令</td></tr><tr><td align="center"><strong>#ifdef</strong></td><td>如果该宏已定义，则执行相应操作</td></tr><tr><td align="center"><strong>#ifndef</strong></td><td>如果该宏没有定义，则执行相应操作</td></tr></tbody></table><ul><li>预处例程序提供了条件编译的功能。可以按不同的条件去编译不同的程序部分，因而产生不同的目标代码文件。这对于程序的移植和调试是很有用的。</li><li>条件编译由三种规则：</li></ul><p><strong>①第一种形式:</strong></p><pre><code>    #ifdef 标识符        程序段1    #else        程序段2    #endif</code></pre><p>它的功能是，如果标识符已被#define命令定义过则对程序段1进行编译；否则对程序段2进行编译。<br>如果没有程序段2(它为空),本格式中的#else可以没有,即可以写为:</p><pre><code>    #ifdef 标识符        程序段    #endif</code></pre><p><strong>③第二种形式:</strong></p><pre><code>    #ifndef 标识符        程序段1    #else        程序段2    #endif</code></pre><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> CORRECT <span class="meta-string">&quot;China&quot;</span> </span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> str[<span class="number">50</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">cmp</span><span class="params">(<span class="keyword">char</span> *str1,<span class="keyword">char</span> *str2)</span></span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Please enter your country : &quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,str);</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> CORRECT     <span class="comment">//如果没有宏定义 </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> CORRECT <span class="meta-string">&quot;China&quot;</span>  <span class="comment">//则宏定义 </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(cmp(str,CORRECT)==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\nYeah! You are Chinese!&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\nYou are not Chinese!&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">cmp</span><span class="params">(<span class="keyword">char</span> *str1,<span class="keyword">char</span> *str2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i=<span class="number">0</span>,j=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(str1[i])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span>(str2[j]==str1[i])</span><br><span class="line">&#123;</span><br><span class="line">i++;</span><br><span class="line">j++;</span><br><span class="line"><span class="keyword">if</span>(!str2[j])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">j=<span class="number">0</span>;</span><br><span class="line">i++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line"> &#125; </span><br><span class="line"> <span class="comment">/*</span></span><br><span class="line"><span class="comment">Please enter your country : China</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">Yeah! You are Chinese!</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure><p> <strong>③第三种形式:</strong></p><pre><code>     #if 常量表达式         程序段1     #else         程序段2     #endif</code></pre><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="comment">//相当与开关，确定求圆还是正方形的面积 </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ROUND 1  <span class="comment">//1为真 指求园的面积，0为假，求正方形的面积 </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PI 3.1415926  <span class="comment">//圆周率 </span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> r;</span><br><span class="line"><span class="keyword">double</span> s;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;input a number: &quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;r);</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> ROUND</span></span><br><span class="line">s=r*r*PI;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Area of round if:%6.5f\n\n&quot;</span>,s);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line">s=r*r;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Area of spuare if:%6.5f\n\n&quot;</span>,s);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">input a number: 3</span></span><br><span class="line"><span class="comment">Area of round if:28.27433</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
          <category> C </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C语言⭐函数</title>
      <link href="2021/01/15/%E5%90%8E%E7%AB%AF/C%E8%AF%AD%E8%A8%80/C%E8%AF%AD%E8%A8%80_%E5%87%BD%E6%95%B0/"/>
      <url>2021/01/15/%E5%90%8E%E7%AB%AF/C%E8%AF%AD%E8%A8%80/C%E8%AF%AD%E8%A8%80_%E5%87%BD%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h1><ul><li>无参函数<pre><code>  类型名 函数名()  &#123;      //函数体包括声明部分和语句部分  &#125;</code></pre></li><li>有参函数<pre><code>  类型名 函数名(形式参数列表)  &#123;      //函数体  &#125;</code></pre><h2 id="虚实结合"><a href="#虚实结合" class="headerlink" title="虚实结合"></a>虚实结合</h2><pre><code>  int max(int x,int y); //x，y为形参  int a=1,b=2,m;  m=max(1,2);   //a,b为实参</code></pre>形参并不占内存中的存储单元，当被调用时，临时分配内存单元。<br>实参向形参的数据传递是”值传递’，单向传递，形参不能传给实参，因为他们具有不同的存储单元。</li></ul><h2 id="返回值"><a href="#返回值" class="headerlink" title="返回值"></a>返回值</h2><p>函数的返回值是通过return语句获得的。<br>函数类型决定返回值的类型。</p><pre><code>    int max(int x,int y)    &#123;    return(x&gt;y?x:y);    &#125;</code></pre><p>对于不带返回值，可以定义函数为void，定义后不允许出现return语句。</p><h2 id="函数声明"><a href="#函数声明" class="headerlink" title="函数声明"></a>函数声明</h2><p>用户自定义函数，需要在主调函数中对被调函数做<code>声明</code>。其作用是把函数的具体信息(函数名、函数参数个数，参数类型等)通知给编译系统。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>; <span class="comment">//函数声明 ，可以不带参数名</span></span><br><span class="line">...</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> x+y;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="函数的递归调用"><a href="#函数的递归调用" class="headerlink" title="函数的递归调用"></a>函数的递归调用</h2><ul><li><p>函数不可以嵌套定义，但可以嵌套调用。</p></li><li><p>当调用一个函数的过程中又出现直接或间接地调用该函数本身，称为函数的递归调用。</p></li><li><p>通过使用if语句来终止无止尽的递归。</p></li><li><p>一个递归的问题可以分为”回溯”和”递推”两部分。</p></li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//使用递归的方法求n！</span></span><br><span class="line"><span class="comment">//当n=0,1时，n!=1; 当n&gt;1时，n!=n*(n-1)!</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">fac</span><span class="params">(<span class="keyword">int</span> n)</span></span>;  <span class="comment">//函数声明</span></span><br><span class="line"><span class="keyword">int</span> n,y;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;input an integer number&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">y=fac(n);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d!=%d\n&quot;</span>,n,y);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">fac</span><span class="params">(<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> f;</span><br><span class="line"><span class="keyword">if</span>(n&lt;<span class="number">0</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;n&lt;0,data error!&quot;</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(n==<span class="number">0</span>||n==<span class="number">1</span>)</span><br><span class="line">f=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">f=fac(n<span class="number">-1</span>)*n;  <span class="comment">//n&gt;1时，n!=n*(n-1)</span></span><br><span class="line"><span class="keyword">return</span> f;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*Hanoi(汉诺问题)</span></span><br><span class="line"><span class="comment">古代有一个梵塔，塔内有3个座A，B，C，开始时A座上有64个盘子，盘子大小不等，大的在下，小的在上。有一个老和尚想把这64个盘子从A座移到C座，但规定每次只能移动一个盘，且在移动过程中在3个座上始终保存大盘在下，小盘在上。在移动过程中可以利用B座。要求编程序输出移动盘子的过程。</span></span><br><span class="line"><span class="comment">解题思路：</span></span><br><span class="line"><span class="comment">①老和尚1命令第2个和尚将63个盘子从A移到B。</span></span><br><span class="line"><span class="comment">②自己将1一个盘子（最底下的、最大的盘子）从A移到C。</span></span><br><span class="line"><span class="comment">③再命令第2个和尚将63个盘子从B移到C。</span></span><br><span class="line"><span class="comment">第2个和尚依次递归。</span></span><br><span class="line"><span class="comment">例如先分析将A座上3个盘子移到C座：</span></span><br><span class="line"><span class="comment">①将A座上2个盘子移到B座（借助C）。 A-&gt;C,A-&gt;C,C-&gt;B</span></span><br><span class="line"><span class="comment">②将A座上1个盘子移到C座。A-&gt;C</span></span><br><span class="line"><span class="comment">③将B座上2个盘子移到C座上（借助A）。B-&gt;A  B-&gt;C,A-&gt;C</span></span><br><span class="line"><span class="comment">分析可知：</span></span><br><span class="line"><span class="comment">移动n个盘子要经历(2^n-1)步，3个盘子要7步。</span></span><br><span class="line"><span class="comment">①将A座上n-1个盘子移到B座（借助C）。 A-&gt;C,A-&gt;C,C-&gt;B</span></span><br><span class="line"><span class="comment">②将A座上1个盘子移到C座。A-&gt;C</span></span><br><span class="line"><span class="comment">③将B座上n-1个盘子移到C座上（借助A）。B-&gt;A  B-&gt;C,A-&gt;C</span></span><br><span class="line"><span class="comment">①③步都是n-1个盘子从一个座移到另一个座上。</span></span><br><span class="line"><span class="comment">因此，可以分解成两类操作：</span></span><br><span class="line"><span class="comment">（1）将n-1个盘子从一个座移到另一个座上(n&gt;1)。这就是大和尚让小和尚做的工作</span></span><br><span class="line"><span class="comment">（2）将1个盘子从一个座移到另一座上。这是大和尚自己做的工作。</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">编程思路：</span></span><br><span class="line"><span class="comment">分别用两个函数实现以上两类操作，用hanoi函数实现上面第1类操作（即模拟小和尚的认为），用move函数实现第2类操作（模拟大和尚的任务）。</span></span><br><span class="line"><span class="comment">函数调用hanoi(n,one,two,three)表示将n个盘子从”one“移到”three“座的过程（借助”two“）。</span></span><br><span class="line"><span class="comment">函数调用move(x,y)表示将1个盘子从x座移到y座的过程。x,y代表A,B,C座之一。</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">hanoi</span><span class="params">(<span class="keyword">int</span> n,<span class="keyword">char</span> one,<span class="keyword">char</span> two,<span class="keyword">char</span> three)</span></span>; <span class="comment">//对hanoi函数的声明</span></span><br><span class="line"><span class="keyword">int</span> m;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;input the number of diskes:&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;m);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;The step to move %d diskes:\n&quot;</span>,m);</span><br><span class="line">hanoi(m,<span class="string">&#x27;A&#x27;</span>,<span class="string">&#x27;B&#x27;</span>,<span class="string">&#x27;C&#x27;</span>); </span><br><span class="line">&#125; </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">hanoi</span><span class="params">(<span class="keyword">int</span> n,<span class="keyword">char</span> one,<span class="keyword">char</span> two,<span class="keyword">char</span> three)</span></span></span><br><span class="line"><span class="function"></span>&#123;  <span class="comment">//将n个盘从one座借助two座，移到three座</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">move</span><span class="params">(<span class="keyword">char</span> x,<span class="keyword">char</span> y)</span></span>;  <span class="comment">//对move函数的声明，因为主函数不需要调用，所以可以在函数内声明</span></span><br><span class="line"><span class="keyword">if</span>(n==<span class="number">1</span>)</span><br><span class="line">move(one,three); </span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">hanoi(n<span class="number">-1</span>,one,three,two);</span><br><span class="line">move(one,three);</span><br><span class="line">hanoi(n<span class="number">-1</span>,two,one,three);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">move</span><span class="params">(<span class="keyword">char</span> x,<span class="keyword">char</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%c-&gt;%c\n&quot;</span>,x,y);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">input the number of diskes:3</span></span><br><span class="line"><span class="comment">The step to move 3 diskes:</span></span><br><span class="line"><span class="comment">A-&gt;C</span></span><br><span class="line"><span class="comment">A-&gt;B</span></span><br><span class="line"><span class="comment">C-&gt;B</span></span><br><span class="line"><span class="comment">A-&gt;C</span></span><br><span class="line"><span class="comment">B-&gt;A</span></span><br><span class="line"><span class="comment">B-&gt;C</span></span><br><span class="line"><span class="comment">A-&gt;C</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h2 id="数组作为函数参数"><a href="#数组作为函数参数" class="headerlink" title="数组作为函数参数"></a>数组作为函数参数</h2><ul><li><p>数组元素可以作为函数实参，不能用作形参。(因为形参是函数被调用时临时分配内存，不可能为单个数组元素分配存储单元，数组都是连续存放的）</p></li><li><p>数组名可以作为函数实参或者形参。注意，数组名做实参时，向形参传递的是数组元素<code>首地址</code>。</p></li><li><p>当形参数组名获得了实参数组的首地址后，它们共占同一存储单元，具有相同的值。</p></li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//选择排序:对数组中10个整数由小到大排序 </span></span><br><span class="line"><span class="comment">//每一轮找出未经排序的数中最小的一个</span></span><br><span class="line"><span class="comment">//由于形参数组已经使用选择符排序了，形参数组改变实参数组也随之改变了</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">sort</span><span class="params">(<span class="keyword">int</span> <span class="built_in">array</span>[],<span class="keyword">int</span> n)</span></span>; <span class="comment">//函数声明</span></span><br><span class="line"><span class="keyword">int</span> a[<span class="number">10</span>],i;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;enter array:\n&quot;</span>);</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class="line">sort(a,<span class="number">10</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;The sorted array:\n&quot;</span>);</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\t&quot;</span>,a[i]);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>); </span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125; </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">sort</span><span class="params">(<span class="keyword">int</span> <span class="built_in">array</span>[],<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i,j,k,t;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n<span class="number">-1</span>;i++)&#123;</span><br><span class="line">k=i;</span><br><span class="line"><span class="keyword">for</span>(j=i+<span class="number">1</span>;j&lt;n;j++)</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">array</span>[j]&lt;<span class="built_in">array</span>[k])</span><br><span class="line">k=j;</span><br><span class="line">t=<span class="built_in">array</span>[k];</span><br><span class="line"><span class="built_in">array</span>[k]=<span class="built_in">array</span>[i];</span><br><span class="line"><span class="built_in">array</span>[i]=t;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="局部变量和全局变量"><a href="#局部变量和全局变量" class="headerlink" title="局部变量和全局变量"></a>局部变量和全局变量</h2><ul><li><p>在一个函数内定义的变量是<code>局部变量</code>，只在本函数范围内有效。</p></li><li><p>在函数外定义的变量是<code>全局变量</code>，可以为本文件中其他函数所共用。</p></li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="keyword">int</span> a=<span class="number">3</span>,b=<span class="number">5</span>;  <span class="comment">//全局变量</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">max</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>; <span class="comment">//函数声明</span></span><br><span class="line"><span class="keyword">int</span> a=<span class="number">8</span>;            <span class="comment">//局部变量</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;max=%d\n&quot;</span>,max(a,b));</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">max</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;  <span class="comment">//形参a,b的作用范围</span></span><br><span class="line"><span class="keyword">int</span> c;</span><br><span class="line">c=a&gt;b?a:b;</span><br><span class="line"><span class="keyword">return</span> c;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 运行结果：max=8</span></span><br><span class="line">为什么结果为<span class="number">8</span>呢？</span><br><span class="line">因为全局变量a被局部变量a屏蔽了，相当于全局变量a在<span class="number">6</span>~<span class="number">8</span>行不存在，所以函数max是比较<span class="number">8</span>和<span class="number">5</span>的大小。</span><br></pre></td></tr></table></figure><blockquote><p>全局变量在程序的全部执行过程中都占用存储单元。</p></blockquote><h2 id="变量的存储方式和生存期"><a href="#变量的存储方式和生存期" class="headerlink" title="变量的存储方式和生存期"></a>变量的存储方式和生存期</h2><p>从变量的作用域来看，变量可以分<code>全局变量</code>和<code>局部变量</code>。<br>从变量生存期来看，变量的存储可以分<code>静态存储方式</code>和<code>动态存储方式</code>。</p><ul><li>静态存储方式：指在程序运行期间由系统分配固定的存储空间的方式。</li><li>动态存储方式：指在程序运行期间根据需要进行动态的分配存储空间的方式。</li></ul><p>内存中共用户使用的存储空间分3部分：<br>①程序区<br>②静态存储区<br>③动态存储区<br>数据分别存放在静态存储区和动态存储区中，全局变量全部存放在静态存储区中，在程序开始执行时给全局变量分配存储区，程序执行完毕后释放，在执行过程中占据固定的存储空间。<br>在动态存储区中存放以下数据：<br>①函数形式参数<br>②函数中没有用关键字static声明的变量，即自动变量<br>③函数调用时的现场保护和返回地址等</p><h2 id="存储类别"><a href="#存储类别" class="headerlink" title="存储类别"></a>存储类别</h2><p>每一个变量和函数都有两个属性：数据类型和数据的存储类别（如静态存储和动态存储）。<br>C的存储类别包括4种：自动的(auto)、静态的(static)、寄存器的(register)、外部的(extern)。</p><ul><li>自动变量auto<br>自动变量动态分配存储空间，属于动态存储类别，数据存储在动态存储区中，函数调用结束后即释放，函数中的形参和定义的局部变量都属于此类。</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">f</span><span class="params">(<span class="keyword">int</span> a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">auto</span> <span class="keyword">int</span> b,c=<span class="number">3</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//其中a是形参，b和c是自动变量，对c赋初值3，执行完f函数后，自动释放a,b,c所占的内存单元</span></span><br></pre></td></tr></table></figure><blockquote><p>实际上关键字”auto“可以省略，不写auto则隐含指定为”自动存储类别“。</p></blockquote><ul><li><p>静态局部变量static<br>静态局部变量属于静态存储类别，在静态存储区内分配存储单元，在程序整个运行期间都不释放。</p><blockquote><p>对静态局部变量是在编译时赋初值的，即只赋值一次，以后每次调用函数时不用重新赋值而是保留上次函数调用结束时结束的值。</p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//输出1到5的阶乘值</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">fac</span><span class="params">(<span class="keyword">int</span> n)</span></span>;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;=<span class="number">5</span>;i++)    <span class="comment">//先后5次调用fac函数</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d!=%d\n&quot;</span>,i,fac(i));</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">fac</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> f=<span class="number">1</span>;  <span class="comment">//f保留了上次调用结束的值</span></span><br><span class="line">f=f*n;  <span class="comment">//上次的f值的基础上再乘以n</span></span><br><span class="line"><span class="keyword">return</span> f;<span class="comment">//返回值f是n!的值</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">1！=1</span></span><br><span class="line"><span class="comment">2！=2</span></span><br><span class="line"><span class="comment">3！=6</span></span><br><span class="line"><span class="comment">4！=24</span></span><br><span class="line"><span class="comment">5！=120</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure></li><li><p>寄存器变量register<br>变量的值一般是存放在内存中的，当程序用到哪一个变量的值是，由控制器发出指令将内存中该变量的值送到运算器进行运算，如果需要存数，再从运算器将数据送到内存中。<br>如果有一些变量使用频繁，为提高效率，允许将局部变量的值放到<code>CPU中的寄存器</code>中，这种变量叫寄存器变量。</p><pre><code>  register int f;</code></pre></li></ul><h2 id="外部变量extern"><a href="#外部变量extern" class="headerlink" title="外部变量extern"></a>外部变量extern</h2><p>此类属于全局变量范围，全局变量作用域从<code>变量的定义处</code>开始，到本程序文件的末尾。并通过extern可以扩展变量的作用域。</p><ul><li>在一个文件内扩展外部变量的作用域<br>可以是把作用域扩展到<code>变量定义处之前</code>。</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio,h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">max</span><span class="params">()</span></span>;</span><br><span class="line"><span class="keyword">extern</span> <span class="keyword">int</span> A,B,C;   <span class="comment">//扩展外部变量的作用域，可以省略数据类型</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入3个整数:&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>,&amp;A,&amp;B,&amp;C);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;最大值:%d\n&quot;</span>,max());</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> A,B,C;     <span class="comment">//定义外部变量</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">max</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> m;</span><br><span class="line">m=A&gt;B?A:B;</span><br><span class="line"><span class="keyword">if</span>(C&gt;m)</span><br><span class="line">m=C;</span><br><span class="line"><span class="keyword">return</span> m;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>将外部变量的作用域扩展到其他文件<br>如果一个程序包括两个文件，两个文件都需要用到同一个外部变量Num，则可以在任一个文件中<code>定义外部变量</code>Num，在另一个文件中用<code>extern对Num做外部声明</code>，即”extern Num“。</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//file1.c</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="keyword">int</span> A;    <span class="comment">//定义外部变量</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">power</span><span class="params">(<span class="keyword">int</span>)</span></span>;<span class="comment">//函数声明</span></span><br><span class="line">....</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//file2.c</span></span><br><span class="line"><span class="keyword">extern</span> A;   <span class="comment">//作用域扩展</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">power</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>将外部变量的作用域限制在本文件中<br>static声明可以将外部变量只限于本文件引用。</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//file1.c</span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> A;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">...</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//file2.c</span></span><br><span class="line"><span class="keyword">extern</span> A;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fun</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">...<span class="comment">//运行出错</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="内部函数和外部函数"><a href="#内部函数和外部函数" class="headerlink" title="内部函数和外部函数"></a>内部函数和外部函数</h2><ul><li><p>内部函数<br>如果一个函数只能被本文件内其他函数所调用，则称为<code>内部函数</code>（静态函数）。</p><pre><code>  static 类型名 函数名（形参名）  static int fun(int a,intb);</code></pre></li><li><p>外部函数<br>如果定义函数时省略extern，则默认为外部函数。</p><pre><code>  extern int fun(int a,int b);</code></pre></li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//分别定义3个函数用来输入字符串、删除字符、输出字符串。分别放在3个文件中，main函数在另一文件中，由它来调用以上3个函数。</span></span><br><span class="line"><span class="comment">//file.c</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">extern</span> <span class="keyword">void</span> <span class="title">enter_string</span><span class="params">(<span class="keyword">char</span> str[])</span></span>;    <span class="comment">//对函数的声明</span></span><br><span class="line"><span class="function"><span class="keyword">extern</span> <span class="keyword">void</span> <span class="title">delete_string</span><span class="params">(<span class="keyword">char</span> str[],<span class="keyword">char</span> ch)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">extern</span> <span class="keyword">void</span> <span class="title">print_string</span><span class="params">(<span class="keyword">char</span> str[])</span></span>;</span><br><span class="line"><span class="keyword">char</span> c,str[<span class="number">80</span>];</span><br><span class="line">enter_string(str);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%c&quot;</span>,&amp;c);</span><br><span class="line">delete_string(str,c);</span><br><span class="line">printf_string(str);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//file2.c</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">enter_string</span><span class="params">(<span class="keyword">char</span> str[<span class="number">80</span>])</span>  <span class="comment">//定义外部函数</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">gets(str);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//file3.c</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">delete_string</span><span class="params">(<span class="keyword">char</span>[],<span class="keyword">char</span> ch)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i,j;</span><br><span class="line"><span class="keyword">for</span>(i=j=<span class="number">0</span>;str[i]!=<span class="string">&#x27;\0&#x27;</span>;i++)</span><br><span class="line"><span class="keyword">if</span>(str[i]!=ch)</span><br><span class="line">str[j++]=str[i];</span><br><span class="line">str[j]=<span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//file4.c</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print_string</span><span class="params">(<span class="keyword">char</span> str[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>,str);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>enter_string为函数原型，函数原型能够把函数的作用域扩展到定义该函数的文件之外（不需要extern),典型例子是#include指令的作用。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
          <category> C </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C语言⭐数组</title>
      <link href="2021/01/15/%E5%90%8E%E7%AB%AF/C%E8%AF%AD%E8%A8%80/C%E8%AF%AD%E8%A8%80_%E6%95%B0%E7%BB%84/"/>
      <url>2021/01/15/%E5%90%8E%E7%AB%AF/C%E8%AF%AD%E8%A8%80/C%E8%AF%AD%E8%A8%80_%E6%95%B0%E7%BB%84/</url>
      
        <content type="html"><![CDATA[<h1 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h1><p>数组用来描述一批具有<code>同名的同属性</code>的数据。</p><pre><code>    数据类型 数组名[常量表达式];    int arr[10];</code></pre><ul><li><p>数组是一组有序数据的集合。</p></li><li><p>用数组名和下标来唯一确定数组中的元素</p></li><li><p>数组的每一个元素都属于同一个数据类型。</p></li><li><p>数组下标是从0开始的是，数组长度是固定的。。</p></li><li><p>C语言不允许对数组的大小作动态定义，数组大小不依赖于程序运行过程中变量的值。</p></li><li><p>数组的存储形式。<br>以int arr[10]为例，经过声明定义后，在内存中划分一片存储空间，存放了一个有10个整型元素的数组(空间大小为<code>4*10=40字节</code>,int为4字节)。</p></li><li><p>一维数组初始化</p><pre><code>  int arr[10]=&#123;0,1,2,3,4,5,6,7,8,9&#125;;  int arr[]=&#123;1,3,2,4&#125;; //系统根据元素个数分配大小  int arr[10]=&#123;1,2,3&#125;; //其余数据初始化为0，如果是字符型数组初始化为&#39;\0&#39;,如果是指针型数组，初始化为NULL，即空指针。  int arr[10]=&#123;0&#125;;  //全为0数组</code></pre></li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i,arr[<span class="number">10</span>];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=<span class="number">9</span>;i++)</span><br><span class="line">arr[i]=i;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">9</span>;i&gt;=<span class="number">0</span>;i--) <span class="comment">//逆序输出，下标9~0</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,arr[i]);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="一维数组实例"><a href="#一维数组实例" class="headerlink" title="一维数组实例"></a>一维数组实例</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//处理Fibonacci数列问题</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">int</span> f[<span class="number">20</span>]=&#123;<span class="number">1</span>,<span class="number">1</span>&#125;; <span class="comment">//前两个赋值为1</span></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">2</span>;i&lt;<span class="number">20</span>;i++)&#123;</span><br><span class="line">f[i]=f[i<span class="number">-2</span>]+f[i<span class="number">-1</span>]; <span class="comment">//先后求f[2]~f[19]的值</span></span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">20</span>;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(i%<span class="number">5</span>==<span class="number">0</span>)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);  <span class="comment">//输出5个后换行</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%12d&quot;</span>,f[i]);  <span class="comment">//输出一个数，确定域宽</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">           1           1           2           3           5</span></span><br><span class="line"><span class="comment">           8          13          21          34          55</span></span><br><span class="line"><span class="comment">          89         144         233         377         610</span></span><br><span class="line"><span class="comment">         987        1597        2584        4181        6765</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//冒泡排序</span></span><br><span class="line"><span class="comment">//每次将相邻的两个数比较，将小的调到前头。</span></span><br><span class="line"><span class="comment">//如果有n个数，则要进行n-1趟比较</span></span><br><span class="line"><span class="comment">//在第1趟中要进行n-1次两两比较，在j趟比较中要进行n-j次两两比较</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">10</span>];</span><br><span class="line"><span class="keyword">int</span> i,j,t;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;input 10 numbers:\n&quot;</span>);</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;<span class="number">9</span>;j++)&#123;   <span class="comment">//实现9次循环，9趟比较 </span></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">9</span>-j;i++)&#123;  <span class="comment">//每一趟进行9-j比较 </span></span><br><span class="line"><span class="keyword">if</span>(a[i]&gt;a[i+<span class="number">1</span>])&#123; <span class="comment">//比较然后交换 </span></span><br><span class="line">t=a[i];</span><br><span class="line">a[i]=a[i+<span class="number">1</span>];</span><br><span class="line">a[i+<span class="number">1</span>]=t;</span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;the sorted numbers:\n&quot;</span>);</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,a[i]);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\t&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><h2 id="二维数组"><a href="#二维数组" class="headerlink" title="二维数组"></a>二维数组</h2><p>二维数组常称为矩阵，用矩阵形式（行和列）表示二维数组，是<code>逻辑上的概念</code>，而在内存中，各元素是<code>连续存放</code>的，不是二维的，是<code>线性</code>的。</p><pre><code>    数据类型 数组名[行下标][列下标]    int a[3,4]; //表示3行4列的数组</code></pre><p>二维数组初始化</p><pre><code>    int a[3][4]=&#123;&#123;1,2,3,4&#125;,&#123;5,6,7,8&#125;,&#123;9,10,11,12&#125;&#125;;//按行存放    int a[3][4]=&#123;&#123;1&#125;,&#123;5&#125;,&#123;9&#125;&#125;;  //只对一部分赋值</code></pre><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//将一个二维数组的行和例互换，存到另一个二维数组中</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">2</span>][<span class="number">3</span>]=&#123;&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;,&#123;<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>&#125;&#125;;</span><br><span class="line"><span class="keyword">int</span> b[<span class="number">3</span>][<span class="number">2</span>],i,j;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;array a:\n&quot;</span>);</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;=<span class="number">1</span>;i++)  <span class="comment">//处理a数组中的一行中各元素，从0开始，0，1</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;=<span class="number">2</span>;j++) <span class="comment">//处理a数组中某一列元素，0,1,2</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%5d&quot;</span>,a[i][j]);</span><br><span class="line">b[j][i]=a[i][j];   <span class="comment">//a数组元素赋值给b数组</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;array b:\n&quot;</span>);</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;=<span class="number">2</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;=<span class="number">1</span>;j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%5d&quot;</span>,b[i][j]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">array a:</span></span><br><span class="line"><span class="comment">    1    2    3</span></span><br><span class="line"><span class="comment">    4    5    6</span></span><br><span class="line"><span class="comment">array b:</span></span><br><span class="line"><span class="comment">    1    4</span></span><br><span class="line"><span class="comment">    2    5</span></span><br><span class="line"><span class="comment">    3    6</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//求3*4矩阵其中值最大的那个元素的值，及其所在行号和列号。</span></span><br><span class="line"><span class="comment">//打擂台算法</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i,j,row=<span class="number">0</span>,colum=<span class="number">0</span>,max;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">3</span>][<span class="number">4</span>]=&#123;&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>&#125;,&#123;<span class="number">9</span>,<span class="number">8</span>,<span class="number">7</span>,<span class="number">6</span>&#125;,&#123;<span class="number">-10</span>,<span class="number">10</span>,<span class="number">-5</span>,<span class="number">2</span>&#125;&#125;;</span><br><span class="line">max=a[<span class="number">0</span>][<span class="number">0</span>];  <span class="comment">//认为a[0][0]最大，为擂主</span></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;=<span class="number">2</span>;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;=<span class="number">3</span>;j++)&#123;</span><br><span class="line"><span class="keyword">if</span>(a[i][j]&gt;max)  <span class="comment">//如果大于max，就取代原值</span></span><br><span class="line">&#123;</span><br><span class="line">max=a[i][j];</span><br><span class="line">row=i;   <span class="comment">//记下行号</span></span><br><span class="line">colum=j;  <span class="comment">//记下列号</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;max=%d\nrow=%d\ncolum=%d\n&quot;</span>,max,row,colum);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="字符数组"><a href="#字符数组" class="headerlink" title="字符数组"></a>字符数组</h1><p>用来存放字符数据的数组，数组中一个元素存放一个字符。</p><pre><code>    char c[10];    c[0]=&#39;I&#39;;    c[1]=&#39;a&#39;;</code></pre><p>由于字符型数据是以整数形式存放的，因此也可以用整型数组存放字符数据。</p><pre><code>    int c[10];    c[0]=&#39;a&#39;;</code></pre><p>字符数组初始化</p><pre><code>    char c[10]=&#123;&#39;I&#39;,&#39;&#39;,&#39;a&#39;,&#39;m&#39;,&#39;&#39;,&#39;h&#39;,&#39;a&#39;,&#39;p&#39;,&#39;p&#39;,&#39;y&#39;&#125;;</code></pre><p>C语言规定以字符’<code>\0</code>‘作为结束标志，例如”C program”共9个字符，在字符数组中它占10个字节，最后一个’\0’是系统自动加上去的。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//输出一个菱形图</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">char</span> diamond[<span class="number">5</span>][<span class="number">5</span>]=&#123;&#123;<span class="string">&#x27; &#x27;</span>,<span class="string">&#x27; &#x27;</span>,<span class="string">&#x27;*&#x27;</span>&#125;,&#123;<span class="string">&#x27; &#x27;</span>,<span class="string">&#x27;*&#x27;</span>,<span class="string">&#x27; &#x27;</span>,<span class="string">&#x27;*&#x27;</span>&#125;,&#123;<span class="string">&#x27;*&#x27;</span>,<span class="string">&#x27; &#x27;</span>,<span class="string">&#x27; &#x27;</span>,<span class="string">&#x27; &#x27;</span>,<span class="string">&#x27;*&#x27;</span>&#125;,</span><br><span class="line">&#123;<span class="string">&#x27; &#x27;</span>,<span class="string">&#x27;*&#x27;</span>,<span class="string">&#x27; &#x27;</span>,<span class="string">&#x27;*&#x27;</span>&#125;,&#123;<span class="string">&#x27; &#x27;</span>,<span class="string">&#x27; &#x27;</span>,<span class="string">&#x27;*&#x27;</span>&#125;&#125;;</span><br><span class="line"><span class="keyword">int</span> i,j;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;<span class="number">5</span>;j++)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,diamond[i][j]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment"> * *</span></span><br><span class="line"><span class="comment">*   *</span></span><br><span class="line"><span class="comment"> * *</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h2 id="字符串处理函数"><a href="#字符串处理函数" class="headerlink" title="字符串处理函数"></a>字符串处理函数</h2><p>引入<code>#include&lt;string.h&gt;</code>函数库</p><ul><li>puts——输出字符串<br>  puts(String);</li><li>gets——输入字符串<br>  gets(String);</li><li>strcat——字符串连接<br>  strcat(str1,str2) //str2连接到str1后面</li><li>strcpy和strncpy——字符串复制<br>  strcpy(str1,string);  //string复制到str1<br>  strcpy(str2,string,n); //string前n个字符复制到str2</li><li>strcmp——字符串比较<br>  strcmp(str1,str2);//按照ASCII码</li><li>strlen——字符串长度<br>  strlen(str);</li><li>strlwr——转换为小写<br>  strlwr(str);</li><li>strupr——转换为大写<br>  strupr(str);</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//有3个字符串，要求找出其中最大者</span></span><br><span class="line"><span class="comment">//思路：成绩一个3行20列的二维数组，每一行容纳20个字符</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">char</span> str[<span class="number">3</span>][<span class="number">20</span>];</span><br><span class="line"><span class="keyword">char</span> stirng[<span class="number">20</span>];</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">3</span>;i++)</span><br><span class="line">gets(str[i]);</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">strcmp</span>(str[<span class="number">0</span>],str[<span class="number">1</span>])&gt;<span class="number">0</span>)</span><br><span class="line"><span class="built_in">strcpy</span>(<span class="built_in">string</span>,str[<span class="number">0</span>]);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">strcpy</span>(<span class="built_in">string</span>,str[<span class="number">1</span>]);</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">strcmp</span>(str[<span class="number">2</span>],<span class="built_in">string</span>)&gt;<span class="number">0</span>)</span><br><span class="line"><span class="built_in">strcpy</span>(<span class="built_in">string</span>,str[<span class="number">2</span>]);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\nThe largest string is:\n&quot;</span>,<span class="built_in">string</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//输入一行字符，统计其中有多少个单词，单词之间用空格隔开</span></span><br><span class="line"><span class="comment">//思路：如果当前字符为空格，则表示未出现新单词，使word=0,num不累加</span></span><br><span class="line"><span class="comment">//如果当前不为空格，前一字符为空格(word=0),新单词出现，num加1，word=1；</span></span><br><span class="line"><span class="comment">//若前一字符为非空格(word=1），未出现新单词，num不加1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">char</span> <span class="built_in">string</span>[<span class="number">81</span>];</span><br><span class="line"><span class="keyword">int</span> i,num=<span class="number">0</span>,word=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">char</span> c;</span><br><span class="line">gets(<span class="built_in">string</span>); <span class="comment">//输入一个字符串给字符数组string</span></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;(c=<span class="built_in">string</span>[i])!=<span class="string">&#x27;\0&#x27;</span>;i++)&#123;  <span class="comment">//只要字符不是&#x27;\0&#x27;就继续执行循环</span></span><br><span class="line"><span class="keyword">if</span>(c==<span class="string">&#x27; &#x27;</span>)&#123;              <span class="comment">//如果是空格，使word置0</span></span><br><span class="line">word=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(word==<span class="number">0</span>)&#123;</span><br><span class="line">word=<span class="number">1</span>;<span class="comment">//将自己置1，代表自己非空格</span></span><br><span class="line">num++;<span class="comment">//num累加1，代表增加一个单词</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;There ara %d words in this line.\n&quot;</span>,num);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
          <category> C </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C语言⭐选择循环</title>
      <link href="2021/01/15/%E5%90%8E%E7%AB%AF/C%E8%AF%AD%E8%A8%80/C%E8%AF%AD%E8%A8%80_%E9%80%89%E6%8B%A9%E5%BE%AA%E7%8E%AF/"/>
      <url>2021/01/15/%E5%90%8E%E7%AB%AF/C%E8%AF%AD%E8%A8%80/C%E8%AF%AD%E8%A8%80_%E9%80%89%E6%8B%A9%E5%BE%AA%E7%8E%AF/</url>
      
        <content type="html"><![CDATA[<h1 id="选择结构"><a href="#选择结构" class="headerlink" title="选择结构"></a>选择结构</h1><p>在顺序结构中，各语句是按自上而下的顺序执行的，实际上，很多情况下，需要根据某个条件来判断是否执行指定的操作，这就是要引用选择结构的原因。<br>c语言有两种选择语句：<br>① <strong><em>if</em></strong> 语句，用来实现两个分支的选择结构<br>② <strong><em>switch</em></strong> 语句，用来实现多分支的选择结构</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//实现两个数升序输出</span></span><br><span class="line"><span class="comment">//注意，实现两个数的互换，不能直接赋值，必须借助第三个变量，就比如将A和B两个杯子的水互换一样。</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">flaot a,b,t;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%f,%f&quot;</span>,&amp;a,&amp;b);</span><br><span class="line"><span class="keyword">if</span>(a&gt;b)&#123; <span class="comment">//交换</span></span><br><span class="line">t=a;</span><br><span class="line">a=b;</span><br><span class="line">b=t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%5.2f,%5.2f\n&quot;</span>,a,b);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="if语句"><a href="#if语句" class="headerlink" title="if语句"></a>if语句</h2><p>表达式可以是关系表达式、逻辑表达式、数值表达式。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//if形式</span></span><br><span class="line"><span class="keyword">if</span>(表达式) 语句<span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//**********************</span></span><br><span class="line"><span class="comment">//if...else...形式</span></span><br><span class="line"><span class="keyword">if</span>(表达式)</span><br><span class="line">语句<span class="number">1</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">语句<span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//**********************</span></span><br><span class="line"><span class="comment">//if...else if...形式</span></span><br><span class="line"><span class="keyword">if</span>(表达式<span class="number">1</span>) 语句<span class="number">1</span></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(表达式<span class="number">2</span>) 语句<span class="number">2</span></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(表达式<span class="number">3</span>) 语句<span class="number">3</span></span><br><span class="line">...</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(表达式n) 语句n</span><br><span class="line"><span class="keyword">else</span>语句n+<span class="number">1</span></span><br></pre></td></tr></table></figure><h2 id="关系表达式"><a href="#关系表达式" class="headerlink" title="关系表达式"></a>关系表达式</h2><p>用关系运算符将两个数值或数值表达式连接起来的式子，称关系表达式。</p><table><thead><tr><th align="center">关系运算符</th><th align="center">优先级</th></tr></thead><tbody><tr><td align="center">&lt;</td><td align="center">高</td></tr><tr><td align="center">&lt;=</td><td align="center">高</td></tr><tr><td align="center">&gt;</td><td align="center">高</td></tr><tr><td align="center">&gt;=</td><td align="center">高</td></tr><tr><td align="center">==</td><td align="center">低</td></tr><tr><td align="center">！=</td><td align="center">低</td></tr></tbody></table><blockquote><p>前4种关系运算符(&lt;,&lt;=,&gt;,&gt;=)优先级别相同，后2种也相同。</p></blockquote><h2 id="逻辑表达式"><a href="#逻辑表达式" class="headerlink" title="逻辑表达式"></a>逻辑表达式</h2><table><thead><tr><th align="center">逻辑运算符</th><th align="center">含义</th><th align="center">举例</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">&amp;&amp;</td><td align="center">逻辑与</td><td align="center">a&amp;&amp;b</td><td align="center">如果a和b都为真，则结果为真，否则为假</td></tr><tr><td align="center">||</td><td align="center">逻辑或</td><td align="center">a||b</td><td align="center">如果a和b有一个以上为真，则结果为真，二者都为假时，结果为假</td></tr><tr><td align="center">!</td><td align="center">逻辑非</td><td align="center">!a</td><td align="center">如果a为假，则！a为真，如果a为真，则！a为假</td></tr></tbody></table><hr><table><thead><tr><th align="center">a</th><th align="center">b</th><th align="center">!a</th><th align="center">!b</th><th align="center">a&amp;&amp;b</th><th align="center">a||b</th></tr></thead><tbody><tr><td align="center">真</td><td align="center">真</td><td align="center">假</td><td align="center">假</td><td align="center">真</td><td align="center">真</td></tr><tr><td align="center">真</td><td align="center">假</td><td align="center">假</td><td align="center">真</td><td align="center">假</td><td align="center">真</td></tr><tr><td align="center">假</td><td align="center">真</td><td align="center">真</td><td align="center">假</td><td align="center">假</td><td align="center">真</td></tr><tr><td align="center">假</td><td align="center">假</td><td align="center">真</td><td align="center">真</td><td align="center">假</td><td align="center">假</td></tr></tbody></table><blockquote><p>表示逻辑运算结果时，1代表真，0代表假。<br>判断一个量是否为“真”时，0代表假，非0代表真，即将一个非零的数值认作为“真”。`</p></blockquote><p><a href="#priority">优先级</a></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">5</span>&gt;<span class="number">3</span>&amp;&amp;<span class="number">8</span>&lt;<span class="number">4</span>-!<span class="number">0</span>  <span class="comment">//为0</span></span><br><span class="line"><span class="comment">//先根据优先级自左向右扫描求解</span></span><br><span class="line"><span class="comment">//5&gt;3为1,!0为1，8&lt;3为0，最后1&amp;&amp;0为0</span></span><br></pre></td></tr></table></figure><blockquote><p>C99中增加一种逻辑型变量_Boole，在头文件中stdbool.h中，将bool定义为_Bool的同义词,同时定义了true和false两个常量。</p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdbool.h&gt;</span></span></span><br><span class="line"><span class="keyword">float</span> score;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%f&quot;</span>,&amp;score);</span><br><span class="line"><span class="keyword">bool</span> a,b;    <span class="comment">//a,b被定义为逻辑变量</span></span><br><span class="line">a=score&gt;=<span class="number">60</span>;</span><br><span class="line">b=score&lt;=<span class="number">69</span>;</span><br><span class="line"><span class="keyword">if</span>(a==<span class="literal">true</span>&amp;&amp;b==<span class="literal">true</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;The grade is C\n&quot;</span>);</span><br></pre></td></tr></table></figure><h2 id="条件表达式"><a href="#条件表达式" class="headerlink" title="条件表达式"></a>条件表达式</h2><p>赋值号右侧为条件表达式，？是条件运算符，有3个操作对象，是C语言中唯一的一个<code>三目运算符</code>。</p><pre><code>    max=(a&gt;b)?a:b;</code></pre><p>当(a&gt;b)为真时将a赋给max，为假时b赋给max，可以用来求最大值。</p><blockquote><p>条件运算符优先级比关系运算符和算术运算符都低。</p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">char</span> ch;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%c&quot;</span>,&amp;ch);</span><br><span class="line">ch=(c&gt;=<span class="string">&#x27;A&#x27;</span>&amp;&amp;ch&lt;=<span class="string">&#x27;Z&#x27;</span>)?(ch+<span class="number">32</span>):ch; <span class="comment">//判断是否为大写字母，是大写转换成小写。</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%c\n&quot;</span>,ch);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="switch语句"><a href="#switch语句" class="headerlink" title="switch语句"></a>switch语句</h2><p>switch语句的作用是根据表达式的值，使流程跳转到不同的语句。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span>(表达式)   <span class="comment">//表达式类型应为整数类型（包括字符型）</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> 常量<span class="number">1</span>:   <span class="comment">//case后面跟一个常量（或常量表达式）</span></span><br><span class="line">语句<span class="number">1</span>;</span><br><span class="line"><span class="keyword">break</span>; <span class="comment">//break跳出选择。</span></span><br><span class="line"><span class="keyword">case</span> 常量<span class="number">2</span>:</span><br><span class="line">语句<span class="number">2</span>;</span><br><span class="line">...</span><br><span class="line"><span class="keyword">case</span> 常量n:</span><br><span class="line">语句n;</span><br><span class="line"><span class="keyword">default</span>:   <span class="comment">//没有匹配到case就会执行default语句</span></span><br><span class="line">语句n+<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">char</span> grade;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%c&quot;</span>,&amp;grade);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Your score:&quot;</span>);</span><br><span class="line"><span class="keyword">switch</span>(grade)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;A&#x27;</span>:</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;85~100\n&quot;</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;B&#x27;</span>:</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;70~84\n&quot;</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;C&#x27;</span>:</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;60~69\n&quot;</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;D&#x27;</span>:</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;&lt;60\n&quot;</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Enter data error!\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="循环结构"><a href="#循环结构" class="headerlink" title="循环结构"></a>循环结构</h1><h2 id="while语言"><a href="#while语言" class="headerlink" title="while语言"></a>while语言</h2><p>先判断条件表达式，当循环条件为真时，执行循环体语句，否则跳出循环。</p><pre><code>    whie(表达式) 语句</code></pre><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i=<span class="number">1</span>,sum=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(i&lt;=<span class="number">100</span>)</span><br><span class="line">&#123;</span><br><span class="line">sum=sum+i;</span><br><span class="line">i++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;sum=%d\n&quot;</span>,sum);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="do…while语句"><a href="#do…while语句" class="headerlink" title="do…while语句"></a>do…while语句</h2><p>先执行循环体，然后判断循环条件是否成立。</p><pre><code>    do        语句    while(表达式);</code></pre><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i=<span class="number">1</span>,sum=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line">sum=sum+i;</span><br><span class="line">i++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(i&lt;=<span class="number">100</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;sum=%d\n&quot;</span>,sum);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="for语句"><a href="#for语句" class="headerlink" title="for语句"></a>for语句</h2><p>for语句可以用于循环次数不确定而只给出循环结束条件的情况。</p><pre><code>    for(循环变量初始化;循环条件;循环变量增值)        语句    for(int i=1;i&lt;=100;i++)        sum=sum+i;</code></pre><blockquote><p>当循环条件为空语句时，此时循环进入死循环。</p></blockquote><ul><li><p>逗号表达式<br>可以使用逗号连接多个表达式</p><pre><code>  for(int i=0,j=100;i&lt;=j;i++,j--);</code></pre></li></ul><h2 id="break语句"><a href="#break语句" class="headerlink" title="break语句"></a>break语句</h2><p>break使流程跳到循环体之外，接着执行循环体下面的语句。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=<span class="number">100</span>;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">50</span>)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;已达到%d&quot;</span>,i);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="continue语句"><a href="#continue语句" class="headerlink" title="continue语句"></a>continue语句</h2><p>countinue用于结束本次循环，即跳过循环体中下面尚未执行的语句，转到循环体结束点之前，接着执行循环变量增值。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">输出下列4*5的矩阵</span></span><br><span class="line"><span class="comment">1 2 3 4 5</span></span><br><span class="line"><span class="comment">2 4 6 8 10</span></span><br><span class="line"><span class="comment">3 6 9 12 15</span></span><br><span class="line"><span class="comment">4 8 12 16 20</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i,j,n=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">4</span>;i++)&#123;  <span class="comment">//i控制4行</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=<span class="number">5</span>;j++,n++)&#123; <span class="comment">//j控制5列</span></span><br><span class="line"><span class="keyword">if</span>(n%<span class="number">5</span>==<span class="number">0</span>)   <span class="comment">//n累计输出数据的个数</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);  <span class="comment">//输出5个后换行</span></span><br><span class="line"><span class="comment">//if(i==3&amp;&amp;j==1) break;  //遇到第3行第1列终止循环，结果导致第三行空白</span></span><br><span class="line"><span class="comment">//if(i==3$$j==1) continue; //第3行第1列的数字3不会输出。</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,i*j);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
          <category> C </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C语言⭐数据类型</title>
      <link href="2021/01/15/%E5%90%8E%E7%AB%AF/C%E8%AF%AD%E8%A8%80/C%E8%AF%AD%E8%A8%80_%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/"/>
      <url>2021/01/15/%E5%90%8E%E7%AB%AF/C%E8%AF%AD%E8%A8%80/C%E8%AF%AD%E8%A8%80_%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="C语言结构"><a href="#C语言结构" class="headerlink" title="C语言结构"></a>C语言结构</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;  //编译预处理指令</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span><span class="comment">//定义主函数 </span></span></span><br><span class="line"><span class="function"></span>&#123;<span class="comment">//函数开始的标志</span></span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;HelloWorld!&quot;</span>); <span class="comment">//输出语句</span></span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>; <span class="comment">//函数执行完毕时返回函数值0</span></span><br><span class="line">&#125;<span class="comment">//函数结束的标志</span></span><br></pre></td></tr></table></figure><ul><li>一个程序由一个或多个源程序文件组成。<br>①预处理指令。（#include&lt;stdio.h&gt;)<br>②全局声明。在函数之外进行数据声明，对整个源程序文件范围内有效，在函数中声明的变量为局部变量，只在函数范围内有效。<br>③函数定义。</li><li>函数是C程序的主要组成部分。<br>一个C语言程序是由一个或多个函数组成的，其中必须包含一个main函数（有且只有一个main函数）。</li><li>一个函数包括两个部分<br>①函数首部<br>即函数第1行，包括函数名、函数类型、函数属性、函数参数名、参数类型。<br>②函数体<br>包含声明部分和执行部分。</li><li>程序总是从main函数开始执行的。</li><li>程序中对计算机的操作是由函数中的C语言完成的。</li><li>在每个数据声明和语句的最后必须有一个分号。</li><li>C语言本身不提供输入输出语句。</li><li>程序应当包含注释。</li></ul><h1 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h1><table><thead><tr><th align="center">类型</th><th align="center">16位</th><th align="center">32位</th><th align="center">64位</th></tr></thead><tbody><tr><td align="center">char</td><td align="center">1</td><td align="center">1</td><td align="center">1</td></tr><tr><td align="center">short int</td><td align="center">2</td><td align="center">2</td><td align="center">2</td></tr><tr><td align="center">int</td><td align="center">2</td><td align="center">4</td><td align="center">4</td></tr><tr><td align="center">unsigned int</td><td align="center">2</td><td align="center">4</td><td align="center">4</td></tr><tr><td align="center">float</td><td align="center">4</td><td align="center">4</td><td align="center">4</td></tr><tr><td align="center">double</td><td align="center">8</td><td align="center">8</td><td align="center">8</td></tr><tr><td align="center">long</td><td align="center">4</td><td align="center">4</td><td align="center">8</td></tr><tr><td align="center">long long</td><td align="center">8</td><td align="center">8</td><td align="center">8</td></tr><tr><td align="center">unsigned long</td><td align="center">4</td><td align="center">4</td><td align="center">8</td></tr></tbody></table><h2 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h2><p>在程序运行过程中，其值不能被改变的量称为常量。</p><ul><li><p>整型常量。如1000，123。<br>①八进制整数：常数前加0进行修饰。如0123。<br>②十六进制整数：常量前加0x作为前缀。如0x123。</p></li><li><p>实型常量。<br>①十进制小数形式。如123.4，0.3。<br>②指数形式。如12.34e3（代表12.34*10的三次方）</p></li><li><p>字符常量<br>①普通字符。如’a’,’3’。<br>②转义字符。以字符”&quot;开头的字符序列。</p></li><li><p>字符串常量。如”China”。</p></li><li><p>符号常量。用#define指令，指定用一个符号代表一个常量。</p></li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">define</span> PI 3.1415      <span class="comment">//注意行末没有分号</span></span></span><br></pre></td></tr></table></figure><h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><ul><li>变量代表一个有名字的、具有特定属性的一个<code>存储单元</code>，可以用来存放数据，页就是存放变量的值，在程序运行时间，变量的值是可以改变的。 </li><li>变量必须<code>先定义，后使用</code>。变量名和变量值是不同的概念，变量名是存储空间的名字，变量值是存放在存储空间的数据。</li><li>在编译时，通过变量名找到相应的内存地址，从该存储单元中读取数据。</li></ul><h2 id="常变量"><a href="#常变量" class="headerlink" title="常变量"></a>常变量</h2><p>C99允许使用<code>常变量</code></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> a=<span class="number">3</span>;</span><br><span class="line"><span class="comment">//a被定义为一个整型变量，指定值为3，而且在变量存在期间其值不能改变。</span></span><br></pre></td></tr></table></figure><p>常变量和符号变量的区别</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PI 3.1415</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">float</span> pi=<span class="number">3.1415</span></span><br></pre></td></tr></table></figure><ul><li>符号常量使用#define定义，是预编译指令，它是用符号常量代表一个字符串，在预编译时仅是进行字符替换，在预编译后，符号常量就不存在了（全置换为3.1415了），对符号常量是不分配存储单元的。</li><li>常变量占用存储单元，有变量值，只是该值不变而已。</li></ul><h2 id="标识符"><a href="#标识符" class="headerlink" title="标识符"></a>标识符</h2><p>标识就是一个对象的名字。</p><ul><li>C语言规定标识符只能使用<code>字母、数字和下划线</code>组成，且不能以数字开头。</li><li>C语言区分大小写，sun和SUM是两个不同的变量。</li><li>标识符不能是关键字。</li></ul><h2 id="整数类型"><a href="#整数类型" class="headerlink" title="整数类型"></a>整数类型</h2><ul><li><p>基本整型（int型）<br>编译系统分配给int型数据2个字节或者<code>4</code>个字节（由具体的C编译系统自行决定）。<br>整型在存储单元中的存储方式是：用整数的补码形式存放。<br>一个正数的补码是此数的二进制形式，如5的二进制形式是101，如果用两个字节存放一个整数，则在存储单元中数据形式为 0000 0000 0000 0101。第一个数字为符号位，0代表整数，1代表负数。<br>求负数的补码方法：<strong>先将此数的绝对值写成二进制形式，然后对其后面所有各二进制按位取反，再加1</strong>。如-5：1111 1111 1111 1011。</p></li><li><p>短整型（short int）<br>int数据4个字节，短整型2个字节，存储方式和int型相同。</p></li><li><p>长整型（long int)</p></li><li><p>双长整型（long long int)</p><blockquote><p>sizeof(short)&lt;=sizeof(int)&lt;=sizeof(long)&lt;=sizeof(long long)</p></blockquote></li><li><p>无符号和有符号<br>有符号(sighed)整型数据存储单元中最高位代表符号（0为正，1为负）。<br>无符号(unsighed)，存储单元中全部二进制都用作存放数值本身，而没有符号。无符号只能存放不带符号的整数，如123，而不能存放负数，如-123。但由于最高位不要来表示符号，而用来表示数值，所以<code>无符号整型变量可以存放的正数范围比一般整型变量中整数的范围扩大一倍</code>。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">signed</span> <span class="keyword">int</span> num=<span class="number">10</span>;  <span class="comment">//signed可以省去</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,num);</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">int</span> NUM=<span class="number">10</span>;  <span class="comment">//不能为负数</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%u&quot;</span>,NUM);  <span class="comment">//指定用%u格式输出</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="字符型数据"><a href="#字符型数据" class="headerlink" title="字符型数据"></a>字符型数据</h2><p>字符是以<code>整数形式</code>（字符的ASCII代码）存放在内存单元中的。例如</p><table><thead><tr><th align="center">字符</th><th align="center">ASCII代码</th><th align="center">二进制形式</th></tr></thead><tbody><tr><td align="center">A</td><td align="center">65</td><td align="center">1000001</td></tr><tr><td align="center">a</td><td align="center">97</td><td align="center">1100001</td></tr><tr><td align="center">1</td><td align="center">49</td><td align="center">0110001</td></tr><tr><td align="center">%</td><td align="center">32</td><td align="center">0100000</td></tr><tr><td align="center">%</td><td align="center">37</td><td align="center">0100101</td></tr><tr><td align="center">\n</td><td align="center">10</td><td align="center">0001010</td></tr></tbody></table><p>可以看到，以上的字符的ASCII代号码最多用<code>7个二进制</code>就可以表示。所有，在C中，**<em>指定一个字节(8位)存储一个字符**</em>。此时，字节中第一位置为0，如“a”十进制数97，二进制数为0110 0001。</p><blockquote><p>字符‘1’只是代表一个形状为1的符号，在需要时按原样输出，在内存中以ASCII码形式存储，占1个字节。整数1是以整数形式存储方式（以二进制补码方式）存储的，占2个或4个字节。</p></blockquote><p><strong><em><code>字符变量</code></em></strong><br>字符变量用<code>char</code>定义。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">char</span> c=<span class="string">&#x27;?&#x27;</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d %c\n&quot;</span>,c,c);<span class="comment">// 63 ?</span></span><br><span class="line"><span class="comment">//%d输出整型，%c输出字符，一个字符既可以以字符形式输出，也可以以整型形式输出。</span></span><br><span class="line"><span class="comment">//定义c为字符型变量并使初值为字符&#x27;?&#x27;。&#x27;?&#x27;的ASCII代码是63，系统把整数63赋给变量c。</span></span><br><span class="line"><span class="comment">//c是字符变量，实际上是一个字节的整型变量，由于常用来存放字符，故称为字符变量。</span></span><br><span class="line"><span class="comment">//可以把0~127之间的整数赋给一个字符变量</span></span><br></pre></td></tr></table></figure><h2 id="浮点型数据"><a href="#浮点型数据" class="headerlink" title="浮点型数据"></a>浮点型数据</h2><p>浮点型数据是用来<code>表示具有小数点的实数</code>的。在C语言中，实数是以<code>指数形式</code>存放在存储单元中的。一个实数表示为指数可以有不止一种形式，如3.14159可以表示为：3.14159<em>10^0,0.314159</em>10^1,0.0314159<em>10^2等，可以看到：小数点的位置是可以在314159几个数字之间和之前或之后浮点的，只要在小数点位置浮动的同时改变指数的值，就可以保证其指不变。由于小数点位置可以浮点，所以实数的指数形式称为**</em><code>浮点数</code>***。</p><blockquote><p>规范化指数形式：小数部分中小数点前的数字为0、小数点后第1位数字不为0的表示形式。如0.1314159*10^1。</p></blockquote><p>浮点数类型包括float(单精度浮点型)、double(双精度浮点型)、long double(长双精度浮点型)。</p><ul><li>float型(单精度浮点型)<br>编译系统为每一个float型变量分配<code>4</code>个字节，数值以规范化的<code>二进制数指数形式</code>存放在存储单元中。存储时，分成小数部分和指数部分两个部分，分别存放。</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">float</span> a=<span class="number">3.14159f</span>;<span class="comment">//加f后缀，表示单精度浮点型</span></span><br></pre></td></tr></table></figure><ul><li><p>double型(双精度浮点型）<br>为了扩大能表示的数值范围，用8个字节存储一个double型数据，可以得到15位有效数字。</p></li><li><p>long double型(长双精度型)<br>分配16字节。</p></li></ul><h2 id="运算符和表达式"><a href="#运算符和表达式" class="headerlink" title="运算符和表达式"></a>运算符和表达式</h2><ul><li>基本的算术运算符</li></ul><blockquote><p>两个实数消除结果为双精度实数，<code>两个整数相除结果为负数</code>，如5/3=1，舍去小数部分。但是，如果除数或被除数中有一个负数，则舍入方向是不固定的。如-5/3可能为-1或者-2。多数C编译系统采取“<code>向零取整</code>”的方法，即5/3=1，-5/3=-1，取整后向零靠拢。</p></blockquote><ul><li>自增、自减运算符<br>作用是使变量的值加1或减1，只能用于变量。常用于循环，使循环变量加1；也用于指针变量，使指针指向下一个地方。</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">++i,--i; <span class="comment">//在使用i之前，先使i的值加(减)1，先加后用 </span></span><br><span class="line">i++,i--;  <span class="comment">//在使用i之后，使i的值加(减)1，先用后加</span></span><br><span class="line"><span class="comment">//例i=3</span></span><br><span class="line">j=++i;  <span class="comment">//i的值先变成4，在赋值给j，j的值为4</span></span><br><span class="line">j=i++;  <span class="comment">//先将i的值赋给j，j的值为3，然后i变为4</span></span><br></pre></td></tr></table></figure><p><a href="https://www.cnblogs.com/smwikipedia/articles/1229984.html">i++ : 顺序点(sequence point) 与 副作用 (side effect)</a></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> a=<span class="number">2</span>,b=<span class="number">3</span>;</span><br><span class="line"><span class="comment">//在执行b+=()+()时++a的值已经是4了,++a的作用就是程序执行进行a=a+1的操作,两个括号使这个过程被执行了两次，所以由3变成4.</span></span><br><span class="line"><span class="comment">//计算机处理这种运算式的时候，不是依次读入每个字符的，而是整体一起读入的，然后再进行变量替换的，两个++a对于计算机而已，就是a自加2次，然后算完的a再进行计算其他优先低的运算符</span></span><br><span class="line">b+=(++a)+(++a);  <span class="comment">//b=b+(++a=3)+(++a=4);//b=3+4+4(到这一步的表达式的时候a值为4，传回的是引用参数类型，最后一个a为4，返回引用两个a都是4)</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,b); <span class="comment">//b=11</span></span><br></pre></td></tr></table></figure><h2 id="优先级与结合性"><a href="#优先级与结合性" class="headerlink" title="优先级与结合性"></a><span id="priority">优先级与结合性</span></h2><p>用算术运算符和括号将运算对象（操作符）连接起来的式子称为<code>C算术表达式</code>。如a*b/c-1.5+’a’。</p><ul><li>优先级<br>按符号优先级顺序执行，例如先乘除后加减。</li><li>结合性<br>优先级相同时，算术运算符的结合方向为“从左至右”，例如a-b+c。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/10/c7a92f12de8994c61d6b12dc1dccc5c6.png"><blockquote><p><strong><em>优先级</em></strong><br>赋值运算符  &lt;  &amp;&amp;和||  &lt;  关系运算符  &lt;  算术运算符  &lt;  !(非）</p></blockquote></li></ul><h2 id="强制类型转换"><a href="#强制类型转换" class="headerlink" title="强制类型转换"></a>强制类型转换</h2><p>可以利用强制类型转换运算符将一个表达式转换为所需类型。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">(<span class="keyword">double</span>)a;</span><br><span class="line">(<span class="keyword">int</span>)(x+y);</span><br><span class="line">(<span class="keyword">float</span>)(<span class="number">5</span>%<span class="number">3</span>);</span><br></pre></td></tr></table></figure><blockquote><p>强制类型转换时，得到一个所需类型的中间数据，而原来变量的类型未发生变化。</p></blockquote><h2 id="C运算符"><a href="#C运算符" class="headerlink" title="C运算符"></a>C运算符</h2><table><thead><tr><th>C运算符</th><th>说明</th></tr></thead><tbody><tr><td>算术运算符</td><td>+  -  *  / % ++  –</td></tr><tr><td>关系运算符</td><td>&gt; &lt; == &gt;= &lt;= !=</td></tr><tr><td>逻辑运算符</td><td>！ &amp;&amp; ||</td></tr><tr><td>位运算符</td><td>&lt;&lt;   &gt;&gt;  ~ | ^ &amp;</td></tr><tr><td>赋值运算符</td><td>=</td></tr><tr><td>条件运算符</td><td>?:</td></tr><tr><td>逗号运算符</td><td>,</td></tr><tr><td>指针运算符</td><td>*和&amp;</td></tr><tr><td>求字节数运算符</td><td>sizeof</td></tr><tr><td>强制类型转换运算符</td><td>(类型)</td></tr><tr><td>成员运算符</td><td>.  -&gt;</td></tr><tr><td>下标运算符</td><td>[]</td></tr><tr><td>其他</td><td>如函数调用运算符()</td></tr></tbody></table><h2 id="C语句"><a href="#C语句" class="headerlink" title="C语句"></a>C语句</h2><p>语句的作用是向计算机系统发出操作指令，要求执行相应的操作。</p><ul><li>控制语句</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>()...<span class="keyword">else</span>... <span class="comment">//条件语句</span></span><br><span class="line"><span class="keyword">for</span>()...       <span class="comment">//循环语句</span></span><br><span class="line"><span class="keyword">while</span>()...     <span class="comment">//循环语句</span></span><br><span class="line"><span class="keyword">do</span>...<span class="keyword">while</span>()   <span class="comment">//循环语句</span></span><br><span class="line"><span class="keyword">continue</span>       <span class="comment">//结束本次循环语句</span></span><br><span class="line"><span class="keyword">break</span>   <span class="comment">//中止循环语句</span></span><br><span class="line"><span class="keyword">switch</span>         <span class="comment">//多分支选择语句</span></span><br><span class="line"><span class="keyword">return</span>         <span class="comment">//返回语句</span></span><br><span class="line"><span class="keyword">goto</span>           <span class="comment">//转向语句，在结构化程序中基本不用goto语句</span></span><br></pre></td></tr></table></figure><ul><li>函数调用语句<br>由一个函数调用加分号构成</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;This is a c statement&quot;</span>);</span><br></pre></td></tr></table></figure><ul><li>表达式语句<br>一个表达式的最后加一个分号</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">i++    <span class="comment">//表达式</span></span><br><span class="line">i++;   <span class="comment">//表达式语句</span></span><br></pre></td></tr></table></figure><ul><li>空语句<br>只有一个分号，可以用来作为流程的转向点或者循环语句中的循环体。</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">;</span><br></pre></td></tr></table></figure><ul><li>复合语句<br>使用{}把一些语句和声明语句括起来称为复合语句</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="keyword">float</span> pi=<span class="number">3.14</span>,r=<span class="number">2.5</span>,area;</span><br><span class="line">area=pi*r*r;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;area=%f&quot;</span>,area);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="赋值语句"><a href="#赋值语句" class="headerlink" title="赋值语句"></a>赋值语句</h2><ul><li><p>赋值运算符(=)</p></li><li><p>复合赋值运算符<br>在赋值符(=)之前加上其他运算符。例如+=,-=,*=,/=，%</p></li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a+=<span class="number">3</span>;    <span class="comment">//等价于 a=a+3</span></span><br><span class="line">x*=y+<span class="number">8</span>;  <span class="comment">//等价于 x=x*(y+3)</span></span><br><span class="line">x%=<span class="number">3</span>;    <span class="comment">//等价于 x=x%3</span></span><br></pre></td></tr></table></figure><ul><li>赋值表达式<br>由赋值运算符将一个变量和表达式连接起来。<br>赋值运算符左侧值称为左值，左值不能为表达式和常量，而应该是变量。</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a=(b=<span class="number">3</span>*<span class="number">4</span>);  <span class="comment">//正确</span></span><br><span class="line">(a=b)=<span class="number">3</span>*<span class="number">4</span>; <span class="comment">//不正确</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,a=b);<span class="comment">//可以在printf函数中完成赋值和输出</span></span><br></pre></td></tr></table></figure><ul><li><p>赋值过程中的类型转换<br>① 浮点型数据赋给整型变量时，先对浮点数取整，即舍弃小数部分，然后赋予整型变量。</p><pre><code>  int i=3.56;//i=3</code></pre><p>②整型数据赋给单、双精度变量时，数值不变，但以浮点数形式存储到变量中。</p><pre><code>  float f=23;  //先转换成23.0，再按指数形式存储</code></pre><p>③double型赋值给float变量时，先将双精度转换为单精度，即只取6~7位有效数字，存储到float变量的4个字节中，float型赋值给double变量时，数值不变，在内存中以8个字节存储，有效位数扩展到15位。<br>④字符型赋值给整型变量时，将字符的ASCII代码赋给整型变量。</p><pre><code>  int i=&#39;A&#39;; //i=65</code></pre><p>⑤将一个占字节多的整型数据赋给一个占字节少的整型变量或字符变量，只将其低字节原封不动地送到被赋值的变量（即发生“截断”）。</p><pre><code>  int i=289;  char c=&#39;a&#39;;  c=i;   //c的值为33，如果用%c输出，即字符“！”。  //因为整型是4字节，字符型是1字节，所以只取得了int型变量值289二进制最后8位，即0010 0001，为33。</code></pre></li><li><p>赋值表达式和赋值语句</p></li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">max=a   <span class="comment">//赋值表达式，末尾没有分号</span></span><br><span class="line">max=a;<span class="comment">//赋值语句</span></span><br></pre></td></tr></table></figure><h1 id="输入输出"><a href="#输入输出" class="headerlink" title="输入输出"></a>输入输出</h1><ul><li><p>所谓输入输出是以<code>计算机主机</code>为主体而言的。从计算机向输出设备（如显示器、打印机等）输出数据称为<code>输出</code>，从输入设备（如键盘、磁盘、光盘等）向计算机输入数据称为<code>输入</code>。</p></li><li><p>C语言本身不提供输入输出语句，输入输出操作是由C标准函数库中的函数来实现的。printf和<br>scanf不是C语言的关键字，而是库函数的名字。</p></li><li><p>在使用系统库函数时，要在程序开头用预处理指令#include把有关头文件放到本程序中。</p></li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="comment">//#include是将所需要的“头文件”包括到源文件中。</span></span><br><span class="line"><span class="comment">//stido是standard input&amp;output(标准输入和输出)的缩写。</span></span><br><span class="line"><span class="comment">//.h是header的缩写</span></span><br><span class="line"><span class="comment">//此语句的意思就是将stido.h头文件的内容调出来取代本行的#include指令。</span></span><br></pre></td></tr></table></figure><h2 id="printf"><a href="#printf" class="headerlink" title="printf()"></a>printf()</h2><ul><li><p><strong><em>printf(格式控制，输出序列);</em></strong></p></li><li><p>格式控制<br>①格式声明：由%和格式字符组成。如%d，作用是将数据指定格式输出。<br>②普通字符：需要按原样输出。</p></li><li><p>输出列表<br>程序需要输出的数据，可以是常量、变量或表达式。</p></li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;a=%d b=%d\n&quot;</span>,a,b);</span><br></pre></td></tr></table></figure><blockquote><p>printf是函数，因此格式控制和输出序列但是函数的参数。</p></blockquote><h2 id="格式字符"><a href="#格式字符" class="headerlink" title="格式字符"></a>格式字符</h2><ul><li><strong><em>d格式符</em></strong></li></ul><p>用来输出一个有符号的十进制整数。<br>输出时可以指定数据的<code>域宽（即所占列数）</code>，如%5d，指定输出占5列，输出的数据在此5列区域的<code>右侧</code>。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%5d\n%5d\n&quot;</span>,<span class="number">12</span>,<span class="number">-134</span>);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">   12  //12前有3个空格 </span></span><br><span class="line"><span class="comment"> -134  //-134前有1个空格</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><blockquote><p>输出long(长整型)：<code>%ld</code><br>输出long long(双长整型)：<code>%lld</code></p></blockquote><ul><li><strong><em>c格式符</em></strong></li></ul><p>用来输出一个字符。也可在指定域宽。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cahr ch=<span class="string">&#x27;a&#x27;</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,a);</span><br></pre></td></tr></table></figure><blockquote><p>一个整数，如果在0~127范围中，也可以使用%c输出字符形式。系统会将整数作为ASCII码转换成相应字符输出。</p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">short</span> a=<span class="number">121</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,a);  <span class="comment">//输出y</span></span><br><span class="line"><span class="keyword">int</span> a=<span class="number">377</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,a);<span class="comment">//输出y</span></span><br><span class="line"><span class="comment">// 当整数比较大时，会按其最后一个字节(8位)的信息以字符形式输出。</span></span><br><span class="line"><span class="comment">//377最后一个字节信息是0111 1001，即十进制的121，是y的ASCII码。</span></span><br></pre></td></tr></table></figure><ul><li><strong><em>s格式符</em></strong></li></ul><p>用来输出一个字符串。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>,<span class="string">&quot;CHINA&quot;</span>);</span><br></pre></td></tr></table></figure><ul><li><strong><em>f格式符</em></strong></li></ul><p>用来输出实数（包括单双精度、长双精度），以小数形式输出。</p><p>①基本型，用%f<br>不指定输出长度，则系统默认：<code>实数中整数部分全部输出，小数部分输出6位。</code></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">double</span> a=<span class="number">1.0</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%l\n&quot;</span>,a/<span class="number">3</span>);  <span class="comment">// 0.333333 a虽然是双精度，但使用%l只能输出6位小数</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>②指定数据宽度和小数位数，用**<em>%<code>m</code>.<code>n</code>f**</em>。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//对上例a的值指定宽度和小数位数输出</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%20.15f\n&quot;</span>,a/<span class="number">3</span>);</span><br><span class="line"><span class="comment">//   0.333333333333333 注意0前面有3个空间</span></span><br></pre></td></tr></table></figure><blockquote><p>一个双精度只能保证<code>15位</code>有效数值，单精度只能保证<code>6位</code>有效数字。</p></blockquote><p>③ 输出的数据向左对齐，用%-m.nf。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">printf</span>(%<span class="number">-25.15f</span>,%<span class="number">25.15f</span>\n<span class="string">&quot;,a,a);</span></span><br><span class="line"><span class="string">// 3333.333333333333500     ,     3333.333333333333500（空白处为5个空格）</span></span><br></pre></td></tr></table></figure><ul><li>e格式符<br>%e指定以指数形式输出实数。</li><li>i格式符<br>%i与%d相同。</li><li>o格式符<br>%o以八进制整数形式输出。</li><li>x格式符<br>%x以十六进制数形式输出整数。</li><li>u格式符<br>%u输出无符号（unsigned）型数据，以十进制整数形式输出。</li><li>g格式符<br>%g用来输出浮点数。</li><li>% 附加字符 格式字符<br>双%输出一个%<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%f%%%\n&quot;</span>,<span class="number">1.0</span>/<span class="number">3</span>);</span><br><span class="line"><span class="comment">//0.333333%</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="scanf"><a href="#scanf" class="headerlink" title="scanf()"></a>scanf()</h2><p><strong><em>scanf(格式控制，地址列表)</em></strong><br>格式控制同printf一样，地址列表是由若干个地址组成的表列，可以是<code>变量的地址或字符串的首地址</code>。</p><ul><li>格式控制后面应当是变量地址，不是变量名。</li><li>输入数据顺序应与格式控制一一对应。</li><li>输入空格、回车、Tab键或遇非法字符（不属于数值的字符）则认为该数据结束。</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sacnf(<span class="string">&quot;a=%f,b=%f,c=%f&quot;</span>,&amp;a,&amp;b,&amp;c); <span class="comment">//在输入时应输入a=1,b=3,c=2 一一对应</span></span><br></pre></td></tr></table></figure><h2 id="字符输入输出"><a href="#字符输入输出" class="headerlink" title="字符输入输出"></a>字符输入输出</h2><ul><li><strong><em>putchar输出一个字符</em></strong><br><code>putchar(c)</code><br>c可以是字符或者整型（0~127）,也可以输出转义字符。</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">char</span> a=<span class="string">&#x27;B&#x27;</span>,b=<span class="string">&#x27;O&#x27;</span>,c=<span class="string">&#x27;Y&#x27;</span>;</span><br><span class="line"><span class="built_in">putchar</span>(a);</span><br><span class="line"><span class="built_in">putchar</span>(b);</span><br><span class="line"><span class="built_in">putchar</span>(c);</span><br><span class="line"><span class="built_in">putchar</span>(<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//BOY</span></span><br></pre></td></tr></table></figure><ul><li><strong><em>getchar输入一个字符</em></strong><br><code>getchar()</code><br>getchar函数没有参数，只能接收一个字符，并且可以接收屏幕上无法显示的字符，如转义字符。</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">char</span> a,b,c;</span><br><span class="line">a=getchar();</span><br><span class="line">b=getchar();</span><br><span class="line">c=getchar();</span><br><span class="line"><span class="built_in">putchar</span>(a);</span><br><span class="line"><span class="built_in">putchar</span>(b);</span><br><span class="line"><span class="built_in">putchar</span>(c);</span><br><span class="line"><span class="built_in">putchar</span>(<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>输入信息时，并不是在键盘上输入一个字符就立即送到计算机中去，这些字符先暂存在键盘的<code>缓冲区</code>，只有按了<code>Enter</code>键才把这些字符输入到计算机中去。</p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">char</span> c1,c2;</span><br><span class="line">c1=getchar();</span><br><span class="line">c2=c1+<span class="number">32</span>;     <span class="comment">//大写转小写</span></span><br><span class="line">purchar(c2);</span><br><span class="line"><span class="built_in">putchar</span>(<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
          <category> C </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>绑定域名及备案</title>
      <link href="2021/01/14/Hexo/Hexo+Github%20%E7%BB%91%E5%AE%9A%E5%9F%9F%E5%90%8D%E6%95%99%E7%A8%8B/"/>
      <url>2021/01/14/Hexo/Hexo+Github%20%E7%BB%91%E5%AE%9A%E5%9F%9F%E5%90%8D%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<div class="note success flat"><p>可以绑定到自己申请的域名上，不用使用userName.github.io访问了，直接使用自己的域名访问</p></div><h1 id="申请域名"><a href="#申请域名" class="headerlink" title="申请域名"></a>申请域名</h1><ul><li>本人是在阿里云购买的域名，地址:<a href="https://wanwang.aliyun.com/?spm=5176.19720258.J_8058803260.64.7ff72c4axfGTmr">https://wanwang.aliyun.com/?spm=5176.19720258.J_8058803260.64.7ff72c4axfGTmr</a></li><li>你需要准备一个阿里云账户，并<code>实名认证</code>，通过个人支付宝认证可用立即成功</li><li>本人购买的是<code>.cn</code>结尾的域名，首年新用户只需要8.88<a href="http://xiaoliblog.cn/">http://xiaoliblog.cn/</a></li></ul><h1 id="解析域名"><a href="#解析域名" class="headerlink" title="解析域名"></a>解析域名</h1><ul><li><p>购买域名后，进入<code>阿里云控制台</code><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@d8157120b98f4be7689ff678aaae1b32da00812b/2021/01/14/a114eb9ac950edf5132ad4b905e214d6.png"></p></li><li><p>进入<code>域名解析控制台</code>，可以在<code>域名列表</code>看到自己购买的域名，点击<code>解析</code><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@fffa50d9cce24cd7d83aa7d2154506a0c7d199ac/2021/01/14/8116a4142d24fe0a0db2aa50f461e67f.png"></p></li><li><p>进入<code>云解析DNS</code>后，点击<code>添加记录</code>，并按以下要求添加<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@d4de161298b641fd156f85ab0fa82f4e2c00cceb/2021/01/14/f905002db67dec1bc029af4575daec15.png"></p></li><li><p>在阿里云控制台，设置主机记录<code>www</code>，记录类型为<code>A</code>，记录值是IP<code>185.199.109.153</code>。其中<code>185.199.109.153</code>是Github Pages服务器指定的IP地址，访问该IP地址即表示访问Github Pages。</p><div class="note success flat"><p>如何知道的 Github Pages IP<br>在命令提示符中输入 <code>ping -4 username.github.io</code><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@8f2ef246ede069316220e27ac2d5aed49da0bfdd/2021/01/14/7d892454532dd4793621399d398c9af8.png"></p></div></li><li><p>在阿里云控制台，设置主机记录<code>@</code>，记录类型为<code>CNAME</code>，记录值是<code>xiaoliblog.github.io</code>。表示将<a href="http://xiaoliblog.cn这个主域名映射lzyblog.github.io/">http://xiaoliblog.cn这个主域名映射lzyblog.github.io</a></p></li><li><p>添加成功之后<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@578141429fb3b24b65532ba869d0dd5bead43b9f/2021/01/14/00f4585e266f4012c31f87e7b402f9a8.png"></p></li><li><p>注意</p></li></ul><div class="tabs" id="test1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test1-1">记录类型</button></li><li class="tab"><button type="button" data-href="#test1-2">主机记录</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><p>A记录： 将域名指向一个IPv4地址（例如：8.8.8.8）<br>CNAME：将域名指向另一个域名（例如<a href="http://www.xiaoliblog.cn)/">www.xiaoliblog.cn）</a><br>MX： 将域名指向邮件服务器地址<br>TXT： 可任意填写，长度限制255，通常做SPF记录（反垃圾邮件）<br>NS： 域名服务器记录，将子域名指定其他DNS服务器解析<br>AAAA：将域名指向一个iPv6地址（例如：ff06:0:0:0:0:0:0:c3）<br>SRV：记录提供特定服务的服务器（例如_xmpp-server._tcp）</p><button type="button" class="tab-to-top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-2"><p>要解析<a href="http://www.xiaoliblog.cn,请填写www./">www.xiaoliblog.cn，请填写www。</a><br>主机记录就是域名前缀，常见用法有：</p><p>www： 解析后的域名为<a href="http://www.xiaoliblog.cn./">www.xiaoliblog.cn。</a><br>@： 直接解析主域名 xiaoliblog.cn。<br>*： 泛解析，匹配其他所有域名 *.xiaoliblog.cn。<br>mail： 将域名解析为mail.xiaoliblog.cn，通常用于解析邮箱服务器。<br>二级域名： 如：abc.xiaoliblog.cn，填写abc。<br>手机网站： 如：m.xiaoliblog.cn，填写m</p><button type="button" class="tab-to-top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><ul><li>在博客的<code>source</code>文件夹下建立一个<code>CNAME</code>的文件(<code>CNAME必须不指定格式！</code>)</li><li>内容写入你的域名信息，比如我这里是<code>xiaoliblog.cn</code></li><li>发布到github即可</li></ul><h1 id="GitHub配置"><a href="#GitHub配置" class="headerlink" title="GitHub配置"></a>GitHub配置</h1><ul><li>进入博客仓库-&gt;点击<code>Setting</code>，找到<code> Custom domain</code> 添加域名后保存即可<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@cebfd5d1ebc72705331291602cdd122509ccfc63/2021/01/14/5495335e7449a9b701717116487db27d.png"></li></ul><div class="note warning flat"><p>原nusername.github.io地址一样是可以访问的，会自动跳转到所购买使用的域名</p></div><h1 id="备案"><a href="#备案" class="headerlink" title="备案"></a>备案</h1><div class="note success flat"><p>👉👉👉<a href="https://www.itrhx.com/2019/08/23/A23-beian/">网站ICP备案和公安备案流程 </a></p></div>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LeanCloud-Valine评论配置</title>
      <link href="2021/01/14/Hexo/LeanCloud-Valine%E8%AF%84%E8%AE%BA%E9%85%8D%E7%BD%AE/"/>
      <url>2021/01/14/Hexo/LeanCloud-Valine%E8%AF%84%E8%AE%BA%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h2 id="valine评论系统"><a href="#valine评论系统" class="headerlink" title="valine评论系统"></a>valine评论系统</h2><p><a href="https://lete114.now.sh/article/Valine-LeanCloud-Config.html#%E5%89%8D%E8%A8%80">Lete保姆级valine教程</a><br><a href="https://www.leancloud.cn/">leancloud管理评论</a><br><a href="https://valine.js.org/">Valine文档</a><br>进入leancloud网站注册，并创建应用，找到应用key<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@1086c981d4982e49807f906e95be603883cef644/2020/11/17/d6a49b1aa90d7450e26c5f426ec117c4.png" width="500px" height="300px"><br>复制<code>AppID</code>和<code>AppKey</code>,找到Hexo配置文件中valine配置即可</p><h3 id="自定义表情（基于valine）"><a href="#自定义表情（基于valine）" class="headerlink" title="自定义表情（基于valine）"></a>自定义表情（基于valine）</h3><p><a href="https://butterfly.js.org/posts/ceeb73f/#%E8%A9%95%E8%AB%96">Butterfly官方文档</a></p><blockquote><p>在博客文件名`source<code>\目录下创建_data文件夹,</code>_data<code>文件夹里面创建</code>valine.json`文件，输入以下格式</p></blockquote><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="attr">&quot;QQ1&quot;</span>: <span class="string">&quot;QQ/aini.gif&quot;</span>,</span><br><span class="line"><span class="attr">&quot;QQ2&quot;</span>: <span class="string">&quot;QQ/aixin.gif&quot;</span>,</span><br><span class="line"><span class="attr">&quot;QQ3&quot;</span>: <span class="string">&quot;QQ/aoman.gif&quot;</span>,</span><br><span class="line"><span class="attr">&quot;QQ4&quot;</span>: <span class="string">&quot;QQ/baiyan.gif&quot;</span>,</span><br><span class="line"><span class="attr">&quot;QQ5&quot;</span>: <span class="string">&quot;QQ/bangbangtang.gif&quot;</span>,</span><br><span class="line"><span class="attr">&quot;QQ6&quot;</span>: <span class="string">&quot;QQ/baojin.gif&quot;</span>,</span><br><span class="line"><span class="attr">&quot;QQ7&quot;</span>: <span class="string">&quot;QQ/baoquan.gif&quot;</span>,</span><br><span class="line"><span class="attr">&quot;QQ8&quot;</span>: <span class="string">&quot;QQ/bishi.gif&quot;</span>,</span><br><span class="line"><span class="attr">&quot;QQ9&quot;</span>: <span class="string">&quot;QQ/bizui.gif&quot;</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>然后在Hexo主文件下_config.yml里面找到<code>valine</code>下<code>emojiCDN:</code> <a href="https://cdn.jsdelivr.net/gh/GamerNoTitle/ValineCDN@master/(%E5%A1%AB%E5%85%A5%E5%AE%98%E6%96%B9%E6%96%87%E6%A1%A3%E7%BB%99%E7%9A%84%E5%9C%B0%E5%9D%80)">https://cdn.jsdelivr.net/gh/GamerNoTitle/ValineCDN@master/(填入官方文档给的地址)</a></p></blockquote><p>寻找表情去前往<a href="https://github.com/GamerNoTitle/Valine-Magic">表情开源仓库</a></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">valine:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">appId:</span> <span class="string">54O2OYplcci4GjXUK0GjalFz-gzGzoHsz</span> <span class="comment"># leancloud application app id</span></span><br><span class="line">  <span class="attr">appKey:</span> <span class="string">sB0Y5Ydm1XnlyKUY5uR3RxsW</span> <span class="comment"># leancloud application app key</span></span><br><span class="line">  <span class="attr">pageSize:</span> <span class="number">10</span> <span class="comment"># comment list page size</span></span><br><span class="line">  <span class="attr">avatar:</span> <span class="string">monsterid</span> <span class="comment"># gravatar style https://valine.js.org/#/avatar</span></span><br><span class="line">  <span class="attr">lang:</span> <span class="string">zh-CN</span> <span class="comment"># i18n: zh-CN/zh-TW/en/ja</span></span><br><span class="line">  <span class="attr">placeholder:</span> <span class="string">请留下你的足迹（昵称栏输入QQ后按下Tab键，可以自动获取昵称和邮箱）</span> <span class="comment"># valine comment input placeholder (like: Please leave your footprints)</span></span><br><span class="line">  <span class="attr">nick:</span> <span class="string">昵称/QQ号(必填)</span></span><br><span class="line">  <span class="attr">mail:</span> <span class="string">邮箱(必填)</span></span><br><span class="line">  <span class="attr">guest_info:</span> <span class="string">nick,mail,link</span> <span class="comment"># valine comment header info (nick/mail/link)</span></span><br><span class="line">  <span class="attr">recordIP:</span> <span class="literal">false</span> <span class="comment"># Record reviewer IP</span></span><br><span class="line">  <span class="attr">serverURLs:</span> <span class="comment"># This configuration is suitable for domestic custom domain name users, overseas version will be automatically detected (no need to manually fill in)</span></span><br><span class="line">  <span class="attr">bg:</span> <span class="comment"># valine background</span></span><br><span class="line">  <span class="attr">notify:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">emojiCDN:</span> <span class="string">https://cdn.jsdelivr.net/gh/GamerNoTitle/ValineCDN@master/</span></span><br><span class="line">  <span class="attr">enableQQ:</span> <span class="literal">true</span> <span class="comment"># enable the Nickname box to automatically get QQ Nickname and QQ Avatar</span></span><br><span class="line">  <span class="attr">requiredFields:</span> <span class="string">nick,mail</span> <span class="comment"># required fields (nick/mail)</span></span><br><span class="line">  <span class="attr">option:</span></span><br></pre></td></tr></table></figure><h3 id="评论框"><a href="#评论框" class="headerlink" title="评论框"></a>评论框</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 评论框  */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.vwrap</span> &#123;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">2px</span> <span class="number">2px</span> <span class="number">5px</span> <span class="number">#bbb</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.3</span>);</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">8px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">30px</span> <span class="number">0px</span> <span class="number">30px</span> <span class="number">0px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 提交按钮 */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-id">#vcomment</span> <span class="selector-tag">button</span> &#123;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0.3rem</span> <span class="number">0.8rem</span>;</span><br><span class="line">    <span class="attribute">border-color</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#e58a8a</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">0.7rem</span>;</span><br><span class="line">    <span class="attribute">-webkit-transition</span>: all <span class="number">0.3s</span>;</span><br><span class="line">    <span class="attribute">-moz-transition</span>: all <span class="number">0.3s</span>;</span><br><span class="line">    <span class="attribute">-o-transition</span>: all <span class="number">0.3s</span>;</span><br><span class="line">    <span class="attribute">-ms-transition</span>: all <span class="number">0.3s</span>;</span><br><span class="line">    <span class="attribute">transition</span>: all <span class="number">0.3s</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 评论区代码块 */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.v</span><span class="selector-attr">[data-class=v]</span> <span class="selector-tag">code</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#c7254e</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#F9F2F4</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 设置评论框 */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.vcard</span> &#123;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">2px</span> <span class="number">2px</span> <span class="number">5px</span> <span class="number">#bbb</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.3</span>);</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">8px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">30px</span> <span class="number">0px</span> <span class="number">0px</span> <span class="number">0px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 取消回复聊天框 */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.vquote</span> <span class="selector-class">.vcard</span> &#123;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">2px</span> <span class="number">2px</span> <span class="number">5px</span> transparent;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.0</span>);</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="Valine访客标签"><a href="#Valine访客标签" class="headerlink" title="Valine访客标签"></a>Valine访客标签</h3><p><a href="https://akilar.top/posts/d2222705/">感谢Akilar博主</a></p><ol><li>打开<code>[lzyblog]\themes\butterfly\layout\includes\third-party\comments\valine.pug</code>,按指示添加如下字段(<code>去掉+号</code>)。<figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">serverURLs: &#x27;#&#123;theme.valine.serverURLs&#125;&#x27;,</span><br><span class="line">      emojiCDN: &#x27;#&#123;theme.valine.emojiCDN&#125;&#x27;,</span><br><span class="line">      emojiMaps: !&#123;emojiMaps&#125;,</span><br><span class="line">      enableQQ: #&#123;theme.valine.enableQQ&#125;,</span><br><span class="line">      path: window.location.pathname,</span><br><span class="line"><span class="addition">+     master: &#x27;#&#123;theme.valine.master&#125;&#x27;.split(&#x27;,&#x27;),</span></span><br><span class="line"><span class="addition">+     friends: &#x27;#&#123;theme.valine.friends&#125;&#x27;.split(&#x27;,&#x27;),</span></span><br><span class="line"><span class="addition">+     tagMeta: &#x27;#&#123;theme.valine.tagMeta || &quot;博主,小伙伴,访客&quot;&#125;&#x27;.split(&#x27;,&#x27;)</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li><li>打开<code>[lzyblog]\_config.butterfly.yml,</code><ul><li>在valine配置项添加如下内容。<br>md5加密可以使用<a href="https://tool.chinaz.com/tools/md5.aspx">在线转码</a>,务必使用<code>32位[小]</code>进行转码。</li></ul></li></ol><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"> valine:</span><br><span class="line">       appId:  # leancloud application app id</span><br><span class="line">       appKey:  # leancloud application app key</span><br><span class="line">       ........#去掉+号</span><br><span class="line"><span class="addition">+     master: # md5加密后的博主邮箱</span></span><br><span class="line"><span class="addition">+       - d4e7????4d361ad7????44a14e9e2a94  #可添加多个</span></span><br><span class="line"><span class="addition">+     friends: # md5加密后的小伙伴邮箱</span></span><br><span class="line"><span class="addition">+       - 5c?????bfe6rfc72a????e268ad3819c #可添加多个</span></span><br><span class="line"><span class="addition">+       - 7c?????bfe65fc02a????e2????3919c</span></span><br><span class="line"><span class="addition">+     tagMeta: &#x27;博主,小伙伴,访客&#x27; # 标签要显示的文字,默认&#x27;博主,小伙伴,访客&#x27;</span></span><br></pre></td></tr></table></figure><ul><li>在CDN配置项添加如下内容。将Valine.min.js替换成HCLonely魔改的版本(+号替换-号）。</li></ul><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="deletion">-valine: https://cdn.jsdelivr.net/npm/valine/dist/Valine.min.js</span></span><br><span class="line"><span class="addition">+valine: https://cdn.jsdelivr.net/gh/HCLonely/Valine@latest/dist/Valine.min.js</span></span><br></pre></td></tr></table></figure><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://www.lete114.top/article/Valine-LeanCloud-Config.html">LeanCloud-Valine保姆级配置教程</a></p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>github+jsDelivr搭建图床</title>
      <link href="2021/01/13/Hexo/github+jsDelivr%E6%90%AD%E5%BB%BA%E5%9B%BE%E5%BA%8A/"/>
      <url>2021/01/13/Hexo/github+jsDelivr%E6%90%AD%E5%BB%BA%E5%9B%BE%E5%BA%8A/</url>
      
        <content type="html"><![CDATA[<h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>图床是个啥东西就不用过多介绍了，先来对比一下各路图床：</p><div class="checkbox times red checked"><input type="checkbox" checked="checked"><p>微博图床：以前用的人比较多，从2019年4月开始开启了防盗链，凉凉</p></div><div class="checkbox times red checked"><input type="checkbox" checked="checked"><p> SM.MS：运营四年多了，也变得越来越慢了，到了晚上直接打不开图片，速度堪忧</p></div><div class="checkbox times red checked"><input type="checkbox" checked="checked"><p>其他小众图床：随时有挂掉的风险</p></div><div class="checkbox times red checked"><input type="checkbox" checked="checked"><p>Imgur等国外图床：国内访问速度太慢，随时有被墙的风险</p></div><div class="checkbox times red checked"><input type="checkbox" checked="checked"><p>语雀图床，语雀用的oss本来挺好用，也开启防盗链了</p></div> <div class="checkbox times red checked"><input type="checkbox" checked="checked"><p>大厂储存服务：例如七牛云、又拍云、腾讯云COS、阿里云OSS等，容量限制，操作繁琐，要花钱</p></div> <div class="checkbox green checked"><input type="checkbox" checked="checked"><p>Github图床</p></div> <div class="checkbox green checked"><input type="checkbox" checked="checked"><p> Gitee 图床</p></div><hr><p>GitHub 图床是个不错的选择，利用 jsDelivr CDN 加速访问（jsDelivr 是一个免费开源的 CDN 解决方案），PicGo 工具一键上传，操作简单高效，GitHub 和 jsDelivr 都是大厂，不用担心跑路问题，不用担心速度和容量问题，而且完全免费，可以说是目前免费图床的最佳解决方案！</p><h1 id="须知"><a href="#须知" class="headerlink" title="须知"></a>须知</h1><ul><li>需要绑定GitHub账户</li><li>需要将 token 信息上传给后台</li></ul><h1 id="创建图片仓库"><a href="#创建图片仓库" class="headerlink" title="创建图片仓库"></a>创建图片仓库</h1><ul><li><p>登录/注册GitHub，新建一个仓库，填写好仓库名，仓库描述，根据需求选择是否为仓库初始化一个README.md描述文件<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@fa485e288f3d33e039bbd0e723f66f901f944ea8/2021/01/13/48773f12415813605ec7c18261cf3917.png"></p></li><li><p>生成一个Token<br>在主页依次选择【Settings】-【Developer settings】-【Personal access tokens】-【Generate new token】，填写好描述，勾选【repo】，然后点击【Generate token】生成一个Token，注意这个Token只会显示一次，自己先保存下来，或者等后面配置好PicGo后再关闭此网页<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@9e9bff5169e40a0fa2f3004447a7efccdeac682f/2021/01/13/659873a5a4fc8e24a4154f5eba4b10c8.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@f4a60772b8c2b1aa8ca518ebebc7dbfb2da2efb3/2021/01/13/5b3c1a5d464b4b4f7c1d68ee479b1212.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@9ab402e53e53443d1fb6d40f1802603e867b21bc/2021/01/13/8041cc57d7deceafea03e4d1bfb106af.png"></p></li></ul><h1 id="绑定GitHub"><a href="#绑定GitHub" class="headerlink" title="绑定GitHub"></a>绑定GitHub</h1><ol><li>点击<a href="https://chuibi.cn/">https://chuibi.cn/</a>，选择图标使用GitHub账户登录<br><img src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/25/df73aaaabe9712b64dd157d0cb03bb70.png"></li><li>登录后回到主页面，并显示如下蓝框内容<br><img src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/25/c6651010eaba445832297a1b103e1bd5.png"></li></ol><h1 id="填写仓库信息"><a href="#填写仓库信息" class="headerlink" title="填写仓库信息"></a>填写仓库信息</h1><ol><li>获取token<br><img src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/25/73af184774df3678594d35ea2a2ec5a1.png"></li><li>点击下图位置图标<br><img src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/25/3ab515b7381db07e67110f4e7db8f33e.png"></li><li>输入以下信息<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@1c41db8e7b3d38f23bf6aead9e3b26c359735cb7/2021/01/13/c3f33a0bd5cc11f8d5e34886c05239ac.png"></li><li>复制下图蓝框内容，进行下一步</li></ol><h1 id="PicGo图床"><a href="#PicGo图床" class="headerlink" title="PicGo图床"></a>PicGo图床</h1><div class="note warning flat"><p>需要提前安装 <a href="http://nodejs.cn/download/">node.js</a> 否则插件会安装失败！</p></div><p>使用<code>PicGo</code>图床工具，务必先保证上面的<code>浏览器图床</code>测试正常！</p><h2 id="下载与安装"><a href="#下载与安装" class="headerlink" title="下载与安装"></a>下载与安装</h2><p>GitHub项目请戳<a href="https://github.com/Molunerfinn/PicGo">这里</a>，图床工具的下载链接可以在 <code>README </code>中获取。<br>因为国内下载速度很慢，不限速蓝奏云链接戳<a href="https://wws.lanzous.com/i9rmAkd54jg">密码:hvdu</a><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@b71623dc3adf6da956765d00ac7db0f1520e29e4/2021/01/13/67f1e80061842e2bdc6197dd8b3bc150.png"></p><h2 id="PicGo配置"><a href="#PicGo配置" class="headerlink" title="PicGo配置"></a>PicGo配置</h2><ul><li><p><code>插件设置</code>中搜索 <code>web-uploader</code> 并安装：<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@be97e52ea357ff4d9d55915ca1f2c004ac4b95ac/2021/01/13/091b213c734d00e63b968bf0befaf601.png"></p></li><li><p>安装后可以在<code>图床设置</code>中查看：<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@29748b9335bcd6c9b177fbae2bc53f528a510a96/2021/01/13/053c8f14ce633a76fdd16adb650406c8.png"> </p></li><li><p>配置参数如下</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">API地址：http:&#x2F;&#x2F;虚拟主机用户名.m.awhost.cn&#x2F;up.php #简单方法填写获取的链接：https:&#x2F;&#x2F;chuibi.cn&#x2F;up.php?xxxxxx</span><br><span class="line">POST参数名：pic</span><br><span class="line">JSON路径：data.url</span><br></pre></td></tr></table></figure><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><div class="note success flat"><p>👉👉<a href="https://plushine.cn/38834.html#%E7%AE%80%E5%8D%95%E6%96%B9%E6%B3%95">哇！用github+jsDelivr搭建图床真香</a></p></div>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用Vercel加速GitHub Pages</title>
      <link href="2021/01/12/Hexo/Hexo%E4%B8%8EVercel%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2/"/>
      <url>2021/01/12/Hexo/Hexo%E4%B8%8EVercel%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2/</url>
      
        <content type="html"><![CDATA[<h1 id="Vercel"><a href="#Vercel" class="headerlink" title="Vercel"></a>Vercel</h1><p>本人网站一直部署在<code>Github Page</code>上，但由于访问速度非常影响体验，但由于是学生没有额外的开销去使用收费的托管商，于是查了一下发现<code>vercel</code>和<code>Netlify</code>不仅免费而且访问速度也快！</p><div class="checkbox cyan checked"><input type="checkbox" checked="checked"><p>Vercel支持多个开发框架(Next.js,create-react-app,Nuxt.js)</p></div><div class="checkbox red checked"><input type="checkbox" checked="checked"><p>Vercel内置的CI / CD系统会在每次代码更改时触发，推送代码后自动部署</p></div><div class="checkbox yellow checked"><input type="checkbox" checked="checked"><p> 支撑一键导入GitHub/Gitlagb仓库和站点</p></div><div class="checkbox green checked"><input type="checkbox" checked="checked"><p>全球CDN加速</p></div><h1 id="GitHub登录Vercel"><a href="#GitHub登录Vercel" class="headerlink" title="GitHub登录Vercel"></a>GitHub登录Vercel</h1><p>进入Vercel官网：<a href="https://vercel.com/">https://vercel.com/</a> ，依次点击<code> sign up - Continue with GitHub</code><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2021/01/12/1256a9be123fde483bace4fd05e17536.png"></p><div class="note warning flat"><p>注意GitHub账户绑定的主邮箱📪，有可能QQ邮箱会出现无法使用GitHub账号登陆Vercel的情况，推荐将GitHub主邮箱改为谷歌邮箱，不会改可以问下度娘<a href="https://blog.csdn.net/weixin_44170221/article/details/104495373">GitHub更换邮箱（简单粗暴）</a></p></div><h1 id="导入仓库"><a href="#导入仓库" class="headerlink" title="导入仓库"></a>导入仓库</h1><p>选择<code> Import Git Repository</code> 然后<code>Continue</code>输入你仓库的url就行了（https）<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2021/01/12/d128335e72b7e75d773beac2a40389d7.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2021/01/12/bbe2228105097d3454bfd26e310167e8.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2021/01/12/966e48109815be945982e2900c267980.png"></p><div class="note warning flat"><p>导入静态页面仓库之前，需要为你的 Github 安装 Vercel(<code>setting-Application</code>)，此处建议选择 <code>All repositories</code>，意为为所有仓库安装，当然，你也可以选择只为当前仓库安装，也就是 Only select repositories。</p></div><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@d371e6f9b563c89102d09022aecd63be82f4585b/2021/01/13/861d72398058c66d70db423964d998bd.png"></p><div class="note warning flat"><p>下方三个选项保持默认就好，因为 username.github.io 的 master 分支内是本身就已经部署好的静态页面，所以没必要选择特定的框架去再次编译。</p></div><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@b6b66c9dff54ac6b3dd70d5a59fb7c77cb4f9bb2/2021/01/13/dca048cca90e5b41b632ff3a4d6bafe0.png"></p><div class="note warning flat"><p>2020 年 10 月后 github 新建仓库默认分支改为 main，注意更改。</p></div><div class="note success flat"><p>导入之后可以访问，说明部署成功！</p></div><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@b02d4241c7affdff78044a8e57218534c3b6c3a4/2021/01/13/d47665add7ea25d8762b746a4ed9657b.png"></p><h1 id="绑定并解析域名"><a href="#绑定并解析域名" class="headerlink" title="绑定并解析域名"></a>绑定并解析域名</h1><p>点击<code>Settings👉Domains👉</code>输入自己的域名，并在域名提供商控制台进行域名解析（CNAME）。解析完成后即可通过自己的域名访问自己的博客<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2021/01/12/c7174627f5a2b60e758dcc2b89aa5c63.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@02ae6924bf3ff9d12b7aedd388705124cc7e6b73/2021/01/13/5b1c54abc1a42499df581d339c8f6773.png"></p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><div class="note success flat"><p>👉👉<a href="https://akilar.top/posts/812734f8/">使用Vercel来加速Hexo博客</a></p></div>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java👉JDBC</title>
      <link href="2021/01/05/%E5%90%8E%E7%AB%AF/Java/Java_JDBC/"/>
      <url>2021/01/05/%E5%90%8E%E7%AB%AF/Java/Java_JDBC/</url>
      
        <content type="html"><![CDATA[<h1 id="数据库连接"><a href="#数据库连接" class="headerlink" title="数据库连接"></a>数据库连接</h1><h2 id="数据库概述"><a href="#数据库概述" class="headerlink" title="数据库概述"></a>数据库概述</h2><blockquote><p> <strong><em>数据库(DataBase,DB)</em></strong>:指长期保存在计算机的存储设备上，按照一定规则组织起来，可以被各种用户或应用共享的数据集合。<br> <strong><em>数据库管理系统(DataBase Management System，DBMS)</em></strong> :指一种操作和管理数据库的大型软件，用于建立、使用和维护数据库，对数据库进行统一管理和控制，以保证数据库的安全性和完整性。用户通过数据库管理系统访问数据库中的数据。</p></blockquote><p>常见数据库管理系统</p><ul><li>MySQL<br>MySQL是一个关系型数据库管理系统，由瑞典MySQL AB 公司开发，目前属于 Oracle旗下产品。MySQL 是最流行的关系型数据库管理系统之一，在 WEB 应用方面，MySQL是最好的 RDBMS (Relational Database Management System，关系数据库管理系统) 应用软件。</li><li>Orcale<br>Oracle数据库被认为是业界目前比较成功的关系型数据库管理系统。Oracle数据库可以运行在UNIX、Windows等主流操作系统平台，完全支持所有的工业标准，并获得最高级别的ISO标准安全性认证。</li><li>DB2<br>DB2是IBM公司的产品，DB2数据库系统采用多进程多线索体系结构，其功能足以满足大中公司的需要，并可灵活地服务于中小型电子商务解决方案。</li><li>Microsoft SQL Server<br>SQL Server 是Microsoft 公司推出的关系型数据库管理系统。具有使用方便可伸缩性好与相关软件集成程度高等优点。</li></ul><h2 id="SQL语言"><a href="#SQL语言" class="headerlink" title="SQL语言"></a>SQL语言</h2><h3 id="DDL"><a href="#DDL" class="headerlink" title="DDL"></a>DDL</h3><p>Data Definition Language 数据定义语言</p><ul><li>作用:用来定义数据库对象：库、表、列等</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 操作数据库 */</span></span><br><span class="line"><span class="comment">--增 create</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">database</span> 数据库名; <span class="comment">--创建新的数据库</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">database</span> 数据库名 <span class="built_in">character</span> <span class="keyword">set</span> GBK;<span class="comment">--创建新的字符集为GBK的数据库</span></span><br><span class="line"><span class="comment">--查 show</span></span><br><span class="line"><span class="keyword">show</span> <span class="keyword">databases</span>;<span class="comment">--查看DBMS中所有的数据库</span></span><br><span class="line"><span class="keyword">show</span> <span class="keyword">create</span> <span class="keyword">database</span> 数据库名;<span class="comment">--查看数据库的定义信息</span></span><br><span class="line"><span class="comment">--改 alter</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">database</span> 数据库名 <span class="built_in">character</span> <span class="keyword">set</span> utf8;<span class="comment">--把数据库改成utf8字符集</span></span><br><span class="line"><span class="comment">--删 drop</span></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">database</span> 数据库名;<span class="comment">--删除数据库</span></span><br><span class="line"><span class="comment">--其他</span></span><br><span class="line"><span class="keyword">use</span> 数据库名;<span class="comment">--使用数据库</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">database</span>();<span class="comment">--查看当前正在使用的数据库</span></span><br><span class="line"><span class="keyword">flush</span> <span class="keyword">privileges</span>;<span class="comment">--刷新数据库</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 操作表 */</span></span><br><span class="line"><span class="comment">--增 create</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> 表名(<span class="comment">--创建新表</span></span><br><span class="line">字段名<span class="number">1</span> 字段类型(长度) [约束],</span><br><span class="line">字段名<span class="number">2</span> 字段类型(长度) [约束],</span><br><span class="line">...</span><br><span class="line">);</span><br><span class="line"><span class="comment">--查 show</span></span><br><span class="line"><span class="keyword">show</span> <span class="keyword">tables</span>;<span class="comment">--查询数据库中有的表</span></span><br><span class="line"><span class="keyword">show</span> <span class="keyword">create</span> <span class="keyword">table</span> 表名;<span class="comment">--查看表格的创建细节</span></span><br><span class="line">desc 表名;<span class="comment">--查看表的字段信息</span></span><br><span class="line"><span class="comment">--改 alter</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">add</span> 列名 数据类型[约束];<span class="comment">--添加一个列</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">change</span> 旧列名 新列名 新数据类型[约束];<span class="comment">--修改列的列名</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">modify</span> 列名 新数据类型[约束];<span class="comment">--修改列的数据类型</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">drop</span> 列名;<span class="comment">--删除表的列</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 AUTO_INCREMENT=<span class="number">5</span>;<span class="comment">--重新设置自增id</span></span><br><span class="line"><span class="keyword">rename</span> <span class="keyword">table</span> 旧表名 <span class="keyword">to</span> 新表名;<span class="comment">--修改表名</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="built_in">character</span> <span class="keyword">set</span> 字符集;<span class="comment">--修改表的字符集</span></span><br><span class="line"><span class="comment">--删 drop</span></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> 表名;</span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> <span class="keyword">if</span> <span class="keyword">exists</span> 表名;<span class="comment">--如果表存在,则删除;如果不存在,也不会报错.这种语句是MySql特有的语句,其他的数据库都是不支持这种语法的</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="DML"><a href="#DML" class="headerlink" title="DML"></a>DML</h3><p>Data Manipulation Language 数据操作语言</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--增 insert</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> 表名 <span class="keyword">values</span>(字段值<span class="number">1</span>,字段值<span class="number">2</span>, ...);<span class="comment">--全字段插入</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> 表名(字段<span class="number">1</span>) <span class="keyword">values</span>(字段值<span class="number">1</span>);<span class="comment">--部分字段插入</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> 表名 <span class="keyword">values</span>(记录<span class="number">1</span>的所有字段),(记录<span class="number">2</span>的所有字段)...;<span class="comment">--一次性插入多条 数据</span></span><br><span class="line"><span class="comment">--改 update</span></span><br><span class="line"><span class="keyword">update</span> 表名 <span class="keyword">set</span> 列名<span class="number">1</span>=列值<span class="number">1</span>,列名<span class="number">2</span>=列值<span class="number">2</span> ... <span class="keyword">where</span> 列名=值;<span class="comment">--修改操作</span></span><br><span class="line"><span class="keyword">update</span> 表名 <span class="keyword">set</span> 列名<span class="number">1</span>=列值<span class="number">1</span>;<span class="comment">--没有where条件的,会直接修改所有列名的值</span></span><br><span class="line"><span class="keyword">update</span> 表名 <span class="keyword">set</span> 列名<span class="number">1</span> = <span class="keyword">replace</span>(列名<span class="number">1</span>,<span class="string">&#x27;原内容&#x27;</span>,<span class="string">&#x27;要替换的内容&#x27;</span>);<span class="comment">--批量替换字段里的字符串</span></span><br><span class="line"><span class="comment">--删 delete</span></span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> 表名 <span class="keyword">where</span> 列名=值;<span class="comment">--删除表中条件是where的</span></span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> 表名;<span class="comment">--删除表中所有数据，表结构还在，删除后的数据可以找回</span></span><br><span class="line"><span class="keyword">truncate</span> <span class="keyword">table</span> 表名;<span class="comment">--删除表中所有数据,把表直接drop掉，然后再创建一个同样的新表-删除的数据不能找回。该命令会让id重新从1开始自动递增</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="DQL"><a href="#DQL" class="headerlink" title="DQL"></a>DQL</h3><p>Data Query Language 数据查询语言</p><ul><li>作用:用来查询记录（数据）<br>查询语句的顺序<br>书写顺序:select → from →join on → where → group by → having → order by → limit<br>执行顺序:from → join on → where → group by → having → select → order by → limit</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 简单查询 */</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> emp;<span class="comment">--查询所有列</span></span><br><span class="line"><span class="keyword">select</span> empno,ename,job <span class="keyword">from</span> emp;<span class="comment">--查询指定的列</span></span><br><span class="line"><span class="keyword">select</span> empno <span class="keyword">as</span> <span class="string">&#x27;编号&#x27;</span>,ename <span class="keyword">as</span> <span class="string">&#x27;别名&#x27;</span> <span class="keyword">from</span> emp;<span class="comment">--给列起别名(as可以省略可以使用&quot;&quot;,&#x27;&#x27;或者不使用引号)</span></span><br><span class="line"><span class="keyword">select</span> e.empno,e.ename <span class="keyword">from</span> emp <span class="keyword">as</span> e;<span class="comment">--给表起别名,表中的字段也能通过表的别名来调用</span></span><br><span class="line"><span class="comment">/* 条件查询 */</span></span><br><span class="line"><span class="comment">--条件语句 &gt;  &lt;  &gt;=  &lt;=  !=(&lt;&gt;)  =</span></span><br><span class="line"><span class="comment">--and(&amp;&amp;)</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> emp <span class="keyword">where</span> deptno=<span class="number">10</span> <span class="keyword">and</span> sal&gt;<span class="number">2000</span>;<span class="comment">--可以使用&amp;&amp;带代替</span></span><br><span class="line"><span class="comment">--or(||)</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> emp <span class="keyword">where</span> ename=<span class="string">&#x27;smith&#x27;</span> <span class="keyword">or</span> sal=<span class="number">5000</span>;<span class="comment">--可以使用||来代替</span></span><br><span class="line"><span class="comment">--between...and</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="keyword">between</span> <span class="string">&#x27;A&#x27;</span> <span class="keyword">and</span> <span class="string">&#x27;F&#x27;</span>;<span class="comment">--BETWEEN AND作用于字符型的数据的时候,包含第一个边界值,但是不包含第二个边界值</span></span><br><span class="line"><span class="comment">--in(set)</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> emp <span class="keyword">where</span> sal <span class="keyword">in</span>(<span class="number">800</span>,<span class="number">1600</span>);<span class="comment">--in表示包含的意思</span></span><br><span class="line"><span class="comment">--is null  (尽量不要使用,会导致索引失效)</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> emp <span class="keyword">where</span> comm <span class="keyword">is</span> <span class="literal">null</span>;<span class="comment">--对于null的判断不能使用=号</span></span><br><span class="line"><span class="comment">--not</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> emp <span class="keyword">where</span> deptno !=<span class="number">10</span>;</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> emp <span class="keyword">where</span> deptno &lt;&gt;<span class="number">10</span>;</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> emp <span class="keyword">where</span> <span class="keyword">not</span> deptno =<span class="number">10</span>;</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> emp <span class="keyword">where</span> comm <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> emp <span class="keyword">where</span> <span class="keyword">not</span> comm <span class="keyword">is</span> <span class="literal">null</span>;</span><br><span class="line"><span class="comment">--注意</span></span><br><span class="line"><span class="comment">--对于字符型的数据,是严格区分大小写的</span></span><br><span class="line"><span class="comment">--Oracle在任何的平台上都是严格区分字符型数据大小写的</span></span><br><span class="line"><span class="comment">--MySql在Liunx/Unix平台上严格区分字符型数据大小写,但是在window平台上不区分字符型数据大小写</span></span><br><span class="line"><span class="comment">--可以使用BINARY关键字,让MySql在window平台上也严格字符字符型数据的大小写</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> emp <span class="keyword">where</span> <span class="built_in">binary</span> ename=<span class="string">&#x27;smith&#x27;</span>;</span><br><span class="line"><span class="comment">/* 模糊查询 */</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="keyword">like</span> <span class="string">&#x27;_M%&#x27;</span>;<span class="comment">-- _ ：任意一个字母 查询第二个字母是m的人</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="keyword">like</span> <span class="string">&#x27;%m%&#x27;</span>;<span class="comment">-- %：任意0~n个字母 查询名字包含m的人</span></span><br><span class="line"><span class="comment">/* 字段控制查询 */</span></span><br><span class="line"><span class="keyword">select</span> salary*<span class="number">12</span> <span class="keyword">as</span> <span class="string">&#x27;年薪&#x27;</span> <span class="keyword">from</span> emp;<span class="comment">--可以使用算术表达式将月薪以年薪的形式显示</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> deptno <span class="keyword">from</span> emp;<span class="comment">--去掉重复值查询</span></span><br><span class="line"><span class="keyword">select</span> *,sal+<span class="keyword">ifnull</span>(comm,<span class="number">0</span>) <span class="keyword">from</span> emp;</span><br><span class="line"><span class="comment">/* 排序 */</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> sal <span class="keyword">asc</span>;<span class="comment">--升序排序,可默认不写</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> sal <span class="keyword">desc</span>;<span class="comment">--降序排序</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> sal <span class="keyword">desc</span>,empno <span class="keyword">asc</span>;<span class="comment">--按月薪降序排序，如果月薪相同，按编号升序排序</span></span><br><span class="line"><span class="comment">/* 单行函数 */</span></span><br><span class="line"><span class="comment">--year(日期字段) 将日期格式化为年(月日时分秒同理)</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">year</span>(<span class="keyword">now</span>())<span class="comment">--输出今年</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">year</span>(<span class="string">&#x27;2018-01-01&#x27;</span>);<span class="comment">--2018</span></span><br><span class="line"><span class="comment">--substr(被截取字段名称,起启下标,截取长度) 截取字符串的函数</span></span><br><span class="line"><span class="keyword">select</span> ename,<span class="keyword">substr</span>(ename,<span class="number">2</span>,<span class="number">1</span>) <span class="keyword">from</span> emp;</span><br><span class="line"><span class="comment">--length(str) 返回字符型数据的长度</span></span><br><span class="line"><span class="keyword">select</span> ename,<span class="keyword">length</span>(ename) <span class="keyword">from</span> emp;</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> emp <span class="keyword">where</span> <span class="keyword">length</span>(ename)=<span class="number">5</span>;<span class="comment">--查询名字的长是5的员工</span></span><br><span class="line"><span class="comment">--lower(str) 把字符型数据转换为小写的字符</span></span><br><span class="line"><span class="keyword">select</span> ename,<span class="keyword">lower</span>(ename) <span class="keyword">from</span> emp;</span><br><span class="line"><span class="comment">--upper(str) 把字符型数据转换为大写的字符</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> emp <span class="keyword">where</span> <span class="built_in">binary</span> ename=<span class="keyword">upper</span>(<span class="string">&#x27;smith&#x27;</span>);</span><br><span class="line"><span class="comment">/* 聚合函数 */</span></span><br><span class="line"><span class="comment">--count() 统计指定列不为NULL的记录行数</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">count</span>(*) <span class="keyword">from</span> emp;</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">count</span>(*) <span class="keyword">from</span> emp <span class="keyword">where</span> sal+<span class="keyword">ifnull</span>(comm,<span class="number">0</span>)&gt;<span class="number">2500</span></span><br><span class="line"><span class="comment">--max() 计算指定列的最大值，如果指定列是字符串类型，那么使用字符串排序运算</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">max</span>(sal) <span class="keyword">from</span> emp;</span><br><span class="line"><span class="comment">--min() 计算指定列的最小值，如果指定列是字符串类型，那么使用字符串排序运算</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">min</span>(sal) <span class="keyword">from</span> emp;</span><br><span class="line"><span class="comment">--sum() 计算指定列的数值和，如果指定列类型不是数值类型，那么计算结果为0</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">sum</span>(sal) <span class="keyword">from</span> emp;</span><br><span class="line"><span class="comment">--avg() 计算指定列的平均值，如果指定列类型不是数值类型，那么计算结果为0</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">avg</span>(sal) <span class="keyword">from</span> emp;</span><br><span class="line"><span class="comment">/* 分组查询 */</span></span><br><span class="line"><span class="comment">--分组查询</span></span><br><span class="line"><span class="keyword">select</span> deptno,<span class="keyword">sum</span>(sal) <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> deptno;</span><br><span class="line"><span class="comment">--HAVING子句</span></span><br><span class="line"><span class="keyword">select</span> deptno,<span class="keyword">sum</span>(sal) <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> deptno <span class="keyword">having</span> <span class="keyword">sum</span>(sal)&gt;<span class="number">9000</span>;</span><br><span class="line"><span class="comment">--having与where的区别:where是先筛选后分组;having是先分组后筛选</span></span><br><span class="line"><span class="comment">/* LIMIT */</span></span><br><span class="line"><span class="comment">--分页查询</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> emp <span class="keyword">limit</span> <span class="number">5</span>;<span class="comment">--查询5行记录，默认从0开始</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> emp <span class="keyword">limit</span> <span class="number">0</span>,<span class="number">5</span>;<span class="comment">--查询5行记录，起始行从0开始</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> emp <span class="keyword">limit</span> <span class="number">3</span>,<span class="number">10</span>;<span class="comment">--查询10行记录，起始行从3开始</span></span><br><span class="line"><span class="comment">--注意:LIMIT只能在MySql和SqlServer中有效</span></span><br><span class="line"><span class="comment">/* 多表查询(跨表查询) */</span></span><br><span class="line"><span class="comment">--联合查询</span></span><br><span class="line">  <span class="comment">--说明:合并结果集就是把两个select语句的查询结果合并到一起,被合并的两个结果：列数、列类型必须相同</span></span><br><span class="line">  <span class="comment">--union 去除重复记录</span></span><br><span class="line">  <span class="comment">--union all 不去除重复记录</span></span><br><span class="line"><span class="comment">--连接查询</span></span><br><span class="line">  <span class="comment">--内连接</span></span><br><span class="line">    <span class="comment">--等值连接:建立在父子表关系上,用等号来连接两个表</span></span><br><span class="line"><span class="keyword">select</span> e.empno,e.ename,e.job,e.sal,d.deptno,d.dname</span><br><span class="line">  <span class="keyword">from</span> emp e,dept d</span><br><span class="line">  <span class="keyword">where</span> e.deptno=d.deptno;<span class="comment">--SQL1992语法</span></span><br><span class="line">  <span class="keyword">select</span> e.empno,e.ename,e.job,e.sal,d.deptno,d.dname</span><br><span class="line">  <span class="keyword">from</span> emp e</span><br><span class="line">  <span class="keyword">inner</span> <span class="keyword">join</span> dept d <span class="keyword">on</span>(e.deptno=d.deptno);<span class="comment">--SQL1999语法</span></span><br><span class="line">  <span class="comment">--使用内连接的时候,inner可以忽略</span></span><br><span class="line"><span class="comment">--非等值连接:两个表之间没有父子关系,用非等号来连接两个表</span></span><br><span class="line"><span class="keyword">select</span> e.empno,e.ename,e.sal,s.grade,s.losal,s.hisal</span><br><span class="line">  <span class="keyword">from</span> emp e,salgrade s</span><br><span class="line">  <span class="keyword">where</span> e.sal <span class="keyword">between</span> s.losal <span class="keyword">and</span> s.hisal;<span class="comment">--SQL1992语法</span></span><br><span class="line">  <span class="keyword">select</span> e.empno,e.ename,e.sal,s.grade,s.losal,s.hisal</span><br><span class="line">  <span class="keyword">from</span> emp e</span><br><span class="line">  <span class="keyword">join</span> salgrade s <span class="keyword">on</span> e.sal <span class="keyword">between</span> s.losal <span class="keyword">and</span> s.hisal<span class="comment">--SQL1999语法</span></span><br><span class="line">  <span class="comment">--自连接:使用别名将一个表虚拟成两个表(父子表),然后再这两个表上面做等值连接</span></span><br><span class="line">  <span class="keyword">select</span> e.empno <span class="string">&#x27;员工编号&#x27;</span>,e.ename <span class="string">&#x27;员工姓名&#x27;</span>,m.empno <span class="string">&#x27;经理编号&#x27;</span>,m.ename <span class="string">&#x27;经理姓名&#x27;</span></span><br><span class="line">  <span class="keyword">from</span> emp e,emp m</span><br><span class="line">  <span class="keyword">where</span> e.mgr=m.empno &amp;&amp; m.empno=<span class="number">7698</span><span class="comment">--SQL1992语法</span></span><br><span class="line">  <span class="keyword">select</span> e.empno <span class="string">&#x27;员工编号&#x27;</span>,e.ename <span class="string">&#x27;员工姓名&#x27;</span>,m.empno <span class="string">&#x27;经理编号&#x27;</span>,m.ename <span class="string">&#x27;经理姓名&#x27;</span></span><br><span class="line">  <span class="keyword">from</span> emp e</span><br><span class="line">  <span class="keyword">join</span> emp m <span class="keyword">on</span>(e.mgr=m.empno)</span><br><span class="line">  <span class="keyword">where</span> m.empno=<span class="number">7698</span><span class="comment">--SQL1999语法</span></span><br><span class="line">  <span class="comment">--外连接</span></span><br><span class="line"><span class="comment">--左外连接(LEFT OUTER JOIN):左外连接可以把左表中不满足对应关系的数据查询出来</span></span><br><span class="line"><span class="keyword">select</span> e.empno,e.ename,e.job,e.sal,d.deptno,d.dname</span><br><span class="line">  <span class="keyword">from</span> emp e</span><br><span class="line">  <span class="keyword">left</span> <span class="keyword">outer</span> <span class="keyword">join</span> dept d <span class="keyword">on</span> e.deptno=d.deptno;<span class="comment">--使用外连接的时候,outer可以忽略</span></span><br><span class="line">  <span class="keyword">select</span> e.empno,e.ename,e.job,e.sal,d.deptno,d.dname</span><br><span class="line">  <span class="keyword">from</span> dept d</span><br><span class="line">  <span class="keyword">left</span> <span class="keyword">join</span> emp e <span class="keyword">on</span> e.deptno=d.deptno;<span class="comment">--左表的位置是相对的</span></span><br><span class="line">  <span class="comment">--右外连接(RIGHT OUTER JOIN):右外连接可以把右表中不满足对应关系的数据查询出来</span></span><br><span class="line">  <span class="keyword">select</span> e.empno,e.ename,e.job,e.sal,d.deptno,d.dname</span><br><span class="line">  <span class="keyword">from</span> emp e</span><br><span class="line">  <span class="keyword">right</span> <span class="keyword">join</span> dept d <span class="keyword">on</span> e.deptno=d.deptno;</span><br><span class="line">  <span class="comment">--全外连接(FULL OUTER JOIN):可以把左右两个表中不满足对应关系的数据都查询出来</span></span><br><span class="line">  <span class="keyword">select</span> e.empno,e.ename,e.job,e.sal,d.deptno,d.dname</span><br><span class="line">  <span class="keyword">from</span> emp e</span><br><span class="line">  <span class="keyword">full</span> <span class="keyword">join</span> dept d <span class="keyword">on</span> e.deptno=d.deptno;<span class="comment">--Oracle支持全外连接,MySql不支持全外连接</span></span><br><span class="line">  <span class="comment">--join的更多用法见下表</span></span><br><span class="line"><span class="comment">--子查询</span></span><br><span class="line">    <span class="comment">--1.用来给主查询提供查询条件或查询数据而首先执行的一个查询</span></span><br><span class="line">    <span class="comment">--2.主查询使用子查询的结果</span></span><br><span class="line">    <span class="comment">--子查询必须要放在()里面</span></span><br><span class="line">  <span class="comment">--分类</span></span><br><span class="line">    <span class="comment">--出现在where中的子查询,用来给查询提供查询条件的</span></span><br><span class="line">    <span class="keyword">select</span> * <span class="keyword">from</span> emp</span><br><span class="line">    <span class="keyword">where</span> sal&gt;(<span class="keyword">select</span> <span class="keyword">max</span>(sal) <span class="keyword">from</span> emp <span class="keyword">where</span> deptno=<span class="number">30</span>);<span class="comment">--查询高于30部门所有人工资的员工信息</span></span><br><span class="line">    <span class="comment">--出现下from后面的子查询,用来给主查询提供查询数据的(all,any)</span></span><br><span class="line">    <span class="keyword">select</span> * <span class="keyword">from</span> emp</span><br><span class="line">    <span class="keyword">where</span> sal&gt;<span class="keyword">all</span>(<span class="keyword">select</span> sal <span class="keyword">from</span> emp);<span class="comment">--查询高于30部门所有人工资的员工信息</span></span><br><span class="line">    <span class="comment">--(了解)出现在查询列表中的子查询,功能类似于外连接的效果</span></span><br></pre></td></tr></table></figure><h3 id="常用函数"><a href="#常用函数" class="headerlink" title="常用函数"></a>常用函数</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 数据函数 */</span></span><br><span class="line"><span class="comment">-- abs() 取绝对值</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">abs</span>(<span class="number">-1</span>); <span class="comment">-- 1</span></span><br><span class="line"><span class="comment">-- round() 用于数据的四舍五入</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">round</span>(<span class="number">13.26723</span>,<span class="number">2</span>);<span class="comment">-- 结果13.27</span></span><br><span class="line"><span class="comment">--rand() 生成随机数</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">rand</span>();<span class="comment">--生成一个0到1之间的随机数</span></span><br><span class="line"><span class="comment">-- ceiling() 向上取整</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">ceiling</span>(<span class="number">2.5</span>); <span class="comment">-- 3</span></span><br><span class="line"><span class="comment">-- floor() 向下取整</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">floor</span>(<span class="number">2.5</span>); <span class="comment">-- 2</span></span><br><span class="line"><span class="comment">-- sign() 符号函数: 负数返回-1,正数返回1,0返回0</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">sign</span>(<span class="number">2</span>);  <span class="comment">-- 1</span></span><br><span class="line"><span class="comment">/* 字符串函数 */</span></span><br><span class="line"><span class="comment">-- char_length(str) 返回字符串包含的字符数</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">char_length</span>(<span class="string">&#x27;abcdef&#x27;</span>); <span class="comment">-- 6</span></span><br><span class="line"><span class="comment">-- concat() 合并字符串,参数可以有多个</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">concat</span>(<span class="string">&#x27;我爱&#x27;</span>,<span class="string">&#x27;北京&#x27;</span>,<span class="string">&#x27;天安门&#x27;</span>); <span class="comment">-- 我爱北京天安门</span></span><br><span class="line"><span class="comment">-- insert() 替换字符串,从某个位置开始替换某个长度</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">insert</span>(<span class="string">&#x27;一二三四五六七&#x27;</span>,<span class="number">1</span>,<span class="number">3</span>,<span class="string">&#x27;八八八&#x27;</span>); <span class="comment">-- 八八八四五六七</span></span><br><span class="line"><span class="comment">-- lower() 把字符型数据转换为小写的字符</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">lower</span>(<span class="string">&#x27;Manaphy&#x27;</span>); <span class="comment">-- manaphy</span></span><br><span class="line"><span class="comment">-- upper() 把字符型数据转换为大写的字符</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">upper</span>(<span class="string">&#x27;Manaphy&#x27;</span>); <span class="comment">-- MANAPHY</span></span><br><span class="line"><span class="comment">-- left() 从左边截取字符串</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">left</span>(<span class="string">&#x27;Manaphy&#x27;</span>,<span class="number">3</span>); <span class="comment">-- Man</span></span><br><span class="line"><span class="comment">-- right() 从右边截取字符串</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">right</span>(<span class="string">&#x27;Manaphy&#x27;</span>,<span class="number">3</span>); <span class="comment">-- phy</span></span><br><span class="line"><span class="comment">-- replace() 替换字符串</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">replace</span>(<span class="string">&#x27;一二三四五六七&#x27;</span>,<span class="string">&#x27;四五&#x27;</span>,<span class="string">&#x27;八九&#x27;</span>); <span class="comment">-- 一二三八九六七</span></span><br><span class="line"><span class="comment">-- substr(被截取字段名称,起启下标,截取长度) 截取字符串的函数</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">substr</span>(<span class="string">&#x27;一二三四五六七&#x27;</span>,<span class="number">1</span>,<span class="number">3</span>); <span class="comment">-- 一二三</span></span><br><span class="line"><span class="comment">-- reverse() 反转字符串</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">reverse</span>(<span class="string">&#x27;一二三四五六七&#x27;</span>); <span class="comment">-- 七六五四三二一</span></span><br><span class="line"><span class="comment">/* 日期函数 */</span></span><br><span class="line"><span class="comment">-- year(日期字段) 将日期格式化为年(月日时分秒同理)</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">year</span>(<span class="keyword">now</span>());<span class="comment">-- 输出今年</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">year</span>(<span class="string">&#x27;2018-01-01&#x27;</span>);<span class="comment">-- 2018</span></span><br><span class="line"><span class="comment">-- 获取当前日期</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">current_date</span>();</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">curdate</span>();</span><br><span class="line"><span class="comment">-- 获取当前日期和时间</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">now</span>();</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">localtime</span>();</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">sysdate</span>();</span><br><span class="line"><span class="comment">-- 获取当前时间</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">curtime</span>();</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">current_time</span>();</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="DCL"><a href="#DCL" class="headerlink" title="DCL"></a>DCL</h3><p>Data Control Language 数据控制语言</p><ul><li>作用:用来定义访问权限和安全级别</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 实体完整性 */</span></span><br><span class="line"><span class="comment">--主键约束 primary key 说明:每个表中要有一个主键, 数据唯一, 且不能为null</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> stu(</span><br><span class="line"><span class="keyword">id</span> <span class="built_in">int</span> primary <span class="keyword">key</span></span><br><span class="line">);<span class="comment">--创建表时指定主键</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> stu(</span><br><span class="line"><span class="keyword">id</span> <span class="built_in">int</span>,</span><br><span class="line"><span class="keyword">name</span> <span class="built_in">varchar</span>(<span class="number">10</span>),</span><br><span class="line">primary <span class="keyword">key</span>(<span class="keyword">id</span>,<span class="keyword">name</span>)</span><br><span class="line">);<span class="comment">--联合主键,创建了两个列作为主键</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> stu(</span><br><span class="line"><span class="keyword">id</span> <span class="built_in">int</span>,</span><br><span class="line"><span class="keyword">name</span> <span class="built_in">varchar</span>(<span class="number">10</span>)</span><br><span class="line">);</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> stu <span class="keyword">add</span> primary <span class="keyword">key</span>(<span class="keyword">id</span>);</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> stu <span class="keyword">modify</span> <span class="keyword">id</span> <span class="built_in">int</span> primary <span class="keyword">key</span>;<span class="comment">--在已经有表的情况下使用</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--唯一约束 unique 说明:数据不能重复</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> stu(</span><br><span class="line"><span class="keyword">id</span> <span class="built_in">int</span> primary <span class="keyword">key</span>,</span><br><span class="line"><span class="keyword">name</span> <span class="built_in">varchar</span>(<span class="number">50</span>) <span class="keyword">unique</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">--自动增长列</span></span><br><span class="line">  <span class="comment">--auto_increment(mysql)</span></span><br><span class="line">  <span class="comment">--identity(sqlserver)</span></span><br><span class="line">  <span class="comment">--sequence(oracle)</span></span><br><span class="line">  <span class="comment">--说明:给主键添加自动增长的数值,列只能是整数类型</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> stu(</span><br><span class="line"><span class="keyword">id</span> <span class="built_in">int</span> primary <span class="keyword">key</span> auto_increment</span><br><span class="line">);<span class="comment">--mysql的方式</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 域完整性 */</span></span><br><span class="line"><span class="comment">--数据类型</span></span><br><span class="line">  <span class="comment">--数值类型:tinyint(1字节) int(4字节) bigint(8字节) folat(4字节) double(8字节) decimal</span></span><br><span class="line">  <span class="comment">--日期类型</span></span><br><span class="line">date<span class="comment">--1000-01-01/9999-12-31</span></span><br><span class="line">datetime<span class="comment">--1000-01-01 00:00:00/9999-12-31 23:59:59</span></span><br><span class="line">timestamp<span class="comment">--1970-01-01 00:00:00/2038 结束时间是第 2147483647(2^31-1)秒，北京时间 2038-1-19 11:14:07，格林尼治时间 2038年1月19日 凌晨 03:14:07</span></span><br><span class="line">time<span class="comment">--&#x27;-838:59:59&#x27;/&#x27;838:59:59&#x27; (±35天)</span></span><br><span class="line">year<span class="comment">--1901/2155</span></span><br><span class="line">  <span class="comment">--字符串类型:char(定长字符串) varchar(变长字符串) binary varbinary text(长文本数据) enum set</span></span><br><span class="line"><span class="comment">--非空约束</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> stu(</span><br><span class="line"><span class="keyword">id</span> <span class="built_in">int</span> primary <span class="keyword">key</span>,</span><br><span class="line"><span class="keyword">name</span> <span class="built_in">varchar</span>(<span class="number">10</span>) <span class="keyword">not</span> <span class="literal">null</span></span><br><span class="line">);</span><br><span class="line"><span class="comment">--默认值约束</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> stu(</span><br><span class="line"><span class="keyword">id</span> <span class="built_in">int</span> primary <span class="keyword">key</span>,</span><br><span class="line">sex <span class="built_in">varchar</span>(<span class="number">2</span>) <span class="keyword">default</span> <span class="string">&#x27;男&#x27;</span></span><br><span class="line">);<span class="comment">--默认是男</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> stu(<span class="keyword">id</span>) <span class="keyword">values</span>(<span class="number">1</span>);<span class="comment">--默认是男</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> stu <span class="keyword">values</span>(<span class="number">2</span>,<span class="keyword">default</span>);<span class="comment">--默认是男</span></span><br><span class="line"><span class="keyword">insert</span> unto stu <span class="keyword">values</span>(<span class="number">3</span>,<span class="literal">null</span>);<span class="comment">--此处是null</span></span><br><span class="line"><span class="comment">--check约束</span></span><br><span class="line"><span class="keyword">check</span>(sex=<span class="string">&#x27;男&#x27;</span> <span class="keyword">or</span>  sex=<span class="string">&#x27;女&#x27;</span>)<span class="comment">--（mysql不支持）</span></span><br><span class="line"><span class="comment">/* 引用完整性 */</span></span><br><span class="line"><span class="comment">--外键约束</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 左表 <span class="keyword">add</span> <span class="keyword">foreign</span> <span class="keyword">key</span>(左表的某个字段) <span class="keyword">references</span> 右表(主键);</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> 表名(</span><br><span class="line"><span class="keyword">id</span> <span class="built_in">int</span> primary <span class="keyword">key</span>,</span><br><span class="line"><span class="keyword">name</span> <span class="built_in">varchar</span>(<span class="number">20</span>),</span><br><span class="line">classno <span class="built_in">bigint</span>,</span><br><span class="line"><span class="keyword">foreign</span> <span class="keyword">key</span>(classno) <span class="keyword">references</span> tb_class(classno);</span><br><span class="line">  <span class="comment">--注意</span></span><br><span class="line"><span class="comment">--1.从表的列引用了主表的主键,那么该列就称为外键</span></span><br><span class="line"><span class="comment">--2.外键的名字可以不相同</span></span><br><span class="line"><span class="comment">--3.外键的数据类型必须与主表中主键的数据类型完全相同</span></span><br><span class="line"><span class="comment">--4.外键可以是null值</span></span><br><span class="line"><span class="comment">/* 表与表之间的关系 */</span></span><br><span class="line"><span class="comment">--1.一对多: 一张表中的一条记录再另一张表中出现多次</span></span><br><span class="line"><span class="comment">--2.多对多: 要想两张表之间实现多对多的关系,必须有一张中间表,通过中间表创建与两张表的外键约束,实现多个一对多,使用这种方式创建外键约束,非常适合实现多个一对多。</span></span><br><span class="line"><span class="comment">--3.一对一:一张表里的记录,在另外一张表里只能出现一次.表和表之间的关系必须通过外键来创建,但是外键一创建就是一对多,因此在从表里将外键设置唯一性约束,实现一对一</span></span><br></pre></td></tr></table></figure><h2 id="JDBC"><a href="#JDBC" class="headerlink" title="JDBC"></a>JDBC</h2><p><a href="https://blog.csdn.net/qq_22172133/article/details/81266048">JDBC使用详解</a><br><a href="https://www.cnblogs.com/progor/p/9096463.html">JDBC的基本使用</a></p><pre><code>JDBC全称Java Database ConnectivityJDBC可以通过载入不同的数据库的“驱动程序”而与不同的数据库进行连接。</code></pre><p>JDBC优点:</p><ul><li>使用的驱动不同，即可连接不同的数据库。</li><li>使用同一套操作来操作不同的数据库</li><li>如果每一个数据库java都制订一套连接方式，那么当不同的数据库更新的时候，java也需要更新自己的代码，而使用jdbc，使用同一套代码来操作，使用不同的驱动程序（驱动程序由数据库厂商提供）来连接，这使得可以连接不同的数据库。</li></ul><h2 id="JDBC访问步骤"><a href="#JDBC访问步骤" class="headerlink" title="JDBC访问步骤"></a>JDBC访问步骤</h2><ul><li><strong><em>加载并注册数据库驱动（导入驱动包<code>sqljdbc4.jar</code>)</em></strong></li><li><strong><em>通过<code>DriverManager</code>获取数据库连接</em></strong></li><li><strong><em>通过<code>Connection</code>对象获取<code>Statement</code>对象</em></strong></li><li><strong><em>使用Statement执行<code>SQL</code>语句</em></strong></li><li><strong><em>操作<code>ResultSet</code>结果集</em></strong></li><li><strong><em>关闭资源，释放资源</em></strong></li></ul><h2 id="导入驱动"><a href="#导入驱动" class="headerlink" title="导入驱动"></a>导入驱动</h2><ul><li>在对应的数据库厂商网站获取对应的jar包</li><li>将对应的jar包添加到引用。<br>在eclipse中可以将jar包导入一个<code>文件夹</code>后，右键<code>Build Path</code> -&gt; <code>add to path</code>就可以将jar包添加到当前项目引用的库里面。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/03/33c99dda93535d189da51d0348a48583.png"></li></ul><h2 id="JDBC实例"><a href="#JDBC实例" class="headerlink" title="JDBC实例"></a>JDBC实例</h2><p>在SQLServer数据库系统创建了一个<code>Student数据库</code>，数据库有一个<code>stu表</code><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/03/57787c1bb14d5ffc2a0df2170120789a.png"><br>stu表中数据如下：<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/03/181baf3bf37103f87daf6a0fcb93a615.png"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> JDBC_01;</span><br><span class="line"><span class="keyword">import</span> java.sql.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JDBC_01</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">Statement stmt=<span class="keyword">null</span>;</span><br><span class="line">ResultSet rs=<span class="keyword">null</span>;</span><br><span class="line">Connection conn=<span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* MySQL和SQLServer加载有以下不同</span></span><br><span class="line"><span class="comment">   1.MySQL加载驱动</span></span><br><span class="line"><span class="comment">   Class.forName(&quot;com.mysql.jdbc.Driver&quot;);</span></span><br><span class="line"><span class="comment">   2.通过DriverManager获取数据库连接</span></span><br><span class="line"><span class="comment">   String url=&quot;jdbc:mysql://localhost:3306/Student?charaterEncoding=utf-8&quot;;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">//*****************************************************************************************88</span></span><br><span class="line"><span class="comment">//1.加载驱动SQL server</span></span><br><span class="line">Class.forName(<span class="string">&quot;com.microsoft.sqlserver.jdbc.SQLServerDriver&quot;</span>);</span><br><span class="line">System.out.println(<span class="string">&quot;1.加载成功&quot;</span>);</span><br><span class="line"><span class="comment">//2.通过DriverManager获取数据库连接</span></span><br><span class="line"><span class="comment">//Student为数据库名</span></span><br><span class="line">String url=<span class="string">&quot;jdbc:sqlserver://localhost:1433;DatabaseName=Student&quot;</span>;</span><br><span class="line">String username=<span class="string">&quot;sa&quot;</span>;</span><br><span class="line">String password=<span class="string">&quot;123456&quot;</span>;</span><br><span class="line">conn=DriverManager.getConnection(url,username,password);</span><br><span class="line">    System.out.println(<span class="string">&quot;2.连接成功&quot;</span>);</span><br><span class="line"><span class="comment">//3.通过Connection对象获取Statement对象</span></span><br><span class="line">stmt=conn.createStatement();</span><br><span class="line">System.out.println(<span class="string">&quot;3.成功获取Statement对象&quot;</span>);</span><br><span class="line"><span class="comment">//4.使用Statement执行SQL语句</span></span><br><span class="line">String sql=<span class="string">&quot;select * from stu&quot;</span>; <span class="comment">//从stu表中查询</span></span><br><span class="line">rs=stmt.executeQuery(sql);</span><br><span class="line">System.out.println(<span class="string">&quot;4.执行SQL结果如下&quot;</span>+<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"><span class="comment">//5.操作ResultSet结果集</span></span><br><span class="line">System.out.println(<span class="string">&quot;ID|name|sex&quot;</span>);</span><br><span class="line"><span class="keyword">while</span>(rs.next()) &#123;</span><br><span class="line"><span class="keyword">int</span> id=rs.getInt(<span class="string">&quot;ID&quot;</span>);</span><br><span class="line">String name=rs.getString(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">String sex=rs.getString(<span class="string">&quot;sex&quot;</span>);</span><br><span class="line">System.out.println(id+<span class="string">&quot;|&quot;</span>+name+<span class="string">&quot;|&quot;</span>+sex+<span class="string">&quot;|&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">catch</span>(ClassNotFoundException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;<span class="keyword">finally</span> &#123;   <span class="comment">//释放资源，反着关闭</span></span><br><span class="line"><span class="keyword">if</span>(rs!=<span class="keyword">null</span>) &#123;</span><br><span class="line">rs.close();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(stmt!=<span class="keyword">null</span>) &#123;</span><br><span class="line">stmt.close();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(conn!=<span class="keyword">null</span>) &#123;</span><br><span class="line">conn.close();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>执行结果如下：<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/03/b0204f27e029fadb8fdaddc30cfd035b.png"></p><h2 id="详细介绍"><a href="#详细介绍" class="headerlink" title="详细介绍"></a>详细介绍</h2><ul><li><p><strong>加载数据库驱动——Driver接口</strong><br>Driver接口由数据库厂家提供，作为java开发人员，只需要使用Driver接口就可以了。在编程中要连接数据库，必须先装载特定厂商的数据库驱动程序，不同的数据库有不同的装载方法。</p><pre><code>  Class.forName(&quot;com.mysql.jdbc.Driver&quot;); //MySQL  Class.forName(&quot;com.microsoft.jdbc.sqlserver.SQLServerDriver&quot;); //SQLServer  Class.forName(&quot;oracle.jdbc.driver.OracleDriver&quot;); //Oracle</code></pre></li><li><p><strong>建立连接——Connection接口</strong><br>客户端与数据库所有交互都是通过<code>connection对象</code>完成的<br>使用DriverManager来获取<br><code>URL</code>用于标识数据库的位置，程序员通过URL地址告诉JDBC程序连接哪个数据库，URL的写法为：</p><pre><code>  String url=jdbc:mysql:［］//localhost:3306/数据库名 ?参数名：参数值  url=jdbc:oracle:thin:@localhost:1521:database   //Oracle  url=jdbc:microsoft:sqlserver://localhost:1433; DatabaseName=database //SQLServer      url=jdbc:mysql://localhost:3306/database   //MySQL  Connection conn = DriverManager.getConnection(url,user,pass); </code></pre></li></ul><table><thead><tr><th align="center">DriverManager类常用方法</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center"><strong>registerDriver(Driver driver)</strong></td><td align="center">用于向DriverManager中注册给定的JDBC驱动程序</td></tr><tr><td align="center"><strong>getConnection(String url,String user,String password)</strong></td><td align="center">用于建立和数据库的连接，并返回表示连接的Connction对象</td></tr></tbody></table><hr><table><thead><tr><th>Connection常用方法</th><th>说明</th></tr></thead><tbody><tr><td><strong>createStatement()</strong></td><td>创建向数据库发送sql的statement对象。</td></tr><tr><td><strong>prepareStatement(sql)</strong></td><td>创建向数据库发送预编译sql的PrepareSatement对象。</td></tr><tr><td>prepareCall(sql)</td><td>创建执行存储过程的callableStatement对象。</td></tr><tr><td>setAutoCommit(boolean autoCommit)</td><td>设置事务是否自动提交。</td></tr><tr><td>commit()</td><td>在链接上提交事务。</td></tr><tr><td>rollback()</td><td>在此链接上回滚事务。</td></tr><tr><td>getMetaData()</td><td>用于返回表示数据库的元数据的DatabaseMetaData对象</td></tr></tbody></table><ul><li><strong>执行SQL语句——Statement接口</strong><br>用于执行静态SQL语句并返回它所生成结果的对象。<br>三种Statement类：</li></ul><ol><li> <strong>Statement</strong>：由createStatement创建，用于发送简单的SQL语句（不带参数）。</li><li> <strong>PreparedStatement</strong> ：继承自Statement接口，由preparedStatement创建，用于发送含有一个或多个参数的SQL语句。PreparedStatement对象比Statement对象的效率更高，并且可以防止SQL注入，所以我们一般都使用PreparedStatement。</li><li> <strong>CallableStatement</strong>：继承自PreparedStatement接口，由方法prepareCall创建，用于调用存储过程。</li></ol><pre><code>    Statement st = conn.createStatement(); //获取用于向数据库发送sql语句的statement    StiString sql=&quot;select * from stu&quot;;    st.executeQuery(sql);//向数据库发送sql</code></pre><table><thead><tr><th>Statement对象常用方法</th><th>说明</th></tr></thead><tbody><tr><td>executeQuery(String sql)</td><td>用于向数据发送查询语句,返回ResultSet结果集。</td></tr><tr><td>executeUpdate(String sql)</td><td>用于向数据库发送insert、update或delete语句,返回更新的行数</td></tr><tr><td>execute(String sql)</td><td>用于向数据库发送任意sql语句  ,返回是否有结果集</td></tr><tr><td>addBatch(String sql)</td><td>把多条sql语句放到一个批处理中。</td></tr><tr><td>executeBatch()</td><td>向数据库发送一批sql语句执行。</td></tr></tbody></table><p>  PreperedStatement是Statement的孩子，它的实例对象可以通过调用：</p><pre><code>    PreperedStatement st = conn.preparedStatement()    StiString sql=&quot;select * from users where name=? and password=?&quot;&quot;;    st=conn.preparedStatement(sql);    st.setString(2,password);    st.executeQuery();</code></pre><ul><li><p>Statement会使数据库频繁编译SQL，可能造成数据库缓冲区溢出。PreparedStatement 可对SQL进行预编译，从而提高数据库的执行效率。</p></li><li><p>并且PreperedStatement对于sql中的参数，允许使用占位符的形式进行替换，简化sql语句的编写。</p></li><li><p>** 获取结果——ResultSet接口**<br>Jdbc程序中的<code>ResultSet</code>用于代表Sql语句的执行结果。Resultset封装执行结果时，采用的类似于表格的方式，ResultSet  对象维护了一个<code>指向表格数据行的游标</code>，初始的时候，游标在第一行之前，调用<code>ResultSet.next()  </code>方法，可以使游标指向具体的数据行，进行调用方法获取该行的数据。</p></li></ul><p>1.<strong>获取行</strong><br>ResultSet提供了对结果集进行滚动的方法：</p><pre><code>    next()：移动到下一行    Previous()：移动到前一行    absolute(int row)：移动到指定行    beforeFirst()：移动resultSet的最前面。    afterLast() ：移动到resultSet的最后面。</code></pre><p>2.<strong>获取值</strong><br>ResultSet既然用于封装执行结果的，所以该对象提供的都是用于获取数据的get方法：</p><ul><li>获取任意类型的数据<pre><code>  getObject(int index)  getObject(string columnName)</code></pre></li><li>获取指定类型的数据，例如：<pre><code>  getString(int index)  getString(String columnName)</code></pre></li></ul><table><thead><tr><th>SQL类型</th><th>JDBC对应方法</th><th>返回类型</th></tr></thead><tbody><tr><td>bit(1)，bit(n)</td><td>getBoolean，getBytes()</td><td>Boolean，byte[]</td></tr><tr><td>tinyint</td><td>getByte()</td><td>Byte</td></tr><tr><td>smallint</td><td>getShort()</td><td>Short</td></tr><tr><td>int</td><td>getInt</td><td>Int</td></tr><tr><td>bigint</td><td>getLong()</td><td>Long</td></tr><tr><td>char,varchar,longvarchar</td><td>getString</td><td>String</td></tr><tr><td>text(clob) blob</td><td>getClob()，getblob()</td><td>Clob，blob</td></tr><tr><td>date</td><td>getDate()</td><td>java.sql.Date</td></tr><tr><td>time</td><td>getTime()</td><td>java.sql.Time</td></tr><tr><td>timestamp</td><td>getTimestamp</td><td>java.sql.Timestamp</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java👉事件处理</title>
      <link href="2021/01/05/%E5%90%8E%E7%AB%AF/Java/Java_%E4%BA%8B%E4%BB%B6%E5%A4%84%E7%90%86/"/>
      <url>2021/01/05/%E5%90%8E%E7%AB%AF/Java/Java_%E4%BA%8B%E4%BB%B6%E5%A4%84%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h1 id="事件处理"><a href="#事件处理" class="headerlink" title="事件处理"></a>事件处理</h1><p>事件处理的一般方法：<br>1.创建将要产生事件的组件对象<br>2.构造实现相应事件监听器接口的类，并创建事件监听器对象<br>3.为组件对象增加事件监听器对象：<code>组件对象</code>.add<code>XxxListener</code>(事件监听器对象);如：button.addActionListener(this);</p><blockquote><p>注：接口中的方法都含有所产生的事件对象参数，使用该参数的<code>getSource()</code>方法可以得到产生该事件的事件源</p></blockquote><h1 id="ActionListener"><a href="#ActionListener" class="headerlink" title="ActionListener"></a>ActionListener</h1><p>动作事件</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Swing_Exception;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionListener;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Exception_2</span> </span>&#123;</span><br><span class="line">JFrame f;</span><br><span class="line">JButton b;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Exception_2</span><span class="params">()</span> </span>&#123;</span><br><span class="line">f=<span class="keyword">new</span> JFrame(<span class="string">&quot;匿名内部类&quot;</span>);</span><br><span class="line">b=<span class="keyword">new</span> JButton(<span class="string">&quot;我是按钮，请点击&quot;</span>);</span><br><span class="line">b.addActionListener(<span class="keyword">new</span> ActionListener() &#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line">b.setText(<span class="string">&quot;我被点击了&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line">f.add(b);</span><br><span class="line"> f.pack();</span><br><span class="line"> f.setLocationRelativeTo(<span class="keyword">null</span>);</span><br><span class="line"> f.setVisible(<span class="keyword">true</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line"><span class="keyword">new</span> Exception_2();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/25/e4593828130f1643c3b92ecfabe3bbd6.png"><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/25/5965bf0bb48c3ca5290232e90fe5d34d.png"></p><h1 id="ItemListener"><a href="#ItemListener" class="headerlink" title="ItemListener"></a>ItemListener</h1><p>选择监听</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Swing_Exception;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ItemEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ItemListener;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ItemEvent_1</span> </span>&#123;</span><br><span class="line">JFrame f;</span><br><span class="line">JComboBox  xlk;<span class="comment">//下拉框</span></span><br><span class="line">JTextArea t;</span><br><span class="line">JScrollPane gd;</span><br><span class="line">String str[]= &#123;<span class="string">&quot;选项一&quot;</span>,<span class="string">&quot;选项二&quot;</span>,<span class="string">&quot;选项三&quot;</span>,<span class="string">&quot;选项四&quot;</span>,<span class="string">&quot;选项五&quot;</span>&#125;;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">ItemEvent_1</span><span class="params">()</span></span>&#123;</span><br><span class="line">f=<span class="keyword">new</span> JFrame();</span><br><span class="line">xlk=<span class="keyword">new</span> JComboBox(str);</span><br><span class="line">t=<span class="keyword">new</span> JTextArea(<span class="number">5</span>,<span class="number">3</span>);</span><br><span class="line">gd=<span class="keyword">new</span> JScrollPane(t);</span><br><span class="line">xlk.addItemListener(<span class="keyword">new</span> ItemListener() &#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">itemStateChanged</span><span class="params">(ItemEvent e)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line"><span class="keyword">int</span> stateChange=e.getStateChange();<span class="comment">//获得事件类型</span></span><br><span class="line">String item=e.getItem().toString();<span class="comment">//获得触发此次事件的选项</span></span><br><span class="line"><span class="keyword">if</span>(stateChange==ItemEvent.SELECTED) &#123;   <span class="comment">//查看是否由选中选项触发</span></span><br><span class="line">System.out.println(<span class="string">&quot;此次事件由  选中 选项 “&quot;</span>+item+<span class="string">&quot;”触发!&quot;</span>);</span><br><span class="line">t.append(<span class="string">&quot;此次事件由  选中 选项 “&quot;</span>+item+<span class="string">&quot;”触发!&quot;</span>+<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(stateChange==ItemEvent.DESELECTED) &#123;  <span class="comment">//查看是否由取消选中选项触发</span></span><br><span class="line">System.out.println(<span class="string">&quot;此次事件由  取消选中 选项 “&quot;</span>+item+<span class="string">&quot;”触发!&quot;</span>);</span><br><span class="line">t.append(<span class="string">&quot;此次事件由  取消选中 选项 “&quot;</span>+item+<span class="string">&quot;”触发!&quot;</span>+<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;  <span class="comment">//由其他原因触发</span></span><br><span class="line">System.out.println(<span class="string">&quot;此次事件由其他原因触发!&quot;</span>+<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">t.append(<span class="string">&quot;此次事件由其他原因触发!&quot;</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line">f.add(xlk,BorderLayout.NORTH);</span><br><span class="line">f.add(gd,BorderLayout.CENTER);</span><br><span class="line">f.setSize(<span class="number">300</span>,<span class="number">400</span>);</span><br><span class="line">f.setLocationRelativeTo(<span class="keyword">null</span>);</span><br><span class="line">f.setVisible(<span class="keyword">true</span>);</span><br><span class="line">&#125; </span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line"><span class="keyword">new</span> ItemEvent_1() ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/25/06c581b66a5f8d2d6d2382f8f0ebc607.png"></p><h1 id="KeyListener"><a href="#KeyListener" class="headerlink" title="KeyListener"></a>KeyListener</h1><p>键盘事件</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Swing_Exception;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.KeyEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.KeyListener;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">KeyColor_1</span> </span>&#123;</span><br><span class="line">JFrame f;</span><br><span class="line">JButton b1,b2,b3,b4,b5,b6,b7;</span><br><span class="line">JLabel l;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">KeyColor_1</span><span class="params">()</span> </span>&#123;</span><br><span class="line">f=<span class="keyword">new</span> JFrame(<span class="string">&quot;颜色&quot;</span>);</span><br><span class="line">b1=<span class="keyword">new</span> JButton(<span class="string">&quot;1&quot;</span>);</span><br><span class="line">b1.setBackground(Color.WHITE);</span><br><span class="line">b2=<span class="keyword">new</span> JButton(<span class="string">&quot;2&quot;</span>);</span><br><span class="line">b2.setBackground(Color.WHITE);</span><br><span class="line">b3=<span class="keyword">new</span> JButton(<span class="string">&quot;3&quot;</span>);</span><br><span class="line">b3.setBackground(Color.WHITE);</span><br><span class="line">b4=<span class="keyword">new</span> JButton(<span class="string">&quot;4&quot;</span>);</span><br><span class="line">b4.setBackground(Color.WHITE);</span><br><span class="line">b5=<span class="keyword">new</span> JButton(<span class="string">&quot;5&quot;</span>);</span><br><span class="line">b5.setBackground(Color.WHITE);</span><br><span class="line">b6=<span class="keyword">new</span> JButton(<span class="string">&quot;6&quot;</span>);</span><br><span class="line">b6.setBackground(Color.WHITE);</span><br><span class="line">b7=<span class="keyword">new</span> JButton(<span class="string">&quot;7&quot;</span>);</span><br><span class="line">b7.setBackground(Color.WHITE);</span><br><span class="line">l=<span class="keyword">new</span> JLabel(<span class="string">&quot;英文键盘模式&quot;</span>);</span><br><span class="line">f.setLayout(<span class="keyword">new</span> FlowLayout());</span><br><span class="line"><span class="comment">//f.setFocusable(true);//获得焦点</span></span><br><span class="line">b1.addKeyListener(<span class="keyword">new</span> KeyListener() &#123;  <span class="comment">//b1为焦点</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">keyTyped</span><span class="params">(KeyEvent e)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span> </span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">keyPressed</span><span class="params">(KeyEvent e)</span> </span>&#123;  <span class="comment">//按下</span></span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line"><span class="keyword">switch</span>((<span class="keyword">char</span>)e.getKeyCode()) &#123;  <span class="comment">//判断按下的键值</span></span><br><span class="line"><span class="keyword">case</span> KeyEvent.VK_1:</span><br><span class="line">b1.setBackground(Color.red);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> KeyEvent.VK_2: </span><br><span class="line">b2.setBackground(Color.orange);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> KeyEvent.VK_3:</span><br><span class="line">b3.setBackground(Color.YELLOW);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> KeyEvent.VK_4:</span><br><span class="line">b4.setBackground(Color.green);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> KeyEvent.VK_5:</span><br><span class="line">b5.setBackground(Color.cyan);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> KeyEvent.VK_6:</span><br><span class="line">b6.setBackground(Color.blue);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> KeyEvent.VK_7:</span><br><span class="line">b7.setBackground(<span class="keyword">new</span> Color(<span class="number">128</span>,<span class="number">0</span>,<span class="number">255</span>));</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">keyReleased</span><span class="params">(KeyEvent e)</span> </span>&#123;  <span class="comment">//释放</span></span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line"><span class="keyword">switch</span>((<span class="keyword">char</span>)e.getKeyCode()) &#123;</span><br><span class="line"><span class="keyword">case</span> KeyEvent.VK_1:</span><br><span class="line">b1.setBackground(Color.WHITE);  <span class="comment">//null为原来色体</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> KeyEvent.VK_2:</span><br><span class="line">b2.setBackground(Color.WHITE);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> KeyEvent.VK_3:</span><br><span class="line">b3.setBackground(Color.white);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> KeyEvent.VK_4:</span><br><span class="line">b4.setBackground(Color.white);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> KeyEvent.VK_5:</span><br><span class="line">b5.setBackground(Color.white);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> KeyEvent.VK_6:</span><br><span class="line">b6.setBackground(Color.white);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> KeyEvent.VK_7:</span><br><span class="line">b7.setBackground(Color.white);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line">f.add(b1);</span><br><span class="line">f.add(b2);</span><br><span class="line">f.add(b3);</span><br><span class="line">f.add(b4);</span><br><span class="line">f.add(b5);</span><br><span class="line">f.add(b6);</span><br><span class="line">f.add(b7);</span><br><span class="line">f.add(l,BorderLayout.CENTER);</span><br><span class="line">f.pack();</span><br><span class="line">f.setLocationRelativeTo(<span class="keyword">null</span>);</span><br><span class="line">f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class="line">f.setVisible(<span class="keyword">true</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line"><span class="keyword">new</span> KeyColor_1();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/25/8ec4a3c05780f2b3a09ca1202b1c90e7.png"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Swing_Exception;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.KeyAdapter;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.KeyEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.KeyListener;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">KeyListener_1</span>  </span>&#123;</span><br><span class="line">JFrame f;</span><br><span class="line">JLabel l;</span><br><span class="line">JTextArea t;</span><br><span class="line">JScrollPane gd;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">KeyListener_1</span><span class="params">()</span> </span>&#123;</span><br><span class="line">f=<span class="keyword">new</span> JFrame(<span class="string">&quot;键盘事件&quot;</span>);</span><br><span class="line">l=<span class="keyword">new</span> JLabel(<span class="string">&quot;请输入:&quot;</span>);</span><br><span class="line">t=<span class="keyword">new</span> JTextArea(<span class="number">5</span>,<span class="number">3</span>);</span><br><span class="line">t.addKeyListener(<span class="keyword">new</span> KeyListener() &#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">keyPressed</span><span class="params">(KeyEvent e)</span> </span>&#123;  <span class="comment">//键盘输入</span></span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line">String keytext=KeyEvent.getKeyText(e.getKeyCode());<span class="comment">//获得描述keycode的标签</span></span><br><span class="line"><span class="keyword">if</span>(e.isActionKey()) &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;你按下的是动作键“&quot;</span>+keytext+<span class="string">&quot;”&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;你按下的是非动作键“&quot;</span>+keytext+<span class="string">&quot;”&quot;</span>);</span><br><span class="line"><span class="comment">//获得与此事件中的键相关联的字符</span></span><br><span class="line"><span class="keyword">int</span> keycode=e.getKeyCode();</span><br><span class="line"><span class="keyword">switch</span>(keycode) &#123;</span><br><span class="line"><span class="keyword">case</span> KeyEvent.VK_CONTROL:  <span class="comment">//判断按下的是否为ctrl键</span></span><br><span class="line">System.out.println(<span class="string">&quot;,Ctrl键被按下&quot;</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> KeyEvent.VK_ALT:  <span class="comment">//判断是否为ait</span></span><br><span class="line">System.out.println(<span class="string">&quot;,AIt键被按下&quot;</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> KeyEvent.VK_SHIFT:</span><br><span class="line">System.out.println(<span class="string">&quot;,Shift键被按下&quot;</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">System.out.println();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">keyTyped</span><span class="params">(KeyEvent e)</span> </span>&#123; <span class="comment">//键盘按下</span></span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line"><span class="comment">//获得输入的字符</span></span><br><span class="line">System.out.println(<span class="string">&quot;此次输入的是“&quot;</span>+e.getKeyChar()+<span class="string">&quot;”&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">keyReleased</span><span class="params">(KeyEvent e)</span> </span>&#123; <span class="comment">//键盘松开</span></span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line"><span class="comment">//获得描述Keycode的标签</span></span><br><span class="line">String keyText=KeyEvent.getKeyText(e.getKeyCode());</span><br><span class="line">System.out.println(<span class="string">&quot;你释放的是“&quot;</span>+keyText+<span class="string">&quot;”键&quot;</span>);</span><br><span class="line">System.out.println();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line">t.setLineWrap(<span class="keyword">true</span>);</span><br><span class="line">gd=<span class="keyword">new</span> JScrollPane(t);</span><br><span class="line">f.add(l,BorderLayout.WEST);</span><br><span class="line">f.add(gd,BorderLayout.CENTER);</span><br><span class="line">f.setSize(<span class="number">400</span>,<span class="number">400</span>);</span><br><span class="line">f.setLocationRelativeTo(<span class="keyword">null</span>);</span><br><span class="line">f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class="line">f.setVisible(<span class="keyword">true</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line"><span class="keyword">new</span> KeyListener_1();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/25/7dc7641d0ed513e381d08bb4cfef807c.png"></p><h1 id="MouseListener"><a href="#MouseListener" class="headerlink" title="MouseListener"></a>MouseListener</h1><p>鼠标事件<br><code>MouseListener</code>接口中的方法:<br>① void mouse<code>Pressed</code> ( MouseEvent );  //鼠标被按下<br>② void mouse<code>Released </code>( MouseEvent );  //鼠标被释放<br>③ void mouse<code>Clicked</code> ( MouseEvent );  //鼠标被单击<br>④ void mouse<code>Entered</code> ( MouseEvent );  //光标移入组件<br>⑤ void mouse<code>Exit</code> ( MouseEvent );    //光标移出组件</p><hr><p><code>MouseEvent</code>中的常用方法:<br>1.int  <code>getButton</code>()；<br> 返回更改了状态的鼠标按键(如果有)。<br>2.int  <code>getClickCount</code>()；<br> 返回与此事件关联的鼠标单击次数。<br>3.boolean  <code>isAltDown</code>()；<br>返回Alt修饰符在此事件上是否为down。<br>4. boolean  <code>isControlDown</code>()；<br>返回Ctrl修饰符在此事件上是否为down。<br>5.boolean  <code>isShiftDown</code>()；<br>返回Shift修饰符在此事件上是否为down.<br>6.int  <code>getPoint</code>()；<br>返回事件相对于源组件的x，y坐标<br>7.int  <code>getX</code>()；<br>返回事件相对于源组件的水平x坐标。<br>8.int  <code>getY</code>()；<br>返回事件相对于源组件的垂直Y坐标。<br>9.int  <code>isPopupTrigger</code>()；<br>返回鼠标事件是否为该平台的弹出菜单所触发的事件。<br>10.<code>MouseAdapter</code>适配器</p><hr><p><code>MouseMotionListener</code><br>1.当在组件上进行鼠标<code>拖动、移动</code>时产生该事件。<br>2.MouseMotionListener接口中的方法<br>① void <code>mouseDragged</code>( MouseEvent );<br>② void <code>mouseMoved </code>( MouseEvent );<br>3.MouseMotionAdapter适配器</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Swing_Exception;</span><br><span class="line"><span class="keyword">import</span> java.awt.Color;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.MouseEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.MouseListener;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MouseEvent_1</span> </span>&#123;</span><br><span class="line">JFrame f;</span><br><span class="line">JLabel l;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">MouseEvent_1</span><span class="params">()</span> </span>&#123;</span><br><span class="line">f=<span class="keyword">new</span> JFrame(<span class="string">&quot;鼠标事件&quot;</span>);</span><br><span class="line">l=<span class="keyword">new</span> JLabel(<span class="string">&quot;鼠标测试处&quot;</span>);</span><br><span class="line">l.addMouseListener(<span class="keyword">new</span> MouseListener() &#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span><span class="comment">//鼠标发送单机事件触发</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">mouseClicked</span><span class="params">(MouseEvent e)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line">System.out.println(<span class="string">&quot;单击了鼠标按键&quot;</span>);</span><br><span class="line"><span class="keyword">int</span> i=e.getButton();<span class="comment">//通过该值可以判断按下的是哪个键</span></span><br><span class="line"><span class="keyword">if</span>(i==MouseEvent.BUTTON1)</span><br><span class="line">System.out.println(<span class="string">&quot;按下的是鼠标左键&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(i==MouseEvent.BUTTON2)</span><br><span class="line">System.out.println(<span class="string">&quot;按下的是鼠标滚轮&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(i==MouseEvent.BUTTON3)</span><br><span class="line">System.out.println(<span class="string">&quot;按下的是鼠标右键&quot;</span>);</span><br><span class="line"><span class="keyword">int</span> Clickcount=e.getClickCount();<span class="comment">//点击次数</span></span><br><span class="line">System.out.println(<span class="string">&quot;点击次数为&quot;</span>+Clickcount+<span class="string">&quot;下&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span><span class="comment">//鼠标按键被按下时触发</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">mousePressed</span><span class="params">(MouseEvent e)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line">System.out.println(<span class="string">&quot;鼠标按键被按下&quot;</span>);</span><br><span class="line"><span class="keyword">int</span> i=e.getButton();<span class="comment">//通过该值可以判断按下的是哪个键</span></span><br><span class="line"><span class="keyword">if</span>(i==MouseEvent.BUTTON1)</span><br><span class="line">System.out.println(<span class="string">&quot;按下的是鼠标左键&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(i==MouseEvent.BUTTON2)</span><br><span class="line">System.out.println(<span class="string">&quot;按下的是鼠标滚轮&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(i==MouseEvent.BUTTON3)</span><br><span class="line">System.out.println(<span class="string">&quot;按下的是鼠标右键&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">mouseReleased</span><span class="params">(MouseEvent e)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line"><span class="comment">//按下后松下</span></span><br><span class="line">System.out.println(<span class="string">&quot;鼠标已释放&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span><span class="comment">//光标移入组件被触发</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">mouseEntered</span><span class="params">(MouseEvent e)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line">System.out.println(<span class="string">&quot;光标移入组件&quot;</span>);</span><br><span class="line">l.setForeground(Color.red);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">mouseExited</span><span class="params">(MouseEvent e)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line">System.out.println(<span class="string">&quot;光标移出组件&quot;</span>);</span><br><span class="line">l.setForeground(Color.black);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line">f.add(l);</span><br><span class="line">f.pack();</span><br><span class="line">f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class="line"> f.setLocationRelativeTo(<span class="keyword">null</span>);</span><br><span class="line"> f.setVisible(<span class="keyword">true</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line"><span class="keyword">new</span> MouseEvent_1();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/25/71c7048f849f53726c315faccec875d3.png"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Swing_Exception;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.MouseEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.MouseMotionListener;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyMouseMotionListener</span> </span>&#123;</span><br><span class="line">JFrame f;</span><br><span class="line">JPanel p;</span><br><span class="line">JButton b;</span><br><span class="line">JTextArea t;</span><br><span class="line">JScrollPane gd;</span><br><span class="line">JLabel l;</span><br><span class="line"><span class="keyword">int</span> count=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">MyMouseMotionListener</span><span class="params">()</span> </span>&#123;</span><br><span class="line">f=<span class="keyword">new</span> JFrame(<span class="string">&quot;MyMouseMotionListener&quot;</span>);</span><br><span class="line">l=<span class="keyword">new</span> JLabel(<span class="string">&quot;clik and drag the mouse&quot;</span>);</span><br><span class="line">t=<span class="keyword">new</span> JTextArea(<span class="number">10</span>,<span class="number">10</span>);</span><br><span class="line">t.addMouseMotionListener(<span class="keyword">new</span> MouseMotionListener() &#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">mouseDragged</span><span class="params">(MouseEvent e)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line">count++;</span><br><span class="line">t.append(count+<span class="string">&quot;The mouse is dragged:X=&quot;</span>+e.getX()+<span class="string">&quot;Y=&quot;</span>+e.getY()+<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">mouseMoved</span><span class="params">(MouseEvent e)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line">count++;</span><br><span class="line">t.append(count+<span class="string">&quot;The mouse is moving:X=&quot;</span>+e.getX()+<span class="string">&quot;Y=&quot;</span>+e.getY()+<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line">b=<span class="keyword">new</span> JButton(<span class="string">&quot;退出&quot;</span>);</span><br><span class="line">gd=<span class="keyword">new</span> JScrollPane(t);</span><br><span class="line">f.add(l,BorderLayout.NORTH);</span><br><span class="line">f.add(gd,BorderLayout.CENTER);</span><br><span class="line">f.add(b,BorderLayout.SOUTH);</span><br><span class="line">f.setSize(<span class="number">600</span>,<span class="number">600</span>);</span><br><span class="line">f.setLocationRelativeTo(<span class="keyword">null</span>);</span><br><span class="line">f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class="line">f.setVisible(<span class="keyword">true</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line"><span class="keyword">new</span>  MyMouseMotionListener();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/25/c0acc0f468ad183dc557eb980c691f22.png"></p><h1 id="WindowListener"><a href="#WindowListener" class="headerlink" title="WindowListener"></a>WindowListener</h1><p>窗口监听</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Swing_Exception;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.WindowEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.WindowFocusListener;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WindowFocusListener_1</span> </span>&#123;</span><br><span class="line">JFrame f;</span><br><span class="line">JPanel p;</span><br><span class="line">JTextArea t;</span><br><span class="line">JLabel l;</span><br><span class="line">JScrollPane gd;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">WindowFocusListener_1</span><span class="params">()</span></span>&#123;</span><br><span class="line">f=<span class="keyword">new</span> JFrame(<span class="string">&quot;窗口焦点测试&quot;</span>);</span><br><span class="line">p=<span class="keyword">new</span> JPanel();</span><br><span class="line">t=<span class="keyword">new</span> JTextArea(<span class="number">5</span>,<span class="number">3</span>);</span><br><span class="line">gd=<span class="keyword">new</span> JScrollPane(t);</span><br><span class="line">t.setLineWrap(<span class="keyword">true</span>);<span class="comment">//自动换行</span></span><br><span class="line">l=<span class="keyword">new</span> JLabel(<span class="string">&quot;测试区域&quot;</span>);</span><br><span class="line">l.setFont(<span class="keyword">new</span> Font(<span class="string">&quot;宋体&quot;</span>,Font.BOLD,<span class="number">50</span>));</span><br><span class="line">f.addWindowFocusListener(<span class="keyword">new</span> WindowFocusListener() &#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">windowGainedFocus</span><span class="params">(WindowEvent e)</span> </span>&#123;<span class="comment">//获得焦点</span></span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line">t.append(<span class="string">&quot;窗口获得焦点&quot;</span>+<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">System.out.println(<span class="string">&quot;\&quot;窗口获得焦点\&quot;&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">windowLostFocus</span><span class="params">(WindowEvent e)</span> </span>&#123; <span class="comment">//失去焦点</span></span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line">t.append(<span class="string">&quot;窗口失去焦点&quot;</span>+<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">System.out.println(<span class="string">&quot;\&quot;窗口失去焦点\&quot;&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line">p.add(l);</span><br><span class="line">f.add(p,BorderLayout.CENTER);</span><br><span class="line">f.add(gd,BorderLayout.SOUTH);</span><br><span class="line">f.setSize(<span class="number">400</span>,<span class="number">300</span>);</span><br><span class="line">f.setLocationRelativeTo(<span class="keyword">null</span>);</span><br><span class="line">f.setVisible(<span class="keyword">true</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line"><span class="keyword">new</span> WindowFocusListener_1();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/25/85873dfabb0f1fc5f7671bf7c8a35632.png"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Swing_Exception;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.WindowEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.WindowListener;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WindowListener_1</span> </span>&#123;</span><br><span class="line">JFrame f;</span><br><span class="line">JLabel l;</span><br><span class="line">JTextArea t;</span><br><span class="line">JScrollPane gd;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">WindowListener_1</span><span class="params">()</span> </span>&#123;</span><br><span class="line">f=<span class="keyword">new</span> JFrame(<span class="string">&quot;窗口事件&quot;</span>);</span><br><span class="line">l=<span class="keyword">new</span> JLabel(<span class="string">&quot;显示&quot;</span>);</span><br><span class="line">t=<span class="keyword">new</span> JTextArea(<span class="number">5</span>,<span class="number">3</span>);</span><br><span class="line">t.setLineWrap(<span class="keyword">true</span>);</span><br><span class="line">gd=<span class="keyword">new</span> JScrollPane(t);</span><br><span class="line">f.add(l,BorderLayout.NORTH);</span><br><span class="line">f.add(gd,BorderLayout.CENTER);</span><br><span class="line">f.addWindowListener(<span class="keyword">new</span> WindowListener() &#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">windowOpened</span><span class="params">(WindowEvent e)</span> </span>&#123; <span class="comment">//窗口打开时触发</span></span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line">System.out.println(<span class="string">&quot;窗口被打开&quot;</span>);</span><br><span class="line">t.append(<span class="string">&quot;窗口被打开&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">windowClosing</span><span class="params">(WindowEvent e)</span> </span>&#123;  <span class="comment">//窗口将要关闭时触发</span></span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line">System.out.println(<span class="string">&quot;窗口将要被关闭&quot;</span>);</span><br><span class="line">t.append(<span class="string">&quot;窗口将要被关闭&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">windowClosed</span><span class="params">(WindowEvent e)</span> </span>&#123;  <span class="comment">//窗口已经被关闭时触发</span></span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line">System.out.println(<span class="string">&quot;窗口已经被关闭&quot;</span>);</span><br><span class="line">t.append(<span class="string">&quot;窗口已经被关闭&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">windowIconified</span><span class="params">(WindowEvent e)</span> </span>&#123;    <span class="comment">//窗口最小化时触发</span></span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line">System.out.println(<span class="string">&quot;窗口被最小化&quot;</span>);</span><br><span class="line">t.append(<span class="string">&quot;窗口已经被最小化&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">windowDeiconified</span><span class="params">(WindowEvent e)</span> </span>&#123;  <span class="comment">//窗口被非最小化时触发</span></span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line">System.out.println(<span class="string">&quot;窗口被非最小化&quot;</span>);</span><br><span class="line">t.append(<span class="string">&quot;窗口已经被非最小化&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">windowActivated</span><span class="params">(WindowEvent e)</span> </span>&#123;  <span class="comment">//窗口被激活时触发</span></span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line">System.out.println(<span class="string">&quot;窗口被激活&quot;</span>);</span><br><span class="line">t.append(<span class="string">&quot;窗口被激活&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">windowDeactivated</span><span class="params">(WindowEvent e)</span> </span>&#123;  <span class="comment">//窗口不再处于激活状态时触发</span></span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line">System.out.println(<span class="string">&quot;窗口不再处于激活状态&quot;</span>);</span><br><span class="line">t.append(<span class="string">&quot;窗口不再处于激活状态&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line">f.setSize(<span class="number">300</span>,<span class="number">400</span>);</span><br><span class="line">f.setLocationRelativeTo(<span class="keyword">null</span>);</span><br><span class="line">f.setVisible(<span class="keyword">true</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line"> <span class="keyword">new</span> WindowListener_1();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java👉网络通信</title>
      <link href="2021/01/05/%E5%90%8E%E7%AB%AF/Java/Java_%E7%BD%91%E7%BB%9C%E9%80%9A%E4%BF%A1/"/>
      <url>2021/01/05/%E5%90%8E%E7%AB%AF/Java/Java_%E7%BD%91%E7%BB%9C%E9%80%9A%E4%BF%A1/</url>
      
        <content type="html"><![CDATA[<h1 id="网络通信"><a href="#网络通信" class="headerlink" title="网络通信"></a>网络通信</h1><h2 id="相关概念"><a href="#相关概念" class="headerlink" title="相关概念"></a>相关概念</h2><p>网络<br>(1) 概念：连接终端系统(主机)的<code>通信系统</code>。<br>(2) 功能：实现<code>资源共享、通信</code>。</p><ul><li>局域网（Local Area Network，LAN），就是同一区域内通过一定形式连接起来的计算机。</li><li>广域网（Wide Area Network，WAN），由LAN延伸到更大的范围。</li><li>因特网（Internet），由无数的LAN和WAN组成。</li><li><code>服务器</code>是指<code>提供信息的计算机或程序</code>，<code>客户机</code>是指<code>请求信息的计算机或程序</code>，而网络用于连接服务器与客户机，实现两者相互通信。</li><li><code>IP地址</code>：IP地址是计算机在互联网中<code>唯一标识</code>。</li><li><code>端口</code>：区分<code>应用程序</code>，实现程序间的通信</li><li> 假如一台计算机提供了HTTP、FTP等多种服务，那么客户机通过<code>不同的端口</code>来确定连接到服务器的哪项服务上。</li></ul><blockquote><p>说明： 0～1023端口用于知名网络服务和应用，1024以上的端口用于用户的普通应用程序。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/03/c95323c23793364f9a35a8ef863e6d6c.png"></p><h2 id="套接字-Socket"><a href="#套接字-Socket" class="headerlink" title="套接字(Socket)"></a>套接字(Socket)</h2><p>(1)功能：连接<code>应用程序</code>和<code>端口（Port）</code>。<br>(2) 客户端与服务器通过<code>套接字</code>建立<code>连接</code>和<code>通信</code>：<br>① <code>UDP套接字</code>：不可靠。<br>② <code>TCP/IP套接字</code>：</p><ul><li>可靠的双向流协议；</li><li>可发送任意数量的数据；</li><li>提供消息确认、错误检测、错误恢复等服务。</li></ul><blockquote><p>Java将套接字抽象化为类，程序设计者只需创建Socket类对象，即可使用套接字。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/03/3b28b3c6e98b251b01a4ebc87c4356df.png"></p><h2 id="C-S模式"><a href="#C-S模式" class="headerlink" title="C/S模式"></a>C/S模式</h2><p>客户端/服务器模式(c/s)<br>①客户端：<code>请求服务</code>的计算机。<br>②服务器：<code>提供服务</code>的计算机。</p><ul><li>多个客户端可<code>同时访问</code>服务器。</li><li> 一台服务器可以<code>同时</code>为数千台客户端<code>服务</code>。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/03/8377fafe28d6b3224886623096f5a007.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/03/94375e1ff43c101be8a7d9a6dae4f173.png"></p><h2 id="java-net包"><a href="#java-net包" class="headerlink" title="java.net包"></a>java.net包</h2><p>(1) <code>InetAddress类</code></p><ul><li> <code>封装IP地址</code>，提供与IP地址相关的方法。</li><li> InetAddress方法会抛出<code>UnknownHostException</code>异常，在主机<code>不存在</code>或网络<code>连接错误</code>时发生。</li></ul><table><thead><tr><th>InetAddress类常用方法</th><th>说明</th></tr></thead><tbody><tr><td><strong>InetAddress</strong> <strong>getLocalHost</strong>( )</td><td><strong>创建本地主机的</strong>InetAddress对象（含主机名+IP地址）</td></tr><tr><td><strong>String</strong> <strong>getHostName</strong>( )</td><td><strong>如果是</strong>本机则返回计算机名，不是本机则返回主机名，没有域名则是IP地址。</td></tr><tr><td><strong>String</strong> <strong>getHostAddress</strong>( )</td><td><strong>返回</strong>IP地址</td></tr><tr><td><strong>InetAddress</strong> <strong>getByName(</strong> <strong>String</strong> <strong>host)</strong></td><td><strong>已知主机名，返回主机的<em>InetAddress</em></strong>对象</td></tr></tbody></table><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> net;</span><br><span class="line"><span class="keyword">import</span> java.net.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoaclIPTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">InetAddress ip;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="comment">//创建本地主机的InetAddress对象(含主机名+IP地址)</span></span><br><span class="line">ip=InetAddress.getLocalHost();</span><br><span class="line">String localname=ip.getHostName(); <span class="comment">//获取本机名</span></span><br><span class="line">String localip=ip.getHostAddress(); <span class="comment">//获取IP地址</span></span><br><span class="line"><span class="comment">//已知主机名，返回主机的InetAddress对象</span></span><br><span class="line"><span class="comment">//InetAddress aa=InetAddress.getByName(&quot;SC-201611191816&quot;);</span></span><br><span class="line">System.out.println(<span class="string">&quot;本机名：&quot;</span> + localname);</span><br><span class="line">    System.out.println(<span class="string">&quot;本机IP地址：&quot;</span> + localip); </span><br><span class="line">    System.out.println(<span class="string">&quot;本机InetAddress对象：&quot;</span> + ip);</span><br><span class="line">  <span class="comment">//  System.out.println(&quot;aa：&quot; + aa);</span></span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">catch</span>(UnknownHostException e) &#123;</span><br><span class="line"> e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>(2) <code>ServerSocket</code></p><ul><li>用于创建TCP<code>服务器端</code>Socket，使服务器绑定一个端口，等待客户的连接请求。</li></ul><table><thead><tr><th>ServerSocket常用方法</th><th>说明</th></tr></thead><tbody><tr><td><strong>构造方法：ServerSocket(int port)</strong></td><td><strong>创建绑定到特定端口的服务器套接字</strong></td></tr><tr><td><strong>Socket</strong> <strong>accept()</strong></td><td><strong>等待</strong>客户端的<strong>连接</strong>，有客户端<strong>连接</strong>会<strong>返回</strong>一个对应的<strong>Socket</strong></td></tr><tr><td><strong>InetAddress getInetAddress()</strong></td><td>返回封装了<strong>ServerSocket</strong>绑定的IP地址的<strong>InetAddress对象</strong></td></tr><tr><td><strong>boolean isClosed()</strong></td><td>判断<strong>ServerSocket</strong>是否关闭</td></tr><tr><td><strong>void bind(SocketAddress endpoint)</strong></td><td>将<strong>ServerSocket对象</strong>绑定到指定的<strong>IP地址和端口号</strong></td></tr><tr><td><strong>int getInetAddress()</strong></td><td>返回服务器套接字等待的端口号</td></tr><tr><td><strong>void close()</strong></td><td>关闭套接字</td></tr><tr><td><strong>boolean isBound()</strong></td><td>判断ServerSocket的绑定状态</td></tr></tbody></table><p>(3) <code>Socket</code></p><ul><li>创建TCP<strong>客户端</strong>Socket</li></ul><table><thead><tr><th align="center">Socket常用方法</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center"><strong>Socket(String hostName,int port)</strong></td><td align="center"><strong>根据主机名和端口创建Socket</strong></td></tr><tr><td align="center"><strong>Socket(InetAddress a,int port)</strong></td><td align="center"><strong>根据InetAddress和端口创建Socket</strong></td></tr><tr><td align="center"><strong>InputStream getInputStream()</strong></td><td align="center"><strong>返回InputStream类型的输入流对象</strong></td></tr><tr><td align="center"><strong>OutputStream getOutputStream()</strong></td><td align="center"><strong>返回OutputStream类型的输出流对象</strong></td></tr><tr><td align="center"><strong>int getPort()</strong></td><td align="center"><strong>返回Socket对象与服务器端连接端口号</strong></td></tr><tr><td align="center"><strong>InetAddress getLocalAddress()</strong></td><td align="center"><strong>获取Socket对象绑定的本地IP地址</strong></td></tr><tr><td align="center"><strong>void close()</strong></td><td align="center"><strong>关闭Socket连接，结束本次通信</strong></td></tr></tbody></table><h2 id="编写C-S程序"><a href="#编写C-S程序" class="headerlink" title="编写C/S程序"></a>编写C/S程序</h2><h3 id="服务器端"><a href="#服务器端" class="headerlink" title="服务器端"></a>服务器端</h3><ul><li><code>创建</code>一个<code>服务器套接字</code>(ServerSocket)，绑定到指定的<code>端口</code>。</li><li>调用<code>accept()</code>方法，<code>侦听</code>来自客户端的<code>请求</code>，如果客户发出请求，则<code>接受</code>连接，<code>返回</code>通信套接字(Socket)。</li><li>调用Socket的<code>getInputStream</code>和<code>getOutpuStream</code>方法，获得<code>I/O流</code>，开始网络数据的<code>接收</code>和<code>发送</code>。</li><li>关闭<code>通信套接字</code>，关闭<code>服务器套接字</code>。</li></ul><h3 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h3><ul><li><code>创建</code>一个<code>套接字</code>(Socket)，向服务器的侦听端口发出请求。</li><li>与服务器正确连接后，调用<code>Socket类</code>的<code>getInputStream()</code>和<code>getOutputStream()</code>方法，获得I/O流，开始网络数据的接收和发送。</li><li>关闭<code>通信套接字</code>。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/03/42e1562d9cc2c9c5022b2a8d710226aa.png"></li></ul><h3 id="Socket通信方式"><a href="#Socket通信方式" class="headerlink" title="Socket通信方式"></a>Socket通信方式</h3><p>利用Socket方式进行数据通信与传输的整个过程如图所示：<code>Socket</code>对象代表<code>主叫方</code>，<code>ServerSocket</code>对象代表<code>被叫方</code>，执行<code>accept()</code>方法表示<code>同意建立连接</code>。连接一旦建立，会自动创建一个输入流和一个输出流，通过这两个流可以实现数据的发送。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/03/7c9e2d255aa2b25520f44bf82107f969.png"></p><h3 id="Socket编程思路"><a href="#Socket编程思路" class="headerlink" title="Socket编程思路"></a>Socket编程思路</h3><p>(1)<code>I/O流</code></p><ul><li>计算机系统将除<code>CPU</code>、<code>内存以外</code>的<code>其他设备</code>都当作<code>文件</code>处理，包括网络终端（网卡）也不例外。</li><li>两台主机之间通过Socket建立握手连接之后，主要通过<code>I/O流</code>来<code>接收</code>和<code>发送</code>数据，实际上，绝大部分网络操作是在操作<code>I/O流</code>。</li><li>操作<code>网络端口流</code>与操作<code>磁盘文件流</code>原理相似。</li><li>出于效率的考虑，<code>Socket</code>使用的是<code>字节流</code>，但是在实际操作中，字节往往会带来不便，所以我们一般会把<code>字节流</code>改造成<code>字符流</code>后进行操作。</li></ul><p>(2)<code>输入</code></p><ul><li>先利用<code>InputStreamReader</code>将<code>InputStream</code>转化成字符流</li><li>然后再使用<code>BufferedReader</code>建立缓冲区，以提高效率。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">InputStream is=socket.getInputStream();</span><br><span class="line">InputStreamReader isr=<span class="keyword">new</span> InputStreamReader(is);</span><br><span class="line">BufferedReader in=<span class="keyword">new</span> BufferedReader(isr);</span><br><span class="line">in.readLine(); <span class="comment">//从流中读出信息</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><p>(3)<code>输出</code></p><ul><li>利用<code>PrintWriter</code>类对<code>OutputStream</code>进行包装</li><li><code>PrintWriter</code>称为打印输出流，包装类，它可以直接输出各种类型的数据。<br>如：void println( String ) ;<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">OutputStream os=socket.getOutputStream();</span><br><span class="line">PrintWriter pw=<span class="keyword">new</span> PrintWriter(os, <span class="keyword">true</span>);</span><br><span class="line">pw.println(“待写信息”);  <span class="comment">//将信息写入流</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="C-S实例"><a href="#C-S实例" class="headerlink" title="C/S实例"></a>C/S实例</h3><p><code>Client客户端</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> 网络通信;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.net.*;</span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionListener;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Client</span> <span class="keyword">implements</span> <span class="title">ActionListener</span> </span>&#123;</span><br><span class="line">JFrame f;</span><br><span class="line">JPanel p;</span><br><span class="line">JTextArea jt; <span class="comment">//多行文本域</span></span><br><span class="line">JTextField t;  <span class="comment">//单行文本域</span></span><br><span class="line">JButton b;</span><br><span class="line">JScrollPane jsp;<span class="comment">//滚动条</span></span><br><span class="line">PrintWriter pw; <span class="comment">//防止局部变量</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Client</span><span class="params">()</span> </span>&#123;</span><br><span class="line">f=<span class="keyword">new</span> JFrame(<span class="string">&quot;客户端窗口&quot;</span>);</span><br><span class="line">p=<span class="keyword">new</span> JPanel();</span><br><span class="line">jt=<span class="keyword">new</span> JTextArea();</span><br><span class="line">t=<span class="keyword">new</span> JTextField(<span class="number">20</span>);</span><br><span class="line">b=<span class="keyword">new</span> JButton(<span class="string">&quot;发送&quot;</span>);</span><br><span class="line">b.addActionListener(<span class="keyword">this</span>);</span><br><span class="line">f.add(p);</span><br><span class="line">p.add(jt);</span><br><span class="line">p.add(t);</span><br><span class="line">p.add(b);</span><br><span class="line">jsp=<span class="keyword">new</span> JScrollPane(jt); <span class="comment">//文本域加滚动条</span></span><br><span class="line">f.add(jsp);</span><br><span class="line">f.setSize(<span class="number">350</span>,<span class="number">250</span>);</span><br><span class="line">f.setLocation(<span class="number">300</span>, <span class="number">200</span>);</span><br><span class="line">f.add(p,BorderLayout.SOUTH);</span><br><span class="line">f.setIconImage((<span class="keyword">new</span> ImageIcon(<span class="string">&quot;MyImage/qq图标.jpg&quot;</span>)).getImage());</span><br><span class="line">f.setResizable(<span class="keyword">false</span>);</span><br><span class="line">f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class="line"><span class="comment">/*System.exit(0)是退出整个程序，如果有多个窗口，全部都销毁退出。</span></span><br><span class="line"><span class="comment">frame.setDefaultCloseOperation()是设置用户在此窗体上发起&quot;close&quot;时默认执行的操作。必须指定以下选项之一： </span></span><br><span class="line"><span class="comment">  (1)DO_NOTHING_ON_CLOSE（在WindowConstants中定义）：不执行任何操作，要求程序在已注册的 WindowListener 对象的 windowClosing 方法中处理该操作。 </span></span><br><span class="line"><span class="comment">  (2)HIDE_ON_CLOSE（在WindowConstants中定义）：调用任意已注册的WindowListener对象后自动隐藏该窗体。 </span></span><br><span class="line"><span class="comment">  (3)DISPOSE_ON_CLOSE（在WindowConstants中定义）：调用任意已注册WindowListener的对象后自动隐藏并释放该窗体。 </span></span><br><span class="line"><span class="comment">  (4)EXIT_ON_CLOSE（在JFrame中定义）：使用System exit方法退出应用程序。仅在应用程序中使用。 </span></span><br><span class="line"><span class="comment">默认情况下，该值被设置为 HIDE_ON_CLOSE</span></span><br><span class="line"><span class="comment">也就是说没有设置的话,默认点关闭时只是隐藏窗体,在后台进程中还可以看到，如果有多个窗口，只是销毁调用dispose的窗口，其他窗口仍然存在，整个应用程序还是处于运行状态。*/</span></span><br><span class="line">f.setVisible(<span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//客户端程序思路</span></span><br><span class="line"><span class="comment">//创建一个套接字(Socket)，向服务器的侦听端口发出请求。</span></span><br><span class="line"><span class="comment">//与服务器正确连接后，调用Socket类的getInputStream()（接受）和getOutputStream()（发送）方法，获得I/O流，开始网络数据的接收和发送。</span></span><br><span class="line"><span class="comment">//关闭通信套接字。</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">Socket s=<span class="keyword">new</span> Socket(<span class="string">&quot;127.0.0.1&quot;</span>,<span class="number">8998</span>); <span class="comment">//进入端口，参数为服务器IP地址和端口 可通过cmd命令查找 ping和netstat -an </span></span><br><span class="line"><span class="comment">//尝试建立与服务器的连接。如果成功，则返回Socket对象。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//向服务器发送信息</span></span><br><span class="line"> pw=<span class="keyword">new</span> PrintWriter(s.getOutputStream(),<span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//读取键盘控制台的内容</span></span><br><span class="line">InputStreamReader isr=<span class="keyword">new</span> InputStreamReader(System.in);</span><br><span class="line">BufferedReader br=<span class="keyword">new</span> BufferedReader(isr);</span><br><span class="line"></span><br><span class="line"><span class="comment">//接收服务器的内容</span></span><br><span class="line">InputStreamReader isr1=<span class="keyword">new</span> InputStreamReader(s.getInputStream());</span><br><span class="line">BufferedReader br1=<span class="keyword">new</span> BufferedReader(isr1);</span><br><span class="line"></span><br><span class="line"><span class="comment">//死循环 多次交流</span></span><br><span class="line"><span class="keyword">while</span>(<span class="keyword">true</span>) &#123;</span><br><span class="line"><span class="comment">/*System.out.println(&quot;客户端说:&quot;);</span></span><br><span class="line"><span class="comment">String str=br.readLine(); //接受控制台</span></span><br><span class="line"><span class="comment">pw.println(str);//向服务器发送信息</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line">String str1=br1.readLine();<span class="comment">//接受服务器的信息</span></span><br><span class="line">jt.append(<span class="string">&quot;服务器对我说说:&quot;</span>+str1+<span class="string">&quot;\r\n&quot;</span>);  <span class="comment">//在多行文本域显示</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//s.close();//关闭头接字流</span></span><br><span class="line">&#125;<span class="keyword">catch</span>(Exception e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line">Client c=<span class="keyword">new</span> Client();</span><br><span class="line"><span class="keyword">new</span> Client();</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line"><span class="keyword">if</span>(e.getSource()==b) &#123;</span><br><span class="line">String str=t.getText();</span><br><span class="line">jt.append(<span class="string">&quot;我对服务器说:&quot;</span>+str+<span class="string">&quot;\r\n&quot;</span>);  <span class="comment">//append追加  不覆盖前面的内容</span></span><br><span class="line"><span class="comment">//setText与append区别 在于不会覆盖之前的信息</span></span><br><span class="line">pw.println(str);<span class="comment">//发送给客户端</span></span><br><span class="line">t.setText(<span class="string">&quot;&quot;</span>);<span class="comment">//每次发完单行文本框清空</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>Server服务端</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> 网络通信;</span><br><span class="line"><span class="keyword">import</span> java.net.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionListener;</span><br><span class="line"><span class="comment">//尝试写好窗口 继承实现</span></span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Server</span> <span class="keyword">implements</span> <span class="title">ActionListener</span> </span>&#123;</span><br><span class="line">JFrame f;</span><br><span class="line">JPanel p;</span><br><span class="line">JTextArea jt; <span class="comment">//多行文本域</span></span><br><span class="line">JTextField t;  <span class="comment">//单行</span></span><br><span class="line">JButton b;</span><br><span class="line">JScrollPane jsp;<span class="comment">//滚动条</span></span><br><span class="line">PrintWriter pw;  <span class="comment">//消除局部变量</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Server</span><span class="params">()</span></span>&#123;</span><br><span class="line">f=<span class="keyword">new</span> JFrame(<span class="string">&quot;服务器窗口&quot;</span>);</span><br><span class="line">p=<span class="keyword">new</span> JPanel();</span><br><span class="line">jt=<span class="keyword">new</span> JTextArea();</span><br><span class="line">t=<span class="keyword">new</span> JTextField(<span class="number">20</span>);</span><br><span class="line">b=<span class="keyword">new</span> JButton(<span class="string">&quot;发送&quot;</span>);</span><br><span class="line">b.addActionListener(<span class="keyword">this</span>);</span><br><span class="line">f.add(p);</span><br><span class="line"></span><br><span class="line">p.add(jt);</span><br><span class="line">p.add(t);</span><br><span class="line">p.add(b);</span><br><span class="line">jsp=<span class="keyword">new</span> JScrollPane(jt); <span class="comment">//文本域加滚动条</span></span><br><span class="line">f.add(jsp);</span><br><span class="line">f.setSize(<span class="number">350</span>,<span class="number">250</span>);</span><br><span class="line">f.setLocation(<span class="number">300</span>, <span class="number">600</span>);</span><br><span class="line">f.add(p,BorderLayout.SOUTH);</span><br><span class="line">f.setIconImage(<span class="keyword">new</span> ImageIcon(<span class="string">&quot;MyImage/qq图标.jpg&quot;</span>).getImage());</span><br><span class="line">f.setResizable(<span class="keyword">false</span>);</span><br><span class="line">f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class="line"><span class="comment">/*System.exit(0)是退出整个程序，如果有多个窗口，全部都销毁退出。</span></span><br><span class="line"><span class="comment">frame.setDefaultCloseOperation()是设置用户在此窗体上发起&quot;close&quot;时默认执行的操作。必须指定以下选项之一： </span></span><br><span class="line"><span class="comment">  (1)DO_NOTHING_ON_CLOSE（在WindowConstants中定义）：不执行任何操作，要求程序在已注册的 WindowListener 对象的 windowClosing 方法中处理该操作。 </span></span><br><span class="line"><span class="comment">  (2)HIDE_ON_CLOSE（在WindowConstants中定义）：调用任意已注册的WindowListener对象后自动隐藏该窗体。 </span></span><br><span class="line"><span class="comment">  (3)DISPOSE_ON_CLOSE（在WindowConstants中定义）：调用任意已注册WindowListener的对象后自动隐藏并释放该窗体。 </span></span><br><span class="line"><span class="comment">  (4)EXIT_ON_CLOSE（在JFrame中定义）：使用System exit方法退出应用程序。仅在应用程序中使用。 </span></span><br><span class="line"><span class="comment">默认情况下，该值被设置为 HIDE_ON_CLOSE</span></span><br><span class="line"><span class="comment">也就是说没有设置的话,默认点关闭时只是隐藏窗体,在后台进程中还可以看到，如果有多个窗口，只是销毁调用dispose的窗口，其他窗口仍然存在，整个应用程序还是处于运行状态。*/</span></span><br><span class="line">f.setVisible(<span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*  查找IP地址方法</span></span><br><span class="line"><span class="comment">InetAddress ip;</span></span><br><span class="line"><span class="comment">try &#123;</span></span><br><span class="line"><span class="comment">ip = InetAddress.getLocalHost();</span></span><br><span class="line"><span class="comment"> //创建本地主机的InetAddress对象(含主机名+IP地址)   </span></span><br><span class="line"><span class="comment">String localname = ip.getHostName(); // 获取本机名</span></span><br><span class="line"><span class="comment">  String localip = ip.getHostAddress(); // 获取IP地址</span></span><br><span class="line"><span class="comment">  InetAddress  aa=  InetAddress.getByName(&quot;SC-201611191816&quot;);</span></span><br><span class="line"><span class="comment">//已知主机名，返回主机的InetAddress对象</span></span><br><span class="line"><span class="comment">  System.out.println(&quot;本机名：&quot; + localname);</span></span><br><span class="line"><span class="comment">  System.out.println(&quot;本机IP地址：&quot; + localip); </span></span><br><span class="line"><span class="comment">  System.out.println(&quot;本机InetAddress对象：&quot; + ip);</span></span><br><span class="line"><span class="comment">  System.out.println(&quot;aa：&quot; + aa);</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">&#125; catch (UnknownHostException e1) &#123;</span></span><br><span class="line"><span class="comment">// TODO 自动生成的 catch 块</span></span><br><span class="line"><span class="comment">e1.printStackTrace();</span></span><br><span class="line"><span class="comment">&#125; </span></span><br><span class="line"><span class="comment">       </span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">//服务端程序思路</span></span><br><span class="line"><span class="comment">//创建一个服务器套接字(ServerSocket)，绑定到指定的端口。</span></span><br><span class="line"><span class="comment">//调用accept()方法，侦听来自客户端的请求，如果客户发出请求，则接受连接，返回通信套接字(Socket)。</span></span><br><span class="line"><span class="comment">//InputStreamReader getInputStream BufferedReader 读取客户端和控制台</span></span><br><span class="line"><span class="comment">//调用Socket的getInputStream（读取）和getOutpuStream（发送）方法，获得I/O流，开始网络数据的接收和发送</span></span><br><span class="line"><span class="comment">//PrintWriter  getOutputStream方法发送</span></span><br><span class="line"><span class="comment">//关闭通信套接字，关闭服务器套接字。</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">ServerSocket ss=<span class="keyword">new</span> ServerSocket(<span class="number">8998</span>);</span><br><span class="line"><span class="comment">//ServerSocket在服务器上定义一个接口  方便客户端连接</span></span><br><span class="line">System.out.println(<span class="string">&quot;服务器正在监听&quot;</span>);</span><br><span class="line">Socket so=ss.accept();</span><br><span class="line"><span class="comment">//等待客户机的链接，若链接，则创建一个Socket类型的套接字</span></span><br><span class="line"><span class="comment">//套接字：连接应用程序和端口 客户端与服务器通过套接字建立连接和通信</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//读取客户端发来的信息</span></span><br><span class="line"><span class="comment">//先利用InputStreamReader将InputStream转化成字符流。</span></span><br><span class="line"><span class="comment">//然后再使用BufferedReader建立缓冲区，以提高效率。</span></span><br><span class="line"><span class="comment">//readLine()方法读取</span></span><br><span class="line">InputStreamReader isr=<span class="keyword">new</span> InputStreamReader(so.getInputStream());</span><br><span class="line">BufferedReader br=<span class="keyword">new</span> BufferedReader(isr);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//给客户端发信息</span></span><br><span class="line"><span class="comment">//利用PrintWriter类对OutputStream进行包装</span></span><br><span class="line"><span class="comment">//PrintWriter称为打印输出流，包装类，它可以直接输出各种类型的数据。</span></span><br><span class="line"><span class="comment">//如：void println( String ) ;</span></span><br><span class="line">         pw = <span class="keyword">new</span> PrintWriter(so.getOutputStream(),<span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//读取服务器控制台发来的信息</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">         InputStreamReader isr1=new InputStreamReader(System.in);</span></span><br><span class="line"><span class="comment">BufferedReader br1=new BufferedReader(isr1);</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">while</span>(<span class="keyword">true</span>) &#123;</span><br><span class="line">String str=br.readLine();  <span class="comment">//接受客户端的信息</span></span><br><span class="line">jt.append(<span class="string">&quot;客户端对我说说:&quot;</span>+str+<span class="string">&quot;\r\n&quot;</span>);  <span class="comment">//在多行文本域显示</span></span><br><span class="line"><span class="comment">/*System.out.println(&quot;服务器说:&quot;);</span></span><br><span class="line"><span class="comment">String str1=br1.readLine();</span></span><br><span class="line"><span class="comment">pw.println(str1);   //输出服务器发送的信息  */</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//so.close();//关闭套接字流    结束点红点 再点双叉防止下次运行 端口被占用</span></span><br><span class="line">&#125;<span class="keyword">catch</span>(Exception e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line">Server s=<span class="keyword">new</span> Server();</span><br><span class="line"><span class="keyword">new</span> Server();</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//监听</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line"><span class="keyword">if</span>(e.getSource()==b) &#123;  <span class="comment">//是否点击按钮发送</span></span><br><span class="line">String str=t.getText();   <span class="comment">//从单行文本域中取出1来</span></span><br><span class="line">jt.append(<span class="string">&quot;我对客户端说:&quot;</span>+str+<span class="string">&quot;\r\n&quot;</span>);  <span class="comment">//append追加  不覆盖前面的内容  发送到多行文本域</span></span><br><span class="line"><span class="comment">//setText与append区别 在于不会覆盖之前的信息</span></span><br><span class="line">pw.println(str); <span class="comment">//发送给客户端</span></span><br><span class="line">t.setText(<span class="string">&quot;&quot;</span>); <span class="comment">//每次发完单行文本框清空</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/03/bf4f1d6a414f9a4ddf2f0e62b0234107.png"></p>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java👉IO流</title>
      <link href="2021/01/05/%E5%90%8E%E7%AB%AF/Java/Java_IO%E6%B5%81/"/>
      <url>2021/01/05/%E5%90%8E%E7%AB%AF/Java/Java_IO%E6%B5%81/</url>
      
        <content type="html"><![CDATA[<h1 id="I-O"><a href="#I-O" class="headerlink" title="I/O"></a>I/O</h1><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/29/8a4039605c0e57c609f0d217f0bc9582.png"></p><h2 id="文件、File类、java-io包"><a href="#文件、File类、java-io包" class="headerlink" title="文件、File类、java.io包"></a>文件、File类、java.io包</h2><p><code>文件</code>可以认为是相关记录或存放在一起的数据的集合；<br>文件一般是存放在<code>磁盘上</code>的，例如：硬盘、光盘和软盘等。</p><p> <code>File文件类</code>提供了文件和目录管理的功能，主要包括：</p><ul><li>文件及目录的创建；</li><li>文件名、文件大小、最后修改日期等文件属性的查询；</li><li>文件目录管理、文件夹创建等操作。</li><li>File类位于<code>java.io</code>包中。 </li></ul><blockquote><p>注意，File类并<code>不能直接</code>对文件内容进行读/写操作，只能查看文件的<code>属性</code>。</p></blockquote><h2 id="文件操作"><a href="#文件操作" class="headerlink" title="文件操作"></a>文件操作</h2><p>文件对象（即，File类对象）不但可以表示文件，还可以表示目录，在程序中一个File类对象可以代表一个文件或目录。<img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/26/af5d5b286e435e5e67d969bb564a808e.png"></p><ul><li>文件路径的几种<code>表达形式</code>：<br>File f1 = new File( “c:/ java123/abc.txt”  );<br>File f1 = new File( “c:// java123// abc.txt”  );</li><li>创建文件对象<code>并非创建文件本身</code>，而是创建一个File类的对象所具有的<code>存储空间</code>，为后续文件的管理、文件的读写做好<code>准备</code>。<br>File f1 = new File( “<code>c:/ java123/abc.txt</code>“  );</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">创建文件:</span><br><span class="line">File f=<span class="keyword">new</span> File(<span class="string">&quot;C:/java123/input.txt&quot;</span>); <span class="comment">//开辟存储空间</span></span><br><span class="line">f.createNewFile(); <span class="comment">//创建文件</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/26/fbfecaa09d430d7d914449d031a5a1ec.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/26/03b69db45e9355b0e740b6dcc6c003c6.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/26/4b576515f1602659c7062b7f3765bcbc.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/26/10aa88f9d02264d0bc46688121443ea5.png"></p><blockquote><p><code>FilenameFilter </code>： 是一个接口，该接口有唯一方法 boolean  accept(File dir, String name) 用于判断dir、name指定文件是否为需要类型。<br><code>只要创建一个类，实现此接口即可实现文件过滤功能</code>。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> io流;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyFile3</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line">File newwj=<span class="keyword">new</span> File(<span class="string">&quot;c:/java123/a.txt&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(newwj.exists()) &#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">newwj.createNewFile();<span class="comment">//创建文件</span></span><br><span class="line">System.out.println(<span class="string">&quot;文件已创建&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">catch</span>(IOException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(<span class="string">&quot;名称:&quot;</span>+newwj.getPath());</span><br><span class="line">System.out.println(<span class="string">&quot;绝对路径:&quot;</span>+newwj.getAbsolutePath());</span><br><span class="line">System.out.println(<span class="string">&quot;文件父路径:&quot;</span>+newwj.getParent());</span><br><span class="line">System.out.println();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> io流;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.text.*;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyFile</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String FilePath=<span class="string">&quot;c:/java123/媒体文件夹/图片.jpg&quot;</span>;</span><br><span class="line"><span class="comment">//private static final String FilePath=&quot;c:&quot;+File.pathSeparator+&quot;java123&quot;+File.pathSeparator+&quot;abc.txt&quot;;</span></span><br><span class="line"><span class="comment">//pathseparator 文件路径分隔符</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line"><span class="comment">//当前工程所在的根目录 new File(&quot;.&quot;)</span></span><br><span class="line"><span class="comment">//方法1</span></span><br><span class="line">File wj=<span class="keyword">new</span> File(FilePath);</span><br><span class="line"><span class="comment">//方法2</span></span><br><span class="line"><span class="comment">//File wj=new File(&quot;c:/java123&quot;,&quot;abc.txt&quot;);</span></span><br><span class="line"><span class="comment">//方法3</span></span><br><span class="line"><span class="comment">//File dir=new File(&quot;c:/java123&quot;);</span></span><br><span class="line"><span class="comment">//File wj=new File(dir,&quot;abc.txt&quot;);</span></span><br><span class="line">System.out.println(<span class="string">&quot;文件或目录是否存在：&quot;</span>+wj.exists());</span><br><span class="line">System.out.println(<span class="string">&quot;是文件吗:&quot;</span>+wj.isFile());</span><br><span class="line">System.out.println(<span class="string">&quot;是目录吗:&quot;</span>+wj.isDirectory());</span><br><span class="line">System.out.println(<span class="string">&quot;名称:&quot;</span>+wj.getName());</span><br><span class="line">System.out.println(<span class="string">&quot;绝对路径:&quot;</span>+wj.getAbsolutePath());</span><br><span class="line">System.out.println(<span class="string">&quot;文件大小:&quot;</span>+wj.length());   <span class="comment">//文件的长度，以字节为单位</span></span><br><span class="line">System.out.println(<span class="string">&quot;是否为可读:&quot;</span>+wj.canRead());</span><br><span class="line">System.out.println(<span class="string">&quot;是否被写入:&quot;</span>+wj.canWrite());</span><br><span class="line">System.out.println(<span class="string">&quot;文件名字:&quot;</span>+wj.getName());</span><br><span class="line">System.out.println(<span class="string">&quot;文件父路径:&quot;</span>+wj.getParent());</span><br><span class="line">System.out.println();</span><br><span class="line"></span><br><span class="line">SimpleDateFormat sj=<span class="keyword">new</span> SimpleDateFormat(<span class="string">&quot;yyyy-MM-dd&quot;</span>);</span><br><span class="line">Date a=<span class="keyword">new</span> Date(wj.lastModified());</span><br><span class="line">System.out.println(<span class="string">&quot;最后修改日期:&quot;</span>+wj.lastModified()+<span class="string">&quot;  &quot;</span>+sj.format(a));</span><br><span class="line"></span><br><span class="line"><span class="comment">//使用createNewFile类创建文件</span></span><br><span class="line">File f1=<span class="keyword">new</span> File(<span class="string">&quot;c:/java123/新建文件.txt&quot;</span>);</span><br><span class="line"><span class="keyword">boolean</span> b= f1.createNewFile();</span><br><span class="line">System.out.println(<span class="string">&quot;创建文件成功:&quot;</span>+ b);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//使用mkdir创建单级空文件夹     mkdir可以创建多级空文件夹，单级也行</span></span><br><span class="line">File f2=<span class="keyword">new</span> File(<span class="string">&quot;C:/java123/新建文件夹&quot;</span>);</span><br><span class="line"><span class="keyword">boolean</span> b1=f2.mkdir();</span><br><span class="line">System.out.println(<span class="string">&quot;创建文件夹成功:&quot;</span>+b1);</span><br><span class="line"><span class="comment">//多级</span></span><br><span class="line">File f3=<span class="keyword">new</span> File(<span class="string">&quot;c:/java123/新建多级文件夹/1/2/3&quot;</span>);</span><br><span class="line"><span class="keyword">boolean</span> b3=f3.mkdirs();</span><br><span class="line">System.out.println(<span class="string">&quot;创建多级文件夹成功:&quot;</span>+b3);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//list 返回文件下所以文件 及名称  隐藏文件也可以查看</span></span><br><span class="line">File f4=<span class="keyword">new</span> File(<span class="string">&quot;c:/java123&quot;</span>);</span><br><span class="line">String arr[]=f4.list();</span><br><span class="line"><span class="keyword">for</span>(String fileName:arr) &#123;</span><br><span class="line">System.out.println(fileName);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//listFiles</span></span><br><span class="line">File f5=<span class="keyword">new</span> File(<span class="string">&quot;c:/java123&quot;</span>);</span><br><span class="line">File []  files=f5.listFiles();</span><br><span class="line"><span class="keyword">for</span>(File f:files) &#123;</span><br><span class="line">System.out.println(f);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//使用delete删除文件或文件夹</span></span><br><span class="line"><span class="comment">//文件夹中有内容 不会删除返回false    从硬盘中删除 不走回收站，谨慎</span></span><br><span class="line"><span class="comment">/*if(f1.exists()&amp;&amp;f1.isFile()) &#123;</span></span><br><span class="line"><span class="comment"> boolean b4=f1.delete();//文件删除</span></span><br><span class="line"><span class="comment">System.out.println(&quot;删除成功&quot;+b4);</span></span><br><span class="line"><span class="comment">&#125;  */</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> io流;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="comment">//列出指定目录下的所有java源文件和满足条件的文件</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FileAccept</span> <span class="keyword">implements</span> <span class="title">FilenameFilter</span></span>&#123;</span><br><span class="line">String extName=<span class="string">&quot;&quot;</span>;</span><br><span class="line">FileAccept(String extName)&#123;  <span class="comment">//构造方法赋值过滤条件</span></span><br><span class="line"><span class="keyword">this</span>.extName=extName;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">accept</span><span class="params">(java.io.File file,String fileName)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> fileName.endsWith(extName);<span class="comment">//过滤条件w</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyFile5</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line">File dir=<span class="keyword">new</span> File(<span class="string">&quot;c:/java123&quot;</span>);</span><br><span class="line">String[] fileNames=dir.list();<span class="comment">//返回目录dir中的文件和目录的名称所组成的字符串数组</span></span><br><span class="line">System.out.println(<span class="string">&quot;所有文件数:&quot;</span>+fileNames.length);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;fileNames.length;i++) &#123;</span><br><span class="line">System.out.println(fileNames[i]);</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(<span class="string">&quot;\n\n&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//</span></span><br><span class="line">FileAccept con=<span class="keyword">new</span> FileAccept(<span class="string">&quot;mp3&quot;</span>);<span class="comment">//过滤条件</span></span><br><span class="line">fileNames=dir.list(con);</span><br><span class="line">System.out.println(<span class="string">&quot;所有mp3文件:&quot;</span>+fileNames.length);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;fileNames.length;i++) &#123;</span><br><span class="line">System.out.println(fileNames[i]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">&quot;\n\n&quot;</span>);</span><br><span class="line">FileAccept con1=<span class="keyword">new</span> FileAccept(<span class="string">&quot;txt&quot;</span>);</span><br><span class="line">fileNames=dir.list(con1);</span><br><span class="line">System.out.println(<span class="string">&quot;所有txt文件:&quot;</span>+fileNames.length);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;fileNames.length;i++) &#123;</span><br><span class="line">System.out.println(fileNames[i]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="流的概念"><a href="#流的概念" class="headerlink" title="流的概念"></a>流的概念</h2><ul><li>File类不负责文件的读写。Java中文件读写是通过“<code>流</code>”的形式完成的。</li><li>流是一组<code>有序的数据序列</code>，也称“数据流”。</li><li>流是以<code>先进先出</code>的方式完成数据的<code>发送</code>和<code>接收</code>。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/26/b68fbb79829d99edfafae2150fbb7ab9.png"></li><li>根据数据的流向不同，分为<code>输入流</code>和<code>输出流</code>，如果数据的流向是从<code>外设</code>读取到<code>内存</code>中的程序称为“<code>输入流</code>”（Input Stream） ，反之称为<code>输出流</code>（ Output Stream ）。输入流类名以<code>In</code>开始，输出流类名以<code>Out</code>开始。</li><li>输入流： 只能从中读取数据，而不能向其写入数据。</li><li>输出流：只能向其写入数据，而不能向其读取数据。</li></ul><blockquote><p>输入输出是相对于计算机而言的，输入in就是进来，进入CPU中，所以是读取，而输出out，是计算机往外输出，就是写。</p></blockquote><blockquote><p>注：如果从硬盘的角度来考虑，图15.1所示的数据流应该是输入流才对；但划分输入/输出流时是从程序运行所在的内存的角度来考虑的，因此如图15.1所在的流时输出流。而不是输入流。</p></blockquote><p>    对于如图15.2所示的数据流向，数据从服务器通过网络流向客户端，在这种情况下,Server端的内存负责将数据输出到网络里，因此Server端的程序使用输出流；Client端的内存负责从网络中读取数据，因此Client端的程序应该使用输入流。<br> <img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/02/32cfcf78a226c8b046f648aec39fdeb6.png"></p><h2 id="流的分类"><a href="#流的分类" class="headerlink" title="流的分类"></a>流的分类</h2><ul><li><p>按照数据处理的方式不同，流又可分为<code>字节流</code>、<code>字符流</code>。字节流类名以Stream结尾，字符流类名以Reader或Writer结尾。</p></li><li><p><code>字节流</code>是指8位的通用字节流，<code>以字节为基本单位处理</code>，适合处理二进制文件（音频文件、图片、歌曲等），对于字节流进行操作的类大部分继承于<code>InputStream</code>（输入字节流）类和<code>OutputStream</code>（输出字节流）类；</p></li><li><p><code>字符流</code>是指16位的Unicode字符流，<code>以字符（两个字节）为基本单位处理</code>，非常适合处理字符串和文本，对于字符流进行操作的类大部分继承于<code>Reader</code>（读取流）类和<code>Writer</code>（写入流）类。</p></li><li><p>字节流可用于任何类型的对象，包括二进制对象，而字符流<code>只能处理字符或者字符串</code>。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/26/c9f3c95a98f01df15b9f7431ac4b02ec.png"></p></li></ul><table><thead><tr><th>分类</th><th>字节输入流</th><th>字节输出流</th><th>字符输入流</th><th>字符输出流</th></tr></thead><tbody><tr><td>抽象基类</td><td><em>InputStream</em></td><td><em>OutputStream</em></td><td><em>Reader</em></td><td><em>Writer</em></td></tr><tr><td>访问文件</td><td><strong>FileInputStream</strong></td><td><strong>FileOutputStream</strong></td><td><strong>FileReader</strong></td><td><strong>FileWriter</strong></td></tr><tr><td>访问数组</td><td><strong>ByteArrayInputStream</strong></td><td><strong>ByteArrayOutputStream</strong></td><td><strong>CharArrayReader</strong></td><td><strong>CharArrayWriter</strong></td></tr><tr><td>访问管道</td><td><strong>PipedInputStream</strong></td><td><strong>PipedOutputStream</strong></td><td><strong>PipedReader</strong></td><td><strong>PipedWriter</strong></td></tr><tr><td>访问字符串</td><td></td><td></td><td><strong>StringReader</strong></td><td><strong>StringWriter</strong></td></tr><tr><td>缓冲流</td><td>BufferedInputStream</td><td>BufferedOutputStream</td><td>BufferedReader</td><td>BufferedWriter</td></tr><tr><td>转换流</td><td></td><td></td><td>InputStreamReader</td><td>OutputStreamWriter</td></tr><tr><td>对象流</td><td>ObjectInputStream</td><td>ObjectOutputStream</td><td></td><td></td></tr><tr><td>抽象基类</td><td><em>FilterInputStream</em></td><td><em>FilterOutputStream</em></td><td><em>FilterReader</em></td><td><em>FilterWriter</em></td></tr><tr><td>打印流</td><td></td><td>PrintStream</td><td></td><td>PrintWriter</td></tr><tr><td>推回输入流</td><td>PushbackInputStream</td><td></td><td>PushbackReader</td><td></td></tr><tr><td>特殊流</td><td>DataInputStream</td><td>DataOutputStream</td><td></td><td></td></tr></tbody></table><blockquote><p> 注：表中粗体字所标出的类代表节点流，必须直接与指定的物理节点关联：斜体字标出的类代表抽象基类，无法直接创建实例。</p></blockquote><h2 id="字节流"><a href="#字节流" class="headerlink" title="字节流"></a>字节流</h2><p>字节流——适于读写<code>二进制文件</code>.<br><code>InputStream（字节输入流）</code>和<code>OutputStream（字节输出流）</code>是字节流的两个顶层父类，提供了输入流类与输出流类的通用API。 </p><h3 id="InputStream"><a href="#InputStream" class="headerlink" title="InputStream"></a>InputStream</h3><p> InputStream是抽象类，所有字节输入流类都直接或间接继承此类。<br>字节输入流类很多，使用较多有3个：<code>FileInputStream</code>、<code>BufferedInputStream</code>和<code>DataInputStream </code><br>(1)<code>FileInputStream</code>（字节文件输入流）：此类用于<code>从本地文件</code>中<code>读取</code>内容。<br>(2)<code>BufferedInputStream</code>：此类本身带有一个<code>缓冲区</code>，在读取数据时，先放到缓冲区中，可以<code>减少对数据源的访问</code>，提高运行的效率。<br>(3)<code>DataInputStream</code>：此类提供一些基于<code>多字节读取方法</code>，从而可以读取基本数据类型的数据，如，readDouble()、readInt()<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/26/571782ec2fee591393127f2378722da2.png"></p><p>在InputStream里面包含如下3个方法：</p><ul><li><code> int read()</code>; 从输入流中读取<code>单个字节</code>（相当于从图15.5所示的水管中取出一滴水），返回所读取的字节数据（字节数据可直接转换为int类型）。</li><li><code>int read(byte[] b)</code>从输入流中最多读取b.length个字节的数据，并将其存储在字节数组b中，返回实际读取的字节数。</li><li><code>int read(byte[] b,int off,int len)</code>; 从输入流中最多读取len个字节的数据，并将其存储在数组b中，放入数组b中时，并不是从数组起点开始，而是从off位置开始，返回实际读取的字节数。</li></ul><h3 id="OutputStream"><a href="#OutputStream" class="headerlink" title="OutputStream"></a>OutputStream</h3><p>OutputStream是抽象类，所有字节输出流类都直接或间接继承此类。<br>字节输出流类很多，使用较多有3个：<code>FileOutputStream</code>、<code>BufferedOutputStream</code>和<code>DataOutputStream </code><br>(1)<code>FileOutputStream</code>（字节文件输出流）：此类用于向<code>本地文件</code>中<code>写入</code>数据。<br>(2)<code>BufferedOutputStream</code>：此类本身带有一个缓冲区，在写取数据时，先放到缓冲区中，实现缓冲的数据流。<br>(3)<code>DataOutputStream(OutputStream out) </code>：创建一个新的数据输出流，将数据<code>写入指定的基础输出流</code>。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/26/fad4c5c25c26799ebe9817ac3e5db6c0.png"><br>提供如下三个方法:</p><ul><li>void write(int c); 将指定的字节/字符输出到输出流中，其中c即可以代表字节，也可以代表字符。</li><li>void write(byte[]/char[] buf); 将字节数组/字符数组中的数据输出到指定输出流中。</li><li>void write(byte[]/char[] buf, int off,int len ); 将字节数组/字符数组中从off位置开始，长度为len的字节/字符输出到输出流中。</li></ul><h2 id="字符流"><a href="#字符流" class="headerlink" title="字符流"></a>字符流</h2><p>字符流——适于读写<code>文本文件</code><br>Reader和Writer是java.io包中的两个字符流类的顶层抽象父类，定义了在I/O流中读写字符数据的通用API。<br>在Java中，字符采用是16位的Unicode字符编码。常见字符输入/输出流是由<code>Reader和Writer</code>抽象类派生出来的。处理数据时是以<code>字符</code>为基本单位的。</p><h3 id="Reader"><a href="#Reader" class="headerlink" title="Reader"></a>Reader</h3><p><code>字符输入流</code><br><code>FileReader</code>：用来读取字符文件的便捷类。<br><code>BufferedReader</code>类：是Reader类的子类，为Reader 对象添加<code>字符缓冲器</code>，为数据输入分配内存存储空间，存取数据更为有效。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/26/3deb370c77aca4d3b2451a6743bc91a0.png"><br>在Reader中包含如下3个方法：</p><ul><li><code>int read()</code>; 从输入流中读取单个字符（相当于从图15.5所示的水管中取出一滴水），返回所读取的字符数据（字节数据可直接转换为int类型）。</li><li><code>int read(char[] b)</code>从输入流中最多读取b.length个字符的数据，并将其存储在字节数组b中，返回实际读取的字符数。</li><li><code>int read(char[] b,int off,int len);</code> 从输入流中最多读取len个字符的数据，并将其存储在数组b中，放入数组b中时，并不是从数组起点开始，而是从off位置开始，返回实际读取的字符数。</li></ul><h3 id="Writer"><a href="#Writer" class="headerlink" title="Writer"></a>Writer</h3><p><code>字符输出流</code><br>Writer写入字符类型<br>字符输出流类很多，使用较多的有：FileWriter、BufferedWriter<br>（1）<code>FileWriter</code>：用来写入<code>字符文件</code>的便捷类。FileWriter 用于写入字符流。要写入原始字节流。<br>（2）<code>BufferedWriter</code>：将文本写入<code>字符输出流</code>，缓冲各个字符，从而提供单个字符、数组和字符串的高效写入。可以指定缓冲区的大小，或者接受默认的大小。在大多数情况下，默认值就足够大了。除非要求提示输出，否则建议用 BufferedWriter 包装所有其 write() 操作可能开销很高的 Writer。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/26/d972f7dfe72a073d33c17d34c2728002.png"><br>提供如下方法:</p><ul><li><code>void write(int c)</code>; 将指定的字节/字符输出到输出流中，其中c即可以代表字节，也可以代表字符。</li><li><code>void write(byte[]/char[] buf)</code>; 将字节数组/字符数组中的数据输出到指定输出流中。</li><li><code>void write(byte[]/char[] buf, int off,int len )</code>; 将字节数组/字符数组中从off位置开始，长度为len的字节/字符输出到输出流中。</li><li><code>void write(String str)</code>; 将str字符串里包含的字符输出到指定输出流中。</li><li><code>void write (String str, int off, int len)</code>; 将str字符串里面从off位置开始，长度为len的字符输出到指定输出流中。</li></ul><h2 id="文件流"><a href="#文件流" class="headerlink" title="文件流"></a>文件流</h2><h3 id="FileInputStream"><a href="#FileInputStream" class="headerlink" title="FileInputStream"></a>FileInputStream</h3><h4 id="读文件"><a href="#读文件" class="headerlink" title="读文件"></a>读文件</h4><p>使用FileInputStream类 读文件<br><code>FileInputStream</code>类称为<code>文件输入流</code>，继承于InputStream类，是进行文件读操作的最基本类；<br>它的作用是将<code>文件中的数据输入到内存</code>中，我们可以利用它来<code>读文件</code>；<br>由于它属于<code>字节流</code>，因此在读取Unicode字符（如中文）的文件时可能会出现问题。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/26/1a625dc3173a56c68d4b9c0c8298a581.png"><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/26/e0f08cba2758d309112110e6e40e5ae3.png"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*编写Java程序，使用FileInputStream读取文件“c:\java123\test.txt”的内容，并输出到控制台。一次读1个字节。*/</span></span><br><span class="line"><span class="keyword">package</span> io流;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FileInputStreamDemo1</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">File file=<span class="keyword">new</span> File(<span class="string">&quot;C:/java123/test.txt&quot;</span>);<span class="comment">//创建文件对象</span></span><br><span class="line">FileInputStream fis=<span class="keyword">new</span> FileInputStream(file);</span><br><span class="line"><span class="comment">//使用文件对象创建文件输入流对象，相对于打开文件</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;file.length();i++) &#123;</span><br><span class="line"><span class="keyword">char</span> ch=(<span class="keyword">char</span>)(fis.read()); <span class="comment">//循环读取字符</span></span><br><span class="line">System.out.println(ch);</span><br><span class="line">&#125;</span><br><span class="line">System.out.println();</span><br><span class="line">fis.close();<span class="comment">//关闭流</span></span><br><span class="line">&#125;<span class="keyword">catch</span>(FileNotFoundException e) &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;文件打开失败&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">catch</span>(IOException e1) &#123;</span><br><span class="line">e1.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>手动创建C:/java123/test.txt文件，test.txt文件里内容为123；<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/26/7144ece395f8c7795269ab44245c9d2f.png"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*编写Java程序，使用FileInputStream读取文件“c:\java123\test.txt”的内容，并输出到控制台。读到的数据存放到byte型数组中*/</span></span><br><span class="line"><span class="keyword">package</span> io流;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyFile1</span> </span>&#123;</span><br><span class="line">  <span class="comment">///文件读取 FileInputStream  read 方法</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">File wj=<span class="keyword">new</span> File(<span class="string">&quot;c:/java123/abc.txt&quot;</span>); <span class="comment">//创建文件对象</span></span><br><span class="line">FileInputStream f=<span class="keyword">new</span> FileInputStream(wj);</span><br><span class="line"><span class="comment">/*//单个字节的读取/*</span></span><br><span class="line"><span class="comment">for(int i=0;i&lt;wj.length();i++) &#123;</span></span><br><span class="line"><span class="comment">char ch=(char)f.read();</span></span><br><span class="line"><span class="comment">System.out.print(ch);</span></span><br><span class="line"><span class="comment">&#125; */</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//多个字节读取 字节数组</span></span><br><span class="line"><span class="keyword">byte</span> buy[]=<span class="keyword">new</span> <span class="keyword">byte</span>[(<span class="keyword">int</span>)(wj.length())];  <span class="comment">//根据文件字节长度创建字节数组</span></span><br><span class="line">f.read(buy); <span class="comment">//读取文件中的数据放入字节数组中 </span></span><br><span class="line">String str=<span class="keyword">new</span> String(buy);  <span class="comment">//字节转换成字符</span></span><br><span class="line">System.out.println(str);</span><br><span class="line">f.close();</span><br><span class="line"><span class="comment">//</span></span><br><span class="line">&#125;<span class="keyword">catch</span>(FileNotFoundException fnfe) &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;文件打开失败&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">catch</span>(IOException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="写文件"><a href="#写文件" class="headerlink" title="写文件"></a>写文件</h4><p>使用<code>FileOutputStream类</code> 写文件<br>FileOutputStream类称为<code>文件输出流</code>，继承于OutputStream类，是进行文件写操作的最基本类；<br>它的作用是将<code>内存中的数据输出到文件</code>中，我们可以利用它来写文件。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/26/df394541f9f115357ed9c4e700a538f7.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/26/9846114d1b058195361ff7883d1f4ee9.png"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*编写Java程序，使用FileInputStream写文件“c:\java123\test.txt”。一次写一个字节。*/</span></span><br><span class="line"><span class="keyword">package</span> io流;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FileOutputStreamDemo1</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException</span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">String str=<span class="string">&quot;Hello World!&quot;</span>;</span><br><span class="line">File file=<span class="keyword">new</span> File(<span class="string">&quot;C:/java123/test.txt&quot;</span>);<span class="comment">//创建文件对象</span></span><br><span class="line"><span class="comment">//通过文件对象创建文件输出流对象</span></span><br><span class="line"><span class="comment">//附加第二个参数true，指定进行文件追加，默认为不追加</span></span><br><span class="line">FileOutputStream fos=<span class="keyword">new</span> FileOutputStream(file,<span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//将逐个字符写入文件中</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;str.length();i++)&#123;</span><br><span class="line">fos.write(str.charAt(i)); <span class="comment">//charAt返回指定索引位置的char值</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/26/384faf5dfbeeb82d396ff445ffc8908a.png"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*编写Java程序，使用FileInputStream写文件“c:\java123\test.txt”。一次写一个字节数组。*/</span></span><br><span class="line"><span class="keyword">package</span> io流;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FileOutputStreamDemo2</span> </span>&#123;</span><br><span class="line">   <span class="comment">//在函数内部不进行异常处理，将异常抛出函数外部</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">String str=<span class="string">&quot;I Love Java&quot;</span>;</span><br><span class="line"><span class="comment">//通过文件名创建文件输出流对象</span></span><br><span class="line">FileOutputStream fos=<span class="keyword">new</span> FileOutputStream(<span class="string">&quot;C:/java123/test.txt&quot;</span>);</span><br><span class="line"><span class="keyword">byte</span> buffer[]=str.getBytes(); <span class="comment">//将字符串转换为字节数组</span></span><br><span class="line"><span class="comment">//将字节数组中包含的数据一次性写入到文件中</span></span><br><span class="line">fos.write(buffer);</span><br><span class="line">fos.close();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/26/83356024587dea48c7a9098ef624855d.png"></p><h4 id="复制文件"><a href="#复制文件" class="headerlink" title="复制文件"></a>复制文件</h4><p>FileInputStream类和FileOutputStream类是成对出现的，一个进行<code>输入（读文件</code>）操作，一个进行<code>输出（写文件）</code>操作；<br>由于采用<code>字节</code>方式进行数据传输，不必考虑数据的格式问题，这两个类对文件操作的效率较高；<br>可以使用这两个类完成复制文件的操作。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> io流;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="comment">//文件的复制</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyFile7</span> </span>&#123;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">   File f=<span class="keyword">new</span> File(<span class="string">&quot;c:/java123/abc.txt&quot;</span>);</span><br><span class="line">       File destination =<span class="keyword">new</span> File(<span class="string">&quot;c:/java123/abccopy.txt&quot;</span>);</span><br><span class="line">      </span><br><span class="line">       <span class="keyword">try</span> &#123;</span><br><span class="line">           <span class="comment">//1.创建文件 输入流从系统文件获取字节</span></span><br><span class="line">          FileInputStream fis=<span class="keyword">new</span> FileInputStream(f);</span><br><span class="line">           <span class="comment">//2.创建文件输出流将数据写入系统文件</span></span><br><span class="line">          FileOutputStream fos=<span class="keyword">new</span> FileOutputStream(destination);</span><br><span class="line">           <span class="comment">///3.保存字节数g</span></span><br><span class="line">          System.out.println(<span class="string">&quot;文件长度:&quot;</span>+fis.available()); <span class="comment">//返回文件的大小2</span></span><br><span class="line">           <span class="comment">//4.输入流读取字节数，并保存到字节数组中</span></span><br><span class="line">          <span class="keyword">byte</span> []buy=<span class="keyword">new</span> <span class="keyword">byte</span>[fis.available()];</span><br><span class="line">           <span class="comment">//5.将字节数组写入目标文件中</span></span><br><span class="line">          fis.read(buy);</span><br><span class="line">          fos.write(buy);</span><br><span class="line">           System.out.println(<span class="string">&quot;成功复制文本&quot;</span>);</span><br><span class="line">           <span class="comment">//6.最后关闭输入输出流，释放连接资源</span></span><br><span class="line">           fis.close();</span><br><span class="line">           fos.close();</span><br><span class="line">       &#125; <span class="keyword">catch</span> (FileNotFoundException e) &#123;</span><br><span class="line">           System.out.println(<span class="string">&quot;FileNotFoundException&quot;</span>); </span><br><span class="line">           e.printStackTrace();</span><br><span class="line">       &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">           System.out.println(<span class="string">&quot;IOException &quot;</span>); </span><br><span class="line">           e.printStackTrace();</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> io流;</span><br><span class="line"><span class="comment">//*****************图片的复制*****************</span></span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileNotFoundException;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyFile8</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        File f=<span class="keyword">new</span> File(<span class="string">&quot;c:/java123/媒体文件夹/图片.jpg&quot;</span>);</span><br><span class="line">        File destination =<span class="keyword">new</span> File(<span class="string">&quot;c:/java123/图片copy.jpg&quot;</span>);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//1.创建文件 输入流从系统文件获取字节</span></span><br><span class="line">            FileInputStream fis=<span class="keyword">new</span> FileInputStream(f);</span><br><span class="line">            <span class="comment">//2.创建文件输出流将数据写入系统文件</span></span><br><span class="line">            FileOutputStream fos=<span class="keyword">new</span> FileOutputStream(destination);</span><br><span class="line">            System.out.println(<span class="string">&quot;文件大小&quot;</span>+fis.available());</span><br><span class="line">            <span class="comment">///3.保存字节数</span></span><br><span class="line">            <span class="keyword">byte</span>[] b=<span class="keyword">new</span> <span class="keyword">byte</span>[fis.available()];</span><br><span class="line">            <span class="comment">//4.输入流读取字节数，并保存到字节数组中</span></span><br><span class="line">            fis.read(b);</span><br><span class="line">            <span class="comment">//5.将字节数组写入目标文件中</span></span><br><span class="line">            fos.write(b);</span><br><span class="line">            System.out.println(<span class="string">&quot;成功复制图片&quot;</span>);</span><br><span class="line">            <span class="comment">//6.最后关闭输入输出流，释放连接资源</span></span><br><span class="line">            fis.close();</span><br><span class="line">            fos.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (FileNotFoundException e) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;FileNotFoundException&quot;</span>); </span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;IOException &quot;</span>); </span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">````</span><br><span class="line">```java</span><br><span class="line"><span class="keyword">package</span> io流;</span><br><span class="line"><span class="comment">//*****************歌曲的复制*****************</span></span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileNotFoundException;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyFile9</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        File f=<span class="keyword">new</span> File(<span class="string">&quot;c:/java123/媒体文件夹/歌曲.mp3&quot;</span>);</span><br><span class="line">        File destination =<span class="keyword">new</span> File(<span class="string">&quot;c:/java123/歌曲copy.mp3&quot;</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//1.创建文件 输入流从系统文件获取字节</span></span><br><span class="line">            FileInputStream fis=<span class="keyword">new</span> FileInputStream(f);</span><br><span class="line">            <span class="comment">//2.创建文件输出流将数据写入系统文件</span></span><br><span class="line">            FileOutputStream fos=<span class="keyword">new</span> FileOutputStream(destination);</span><br><span class="line">            System.out.println(<span class="string">&quot;文件大小&quot;</span>+fis.available());</span><br><span class="line">            <span class="comment">///3.保存字节数</span></span><br><span class="line">            <span class="keyword">byte</span>[] b=<span class="keyword">new</span> <span class="keyword">byte</span>[fis.available()];</span><br><span class="line">            <span class="comment">//4.输入流读取字节数，并保存到字节数组中</span></span><br><span class="line">            fis.read(b);</span><br><span class="line">            <span class="comment">//5.将字节数组写入目标文件中</span></span><br><span class="line">            fos.write(b);</span><br><span class="line">            System.out.println(<span class="string">&quot;成功复制音频&quot;</span>);</span><br><span class="line">            <span class="comment">//6.最后关闭输入输出流，释放连接资源</span></span><br><span class="line">            fis.close();</span><br><span class="line">            fos.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (FileNotFoundException e) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;FileNotFoundException&quot;</span>); </span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;IOException &quot;</span>); </span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="FileReader"><a href="#FileReader" class="headerlink" title="FileReader"></a>FileReader</h2><ul><li><p>FileReader类称为<code>文件读取流</code>，允许以<code>字符流</code>的形式对文件进行读操作，其构造方法有3种重载方式，以下是常用的几种：<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/26/e8353174a28576610e7c0c3c2a0f8515.png"></p></li><li><p>该类将从文件中逐个地读取字符，效率比较低下，因此一般将该类对象包装到缓冲流中进行操作。</p></li></ul><h2 id="BufferedReader"><a href="#BufferedReader" class="headerlink" title="BufferedReader"></a>BufferedReader</h2><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/26/63e32d99f9c91991e82f55ecc535a792.png"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**FileReader配合BufferedReader读文件“c:\java123\test.txt”。逐行读取数据，并在控制台显示。*/</span></span><br><span class="line"><span class="keyword">package</span> io流;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyFile10</span> </span>&#123;</span><br><span class="line">   <span class="comment">//字符流读取 FileReader  中文</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span><span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line">File f=<span class="keyword">new</span> File(<span class="string">&quot;C:/java123/abc.txt&quot;</span>);</span><br><span class="line"><span class="comment">//通过文件对象创建文件读取流对象</span></span><br><span class="line">FileReader fr=<span class="keyword">new</span> FileReader(f);</span><br><span class="line"><span class="comment">//将文件读取流包装成缓冲读取流</span></span><br><span class="line">BufferedReader br=<span class="keyword">new</span> BufferedReader(fr);</span><br><span class="line">String str;</span><br><span class="line"><span class="keyword">while</span>((str=br.readLine())!=<span class="keyword">null</span>) &#123; <span class="comment">//逐行读取数据</span></span><br><span class="line">System.out.println(str);</span><br><span class="line">&#125;</span><br><span class="line">br.close();  <span class="comment">//关流要要反着关</span></span><br><span class="line">fr.close();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="FileWriter"><a href="#FileWriter" class="headerlink" title="FileWriter"></a>FileWriter</h2><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/26/8f995851dec92d11aa2d97e7be8fd18c.png"></p><blockquote><p>与FileReader类相似，FileWriter类同样需要使用缓冲流进行包装。</p></blockquote><h2 id="BufferedWriter"><a href="#BufferedWriter" class="headerlink" title="BufferedWriter"></a>BufferedWriter</h2><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/26/00a50ecad200819921dd90dbdf54f007.png"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*FileWriter配合BufferedWriter写文件“c:\java123\test3.txt”。逐行写数据。*/</span></span><br><span class="line"><span class="keyword">package</span> io流;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WriterDemo</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">File f=<span class="keyword">new</span> File(<span class="string">&quot;C:/java123/test.txt&quot;</span>);</span><br><span class="line"><span class="comment">//通过文件对象创建文件输出字符流对象</span></span><br><span class="line">FileWriter fw=<span class="keyword">new</span> FileWriter(f);</span><br><span class="line"><span class="comment">//将文件输出字符流包装成缓冲流</span></span><br><span class="line">BufferedWriter bw=<span class="keyword">new</span> BufferedWriter(fw);</span><br><span class="line">bw.write(<span class="string">&quot;大家好！&quot;</span>);</span><br><span class="line">bw.write(<span class="string">&quot;我正在学习java&quot;</span>);</span><br><span class="line">bw.newLine();</span><br><span class="line">bw.write(<span class="string">&quot;请多多指教！&quot;</span>);</span><br><span class="line">bw.newLine();</span><br><span class="line">bw.write(<span class="string">&quot;Luckybug@21cn.com&quot;</span>);</span><br><span class="line">bw.close();</span><br><span class="line">fw.close();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/26/ce1f22b99abeffd321a8b4100f97ef38.png"></p><h2 id="控制台输入"><a href="#控制台输入" class="headerlink" title="控制台输入"></a>控制台输入</h2><p>控制台输入<code>System.in</code>实际上是一个<code>InputStream类</code>的对象；<br>System.in 的<code>read</code>方法可以从控制台接受输入，它只能以<code>字节</code>形式接收数据，并且一次只能接受一个字节，这使输入操作很不便；<br>必须将System.in进行处理，才可以顺利地从控制台接受输入，这将使用到:<br><code>InputStreamReader</code>类<br><code>BufferedReader</code>类.<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/26/ba8085bae22cac393f5d6245a0eb035a.png"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> io流;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ConsoleInput</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span><span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line"><span class="comment">//将System.in转化为字符流对象</span></span><br><span class="line">InputStreamReader isr=<span class="keyword">new</span> InputStreamReader(System.in);</span><br><span class="line"><span class="comment">//用缓冲流包装</span></span><br><span class="line">BufferedReader br=<span class="keyword">new</span> BufferedReader(isr);</span><br><span class="line">System.out.println(<span class="string">&quot;请输入你的姓名:&quot;</span>);</span><br><span class="line">String name=br.readLine();<span class="comment">//接受输入</span></span><br><span class="line">System.out.println(<span class="string">&quot;请输入你的年龄:&quot;</span>);</span><br><span class="line"><span class="keyword">int</span> age=Integer.parseInt(br.readLine());<span class="comment">//接受输入</span></span><br><span class="line">System.out.println(<span class="string">&quot;你的姓名:&quot;</span>+name);</span><br><span class="line">System.out.println(<span class="string">&quot;你的年龄:&quot;</span>+name);</span><br><span class="line">br.close();</span><br><span class="line">isr.close();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> io流;</span><br><span class="line"> <span class="comment">/*                    通过控制台输入内容写入文件**/</span></span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//写入文件</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyFile6</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        Scanner sca=<span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"> </span><br><span class="line">        <span class="comment">//写文件</span></span><br><span class="line">        System.out.print(<span class="string">&quot;请输入文件名：&quot;</span>);</span><br><span class="line">        String name=sca.next();</span><br><span class="line">        File file=<span class="keyword">new</span> File(name+<span class="string">&quot;.txt&quot;</span>);<span class="comment">//文件名        相对路径（项目名根目录下）</span></span><br><span class="line"><span class="comment">//      FileOutputStream fs=new FileOutputStream(file);                //如果文件存在 覆盖</span></span><br><span class="line">        FileOutputStream fos=<span class="keyword">new</span> FileOutputStream(file,<span class="keyword">true</span>);<span class="comment">//true表示追加，如果文件存在 向里面继续添加内容</span></span><br><span class="line">        System.out.println(<span class="string">&quot;请输入写入的内容:&quot;</span>);</span><br><span class="line">        String str=sca.next();</span><br><span class="line">        <span class="keyword">byte</span> bytes[]=str.getBytes();         <span class="comment">//FileOutputStream 是基于字节流  把要写入的信息 保存到字节数组中</span></span><br><span class="line">        fos.write(bytes,<span class="number">0</span>,bytes.length);<span class="comment">//将字节数组中全部内容写到文件中   从0—数组的长度</span></span><br><span class="line">        fos.close();<span class="comment">//关闭流</span></span><br><span class="line">        System.out.println(<span class="string">&quot;文件写入成功！&quot;</span>);</span><br><span class="line"> </span><br><span class="line">        <span class="comment">//读文件</span></span><br><span class="line">        FileInputStream fis=<span class="keyword">new</span> FileInputStream(file);</span><br><span class="line">        <span class="keyword">byte</span> bt[]=<span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];<span class="comment">//1KB       每次最多读取的1KB  根据文件大小而定</span></span><br><span class="line">        <span class="keyword">int</span> temp=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>((temp=fis.read(bt))!=-<span class="number">1</span>)&#123;    <span class="comment">//将数据保存到数组（缓冲区）中 并返回读取的字节数  -1表示读完了</span></span><br><span class="line">            System.out.println(<span class="keyword">new</span> String(bt,<span class="number">0</span>,temp));<span class="comment">//输出数组中保存内容 按照每次读取的字节数</span></span><br><span class="line">        &#125;</span><br><span class="line">        fis.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java👉Swing组件</title>
      <link href="2021/01/05/%E5%90%8E%E7%AB%AF/Java/Java_Swing%E7%BB%84%E4%BB%B6/"/>
      <url>2021/01/05/%E5%90%8E%E7%AB%AF/Java/Java_Swing%E7%BB%84%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h1 id="Swing程序设计"><a href="#Swing程序设计" class="headerlink" title="Swing程序设计"></a>Swing程序设计</h1><p>实际开发中使用WindowBuilder插件进行图形界面设计，更加方便快捷。<br><a href="https://www.eclipse.org/windowbuilder/download.php">WindowBuilder插件下载</a><br><a href="https://blog.csdn.net/chilongxiaba/article/details/106314810">WindowBuilder插件安装</a><br><a href="https://blog.csdn.net/qq_34491508/article/details/80113911">WindowBuilder插件使用</a><br><code>GUI(图形用户界面)</code>为程序提供图形界面，<code>Swing</code>是AWT组件的增强组件，被称为“<code>轻量级组件</code>”，完全由java语言编写，可以在任何平台上运行，相反，依赖于本地平台的组件被称为“<code>重量级组件</code>”，如<code>AWT</code>。<br>Swng包的层次结构和继承关系：<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/25/51007f38a006bb3bde43c7d9cf60cd39.png"></p><h2 id="常用Swing组件"><a href="#常用Swing组件" class="headerlink" title="常用Swing组件"></a>常用Swing组件</h2><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/25/d2ab88097bc3f749bf007b3a2b19d39c.png"></p><h2 id="常用窗体"><a href="#常用窗体" class="headerlink" title="常用窗体"></a>常用窗体</h2><p><code>JFrame窗体</code>是一个<code>容器</code>，是各个组件的载体，可以通过继承<code>java.swing.JFrame</code>类创建一个窗口，在窗口中添加组件。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//构造方法</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">JFrame</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">JFrame</span><span class="params">(String title)</span></span>;</span><br><span class="line"><span class="comment">//语法格式</span></span><br><span class="line">JFrame f=<span class="keyword">new</span> JFrame(title);  <span class="comment">//f为JFrame类的对象</span></span><br><span class="line">Container c=f.getContentPane(); <span class="comment">//c为Container类的对象，可以使用JFrame对象调用getContentPane()方法获取。</span></span><br><span class="line"><span class="comment">//调用getContentPane()方法将窗体转为容器，然后在容器里添加组件。</span></span><br><span class="line">c.add(<span class="keyword">new</span> JButton(<span class="string">&quot;按钮&quot;</span>));</span><br><span class="line"><span class="comment">//remove()方法将组件从容器里删除</span></span><br><span class="line">c.remove(<span class="keyword">new</span> JButton(<span class="string">&quot;按钮&quot;</span>));</span><br></pre></td></tr></table></figure><p><code>继承JFrame实现:</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Blog_02;  </span><br><span class="line"><span class="keyword">import</span> java.awt.*;    <span class="comment">//导入awt包</span></span><br><span class="line"><span class="keyword">import</span> javax.swing.*; <span class="comment">//导入swing包</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">blog_02_05</span> <span class="keyword">extends</span> <span class="title">JFrame</span></span>&#123;  <span class="comment">//定义一个类继承JFrame</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">CreateJFrame</span><span class="params">(String title)</span> </span>&#123; <span class="comment">//定义一个方法创建JFrame</span></span><br><span class="line">JFrame f=<span class="keyword">new</span> JFrame(title);    <span class="comment">//实例化一个JFrame对象，并设置窗口名</span></span><br><span class="line">Container c=f.getContentPane();  <span class="comment">//获取容器</span></span><br><span class="line">JLabel l1=<span class="keyword">new</span> JLabel(<span class="string">&quot;这是一个JFrame窗体&quot;</span>); <span class="comment">//标签</span></span><br><span class="line"><span class="comment">//使标签上的文字居中</span></span><br><span class="line">l1.setHorizontalAlignment(SwingConstants.CENTER);</span><br><span class="line">c.add(l1);</span><br><span class="line">c.setBackground(Color.white);</span><br><span class="line">f.setVisible(<span class="keyword">true</span>);</span><br><span class="line">f.setSize(<span class="number">400</span>,<span class="number">250</span>); <span class="comment">//setSize(int x,int y)</span></span><br><span class="line"><span class="comment">//设置窗体关闭方式</span></span><br><span class="line">f.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);</span><br><span class="line"><span class="comment">//设置窗口相对于指定组件的位置。 如果组件当前未显示或者 c 为 null，则此窗口将置于屏幕的中央。</span></span><br><span class="line">f.setLocationRelativeTo(<span class="keyword">null</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="keyword">new</span> blog_02_05().CreateJFrame(<span class="string">&quot;创建一个JFrame窗体&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/25/7a0309cfe31e440dcf68c2a567123149.png"><br>关于窗口关闭方式:<br>1.<code>DO_NOTHING</code>_ON_CLOSE：什么都不做就将窗口关闭。<br>2.<code>DISPOSE</code>_ON_CLOSE：代表任何注册监听程序对象后会自动隐藏并释放窗体。<br>3.<code>HIDE</code>_ON_CLOSE：表示隐藏窗口的默认窗口关闭。<br>4.<code>EXIT</code>_ON_CLOSE：退出应用程序默认窗口关闭。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">1.导入包:</span></span><br><span class="line"><span class="comment">import java.awt.*;</span></span><br><span class="line"><span class="comment">import javax.swing;</span></span><br><span class="line"><span class="comment">2.定义类，声明组件。</span></span><br><span class="line"><span class="comment">3.构造方法中new所有组件。</span></span><br><span class="line"><span class="comment">4.主方法main()中，new 构造方法。</span></span><br><span class="line"><span class="comment">5,JFrame为容器，JPanel为面板，组件加到面板，面板再加到容器上。</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">package</span> Blog_02;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 三个JPanel分别对应三行，即用户名、密码、按钮三行，任何网格布局3行1列布局</span></span><br><span class="line"><span class="comment"> * */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">blog_02_06</span> </span>&#123;</span><br><span class="line">JFrame f;</span><br><span class="line">JLabel l1,l2;</span><br><span class="line">JPanel p1,p2,p3;</span><br><span class="line">JButton b1,b2;</span><br><span class="line">JTextField t;</span><br><span class="line">JPasswordField pw;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">blog_02_06</span><span class="params">()</span> </span>&#123;</span><br><span class="line">f=<span class="keyword">new</span> JFrame(<span class="string">&quot;用户登录界面&quot;</span>);</span><br><span class="line">l1=<span class="keyword">new</span> JLabel(<span class="string">&quot;用户名&quot;</span>);</span><br><span class="line">l2=<span class="keyword">new</span> JLabel(<span class="string">&quot;密  码&quot;</span>);</span><br><span class="line">b1=<span class="keyword">new</span> JButton(<span class="string">&quot;登录&quot;</span>);</span><br><span class="line">b2=<span class="keyword">new</span> JButton(<span class="string">&quot;注册&quot;</span>);</span><br><span class="line">t=<span class="keyword">new</span> JTextField(<span class="number">10</span>);</span><br><span class="line">pw=<span class="keyword">new</span> JPasswordField(<span class="number">10</span>);</span><br><span class="line">p1=<span class="keyword">new</span> JPanel();</span><br><span class="line">p2=<span class="keyword">new</span> JPanel();</span><br><span class="line">p3=<span class="keyword">new</span> JPanel();</span><br><span class="line"><span class="comment">//设置按键文本颜色</span></span><br><span class="line">b1.setForeground(Color.BLUE);</span><br><span class="line">b2.setForeground(Color.red);</span><br><span class="line">b1.setBackground(Color.gray);</span><br><span class="line">b2.setBackground(Color.black);</span><br><span class="line"><span class="comment">//第一行</span></span><br><span class="line">p1.add(l1);</span><br><span class="line">p1.add(t);</span><br><span class="line">p1.setLayout(<span class="keyword">new</span> FlowLayout());</span><br><span class="line"><span class="comment">//第二行</span></span><br><span class="line">p2.add(l2);</span><br><span class="line">p2.add(pw);</span><br><span class="line">p2.setLayout(<span class="keyword">new</span> FlowLayout());</span><br><span class="line"><span class="comment">//第三行</span></span><br><span class="line">p3.add(b1);</span><br><span class="line">p3.add(b2);</span><br><span class="line">p3.setLayout(<span class="keyword">new</span> FlowLayout());</span><br><span class="line"><span class="comment">//加到容器</span></span><br><span class="line">f.add(p1);</span><br><span class="line">f.add(p2);</span><br><span class="line">f.add(p3);</span><br><span class="line">f.setLayout(<span class="keyword">new</span> GridLayout(<span class="number">3</span>,<span class="number">1</span>));<span class="comment">//设置网格布局</span></span><br><span class="line">f.setSize(<span class="number">230</span>,<span class="number">150</span>);</span><br><span class="line">f.setLocationRelativeTo(<span class="keyword">null</span>);</span><br><span class="line">f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class="line">f.setResizable(<span class="keyword">false</span>);<span class="comment">//窗口大小是否可变</span></span><br><span class="line">f.setVisible(<span class="keyword">true</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line"><span class="keyword">new</span> blog_02_06();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/25/9ee3ba3cd8b946c7cc1e2bba3680195e.png"></p><hr><p>JDialog窗体是Swing组件中的对话框，它继承了AWT组件中的<code>java.awt.Dialog</code>类。<br>JDialog窗体的功能是<code>从一个窗体中弹出另一个窗体</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;构造方法</span><br><span class="line">public JDialog();  &#x2F;&#x2F;没有标题和父窗口的对话框</span><br><span class="line">public JDialog(Frame f); &#x2F;&#x2F;创建一个指定父窗口的对话框</span><br><span class="line">public JDialog(Frame f,boolean model); &#x2F;&#x2F;创建一个指定类型的对话框，并指定父窗口</span><br><span class="line">public JDialog(Frame f,String title);  &#x2F;&#x2F;指定标题和父窗口</span><br><span class="line">public JDialog(Frame f,String title,boolean model); &#x2F;&#x2F;指定标题、窗体、模式的对话框。</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Blog_02;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.*;</span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyJDialog</span> <span class="keyword">extends</span> <span class="title">JDialog</span></span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">MyJDialog</span><span class="params">(MyFrame frame)</span> </span>&#123;</span><br><span class="line"><span class="comment">//实例化一个JDialog类对象，指定对话框的父窗体、标题和类型</span></span><br><span class="line"><span class="keyword">super</span>(frame,<span class="string">&quot;第一个JDialog窗体&quot;</span>,<span class="keyword">true</span>);</span><br><span class="line">Container c=getContentPane(); <span class="comment">//创建一个容器</span></span><br><span class="line">c.add(<span class="keyword">new</span> JLabel(<span class="string">&quot;这是一个对话框&quot;</span>));</span><br><span class="line">setBounds(<span class="number">120</span>,<span class="number">120</span>,<span class="number">100</span>,<span class="number">100</span>); <span class="comment">//设置对话框大小</span></span><br><span class="line">setLocationRelativeTo(<span class="keyword">null</span>); <span class="comment">//居中</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyFrame</span> <span class="keyword">extends</span> <span class="title">JFrame</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">MyFrame</span><span class="params">()</span> </span>&#123;</span><br><span class="line">Container c=getContentPane(); <span class="comment">//创建容器</span></span><br><span class="line">c.setLayout(<span class="keyword">null</span>);</span><br><span class="line">JLabel l1=<span class="keyword">new</span> JLabel(<span class="string">&quot;这是一个JFrame窗体&quot;</span>);</span><br><span class="line"><span class="comment">//标签居中</span></span><br><span class="line">l1.setHorizontalAlignment(SwingConstants.CENTER);</span><br><span class="line">c.add(l1);</span><br><span class="line">JButton b=<span class="keyword">new</span> JButton(<span class="string">&quot;弹出对话框&quot;</span>);</span><br><span class="line">b.setBounds(<span class="number">10</span>,<span class="number">10</span>,<span class="number">100</span>,<span class="number">21</span>);</span><br><span class="line">b.addActionListener(<span class="keyword">new</span> ActionListener() &#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line"><span class="keyword">new</span> MyJDialog(MyFrame.<span class="keyword">this</span>).setVisible(<span class="keyword">true</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line">c.add(b);</span><br><span class="line">setSize(<span class="number">200</span>,<span class="number">200</span>);</span><br><span class="line">setVisible(<span class="keyword">true</span>);</span><br><span class="line">setLocationRelativeTo(<span class="keyword">null</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line"><span class="keyword">new</span> MyFrame();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/25/4a41eaf54986fd823f9fa08a63af06a0.png"></p><h2 id="组件的使用"><a href="#组件的使用" class="headerlink" title="组件的使用"></a>组件的使用</h2><h3 id="JLabel标签"><a href="#JLabel标签" class="headerlink" title="JLabel标签"></a>JLabel标签</h3><p>标签由JLabel类定义，它的父类为JComponent类。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//构造方法</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">JLabel</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">JLabel</span><span class="params">(Icon icon)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">JLabel</span><span class="params">(Icon icon,<span class="keyword">int</span> aligment)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">JLabel</span><span class="params">(String text,<span class="keyword">int</span> aligment)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">JLabel</span><span class="params">(String text,Icon icon,<span class="keyword">int</span> aligment)</span></span>; <span class="comment">//带文本，带图标的JLabel对象，并设置标签内容的水平对齐方式。</span></span><br></pre></td></tr></table></figure><h3 id="图标的使用"><a href="#图标的使用" class="headerlink" title="图标的使用"></a>图标的使用</h3><p>Swing中图标可以放置在按钮、标签等组件上。<br>``java<br>ImageIcon img=new ImageIcon(“图片URL”);<br>JButton b=new JButton(img);</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">### 文本组件</span><br><span class="line">​&#96;&#96;&#96;java</span><br><span class="line">JTextField t&#x3D;new JTextField(10); &#x2F;&#x2F;长度</span><br><span class="line">JTextArea a&#x3D;new JTextArea(5,5);&#x2F;&#x2F;5行5列</span><br><span class="line">JPasswordField &#x3D;p&#x3D;new JPasswordField();</span><br><span class="line">p.setEchoChar(&quot;%&quot;);&#x2F;&#x2F;设置输入密码显示的字符</span><br></pre></td></tr></table></figure><h3 id="按钮组件"><a href="#按钮组件" class="headerlink" title="按钮组件"></a>按钮组件</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">JFrame f=<span class="keyword">new</span> JFrame();</span><br><span class="line">JPanel p=<span class="keyword">new</span> JPanel();</span><br><span class="line"><span class="comment">//1.创建按钮组对象；</span></span><br><span class="line">ButtonGroup bg=<span class="keyword">new</span> ButtonGroup();</span><br><span class="line"><span class="comment">//2.创建若干单选按钮对象</span></span><br><span class="line">JRadioButton b1=<span class="keyword">new</span> JRadoButton(<span class="string">&quot;男&quot;</span>);</span><br><span class="line">JRadioButton b1=<span class="keyword">new</span> JRadoButton(<span class="string">&quot;女&quot;</span>);</span><br><span class="line"><span class="comment">//3.将单选按钮加到按钮组中</span></span><br><span class="line">bg.add(b1);</span><br><span class="line">bg.add(b2);</span><br><span class="line"><span class="comment">//4.将单选按钮加到容器中。</span></span><br><span class="line">p.add(b1);</span><br><span class="line">p.add(b2);</span><br><span class="line">f.add(p);</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Windos;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> 单选和复选按钮 </span>&#123;</span><br><span class="line">JFrame f;</span><br><span class="line">JLabel l,l1;</span><br><span class="line">JButton b1,b2;</span><br><span class="line">JPanel p1,p2,p3;</span><br><span class="line">JCheckBox fx1,fx2,fx3; <span class="comment">//复选按钮</span></span><br><span class="line"></span><br><span class="line">JRadioButton dx1,dx2;  <span class="comment">//单选按钮</span></span><br><span class="line"></span><br><span class="line">ButtonGroup bg;<span class="comment">//把单选按钮放进一个组里,默认功能是组里的按钮只能选一个</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> 单选和复选按钮() &#123;</span><br><span class="line">f=<span class="keyword">new</span> JFrame();</span><br><span class="line">p1=<span class="keyword">new</span> JPanel();</span><br><span class="line">p2=<span class="keyword">new</span> JPanel();</span><br><span class="line">p3=<span class="keyword">new</span> JPanel();</span><br><span class="line">l=<span class="keyword">new</span> JLabel(<span class="string">&quot;特长&quot;</span>);</span><br><span class="line">l1=<span class="keyword">new</span> JLabel(<span class="string">&quot;性别&quot;</span>);</span><br><span class="line"></span><br><span class="line">b1=<span class="keyword">new</span> JButton(<span class="string">&quot;注册&quot;</span>);</span><br><span class="line">b2=<span class="keyword">new</span> JButton(<span class="string">&quot;取消&quot;</span>);</span><br><span class="line"></span><br><span class="line">fx1=<span class="keyword">new</span> JCheckBox(<span class="string">&quot;音乐&quot;</span>);</span><br><span class="line">fx2=<span class="keyword">new</span> JCheckBox(<span class="string">&quot;体育&quot;</span>);</span><br><span class="line">fx3=<span class="keyword">new</span> JCheckBox(<span class="string">&quot;文艺&quot;</span>);</span><br><span class="line"></span><br><span class="line">dx1=<span class="keyword">new</span> JRadioButton(<span class="string">&quot;男&quot;</span>);</span><br><span class="line">dx2=<span class="keyword">new</span> JRadioButton(<span class="string">&quot;女&quot;</span>);</span><br><span class="line"><span class="comment">//按钮组 只能选一个勾选 必须填</span></span><br><span class="line">bg=<span class="keyword">new</span> ButtonGroup();</span><br><span class="line">bg.add(dx1);</span><br><span class="line">bg.add(dx2);</span><br><span class="line"><span class="comment">//</span></span><br><span class="line">p1.add(l);</span><br><span class="line">p1.add(fx1);</span><br><span class="line">p1.add(fx2);</span><br><span class="line">p1.add(fx3);</span><br><span class="line"></span><br><span class="line">p2.add(l1);</span><br><span class="line"><span class="comment">//还是一个一个加不能添加组</span></span><br><span class="line">p2.add(dx1);</span><br><span class="line">p2.add(dx2);</span><br><span class="line"></span><br><span class="line">p3.add(b1);</span><br><span class="line">p3.add(b2);</span><br><span class="line"></span><br><span class="line">f.add(p1);</span><br><span class="line">f.add(p2);</span><br><span class="line">f.add(p3);</span><br><span class="line"><span class="comment">//其余三个面板为流式布局</span></span><br><span class="line">f.setLayout(<span class="keyword">new</span> GridLayout(<span class="number">3</span>,<span class="number">1</span>)); <span class="comment">//网格布局</span></span><br><span class="line">f.setSize(<span class="number">240</span>,<span class="number">150</span>);</span><br><span class="line">f.setLocation(<span class="number">300</span>,<span class="number">280</span>);</span><br><span class="line">f.setResizable(<span class="keyword">false</span>);</span><br><span class="line">f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class="line">f.setLocationRelativeTo(<span class="keyword">null</span>);</span><br><span class="line">f.setVisible(<span class="keyword">true</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line"><span class="keyword">new</span> 单选和复选按钮();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/25/d5a8174eeeac14edb4e1a092aec300b3.png"></p><h3 id="下拉框、下拉列表列表和滚动条"><a href="#下拉框、下拉列表列表和滚动条" class="headerlink" title="下拉框、下拉列表列表和滚动条"></a>下拉框、下拉列表列表和滚动条</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//下拉框</span></span><br><span class="line"><span class="comment">/*getSelectedItem()的方法得到选择的值和一个getSelectedIndex()得到选择值的索引*/</span></span><br><span class="line">String str[]=&#123;<span class="string">&quot;北京&quot;</span>,<span class="string">&quot;天津&quot;</span>,<span class="string">&quot;上海&quot;</span>,<span class="string">&quot;长沙&quot;</span>&#125;;</span><br><span class="line">JComboBox xlk=<span class="keyword">new</span> JComboBox(str);</span><br><span class="line"></span><br><span class="line"><span class="comment">//列表</span></span><br><span class="line">JPanel p=<span class="keyword">new</span> JPanel();</span><br><span class="line">String xl[]= &#123;<span class="string">&quot;高中&quot;</span>,<span class="string">&quot;大专&quot;</span>,<span class="string">&quot;本科&quot;</span>,<span class="string">&quot;硕士&quot;</span>,<span class="string">&quot;博士&quot;</span>&#125;;</span><br><span class="line">JList lb=<span class="keyword">new</span> JList(xl);</span><br><span class="line">lb.setVisibleRowCount(<span class="number">3</span>);<span class="comment">//使其滚动  3表示默认显示几个</span></span><br><span class="line">JScrollPane gd=<span class="keyword">new</span> JScrollPane(lb);   <span class="comment">//列表加入滚动</span></span><br><span class="line">p.add(xlk);</span><br><span class="line">p.add(gd); <span class="comment">//面板是添加滚动条。</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Windos;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="comment">/*下拉</span></span><br><span class="line"><span class="comment"> * JComboBox   创建字符组</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * 滚动条</span></span><br><span class="line"><span class="comment"> * JList  创建字符串组放进去 调用 setVisibleRowCount(3)</span></span><br><span class="line"><span class="comment"> * JScrollPane 放JList</span></span><br><span class="line"><span class="comment"> * 添加滚动</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> 下拉列表和滚动条 </span>&#123;</span><br><span class="line">JFrame f;</span><br><span class="line">JPanel p1,p2;</span><br><span class="line">JLabel l1,l2;</span><br><span class="line"></span><br><span class="line">JComboBox xlk;  <span class="comment">//下拉框</span></span><br><span class="line"><span class="comment">/*getSelectedItem()的方法得到选择的值和一个getSelectedIndex()得到选择值的索引*/</span></span><br><span class="line"></span><br><span class="line">JList lb;   <span class="comment">//列表</span></span><br><span class="line"></span><br><span class="line">JScrollPane gd;  <span class="comment">//滚动条</span></span><br><span class="line"><span class="keyword">public</span> 下拉列表和滚动条() &#123;</span><br><span class="line">f=<span class="keyword">new</span> JFrame();</span><br><span class="line">p1=<span class="keyword">new</span> JPanel();</span><br><span class="line">p2=<span class="keyword">new</span> JPanel();</span><br><span class="line">l1=<span class="keyword">new</span> JLabel(<span class="string">&quot;籍贯&quot;</span>);</span><br><span class="line">l2=<span class="keyword">new</span> JLabel(<span class="string">&quot;学历&quot;</span>);</span><br><span class="line"></span><br><span class="line">String jg[]= &#123;<span class="string">&quot;北京&quot;</span>,<span class="string">&quot;天津&quot;</span>,<span class="string">&quot;长沙&quot;</span>,<span class="string">&quot;湖南&quot;</span>,<span class="string">&quot;安化&quot;</span>,<span class="string">&quot;梅城&quot;</span>&#125;;</span><br><span class="line">xlk=<span class="keyword">new</span> JComboBox(jg);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">String xl[]= &#123;<span class="string">&quot;高中&quot;</span>,<span class="string">&quot;大专&quot;</span>,<span class="string">&quot;本科&quot;</span>,<span class="string">&quot;硕士&quot;</span>,<span class="string">&quot;博士&quot;</span>&#125;;</span><br><span class="line">lb=<span class="keyword">new</span> JList(xl);</span><br><span class="line"></span><br><span class="line">lb.setVisibleRowCount(<span class="number">3</span>);<span class="comment">//使其滚动  3表示默认显示几个</span></span><br><span class="line">gd=<span class="keyword">new</span> JScrollPane(lb);   <span class="comment">//列表加入滚动</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">f.setLayout(<span class="keyword">new</span> GridLayout(<span class="number">2</span>,<span class="number">1</span>));</span><br><span class="line"></span><br><span class="line">p1.add(l1);</span><br><span class="line">p1.add(xlk);</span><br><span class="line">p2.add(l2);</span><br><span class="line">p2.add(gd);<span class="comment">//添加滚动条</span></span><br><span class="line">f.add(p1);</span><br><span class="line">f.add(p2);</span><br><span class="line"></span><br><span class="line">f.setTitle(<span class="string">&quot;用户调查&quot;</span>);</span><br><span class="line">f.setSize(<span class="number">200</span>,<span class="number">190</span>);</span><br><span class="line">f.setLocation(<span class="number">300</span>,<span class="number">200</span>);</span><br><span class="line">f.setResizable(<span class="keyword">false</span>);</span><br><span class="line">f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class="line">f.setVisible(<span class="keyword">true</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line"><span class="keyword">new</span> 下拉列表和滚动条();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/25/3922831dbe80fb1208cc7db445adb582.png"></p><h3 id="拆分窗口"><a href="#拆分窗口" class="headerlink" title="拆分窗口"></a>拆分窗口</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Windos;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="comment">//图片 Ctrl+C 复制 工程文件右击粘贴 可新建一个文件夹放图片</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> 拆分窗口 </span>&#123;</span><br><span class="line">JFrame f;</span><br><span class="line">JSplitPane cf; <span class="comment">//拆分成左右两个界面</span></span><br><span class="line">JList lb;</span><br><span class="line">JLabel l;</span><br><span class="line">String str[]= &#123;<span class="string">&quot;软件开发&quot;</span>,<span class="string">&quot;游戏开发&quot;</span>,<span class="string">&quot;平面设计&quot;</span>,<span class="string">&quot;动画制作&quot;</span>,<span class="string">&quot;室内设计&quot;</span>&#125;;</span><br><span class="line"><span class="keyword">public</span>  拆分窗口() &#123;</span><br><span class="line">f=<span class="keyword">new</span> JFrame();</span><br><span class="line"></span><br><span class="line">lb=<span class="keyword">new</span> JList(str);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">l=<span class="keyword">new</span> JLabel(<span class="keyword">new</span> ImageIcon(<span class="string">&quot;Image/雪花.jpg&quot;</span>)); <span class="comment">//放java工程路径</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">cf=<span class="keyword">new</span> JSplitPane(JSplitPane.HORIZONTAL_SPLIT,lb,l);<span class="comment">//左右拆分</span></span><br><span class="line"><span class="comment">//cf=new JSplitPane(JSplitPane.VERTICAL_SPLIT,lb,l);//上下拆分</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">cf.setOneTouchExpandable(<span class="keyword">true</span>); <span class="comment">//出现两个拉动箭头 可以覆盖或收缩掉一界面</span></span><br><span class="line"></span><br><span class="line">f.add(cf);</span><br><span class="line"></span><br><span class="line">f.setSize(<span class="number">640</span>,<span class="number">480</span>);</span><br><span class="line">f.setLocation(<span class="number">300</span>,<span class="number">280</span>);</span><br><span class="line">f.setResizable(<span class="keyword">false</span>);</span><br><span class="line">f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class="line">f.setVisible(<span class="keyword">true</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line">  <span class="keyword">new</span> 拆分窗口();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/25/f8ed91217debb2e4a113daefc8d04903.png"></p><h2 id="布局管理"><a href="#布局管理" class="headerlink" title="布局管理"></a>布局管理</h2><h3 id="绝对布局"><a href="#绝对布局" class="headerlink" title="绝对布局"></a>绝对布局</h3><p>绝对布局指硬性指定组件在容器中的位置和大小，可以使用绝对坐标的方式来指定组件的位置。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">使用步骤:</span></span><br><span class="line"><span class="comment">1.使用Container.setLayout(null)方法取消布局管理器。</span></span><br><span class="line"><span class="comment">2.使用Container.setBounds()方法设置每个组件的大小与位置。</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">package</span> Blog_02;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">blog_02_07</span> <span class="keyword">extends</span> <span class="title">JFrame</span></span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">blog_02_07</span><span class="params">()</span> </span>&#123;</span><br><span class="line">setTitle(<span class="string">&quot;绝对布局&quot;</span>);</span><br><span class="line">setLayout(<span class="keyword">null</span>);</span><br><span class="line">setBounds(<span class="number">0</span>,<span class="number">0</span>,<span class="number">200</span>,<span class="number">150</span>);</span><br><span class="line">Container c=getContentPane();</span><br><span class="line">JButton b1=<span class="keyword">new</span> JButton(<span class="string">&quot;按钮1&quot;</span>);</span><br><span class="line">JButton b2=<span class="keyword">new</span> JButton(<span class="string">&quot;按钮2&quot;</span>);</span><br><span class="line">b1.setBounds(<span class="number">10</span>,<span class="number">30</span>,<span class="number">80</span>,<span class="number">30</span>);</span><br><span class="line">b2.setBounds(<span class="number">60</span>,<span class="number">70</span>,<span class="number">100</span>,<span class="number">20</span>);</span><br><span class="line">c.add(b1);</span><br><span class="line">c.add(b2);</span><br><span class="line">setVisible(<span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line"><span class="keyword">new</span> blog_02_07();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/25/143377b7b2dc142b6cddbebffb2630c8.png"></p><h3 id="流动布局"><a href="#流动布局" class="headerlink" title="流动布局"></a>流动布局</h3><p>流动布局指组件像“流”一样从左到右摆放组件。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Windos;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FlowLayout_1</span> </span>&#123;</span><br><span class="line">JFrame f;</span><br><span class="line"></span><br><span class="line">JButton b[]; <span class="comment">//按钮数组</span></span><br><span class="line">String str[]= &#123;<span class="string">&quot;话梅&quot;</span>,<span class="string">&quot;果脯&quot;</span>,<span class="string">&quot;薯片&quot;</span>,<span class="string">&quot;饼干&quot;</span>,<span class="string">&quot;巧克力&quot;</span>,<span class="string">&quot;腰果&quot;</span>,<span class="string">&quot;锅巴&quot;</span>,<span class="string">&quot;开心果&quot;</span>&#125;; <span class="comment">//字符串数组</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">FlowLayout_1</span><span class="params">()</span> </span>&#123;</span><br><span class="line">f=<span class="keyword">new</span> JFrame(<span class="string">&quot;流动窗口&quot;</span>);</span><br><span class="line">b=<span class="keyword">new</span> JButton[str.length]; <span class="comment">//等价于 JButton b[]=new JButton[str.length]  相当于创建按键数组</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;str.length;i++) &#123;</span><br><span class="line">b[i]=<span class="keyword">new</span> JButton(str[i]); <span class="comment">//一个一个new</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//网格布局方式  java默认边界布局管理</span></span><br><span class="line">f.setLayout(<span class="keyword">new</span> FlowLayout());</span><br><span class="line"><span class="comment">//f.setLayout(new FlowLayout(FlowLayout.LEFT));//向左对齐</span></span><br><span class="line"><span class="comment">//f.setLayout(new FlowLayout(FlowLayout.RIGHT));//向右看齐</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;str.length;i++) &#123;</span><br><span class="line">f.add(b[i]);</span><br><span class="line">&#125;</span><br><span class="line">f.setSize(<span class="number">300</span>,<span class="number">150</span>);</span><br><span class="line">f.setLocation(<span class="number">200</span>,<span class="number">200</span>);</span><br><span class="line">f.setResizable(<span class="keyword">false</span>);<span class="comment">//不能最大化 拖动</span></span><br><span class="line">f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class="line">f.setVisible(<span class="keyword">true</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line"><span class="keyword">new</span> FlowLayout_1();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/25/91cc9c0cb639ebd1108108d89a2743e5.png"></p><h3 id="边界布局"><a href="#边界布局" class="headerlink" title="边界布局"></a>边界布局</h3><p>边界布局将容器划分东、南、西、北、中五个区域。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Windos;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BorderLayout_1</span> </span>&#123;</span><br><span class="line">JFrame f;</span><br><span class="line">JButton b,b1,b2,b3,b4;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">BorderLayout_1</span><span class="params">()</span> </span>&#123;</span><br><span class="line">f=<span class="keyword">new</span> JFrame(<span class="string">&quot;边界布局&quot;</span>);</span><br><span class="line">b=<span class="keyword">new</span> JButton(<span class="string">&quot;东方&quot;</span>);</span><br><span class="line">b1=<span class="keyword">new</span> JButton(<span class="string">&quot;西方&quot;</span>);</span><br><span class="line">b2=<span class="keyword">new</span> JButton(<span class="string">&quot;南方&quot;</span>);</span><br><span class="line">b3=<span class="keyword">new</span> JButton(<span class="string">&quot;北方&quot;</span>);</span><br><span class="line">b4=<span class="keyword">new</span> JButton(<span class="string">&quot;中方&quot;</span>);</span><br><span class="line"><span class="comment">//边界布局方式</span></span><br><span class="line">f.add(b,BorderLayout.EAST);</span><br><span class="line">f.add(b1,BorderLayout.WEST);</span><br><span class="line">f.add(b2,BorderLayout.SOUTH);</span><br><span class="line">f.add(b3,BorderLayout.NORTH);</span><br><span class="line">f.add(b4,BorderLayout.CENTER);</span><br><span class="line"><span class="comment">//如果不是5个按钮，则会以扩充中部去填补</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//使任务管理器中窗口也关闭 ，不占内存 很重要！！！！！</span></span><br><span class="line">f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<span class="comment">//使运行后的窗口不占内存  起关闭作用</span></span><br><span class="line"><span class="comment">///</span></span><br><span class="line"></span><br><span class="line">f.setSize(<span class="number">300</span>,<span class="number">400</span>);</span><br><span class="line">f.setLocation(<span class="number">200</span>,<span class="number">200</span>);</span><br><span class="line">f.setVisible(<span class="keyword">true</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line"><span class="keyword">new</span> BorderLayout_1();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/25/b1c0d8b1f554da1fc04211f71347eea4.png"></p><h3 id="网格布局"><a href="#网格布局" class="headerlink" title="网格布局"></a>网格布局</h3><p>网格布局将容器划分为网格，所有组件按行和列排列。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Windos;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GridLayout_1</span> </span>&#123;</span><br><span class="line">JFrame f;</span><br><span class="line">JButton b[];</span><br><span class="line">String str[]= &#123;<span class="string">&quot;话梅&quot;</span>,<span class="string">&quot;果脯&quot;</span>,<span class="string">&quot;薯片&quot;</span>,<span class="string">&quot;饼干&quot;</span>,<span class="string">&quot;巧克力&quot;</span>,<span class="string">&quot;腰果&quot;</span>,<span class="string">&quot;锅巴&quot;</span>,<span class="string">&quot;开心果&quot;</span>,<span class="string">&quot;蛋糕&quot;</span>&#125;; <span class="comment">//字符串数组</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">GridLayout_1</span><span class="params">()</span> </span>&#123;</span><br><span class="line">f=<span class="keyword">new</span> JFrame(<span class="string">&quot;网格布局&quot;</span>);</span><br><span class="line"></span><br><span class="line">b=<span class="keyword">new</span> JButton[str.length]; <span class="comment">//等价于JButton b[]=new JButton[大小]  创建数组</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;str.length;i++) &#123;</span><br><span class="line">b[i]=<span class="keyword">new</span> JButton(str[i]);  <span class="comment">//一个一个添加</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//网格布局格式</span></span><br><span class="line">f.setLayout(<span class="keyword">new</span> GridLayout(<span class="number">3</span>,<span class="number">3</span>,<span class="number">12</span>,<span class="number">13</span>)); <span class="comment">//(行，列，长高的像素空间)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;str.length;i++) &#123;</span><br><span class="line">f.add(b[i]);</span><br><span class="line">&#125;</span><br><span class="line">f.setSize(<span class="number">380</span>,<span class="number">320</span>);</span><br><span class="line">    f.setLocation(<span class="number">200</span>,<span class="number">200</span>);</span><br><span class="line">    </span><br><span class="line">    f.setResizable(<span class="keyword">false</span>);<span class="comment">//不能最大化 不能拉伸窗口 使其固定</span></span><br><span class="line">    </span><br><span class="line">    f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class="line">    f.setVisible(<span class="keyword">true</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String []args)</span> </span>&#123;</span><br><span class="line"><span class="keyword">new</span> GridLayout_1();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/25/8fd9c2b221ae6f0801a34bb6d43e119d.png"></p><h3 id="盒式布局"><a href="#盒式布局" class="headerlink" title="盒式布局"></a>盒式布局</h3><p><code>BoxLayout </code>可以把控件依次进行水平或者垂直排列布局。<br>create<code>HorizontalBox</code>()：返回一个 Box 对象，它采用水平 BoxLayout，即 BoxLayout 沿着水平方向放置组件，让组件在容器内从<code>左到右</code>排列。<br>create<code>VerticalBox</code>()：返回一个 Box 对象，它采用垂直 BoxLayout，即 BoxLayout 沿着垂直方向放置组件，让组件在容器内从<code>上到下</code>进行排列。<br>Box 布局时，可以使用空隙类来调整和控制组件之间的间隔，使组件布局达到要求。<br>空隙类的对象是一种占用空间但不可见的组件。空隙类的对象有两种：<br>支撑组件（<code>Struct</code>）：用于调整组件间的有指定长度的间距<br>1.createVerticalStrut(int height) 2.createHorizontalStrut(int width)<br>胶水组件（<code>Glue</code>）：用于调整组件间的无指定长度的间距<br>1.createHorizontalGlue() 2.createVerticalGlue()</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//垂直盒子/水平盒子</span></span><br><span class="line"><span class="keyword">package</span> Swing_Layout;</span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BoxLayout_1</span> </span>&#123;</span><br><span class="line">JFrame f;</span><br><span class="line">JButton b1,b2,b3;</span><br><span class="line">Box box;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">BoxLayout_1</span><span class="params">()</span> </span>&#123;</span><br><span class="line">f=<span class="keyword">new</span> JFrame(<span class="string">&quot;盒式布局&quot;</span>);</span><br><span class="line">b1=<span class="keyword">new</span> JButton(<span class="string">&quot;按钮1&quot;</span>);</span><br><span class="line">b2=<span class="keyword">new</span> JButton(<span class="string">&quot;按钮2&quot;</span>);</span><br><span class="line">b3=<span class="keyword">new</span> JButton(<span class="string">&quot;按钮3&quot;</span>);</span><br><span class="line">box=Box.createVerticalBox();<span class="comment">//垂直盒子</span></span><br><span class="line"><span class="comment">//box=Box.createHorizontalBox()//水平盒子</span></span><br><span class="line">box.add(b1);</span><br><span class="line">box.add(Box.createGlue());</span><br><span class="line"><span class="comment">//box.add(Box.createVerticalStrut(10));</span></span><br><span class="line">box.add(b2);</span><br><span class="line">box.add(Box.createGlue());</span><br><span class="line">box.add(b3);</span><br><span class="line"></span><br><span class="line">f.add(box);</span><br><span class="line"><span class="comment">//f.pack();</span></span><br><span class="line">f.setSize(<span class="number">300</span>,<span class="number">400</span>);</span><br><span class="line">f.setLocationRelativeTo(<span class="keyword">null</span>);</span><br><span class="line">f.setVisible(<span class="keyword">true</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line"><span class="keyword">new</span> BoxLayout_1();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/25/5a7482a37413c82fc2ace16801d75511.png"><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/25/9df4f6c4f24517fb0023317a90010328.png"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//改变间隔</span></span><br><span class="line"><span class="keyword">package</span> Swing_Layout;</span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BoxLayout_3</span> </span>&#123;</span><br><span class="line"> JFrame f;</span><br><span class="line"> JButton b;</span><br><span class="line"> Box box;</span><br><span class="line"> String name[]= &#123;<span class="string">&quot;按钮1&quot;</span>,<span class="string">&quot;按钮2&quot;</span>,<span class="string">&quot;按钮3&quot;</span>&#125;;</span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="title">BoxLayout_3</span><span class="params">()</span> </span>&#123;</span><br><span class="line"> f=<span class="keyword">new</span> JFrame();</span><br><span class="line"> box=Box.createVerticalBox();</span><br><span class="line"> <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;name.length;i++) &#123;</span><br><span class="line"> b=<span class="keyword">new</span> JButton(name[i]);</span><br><span class="line"> <span class="keyword">if</span>(i==<span class="number">1</span>)</span><br><span class="line"> box.add(Box.createVerticalStrut(<span class="number">10</span>));</span><br><span class="line"> <span class="keyword">if</span>(i==<span class="number">2</span>)</span><br><span class="line"> box.add(Box.createVerticalStrut(<span class="number">20</span>));</span><br><span class="line"> box.add(b);</span><br><span class="line"> &#125;</span><br><span class="line"> f.add(box);</span><br><span class="line"> f.setSize(<span class="number">300</span>,<span class="number">400</span>);</span><br><span class="line"> f.setLocationRelativeTo(<span class="keyword">null</span>);</span><br><span class="line"> f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class="line"> f.setVisible(<span class="keyword">true</span>);</span><br><span class="line"> &#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line"><span class="keyword">new</span> BoxLayout_3();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/25/a635d72d75d4c2d0c61cab949c39312e.png"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Swing_Layout;</span><br><span class="line"><span class="keyword">import</span> java.awt.BorderLayout;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BoxLayout_2</span> </span>&#123;</span><br><span class="line">JFrame f;</span><br><span class="line">JTextField t;</span><br><span class="line">JTextArea jt;</span><br><span class="line">JLabel l1,l2;</span><br><span class="line">JButton b;</span><br><span class="line">JScrollPane gd;</span><br><span class="line">Box H1,H2,V1;</span><br><span class="line"><span class="comment">//水平 水平  垂直</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">BoxLayout_2</span><span class="params">()</span> </span>&#123;</span><br><span class="line">f=<span class="keyword">new</span> JFrame();</span><br><span class="line"></span><br><span class="line"><span class="comment">//主题</span></span><br><span class="line">l1=<span class="keyword">new</span> JLabel(<span class="string">&quot;主题:&quot;</span>);</span><br><span class="line">t=<span class="keyword">new</span> JTextField(<span class="number">10</span>);</span><br><span class="line">H1=Box.createHorizontalBox();<span class="comment">//水平盒子</span></span><br><span class="line">H1.add(Box.createHorizontalStrut(<span class="number">5</span>));<span class="comment">//离布局间距</span></span><br><span class="line">H1.add(l1);</span><br><span class="line">H1.add(Box.createHorizontalStrut(<span class="number">5</span>));<span class="comment">//水平间距</span></span><br><span class="line">H1.add(t);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//setAlignmentX()用于使用了BoxLayout.Y_AXIS时，将控件在X轴方向设置为左对齐、右对齐或居中对</span></span><br><span class="line"><span class="comment">//setAlignmentY()将控件在Y轴方向设置为顶对齐、底对齐或居中对齐</span></span><br><span class="line"><span class="comment">//内容</span></span><br><span class="line">l2=<span class="keyword">new</span> JLabel(<span class="string">&quot;内容:&quot;</span>);</span><br><span class="line">jt=<span class="keyword">new</span> JTextArea();</span><br><span class="line">gd=<span class="keyword">new</span> JScrollPane(jt);</span><br><span class="line">H2=Box.createHorizontalBox();<span class="comment">//水平</span></span><br><span class="line">H2.setAlignmentX(<span class="number">1</span>);  <span class="comment">//设置靠右对齐 X水平轴</span></span><br><span class="line">H2.add(Box.createHorizontalStrut(<span class="number">5</span>));<span class="comment">//边界间距</span></span><br><span class="line">l2.setAlignmentY(<span class="number">0</span>);<span class="comment">//设置标签垂直靠上对齐</span></span><br><span class="line">H2.add(l2);</span><br><span class="line">H2.add(Box.createHorizontalStrut(<span class="number">5</span>));<span class="comment">//间距</span></span><br><span class="line">gd.setAlignmentY(<span class="number">0</span>); <span class="comment">//文本域垂直靠上</span></span><br><span class="line">H2.add(gd);</span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//垂直</span></span><br><span class="line"><span class="comment">//H2和按键垂直</span></span><br><span class="line">V1=Box.createVerticalBox();</span><br><span class="line">V1.add(Box.createVerticalStrut(<span class="number">5</span>));<span class="comment">//和H1间距</span></span><br><span class="line">V1.add(H2);</span><br><span class="line"><span class="comment">//确定</span></span><br><span class="line">jt.setLineWrap(<span class="keyword">true</span>);</span><br><span class="line">gd.setViewportView(jt);</span><br><span class="line">V1.add(Box.createVerticalStrut(<span class="number">5</span>));</span><br><span class="line"></span><br><span class="line">b=<span class="keyword">new</span> JButton(<span class="string">&quot;确定&quot;</span>);</span><br><span class="line">b.setAlignmentX(<span class="number">1</span>);  <span class="comment">//水平靠右</span></span><br><span class="line">V1.add(b);</span><br><span class="line"></span><br><span class="line">f.add(H1,BorderLayout.NORTH);<span class="comment">//主题</span></span><br><span class="line">f.add(V1,BorderLayout.CENTER);<span class="comment">//垂直加中间</span></span><br><span class="line"></span><br><span class="line">f.setSize(<span class="number">400</span>,<span class="number">500</span>);</span><br><span class="line">f.setLocationRelativeTo(<span class="keyword">null</span>);</span><br><span class="line">f.setVisible(<span class="keyword">true</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line"><span class="keyword">new</span>  BoxLayout_2();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/25/4783a159c0548e8d5d9d29d6d4fecc67.png"></p><h3 id="卡片布局"><a href="#卡片布局" class="headerlink" title="卡片布局"></a>卡片布局</h3><p><code>卡片布局</code>可以通过点击窗口中的按钮切换不同的面板。像卡片一样叠加，一张接着一张的显示</p><p><code>CardLayout成员方法</code>:<br>JPanel cp=new JPanel();<br>CardLayout c=new CardLayout();<br>c.<code>first</code>(cp):显示第一个卡片<br>c.<code>last</code>(cp)：显示最后一个卡片<br>c.<code>next</code>(cp)：显示当前所显示卡片之后的卡片<br>c.<code>previous</code>(cp)：显示当前所显示卡片之前的卡片<br>c.<code>show</code>(cp,String name)：显示指定标签的卡片</p><p>卡片布局使用步骤:<br>1.<code>创建CardLayout布局对象</code><br>CardLayout l = new CardLayout();<br>2.<code>创建容器对象</code><br>JPanel panel = new JPanel();<br>3.<code>设置容器对象的布局或使用默认布局</code><br>panel.setLayout(l);<br>4.<code>向容器中添加组件对象(设组件对象已创建)</code><br>panel.add(组件对象，“名称”);<br>5.<code>显示组件</code><br>l.show(panel,  “名称”);<br>l.first(panel);<br> l.last(panel);<br>l.next(panel);<br>l.previous(panel);</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Swing_Layout;</span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionListener;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CardLayout_1</span> </span>&#123;</span><br><span class="line"> JFrame f;</span><br><span class="line"> <span class="comment">//卡片布局面板</span></span><br><span class="line"> JPanel cp;</span><br><span class="line"> CardLayout c;</span><br><span class="line"> JLabel l;</span><br><span class="line"> <span class="comment">//控制面板</span></span><br><span class="line"> JPanel bp; <span class="comment">//按键面板</span></span><br><span class="line"> JButton b; </span><br><span class="line"> </span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="title">CardLayout_1</span><span class="params">()</span> </span>&#123;</span><br><span class="line"> f=<span class="keyword">new</span> JFrame();</span><br><span class="line"> <span class="comment">//卡片布局设置</span></span><br><span class="line"> cp=<span class="keyword">new</span> JPanel();</span><br><span class="line"> c=<span class="keyword">new</span> CardLayout();</span><br><span class="line"> cp.setLayout(c);</span><br><span class="line"> f.add(cp,BorderLayout.CENTER);</span><br><span class="line"> <span class="comment">//标签</span></span><br><span class="line"> String lname[]= &#123;<span class="string">&quot;卡片A&quot;</span>,<span class="string">&quot;卡片B&quot;</span>,<span class="string">&quot;卡片C&quot;</span>&#125;;</span><br><span class="line"> </span><br><span class="line"> <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;lname.length;i++) &#123;</span><br><span class="line"> l=<span class="keyword">new</span> JLabel(lname[i]);</span><br><span class="line"> l.setHorizontalAlignment(SwingConstants.CENTER);</span><br><span class="line"> l.setFont(<span class="keyword">new</span> Font(<span class="string">&quot;楷书&quot;</span>,Font.BOLD,<span class="number">16</span>));</span><br><span class="line"> l.setForeground(<span class="keyword">new</span> Color(<span class="number">255</span>,<span class="number">0</span>,<span class="number">0</span>));</span><br><span class="line"><span class="comment">//像采用卡片布局的面板中加卡片</span></span><br><span class="line">cp.add(l,lname[i]);</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line">  bp=<span class="keyword">new</span> JPanel();</span><br><span class="line"> f.add(bp,BorderLayout.SOUTH);</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> String bname[]= &#123;<span class="string">&quot;第一个&quot;</span>,<span class="string">&quot;前一个&quot;</span>,<span class="string">&quot;卡片A&quot;</span>,<span class="string">&quot;卡片B&quot;</span>,<span class="string">&quot;卡片C&quot;</span>,<span class="string">&quot;后一个&quot;</span>,<span class="string">&quot;最后一个&quot;</span>&#125;;</span><br><span class="line"> <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;bname.length;i++) &#123;</span><br><span class="line"> JButton b=<span class="keyword">new</span> JButton(bname[i]);</span><br><span class="line"> bp.add(b);</span><br><span class="line"> b.addActionListener(<span class="keyword">new</span> ActionListener()&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line">String event=b.getText();</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(event.equals(<span class="string">&quot;第一个&quot;</span>)) &#123;</span><br><span class="line">c.first(cp);</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(event.equals(<span class="string">&quot;前一个&quot;</span>)) &#123;</span><br><span class="line">c.previous(cp);</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(event.equals(<span class="string">&quot;卡片A&quot;</span>)) &#123;</span><br><span class="line">c.show(cp,<span class="string">&quot;卡片A&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(event.equals(<span class="string">&quot;卡片B&quot;</span>)) &#123;</span><br><span class="line">c.show(cp,<span class="string">&quot;卡片B&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(event.equals(<span class="string">&quot;卡片C&quot;</span>)) &#123;</span><br><span class="line">c.show(cp,<span class="string">&quot;卡片C&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(event.equals(<span class="string">&quot;后一个&quot;</span>)) &#123;</span><br><span class="line">c.next(cp);</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(event.equals(<span class="string">&quot;最后一个&quot;</span>)) &#123;</span><br><span class="line">c.last(cp);</span><br><span class="line">&#125;</span><br><span class="line">&#125;&#125;);</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> f.pack();</span><br><span class="line"> f.setLocationRelativeTo(<span class="keyword">null</span>);</span><br><span class="line"> f.setVisible(<span class="keyword">true</span>);</span><br><span class="line"> &#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line"><span class="keyword">new</span> CardLayout_1();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">​```java</span><br><span class="line"><span class="comment">//利用卡片布局实训相册</span></span><br><span class="line">![](https:<span class="comment">//cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/25/e348f8e551bc264d616c873b59e80976.png)</span></span><br><span class="line">​```java</span><br><span class="line"><span class="keyword">package</span> Swing_Layout;</span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span>  java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionListener;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CardLayout_2</span> </span>&#123;</span><br><span class="line">JFrame f;</span><br><span class="line">JLabel l;</span><br><span class="line">JPanel cp,p;</span><br><span class="line">CardLayout c;</span><br><span class="line">ImageIcon img;</span><br><span class="line">String imgname[]= &#123;<span class="string">&quot;Image/1.jpg&quot;</span>,<span class="string">&quot;Image/2.jpg&quot;</span>,<span class="string">&quot;Image/3.jpg&quot;</span>,<span class="string">&quot;Image/4.jpg&quot;</span>&#125;;</span><br><span class="line">String bname[]= &#123;<span class="string">&quot;第一个&quot;</span>,<span class="string">&quot;前一个&quot;</span>,<span class="string">&quot;图片A&quot;</span>,<span class="string">&quot;图片B&quot;</span>,<span class="string">&quot;图片C&quot;</span>,<span class="string">&quot;图片D&quot;</span>,<span class="string">&quot;后一个&quot;</span>,<span class="string">&quot;最后一个&quot;</span>&#125;;</span><br><span class="line">String imgname2[]= &#123;<span class="string">&quot;图片A&quot;</span>,<span class="string">&quot;图片B&quot;</span>,<span class="string">&quot;图片C&quot;</span>,<span class="string">&quot;图片D&quot;</span>&#125;;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">CardLayout_2</span><span class="params">()</span> </span>&#123;</span><br><span class="line">f=<span class="keyword">new</span> JFrame();</span><br><span class="line">cp=<span class="keyword">new</span> JPanel();</span><br><span class="line">c=<span class="keyword">new</span> CardLayout();</span><br><span class="line">cp.setLayout(c);</span><br><span class="line">f.add(cp);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;imgname.length;i++) &#123;</span><br><span class="line">img=<span class="keyword">new</span> ImageIcon(imgname[i]);<span class="comment">//创建图片</span></span><br><span class="line">l=<span class="keyword">new</span> JLabel(img);<span class="comment">//创建标签</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//像采用卡片布局的面板中加卡片</span></span><br><span class="line"><span class="comment">//并为卡片设置名字</span></span><br><span class="line">cp.add(l,imgname2[i]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">p=<span class="keyword">new</span> JPanel();</span><br><span class="line">f.add(p,BorderLayout.SOUTH);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;bname.length;i++) &#123;</span><br><span class="line">JButton b=<span class="keyword">new</span> JButton(bname[i]);<span class="comment">//防止局部变量</span></span><br><span class="line">p.add(b);</span><br><span class="line">b.addActionListener(<span class="keyword">new</span> ActionListener() &#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line">String event=b.getText();<span class="comment">//按键值</span></span><br><span class="line"><span class="keyword">if</span>(event.equals(<span class="string">&quot;第一个&quot;</span>))&#123;</span><br><span class="line">c.first(cp);</span><br><span class="line">&#125;<span class="keyword">if</span>(event.equals(<span class="string">&quot;前一个&quot;</span>)) &#123;</span><br><span class="line">c.previous(cp);</span><br><span class="line">&#125;<span class="keyword">if</span>(event.equals(<span class="string">&quot;图片A&quot;</span>)) &#123;</span><br><span class="line">c.show(cp,<span class="string">&quot;图片A&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">if</span>(event.equals(<span class="string">&quot;图片B&quot;</span>)) &#123;</span><br><span class="line">c.show(cp, <span class="string">&quot;图片B&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">if</span>(event.equals(<span class="string">&quot;图片C&quot;</span>)) &#123;</span><br><span class="line">c.show(cp, <span class="string">&quot;图片C&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">if</span>(event.equals(<span class="string">&quot;图片D&quot;</span>)) &#123;</span><br><span class="line">c.show(cp, <span class="string">&quot;图片D&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">if</span>(event.equals(<span class="string">&quot;后一个&quot;</span>)) &#123;</span><br><span class="line">c.next(cp);</span><br><span class="line">&#125;<span class="keyword">if</span>(event.equals(<span class="string">&quot;最后一个&quot;</span>)) &#123;</span><br><span class="line">c.last(cp);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br><span class="line">f.pack();</span><br><span class="line">f.setLocationRelativeTo(<span class="keyword">null</span>);</span><br><span class="line">f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class="line">f.setVisible(<span class="keyword">true</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line"><span class="keyword">new</span> CardLayout_2();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/25/26bef4624ae4de3d1529e8584a3d70e7.png"></p><h1 id="Swing高级"><a href="#Swing高级" class="headerlink" title="Swing高级"></a>Swing高级</h1><h2 id="JTable表格"><a href="#JTable表格" class="headerlink" title="JTable表格"></a>JTable表格</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">一.创建表格控件的各种方式:</span><br><span class="line">(<span class="number">1</span>)  调用无参构造函数.</span><br><span class="line">JTable table = <span class="keyword">new</span> JTable();</span><br><span class="line">(<span class="number">2</span>)  以表头和表数据创建表格.</span><br><span class="line">String columnNames[]= &#123;<span class="string">&quot;姓名&quot;</span>,<span class="string">&quot;性别&quot;</span>,<span class="string">&quot;年龄&quot;</span>,<span class="string">&quot;政治面貌&quot;</span>&#125;;</span><br><span class="line">Object data[][]= &#123;&#123;<span class="string">&quot;陈峰&quot;</span>,<span class="string">&quot;男&quot;</span>,<span class="keyword">new</span> Integer(<span class="number">19</span>),<span class="string">&quot;党员&quot;</span>&#125;,</span><br><span class="line">           &#123;<span class="string">&quot;田一飞&quot;</span>,<span class="string">&quot;男&quot;</span>,<span class="keyword">new</span> Integer(<span class="number">18</span>),<span class="string">&quot;团员&quot;</span>&#125;,</span><br><span class="line">            &#123;<span class="string">&quot;胡锦&quot;</span>,<span class="string">&quot;女&quot;</span>,<span class="keyword">new</span> Integer(<span class="number">19</span>),<span class="string">&quot;党员&quot;</span>&#125;&#125;;</span><br><span class="line">JTable table = <span class="keyword">new</span> JTable(data, columnNames);</span><br><span class="line">JTableHeader tablerHeader=table.getTableHeader(); <span class="comment">//获取表格列名.</span></span><br><span class="line">(<span class="number">3</span>)利用表格模型创建表格</span><br><span class="line">DefaultTableModel tableModel=<span class="keyword">new</span> DefaultTableMode();<span class="comment">//创建表格模型</span></span><br><span class="line">JTable table=<span class="keyword">new</span> JTabel(tableModel); <span class="comment">//创建表格</span></span><br><span class="line">table.setRowSorter(<span class="keyword">new</span> TableRowSorter(tableModel)); <span class="comment">//设置排序器</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Swing_list;</span><br><span class="line"><span class="keyword">import</span> java.awt.BorderLayout;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionListener;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.MouseAdapter;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.MouseEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> javax.swing.table.DefaultTableModel;</span><br><span class="line"><span class="keyword">import</span> javax.swing.table.TableRowSorter;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> 默认方法创建  </span>&#123;</span><br><span class="line">JFrame f;</span><br><span class="line">JTable table;</span><br><span class="line">JLabel l1,l2,l3,l4,l5;</span><br><span class="line">JButton b1,b2,b3;</span><br><span class="line">JTextField t1,t2,t3,t4;</span><br><span class="line">JPanel p;</span><br><span class="line">JScrollPane gd;</span><br><span class="line">DefaultTableModel tableModel;</span><br><span class="line">String Listname[]= &#123;<span class="string">&quot;学号&quot;</span>,<span class="string">&quot;姓名&quot;</span>,<span class="string">&quot;年龄&quot;</span>,<span class="string">&quot;专业&quot;</span>&#125;;</span><br><span class="line">Object[][] date= &#123;&#123;<span class="string">&quot;20172001&quot;</span>,<span class="string">&quot;张三&quot;</span>,<span class="keyword">new</span> Integer(<span class="number">18</span>),<span class="string">&quot;软件工程&quot;</span>&#125;,</span><br><span class="line">&#123;<span class="string">&quot;20172002&quot;</span>,<span class="string">&quot;李四&quot;</span>,<span class="keyword">new</span> Integer(<span class="number">19</span>),<span class="string">&quot;软件工程&quot;</span>&#125;,</span><br><span class="line">&#123;<span class="string">&quot;20172003&quot;</span>,<span class="string">&quot;王五&quot;</span>,<span class="keyword">new</span> Integer(<span class="number">19</span>),<span class="string">&quot;软件工程&quot;</span>&#125;,</span><br><span class="line">&#123;<span class="string">&quot;20172004&quot;</span>,<span class="string">&quot;赵六&quot;</span>,<span class="keyword">new</span> Integer(<span class="number">18</span>),<span class="string">&quot;软件工程&quot;</span>&#125;&#125;;</span><br><span class="line"><span class="keyword">public</span> 默认方法创建() &#123;</span><br><span class="line">f=<span class="keyword">new</span> JFrame(<span class="string">&quot;表格&quot;</span>);</span><br><span class="line">tableModel=<span class="keyword">new</span> DefaultTableModel(date,Listname);<span class="comment">//创建表格模型</span></span><br><span class="line">table=<span class="keyword">new</span> JTable(tableModel);<span class="comment">//创建表格</span></span><br><span class="line">gd=<span class="keyword">new</span> JScrollPane(table);<span class="comment">//创建滚动面板</span></span><br><span class="line">table.setRowHeight(<span class="number">30</span>);</span><br><span class="line"><span class="comment">//设置表格排序器</span></span><br><span class="line">table.setRowSorter(<span class="keyword">new</span> TableRowSorter(tableModel));</span><br><span class="line"><span class="comment">//设置表格的选择模式为单选</span></span><br><span class="line">table.setSelectionMode(ListSelectionModel.SINGLE_INTERVAL_SELECTION);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//为表格添加鼠标事件监听器</span></span><br><span class="line"><span class="comment">//点击表格 修改框反应</span></span><br><span class="line">table.addMouseListener(<span class="keyword">new</span> MouseAdapter() &#123;</span><br><span class="line"><span class="comment">//发生了单击事件</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">mouseClicked</span><span class="params">(MouseEvent e)</span> </span>&#123;</span><br><span class="line"><span class="comment">//获得被选中行的索引</span></span><br><span class="line"><span class="keyword">int</span> selectedRow=table.getSelectedRow(); <span class="comment">//行数</span></span><br><span class="line"><span class="comment">//从表格模型中获得指定单元格的值</span></span><br><span class="line"><span class="comment">//行数固定 改变列数来获取</span></span><br><span class="line">Object a=tableModel.getValueAt(selectedRow, <span class="number">0</span>);<span class="comment">//行 列</span></span><br><span class="line">Object b=tableModel.getValueAt(selectedRow, <span class="number">1</span>);</span><br><span class="line">Object c=tableModel.getValueAt(selectedRow, <span class="number">2</span>);</span><br><span class="line">Object d=tableModel.getValueAt(selectedRow, <span class="number">3</span>);</span><br><span class="line">t1.setText(a.toString());  <span class="comment">//将值赋给文本框</span></span><br><span class="line">t2.setText(b.toString());</span><br><span class="line">t3.setText(c.toString());</span><br><span class="line">t4.setText(d.toString());</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">p=<span class="keyword">new</span> JPanel();</span><br><span class="line">l1=<span class="keyword">new</span> JLabel(<span class="string">&quot;学号&quot;</span>,JLabel.CENTER);</span><br><span class="line">l2=<span class="keyword">new</span> JLabel(<span class="string">&quot;姓名&quot;</span>,JLabel.CENTER);</span><br><span class="line">l3=<span class="keyword">new</span> JLabel(<span class="string">&quot;年龄&quot;</span>,JLabel.CENTER);</span><br><span class="line">l4=<span class="keyword">new</span> JLabel(<span class="string">&quot;专业&quot;</span>,JLabel.CENTER);</span><br><span class="line">l5=<span class="keyword">new</span> JLabel(<span class="string">&quot;修改表格&quot;</span>,JLabel.CENTER);</span><br><span class="line">t1=<span class="keyword">new</span> JTextField(<span class="number">10</span>);</span><br><span class="line">t2=<span class="keyword">new</span> JTextField(<span class="number">10</span>);</span><br><span class="line">t3=<span class="keyword">new</span> JTextField(<span class="number">10</span>);</span><br><span class="line">t4=<span class="keyword">new</span> JTextField(<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">b1=<span class="keyword">new</span> JButton(<span class="string">&quot;添加&quot;</span>);</span><br><span class="line">b1.addActionListener(<span class="keyword">new</span> ActionListener() &#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line"><span class="comment">//创建表格行数组</span></span><br><span class="line">String contents[]= &#123;t1.getText(),t2.getText(),t3.getText(),t4.getText()&#125;;</span><br><span class="line">tableModel.addRow(contents);<span class="comment">//向表格模型中加一行</span></span><br><span class="line">l5.setText(<span class="string">&quot;添加成功&quot;</span>);</span><br><span class="line">l5.setForeground(Color.BLUE);</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">b2=<span class="keyword">new</span> JButton(<span class="string">&quot;修改&quot;</span>);</span><br><span class="line">b2.addActionListener(<span class="keyword">new</span> ActionListener() &#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line"><span class="keyword">int</span> selectedRow=table.getSelectedRow();<span class="comment">//获得被选中行的索引</span></span><br><span class="line"><span class="keyword">if</span>(selectedRow!=-<span class="number">1</span>) &#123;<span class="comment">//判断是否被选中</span></span><br><span class="line"><span class="comment">//修改表格模型中的指定值</span></span><br><span class="line">tableModel.setValueAt(t1.getText(), selectedRow, <span class="number">0</span>);</span><br><span class="line">tableModel.setValueAt(t2.getText(),selectedRow, <span class="number">0</span>);</span><br><span class="line">tableModel.setValueAt(t3.getText(),selectedRow, <span class="number">0</span>);</span><br><span class="line">tableModel.setValueAt(t4.getText(),selectedRow, <span class="number">0</span>);</span><br><span class="line">l5.setText(<span class="string">&quot;修改成功&quot;</span>);</span><br><span class="line">l5.setForeground(Color.darkGray);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line">b3=<span class="keyword">new</span> JButton(<span class="string">&quot;删除&quot;</span>);</span><br><span class="line">b3.addActionListener(<span class="keyword">new</span> ActionListener() &#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line"><span class="keyword">int</span> selectedRow=table.getSelectedRow();<span class="comment">//获得被选中的索引</span></span><br><span class="line"><span class="keyword">if</span>(selectedRow!=-<span class="number">1</span>) &#123;<span class="comment">//判断是否被选中</span></span><br><span class="line"><span class="comment">//从表格中删除指定行</span></span><br><span class="line">tableModel.removeRow(selectedRow);</span><br><span class="line">l5.setText(<span class="string">&quot;删除成功&quot;</span>);</span><br><span class="line">l5.setForeground(Color.red);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line">p.add(l1);</span><br><span class="line">p.add(t1);</span><br><span class="line">p.add(l2);</span><br><span class="line">p.add(t2);</span><br><span class="line">p.add(l3);</span><br><span class="line">p.add(t3);</span><br><span class="line">p.add(l4);</span><br><span class="line">p.add(t4);</span><br><span class="line">p.add(l5);</span><br><span class="line">p.add(b1);</span><br><span class="line">p.add(b2);</span><br><span class="line">p.add(b3);</span><br><span class="line">p.setLayout(<span class="keyword">new</span> GridLayout(<span class="number">3</span>,<span class="number">2</span>));</span><br><span class="line">f.add(p,BorderLayout.SOUTH);</span><br><span class="line">f.add(gd,BorderLayout.CENTER);</span><br><span class="line">f.pack();</span><br><span class="line">f.setLocationRelativeTo(<span class="keyword">null</span>);</span><br><span class="line">f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class="line">f.setVisible(<span class="keyword">true</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line"><span class="keyword">new</span> 默认方法创建();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/26/791896742af1ff02701adcfb36c82b15.png"></p><h2 id="JTree树"><a href="#JTree树" class="headerlink" title="JTree树"></a>JTree树</h2><p>1.<code>JTree</code>类的构造方法:<br>JTree()<br>JTree(TreeNode root)  //根据指定<code>根节点</code>创建树<br>JTree(TreeModel newModel) //根据指定树模型创建树<br>2.<code>DefaultMutableTreeNode</code>类实现了TreeNode接口，用来创建树的节点。<br>DefaultMutableTreeNode()<br>DefaultMutableTreeNode(Object userObject) //创建一个具有<code>指定标签</code>的节点<br>DefaultMutableTreeNode(Object userObject,boolean allowsChildren) //创建一个具有指定标签的节点，并且允许有子节点。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Swing_tree;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> javax.swing.tree.DefaultMutableTreeNode;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> 创建<span class="title">tree_2</span> </span>&#123;</span><br><span class="line">JFrame f;</span><br><span class="line">JTree tree;</span><br><span class="line">DefaultMutableTreeNode top;<span class="comment">//资源管理器</span></span><br><span class="line"><span class="comment">//我的公文包  我的电脑  收藏夹  Readme</span></span><br><span class="line">DefaultMutableTreeNode node1_1,node1_2,node1_3,node1_4;</span><br><span class="line"><span class="comment">//公司文件 私人文件  本机磁盘</span></span><br><span class="line">DefaultMutableTreeNode node2_1,node2_2,node2_3,node2_4,node2_5;</span><br><span class="line"><span class="comment">//网站列表</span></span><br><span class="line">DefaultMutableTreeNode node3_1;</span><br><span class="line"><span class="comment">//空</span></span><br><span class="line">DefaultMutableTreeNode node4_1;</span><br><span class="line"><span class="keyword">public</span> 创建tree_2() &#123;</span><br><span class="line">f=<span class="keyword">new</span> JFrame(<span class="string">&quot;TreeDemo&quot;</span>);</span><br><span class="line">top=<span class="keyword">new</span> DefaultMutableTreeNode(<span class="string">&quot;资源管理器&quot;</span>);</span><br><span class="line"></span><br><span class="line">node1_1=<span class="keyword">new</span> DefaultMutableTreeNode(<span class="string">&quot;我的公文包&quot;</span>);</span><br><span class="line">node1_2=<span class="keyword">new</span> DefaultMutableTreeNode(<span class="string">&quot;我的电脑&quot;</span>);</span><br><span class="line">node1_3=<span class="keyword">new</span> DefaultMutableTreeNode(<span class="string">&quot;收藏夹&quot;</span>);</span><br><span class="line">node1_4=<span class="keyword">new</span> DefaultMutableTreeNode(<span class="string">&quot;Readme&quot;</span>);</span><br><span class="line"></span><br><span class="line">node2_1=<span class="keyword">new</span> DefaultMutableTreeNode(<span class="string">&quot;公司文件&quot;</span>);</span><br><span class="line">node2_2=<span class="keyword">new</span> DefaultMutableTreeNode(<span class="string">&quot;私人文件&quot;</span>);</span><br><span class="line">node2_3=<span class="keyword">new</span> DefaultMutableTreeNode(<span class="string">&quot;本机磁盘(C:)&quot;</span>);</span><br><span class="line">node2_4=<span class="keyword">new</span> DefaultMutableTreeNode(<span class="string">&quot;本机磁盘(D:)&quot;</span>);</span><br><span class="line">node2_5=<span class="keyword">new</span> DefaultMutableTreeNode(<span class="string">&quot;本机磁盘(E:)&quot;</span>);</span><br><span class="line"></span><br><span class="line">node3_1=<span class="keyword">new</span> DefaultMutableTreeNode(<span class="string">&quot;网站列表&quot;</span>);</span><br><span class="line">node4_1=<span class="keyword">new</span> DefaultMutableTreeNode(<span class="string">&quot;&lt;空&gt;&quot;</span>);</span><br><span class="line">top.add(node1_1);</span><br><span class="line">top.add(node1_2);</span><br><span class="line">top.add(node1_3);</span><br><span class="line">top.add(node1_4);</span><br><span class="line"></span><br><span class="line">node1_1.add(node2_1);</span><br><span class="line">node1_1.add(node2_2);</span><br><span class="line">node1_2.add(node2_3);</span><br><span class="line">node1_2.add(node2_4);</span><br><span class="line">node1_2.add(node2_5);</span><br><span class="line">node1_3.add(node3_1);</span><br><span class="line"></span><br><span class="line">node3_1.add(node4_1);</span><br><span class="line">tree=<span class="keyword">new</span> JTree(top);</span><br><span class="line">f.add(tree);</span><br><span class="line">f.setSize(<span class="number">400</span>,<span class="number">400</span>);</span><br><span class="line">f.setLocationRelativeTo(<span class="keyword">null</span>);</span><br><span class="line">f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class="line">f.setResizable(<span class="keyword">true</span>);</span><br><span class="line">f.setVisible(<span class="keyword">true</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line"><span class="keyword">new</span> 创建tree_2() ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/26/0853fc6e23b16e61770838b0a3dfcd01.png"></p><h2 id="JMenu菜单"><a href="#JMenu菜单" class="headerlink" title="JMenu菜单"></a>JMenu菜单</h2><h3 id="下拉菜单"><a href="#下拉菜单" class="headerlink" title="下拉菜单"></a>下拉菜单</h3><p>菜单有如下三大组件：JMenuBar，JMenu，JMenuItem。<br>(1) 菜单栏(JMenuBar)：管理 菜单,不参与用户交互操作<br>(2)  菜单(JMenu)：整合管理菜单项（非叶结点）<br>(3)  菜单项(JMenuItem)：菜单系统中的基本组件（叶结点）<br>创建下拉菜单一般步骤<br>(1) 创建一个<code>JMenuBar</code>菜单栏对象，将其放置在JFrame窗口的顶部；<br>(2)  创建<code>JMenu</code>菜单对象，将其添加到<code>JMenuBar</code>菜单栏中;<br>(3)  创建<code>JMenuItem</code>菜单项，将其添加到<code>JMenu</code>菜单中。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/26/934eb444e08650e25707967ce054fc84.png"></p><hr><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/26/bc769fbbdc58a62576aa9c3029940943.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/26/5b00164a192996c8d6ad759f4e05921e.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/26/c62bd3c3c8f14d05a179d4df64f921a3.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/26/dd2dd1585d010fb274ecc1708b91882c.png"><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/26/c73619116a40401a2ca552128497c308.png"><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/26/0c6c1db5673153a535c5ad76a841ec5e.png"></p><hr><blockquote><p><code>JCheckboxMenuItem</code>类用于创建复选菜单项。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/26/fdf48913fb0040aa303702b3332c2f89.png"></p><blockquote><p><code>JRadioButtonMenuItem</code>类用于创建带有单选的菜单项。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/26/dd5663e6f48a732f3efc4695f33cd629.png"></p><h3 id="弹出菜单"><a href="#弹出菜单" class="headerlink" title="弹出菜单"></a>弹出菜单</h3><p>弹出式菜单：<code>JPopupMenu</code><br>(1) 构造方法： JPopupMenu ( );<br>(2)  常用方法：<br>① add( JMenuItem ) ：将指定菜单项添加到菜单末尾;<br>② <code>show</code>(Component , int , int ) ：<br>在组件调用者的坐标空间指定位置显示弹出菜单。<br>说明：弹出菜单默认不可见，需调用show()方法显示。<br>③<code> setVisible</code>( boolean ) ：设置弹出菜单的可见性。</p><h3 id="定制菜单"><a href="#定制菜单" class="headerlink" title="定制菜单"></a>定制菜单</h3><h4 id="使用分隔线"><a href="#使用分隔线" class="headerlink" title="使用分隔线"></a>使用分隔线</h4><p>(1) 作用：便于集中相似/相关的菜单项；<br>(2) JMenu类、JPopupMenu类提供添加分隔条方法<br><code>addSeparator()</code>：将新分隔符追加到菜单末尾；<br>Jmenu类还提供向指定索引位置插入分隔符方法：insertSeparator(int) 。<br>注意：索引位置从0开始。</p><h4 id="启动-禁用"><a href="#启动-禁用" class="headerlink" title="启动/禁用"></a>启动/禁用</h4><p>方法：<code>setEnable</code>(boolean);<br>① false：禁用菜单/菜单项；<br>② true：启用菜单/菜单项。<br>注意：禁用的菜单/菜单项呈灰色。</p><h4 id="设置快捷键"><a href="#设置快捷键" class="headerlink" title="设置快捷键"></a>设置快捷键</h4><p>(1) 作用：为菜单/菜单项设置快捷键；<br>(2) 设置方法<br>① <code>setMnemonic(int)</code>：参数为与键盘助记符对应的键值；<br>例：setMnemonic(KeyEvent.VK_F)，指定F为快捷键。<br>②<code> setMnemonic(char)</code> ：参数是键盘助记符对应的键值；<br>例：setMnemonic(‘F’)，指定F为快捷键。<br>(3) 说明：<br>①  如菜单名中含指定键盘快捷键，会为该键添加下划线；<br>②  快捷键<code>不区分大小写</code>。</p><h4 id="设置加速器"><a href="#设置加速器" class="headerlink" title="设置加速器"></a>设置加速器</h4><p>(1) 作用：不展开菜单 ，加速器可直接激活相应菜单项事件。<br>(2) 设置方法：<code>setaAccelerator(KeyStroke)</code><br>方法：<code>getKeyStroke</code>( int keyCode, int modifiers )<br> ① 作用： 获取<code>KeyStroke</code>对象(KeyStroke类中定义的静态方法)；<br> ②参数<code>keyCode</code>：键盘助记符对应的键值；<br> 由KeyEvent类中定义的VK_开头的静态常量指定。<br>③参数<code>modifiers</code>：多个参数，用|分隔<br>由InputEvent类中定义的静态常量指定。<br>例： CTRL_MASK、ALT_MASK、 SHIFT_MASK等 。<br>如：<br>getKeyStroke(KeyEvent.VK_<code>A</code>, InputEvent.<code>CTRL</code>_MASK | InputEvent.<code>ALT</code>_MASK));<br>//加速器按键为 CTRL+ALT+A</p><h3 id="笔记本实例"><a href="#笔记本实例" class="headerlink" title="笔记本实例"></a>笔记本实例</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> SWng_Menu;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionListener;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.InputEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.KeyEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.MouseAdapter;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.MouseEvent;</span><br><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.BufferedWriter;</span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileReader;</span><br><span class="line"><span class="keyword">import</span> java.io.FileWriter;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> 记事本作业版 <span class="keyword">implements</span> <span class="title">ActionListener</span> </span>&#123;</span><br><span class="line">JFrame f;</span><br><span class="line">JMenuBar cd;</span><br><span class="line">JMenu filecd,editcd,fontcd,lookcd,helpcd; <span class="comment">//五个主菜单  一级菜单</span></span><br><span class="line"><span class="comment">//文件菜单</span></span><br><span class="line">JMenuItem filemenuItem[]=<span class="keyword">new</span> JMenuItem[<span class="number">8</span>];<span class="comment">//文件下的8个副菜单 放进数组  二级菜单</span></span><br><span class="line">String filemenuname[]= &#123;<span class="string">&quot;新建(N)&quot;</span>,<span class="string">&quot;新窗口(W)&quot;</span>,<span class="string">&quot;打开(O)&quot;</span>,<span class="string">&quot;保存(S)&quot;</span>,<span class="string">&quot;另存为(A)&quot;</span>,<span class="string">&quot;页面设置(U)&quot;</span>,<span class="string">&quot;打印(P)&quot;</span>,<span class="string">&quot;退出(X)&quot;</span>&#125;;<span class="comment">//文件</span></span><br><span class="line"><span class="comment">//编辑菜单</span></span><br><span class="line">JMenuItem editmenuItem[]=<span class="keyword">new</span> JMenuItem[<span class="number">13</span>];<span class="comment">//编辑下12个副菜单  二级菜单</span></span><br><span class="line">String editmenuname[]= &#123;<span class="string">&quot;撤销(U)&quot;</span>,<span class="string">&quot;剪切(T)&quot;</span>,<span class="string">&quot;复制(C)&quot;</span>,<span class="string">&quot;粘贴(P)&quot;</span>,<span class="string">&quot;删除(L)&quot;</span>,<span class="string">&quot;使用Bing搜索&quot;</span>,<span class="string">&quot;查找(F)&quot;</span>,<span class="string">&quot;查找下一个(N)&quot;</span>,<span class="string">&quot;查找上一个(V)&quot;</span>,<span class="string">&quot;替换(R)&quot;</span>,<span class="string">&quot;转到(G)&quot;</span>,<span class="string">&quot;全选(V)&quot;</span>,<span class="string">&quot;时间/日期(D)&quot;</span>&#125;; <span class="comment">//编辑</span></span><br><span class="line"><span class="comment">//格式</span></span><br><span class="line">JMenu stylemenuItem[]=<span class="keyword">new</span> JMenu[<span class="number">2</span>];<span class="comment">// 二级菜单</span></span><br><span class="line">String formatmenuname[]= &#123;<span class="string">&quot;自动换行(W)&quot;</span>,<span class="string">&quot;字体(F)&quot;</span>&#125;;<span class="comment">//格式</span></span><br><span class="line"><span class="comment">//字体</span></span><br><span class="line">ButtonGroup bg;</span><br><span class="line">JRadioButtonMenuItem fontbody[]=<span class="keyword">new</span> JRadioButtonMenuItem[<span class="number">4</span>]; <span class="comment">//单选字体   三级菜单</span></span><br><span class="line">String fontbodyname[]= &#123;<span class="string">&quot;黑体&quot;</span>,<span class="string">&quot;宋体&quot;</span>,<span class="string">&quot;楷体&quot;</span>,<span class="string">&quot;隶书&quot;</span>&#125;; <span class="comment">//字体</span></span><br><span class="line"><span class="comment">//查看</span></span><br><span class="line">JMenuItem lookmenuItem[]=<span class="keyword">new</span> JMenuItem[<span class="number">2</span>];</span><br><span class="line">String lookname[]= &#123;<span class="string">&quot;缩放(Z)&quot;</span>,<span class="string">&quot;状态栏(S)&quot;</span>&#125;;</span><br><span class="line"><span class="comment">//帮助</span></span><br><span class="line">JMenuItem helpmenuItem[]=<span class="keyword">new</span> JMenuItem[<span class="number">3</span>];</span><br><span class="line">String helpname[]= &#123;<span class="string">&quot;查看帮助(H)&quot;</span>,<span class="string">&quot;发送反馈(F)&quot;</span>,<span class="string">&quot;关于记事本&quot;</span>&#125;;</span><br><span class="line"><span class="comment">//工具栏</span></span><br><span class="line">JToolBar tb;</span><br><span class="line">JButton Toolbu[]=<span class="keyword">new</span> JButton[<span class="number">7</span>];</span><br><span class="line">String Toolname[]= &#123;<span class="string">&quot;新建&quot;</span>,<span class="string">&quot;打开&quot;</span>,<span class="string">&quot;保存&quot;</span>,<span class="string">&quot;剪切&quot;</span>,<span class="string">&quot;复制&quot;</span>,<span class="string">&quot;粘贴&quot;</span>,<span class="string">&quot;字体&quot;</span>&#125;;</span><br><span class="line"><span class="comment">//文本域</span></span><br><span class="line">JTextArea t;</span><br><span class="line">JScrollPane gd;</span><br><span class="line"><span class="comment">//弹出菜单</span></span><br><span class="line">JPopupMenu tm;<span class="comment">//弹出菜单</span></span><br><span class="line">JMenuItem PopumenuItem[]=<span class="keyword">new</span> JMenuItem[<span class="number">4</span>];<span class="comment">//弹出</span></span><br><span class="line">String popname[]= &#123;<span class="string">&quot;全选&quot;</span>,<span class="string">&quot;复制&quot;</span>,<span class="string">&quot;粘贴&quot;</span>,<span class="string">&quot;剪切&quot;</span>&#125;;  <span class="comment">//弹出窗口</span></span><br><span class="line"><span class="keyword">public</span> 记事本作业版() &#123;</span><br><span class="line">f=<span class="keyword">new</span> JFrame(<span class="string">&quot;新建文本文档-记事本&quot;</span>);</span><br><span class="line">f.setIconImage(<span class="keyword">new</span> ImageIcon(<span class="string">&quot;Image/记事本.png&quot;</span>).getImage());</span><br><span class="line">cd=<span class="keyword">new</span> JMenuBar();<span class="comment">//工具条</span></span><br><span class="line"><span class="comment">//五个主菜单</span></span><br><span class="line">filecd=<span class="keyword">new</span> JMenu(<span class="string">&quot;文件(F)&quot;</span>);</span><br><span class="line">filecd.setMnemonic(<span class="string">&#x27;F&#x27;</span>);</span><br><span class="line">editcd=<span class="keyword">new</span> JMenu(<span class="string">&quot;编辑(E)&quot;</span>);</span><br><span class="line">editcd.setMnemonic(<span class="string">&#x27;E&#x27;</span>);</span><br><span class="line">fontcd=<span class="keyword">new</span> JMenu(<span class="string">&quot;格式(O)&quot;</span>);</span><br><span class="line">fontcd.setMnemonic(<span class="string">&#x27;O&#x27;</span>);</span><br><span class="line">lookcd=<span class="keyword">new</span> JMenu(<span class="string">&quot;查看(V)&quot;</span>);</span><br><span class="line">lookcd.setMnemonic(<span class="string">&#x27;V&#x27;</span>);</span><br><span class="line">helpcd=<span class="keyword">new</span> JMenu(<span class="string">&quot;帮助(H)&quot;</span>);</span><br><span class="line">helpcd.setMnemonic(<span class="string">&#x27;H&#x27;</span>);</span><br><span class="line">cd.add(filecd);</span><br><span class="line">cd.add(editcd);</span><br><span class="line">cd.add(fontcd);</span><br><span class="line">cd.add(lookcd);</span><br><span class="line">cd.add(helpcd);</span><br><span class="line">f.setJMenuBar(cd);</span><br><span class="line"><span class="comment">//文件添加</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;filemenuname.length;i++) &#123;</span><br><span class="line">filemenuItem[i]=<span class="keyword">new</span> JMenuItem(filemenuname[i]);<span class="comment">//每一个菜单项加名字</span></span><br><span class="line"><span class="keyword">if</span>(i&gt;<span class="number">0</span>&amp;&amp;i%<span class="number">2</span>==<span class="number">0</span>)</span><br><span class="line">filecd.addSeparator();</span><br><span class="line">filecd.add(filemenuItem[i]);<span class="comment">//都加到文件主菜单上</span></span><br><span class="line">filemenuItem[i].addActionListener(<span class="keyword">this</span>);<span class="comment">//都加监听</span></span><br><span class="line">&#125;</span><br><span class="line">filemenuItem[<span class="number">1</span>].setEnabled(<span class="keyword">false</span>);<span class="comment">//新窗口</span></span><br><span class="line">filemenuItem[<span class="number">4</span>].setEnabled(<span class="keyword">false</span>);<span class="comment">//另存为</span></span><br><span class="line">filemenuItem[<span class="number">5</span>].setEnabled(<span class="keyword">false</span>);  <span class="comment">//页面设置</span></span><br><span class="line">filemenuItem[<span class="number">6</span>].setEnabled(<span class="keyword">false</span>);  <span class="comment">//打印</span></span><br><span class="line">filemenuItem[<span class="number">0</span>].setMnemonic(<span class="string">&#x27;N&#x27;</span>);</span><br><span class="line">filemenuItem[<span class="number">2</span>].setMnemonic(<span class="string">&#x27;O&#x27;</span>);</span><br><span class="line">filemenuItem[<span class="number">3</span>].setMnemonic(<span class="string">&#x27;S&#x27;</span>);</span><br><span class="line">filemenuItem[<span class="number">0</span>].setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_N,InputEvent.CTRL_MASK));</span><br><span class="line">filemenuItem[<span class="number">2</span>].setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_O,InputEvent.CTRL_MASK));</span><br><span class="line">filemenuItem[<span class="number">3</span>].setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S,InputEvent.CTRL_MASK));</span><br><span class="line">filemenuItem[<span class="number">7</span>].setMnemonic(<span class="string">&#x27;X&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//编辑添加</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;editmenuname.length;i++) &#123;</span><br><span class="line">editmenuItem[i]=<span class="keyword">new</span> JMenuItem(editmenuname[i]);<span class="comment">//加名字</span></span><br><span class="line"><span class="keyword">if</span>(i&gt;<span class="number">0</span>&amp;&amp;i%<span class="number">2</span>==<span class="number">0</span>)</span><br><span class="line">editcd.addSeparator();</span><br><span class="line">editcd.add(editmenuItem[i]);</span><br><span class="line">editmenuItem[i].addActionListener(<span class="keyword">this</span>);</span><br><span class="line">&#125;</span><br><span class="line">editmenuItem[<span class="number">0</span>].setEnabled(<span class="keyword">false</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">11</span>;i++) &#123;</span><br><span class="line">editmenuItem[i].setEnabled(<span class="keyword">false</span>);</span><br><span class="line">&#125;</span><br><span class="line">editmenuItem[<span class="number">1</span>].setMnemonic(<span class="string">&#x27;T&#x27;</span>); <span class="comment">//剪切</span></span><br><span class="line">editmenuItem[<span class="number">1</span>].setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_X,InputEvent.CTRL_MASK));</span><br><span class="line">editmenuItem[<span class="number">2</span>].setMnemonic(<span class="string">&#x27;C&#x27;</span>); <span class="comment">//复制</span></span><br><span class="line">editmenuItem[<span class="number">2</span>].setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_C,InputEvent.CTRL_MASK));</span><br><span class="line">editmenuItem[<span class="number">3</span>].setMnemonic(<span class="string">&#x27;V&#x27;</span>); <span class="comment">//粘贴</span></span><br><span class="line">editmenuItem[<span class="number">3</span>].setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_V,InputEvent.CTRL_MASK));</span><br><span class="line">editmenuItem[<span class="number">11</span>].setMnemonic(<span class="string">&#x27;A&#x27;</span>); <span class="comment">//全选</span></span><br><span class="line">editmenuItem[<span class="number">11</span>].setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_A,InputEvent.CTRL_MASK));</span><br><span class="line">editmenuItem[<span class="number">12</span>].setMnemonic(<span class="string">&#x27;D&#x27;</span>);  <span class="comment">//时间</span></span><br><span class="line">editmenuItem[<span class="number">12</span>].setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_F5,InputEvent.CTRL_MASK));</span><br><span class="line"><span class="comment">//格式添加</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;formatmenuname.length;i++) &#123;</span><br><span class="line"> stylemenuItem[i]=<span class="keyword">new</span> JMenu(formatmenuname[i]);</span><br><span class="line"> <span class="keyword">if</span>(i&gt;<span class="number">0</span>)</span><br><span class="line"> fontcd.addSeparator();</span><br><span class="line"> fontcd.add(stylemenuItem[i]);</span><br><span class="line">&#125;</span><br><span class="line">stylemenuItem[<span class="number">0</span>].setMnemonic(<span class="string">&#x27;W&#x27;</span>);</span><br><span class="line">stylemenuItem[<span class="number">0</span>].setEnabled(<span class="keyword">false</span>);</span><br><span class="line">stylemenuItem[<span class="number">1</span>].setMnemonic(<span class="string">&#x27;F&#x27;</span>);</span><br><span class="line"><span class="comment">//加字体</span></span><br><span class="line">bg=<span class="keyword">new</span> ButtonGroup();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;fontbodyname.length;i++) &#123;</span><br><span class="line">fontbody[i]=<span class="keyword">new</span> JRadioButtonMenuItem(fontbodyname[i]);<span class="comment">//4个字体 加上名字</span></span><br><span class="line">bg.add(fontbody[i]);<span class="comment">//添加到按键组 实现单选</span></span><br><span class="line">stylemenuItem[<span class="number">1</span>].add(fontbody[i]);<span class="comment">//把4个字体文字添加到字体副菜单</span></span><br><span class="line">fontbody[i].addActionListener(<span class="keyword">this</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//查看添加</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt; lookname.length;i++) &#123;</span><br><span class="line">lookmenuItem[i]=<span class="keyword">new</span> JMenuItem(lookname[i]);</span><br><span class="line">lookmenuItem[i].setEnabled(<span class="keyword">false</span>);</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">1</span>)</span><br><span class="line">lookcd.addSeparator();</span><br><span class="line">lookcd.add(lookmenuItem[i]);</span><br><span class="line">&#125;</span><br><span class="line">lookmenuItem[<span class="number">0</span>].setMnemonic(<span class="string">&#x27;Z&#x27;</span>);</span><br><span class="line">lookmenuItem[<span class="number">1</span>].setMnemonic(<span class="string">&#x27;S&#x27;</span>);</span><br><span class="line"><span class="comment">//帮助添加</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;helpname.length;i++) &#123;</span><br><span class="line">helpmenuItem[i]=<span class="keyword">new</span> JMenuItem(helpname[i]);</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">1</span>||i==<span class="number">2</span>)</span><br><span class="line">helpcd.addSeparator();</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">0</span>||i==<span class="number">1</span>)</span><br><span class="line">helpmenuItem[i].setEnabled(<span class="keyword">false</span>);</span><br><span class="line">helpcd.add(helpmenuItem[i]);</span><br><span class="line">&#125;</span><br><span class="line">helpmenuItem[<span class="number">2</span>].addActionListener(<span class="keyword">new</span> CreatNewWindos());<span class="comment">//关于记事本</span></span><br><span class="line"><span class="comment">//文本域设置</span></span><br><span class="line">t=<span class="keyword">new</span> JTextArea();</span><br><span class="line">t.setFont(<span class="keyword">new</span> Font(<span class="string">&quot;微软雅黑&quot;</span>,Font.PLAIN,<span class="number">20</span>));</span><br><span class="line">gd=<span class="keyword">new</span> JScrollPane(t);  <span class="comment">//文本域加滚动</span></span><br><span class="line">f.add(gd,BorderLayout.CENTER);</span><br><span class="line"><span class="comment">//弹出菜单</span></span><br><span class="line">tm=<span class="keyword">new</span> JPopupMenu();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;popname.length;i++) &#123;</span><br><span class="line">PopumenuItem[i]=<span class="keyword">new</span> JMenuItem(popname[i]);<span class="comment">//名字</span></span><br><span class="line">PopumenuItem[i].addActionListener(<span class="keyword">this</span>);</span><br><span class="line"><span class="keyword">if</span>(i&gt;<span class="number">0</span>)</span><br><span class="line">tm.addSeparator(); <span class="comment">//加分隔符</span></span><br><span class="line">tm.add(PopumenuItem[i]);<span class="comment">//加到弹出菜单上</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">t.addMouseListener(<span class="keyword">new</span> MouseAdapter() &#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">mouseReleased</span><span class="params">(MouseEvent e)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(e.isPopupTrigger())</span><br><span class="line">tm.show(e.getComponent(),e.getX(),e.getY());</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">String Tooltext[]= &#123;<span class="string">&quot;新建&quot;</span>,<span class="string">&quot;打开&quot;</span>,<span class="string">&quot;保存&quot;</span>,<span class="string">&quot;剪切&quot;</span>,<span class="string">&quot;复制&quot;</span>,<span class="string">&quot;粘贴&quot;</span>,<span class="string">&quot;字体&quot;</span>&#125;;</span><br><span class="line"><span class="comment">//工具栏设置</span></span><br><span class="line">tb=<span class="keyword">new</span> JToolBar();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;Toolname.length;i++) &#123;</span><br><span class="line">Toolbu[i]=<span class="keyword">new</span> JButton(Toolname[i]);<span class="comment">//按键加图片</span></span><br><span class="line">Toolbu[i].setToolTipText(Tooltext[i]);<span class="comment">//鼠标指向的时候</span></span><br><span class="line">Toolbu[i].setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));<span class="comment">//添加一个手的样子 提示用户可以点击</span></span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">3</span>||i==<span class="number">6</span>)</span><br><span class="line">tb.addSeparator(<span class="keyword">new</span> Dimension(<span class="number">20</span>,<span class="number">0</span>));<span class="comment">//分隔符</span></span><br><span class="line">tb.add(Toolbu[i]);<span class="comment">//加到工具栏</span></span><br><span class="line">Toolbu[i].addActionListener(<span class="keyword">this</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">f.add(tb,BorderLayout.NORTH);<span class="comment">//工具栏设置到北面</span></span><br><span class="line">tb.setVisible(<span class="keyword">true</span>);</span><br><span class="line">f.setSize(<span class="number">800</span>,<span class="number">600</span>);</span><br><span class="line">f.setLocationRelativeTo(<span class="keyword">null</span>);</span><br><span class="line">f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class="line">f.setResizable(<span class="keyword">true</span>);</span><br><span class="line">f.setVisible(<span class="keyword">true</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//关于记事本的弹出窗口</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CreatNewWindos</span> <span class="keyword">implements</span> <span class="title">ActionListener</span></span>&#123;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO 自动生成的方法存</span></span><br><span class="line">JFrame F=<span class="keyword">new</span> JFrame(<span class="string">&quot;关于记事本&quot;</span>);</span><br><span class="line">JLabel l=<span class="keyword">new</span> JLabel(<span class="string">&quot;开发者:18软件工程三班李振业&quot;</span>+<span class="string">&quot;  &quot;</span>+<span class="string">&quot;2019.10.26&quot;</span>);</span><br><span class="line">l.setFont(<span class="keyword">new</span> Font(<span class="string">&quot;楷体&quot;</span>,Font.BOLD,<span class="number">20</span>));</span><br><span class="line">l.setForeground(Color.GRAY);</span><br><span class="line">F.add(l);</span><br><span class="line">F.setSize(<span class="number">500</span>,<span class="number">300</span>);</span><br><span class="line">F.setLocationRelativeTo(<span class="keyword">null</span>);</span><br><span class="line">F.setVisible(<span class="keyword">true</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line"><span class="keyword">new</span> 记事本作业版();</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line"> Object event=e.getSource(); <span class="comment">//取按键变量</span></span><br><span class="line"> <span class="comment">/***新建***/</span><span class="comment">////////////////////////////</span></span><br><span class="line"> <span class="keyword">if</span>(event==filemenuItem[<span class="number">0</span>]||event==Toolbu[<span class="number">0</span>]) &#123;</span><br><span class="line"> t.setText(<span class="string">&quot;&quot;</span>); <span class="comment">//清空</span></span><br><span class="line"> f.setTitle(<span class="string">&quot;新建文本文档-记事本&quot;</span>);</span><br><span class="line"> &#125;</span><br><span class="line"><span class="comment">/***退出***/</span><span class="comment">////////////////////////////</span></span><br><span class="line"> <span class="keyword">if</span>(event==filemenuItem[<span class="number">7</span>]) &#123;</span><br><span class="line"> System.exit(<span class="number">0</span>);</span><br><span class="line"> &#125;</span><br><span class="line"><span class="comment">/***打开***/</span><span class="comment">////////////////////////////</span></span><br><span class="line"> <span class="keyword">if</span>(event==filemenuItem[<span class="number">2</span>]||event==Toolbu[<span class="number">1</span>]) &#123;</span><br><span class="line"> JFileChooser  filechoose=<span class="keyword">new</span> JFileChooser();<span class="comment">//弹出一个窗口</span></span><br><span class="line"> filechoose.setDialogTitle(<span class="string">&quot;文件打开&quot;</span>);<span class="comment">//显示弹开窗口的标题</span></span><br><span class="line"> filechoose.showOpenDialog(<span class="keyword">null</span>);<span class="comment">//ShowOpen 改变按钮的显示为打开</span></span><br><span class="line"> filechoose.setVisible(<span class="keyword">true</span>);</span><br><span class="line"> String open_filepath=filechoose.getSelectedFile().getAbsolutePath();</span><br><span class="line"><span class="comment">//获取此文件的绝对路径</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//读取文件</span></span><br><span class="line"> <span class="keyword">try</span> &#123;</span><br><span class="line">File open_file=<span class="keyword">new</span> File(open_filepath);<span class="comment">//根据路径创建文件</span></span><br><span class="line">FileReader fr=<span class="keyword">new</span> FileReader(open_file); <span class="comment">//读取流</span></span><br><span class="line">BufferedReader br=<span class="keyword">new</span> BufferedReader(fr); <span class="comment">//缓存流</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> byt[]=<span class="keyword">new</span> <span class="keyword">char</span>[(<span class="keyword">int</span>)open_file.length()]; <span class="comment">//转为字节流</span></span><br><span class="line"><span class="keyword">int</span> content=br.read(byt);  <span class="comment">//读取内容</span></span><br><span class="line">f.setTitle(open_file.getName());  <span class="comment">//窗口改变名字</span></span><br><span class="line">t.append(<span class="keyword">new</span> String(byt,<span class="number">0</span>,content));<span class="comment">//文本域append追加显示文字</span></span><br><span class="line">fr.close();<span class="comment">//关闭流</span></span><br><span class="line"> &#125;<span class="keyword">catch</span>(Exception e1) &#123;</span><br><span class="line"> System.out.println(<span class="string">&quot;没有打开文件&quot;</span>);</span><br><span class="line"> &#125;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="comment">/***保存**/</span><span class="comment">////////////////////////////</span></span><br><span class="line"> <span class="keyword">if</span>(event==filemenuItem[<span class="number">3</span>]||event==Toolbu[<span class="number">2</span>]) &#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line"> JFileChooser  filechoose=<span class="keyword">new</span> JFileChooser();<span class="comment">//弹出一个窗口</span></span><br><span class="line"> filechoose.setDialogTitle(<span class="string">&quot;另存为&quot;</span>);<span class="comment">//显示弹开窗口的标题</span></span><br><span class="line"> filechoose.showSaveDialog(<span class="keyword">null</span>);  <span class="comment">//ShowSava 改变按钮的显示为保存</span></span><br><span class="line"> filechoose.setVisible(<span class="keyword">true</span>);</span><br><span class="line"> String save_filepath=filechoose.getSelectedFile().getAbsolutePath();</span><br><span class="line"><span class="comment">//获取此文件的绝对路径</span></span><br><span class="line">  </span><br><span class="line">  File save_file=<span class="keyword">new</span> File(save_filepath);</span><br><span class="line">  FileWriter fw=<span class="keyword">new</span> FileWriter(save_file);<span class="comment">//写入流</span></span><br><span class="line">  BufferedWriter bw=<span class="keyword">new</span> BufferedWriter(fw); <span class="comment">//缓存流</span></span><br><span class="line">  bw.write(t.getText());<span class="comment">//文本域的内容写入文件</span></span><br><span class="line">  bw.close();</span><br><span class="line">  fw.close();</span><br><span class="line">&#125; <span class="keyword">catch</span> (IOException e1) &#123;</span><br><span class="line"><span class="comment">// TODO 自动生成的 catch 块</span></span><br><span class="line">e1.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"> &#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/***全选**/</span><span class="comment">////////////////////////////</span></span><br><span class="line"> <span class="keyword">if</span>(event==editmenuItem[<span class="number">11</span>]||event==PopumenuItem[<span class="number">0</span>]) &#123;</span><br><span class="line"> t.selectAll();<span class="comment">//选定指定的开始和结束位置之间的文本。</span></span><br><span class="line"> &#125;</span><br><span class="line"> <span class="comment">/***时间日期**/</span><span class="comment">////////////////////////////</span></span><br><span class="line"> <span class="keyword">if</span>(event==editmenuItem[<span class="number">12</span>]) &#123;</span><br><span class="line"> Date dt=<span class="keyword">new</span> Date();</span><br><span class="line">SimpleDateFormat time=<span class="keyword">new</span> SimpleDateFormat(<span class="string">&quot;yyyy-MM-dd HH:mm:ss E&quot;</span>);</span><br><span class="line">t.append(time.format(dt));<span class="comment">//文本域append追加显示文字</span></span><br><span class="line"> &#125;</span><br><span class="line"> <span class="comment">/***字体**/</span><span class="comment">////////////////////////////</span></span><br><span class="line"> <span class="comment">//黑体</span></span><br><span class="line"> <span class="keyword">if</span>(event==fontbody[<span class="number">0</span>]) &#123;</span><br><span class="line">  Font old_font=t.getFont();</span><br><span class="line">  Font new_font=<span class="keyword">new</span> Font(<span class="string">&quot;黑体&quot;</span>,old_font.getStyle(),old_font.getSize());</span><br><span class="line">  t.setFont(new_font);</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="comment">//宋体</span></span><br><span class="line"> <span class="keyword">if</span>(event==fontbody[<span class="number">1</span>]) &#123;</span><br><span class="line"> Font old_font=t.getFont();</span><br><span class="line"> Font new_font=<span class="keyword">new</span> Font(<span class="string">&quot;宋体&quot;</span>,old_font.getStyle(),old_font.getSize());</span><br><span class="line"> t.setFont(new_font);</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="comment">//楷体</span></span><br><span class="line"> <span class="keyword">if</span>(event==fontbody[<span class="number">2</span>]) &#123;</span><br><span class="line"> Font old_font=t.getFont();</span><br><span class="line"> Font new_font=<span class="keyword">new</span> Font(<span class="string">&quot;楷体&quot;</span>,old_font.getStyle(),old_font.getSize());</span><br><span class="line"> t.setFont(new_font);</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="comment">//隶书</span></span><br><span class="line"> <span class="keyword">if</span>(event==fontbody[<span class="number">3</span>]) &#123;</span><br><span class="line"> Font old_font=t.getFont();</span><br><span class="line"> Font new_font=<span class="keyword">new</span> Font(<span class="string">&quot;隶书&quot;</span>,old_font.getStyle(),old_font.getSize());</span><br><span class="line"> t.setFont(new_font);</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="comment">//字体窗口</span></span><br><span class="line"> <span class="keyword">if</span>(event==Toolbu[<span class="number">6</span>]) &#123;</span><br><span class="line"> <span class="keyword">new</span> 字体窗口();</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/26/4897c94084ba1608179813a5c5aab115.png"></p><h2 id="自动弹窗"><a href="#自动弹窗" class="headerlink" title="自动弹窗"></a>自动弹窗</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> 自动弹窗;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionListener;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="comment">/*1.JOptionPane.showMessageDialog(组件, “信息的弹框”);</span></span><br><span class="line"><span class="comment"> * showMessageDialog(Component parentComponent, Object message, String title, int messageType)</span></span><br><span class="line"><span class="comment"> *2. JOptionPane.showMessageDialog(null, “信息的弹框”, “窗口名字”, 默认或者风格);</span></span><br><span class="line"><span class="comment"> *默认或者风格种类: </span></span><br><span class="line"><span class="comment"> *1.参数为1  默认</span></span><br><span class="line"><span class="comment"> *2.参数为-1  无提示类型(图标)</span></span><br><span class="line"><span class="comment"> *3.参数为0   含义为错误(出现错误图标)</span></span><br><span class="line"><span class="comment"> *4.参数为2   含义为警告(出现感叹号图标)</span></span><br><span class="line"><span class="comment"> *5.参数为3  含义为问题(出现问题图标)</span></span><br><span class="line"><span class="comment"> *3.showMessageDialog(Component parentComponent, Object message, String title, int messageType, Icon icon)</span></span><br><span class="line"><span class="comment"> *定义图标，加载图片的图标，可以帮助用户识别正在显示消息的种类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">showMessageDialog</span> <span class="keyword">implements</span> <span class="title">ActionListener</span> </span>&#123;</span><br><span class="line">JFrame f;</span><br><span class="line">JPanel p;</span><br><span class="line">ImageIcon img=<span class="keyword">new</span> ImageIcon(<span class="string">&quot;Image/qq图标.jpg&quot;</span>);</span><br><span class="line">JButton b1,b2,b3,b4,b5,b6;<span class="comment">//默认  不带图标 警告 错误 问题 图标</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">showMessageDialog</span><span class="params">()</span> </span>&#123;</span><br><span class="line">f=<span class="keyword">new</span> JFrame(<span class="string">&quot;测试窗口&quot;</span>);</span><br><span class="line">b1=<span class="keyword">new</span> JButton(<span class="string">&quot;默认&quot;</span>);</span><br><span class="line">b1.addActionListener(<span class="keyword">this</span>);</span><br><span class="line">b2=<span class="keyword">new</span> JButton(<span class="string">&quot;无图标&quot;</span>);</span><br><span class="line">b2.addActionListener(<span class="keyword">this</span>);</span><br><span class="line">b3=<span class="keyword">new</span> JButton(<span class="string">&quot;错误&quot;</span>);</span><br><span class="line">b3.addActionListener(<span class="keyword">this</span>);</span><br><span class="line">b4=<span class="keyword">new</span> JButton(<span class="string">&quot;警告&quot;</span>);</span><br><span class="line">b4.addActionListener(<span class="keyword">this</span>);</span><br><span class="line">b5=<span class="keyword">new</span> JButton(<span class="string">&quot;问题&quot;</span>);</span><br><span class="line">b5.addActionListener(<span class="keyword">this</span>);</span><br><span class="line">b6=<span class="keyword">new</span> JButton(<span class="string">&quot;图标&quot;</span>);</span><br><span class="line">b6.addActionListener(<span class="keyword">this</span>);</span><br><span class="line">p=<span class="keyword">new</span> JPanel(<span class="keyword">new</span> GridLayout(<span class="number">2</span>,<span class="number">3</span>));</span><br><span class="line">p.add(b1);</span><br><span class="line">p.add(b2);</span><br><span class="line">p.add(b3);</span><br><span class="line">p.add(b4);</span><br><span class="line">p.add(b5);</span><br><span class="line">p.add(b6);</span><br><span class="line">f.add(p);</span><br><span class="line">f.pack();</span><br><span class="line">f.setLocationRelativeTo(<span class="keyword">null</span>);</span><br><span class="line">f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class="line">f.setVisible(<span class="keyword">true</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line">    <span class="keyword">new</span> showMessageDialog();</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line">String event=e.getActionCommand();</span><br><span class="line"><span class="keyword">if</span>(event.equals(<span class="string">&quot;默认&quot;</span>)) &#123;</span><br><span class="line">JOptionPane.showMessageDialog(p, <span class="string">&quot;默认&quot;</span>,<span class="string">&quot;提示窗口&quot;</span>,<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(event.equals(<span class="string">&quot;无图标&quot;</span>)) &#123;</span><br><span class="line">JOptionPane.showMessageDialog(p,<span class="string">&quot;无图标&quot;</span>,<span class="string">&quot;提示窗口&quot;</span>,-<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(event.equals(<span class="string">&quot;错误&quot;</span>)) &#123;</span><br><span class="line">JOptionPane.showMessageDialog(p,<span class="string">&quot;错误&quot;</span>,<span class="string">&quot;提示窗口&quot;</span>,<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(event.equals(<span class="string">&quot;警告&quot;</span>)) &#123;</span><br><span class="line">JOptionPane.showMessageDialog(p, <span class="string">&quot;警告&quot;</span>,<span class="string">&quot;提示窗口&quot;</span>,<span class="number">2</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(event.equals(<span class="string">&quot;问题&quot;</span>)) &#123;</span><br><span class="line">JOptionPane.showMessageDialog(p, <span class="string">&quot;问题&quot;</span>,<span class="string">&quot;提示窗口&quot;</span>,<span class="number">3</span>);</span><br><span class="line">&#125;<span class="keyword">if</span>(event.equals(<span class="string">&quot;图标&quot;</span>)) &#123;</span><br><span class="line">JOptionPane.showMessageDialog(p, <span class="string">&quot;问题&quot;</span>,<span class="string">&quot;提示窗口&quot;</span>,<span class="number">3</span>,img);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="文件选择器"><a href="#文件选择器" class="headerlink" title="文件选择器"></a>文件选择器</h2><h3 id="文件选择对话框"><a href="#文件选择对话框" class="headerlink" title="文件选择对话框"></a>文件选择对话框</h3><p><code>JFileChooser</code>类提供了一个供用户<code>选择文件</code>的对话框。利用该类创建文件选择对话框以及获取用户选择文件的基本步骤如下：<br>（1）创建一个JFileChooser类的对象。<br>（2）默认情况下每次只能选择一个文件，如果希望允许同时选择多个文件，可以通过调用方法<code>setMultiSelectionEnabled(boolean b)</code>设置，将入口参数设为true即表示允许多选。<br>（3）默认情况下只允许选择文件，如果希望允许选择文件夹，可以通过调用方法<code>setFileSelection- Mode(int mode)</code>设置，入口参数可选的静态常量有<code>FILES_ONLY</code>（只允许选择文件）、<code>DIRECTORIES_ ONLY</code>（只允许选择路径）和<code>FILES_AND_DIRECTORIES</code>（均可选择）。<br>（4）如果只希望在对话框中列出指定类型的文件，可以调用<code>setFileFilter(FileFilter filter)</code>方法设置文件过滤器。<br>（5）设置完成后调用<code>showOpenDialog(Component parent)</code>方法显示对话框，该方法将返回一个int型值，用来判断用户是否选择了文件或路径。<br>（6）如果用户选择了文件或路径，可以通过方法<code>getSelectedFile()</code>或<code>getSelectedFiles()</code>获得，方法getSelectedFile()返回的是File对象，方法getSelectedFiles()返回的是File型数组。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> SWng_Menu;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionListener;</span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> 文件选择器 </span>&#123;</span><br><span class="line">JFrame f;</span><br><span class="line">JLabel l;</span><br><span class="line">JButton b;</span><br><span class="line">JTextField t;</span><br><span class="line">JPanel p;</span><br><span class="line"><span class="keyword">public</span> 文件选择器() &#123;</span><br><span class="line">f=<span class="keyword">new</span> JFrame(<span class="string">&quot;文件选择器&quot;</span>);</span><br><span class="line">l=<span class="keyword">new</span> JLabel(<span class="string">&quot;文件:&quot;</span>);</span><br><span class="line">b=<span class="keyword">new</span> JButton(<span class="string">&quot;打开&quot;</span>);</span><br><span class="line">b.addActionListener(<span class="keyword">new</span> ActionListener() &#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line">JFileChooser wjchoose=<span class="keyword">new</span> JFileChooser();<span class="comment">//创建文件选择器</span></span><br><span class="line"><span class="comment">//显示文件选择对话框</span></span><br><span class="line"><span class="keyword">int</span> i=wjchoose.showOpenDialog(f);</span><br><span class="line"><span class="comment">//判断用户单击的是否为“打开”按钮</span></span><br><span class="line"><span class="keyword">if</span>(i==JFileChooser.APPROVE_OPTION) &#123;</span><br><span class="line"><span class="comment">//获取选中的文件对象</span></span><br><span class="line">File selected=wjchoose.getSelectedFile();</span><br><span class="line"><span class="comment">//显示选中文件的名称</span></span><br><span class="line">t.setText(selected.getName());</span><br><span class="line"><span class="comment">//t.setText(selected.getAbsolutePath());</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line">t=<span class="keyword">new</span> JTextField(<span class="number">20</span>);</span><br><span class="line">p=<span class="keyword">new</span> JPanel();</span><br><span class="line">p.add(l);</span><br><span class="line">p.add(t);</span><br><span class="line">p.add(b);</span><br><span class="line">f.add(p);</span><br><span class="line">f.setSize(<span class="number">400</span>,<span class="number">100</span>);</span><br><span class="line">f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class="line">f.setLocation(<span class="number">200</span>, <span class="number">200</span>);</span><br><span class="line">f.setResizable(<span class="keyword">false</span>);</span><br><span class="line">f.setVisible(<span class="keyword">true</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line"><span class="keyword">new</span> 文件选择器();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">![](https:<span class="comment">//cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/26/aa5cd174f9d7e46ed9e86f8d280df984.png)</span></span><br></pre></td></tr></table></figure><h3 id="文件过滤器"><a href="#文件过滤器" class="headerlink" title="文件过滤器"></a>文件过滤器</h3><p>如果只希望在对话框中列出指定类型的文件，可以调用<code>setFileFilter(FileFilter filter)</code>方法设置文件过滤器。</p><p>javax.swing.filechooser.FileFilter类是一个<code>抽象类</code>，该类的具体定义如下：<br>public abstract class FileFilter {<br>    public abstract boolean <code>accept</code>(File f);<br>    public abstract String <code>getDescription</code>();<br>}</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> SWng_Menu;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.MouseAdapter;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.MouseEvent;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> javax.swing.filechooser.FileFilter;</span><br><span class="line"><span class="keyword">import</span> javax.swing.filechooser.FileNameExtensionFilter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> 文件选择过滤器 </span>&#123;</span><br><span class="line">JFrame f;</span><br><span class="line">JLabel l;</span><br><span class="line"><span class="keyword">public</span> 文件选择过滤器() &#123;</span><br><span class="line">f=<span class="keyword">new</span> JFrame(<span class="string">&quot;文件选择过滤器&quot;</span>);</span><br><span class="line">l=<span class="keyword">new</span> JLabel(<span class="string">&quot;&lt;双击打开照片&gt;&quot;</span>,SwingConstants.CENTER);</span><br><span class="line">l.addMouseListener(<span class="keyword">new</span> MouseAdapter() &#123;</span><br><span class="line">JFileChooser wjchoose;</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//创建文件选择对话框</span></span><br><span class="line">wjchoose=<span class="keyword">new</span> JFileChooser();</span><br><span class="line"><span class="comment">//设置文件过滤器，只列出JPG或GIF格式的图片</span></span><br><span class="line">FileFilter file=<span class="keyword">new</span> FileNameExtensionFilter(<span class="string">&quot;图像文件(JPG/GIF)&quot;</span>,<span class="string">&quot;JPG&quot;</span>,<span class="string">&quot;JPEG&quot;</span>,<span class="string">&quot;GIF&quot;</span>);</span><br><span class="line">wjchoose.setFileFilter(file);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">mouseClicked</span><span class="params">(MouseEvent e)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(e.getClickCount()==<span class="number">2</span>) &#123;<span class="comment">//点击次数</span></span><br><span class="line"><span class="comment">//显示文件选择对话框</span></span><br><span class="line"><span class="keyword">int</span> i=wjchoose.showOpenDialog(f);</span><br><span class="line"><span class="comment">//判断用户点击的是否为“打开”按钮</span></span><br><span class="line"><span class="keyword">if</span>(i==JFileChooser.APPROVE_OPTION) &#123;</span><br><span class="line"><span class="comment">//获取选中的图片对象</span></span><br><span class="line">File selectedFile=wjchoose.getSelectedFile();</span><br><span class="line">ImageIcon img=<span class="keyword">new</span> ImageIcon(selectedFile.getAbsolutePath());  <span class="comment">//传入图片路径创建图片对象</span></span><br><span class="line">l.setIcon(img);</span><br><span class="line">f.setSize(img.getIconWidth(),img.getIconHeight());<span class="comment">//图片的大小显示窗口大小</span></span><br><span class="line">l.setText(<span class="string">&quot;&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">f.add(l);</span><br><span class="line">f.setSize(<span class="number">300</span>,<span class="number">400</span>);</span><br><span class="line">f.setLocation(<span class="number">200</span>, <span class="number">200</span>);</span><br><span class="line">f.setResizable(<span class="keyword">false</span>);</span><br><span class="line">f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class="line">f.setVisible(<span class="keyword">true</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line"><span class="keyword">new</span> 文件选择过滤器();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/26/eef8a9afcfc97a8209e6d7323fdad6cd.png"></p>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java👉反射机制</title>
      <link href="2021/01/05/%E5%90%8E%E7%AB%AF/Java/Java_%E5%8F%8D%E5%B0%84%E6%9C%BA%E5%88%B6/"/>
      <url>2021/01/05/%E5%90%8E%E7%AB%AF/Java/Java_%E5%8F%8D%E5%B0%84%E6%9C%BA%E5%88%B6/</url>
      
        <content type="html"><![CDATA[<h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><p>JAVA反射机制是在运行状态中，对于任意一个类，都能够知道这个类的所有属性和方法；对于任意一个对象，都能够调用它的任意一个方法和属性；这种动态获取的信息以及动态调用对象的方法的功能称为java语言的反射机制。</p><div class="note success flat"><p>反射就是把java类中的各种成分映射成一个个的Java对象</p></div><p>为什么引入反射呢<br>Java中编译类型有两种：</p><ul><li>静态编译：在编译时确定类型，绑定对象即通过。</li><li>动态编译：运行时确定类型，绑定对象。动态编译最大限度地发挥了Java的灵活性，体现了多态的应用，可以减低类之间的耦合性。</li></ul><p>Java反射是Java被视为动态（或准动态）语言的一个关键性质。这个机制允许程序在运行时透过Reflection APIs取得任何一个已知名称的class的内部信息，包括其modifiers（诸如public、static等）、superclass（例如Object）、实现之interfaces（例如Cloneable），也包括fields和methods的所有信息，并可于运行时改变fields内容或唤起methods。</p><p>Reflection可以在运行时加载、探知、使用编译期间完全未知的classes。即Java程序可以加载一个运行时才得知名称的class，获取其完整构造，并生成其对象实体、或对其fields设值、或唤起其methods。</p><p>反射（reflection）允许静态语言在运行时（runtime）检查、修改程序的结构与行为。<br>在静态语言中，使用一个变量时，必须知道它的类型。在Java中，变量的类型信息在编译时都保存到了class文件中，这样在运行时才能保证准确无误；换句话说，程序在运行时的行为都是固定的。如果想在运行时改变，就需要反射这东西了。</p><p>实现Java反射机制的类都位于java.lang.reflect包中：</p><ul><li>Class类：代表一个类</li><li>Field类：代表类的成员变量（类的属性）</li><li>Method类：代表类的方法</li><li>Constructor类：代表类的构造方法</li><li>Array类：提供了动态创建数组，以及访问数组的元素的静态方法</li></ul><p>一句话概括就是使用<strong>反射可以赋予jvm动态编译的能力，否则类的元数据信息只能用静态编译的方式实现</strong>，例如热加载，Tomcat的classloader等等都没法支持。</p><h1 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Apple</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> price;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getPrice</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> price;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPrice</span><span class="params">(<span class="keyword">int</span> price)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.price = price;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        <span class="comment">//正常的调用</span></span><br><span class="line">        Apple apple = <span class="keyword">new</span> Apple();</span><br><span class="line">        apple.setPrice(<span class="number">5</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;Apple Price:&quot;</span> + apple.getPrice());</span><br><span class="line">        <span class="comment">//使用反射调用</span></span><br><span class="line">        Class clz = Class.forName(<span class="string">&quot;com.chenshuyi.api.Apple&quot;</span>);</span><br><span class="line">        Method setPriceMethod = clz.getMethod(<span class="string">&quot;setPrice&quot;</span>, <span class="keyword">int</span>.class);</span><br><span class="line">        Constructor appleConstructor = clz.getConstructor();</span><br><span class="line">        Object appleObj = appleConstructor.newInstance();</span><br><span class="line">        setPriceMethod.invoke(appleObj, <span class="number">14</span>);</span><br><span class="line">        Method getPriceMethod = clz.getMethod(<span class="string">&quot;getPrice&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;Apple Price:&quot;</span> + getPriceMethod.invoke(appleObj));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">Apple Price:5</span></span><br><span class="line"><span class="comment">Apple Price:14</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><p>从这个简单的例子可以看出，一般情况下我们使用反射获取一个对象的步骤：</p><ol><li>获取类的 Class 对象实例<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Class clz = Class.forName(<span class="string">&quot;com.zhenai.api.Apple&quot;</span>);</span><br></pre></td></tr></table></figure></li><li>根据 Class 对象实例获取 Constructor 对象<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Constructor appleConstructor = clz.getConstructor();</span><br></pre></td></tr></table></figure></li><li> 使用 Constructor 对象的 newInstance 方法获取反射类对象<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Object appleObj = appleConstructor.newInstance();</span><br></pre></td></tr></table></figure></li></ol><p>而如果要调用某一个方法，则需要经过下面的步骤：</p><ol><li>获取方法的 Method 对象<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Method setPriceMethod = clz.getMethod(<span class="string">&quot;setPrice&quot;</span>, <span class="keyword">int</span>.class);</span><br></pre></td></tr></table></figure></li><li>利用 invoke 方法调用方法<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">setPriceMethod.invoke(appleObj, <span class="number">14</span>);</span><br></pre></td></tr></table></figure></li></ol><h1 id="常用API"><a href="#常用API" class="headerlink" title="常用API"></a>常用API</h1><h2 id="获取反射中的Class对象"><a href="#获取反射中的Class对象" class="headerlink" title="获取反射中的Class对象"></a>获取反射中的Class对象</h2><p>在反射中，要获取一个类或调用一个类的方法，我们首先需要获取到该类的 Class 对象。</p><p>在 Java API 中，获取 Class 类对象有三种方法：</p><p>第一种，使用 Class.forName 静态方法。当你知道该类的全路径名时，你可以使用该方法获取 Class 类对象。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Class clz = Class.forName(<span class="string">&quot;java.lang.String&quot;</span>);</span><br></pre></td></tr></table></figure><p>第二种，使用 .class 方法。<br>这种方法只适合在编译前就知道操作的 Class。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Class clz = String.class;</span><br></pre></td></tr></table></figure><p>第三种，使用类对象的 getClass() 方法。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">String str = <span class="keyword">new</span> String(<span class="string">&quot;Hello&quot;</span>);</span><br><span class="line">Class clz = str.getClass();</span><br></pre></td></tr></table></figure><h2 id="通过反射创建类对象"><a href="#通过反射创建类对象" class="headerlink" title="通过反射创建类对象"></a>通过反射创建类对象</h2><p>通过反射创建类对象主要有两种方式：通过 Class 对象的 newInstance() 方法、通过 Constructor 对象的 newInstance() 方法。</p><p>第一种：通过 Class 对象的 newInstance() 方法。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Class clz = Apple.class;</span><br><span class="line">Apple apple = (Apple)clz.newInstance();</span><br></pre></td></tr></table></figure><p>第二种：通过 Constructor 对象的 newInstance() 方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Class clz = Apple.class;</span><br><span class="line">Constructor constructor = clz.getConstructor();</span><br><span class="line">Apple apple = (Apple)constructor.newInstance();</span><br></pre></td></tr></table></figure><p>通过 Constructor 对象创建类对象可以选择特定构造方法，而通过 Class 对象则只能使用默认的无参数构造方法。下面的代码就调用了一个有参数的构造方法进行了类对象的初始化。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Class clz = Apple.class;</span><br><span class="line">Constructor constructor = clz.getConstructor(String.class, <span class="keyword">int</span>.class);</span><br><span class="line">Apple apple = (Apple)constructor.newInstance(<span class="string">&quot;红富士&quot;</span>, <span class="number">15</span>);</span><br></pre></td></tr></table></figure><h2 id="通过反射获取类属性、方法、构造器"><a href="#通过反射获取类属性、方法、构造器" class="headerlink" title="通过反射获取类属性、方法、构造器"></a>通过反射获取类属性、方法、构造器</h2><p>我们通过 Class 对象的 getFields() 方法可以获取 Class 类的属性，但无法获取私有属性。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Class clz = Apple.class;</span><br><span class="line">Field[] fields = clz.getFields();</span><br><span class="line"><span class="keyword">for</span> (Field field : fields) &#123;</span><br><span class="line">    System.out.println(field.getName());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出结果是：</p><p>price</p><p>而如果使用 Class 对象的 getDeclaredFields() 方法则可以获取包括私有属性在内的所有属性：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Class clz = Apple.class;</span><br><span class="line">Field[] fields = clz.getDeclaredFields();</span><br><span class="line"><span class="keyword">for</span> (Field field : fields) &#123;</span><br><span class="line">    System.out.println(field.getName());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出结果是：</p><p>name<br>price</p><p>与获取类属性一样，当我们去获取类方法、类构造器时，如果要获取私有方法或私有构造器，则必须使用有 declared 关键字的方法。</p>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java👉线程、线程通信</title>
      <link href="2021/01/05/%E5%90%8E%E7%AB%AF/Java/Java_%E7%BA%BF%E7%A8%8B%E3%80%81%E7%BA%BF%E7%A8%8B%E9%80%9A%E4%BF%A1/"/>
      <url>2021/01/05/%E5%90%8E%E7%AB%AF/Java/Java_%E7%BA%BF%E7%A8%8B%E3%80%81%E7%BA%BF%E7%A8%8B%E9%80%9A%E4%BF%A1/</url>
      
        <content type="html"><![CDATA[<h1 id="线程"><a href="#线程" class="headerlink" title="线程"></a>线程</h1><h2 id="相关概念"><a href="#相关概念" class="headerlink" title="相关概念"></a>相关概念</h2><ul><li><strong><em>程序（<code>Program</code>）</em></strong><br>是为实现特定目标或解决特定问题而用计算机语言编写的命令序列的集合。</li><li><strong><em>进程（<code>Process</code>）</em></strong><br>是程序关于某个数据集合上的一次运行活动（对应一个exe），是独立运行的程序(正在运行的程序)；<br>对应了从代码加载、执行至执行完毕的一个完整过程；<br>是系统进行<code>资源分配和调度的一个独立单位</code>。</li><li><strong><em>线程（<code>Thread</code>）</em></strong><br>是进程的一个<code>实体</code>，<code>CPU调度和分派的基本单位</code>，是比进程更小的、能独立运行的基本单位。<br>一个应用程序中有多条并发执行的线索，每条线索都被称为一个线程。各线程交替执行，彼此间可以通信。</li><li><strong><em>并发执行</em></strong>：多个程序块宏观上<code>同时运行</code>的现象。</li><li><strong><em>单线程程序</em></strong><br>程序未派生出多线程，只有一个线程；<br>程序代码按照调用顺序依次往下执行，没有程序代码交替运行的现象。</li><li><strong><em>多线程程序</em></strong><br>程序派生出了多线程；<br>多段程序代码交替运行的现象，每段程序对应一个线程，各线程相互独立，并发执行。</li><li><strong><em>主线程</em></strong></li></ul><ol><li>Java程序启动时，自动产生一个进程，默认创建一个线程，该线程通常称为程序的主线程，应用来运行main()方法中的代码。</li><li>每个java程序都至少有一个线程：主线程；</li><li>重要性<br>①主线程用来产生其他子线程；<br>②主线程执行各种关闭动作，通常最后完成执行。</li></ol><hr><p><strong><em>线程与进程的关系</em></strong></p><ul><li>一个线程只能属于一个进程，而一个进程可以有多个线程，但至少有一个线程。</li><li>操作系统把资源分配给进程，而同一进程的所有线程共享该进程的所有资源。</li><li>进程是拥有资源的基本单位，而线程是作为CPU调度和分配的基本单位。</li></ul><h2 id="Thread类方法"><a href="#Thread类方法" class="headerlink" title="Thread类方法"></a>Thread类方法</h2><table><thead><tr><th>构造方法</th><th>说明</th></tr></thead><tbody><tr><td>pubilc Thread()</td><td>创建新的Thread对象</td></tr><tr><td>public Thread(String)</td><td>创建指定名称的线程</td></tr><tr><td>public Thread(Runnable)</td><td>创建以Runnable接口子类对象为参数的线程</td></tr><tr><td>public Thread(Runnable,String)</td><td>创建以Runnable接口子类对象为参数的线程，并给线程命名</td></tr></tbody></table><table><thead><tr><th>方法</th><th>用途</th></tr></thead><tbody><tr><td>static Thread currentThread()</td><td>返回正在执行的线程</td></tr><tr><td>final String getName()</td><td>返回线程的名称</td></tr><tr><td>final void setName(String)</td><td>设置线程的名称</td></tr><tr><td>final int getPriority()</td><td>设置名称的优先级</td></tr><tr><td>void setPriority(int)</td><td>设置线程的优先级</td></tr><tr><td>static void <code>sleep</code>(long millis)</td><td>将线程挂起一段时间</td></tr><tr><td>void <code>start</code>()</td><td>启动线程，开始执行线程</td></tr><tr><td>void <code>run</code>()</td><td>运行线程</td></tr><tr><td>static void <code>yield</code>()</td><td>自动放弃CPU，以便其他线程能够运行，自己到队列的最后等待</td></tr><tr><td>final void <code>join</code>()</td><td>等待被join的线程执行完毕</td></tr><tr><td>final void <code>wait</code>()</td><td>等待其他的线程的notify，获得notify信号后继续执行后面的代码</td></tr><tr><td>final void <code>notify</code>()</td><td>当前线程被阻塞，直到被另一个线程唤醒，然后当前线程继续执行上次未完成操作</td></tr><tr><td>boolean isInterrupted()</td><td>返回线程是否被中断</td></tr><tr><td>static int activeCount()</td><td>返回激活的线程数</td></tr></tbody></table><h2 id="创建线程"><a href="#创建线程" class="headerlink" title="创建线程"></a>创建线程</h2><p>线程运行的代码由<code>run()</code>方法实现。</p><ul><li>方法一：继承<code>Thread</code>类，重写run()方法。</li><li>方法二：实现<code>Runnable</code>接口，重写run()方法</li></ul><blockquote><p>说明：实现Runnable接口方式更优。java类只参单一继承，但能实现多个接口。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">方法一：继承Thread类，复写run方法</span><br><span class="line"></span><br><span class="line"><span class="number">1</span>)   定义线程最简单的办法：定义类继承Thread。</span><br><span class="line">例：<span class="class"><span class="keyword">class</span> <span class="title">Mythread</span> <span class="keyword">extends</span> <span class="title">Thread</span></span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span>&#123;</span><br><span class="line">……. <span class="comment">//要在线程中执行的代码;</span></span><br><span class="line">     &#125;</span><br><span class="line">&#125;</span><br><span class="line">(<span class="number">2</span>)   启动新线程：调用start()方法</span><br><span class="line">例：Mythread t=<span class="keyword">new</span> Mythread();</span><br><span class="line">t.start();</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">方法二：实现Runnable接口，复写run方法</span><br><span class="line">(<span class="number">1</span>) 定义实现Runnable接口的类，实现run()方法</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">myThread</span> <span class="keyword">implements</span> <span class="title">Runnable</span> </span>&#123;</span><br><span class="line">       <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123; <span class="comment">/*实现该方法*/</span>  &#125;</span><br><span class="line">&#125;</span><br><span class="line">(<span class="number">2</span>) 以Runnable对象为参数创建线程。</span><br><span class="line">① 以Runnable对象传给Thread的构造函数，创建独立的Thread对象；</span><br><span class="line">② 调用线程的start( )方法启动线程。</span><br><span class="line">例：Thread t=<span class="keyword">new</span> Thread(<span class="keyword">new</span> myThread());</span><br><span class="line">t.start(); </span><br></pre></td></tr></table></figure><h2 id="线程生命周期"><a href="#线程生命周期" class="headerlink" title="线程生命周期"></a>线程生命周期</h2><ul><li><p><strong><em><code>新建</code></em></strong>：<code>新创建</code>的线程对象处于新建 状态，不能运行。</p></li><li><p><strong><em><code> 就绪(可运行)</code></em></strong><br>线程对象调用<code>start()</code>方法进入<code>就绪状态</code>，进入<code>线程队列</code>排队，此时具备了<code>运行条件</code>，一旦轮到CPU，就可脱离创建它的主线程独立开始自己的生命周期。</p></li><li><p><strong><em><code>运行</code></em></strong><br>就绪线程<code>获得CPU使用权</code>，进入<code>运行状态</code>，自动调用<code>run()</code>方法，从第一句代码开始运行。</p><blockquote><p>一旦线程进入可执行状态，它就会在就绪与运行状态下转换，同时也有可能进入等待、休眠、阻塞、或死亡状态：</p></blockquote></li><li><p><strong><em><code>等待</code></em></strong><br>当处于运行状态的线程调用Thread类中的<code>wait</code>方法时，该线程便进入<code>等待状态</code>。<br>进入等待状态的线程必须调用Thread类中的<code>notify</code>方法才能被<code>唤醒</code>，而<code>notifyAll</code>方法是将所有处于等待状态的线程唤醒。</p></li><li><p><strong><em><code>休眠</code></em></strong><br>当线程调用Thread类中的<code>sleep</code>方法时，则会进入<code>休眠状态</code>。</p></li><li><p><strong><em><code>阻塞(中断)</code></em></strong><br>正在执行的线程如果发出输入输出请求，则不能继续执行，则进入<code>阻塞状态</code>。<br>只有引起阻塞的原因消失（如，输入输出结束），线程才可以继续进入就绪状态等待CPU处理。</p></li><li><p> <strong><em><code>死亡</code></em></strong><br>线程完成了全部工作（即执行完了run()方法）、或提前被强制终止了，就进入死亡状态。<br>处于死亡状态的线程<code>不具有继续执行的能力</code>。</p></li></ul><h2 id="线程的调度及优先级"><a href="#线程的调度及优先级" class="headerlink" title="线程的调度及优先级"></a>线程的调度及优先级</h2><p><code>线程的调度</code>：<br>Java<code>虚拟机</code>为程序中的每个线程<code>分配CPU使用权</code>的特定机制。</p><hr><p><code>线程的调度模型</code>:</p><ul><li>分时调度模型</li></ul><p>所有线程<code>轮流获得CPU使用权</code>，<code>平均分配</code>每个线程占用的CPU时间片。</p><ul><li>抢占式调度模型</li></ul><p>让<code>可运行队列</code>中<code>优先级高</code>的线程<code>优先占用CPU</code>，<code>优先级相同</code>的线程<code>随机选择</code>一个线程占用CPU。</p><hr><p>线程优先级(priority)：</p><ul><li><p>作用<br>将<code>线程的重要程度</code>告诉<code>线程调度机制</code>。</p></li><li><p>Thread类中用常量定义了java线程的优先级<br>① <code>NORM</code>_PRIORITY：值为5<br>② <code>MAX</code>_PRIORITY：值为10<br>③ <code>MIN</code>_PRIORITY：值为1 。</p></li><li><p>与优先级相关的方法：<br>① final void <code>setPriority</code> ( int newp)<br><code>修改</code>线程的<code>当前优先级</code><br>②final int <code>getPriority</code> ()<br><code>返回</code>线程的<code>优先级</code></p></li></ul><h2 id="线程的操作"><a href="#线程的操作" class="headerlink" title="线程的操作"></a>线程的操作</h2><h3 id="sleep"><a href="#sleep" class="headerlink" title="sleep()"></a>sleep()</h3><ul><li>格式：sleep(  long )<br>说明：参数为<code>毫秒</code>。</li><li>功能：<br><code>暂停</code>正在执行的<code>线程</code>，将CPU让给其他线程。</li><li>注意事项：<br>抛出<code>InterruptedException</code>异常。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> 多线程;</span><br><span class="line"></span><br><span class="line"><span class="comment">//程序的睡眠</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">xc</span> <span class="keyword">implements</span> <span class="title">Runnable</span></span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;   <span class="comment">//不可以用Throws 抛出异常  继承和实现接口都不能抛</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++) &#123;</span><br><span class="line">System.out.println(Thread.currentThread().getName()+<span class="string">&quot; &quot;</span>+i);</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">Thread.sleep(<span class="number">1000</span>);<span class="comment">//1000毫秒=1s  睡眠过程中</span></span><br><span class="line">&#125;<span class="keyword">catch</span>(Exception e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> 多线程1 </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line">xc c=<span class="keyword">new</span> xc();</span><br><span class="line"></span><br><span class="line">Thread t=<span class="keyword">new</span> Thread(c);</span><br><span class="line">t.setName(<span class="string">&quot;倒计时&quot;</span>);</span><br><span class="line">t.start();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="yield"><a href="#yield" class="headerlink" title="yield()"></a>yield()</h3><ul><li>格式：yield(  )</li><li>功能：<br><code>暂停</code>正在执行的线程，执行<code>其他线程</code>。</li><li>yield()与sleep() ：<br>① 共同点：暂停正在运行的线程；<br>② 不同点：<br>yield()<code>不阻塞线程</code>，只将线程转换到就绪状态，让系统重新调度一次；<br>sleep() 线程会进入休眠状态，休眠一段时间。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> 多线程;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//线程的让步</span></span><br><span class="line"><span class="comment">//应用遇到某些条件时，这件事暂时不做，先其他的做</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Xc4</span> <span class="keyword">implements</span> <span class="title">Runnable</span></span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=<span class="number">30</span>;i++) &#123;</span><br><span class="line">System.out.println(Thread.currentThread().getName()+<span class="string">&quot;:&quot;</span>+i);</span><br><span class="line"><span class="keyword">if</span>(i%<span class="number">5</span>==<span class="number">0</span>) &#123;</span><br><span class="line">Thread.yield(); <span class="comment">//线程不执行 当i=5 线程分给其他线程   其他线程执行到满足条件 在让步 让步</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> 多线程2 </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line">Xc4 xc=<span class="keyword">new</span> Xc4();</span><br><span class="line"></span><br><span class="line">Thread t=<span class="keyword">new</span> Thread(xc);</span><br><span class="line">Thread t1=<span class="keyword">new</span> Thread(xc);</span><br><span class="line"></span><br><span class="line">t.setName(<span class="string">&quot;线程1&quot;</span>);</span><br><span class="line">    t1.setName(<span class="string">&quot;线程2&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    t.start();</span><br><span class="line">    t1.start();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="join"><a href="#join" class="headerlink" title="join()"></a>join()</h3><ul><li>格式：<br>① join( )<br>② join( long millis )<br>③ join( long millis, int nanos) </li><li>功能：<br><code>等待</code>线程终止，<code>时间最长为</code>millis毫秒+nanos纳秒。</li></ul><blockquote><p>当在<code>某个线程中</code>调用<code>其他线程的join()方法时</code>，调用的线程将被<code>阻塞</code>，直到<code>被join()方法加入的线程执行完成后</code>才会继续运行。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*在项目中创建JoinTest类，该类继承了Jframe类。该实例包括两个进度条，进度条的进度由线程来控制，通过使用join方法使上面的进度条必须等待下面的进度条完成后才可以继续。*/</span></span><br><span class="line"><span class="keyword">package</span> 多线程;</span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JoinTest</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> Thread t1;<span class="comment">//定义两个线程</span></span><br><span class="line"><span class="keyword">private</span> Thread t2;</span><br><span class="line">JFrame f;</span><br><span class="line">JProgressBar pb1; <span class="comment">//进度条1</span></span><br><span class="line">JProgressBar pb2; <span class="comment">//进度条2</span></span><br><span class="line"><span class="keyword">int</span> count=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">JoinTest</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">super</span>();</span><br><span class="line">f=<span class="keyword">new</span> JFrame();</span><br><span class="line">pb1=<span class="keyword">new</span> JProgressBar();</span><br><span class="line">pb2=<span class="keyword">new</span> JProgressBar();</span><br><span class="line">f.add(pb1,BorderLayout.NORTH);</span><br><span class="line">f.add(pb2,BorderLayout.SOUTH);</span><br><span class="line"></span><br><span class="line">pb1.setStringPainted(<span class="keyword">true</span>);  <span class="comment">//显示数字字符</span></span><br><span class="line">pb2.setStringPainted(<span class="keyword">true</span>);</span><br><span class="line">f.setSize(<span class="number">200</span>,<span class="number">100</span>);</span><br><span class="line">f.setLocation(<span class="number">200</span>,<span class="number">200</span>);</span><br><span class="line">f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class="line">f.setResizable(<span class="keyword">false</span>);</span><br><span class="line">f.setVisible(<span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//使用匿名内部类形式初始化Thread实例</span></span><br><span class="line">t1=<span class="keyword">new</span> Thread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line"><span class="keyword">int</span> count=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;  <span class="comment">//重写run方法</span></span><br><span class="line"><span class="keyword">while</span>(<span class="keyword">true</span>) &#123;</span><br><span class="line">pb1.setValue(++count);  <span class="comment">//设置进度条的当前值</span></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">Thread.sleep(<span class="number">100</span>);  <span class="comment">//使线程1休眠</span></span><br><span class="line"></span><br><span class="line">t2.join();         <span class="comment">//线程2插队</span></span><br><span class="line"></span><br><span class="line">&#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line"><span class="comment">// TODO 自动生成的 catch 块</span></span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">t1.start(); <span class="comment">//启动线程1 调用 run方法</span></span><br><span class="line"></span><br><span class="line">t2=<span class="keyword">new</span> Thread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line"><span class="keyword">int</span> count=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="keyword">true</span>) &#123;</span><br><span class="line">pb2.setValue(++count);</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">Thread.sleep(<span class="number">100</span>);</span><br><span class="line">&#125;<span class="keyword">catch</span>(Exception e) &#123;</span><br><span class="line">e.printStackTrace();;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(count==<span class="number">100</span>)  <span class="comment">//当增长为100时跳出</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">t2.start();  <span class="comment">//启动线程2</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line">JoinTest br=<span class="keyword">new</span> JoinTest();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/26/a0be3fd709f15b64ba04926c3daf7aa4.png"></p><h2 id="多线程的同步"><a href="#多线程的同步" class="headerlink" title="多线程的同步"></a>多线程的同步</h2><p>线程的同步：<code>用以解决多个线程同时访问同一个资源！</code></p><h3 id="资源共享冲突"><a href="#资源共享冲突" class="headerlink" title="资源共享冲突"></a>资源共享冲突</h3><p><strong><em><code>资源共享的冲突</code></em></strong>:</p><ul><li>资源冲突：多个线程<code>同时访问</code>一个资源所导致<br>例：同时访问一个变量；<br>例：同时入往一台打印机上输出。</li><li>并发程序要处理的核心问题：<code>资源共享问题</code>。</li><li> 在多线程环境下，必须<code>防止</code>两个线程<code>同时访问</code>同一个资源。</li></ul><p><strong><em><code>资源共享冲突的解决思路</code></em></strong>:</p><ul><li>在线程运行时给<code>资源上锁</code><br><code>第一个</code>访问这个资源的线程给它上锁，在解锁之前，其它线程不能访问这个资源；<code>第二个</code>线程给这个资源上锁，……，如此循环。</li><li>采用<code>串行访问方式</code><br>保证同一时刻<code>只有一个线程</code>能够访问这个共享资源。</li></ul><hr><h3 id="synchronized"><a href="#synchronized" class="headerlink" title="synchronized"></a>synchronized</h3><p>java同步机制： <code>synchronized</code></p><ul><li>每个对象都有一个<code>锁</code>，在执行对象的<code>同步代码（需要共享资源的代码）</code>时，该对象会被<code>锁住</code>。</li><li>所有线程的<code>同步代码</code>都会<code>共享同一个锁</code>，该锁会<code>防止</code>多个线程<code>同时读写</code>共用的内存。</li><li>只要有一个线程还在<code>调用synchronized</code>方法，其他线程就<code>不允许访问</code>所有的synchronized方法，当线程<code>离开synchronized</code>方法，对象就被<code>解锁</code>。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">**********同步代码块格式*******</span><br><span class="line"><span class="keyword">synchronized</span> ( lock )&#123;</span><br><span class="line">     共享资源代码块</span><br><span class="line"> &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li><code> lock</code>：锁对象(可为<code>任意对象</code>)。<br>① 未锁值：1 (<code>默认</code>)；<br>②  锁定值 :  0。</li><li>线程执行同步代码块时，先检查<code>锁对象标志位</code>：<br>①<code>未锁</code>时执行同步代码块，同时<code>锁定</code>标志位；<br>② <code>锁定</code>时其它的同步线程发生<code>阻塞</code>，<code>等待</code>同步代码解锁。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">**********同步方法格式********</span><br><span class="line"><span class="keyword">synchronized</span>  返回值类型  方法名( 参数列表  ) &#123; </span><br><span class="line">共享资源代码块</span><br><span class="line">&#125;</span><br><span class="line">等价于</span><br><span class="line">返回值类型  方法名( 参数列表  )&#123;</span><br><span class="line">   <span class="keyword">synchronized</span>(<span class="keyword">this</span>) &#123; …… &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> 多线程;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Che</span> <span class="keyword">implements</span> <span class="title">Runnable</span></span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span>  chepiao=<span class="number">100</span>;  <span class="comment">//static 使多个线程共享100张车票</span></span><br><span class="line"><span class="comment">//static的主要作用在于创建独立于具体对象的域变量或者方法</span></span><br><span class="line"><span class="comment">//被static修饰的变量或者方法是独立于该类的任何对象，也就是说，这些变量和方法不属于任何一个实例对象，而是被类的实例对象所共享。</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> String a=<span class="keyword">new</span> String(<span class="string">&quot;1&quot;</span>);<span class="comment">//字符串随意定义</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(<span class="keyword">true</span>) &#123;</span><br><span class="line"><span class="comment">//synchronized的作用是让他所管辖的代码部分，要么全部执行完要么全部不执行</span></span><br><span class="line"><span class="keyword">synchronized</span>(a) &#123;<span class="comment">//既可修饰代码块，又可以修饰函数,修饰函数不需要字符串  public synchronized void run() 让函数执行完</span></span><br><span class="line"><span class="comment">//两个线程的a是线程自己的，并不是共有的  加public static变成公共的</span></span><br><span class="line"><span class="comment">//一次执行完</span></span><br><span class="line"><span class="keyword">if</span>(chepiao&gt;<span class="number">0</span>) &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;第&quot;</span>+Thread.currentThread().getName()+<span class="string">&quot;个车站正在卖第&quot;</span>+(<span class="number">101</span>-chepiao)+<span class="string">&quot;张车票&quot;</span>);</span><br><span class="line">--chepiao;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">Thread.sleep(<span class="number">50</span>);</span><br><span class="line">&#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line"><span class="comment">// TODO 自动生成的 catch 块</span></span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> 车票售票实例 </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line">Thread t=<span class="keyword">new</span> Thread(<span class="keyword">new</span> Che());</span><br><span class="line">Thread t1=<span class="keyword">new</span> Thread(<span class="keyword">new</span> Che());</span><br><span class="line"><span class="comment">//t.setName(&quot;上海1&quot;);</span></span><br><span class="line">t.start();</span><br><span class="line"><span class="comment">//t1.setName(&quot;长沙2&quot;);</span></span><br><span class="line">t1.start();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/26/61b952d791d16151ac59dbcb54692fd5.png"></p><h2 id="死锁"><a href="#死锁" class="headerlink" title="死锁"></a>死锁</h2><ul><li><code>死锁</code>——两个线程彼此占据着对方需要的资源，并且等待着对方释放资源。</li><li>死锁是由于线程间相互<code>竞争资源</code>或<code>彼此通信</code>而产生的一种阻塞现象，若没有外力作用，都将无法推进下去。</li><li><code>死锁线程</code>：永远在<code>相互等待</code>的线程。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/26/185cad336950888b8cc2d5db0a87d625.png"></p><h2 id="多线程通信"><a href="#多线程通信" class="headerlink" title="多线程通信"></a>多线程通信</h2><p>线程通信：<code>解决线程间的协同工作问题(彼此配合)</code><br><code>Object类</code>提供线程通信的方法</p><ul><li>void <code>wait</code>()<br>使当前线程<code>放弃</code>同步锁并进入等待，直到其他线程进入此同步锁，并调用<code>notify()</code>或<code>notifyAll()</code>方法<code>唤醒</code>该线程为止。</li><li>void <code>notify</code>()<br><code>唤醒</code>此同步锁上等待的<code>第一个调用wait()</code>方法的线程。</li><li>void <code>notifyAll</code>()<br><code>唤醒</code>此同步锁上等待的<code>调用wait()方法的所有线程</code>。</li></ul><hr><p>两个线程，假设分别为A和B，A线程用于“放入苹果”，而B线程用于“拿走苹果”；一次只能放一个；A线程放好后，就通知线程拿走；B拿到后，就通知A接着放；如果A线程没有放，则B线程不能拿。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/26/64ad35084e4274644237a8c986ed257b.png"><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/26/9b2f85a1c095e428ad5b61ba07c38698.png"><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/26/12920a0d89af7aed84eda0356667547c.png"></p>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java👉泛型、枚举、注解</title>
      <link href="2021/01/05/%E5%90%8E%E7%AB%AF/Java/Java_%E6%B3%9B%E5%9E%8B%E3%80%81%E6%9E%9A%E4%B8%BE%E3%80%81%E6%B3%A8%E8%A7%A3/"/>
      <url>2021/01/05/%E5%90%8E%E7%AB%AF/Java/Java_%E6%B3%9B%E5%9E%8B%E3%80%81%E6%9E%9A%E4%B8%BE%E3%80%81%E6%B3%A8%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<h1 id="泛型"><a href="#泛型" class="headerlink" title="泛型"></a>泛型</h1><p>泛型的本质是参数化类型，也就是说所操作的数据类型被指定为一个参数</p><div class="note success flat"><p>使用 Java 泛型的概念，我们可以写一个泛型方法来对一个对象数组排序。然后，调用该泛型方法来对整型数组、浮点数数组、字符串数组等进行排序</p></div><h2 id="泛型方法"><a href="#泛型方法" class="headerlink" title="泛型方法"></a>泛型方法</h2><p>你可以写一个泛型方法，该方法在调用时可以接收不同类型的参数。根据传递给泛型方法的参数类型，编译器适当地处理每一个方法调用。<br>下面是定义泛型方法的规则：</p><ul><li>所有泛型方法声明都有一个类型参数声明部分（由尖括号分隔），该类型参数声明部分在方法返回类型之前（在下面例子中的&lt;E&gt;）。</li><li>每一个类型参数声明部分包含一个或多个类型参数，参数间用逗号隔开。一个泛型参数，也被称为一个类型变量，是用于指定一个泛型类型名称的标识符。</li><li>类型参数能被用来声明返回值类型，并且能作为泛型方法得到的实际参数类型的占位符。</li><li>泛型方法体的声明和其他方法一样。注意类型参数只能代表引用型类型，不能是原始类型（像int,double,char的等）。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GenericMethodTest</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">   <span class="comment">// 泛型方法 printArray                         </span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> &lt; E &gt; <span class="function"><span class="keyword">void</span> <span class="title">printArray</span><span class="params">( E[] inputArray )</span></span></span><br><span class="line"><span class="function">   </span>&#123;</span><br><span class="line">      <span class="comment">// 输出数组元素            </span></span><br><span class="line">         <span class="keyword">for</span> ( E element : inputArray )&#123;        </span><br><span class="line">            System.out.printf( <span class="string">&quot;%s &quot;</span>, element );</span><br><span class="line">         &#125;</span><br><span class="line">         System.out.println();</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">( String args[] )</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">// 创建不同类型数组： Integer, Double 和 Character</span></span><br><span class="line">        Integer[] intArray = &#123; <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span> &#125;;</span><br><span class="line">        Double[] doubleArray = &#123; <span class="number">1.1</span>, <span class="number">2.2</span>, <span class="number">3.3</span>, <span class="number">4.4</span> &#125;;</span><br><span class="line">        Character[] charArray = &#123; <span class="string">&#x27;H&#x27;</span>, <span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;L&#x27;</span>, <span class="string">&#x27;L&#x27;</span>, <span class="string">&#x27;O&#x27;</span> &#125;;</span><br><span class="line"> </span><br><span class="line">        System.out.println( <span class="string">&quot;整型数组元素为:&quot;</span> );</span><br><span class="line">        printArray( intArray  ); <span class="comment">// 传递一个整型数组</span></span><br><span class="line"> </span><br><span class="line">        System.out.println( <span class="string">&quot;\n双精度型数组元素为:&quot;</span> );</span><br><span class="line">        printArray( doubleArray ); <span class="comment">// 传递一个双精度型数组</span></span><br><span class="line"> </span><br><span class="line">        System.out.println( <span class="string">&quot;\n字符型数组元素为:&quot;</span> );</span><br><span class="line">        printArray( charArray ); <span class="comment">// 传递一个字符型数组</span></span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">整型数组元素为:</span></span><br><span class="line"><span class="comment">1 2 3 4 5 </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">双精度型数组元素为:</span></span><br><span class="line"><span class="comment">1.1 2.2 3.3 4.4 </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">字符型数组元素为:</span></span><br><span class="line"><span class="comment">H E L L O </span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h2 id="泛型类"><a href="#泛型类" class="headerlink" title="泛型类"></a>泛型类</h2><p> 泛型类的声明和非泛型类的声明类似，除了在类名后面添加了类型参数声明部分。</p><p>和泛型方法一样，泛型类的类型参数声明部分也包含一个或多个类型参数，参数间用逗号隔开。一个泛型参数，也被称为一个类型变量，是用于指定一个泛型类型名称的标识符。因为他们接受一个或多个参数，这些类被称为参数化的类或参数化的类型。 </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Box</span>&lt;<span class="title">T</span>&gt; </span>&#123;</span><br><span class="line">   </span><br><span class="line">  <span class="keyword">private</span> T t;</span><br><span class="line"> </span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">(T t)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.t = t;</span><br><span class="line">  &#125;</span><br><span class="line"> </span><br><span class="line">  <span class="function"><span class="keyword">public</span> T <span class="title">get</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> t;</span><br><span class="line">  &#125;</span><br><span class="line"> </span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    Box&lt;Integer&gt; integerBox = <span class="keyword">new</span> Box&lt;Integer&gt;();</span><br><span class="line">    Box&lt;String&gt; stringBox = <span class="keyword">new</span> Box&lt;String&gt;();</span><br><span class="line"> </span><br><span class="line">    integerBox.add(<span class="keyword">new</span> Integer(<span class="number">10</span>));</span><br><span class="line">    stringBox.add(<span class="keyword">new</span> String(<span class="string">&quot;菜鸟教程&quot;</span>));</span><br><span class="line"> </span><br><span class="line">    System.out.printf(<span class="string">&quot;整型值为 :%d\n\n&quot;</span>, integerBox.get());</span><br><span class="line">    System.out.printf(<span class="string">&quot;字符串为 :%s\n&quot;</span>, stringBox.get());</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">整型值为 :10</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">字符串为 :菜鸟教程</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h2 id="类型通配符"><a href="#类型通配符" class="headerlink" title="类型通配符"></a>类型通配符</h2><ul><li>类型通配符一般是使用?代替具体的类型参数。例如 List&lt;?&gt; 在逻辑上是List&lt;String&gt;,List&lt;Integer&gt; 等所有List&lt;具体类型实参&gt;的父类。 </li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GenericTest</span> </span>&#123;</span><br><span class="line">     </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        List&lt;String&gt; name = <span class="keyword">new</span> ArrayList&lt;String&gt;();</span><br><span class="line">        List&lt;Integer&gt; age = <span class="keyword">new</span> ArrayList&lt;Integer&gt;();</span><br><span class="line">        List&lt;Number&gt; number = <span class="keyword">new</span> ArrayList&lt;Number&gt;();</span><br><span class="line">        </span><br><span class="line">        name.add(<span class="string">&quot;icon&quot;</span>);</span><br><span class="line">        age.add(<span class="number">18</span>);</span><br><span class="line">        number.add(<span class="number">314</span>);</span><br><span class="line"> </span><br><span class="line">        getData(name);</span><br><span class="line">        getData(age);</span><br><span class="line">        getData(number);</span><br><span class="line">       </span><br><span class="line">   &#125;</span><br><span class="line"> </span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">getData</span><span class="params">(List&lt;?&gt; data)</span> </span>&#123;</span><br><span class="line">      System.out.println(<span class="string">&quot;data :&quot;</span> + data.get(<span class="number">0</span>));</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">data :icon</span></span><br><span class="line"><span class="comment">data :18</span></span><br><span class="line"><span class="comment">data :314</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><div class="note warning flat"><p>因为getData()方法的参数是List类型的，所以name，age，number都可以作为这个方法的实参，这就是通配符的作用 </p></div><ul><li>类型通配符上限通过形如List来定义，如此定义就是通配符泛型值接受Number及其下层子类类型。 </li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GenericTest</span> </span>&#123;</span><br><span class="line">     </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        List&lt;String&gt; name = <span class="keyword">new</span> ArrayList&lt;String&gt;();</span><br><span class="line">        List&lt;Integer&gt; age = <span class="keyword">new</span> ArrayList&lt;Integer&gt;();</span><br><span class="line">        List&lt;Number&gt; number = <span class="keyword">new</span> ArrayList&lt;Number&gt;();</span><br><span class="line">        </span><br><span class="line">        name.add(<span class="string">&quot;icon&quot;</span>);</span><br><span class="line">        age.add(<span class="number">18</span>);</span><br><span class="line">        number.add(<span class="number">314</span>);</span><br><span class="line"> </span><br><span class="line">        <span class="comment">//getUperNumber(name);//1</span></span><br><span class="line">        getUperNumber(age);<span class="comment">//2</span></span><br><span class="line">        getUperNumber(number);<span class="comment">//3</span></span><br><span class="line">       </span><br><span class="line">   &#125;</span><br><span class="line"> </span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">getData</span><span class="params">(List&lt;?&gt; data)</span> </span>&#123;</span><br><span class="line">      System.out.println(<span class="string">&quot;data :&quot;</span> + data.get(<span class="number">0</span>));</span><br><span class="line">   &#125;</span><br><span class="line">   </span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">getUperNumber</span><span class="params">(List&lt;? extends Number&gt; data)</span> </span>&#123;</span><br><span class="line">          System.out.println(<span class="string">&quot;data :&quot;</span> + data.get(<span class="number">0</span>));</span><br><span class="line">       &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">data :18</span></span><br><span class="line"><span class="comment">data :314</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><div class="note warning flat"><p>在(//1)处会出现错误，因为getUperNumber()方法中的参数已经限定了参数泛型上限为Number，所以泛型为String是不在这个范围之内，所以会报错 </p></div><ul><li>类型通配符下限通过形如 List&lt;? super Number&gt;来定义，表示类型只能接受Number及其三层父类类型，如 Object 类型的实例。</li></ul><h1 id="枚举"><a href="#枚举" class="headerlink" title="枚举"></a>枚举</h1><p>Java 枚举是一个特殊的类，一般表示一组常量，比如一年的 4 个季节，一个年的 12 个月份，一个星期的 7 天，方向有东南西北等。</p><p>Java 枚举类使用 <code>enum</code> 关键字来定义，各个常量使用逗号<code> ,</code> 来分割。</p><p>例如定义一个颜色的枚举类。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">enum</span> <span class="title">Color</span> </span></span><br><span class="line"><span class="class"></span>&#123; </span><br><span class="line">    RED, GREEN, BLUE; </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>以上枚举类 Color 颜色常量有 RED, GREEN, BLUE，分别表示红色，绿色，蓝色。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">enum</span> <span class="title">Color</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    RED, GREEN, BLUE;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">// 执行输出结果</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        Color c1 = Color.RED;</span><br><span class="line">        System.out.println(c1);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">RED</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h2 id="内部类中使用枚举"><a href="#内部类中使用枚举" class="headerlink" title="内部类中使用枚举"></a>内部类中使用枚举</h2><p>枚举类也可以声明在内部类中</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="class"><span class="keyword">enum</span> <span class="title">Color</span></span></span><br><span class="line"><span class="class">    </span>&#123;</span><br><span class="line">        RED, GREEN, BLUE;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">// 执行输出结果</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        Color c1 = Color.RED;</span><br><span class="line">        System.out.println(c1);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">RED</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><p>每个枚举都是通过 Class 在内部实现的，且所有的枚举值都是 public static final 的。</p><p>以上的枚举类 Color 转化在内部类实现：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Color</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">     <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> Color RED = <span class="keyword">new</span> Color();</span><br><span class="line">     <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> Color BLUE = <span class="keyword">new</span> Color();</span><br><span class="line">     <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> Color GREEN = <span class="keyword">new</span> Color();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="迭代枚举元素"><a href="#迭代枚举元素" class="headerlink" title="迭代枚举元素"></a>迭代枚举元素</h2><p>可以使用 for 语句来迭代枚举元素：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">enum</span> <span class="title">Color</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    RED, GREEN, BLUE;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyClass</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (Color myVar : Color.values()) &#123;</span><br><span class="line">      System.out.println(myVar);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">RED</span></span><br><span class="line"><span class="comment">GREEN</span></span><br><span class="line"><span class="comment">BLUE</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h2 id="在-switch-中使用枚举类"><a href="#在-switch-中使用枚举类" class="headerlink" title="在 switch 中使用枚举类"></a>在 switch 中使用枚举类</h2><p>枚举类常应用于 switch 语句中：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">enum</span> <span class="title">Color</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    RED, GREEN, BLUE;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyClass</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    Color myVar = Color.BLUE;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">switch</span>(myVar) &#123;</span><br><span class="line">      <span class="keyword">case</span> RED:</span><br><span class="line">        System.out.println(<span class="string">&quot;红色&quot;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> GREEN:</span><br><span class="line">         System.out.println(<span class="string">&quot;绿色&quot;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> BLUE:</span><br><span class="line">        System.out.println(<span class="string">&quot;蓝色&quot;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">蓝色</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h2 id="相关方法"><a href="#相关方法" class="headerlink" title="相关方法"></a>相关方法</h2><p>enum 定义的枚举类默认继承了<code>java.lang.Enum</code>类，并实现了<code> java.lang.Seriablizable</code> 和<code> java.lang.Comparable</code> 两个接口。</p><p>values(), ordinal() 和 valueOf() 方法位于 java.lang.Enum 类中：</p><ul><li><code>values()</code> 返回枚举类中所有的值。</li><li><code>ordinal()</code>方法可以找到每个枚举常量的索引，就像数组索引一样。</li><li><code>valueOf()</code>方法返回指定字符串值的枚举常量。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">enum</span> <span class="title">Color</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    RED, GREEN, BLUE;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">// 调用 values()</span></span><br><span class="line">        Color[] arr = Color.values();</span><br><span class="line"> </span><br><span class="line">        <span class="comment">// 迭代枚举</span></span><br><span class="line">        <span class="keyword">for</span> (Color col : arr)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 查看索引</span></span><br><span class="line">            System.out.println(col + <span class="string">&quot; at index &quot;</span> + col.ordinal());</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="comment">// 使用 valueOf() 返回枚举常量，不存在的会报错 IllegalArgumentException</span></span><br><span class="line">        System.out.println(Color.valueOf(<span class="string">&quot;RED&quot;</span>));</span><br><span class="line">        <span class="comment">// System.out.println(Color.valueOf(&quot;WHITE&quot;));</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">RED at index 0</span></span><br><span class="line"><span class="comment">GREEN at index 1</span></span><br><span class="line"><span class="comment">BLUE at index 2</span></span><br><span class="line"><span class="comment">RED</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h2 id="枚举类成员"><a href="#枚举类成员" class="headerlink" title="枚举类成员"></a>枚举类成员</h2><ul><li><p>枚举跟普通类一样可以用自己的变量、方法和构造函数，构造函数只能使用 private 访问修饰符，所以外部无法调用。</p></li><li><p>枚举既可以包含具体方法，也可以包含抽象方法。 如果枚举类具有抽象方法，则枚举类的每个实例都必须实现它。</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">enum</span> <span class="title">Color</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    RED, GREEN, BLUE;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">// 构造函数</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">Color</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Constructor called for : &quot;</span> + <span class="keyword">this</span>.toString());</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">colorInfo</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Universal Color&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span></span></span><br><span class="line"><span class="class"></span>&#123;    </span><br><span class="line">    <span class="comment">// 输出</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        Color c1 = Color.RED;</span><br><span class="line">        System.out.println(c1);</span><br><span class="line">        c1.colorInfo();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">Constructor called for : RED</span></span><br><span class="line"><span class="comment">Constructor called for : GREEN</span></span><br><span class="line"><span class="comment">Constructor called for : BLUE</span></span><br><span class="line"><span class="comment">RED</span></span><br><span class="line"><span class="comment">Universal Color</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h1 id="注解"><a href="#注解" class="headerlink" title="注解"></a>注解</h1><p>Java 注解（Annotation）又称 Java 标注，Java 语言中的类、方法、变量、参数和包等都可以被标注。和 Javadoc 不同，Java 标注可以通过反射获取标注内容。在编译器生成类文件时，标注可以被嵌入到字节码中。Java 虚拟机可以保留标注内容，在运行时可以获取到标注内容 。 当然它也支持自定义 Java 标注。</p><div class="note success flat"><p>注解详细介绍请戳<a href="https://www.runoob.com/w3cnote/java-annotation.html">Java注解(Annotation)</a></p></div><h2 id="内置的注解"><a href="#内置的注解" class="headerlink" title="内置的注解"></a>内置的注解</h2><p>Java 定义了一套注解，共有 7 个，3 个在 java.lang 中，剩下 4 个在 java.lang.annotation 中。<br>作用在代码的注解是：</p><ul><li>@Override - 检查该方法是否是重写方法。如果发现其父类，或者是引用的接口中并没有该方法时，会报编译错误。</li><li>@Deprecated - 标记过时方法。如果使用该方法，会报编译警告。</li><li>@SuppressWarnings - 指示编译器去忽略注解中声明的警告。</li></ul><p>作用在其他注解的注解(或者说 元注解)是:</p><ul><li>@Retention - 标识这个注解怎么保存，是只在代码中，还是编入class文件中，或者是在运行时可以通过反射访问。</li><li>@Documented - 标记这些注解是否包含在用户文档中。</li><li>@Target - 标记这个注解应该是哪种 Java 成员。</li><li>@Inherited - 标记这个注解是继承于哪个注解类(默认 注解并没有继承于任何子类)</li></ul><p>从 Java 7 开始，额外添加了 3 个注解:</p><ul><li>@SafeVarargs - Java 7 开始支持，忽略任何使用参数为泛型变量的方法或构造函数调用产生的警告。</li><li>@FunctionalInterface - Java 8 开始支持，标识一个匿名函数或函数式接口。</li><li>@Repeatable - Java 8 开始支持，标识某注解可以在同一个声明上使用多次。</li></ul><h2 id="Annotation架构"><a href="#Annotation架构" class="headerlink" title="Annotation架构"></a>Annotation架构</h2><p><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@c04371c9ae51c57a15aad849a376a045554b47fa/2021/01/14/83f20ef7b1d3cb7068d3872b3c92b483.png"></p>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java👉异常机制</title>
      <link href="2021/01/05/%E5%90%8E%E7%AB%AF/Java/Java_%E5%BC%82%E5%B8%B8%E6%9C%BA%E5%88%B6/"/>
      <url>2021/01/05/%E5%90%8E%E7%AB%AF/Java/Java_%E5%BC%82%E5%B8%B8%E6%9C%BA%E5%88%B6/</url>
      
        <content type="html"><![CDATA[<h1 id="异常处理"><a href="#异常处理" class="headerlink" title="异常处理"></a>异常处理</h1><div class="note success flat"><p>异常是一个在程序执行期间发生的事件，它中断了正在执行的程序的正常指令流</p></div><h1 id="Exception"><a href="#Exception" class="headerlink" title="Exception"></a>Exception</h1><ul><li>所有的异常类是从<code> java.lang.Exception</code> 类继承的子类</li><li>Exception 类是 <code>Throwable</code> 类的子类。除了Exception类外，Throwable还有一个子类Error 。</li><li>Error 用来指示运行时环境发生的错误。例如，JVM 内存溢出。一般地，程序不会从错误中恢复。</li><li>异常类有两个主要的子类：<code>IOException</code> 类和<code> RuntimeException</code> 类。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2021/01/05/a589201b1677dd985fce0ddbfb3fc15d.png"></p><h1 id="Java-内置异常类"><a href="#Java-内置异常类" class="headerlink" title="Java 内置异常类"></a>Java 内置异常类</h1><p>Java 语言定义了一些异常类在 java.lang 标准包中</p><div class="note warning flat"><p>Java 根据各个类库也定义了一些其他的异常，下面的表中列出了 Java 的非检查性异常</p></div><table><thead><tr><th align="center">异常</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">ArithmeticException</td><td align="center">当出现异常的运算条件时，抛出此异常。例如，一个整数”除以零”时，抛出此类的一个实例</td></tr><tr><td align="center">ArrayIndexOutOfBoundsException</td><td align="center">用非法索引访问数组时抛出的异常。如果索引为负或大于等于数组大小，则该索引为非法索引</td></tr><tr><td align="center">ArrayStoreException</td><td align="center">试图将错误类型的对象存储到一个对象数组时抛出的异常</td></tr><tr><td align="center">ClassCastException</td><td align="center">当试图将对象强制转换为不是实例的子类时，抛出该异常</td></tr><tr><td align="center">IllegalArgumentException</td><td align="center">抛出的异常表明向方法传递了一个不合法或不正确的参数</td></tr><tr><td align="center">IllegalMonitorStateException</td><td align="center">抛出的异常表明某一线程已经试图等待对象的监视器，或者试图通知其他正在等待对象的监视器而本身没有指定监视器的线程</td></tr><tr><td align="center">IllegalStateException</td><td align="center">在非法或不适当的时间调用方法时产生的信号。换句话说，即 Java 环境或 Java 应用程序没有处于请求操作所要求的适当状态下</td></tr><tr><td align="center">IllegalThreadStateException</td><td align="center">线程没有处于请求操作所要求的适当状态时抛出的异常</td></tr><tr><td align="center">IndexOutOfBoundsException</td><td align="center">指示某排序索引（例如对数组、字符串或向量的排序）超出范围时抛出</td></tr><tr><td align="center">NegativeArraySizeException</td><td align="center">如果应用程序试图创建大小为负的数组，则抛出该异常</td></tr><tr><td align="center">NullPointerException</td><td align="center">当应用程序试图在需要对象的地方使用 null 时，抛出该异常</td></tr><tr><td align="center">NumberFormatException</td><td align="center">当应用程序试图将字符串转换成一种数值类型，但该字符串不能转换为适当格式时，抛出该异常</td></tr><tr><td align="center">SecurityException</td><td align="center">由安全管理器抛出的异常，指示存在安全侵犯</td></tr><tr><td align="center">StringIndexOutOfBoundsException</td><td align="center">此异常由 String 方法抛出，指示索引或者为负，或者超出字符串的大小</td></tr><tr><td align="center">UnsupportedOperationException</td><td align="center">当不支持请求的操作时，抛出该异常</td></tr></tbody></table><div class="note warning flat"><p>下面的表中列出了 Java 定义在 java.lang 包中的检查性异常类。 </p></div><table><thead><tr><th align="center">异常</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">ClassNotFoundException</td><td align="center">应用程序试图加载类时，找不到相应的类，抛出该异常</td></tr><tr><td align="center">CloneNotSupportedException</td><td align="center">当调用 Object 类中的 clone 方法克隆对象，但该对象的类无法实现 Cloneable 接口时，抛出该异常</td></tr><tr><td align="center">IllegalAccessException</td><td align="center">拒绝访问一个类的时候，抛出该异常</td></tr><tr><td align="center">InstantiationException</td><td align="center">当试图使用 Class 类中的 newInstance 方法创建一个类的实例，而指定的类对象因为是一个接口或是一个抽象类而无法实例化时，抛出该异常</td></tr><tr><td align="center">InterruptedException</td><td align="center">一个线程被另一个线程中断，抛出该异常</td></tr><tr><td align="center">NoSuchFieldException</td><td align="center">请求的变量不存在</td></tr><tr><td align="center">NoSuchMethodException</td><td align="center">请求的方法不存在</td></tr></tbody></table><h1 id="异常方法"><a href="#异常方法" class="headerlink" title="异常方法"></a>异常方法</h1><p>下面的列表是 Throwable 类的主要方法:</p><table><thead><tr><th align="center">方法</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">public String getMessage()</td><td align="center">返回关于发生的异常的详细信息。这个消息在Throwable 类的构造函数中初始化了</td></tr><tr><td align="center">public Throwable getCause()</td><td align="center">返回一个Throwable 对象代表异常原因</td></tr><tr><td align="center">public String toString()</td><td align="center">使用getMessage()的结果返回类的串级名字</td></tr><tr><td align="center">public void printStackTrace()</td><td align="center">打印toString()结果和栈层次到System.err，即错误输出流</td></tr><tr><td align="center">public StackTraceElement [] getStackTrace()</td><td align="center">返回一个包含堆栈层次的数组。下标为0的元素代表栈顶，最后一个元素代表方法调用堆栈的栈底</td></tr><tr><td align="center">public Throwable fillInStackTrace()</td><td align="center">用当前的调用栈层次填充Throwable 对象栈层次，添加到栈层次任何先前信息中</td></tr></tbody></table><h1 id="捕获异常"><a href="#捕获异常" class="headerlink" title="捕获异常"></a>捕获异常</h1><div class="note warning flat"><p>使用 try 和 catch 关键字可以捕获异常。try/catch 代码块放在异常可能发生的地方。</p></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="comment">// 程序代码</span></span><br><span class="line">&#125;<span class="keyword">catch</span>(ExceptionName e1)</span><br><span class="line">&#123;</span><br><span class="line">   <span class="comment">//Catch 块</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="多重捕获块"><a href="#多重捕获块" class="headerlink" title="多重捕获块"></a>多重捕获块</h1><div class="note warning flat"><p>一个 try 代码块后面跟随多个 catch 代码块的情况就叫多重捕获</p></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">   <span class="comment">// 程序代码</span></span><br><span class="line">&#125;<span class="keyword">catch</span>(异常类型<span class="number">1</span> 异常的变量名<span class="number">1</span>)&#123;</span><br><span class="line">  <span class="comment">// 程序代码</span></span><br><span class="line">&#125;<span class="keyword">catch</span>(异常类型<span class="number">2</span> 异常的变量名<span class="number">2</span>)&#123;</span><br><span class="line">  <span class="comment">// 程序代码</span></span><br><span class="line">&#125;<span class="keyword">catch</span>(异常类型<span class="number">3</span> 异常的变量名<span class="number">3</span>)&#123;</span><br><span class="line">  <span class="comment">// 程序代码</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="finally关键字"><a href="#finally关键字" class="headerlink" title="finally关键字"></a>finally关键字</h1><ul><li>finally 关键字用来创建在 try 代码块后面执行的代码块。</li><li>无论是否发生异常，finally 代码块中的代码总会被执行。</li><li>在 finally 代码块中，可以运行清理类型等收尾善后性质的语句。</li></ul><p>finally 代码块出现在 catch 代码块最后，语法如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">ry&#123;</span><br><span class="line">  <span class="comment">// 程序代码</span></span><br><span class="line">&#125;<span class="keyword">catch</span>(异常类型<span class="number">1</span> 异常的变量名<span class="number">1</span>)&#123;</span><br><span class="line">  <span class="comment">// 程序代码</span></span><br><span class="line">&#125;<span class="keyword">catch</span>(异常类型<span class="number">2</span> 异常的变量名<span class="number">2</span>)&#123;</span><br><span class="line">  <span class="comment">// 程序代码</span></span><br><span class="line">&#125;<span class="keyword">finally</span>&#123;</span><br><span class="line">  <span class="comment">// 程序代码</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="throws-throw-关键字"><a href="#throws-throw-关键字" class="headerlink" title="throws/throw 关键字"></a>throws/throw 关键字</h1><div class="note warning flat"><p>如果一个方法没有捕获到一个检查性异常，那么该方法必须使用 throws 关键字来声明。throws 关键字放在方法签名的尾部。<br>也可以使用 throw 关键字抛出一个异常，无论它是新实例化的还是刚捕获到的</p></div><p>下面方法的声明抛出一个 RemoteException 异常：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">className</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deposit</span><span class="params">(<span class="keyword">double</span> amount)</span> <span class="keyword">throws</span> RemoteException</span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="comment">// Method implementation</span></span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> RemoteException();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//Remainder of class definition</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>一个方法可以声明抛出多个异常，多个异常之间用逗号隔开。<br>例如，下面的方法声明抛出 RemoteException 和 InsufficientFundsException： </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">className</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">withdraw</span><span class="params">(<span class="keyword">double</span> amount)</span> <span class="keyword">throws</span> RemoteException,</span></span><br><span class="line"><span class="function">                              InsufficientFundsException</span></span><br><span class="line"><span class="function">   </span>&#123;</span><br><span class="line">       <span class="comment">// Method implementation</span></span><br><span class="line">   &#125;</span><br><span class="line">   <span class="comment">//Remainder of class definition</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="声明自定义异常"><a href="#声明自定义异常" class="headerlink" title="声明自定义异常"></a>声明自定义异常</h1><ul><li>在 Java 中你可以自定义异常。编写自己的异常类时需要记住下面的几点。<ul><li>所有异常都必须是 Throwable 的子类。</li><li>如果希望写一个检查性异常类，则需要继承 Exception 类。</li><li>如果你想写一个运行时异常类，那么需要继承 RuntimeException 类。</li></ul></li></ul><p>可以像下面这样定义自己的异常类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyException</span> <span class="keyword">extends</span> <span class="title">Exception</span></span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="note info flat"><p>以下实例是一个银行账户的模拟，通过银行卡的号码完成识别，可以进行存钱和取钱的操作</p></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// 文件名InsufficientFundsException.java</span></span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//自定义异常类，继承Exception类</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">InsufficientFundsException</span> <span class="keyword">extends</span> <span class="title">Exception</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">  <span class="comment">//此处的amount用来储存当出现异常（取出钱多于余额时）所缺乏的钱</span></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">double</span> amount;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="title">InsufficientFundsException</span><span class="params">(<span class="keyword">double</span> amount)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.amount = amount;</span><br><span class="line">  &#125; </span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">getAmount</span><span class="params">()</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> amount;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>为了展示如何使用我们自定义的异常类，</p><div class="note info flat"><p>在下面的 CheckingAccount 类中包含一个 withdraw() 方法抛出一个 InsufficientFundsException 异常</p></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">/ 文件名称 CheckingAccount.java</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//此类模拟银行账户</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CheckingAccount</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">  <span class="comment">//balance为余额，number为卡号</span></span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">double</span> balance;</span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">int</span> number;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="title">CheckingAccount</span><span class="params">(<span class="keyword">int</span> number)</span></span></span><br><span class="line"><span class="function">   </span>&#123;</span><br><span class="line">      <span class="keyword">this</span>.number = number;</span><br><span class="line">   &#125;</span><br><span class="line">  <span class="comment">//方法：存钱</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deposit</span><span class="params">(<span class="keyword">double</span> amount)</span></span></span><br><span class="line"><span class="function">   </span>&#123;</span><br><span class="line">      balance += amount;</span><br><span class="line">   &#125;</span><br><span class="line">  <span class="comment">//方法：取钱</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">withdraw</span><span class="params">(<span class="keyword">double</span> amount)</span> <span class="keyword">throws</span></span></span><br><span class="line"><span class="function">                              InsufficientFundsException</span></span><br><span class="line"><span class="function">   </span>&#123;</span><br><span class="line">      <span class="keyword">if</span>(amount &lt;= balance)</span><br><span class="line">      &#123;</span><br><span class="line">         balance -= amount;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">      &#123;</span><br><span class="line">         <span class="keyword">double</span> needs = amount - balance;</span><br><span class="line">         <span class="keyword">throw</span> <span class="keyword">new</span> InsufficientFundsException(needs);</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">  <span class="comment">//方法：返回余额</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">getBalance</span><span class="params">()</span></span></span><br><span class="line"><span class="function">   </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> balance;</span><br><span class="line">   &#125;</span><br><span class="line">  <span class="comment">//方法：返回卡号</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getNumber</span><span class="params">()</span></span></span><br><span class="line"><span class="function">   </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> number;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="note info flat"><p>下面的 BankDemo 程序示范了如何调用 CheckingAccount 类的 deposit() 和 withdraw() 方法</p></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//文件名称 BankDemo.java</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BankDemo</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String [] args)</span></span></span><br><span class="line"><span class="function">   </span>&#123;</span><br><span class="line">      CheckingAccount c = <span class="keyword">new</span> CheckingAccount(<span class="number">101</span>);</span><br><span class="line">      System.out.println(<span class="string">&quot;Depositing $500...&quot;</span>);</span><br><span class="line">      c.deposit(<span class="number">500.00</span>);</span><br><span class="line">      <span class="keyword">try</span></span><br><span class="line">      &#123;</span><br><span class="line">         System.out.println(<span class="string">&quot;\nWithdrawing $100...&quot;</span>);</span><br><span class="line">         c.withdraw(<span class="number">100.00</span>);</span><br><span class="line">         System.out.println(<span class="string">&quot;\nWithdrawing $600...&quot;</span>);</span><br><span class="line">         c.withdraw(<span class="number">600.00</span>);</span><br><span class="line">      &#125;<span class="keyword">catch</span>(InsufficientFundsException e)</span><br><span class="line">      &#123;</span><br><span class="line">         System.out.println(<span class="string">&quot;Sorry, but you are short $&quot;</span></span><br><span class="line">                                  + e.getAmount());</span><br><span class="line">         e.printStackTrace();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编译上面三个文件，并运行程序 BankDemo，得到结果如下所示： </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Depositing $<span class="number">500.</span>..</span><br><span class="line"></span><br><span class="line">Withdrawing $<span class="number">100.</span>..</span><br><span class="line"></span><br><span class="line">Withdrawing $<span class="number">600.</span>..</span><br><span class="line">Sorry, but you are <span class="keyword">short</span> $<span class="number">200.0</span></span><br><span class="line">InsufficientFundsException</span><br><span class="line">        at CheckingAccount.withdraw(CheckingAccount.java:<span class="number">25</span>)</span><br><span class="line">        at BankDemo.main(BankDemo.java:<span class="number">13</span>)</span><br></pre></td></tr></table></figure><h1 id="通用异常"><a href="#通用异常" class="headerlink" title="通用异常"></a>通用异常</h1><ul><li>在Java中定义了两种类型的异常和错误。<ul><li><strong>JVM(Java虚拟机) 异常</strong>：由 JVM 抛出的异常或错误。例如：NullPointerException 类，ArrayIndexOutOfBoundsException 类，ClassCastException 类。</li><li><strong>程序级异常</strong>：由程序或者API程序抛出的异常。例如 IllegalArgumentException 类，IllegalStateException 类。</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java👉集合框架</title>
      <link href="2021/01/05/%E5%90%8E%E7%AB%AF/Java/Java_%E9%9B%86%E5%90%88%E6%A1%86%E6%9E%B6/"/>
      <url>2021/01/05/%E5%90%8E%E7%AB%AF/Java/Java_%E9%9B%86%E5%90%88%E6%A1%86%E6%9E%B6/</url>
      
        <content type="html"><![CDATA[<h1 id="集合框架"><a href="#集合框架" class="headerlink" title="集合框架"></a>集合框架</h1><div class="note danger flat"><p>集合框架图||<a href="https://www.cnblogs.com/TestMa/p/10641367.html">深入了解Java集合框架</a></p></div><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2021/01/05/685c04437c657dd576d1f344e6150f1d.png"></p><div class="note danger flat"><p>简化图</p></div><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2021/01/05/ccf8d005b77641306e954349b9a0de3e.png"></p><ul><li>从上面的集合框架图可以看到，Java 集合框架主要包括两种类型的容器，一种是<strong>集合</strong>（Collection），<strong>存储一个元素集合</strong>，另一种是<strong>图</strong>（Map），<strong>存储键/值对映射</strong></li><li>所有集合类都位于<code>java.util</code>包下。Java的集合类主要由两个接口派生而出：<code>Collection</code>和<code>Map</code>，Collection和Map是Java集合框架的根接口，这两个接口又包含了一些子接口或实现类</li><li>集合接口：6个接口（短虚线表示），表示不同集合类型，是集合框架的基础。</li><li>抽象类：5个抽象类（长虚线表示），对集合接口的部分实现。可扩展为自定义集合类。</li><li>实现类：8个实现类（实线表示），对接口的具体实现。</li><li>Collection 接口是一组允许重复的对象。</li><li>Set 接口继承 Collection，集合元素不重复。</li><li>List 接口继承 Collection，允许重复，维护元素插入顺序。</li><li> Map接口是键－值对象，与Collection接口没有什么关系</li><li>Set、List和Map可以看做集合的三大类：<ul><li><strong>List集合是有序集合，集合中的元素可以重复，访问集合中的元素可以根据元素的索引来访问。</strong></li><li><strong>Set集合是无序集合，集合中的元素不可以重复，访问集合中的元素只能根据元素本身来访问（也是集合里元素不允许重复的原因）</strong>。</li><li><strong>Map集合中保存Key-value对形式的元素，访问时只能根据每项元素的key来访问其value。</strong></li></ul></li></ul><div class="note danger flat"><p>总体分析</p></div><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2021/01/05/d7f5c005f0eb6a26f00383daff53a164.png"></p><ul><li><p>看上面的框架图，先抓住它的主干，即<code>Collection</code>和<code>Map</code>。</p></li><li><p>Collection是一个接口，是高度抽象出来的集合，<strong>它包含了集合的基本操作和属性</strong>。Collection包含了<code>List</code>和<code>Set</code>两大分支。</p><ul><li>List是一个有序的队列，每一个元素都有它的索引。第一个元素的索引值是0。List的实现类有LinkedList, ArrayList, Vector, Stack。</li><li>Set是一个不允许有重复元素的集合。Set的实现类有HastSet和TreeSet。HashSet依赖于HashMap，它实际上是通过HashMap实现的；TreeSet依赖于TreeMap，它实际上是通过TreeMap实现的。</li></ul></li><li><p>Map是一个映射接口，即key-value键值对。Map中的每一个元素包含“一个key”和“key对应的value”。AbstractMap是个抽象类，它实现了Map接口中的大部分API。而HashMap，TreeMap，WeakHashMap都是继承于AbstractMap。Hashtable虽然继承于Dictionary，但它实现了Map接口。</p></li><li><p>接下来，再看Iterator。它是遍历集合的工具，即我们通常通过Iterator迭代器来遍历集合。我们说Collection依赖于Iterator，是因为Collection的实现类都要实现iterator()函数，返回一个Iterator对象。ListIterator是专门为遍历List而存在的。</p></li><li><p>再看Enumeration，它是JDK 1.0引入的抽象类。作用和Iterator一样，也是遍历集合；但是Enumeration的功能要比Iterator少。在上面的框图中，Enumeration只能在Hashtable, Vector, Stack中使用。</p></li><li><p>最后，看Arrays和Collections。它们是操作数组、集合的两个工具类。</p></li></ul><h1 id="ArrayList"><a href="#ArrayList" class="headerlink" title="ArrayList"></a>ArrayList</h1><div class="note success flat"><p>ArrayList 类是一个可以动态修改的数组，与普通数组的区别就是它是没有固定大小的限制，我们可以添加或删除元素。</p></div><p><strong>ArrayList 继承了 AbstractList ，并实现了 List 接口。</strong><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2021/01/05/d914809ba7014d922c1d1b3e28eef8e1.png"><br>ArrayList 类位于 java.util 包中，使用前需要引入它，语法格式如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList; <span class="comment">// 引入 ArrayList 类</span></span><br><span class="line">ArrayList&lt;E&gt; objectName =<span class="keyword">new</span> ArrayList&lt;&gt;();　 <span class="comment">// 初始化</span></span><br></pre></td></tr></table></figure><ul><li><strong>E</strong>: 泛型数据类型，用于设置 <strong>objectName</strong> 的数据类型，只能为引用数据类型。</li><li><strong>objectName</strong>: 对象名。</li></ul><h2 id="添加元素"><a href="#添加元素" class="headerlink" title="添加元素"></a>添加元素</h2><div class="note success flat"><p>添加元素到 ArrayList 可以使用 <code>add()</code> 方法:</p></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RunoobTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        ArrayList&lt;String&gt; sites = <span class="keyword">new</span> ArrayList&lt;String&gt;();</span><br><span class="line">        sites.add(<span class="string">&quot;Google&quot;</span>);</span><br><span class="line">        sites.add(<span class="string">&quot;Runoob&quot;</span>);</span><br><span class="line">        sites.add(<span class="string">&quot;Taobao&quot;</span>);</span><br><span class="line">        sites.add(<span class="string">&quot;Weibo&quot;</span>);</span><br><span class="line">        System.out.println(sites);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">[Google, Runoob, Taobao, Weibo]</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h2 id="访问元素"><a href="#访问元素" class="headerlink" title="访问元素"></a>访问元素</h2><div class="note success flat"><p>访问 ArrayList中的元素 可以使用 <code>get()</code> 方法</p></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RunoobTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        ArrayList&lt;String&gt; sites = <span class="keyword">new</span> ArrayList&lt;String&gt;();</span><br><span class="line">        sites.add(<span class="string">&quot;Google&quot;</span>);</span><br><span class="line">        sites.add(<span class="string">&quot;Runoob&quot;</span>);</span><br><span class="line">        sites.add(<span class="string">&quot;Taobao&quot;</span>);</span><br><span class="line">        sites.add(<span class="string">&quot;Weibo&quot;</span>);</span><br><span class="line">        System.out.println(sites.get(<span class="number">1</span>));  <span class="comment">// 访问第二个元素</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">Runoob</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h2 id="修改元素"><a href="#修改元素" class="headerlink" title="修改元素"></a>修改元素</h2><div class="note success flat"><p>修改 ArrayList元素 可以使用 <code>set()</code> 方法</p></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RunoobTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        ArrayList&lt;String&gt; sites = <span class="keyword">new</span> ArrayList&lt;String&gt;();</span><br><span class="line">        sites.add(<span class="string">&quot;Google&quot;</span>);</span><br><span class="line">        sites.add(<span class="string">&quot;Runoob&quot;</span>);</span><br><span class="line">        sites.add(<span class="string">&quot;Taobao&quot;</span>);</span><br><span class="line">        sites.add(<span class="string">&quot;Weibo&quot;</span>);</span><br><span class="line">        sites.set(<span class="number">2</span>, <span class="string">&quot;Wiki&quot;</span>); <span class="comment">// 第一个参数为索引位置，第二个为要修改的值</span></span><br><span class="line">        System.out.println(sites);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">[Google, Runoob, Wiki, Weibo]</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h2 id="删除元素"><a href="#删除元素" class="headerlink" title="删除元素"></a>删除元素</h2><div class="note success flat"><p>删除ArrayList 中的元素可以使用 <code>remove()</code> 方法</p></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RunoobTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        ArrayList&lt;String&gt; sites = <span class="keyword">new</span> ArrayList&lt;String&gt;();</span><br><span class="line">        sites.add(<span class="string">&quot;Google&quot;</span>);</span><br><span class="line">        sites.add(<span class="string">&quot;Runoob&quot;</span>);</span><br><span class="line">        sites.add(<span class="string">&quot;Taobao&quot;</span>);</span><br><span class="line">        sites.add(<span class="string">&quot;Weibo&quot;</span>);</span><br><span class="line">        sites.remove(<span class="number">3</span>); <span class="comment">// 删除第四个元素</span></span><br><span class="line">        System.out.println(sites);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">[Google, Runoob, Taobao]</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h2 id="计算大小"><a href="#计算大小" class="headerlink" title="计算大小"></a>计算大小</h2><div class="note success flat"><p>计算ArrayList 中的元素数量可以使用 <code>size()</code> 方法</p></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RunoobTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        ArrayList&lt;String&gt; sites = <span class="keyword">new</span> ArrayList&lt;String&gt;();</span><br><span class="line">        sites.add(<span class="string">&quot;Google&quot;</span>);</span><br><span class="line">        sites.add(<span class="string">&quot;Runoob&quot;</span>);</span><br><span class="line">        sites.add(<span class="string">&quot;Taobao&quot;</span>);</span><br><span class="line">        sites.add(<span class="string">&quot;Weibo&quot;</span>);</span><br><span class="line">        System.out.println(sites.size());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">4</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h2 id="迭代数组"><a href="#迭代数组" class="headerlink" title="迭代数组"></a>迭代数组</h2><div class="note success flat"><p>我们可以使用 for 来迭代数组列表中的元素：</p></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">mport java.util.ArrayList;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RunoobTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        ArrayList&lt;String&gt; sites = <span class="keyword">new</span> ArrayList&lt;String&gt;();</span><br><span class="line">        sites.add(<span class="string">&quot;Google&quot;</span>);</span><br><span class="line">        sites.add(<span class="string">&quot;Runoob&quot;</span>);</span><br><span class="line">        sites.add(<span class="string">&quot;Taobao&quot;</span>);</span><br><span class="line">        sites.add(<span class="string">&quot;Weibo&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; sites.size(); i++) &#123;</span><br><span class="line">            System.out.println(sites.get(i));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">Google</span></span><br><span class="line"><span class="comment">Runoob</span></span><br><span class="line"><span class="comment">Taobao</span></span><br><span class="line"><span class="comment">Weibo</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><div class="note success flat"><p>也可以使用<code>for-each</code>来迭代元素：</p></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RunoobTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        ArrayList&lt;String&gt; sites = <span class="keyword">new</span> ArrayList&lt;String&gt;();</span><br><span class="line">        sites.add(<span class="string">&quot;Google&quot;</span>);</span><br><span class="line">        sites.add(<span class="string">&quot;Runoob&quot;</span>);</span><br><span class="line">        sites.add(<span class="string">&quot;Taobao&quot;</span>);</span><br><span class="line">        sites.add(<span class="string">&quot;Weibo&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (String i : sites) &#123;</span><br><span class="line">            System.out.println(i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="ArrayList排序"><a href="#ArrayList排序" class="headerlink" title="ArrayList排序"></a>ArrayList排序</h2><div class="note success flat"><p>Collections 类也是一个非常有用的类，位于 java.util 包中，提供的 sort() 方法可以对字符或数字列表进行排序。</p></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Collections;  <span class="comment">// 引入 Collections 类</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RunoobTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        ArrayList&lt;Integer&gt; myNumbers = <span class="keyword">new</span> ArrayList&lt;Integer&gt;();</span><br><span class="line">        myNumbers.add(<span class="number">33</span>);</span><br><span class="line">        myNumbers.add(<span class="number">15</span>);</span><br><span class="line">        myNumbers.add(<span class="number">20</span>);</span><br><span class="line">        myNumbers.add(<span class="number">34</span>);</span><br><span class="line">        myNumbers.add(<span class="number">8</span>);</span><br><span class="line">        myNumbers.add(<span class="number">12</span>);</span><br><span class="line"></span><br><span class="line">        Collections.sort(myNumbers);  <span class="comment">// 数字排序</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i : myNumbers) &#123;</span><br><span class="line">            System.out.println(i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">8  12  15  20   33  34</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h2 id="ArrayList方法"><a href="#ArrayList方法" class="headerlink" title="ArrayList方法"></a>ArrayList方法</h2><table><thead><tr><th align="center">方法</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">add()</td><td align="center">将元素插入到指定位置的 arraylist 中</td></tr><tr><td align="center">addAll()</td><td align="center">添加集合中的所有元素到 arraylist 中</td></tr><tr><td align="center">clear()</td><td align="center">删除 arraylist 中的所有元素</td></tr><tr><td align="center">clone()</td><td align="center">复制一份 arraylist</td></tr><tr><td align="center">contains()</td><td align="center">判断元素是否在 arraylist</td></tr><tr><td align="center">get()</td><td align="center">通过索引值获取 arraylist 中的元素</td></tr><tr><td align="center">indexOf()</td><td align="center">返回 arraylist 中元素的索引值</td></tr><tr><td align="center">removeAll()</td><td align="center">删除存在于指定集合中的 arraylist 里的所有元素</td></tr><tr><td align="center">remove()</td><td align="center">删除 arraylist 里的单个元素</td></tr><tr><td align="center">size()</td><td align="center">返回 arraylist 里元素数量</td></tr><tr><td align="center">isEmpty()</td><td align="center">判断 arraylist 是否为空</td></tr><tr><td align="center">subList()</td><td align="center">截取部分 arraylist 的元素</td></tr><tr><td align="center">set()</td><td align="center">替换 arraylist 中指定索引的元素</td></tr><tr><td align="center">sort()</td><td align="center">对 arraylist 元素进行排序</td></tr><tr><td align="center">toArray()</td><td align="center">将 arraylist 转换为数组</td></tr><tr><td align="center">toString()</td><td align="center">将 arraylist 转换为字符串</td></tr><tr><td align="center">ensureCapacity()</td><td align="center">设置指定容量大小的 arraylist</td></tr><tr><td align="center">lastIndexOf()</td><td align="center">返回指定元素在 arraylist 中最后一次出现的位置</td></tr><tr><td align="center">retainAll()</td><td align="center">保留 arraylist 中在指定集合中也存在的那些元素</td></tr><tr><td align="center">containsAll()</td><td align="center">查看 arraylist 是否包含指定集合中的所有元素</td></tr><tr><td align="center">trimToSize()</td><td align="center">将 arraylist 中的容量调整为数组中的元素个数</td></tr><tr><td align="center">removeRange()</td><td align="center">删除 arraylist 中指定索引之间存在的元素</td></tr><tr><td align="center">replaceAll()</td><td align="center">将给定的操作内容替换掉数组中每一个元素</td></tr><tr><td align="center">removeIf()</td><td align="center">删除所有满足特定条件的 arraylist 元素</td></tr><tr><td align="center">forEach()</td><td align="center">遍历 arraylist 中每一个元素并执行特定操作</td></tr></tbody></table><div class="note default flat"><p>更多 API 方法可以查看：<a href="https://www.runoob.com/manual/jdk11api/java.base/java/util/ArrayList.html">https://www.runoob.com/manual/jdk11api/java.base/java/util/ArrayList.html</a></p></div><h1 id="LinkedList"><a href="#LinkedList" class="headerlink" title="LinkedList"></a>LinkedList</h1><div class="note success flat"><p>链表（Linked list）是一种常见的基础数据结构，是一种线性表，但是并不会按线性的顺序存储数据，而是在每一个节点里存到下一个节点的地址。</p></div><ul><li><p>链表可分为单向链表和双向链表。</p><ul><li>一个单向链表包含两个值: 当前节点的值和一个指向下一个节点的链接。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2021/01/05/ee35ed2e420ca851beebe681feaf885b.png"></li><li>一个双向链表有三个整数值: 数值、向后的节点链接、向前的节点链接。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2021/01/05/5d890c3ad9361bcf233c0a89371fa7eb.png"></li></ul></li><li><p>以下情况使用 ArrayList :</p><ul><li>频繁访问列表中的某一个元素。</li><li>只需要在列表末尾进行添加和删除元素操作。</li></ul></li><li><p>以下情况使用 LinkedList :</p><ul><li>你需要通过循环迭代来访问列表中的某些元素。</li><li>需要频繁的在列表开头、中间、末尾等位置进行添加和删除元素操作。</li></ul></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2021/01/05/dc8743019304d703d6e0cdea8c059585.png"></p><p> LinkedList 类位于 java.util 包中，使用前需要引入它，语法格式如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 引入 LinkedList 类</span></span><br><span class="line"><span class="keyword">import</span> java.util.LinkedList; </span><br><span class="line"></span><br><span class="line">LinkedList&lt;E&gt; list = <span class="keyword">new</span> LinkedList&lt;E&gt;();   <span class="comment">// 普通创建方法</span></span><br><span class="line">或者</span><br><span class="line">LinkedList&lt;E&gt; list = <span class="keyword">new</span> LinkedList(Collection&lt;? extends E&gt; c); <span class="comment">// 使用集合创建链表</span></span><br></pre></td></tr></table></figure><h2 id="添加元素-1"><a href="#添加元素-1" class="headerlink" title="添加元素"></a>添加元素</h2><div class="note success flat"><p>LinkedList使用<code>add()</code>、<code>addFirst()</code>、<code>addLast()</code>添加元素</p></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.LinkedList;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RunoobTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        LinkedList&lt;String&gt; sites = <span class="keyword">new</span> LinkedList&lt;String&gt;();</span><br><span class="line">        sites.add(<span class="string">&quot;Google&quot;</span>);</span><br><span class="line">        sites.add(<span class="string">&quot;Runoob&quot;</span>);</span><br><span class="line">        sites.add(<span class="string">&quot;Taobao&quot;</span>);</span><br><span class="line">        <span class="comment">// 使用 addFirst() 在头部添加元素</span></span><br><span class="line">        sites.addFirst(<span class="string">&quot;Wiki&quot;</span>);</span><br><span class="line">        <span class="comment">// 使用 addLast() 在尾部添加元素</span></span><br><span class="line">        sites.addLast(<span class="string">&quot;Wiki&quot;</span>);</span><br><span class="line">        System.out.println(sites);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">[wiki,Google,Runoob,Taobao,wiki]</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h2 id="移除元素"><a href="#移除元素" class="headerlink" title="移除元素"></a>移除元素</h2><div class="note success flat"><p>LinkedList使用<code>removeFirst</code>、<code>removeLast</code>移除元素</p></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 引入 LinkedList 类</span></span><br><span class="line"><span class="keyword">import</span> java.util.LinkedList;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RunoobTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        LinkedList&lt;String&gt; sites = <span class="keyword">new</span> LinkedList&lt;String&gt;();</span><br><span class="line">        sites.add(<span class="string">&quot;Google&quot;</span>);</span><br><span class="line">        sites.add(<span class="string">&quot;Runoob&quot;</span>);</span><br><span class="line">        sites.add(<span class="string">&quot;Taobao&quot;</span>);</span><br><span class="line">        sites.add(<span class="string">&quot;Weibo&quot;</span>);</span><br><span class="line">        <span class="comment">// 使用 removeFirst() 移除头部元素</span></span><br><span class="line">        sites.removeFirst();</span><br><span class="line">        <span class="comment">// 使用 removeLast() 移除尾部元素</span></span><br><span class="line">        sites.removeLast();</span><br><span class="line">        System.out.println(sites);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">[Runoob,Taobao]</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h2 id="获取元素"><a href="#获取元素" class="headerlink" title="获取元素"></a>获取元素</h2><div class="note success flat"><p>LinkedList使用<code>getFirst()</code>、<code>getLast()</code>获取元素</p></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 引入 LinkedList 类</span></span><br><span class="line"><span class="keyword">import</span> java.util.LinkedList;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RunoobTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        LinkedList&lt;String&gt; sites = <span class="keyword">new</span> LinkedList&lt;String&gt;();</span><br><span class="line">        sites.add(<span class="string">&quot;Google&quot;</span>);</span><br><span class="line">        sites.add(<span class="string">&quot;Runoob&quot;</span>);</span><br><span class="line">        sites.add(<span class="string">&quot;Taobao&quot;</span>);</span><br><span class="line">        sites.add(<span class="string">&quot;Weibo&quot;</span>);</span><br><span class="line">        <span class="comment">// 使用 getFirst() 获取头部元素</span></span><br><span class="line">        System.out.println(sites.getFirst()); <span class="comment">//Google</span></span><br><span class="line">         <span class="comment">// 使用 getLast() 获取尾部元素</span></span><br><span class="line">        System.out.println(sites.getLast()); <span class="comment">//weibo</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="迭代元素"><a href="#迭代元素" class="headerlink" title="迭代元素"></a>迭代元素</h2><div class="note success flat"><p>我们可以使用 for 配合 size() 方法来迭代列表中的元素：</p></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 引入 LinkedList 类</span></span><br><span class="line"><span class="keyword">import</span> java.util.LinkedList;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RunoobTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        LinkedList&lt;String&gt; sites = <span class="keyword">new</span> LinkedList&lt;String&gt;();</span><br><span class="line">        sites.add(<span class="string">&quot;Google&quot;</span>);</span><br><span class="line">        sites.add(<span class="string">&quot;Runoob&quot;</span>);</span><br><span class="line">        sites.add(<span class="string">&quot;Taobao&quot;</span>);</span><br><span class="line">        sites.add(<span class="string">&quot;Weibo&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> size = sites.size(), i = <span class="number">0</span>; i &lt; size; i++) &#123;</span><br><span class="line">            System.out.println(sites.get(i));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">Google</span></span><br><span class="line"><span class="comment">Runoob</span></span><br><span class="line"><span class="comment">Taobao</span></span><br><span class="line"><span class="comment">Weibo</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><div class="note success flat"><p>也可以使用 for-each 来迭代元素：</p></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 引入 LinkedList 类</span></span><br><span class="line"><span class="keyword">import</span> java.util.LinkedList;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RunoobTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        LinkedList&lt;String&gt; sites = <span class="keyword">new</span> LinkedList&lt;String&gt;();</span><br><span class="line">        sites.add(<span class="string">&quot;Google&quot;</span>);</span><br><span class="line">        sites.add(<span class="string">&quot;Runoob&quot;</span>);</span><br><span class="line">        sites.add(<span class="string">&quot;Taobao&quot;</span>);</span><br><span class="line">        sites.add(<span class="string">&quot;Weibo&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (String i : sites) &#123;</span><br><span class="line">            System.out.println(i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="LinkedList方法"><a href="#LinkedList方法" class="headerlink" title="LinkedList方法"></a>LinkedList方法</h2><table><thead><tr><th align="center">方法</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">public boolean add(E e)</td><td align="center">链表末尾添加元素，返回是否成功，成功为 true，失败为 false</td></tr><tr><td align="center">public void add(int index, E element)</td><td align="center">向指定位置插入元素</td></tr><tr><td align="center">public boolean addAll(Collection c)</td><td align="center">将一个集合的所有元素添加到链表后面，返回是否成功，成功为 true，失败为 false</td></tr><tr><td align="center">public boolean addAll(int index, Collection c)</td><td align="center">将一个集合的所有元素添加到链表的指定位置后面，返回是否成功，成功为 true，失败为 false</td></tr><tr><td align="center">public void addFirst(E e)</td><td align="center">元素添加到头部</td></tr><tr><td align="center">public void addLast(E e)</td><td align="center">元素添加到尾部</td></tr><tr><td align="center">public boolean offer(E e)</td><td align="center">向链表末尾添加元素，返回是否成功，成功为 true，失败为 false</td></tr><tr><td align="center">public boolean offerFirst(E e)</td><td align="center">头部插入元素，返回是否成功，成功为 true，失败为 false</td></tr><tr><td align="center">public boolean offerLast(E e)</td><td align="center">尾部插入元素，返回是否成功，成功为 true，失败为 false</td></tr><tr><td align="center">public void clear()</td><td align="center">清空链表</td></tr><tr><td align="center">public E removeFirst()</td><td align="center">删除并返回第一个元素</td></tr><tr><td align="center">public E removeLast()</td><td align="center">删除并返回最后一个元素</td></tr><tr><td align="center">public boolean remove(Object o)</td><td align="center">删除某一元素，返回是否成功，成功为 true，失败为 false</td></tr><tr><td align="center">public E remove(int index)</td><td align="center">删除指定位置的元素</td></tr><tr><td align="center">public E poll()</td><td align="center">删除并返回第一个元素</td></tr><tr><td align="center">public E remove()</td><td align="center">删除并返回第一个元素</td></tr><tr><td align="center">public boolean contains(Object o)</td><td align="center">判断是否含有某一元素</td></tr><tr><td align="center">public E get(int index)</td><td align="center">返回指定位置的元素</td></tr><tr><td align="center">public E getFirst()</td><td align="center">返回第一个元素</td></tr><tr><td align="center">public E getLast()</td><td align="center">返回最后一个元素</td></tr><tr><td align="center">public int indexOf(Object o)</td><td align="center">查找指定元素从前往后第一次出现的索引</td></tr><tr><td align="center">public int lastIndexOf(Object o)</td><td align="center">查找指定元素最后一次出现的索引</td></tr><tr><td align="center">public E peek()</td><td align="center">返回第一个元素</td></tr><tr><td align="center">public E element()</td><td align="center">返回第一个元素</td></tr><tr><td align="center">public E peekFirst()</td><td align="center">返回头部元素</td></tr><tr><td align="center">public E peekLast()</td><td align="center">返回尾部元素</td></tr><tr><td align="center">public E set(int index, E element)</td><td align="center">设置指定位置的元素</td></tr><tr><td align="center">public Object clone()</td><td align="center">克隆该列表</td></tr><tr><td align="center">public Iterator descendingIterator()</td><td align="center">返回倒序迭代器</td></tr><tr><td align="center">public int size()</td><td align="center">返回链表元素个数</td></tr><tr><td align="center">public ListIterator listIterator(int index)</td><td align="center">返回从指定位置开始到末尾的迭代器</td></tr><tr><td align="center">public Object[] toArray()</td><td align="center">返回一个由链表元素组成的数组</td></tr><tr><td align="center">public T[] toArray(T[] a)</td><td align="center">返回一个由链表元素转换类型而成的数组</td></tr></tbody></table><div class="note default flat"><p>更多 API 方法可以查看：<a href="https://www.runoob.com/manual/jdk11api/java.base/java/util/LinkedList.html">https://www.runoob.com/manual/jdk11api/java.base/java/util/LinkedList.html</a></p></div><h1 id="HashSet"><a href="#HashSet" class="headerlink" title="HashSet"></a>HashSet</h1><ul><li>HashSet 基于 HashMap 来实现的，是一个不允许有重复元素的集合。</li><li>HashSet 允许有 null 值。</li><li>HashSet 是无序的，即不会记录插入的顺序。</li><li>HashSet 不是线程安全的， 如果多个线程尝试同时修改 HashSet，则最终结果是不确定的。 您必须在多线程访问时显式同步对 HashSet 的并发访问。</li><li>HashSet 实现了 Set 接口。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2021/01/05/1a20722c01c85d8d915d58058be7407d.png"></li></ul><p>HashSet 类位于 java.util 包中，使用前需要引入它，语法格式如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.HashSet; <span class="comment">// 引入 HashSet 类</span></span><br><span class="line">HashSet&lt;String&gt; sites = <span class="keyword">new</span> HashSet&lt;String&gt;();</span><br></pre></td></tr></table></figure><h2 id="添加元素-2"><a href="#添加元素-2" class="headerlink" title="添加元素"></a>添加元素</h2><div class="note success flat"><p>HashSet 类提供类很多有用的方法，添加元素可以使用 <code>add()</code> 方法:</p></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 引入 HashSet 类      </span></span><br><span class="line"><span class="keyword">import</span> java.util.HashSet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RunoobTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    HashSet&lt;String&gt; sites = <span class="keyword">new</span> HashSet&lt;String&gt;();</span><br><span class="line">        sites.add(<span class="string">&quot;Google&quot;</span>);</span><br><span class="line">        sites.add(<span class="string">&quot;Runoob&quot;</span>);</span><br><span class="line">        sites.add(<span class="string">&quot;Taobao&quot;</span>);</span><br><span class="line">        sites.add(<span class="string">&quot;Zhihu&quot;</span>);</span><br><span class="line">        sites.add(<span class="string">&quot;Runoob&quot;</span>);  <span class="comment">// 重复的元素不会被添加</span></span><br><span class="line">        System.out.println(sites);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">[Google, Runoob, Zhihu, Taobao]</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h2 id="判断元素是否存在"><a href="#判断元素是否存在" class="headerlink" title="判断元素是否存在"></a>判断元素是否存在</h2><div class="note success flat"><p>我们可以使用<code> contains()</code> 方法来判断元素是否存在于集合当中:</p></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 引入 HashSet 类      </span></span><br><span class="line"><span class="keyword">import</span> java.util.HashSet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RunoobTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    HashSet&lt;String&gt; sites = <span class="keyword">new</span> HashSet&lt;String&gt;();</span><br><span class="line">        sites.add(<span class="string">&quot;Google&quot;</span>);</span><br><span class="line">        sites.add(<span class="string">&quot;Runoob&quot;</span>);</span><br><span class="line">        sites.add(<span class="string">&quot;Taobao&quot;</span>);</span><br><span class="line">        sites.add(<span class="string">&quot;Zhihu&quot;</span>);</span><br><span class="line">        sites.add(<span class="string">&quot;Runoob&quot;</span>);  <span class="comment">// 重复的元素不会被添加</span></span><br><span class="line">        System.out.println(sites.contains(<span class="string">&quot;Taobao&quot;</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">true</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h2 id="删除元素-1"><a href="#删除元素-1" class="headerlink" title="删除元素"></a>删除元素</h2><div class="note success flat"><p>我们可以使用 <code>remove()</code> 方法来删除集合中的元素:</p></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 引入 HashSet 类      </span></span><br><span class="line"><span class="keyword">import</span> java.util.HashSet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RunoobTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    HashSet&lt;String&gt; sites = <span class="keyword">new</span> HashSet&lt;String&gt;();</span><br><span class="line">        sites.add(<span class="string">&quot;Google&quot;</span>);</span><br><span class="line">        sites.add(<span class="string">&quot;Runoob&quot;</span>);</span><br><span class="line">        sites.add(<span class="string">&quot;Taobao&quot;</span>);</span><br><span class="line">        sites.add(<span class="string">&quot;Zhihu&quot;</span>);</span><br><span class="line">        sites.add(<span class="string">&quot;Runoob&quot;</span>);     <span class="comment">// 重复的元素不会被添加</span></span><br><span class="line">        sites.remove(<span class="string">&quot;Taobao&quot;</span>);  <span class="comment">// 删除元素，删除成功返回 true，否则为 false</span></span><br><span class="line">        System.out.println(sites);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*[Google, Runoob, Zhihu]*/</span></span><br></pre></td></tr></table></figure><div class="note success flat"><p>删除集合中所有元素可以使用<code> clear</code> 方法：</p></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 引入 HashSet 类      </span></span><br><span class="line"><span class="keyword">import</span> java.util.HashSet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RunoobTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    HashSet&lt;String&gt; sites = <span class="keyword">new</span> HashSet&lt;String&gt;();</span><br><span class="line">        sites.add(<span class="string">&quot;Google&quot;</span>);</span><br><span class="line">        sites.add(<span class="string">&quot;Runoob&quot;</span>);</span><br><span class="line">        sites.add(<span class="string">&quot;Taobao&quot;</span>);</span><br><span class="line">        sites.add(<span class="string">&quot;Zhihu&quot;</span>);</span><br><span class="line">        sites.add(<span class="string">&quot;Runoob&quot;</span>);     <span class="comment">// 重复的元素不会被添加</span></span><br><span class="line">        sites.clear();  </span><br><span class="line">        System.out.println(sites);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*[]*/</span></span><br></pre></td></tr></table></figure><h2 id="计算大小-1"><a href="#计算大小-1" class="headerlink" title="计算大小"></a>计算大小</h2><div class="note success flat"><p>如果要计算 HashSet 中的元素数量可以使用<code> size()</code> 方法：</p></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 引入 HashSet 类      </span></span><br><span class="line"><span class="keyword">import</span> java.util.HashSet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RunoobTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    HashSet&lt;String&gt; sites = <span class="keyword">new</span> HashSet&lt;String&gt;();</span><br><span class="line">        sites.add(<span class="string">&quot;Google&quot;</span>);</span><br><span class="line">        sites.add(<span class="string">&quot;Runoob&quot;</span>);</span><br><span class="line">        sites.add(<span class="string">&quot;Taobao&quot;</span>);</span><br><span class="line">        sites.add(<span class="string">&quot;Zhihu&quot;</span>);</span><br><span class="line">        sites.add(<span class="string">&quot;Runoob&quot;</span>);     <span class="comment">// 重复的元素不会被添加</span></span><br><span class="line">        System.out.println(sites.size());  </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//4</span></span><br></pre></td></tr></table></figure><h2 id="迭代HashSet"><a href="#迭代HashSet" class="headerlink" title="迭代HashSet"></a>迭代HashSet</h2><div class="note success flat"><p>可以使用<code> for-each</code> 来迭代 HashSet 中的元素。</p></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 引入 HashSet 类      </span></span><br><span class="line"><span class="keyword">import</span> java.util.HashSet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RunoobTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    HashSet&lt;String&gt; sites = <span class="keyword">new</span> HashSet&lt;String&gt;();</span><br><span class="line">        sites.add(<span class="string">&quot;Google&quot;</span>);</span><br><span class="line">        sites.add(<span class="string">&quot;Runoob&quot;</span>);</span><br><span class="line">        sites.add(<span class="string">&quot;Taobao&quot;</span>);</span><br><span class="line">        sites.add(<span class="string">&quot;Zhihu&quot;</span>);</span><br><span class="line">        sites.add(<span class="string">&quot;Runoob&quot;</span>);     <span class="comment">// 重复的元素不会被添加</span></span><br><span class="line">        <span class="keyword">for</span> (String i : sites) &#123;</span><br><span class="line">            System.out.println(i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">Google</span></span><br><span class="line"><span class="comment">Runoob</span></span><br><span class="line"><span class="comment">Zhihu</span></span><br><span class="line"><span class="comment">Taobao</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><div class="note default flat"><p>更多 API 方法可以查看：<a href="https://www.runoob.com/manual/jdk11api/java.base/java/util/HashSet.html">https://www.runoob.com/manual/jdk11api/java.base/java/util/HashSet.html</a></p></div><h1 id="Iterator"><a href="#Iterator" class="headerlink" title="Iterator"></a>Iterator</h1><p>Java Iterator（迭代器）不是一个集合，它是一种用于访问集合的方法，可用于迭代 ArrayList 和 HashSet 等集合。<br>Iterator 是 Java 迭代器最简单的实现，ListIterator 是 Collection API 中的接口， 它扩展了 Iterator 接口。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2021/01/05/9925157dd24badabae26cd47b73e0cb2.png"></p><ul><li>迭代器 it 的两个基本操作是 next 、hasNext 和 remove。<ul><li>调用 it.next() 会返回迭代器的下一个元素，并且更新迭代器的状态。</li><li>调用 it.hasNext() 用于检测集合中是否还有元素。</li><li>调用 it.remove() 将迭代器返回的元素删除。</li></ul></li></ul><p>Iterator 类位于 java.util 包中，使用前需要引入它，语法格式如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Iterator; <span class="comment">// 引入 Iterator 类</span></span><br></pre></td></tr></table></figure><h2 id="获取一个迭代器"><a href="#获取一个迭代器" class="headerlink" title="获取一个迭代器"></a>获取一个迭代器</h2><div class="note success flat"><p>集合想获取一个迭代器可以使用 iterator() 方法:</p></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 引入 ArrayList 和 Iterator 类</span></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Iterator;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RunoobTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 创建集合</span></span><br><span class="line">        ArrayList&lt;String&gt; sites = <span class="keyword">new</span> ArrayList&lt;String&gt;();</span><br><span class="line">        sites.add(<span class="string">&quot;Google&quot;</span>);</span><br><span class="line">        sites.add(<span class="string">&quot;Runoob&quot;</span>);</span><br><span class="line">        sites.add(<span class="string">&quot;Taobao&quot;</span>);</span><br><span class="line">        sites.add(<span class="string">&quot;Zhihu&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取迭代器</span></span><br><span class="line">        Iterator&lt;String&gt; it = sites.iterator();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 输出集合中的第一个元素</span></span><br><span class="line">        System.out.println(it.next());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*Google*/</span></span><br></pre></td></tr></table></figure><h2 id="循环集合元素"><a href="#循环集合元素" class="headerlink" title="循环集合元素"></a>循环集合元素</h2><div class="note success flat"><p>让迭代器 it 逐个返回集合中所有元素最简单的方法是使用 while 循环：</p></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 引入 ArrayList 和 Iterator 类</span></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Iterator;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RunoobTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 创建集合</span></span><br><span class="line">        ArrayList&lt;String&gt; sites = <span class="keyword">new</span> ArrayList&lt;String&gt;();</span><br><span class="line">        sites.add(<span class="string">&quot;Google&quot;</span>);</span><br><span class="line">        sites.add(<span class="string">&quot;Runoob&quot;</span>);</span><br><span class="line">        sites.add(<span class="string">&quot;Taobao&quot;</span>);</span><br><span class="line">        sites.add(<span class="string">&quot;Zhihu&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取迭代器</span></span><br><span class="line">        Iterator&lt;String&gt; it = sites.iterator();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 输出集合中的所有元素</span></span><br><span class="line">        <span class="keyword">while</span>(it.hasNext()) &#123;</span><br><span class="line">            System.out.println(it.next());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">Google</span></span><br><span class="line"><span class="comment">Runoob</span></span><br><span class="line"><span class="comment">Taobao</span></span><br><span class="line"><span class="comment">Zhihu</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java👉面向对象</title>
      <link href="2021/01/05/%E5%90%8E%E7%AB%AF/Java/Java_%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/"/>
      <url>2021/01/05/%E5%90%8E%E7%AB%AF/Java/Java_%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/</url>
      
        <content type="html"><![CDATA[<h1 id="面向对象"><a href="#面向对象" class="headerlink" title="面向对象"></a>面向对象</h1><p><strong>类</strong>实质上是封装对象<strong>属性</strong>和<strong>行为</strong>的载体，<strong>对象</strong>则是类抽象出来的一个<strong>实例</strong>,类是静态的概念，而对象则是一个动态的概念，因为只有运行时才给对象分配空间，对象才真正存在。</p><ul><li>面向对象：是一种通过对象的方式，把现实世界<strong>映射到计算机模型</strong>的一种编程方法。</li><li>面向过程：是把模型<strong>分解成一步一步</strong>的过程。</li></ul><div class="note info flat"><p>面向对象程序设计具有以下特点：</p></div><ol><li><code>封装性</code>：解决了数据的安全性问题。</li><li><code>继承性</code>：解决了代码的重用问题。</li><li><code>多态性</code>：解决了程序的扩展问题。</li></ol><h2 id="类和对象"><a href="#类和对象" class="headerlink" title="类和对象"></a>类和对象</h2><div class="note success flat"><p><strong>对象</strong>：对象是类的一个实例，有状态和行为。例如人的状态有名字、年龄，行为有吃饭、睡觉<br><strong>类</strong>：类是一个模板，它描述一类对象的行为和状态。</p></div><p>下图图中汽车为类（class），而具体的每个人车该类的对象（object），对象包含含来汽车的颜色、品牌、名称等：<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2021/01/05/13a287ae652fc586d28cbcc3f60fb5d5.png"></p><h3 id="类"><a href="#类" class="headerlink" title="类"></a>类</h3><ul><li><strong>类是一系列对象的抽象</strong>。</li><li>类是<strong>变量和方法的集合体</strong>。</li><li>类是Java中基本的<strong>结构单元</strong>。所有的Java语句均出现在类中，所有的方法均在类中定义。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Dog</span> </span>&#123;</span><br><span class="line">    String breed;</span><br><span class="line">    <span class="keyword">int</span> size;</span><br><span class="line">    String colour;</span><br><span class="line">    <span class="keyword">int</span> age;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">eat</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">sleep</span><span class="params">()</span></span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">name</span><span class="params">()</span></span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>一个类可以包含以下类型变量：<ul><li><strong>局部变量</strong>：在方法、构造方法或者语句块中定义的变量被称为局部变量。变量声明和初始化都是在方法中，方法结束后，变量就会自动销毁。</li><li><strong>成员变量</strong>：成员变量是定义在类中，方法体之外的变量。这种变量在创建对象的时候实例化。成员变量可以被类中方法、构造方法和特定类的语句块访问。</li><li><strong>类变量</strong>：类变量也声明在类中，方法体之外，但必须声明为 static 类型。</li></ul></li></ul><h3 id="构造方法"><a href="#构造方法" class="headerlink" title="构造方法"></a>构造方法</h3><ul><li>构造方法<strong>没有</strong>返回值,不需要写void,只用public声明。</li><li>构造方法名称要与<strong>本类的名称相同</strong>。</li><li>一旦为类编写构造方法,默认的构造方法将会被<strong>覆盖</strong>。</li><li>编写构造方法的目的是向对象<strong>传递参数</strong>(一般有参),以及对成员变量进行<strong>初始化</strong>(一般无参)。</li><li>构造方法同样支持方法<strong>重载</strong>。</li><li>构造方法不能被static,final,abstract,synchronized,native等修饰符修饰。</li><li>构造方法中只能使用成员变量，而且当参数与成员变量同名时，只能用关键字<strong>this</strong>指明当前对象。</li><li>构造方法不能<strong>被程序直接调用</strong>。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Apple</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> sum;</span><br><span class="line">String color;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Apple</span><span class="params">()</span></span>&#123;&#125;;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Apple</span><span class="params">(<span class="keyword">int</span> sum)</span></span>&#123;&#125;;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Apple</span><span class="params">(String color)</span></span>&#123;&#125;;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Apple</span><span class="params">(<span class="keyword">int</span> sum,String color)</span></span>&#123;&#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">createApple</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">Apple apple1 = <span class="keyword">new</span> Apple();</span><br><span class="line">Apple apple2 = <span class="keyword">new</span> Apple(<span class="number">1</span>);</span><br><span class="line">Apple apple3 = <span class="keyword">new</span> Apple(<span class="string">&quot;red&quot;</span>);</span><br><span class="line">Apple apple4 = <span class="keyword">new</span> Apple(<span class="number">2</span>,<span class="string">&quot;color&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="创建对象"><a href="#创建对象" class="headerlink" title="创建对象"></a>创建对象</h3><div class="note success flat"><p>象是根据类创建的。在Java中，使用关键字 new 来创建一个新的对象。创建对象需要以下三步：</p></div><ul><li><strong>声明</strong>：声明一个对象，包括对象名称和对象类型。</li><li><strong>实例化</strong>：使用关键字 <code>new</code> 来创建一个对象。</li><li><strong>初始化</strong>：使用 new 创建对象时，会调用构造方法初始化对象。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Puppy</span></span>&#123;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="title">Puppy</span><span class="params">(String name)</span></span>&#123;</span><br><span class="line">      <span class="comment">//这个构造器仅有一个参数：name</span></span><br><span class="line">      System.out.println(<span class="string">&quot;小狗的名字是 : &quot;</span> + name ); </span><br><span class="line">   &#125;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">      <span class="comment">// 下面的语句将创建一个Puppy对象</span></span><br><span class="line">      Puppy myPuppy = <span class="keyword">new</span> Puppy( <span class="string">&quot;tommy&quot;</span> );</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="访问实例变量和方法"><a href="#访问实例变量和方法" class="headerlink" title="访问实例变量和方法"></a>访问实例变量和方法</h3><p> 通过已创建的对象来访问成员变量和成员方法，如下所示：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 实例化对象 */</span></span><br><span class="line">Object referenceVariable = <span class="keyword">new</span> Constructor();</span><br><span class="line"><span class="comment">/* 访问类中的变量 */</span></span><br><span class="line">referenceVariable.variableName;</span><br><span class="line"><span class="comment">/* 访问类中的方法 */</span></span><br><span class="line">referenceVariable.methodName();</span><br></pre></td></tr></table></figure><h1 id="封装"><a href="#封装" class="headerlink" title="封装"></a>封装</h1><div class="note success flat"><p>封装可以被认为是一个保护屏障，防止该类的代码和数据被外部类定义的代码随机访问。</p></div><ul><li> <strong>修改属性的可见性来限制对属性的访问（一般限制为private），例如：</strong></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="note danger flat"><p>这段代码中，将 name 和 age 属性设置为私有的，只能本类才能访问，其他类都访问不了，如此就对信息进行了隐藏。 </p></div><ul><li><strong>对每个值属性提供对外的公共方法访问，也就是创建一对赋取值方法，用于对私有属性的访问，例如：</strong></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Person</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getAge</span><span class="params">()</span></span>&#123;</span><br><span class="line">      <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span></span>&#123;</span><br><span class="line">      <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(<span class="keyword">int</span> age)</span></span>&#123;</span><br><span class="line">      <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span></span>&#123;</span><br><span class="line">      <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="note danger flat"><p>采用 <code>this</code>关键字是为了解决实例变量（private String name）和局部变量（setName(String name)中的name变量）之间发生的同名的冲突。</p></div><h2 id="访问控制符"><a href="#访问控制符" class="headerlink" title="访问控制符"></a>访问控制符</h2><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/30/be34001ec3ea1c793131239a2be7b132.png"></p><h1 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h1><div class="note success flat"><p>继承就是子类继承父类的<strong>特征</strong>和<strong>行为</strong>，使得子类对象（实例）具有父类的实例域和方法，或子类从父类继承方法，使得子类具有父类相同的行为。</p></div><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2021/01/05/80929c510c42f3c6649fd6ebcbf6d2b5.png"></p><h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><p>在 Java 中通过 <code>extends</code> 关键字可以申明一个类是从另外一个类继承而来的，一般形式如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> 父类 </span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> 子类 <span class="keyword">extends</span> 父类 </span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="继承类型"><a href="#继承类型" class="headerlink" title="继承类型"></a>继承类型</h2><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2021/01/05/782bedb70936cb9c995859ae1fdfd17d.png"></p><h2 id="继承的特性"><a href="#继承的特性" class="headerlink" title="继承的特性"></a>继承的特性</h2><ul><li>子类拥有父类非 private 的属性、方法。</li><li>子类可以拥有自己的属性和方法，即子类可以对父类进行扩展。</li><li>子类可以用自己的方式实现父类的方法。</li><li>Java 的继承是单继承，但是可以多重继承，单继承就是一个子类只能继承一个父类，多重继承就是，例如 B 类继承 A 类，C 类继承 B 类，所以按照关系就是 B 类是 C 类的父类，A 类是 B 类的父类，这是 Java 继承区别于 C++ 继承的一个特性。</li><li>提高了类之间的耦合性（继承的缺点，耦合度高就会造成代码之间的联系越紧密，代码独立性越差）。</li></ul><h2 id="继承关键字"><a href="#继承关键字" class="headerlink" title="继承关键字"></a>继承关键字</h2><p>继承可以使用 extends 和 implements 这两个关键字来实现继承，而且所有的类都是继承于 java.lang.Object，当一个类没有继承的两个关键字，则默认继承object（这个类在 java.lang 包中，所以不需要 import）祖先类。</p><h3 id="extends"><a href="#extends" class="headerlink" title="extends"></a>extends</h3><p>在 Java 中，类的继承是单一继承，也就是说，一个子类只能拥有一个父类，所以 extends 只能继承一个类。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Animal</span> </span>&#123; </span><br><span class="line">    <span class="keyword">private</span> String name;   </span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id; </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Animal</span><span class="params">(String myName, String myid)</span> </span>&#123; </span><br><span class="line">        <span class="comment">//初始化属性值</span></span><br><span class="line">    &#125; </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">eat</span><span class="params">()</span> </span>&#123;  <span class="comment">//吃东西方法的具体实现  &#125; </span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sleep</span><span class="params">()</span> </span>&#123; <span class="comment">//睡觉方法的具体实现  &#125; </span></span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Penguin</span>  <span class="keyword">extends</span>  <span class="title">Animal</span></span>&#123; </span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="implements"><a href="#implements" class="headerlink" title="implements"></a>implements</h3><p>使用 implements 关键字可以变相的使java具有多继承的特性，使用范围为类继承接口的情况，可以同时继承多个接口（接口跟接口之间采用逗号分隔）。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">A</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">eat</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sleep</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">B</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">show</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">C</span> <span class="keyword">implements</span> <span class="title">A</span>,<span class="title">B</span> </span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="super与this"><a href="#super与this" class="headerlink" title="super与this"></a>super与this</h3><div class="note primary flat"><p><strong>super关键字</strong>：我们可以通过super关键字来实现对父类成员的访问，用来引用当前对象的父类。<br><strong>this关键字</strong>：指向自己的引用。</p></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Animal</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">eat</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;animal : eat&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Dog</span> <span class="keyword">extends</span> <span class="title">Animal</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">eat</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;dog : eat&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">eatTest</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.eat();   <span class="comment">// this 调用自己的方法</span></span><br><span class="line">    <span class="keyword">super</span>.eat();  <span class="comment">// super 调用父类方法</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    Animal a = <span class="keyword">new</span> Animal();</span><br><span class="line">    a.eat();</span><br><span class="line">    Dog d = <span class="keyword">new</span> Dog();</span><br><span class="line">    d.eatTest();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">animal : eat</span></span><br><span class="line"><span class="comment">dog : eat</span></span><br><span class="line"><span class="comment">animal : eat</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h3 id="final"><a href="#final" class="headerlink" title="final"></a>final</h3><p>final 关键字声明类可以把类定义为不能继承的，即最终类；或者用于修饰方法，该方法不能被子类重写：</p><ul><li><p>声明类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">final</span> <span class="class"><span class="keyword">class</span> 类名 </span>&#123;<span class="comment">//类体&#125;</span></span><br></pre></td></tr></table></figure></li><li><p>声明方法<br><code>修饰符(public/private/default/protected) final 返回值类型 方法名()&#123;//方法体&#125;</code></p></li></ul><div class="note danger flat"><p>实例变量也可以被定义为 final，被定义为 final 的变量不能被修改。被声明为 final 类的方法自动地声明为 final，但是实例变量并不是 final</p></div><h3 id="static"><a href="#static" class="headerlink" title="static"></a>static</h3><p>static可以用来修饰成员变量和方法。</p><ul><li><strong>静态变量</strong>，也成为类变量。静态变量<strong>不需要类的实例化</strong>就可以被类直接调用。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> String name=<span class="string">&quot;zhangsan&quot;</span>;</span><br></pre></td></tr></table></figure><ul><li><strong>静态方法</strong>，就是没有this的方法，可以直接使用<code>类名.方法名</code>进行调用。静态方法不依赖任何对象直接访问，在静态方法中不能访问类的非静态成员变量和非静态方法。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">printMessage</span><span class="params">()</span></span>&#123;</span><br><span class="line">System.out.println(<span class="string">&quot;cxuan is writing the article&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li> <strong>静态代码块</strong>,可用于类的初始化操作。static块可以置于类中的任何地方，类中可以有多个static块。在类初次被加载的时候，会按照static块的顺序来执行每个static块，并且只会执行一次。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StaicBlock</span> </span>&#123;</span><br><span class="line"><span class="keyword">static</span>&#123;</span><br><span class="line">System.out.println(<span class="string">&quot;I&#x27;m A static code block&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Override-Overload"><a href="#Override-Overload" class="headerlink" title="Override/Overload"></a>Override/Overload</h1><h2 id="重写-Override"><a href="#重写-Override" class="headerlink" title="重写(Override)"></a>重写(Override)</h2><div class="note success flat"><p>重写是子类对父类的允许访问的方法的实现过程进行重新编写, 返回值和形参都不能改变。即外壳不变，核心重写！</p></div><ul><li>重写的好处在于子类可以根据需要，定义特定于自己的行为。 也就是说子类能够根据需要实现父类的方法。</li><li>重写方法不能抛出新的检查异常或者比被重写方法申明更加宽泛的异常。例如： 父类的一个方法申明了一个检查异常 IOException，但是在重写这个方法的时候不能抛出 Exception 异常，因为 Exception 是 IOException 的父类，只能抛出 IOException 的子类异常。 </li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Fruit</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">eat</span><span class="params">()</span></span>&#123;</span><br><span class="line">System.out.printl(<span class="string">&#x27;eat fruit&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Apple</span> <span class="keyword">extends</span> <span class="title">Fruit</span></span>&#123;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">eat</span><span class="params">()</span></span>&#123;</span><br><span class="line">System.out.printl(<span class="string">&#x27;eat apple&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="方法的重写规则"><a href="#方法的重写规则" class="headerlink" title="方法的重写规则"></a>方法的重写规则</h3><ul><li>参数列表与被重写方法的参数列表必须完全相同。</li><li> 返回类型与被重写方法的返回类型可以不相同，但是必须是父类返回值的派生类（java5 及更早版本返回类型要一样，java7 及更高版本可以不同）。</li><li>访问权限不能比父类中被重写的方法的访问权限更低。例如：如果父类的一个方法被声明为 public，那么在子类中重写该方法就不能声明为 protected。</li><li>父类的成员方法只能被它的子类重写。</li><li>声明为 final 的方法不能被重写。</li><li>声明为 static 的方法不能被重写，但是能够被再次声明。</li><li>子类和父类在同一个包中，那么子类可以重写父类所有方法，除了声明为 private 和 final 的方法。</li><li>子类和父类不在同一个包中，那么子类只能够重写父类的声明为 public 和 protected 的非 final 方法。</li><li>重写的方法能够抛出任何非强制异常，无论被重写的方法是否抛出异常。但是，重写的方法不能抛出新的强制性异常，或者比被重写方法声明的更广泛的强制性异常，反之则可以。</li><li>构造方法不能被重写。</li><li>如果不能继承一个类，则不能重写该类的方法。</li></ul><h3 id="Super"><a href="#Super" class="headerlink" title="Super"></a>Super</h3><div class="note success flat"><p>当需要在子类中调用父类的被重写方法时，要使用 <code>super</code> 关键字。 </p></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Animal</span></span>&#123;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">move</span><span class="params">()</span></span>&#123;</span><br><span class="line">      System.out.println(<span class="string">&quot;动物可以移动&quot;</span>);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Dog</span> <span class="keyword">extends</span> <span class="title">Animal</span></span>&#123;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">move</span><span class="params">()</span></span>&#123;</span><br><span class="line">      <span class="keyword">super</span>.move(); <span class="comment">// 应用super类的方法</span></span><br><span class="line">      System.out.println(<span class="string">&quot;狗可以跑和走&quot;</span>);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestDog</span></span>&#123;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span></span>&#123;</span><br><span class="line"> </span><br><span class="line">      Animal b = <span class="keyword">new</span> Dog(); <span class="comment">// Dog 对象</span></span><br><span class="line">      b.move(); <span class="comment">//执行 Dog类的方法</span></span><br><span class="line"> </span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">动物可以移动</span></span><br><span class="line"><span class="comment">狗可以跑和走</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h2 id="重载-Overload"><a href="#重载-Overload" class="headerlink" title="重载(Overload)"></a>重载(Overload)</h2><div class="note success not flat"><p>重载(overloading) 是在一个类里面，方法名字相同，而参数不同。返回类型可以相同也可以不同。</p></div><h3 id="重载规则"><a href="#重载规则" class="headerlink" title="重载规则"></a>重载规则</h3><ul><li>被重载的方法必须改变参数列表(参数个数或类型不一样)；</li><li>被重载的方法可以改变返回类型；</li><li>被重载的方法可以改变访问修饰符；</li><li>被重载的方法可以声明新的或更广的检查异常；</li><li>方法能够在同一个类中或者在一个子类中被重载。</li><li>无法以返回值类型作为重载函数的区分标准。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> a+b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">double</span> <span class="title">add</span><span class="params">(<span class="keyword">double</span> a,<span class="keyword">double</span> b)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> a+b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">double</span> b)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">double</span> a,<span class="keyword">int</span> b)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">&quot;调用add(int,int)方法:&quot;</span>+add(<span class="number">1</span>,<span class="number">2</span>));</span><br><span class="line">System.out.println(<span class="string">&quot;调用add(double,double)方法:&quot;</span>+add(<span class="number">1.3</span>,<span class="number">2.2</span>));</span><br><span class="line">System.out.println(<span class="string">&quot;调用add(int)方法:&quot;</span>+add(<span class="number">1</span>));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="区别"><a href="#区别" class="headerlink" title="区别"></a>区别</h2><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2021/01/05/ff952568c5c00af47a156165c8807d66.png"></p><h1 id="多态"><a href="#多态" class="headerlink" title="多态"></a>多态</h1><div class="note success flat"><p>多态是同一个行为具有多个不同表现形式或形态的能力。</p></div><p>多态就是同一个接口，使用不同的实例而执行不同操作，如图所示：<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2021/01/05/e61501b07825db70c5d049bbc9c9b9d6.png"></p><h2 id="必要条件"><a href="#必要条件" class="headerlink" title="必要条件"></a>必要条件</h2><div class="note danger flat"><p>多态存在的三个必要条件</p></div><ul><li>继承</li><li>重写</li><li>父类引用指向子类对象：<code>Parent p = new Child()</code>;</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2021/01/05/867ff4a2183036701745785187134539.png"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Shape</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">draw</span><span class="params">()</span> </span>&#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Circle</span> <span class="keyword">extends</span> <span class="title">Shape</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">draw</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Circle.draw()&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Square</span> <span class="keyword">extends</span> <span class="title">Shape</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">draw</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Square.draw()&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Triangle</span> <span class="keyword">extends</span> <span class="title">Shape</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">draw</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Triangle.draw()&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="抽象类"><a href="#抽象类" class="headerlink" title="抽象类"></a>抽象类</h1><p>在面向对象的概念中，所有的对象都是通过类来描绘的，但是反过来，并不是所有的类都是用来描绘对象的，如果一个类中没有包含足够的信息来描绘一个具体的对象，这样的类就是抽象类。 </p><ul><li><strong>只要类中有一个抽象方法</strong>，此类就被标记为抽象类</li><li>抽象类除了<strong>不能实例化对象</strong>，只能用来继承</li><li>抽象类的子类必须重写抽象类中的<strong>所有抽象方法</strong>。</li><li>在Java中抽象类表示的是一种继承关系，<strong>一个类只能继承一个抽象类，而一个类却可以实现多个接口</strong>。</li><li>在Java语言中使用<code>abstract class</code>来定义抽象类<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span></span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">testAbstract</span><span class="params">()</span></span>;<span class="comment">//定义抽象方法</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="接口"><a href="#接口" class="headerlink" title="接口"></a>接口</h2><ul><li>某个类中所有方法<strong>都为抽象方法</strong>，此类可定义为接口。关键字<code>interface</code>。</li><li>接口不可以实例化，只能用关键字<code>implements</code>实现。某个类可以实现<strong>多个接口</strong>。</li><li>如果父类使用了某个接口，则子类也就自然使用了该接口，子类不必再使用implements声明自己使用这个接口。</li><li>接口可以被<strong>继承</strong>，可以通过关键字extends声明一个接口是另一个接口的子接口。子接口将继承父接口中的全部方法和常量。</li><li>如果一个类声明实现一个接口，但没有实现接口中的所有方法，那么这个类必须是抽象类。</li><li>类在实现接口方法时必须给出方法体，一定要用<code>public</code>修饰。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">MyInterface</span></span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">sub</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Myclass</span> <span class="keyword">implements</span> <span class="title">MyInterface</span></span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123; <span class="comment">//实现接口中的方法。</span></span><br><span class="line"> <span class="keyword">return</span> x+y; </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">sub</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> x-y;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="区别-1"><a href="#区别-1" class="headerlink" title="区别"></a>区别</h2><ul><li><p><strong>接口与类相似点</strong></p><ul><li>一个接口可以有多个方法。</li><li>接口文件保存在 .java 结尾的文件中，文件名使用接口名。</li><li>接口的字节码文件保存在 .class 结尾的文件中。</li><li>接口相应的字节码文件必须在与包名称相匹配的目录结构中。</li></ul></li><li><p><strong>接口与类的区别</strong></p><ul><li>接口不能用于实例化对象。</li><li>接口没有构造方法。</li><li>接口中所有的方法必须是抽象方法。</li><li>接口不能包含成员变量，除了 static 和 final 变量。</li><li>接口不是被类继承了，而是要被类实现。</li><li>接口支持多继承。</li></ul></li><li><p><strong>接口特性</strong></p><ul><li>接口中每一个方法也是隐式抽象的,接口中的方法会被隐式的指定为 public abstract（只能是 public abstract，其他修饰符都会报错）。</li><li>接口中可以含有变量，但是接口中的变量会被隐式的指定为 public static final 变量（并且只能是 public，用 private 修饰会报编译错误）。</li><li>接口中的方法是不能在接口中实现的，只能由实现接口的类来实现接口中的方法。</li></ul></li><li><p><strong>抽象类和接口的区别</strong></p><ol><li>抽象类中的方法可以有方法体，就是能实现方法的具体功能，但是接口中的方法不行。</li><li>抽象类中的成员变量可以是各种类型的，而接口中的成员变量只能是 public static final 类型的。</li><li>接口中不能含有静态代码块以及静态方法(用 static 修饰的方法)，而抽象类是可以有静态代码块和静态方法。</li><li>一个类只能继承一个抽象类，而一个类却可以实现多个接口。</li></ol></li></ul>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java👉核心基础</title>
      <link href="2021/01/05/%E5%90%8E%E7%AB%AF/Java/Java_%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/"/>
      <url>2021/01/05/%E5%90%8E%E7%AB%AF/Java/Java_%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h1 id="教程推荐"><a href="#教程推荐" class="headerlink" title="教程推荐"></a>教程推荐</h1><div class="note success flat"><p><a href="https://www.liaoxuefeng.com/wiki/1252599548343744">Java教程</a>||<a href="https://www.runoob.com/java/java-tutorial.html">Java教程|菜鸟教程</a>||<a href="https://blog.csdn.net/Tianc666/article/details/109239195?utm_source=app">小名的《Java编程思想》学习笔记</a>||<a href="https://www.vxzsk.com/tags/80.html">Java开发手册</a>||<a href="https://www.java.com/zh-CN/download/help/index_installing.html">Java技术帮助</a></p></div><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>Java最早是由SUN公司（已被Oracle收购）的<strong>詹姆斯·高斯林</strong>（高司令，人称Java之父）在上个世纪90年代初开发的一种编程语言。</p><p>Java 主要分为三个版本：</p><ul><li><code>JavaSE</code>(J2SE)(Java2 Platform Standard Edition，java平台标准版)</li><li><code>JavaEE</code>(J2EE)(Java 2 Platform,Enterprise Edition，java平台企业版)</li><li><code>JavaME</code>(J2ME)(Java 2 Platform Micro Edition，java平台微型版)。</li></ul><h2 id="Java的特点"><a href="#Java的特点" class="headerlink" title="Java的特点"></a>Java的特点</h2><ul><li><p><strong>跨平台性</strong>:跨平台性是指软件可以不受计算机硬件和操作系统的约束而在任意计算机环境下正常运行。 Java自带的虚拟机很好地实现了跨平台性。</p></li><li><p>.<strong>面向对象</strong>:面向对象(Objiect Oriented)是一种软件开发思想。它是对现实世界的一种抽象，面向对象会把相关的数据和方法组织为一个整体看待。不用像面向过程那样严格按照顺序来执行每个动作。</p></li><li><p><strong>健壮性</strong>:Java的强类型机制、异常处理、垃圾的自动收集等是Java程序健壮性的重要保证。</p></li><li><p><strong>多线程</strong>:是一种轻量级进程，是现代程序设计中必不可少的一种特性。多线程处理能力使得程序能够具有更好的交互性、实时性。</p></li></ul><h2 id="Java运行机制"><a href="#Java运行机制" class="headerlink" title="Java运行机制"></a>Java运行机制</h2><ul><li>Java语言编写的程序既是<strong>编译型的，又是解释型</strong>。</li><li>运行期环境代表着Java平台，开发人员编写Java代码(<code>.java文件</code>)，然后用Java编译器将之编译成字节码(<code>.class文件</code>)，JVM才能识别并运行它（<strong>编译只进行一次，而解释在每次运行程序时都会进行</strong>）</li><li>JVM针对每个操作系统开发其对应的解释器，所以只要其操作系统有对应版本的JVM，那么这份Java编译后的代码就能够运行起来，这就是Java能<strong>一次编译，到处运行</strong>的原因</li></ul><div class="note default flat"><p>*.java-&gt;*.class-&gt;字节码-&gt;机器码</p></div><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@d3a99ed6e3318056b293e2a87abbb4ed698fd9b0/2020/11/16/ea50b091a4253c41449ca87dd53389ed.png"><h2 id="相关概念"><a href="#相关概念" class="headerlink" title="相关概念"></a>相关概念</h2><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/23/1db25e96ee4e5eebd0302ce9d07eee1a.png"><br>  1.<code>JVM</code>(Java Virtual Machine)：虚拟机,使软件在不同操作系统中，模拟相同的环境。<br>  2.<code>JRE</code>(Java Runtime Environment)：Java运行环境,包含<code>JVM和解释器</code>，完整的运行环境.<br>  3.<code>JDK</code>(Java Development Kit)：Java开发工具包，包含<code>JRE+类+开发工具包</code><br>  4.<code>API</code>(Application Programming Interface)：<code>程序编程接口</code>，JavaAPI文档是Java程序员开发不可缺少的编程辞典。<br><a href="https://www.oracle.com/index.html">JDK下载:Oracle公司官方网站</a><br><a href="https://www.eclipse.org/">Eclipse开发工具下载</a></p><h2 id="环境变量"><a href="#环境变量" class="headerlink" title="环境变量"></a>环境变量</h2><div class="note danger flat"><p>配置环境变量的原因：系统不知道去哪找JDK</p></div><p>我的电脑-&gt;属性-&gt;高级系统设置-&gt;<code>环境变量</code></p><p>第一步：新建<code>JAVA_HOME</code>变量名，并找到<code>JDK路径</code>作为变量值<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/29/2124f1b8f6982d2e60f0ced503822a88.png"></p><p>第二步：新建<code>CLASSPATH</code>变量名，并把(<code>.</code>)作为变量值，指代当前路径。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/29/dd87ad9aec208a6c9dad713b102c903e.png"></p><div class="note info flat"><p>根据CLASSPATH环境变量定位类，在JDK1.4版本以前需要设置CLASSPATH变量值为(.)，用以告诉JRE需要在当前路径下搜索Java类。</p></div><p>第三步：找到Path目录，把JDK下bin目录作为新建值，bin目录下有Java命令工具，此Path路径告诉计算机所用Java指令去哪找。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/29/42c44687d3f4a60648175e2b6ca55a82.png"></p><div class="note info flat"><p>Windows操作系统是根据Path环境变量来查找命令，Path环境变量的值是一系列路径，根据路径查找。</p></div><h1 id="变量和常量"><a href="#变量和常量" class="headerlink" title="变量和常量"></a>变量和常量</h1><div class="note success flat"><p>变量是在程序的运行过程中其值可以被改变的量。</p></div><p>Java中的变量遵循<strong>先声明、后赋值、再使用的原则</strong>。声明的作用有两点：</p><ol><li>确定该变量的标识符(即名称)，以便系统为它指定存储地址和识别它，这便是“按名访问”原则；</li><li>为该变量指定数据类型，以便系统为它分配足够的存储单元。</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> x=<span class="number">45</span>;   <span class="comment">//实例变量</span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> y=<span class="number">90</span>;  <span class="comment">//静态变量</span></span><br></pre></td></tr></table></figure><div class="note success flat"><p>常量是指在程序的整个运行过程中其值始终保持不变的量。</p></div><p>Java语言用<code>final</code> 关键字来定义常量。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">final</span> <span class="keyword">static</span> <span class="keyword">double</span> PI=<span class="number">3.1415</span>;</span><br></pre></td></tr></table></figure><h1 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h1><div class="note primary flat"><p>在Java中，数据类型只有<strong>四类八种</strong></p></div><ul><li>整数型：byte、short、int、long</li><li>浮点型：float和double</li><li>字符型：char</li><li>布尔型：boolean</li></ul><table><thead><tr><th align="center">数据类型</th><th align="center">内存</th><th align="center">默认值</th></tr></thead><tbody><tr><td align="center">byte</td><td align="center">8位</td><td align="center">0</td></tr><tr><td align="center">short</td><td align="center">16位</td><td align="center">0</td></tr><tr><td align="center">int</td><td align="center">32位</td><td align="center">0</td></tr><tr><td align="center">long</td><td align="center">64位</td><td align="center">0L</td></tr><tr><td align="center">float</td><td align="center">32位</td><td align="center">0.0f</td></tr><tr><td align="center">double</td><td align="center">64位</td><td align="center">0.0d</td></tr><tr><td align="center">char</td><td align="center">16位</td><td align="center">\u0000</td></tr><tr><td align="center">boolean</td><td align="center">8位</td><td align="center">false</td></tr></tbody></table><div class="note warning flat"><p>基础语法</p></div><ul><li>大小写敏感</li><li>类名：首字母大写，例如<code>MyFirstClass</code></li><li>包名：包名尽量小写,例如<code>my.first.package</code></li><li>方法命：首字母小写，后面每个单词字母都需要大写，例如<code>myFirstMethod()</code></li></ul><h1 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h1><ul><li><p><strong>赋值运算</strong><br>使用操作符<code>=</code>表示，意思是把右边的值复制给左边，右边的值可以是任何常数、变量或者表达式，但左边的值必须是明确的，以及定义的变量。<br>但对于对象来说，复制的表示对象的值，而是对象的引用，实际上是将<strong>一个对象的引用赋值给另一个对象</strong></p></li><li><p><strong>算术运算符</strong></p></li></ul><table><thead><tr><th align="center">运算符</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">+</td><td align="center">加</td></tr><tr><td align="center">-</td><td align="center">减</td></tr><tr><td align="center">*</td><td align="center">乘</td></tr><tr><td align="center">/</td><td align="center">除</td></tr><tr><td align="center">%</td><td align="center">取余</td></tr></tbody></table><ul><li><strong>自增、自减运算符</strong></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 设a=4</span></span><br><span class="line">b=a++; <span class="comment">//先将a的值加1，然后赋值给b，此时a=5,b=5</span></span><br><span class="line">b=++a; <span class="comment">//先将a的值赋给b，再将a的值变为5，此时a=5,b=4</span></span><br></pre></td></tr></table></figure><ul><li><strong>关系运算符</strong></li></ul><table><thead><tr><th align="center">运算符</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">&gt;</td><td align="center">大于</td></tr><tr><td align="center">&lt;</td><td align="center">小于</td></tr><tr><td align="center">==</td><td align="center">等于</td></tr><tr><td align="center">&gt;=</td><td align="center">大于等于</td></tr><tr><td align="center">&lt;=</td><td align="center">小于等于</td></tr><tr><td align="center">!=</td><td align="center">不等于</td></tr></tbody></table><ul><li><strong>逻辑运算符</strong></li></ul><table><thead><tr><th align="center">运算符</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">&amp;&amp;</td><td align="center">短路与</td></tr><tr><td align="center"></td><td align="center"></td></tr><tr><td align="center">！</td><td align="center">逻辑非</td></tr><tr><td align="center">&amp;</td><td align="center">逻辑与</td></tr><tr><td align="center"></td><td align="center"></td></tr><tr><td align="center">^</td><td align="center">逻辑异或</td></tr></tbody></table><ul><li><strong>位运算符</strong><br>按位运算符用来操作整数基本类型中的每个**比特 **位，也就是二进制位。</li></ul><table><thead><tr><th align="center">运算符</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">&amp;</td><td align="center">与 eg:4&amp;5=4</td></tr><tr><td align="center"></td><td align="center"></td></tr><tr><td align="center">~</td><td align="center">非 eg:4^5=1</td></tr><tr><td align="center">^</td><td align="center">异或 eg:<del>4=</del>5</td></tr><tr><td align="center">&gt;&gt;</td><td align="center">右移运算符 eg:8&gt;&gt;1=4</td></tr><tr><td align="center">&lt;&lt;</td><td align="center">左移运算符 eg:9&lt;&lt;2=36</td></tr></tbody></table><h1 id="流程控制"><a href="#流程控制" class="headerlink" title="流程控制"></a>流程控制</h1><div class="note primary flat"><p>Java流程控制包括 <strong>if-else、while、do-while、for、return、break 以及选择语句 switch</strong> 等。</p></div><ul><li> <strong>if条件语句</strong></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">if</span>(a &gt; <span class="number">10</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br></pre></td></tr></table></figure><ul><li><strong>if…else条件语句</strong></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> year=(<span class="keyword">int</span>)(Math.random()*<span class="number">2000</span>)+<span class="number">1</span>;</span><br><span class="line">System.out.println(<span class="string">&quot;The year is:&quot;</span>+year);</span><br><span class="line"><span class="keyword">if</span>(year%<span class="number">4</span>==<span class="number">0</span> &amp;&amp; year%<span class="number">100</span>!=<span class="number">0</span> ||year%<span class="number">400</span>==<span class="number">0</span>)</span><br><span class="line">System.out.println(year+<span class="string">&quot;年是闰年!&quot;</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">System.out.println(year+<span class="string">&quot;年不是闰年!&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>if…else if 多分支语句</strong></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//多条件判断</span></span><br><span class="line"><span class="keyword">int</span> x = <span class="number">40</span>;</span><br><span class="line"><span class="keyword">if</span>(x &gt; <span class="number">60</span>) &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;x的值大于60&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (x &gt; <span class="number">30</span>) &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;x的值大于30但小于60&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (x &gt; <span class="number">0</span>) &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;x的值大于0但小于30&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;x的值小于等于0&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li><strong>switch分支语句</strong></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//判断整数类型</span></span><br><span class="line"><span class="keyword">switch</span> (option) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">    ...</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">    ...</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">    ...</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">    ...</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="note warning flat"><p>表达式option只能返回几个数据类型的值：int、short、byte、char<br>case子句中的值必须是常量，而且所有case子句中的值是不同的</p></div><ul><li><strong>While 循环</strong><br>while循环通常用于<strong>循环次数不确定</strong>的情况，也可以用于循环次数确定的情况。<br>利用一个条件来判断<strong>是否反复</strong>执行这个语句。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> (条件表达式) &#123;   <span class="comment">//条件为true，执行循环语句，条件为false退出循环。</span></span><br><span class="line"> 循环语句</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 继续执行后续代码</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">while</span>(a &gt; <span class="number">5</span>)&#123;</span><br><span class="line">a--;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>do while循环</strong></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">do</span> &#123;                    <span class="comment">//先执行循环，再判断条件</span></span><br><span class="line">    执行循环语句</span><br><span class="line">&#125; <span class="keyword">while</span> (条件表达式);</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">nt b = <span class="number">10</span>;</span><br><span class="line"><span class="comment">// do···while循环语句</span></span><br><span class="line"><span class="keyword">do</span> &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;b == &quot;</span> + b);</span><br><span class="line">b--;</span><br><span class="line">&#125; <span class="keyword">while</span>(b == <span class="number">1</span>);</span><br></pre></td></tr></table></figure><ul><li><strong>for循环</strong><br>for循环执行时，首先执行<strong>初始化操作</strong>，然后<strong>判断终止条件</strong>是否被满足，如果满足<strong>执行循环体</strong>，最后<strong>执行迭代运算</strong>。完成一次循环后，重新判断终止条件。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (初始化; 循环检测条件; 迭代运算) &#123;</span><br><span class="line">    <span class="comment">// 执行语句</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>for each循环（增强for）</strong></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> array[] = &#123;<span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>&#125;;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> arr : array) &#123;</span><br><span class="line">System.out.println(arr);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>break</strong></li></ul><p>用于<strong>强行退出</strong>当前循环。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; <span class="number">10</span>;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(i == <span class="number">5</span>)&#123;  <span class="comment">//i=5跳出循环</span></span><br><span class="line"><span class="keyword">break</span>; </span><br><span class="line">&#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><ul><li><strong>continue</strong></li></ul><p>用于执行<strong>下一次循环</strong>。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; <span class="number">10</span>;i++)&#123;</span><br><span class="line">  System.out.printl(<span class="string">&quot; i = &quot;</span> + i );</span><br><span class="line"> <span class="keyword">if</span>(i == <span class="number">5</span>)&#123;  <span class="comment">//执行下一次循环</span></span><br><span class="line">System.out.printl(<span class="string">&quot;continue ... &quot;</span>);</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="包装类"><a href="#包装类" class="headerlink" title="包装类"></a>包装类</h1><div class="note success flat"><p>Java为了能将基本数据类型视为对象处理，并能连接相关的方法，为每个数据类型都提供了包装类。</p></div><ul><li><p>所有的包装类（<code>Integer、Long、Byte、Double、Float、Short</code>）都是抽象类 Number 的子类。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2021/01/05/27e46087e5812a35776ca4de2c37722e.png"></p></li><li><p>这种由编译器特别支持的包装称为装箱，所以当内置数据类型被当作对象使用的时候，编译器会把内置类型装箱为包装类。相似的，编译器也可以把一个对象拆箱为内置类型。Number 类属于 java.lang 包。 </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span></span>&#123;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">      Integer x = <span class="number">5</span>;</span><br><span class="line">      x =  x + <span class="number">10</span>;</span><br><span class="line">      System.out.println(x); </span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">15</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="String类"><a href="#String类" class="headerlink" title="String类"></a>String类</h1><div class="note success flat"><p>在 Java 中字符串属于对象，Java 提供了 String 类来创建和操作字符串。 </p></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">String s1 = <span class="string">&quot;Runoob&quot;</span>;              <span class="comment">// String 直接创建</span></span><br><span class="line">String s2 = <span class="string">&quot;Runoob&quot;</span>;              <span class="comment">// String 直接创建</span></span><br><span class="line">String s3 = s1;                    <span class="comment">// 相同引用</span></span><br><span class="line">String s4 = <span class="keyword">new</span> String(<span class="string">&quot;Runoob&quot;</span>);   <span class="comment">// String 对象创建</span></span><br><span class="line">String s5 = <span class="keyword">new</span> String(<span class="string">&quot;Runoob&quot;</span>);   <span class="comment">// String 对象创建</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2021/01/05/32b23001ed48ed923a79c97241bb4ce5.png"></p><table><thead><tr><th align="center">方法</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">str.length()</td><td align="center">返回字符串长度</td></tr><tr><td align="center">str.indexOf(substr)</td><td align="center">返回指定字符串首次出现的索引位置。没有找到返回-1,字符串下标0~length()-1</td></tr><tr><td align="center">str.lastIndexOf(String str)</td><td align="center">返回指定字符串最后一次出现的索引位置，没有找到返回-1</td></tr><tr><td align="center">str.charAt(int index)</td><td align="center">返回指定索引处的字符</td></tr><tr><td align="center">str.substring(int beginIndex)</td><td align="center">获取从指定位置开始截取到该字符串结尾的子串</td></tr><tr><td align="center">str.substring(int beginIndex,int endIndex)</td><td align="center">获取从指定位置开始截取到某一位置的子串</td></tr><tr><td align="center">str.trim()</td><td align="center">返回字符串的副本，忽略前后空格</td></tr><tr><td align="center">str.replace(char old,char new)</td><td align="center">将指定字符串或字符替换为新字符串或字符</td></tr><tr><td align="center">str.startsWith(String s)</td><td align="center">判断是否以s开头</td></tr><tr><td align="center">str.endsWith(String s)</td><td align="center">判断是否以s结尾</td></tr><tr><td align="center">str1.equals(str2)</td><td align="center">比较是否有相同的字符和长度</td></tr><tr><td align="center">str1.equalsIgnoreCase(str2)</td><td align="center">不区分大小写比较</td></tr><tr><td align="center">str.toLowerCase()</td><td align="center">转为小写</td></tr><tr><td align="center">str.toUpperCase()</td><td align="center">转为大写</td></tr></tbody></table><div class="note danger flat"><p>String 类是不可改变的，所以你一旦创建了 String 对象，那它的值就无法改变了<br>如果需要对字符串做很多修改，那么应该选择使用 StringBuffer &amp; StringBuilder 类。 </p></div><h1 id="StringBuffer"><a href="#StringBuffer" class="headerlink" title="StringBuffer"></a>StringBuffer</h1><p>当对字符串进行修改的时候，需要使用 StringBuffer 和 StringBuilder 类。</p><div class="note success flat"><p>和 String 类不同的是，StringBuffer 和 StringBuilder 类的对象能够被多次的修改，并且不产生新的未使用对象。 </p></div><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2021/01/05/8a0042804c8ce0c32560757922eed840.png"></p><ul><li>在使用 StringBuffer 类时，每次都会对 StringBuffer 对象本身进行操作，<strong>而不是生成新的对象</strong>，所以如果需要对字符串进行修改推荐使用 StringBuffer。</li><li>StringBuilder 类在 Java 5 中被提出，它和 StringBuffer 之间的最大不同在于 StringBuilder 的方法<strong>不是线程安全的</strong>（不能同步访问）。</li><li>由于 StringBuilder 相较于 StringBuffer 有速度优势，所以多数情况下建议使用 StringBuilder 类。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RunoobTest</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span></span>&#123;</span><br><span class="line">        StringBuilder sb = <span class="keyword">new</span> StringBuilder(<span class="number">10</span>);</span><br><span class="line">        sb.append(<span class="string">&quot;Runoob..&quot;</span>);</span><br><span class="line">        System.out.println(sb);  </span><br><span class="line">        sb.append(<span class="string">&quot;!&quot;</span>);</span><br><span class="line">        System.out.println(sb); </span><br><span class="line">        sb.insert(<span class="number">8</span>, <span class="string">&quot;Java&quot;</span>);</span><br><span class="line">        System.out.println(sb); </span><br><span class="line">        sb.delete(<span class="number">5</span>,<span class="number">8</span>);</span><br><span class="line">        System.out.println(sb);  </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">Runoob..</span></span><br><span class="line"><span class="comment">Runoob..!</span></span><br><span class="line"><span class="comment">Runoob..Java!</span></span><br><span class="line"><span class="comment">RunooJava!</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2021/01/05/c79b89f6eed726dc913a2f9b9c8a2711.png"></p><div class="note danger flat"><p>然而在应用程序要求线程安全的情况下，则必须使用 StringBuffer 类。 </p></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span></span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span></span>&#123;</span><br><span class="line">    StringBuffer sBuffer = <span class="keyword">new</span> StringBuffer(<span class="string">&quot;菜鸟教程官网：&quot;</span>);</span><br><span class="line">    sBuffer.append(<span class="string">&quot;www&quot;</span>);</span><br><span class="line">    sBuffer.append(<span class="string">&quot;.runoob&quot;</span>);</span><br><span class="line">    sBuffer.append(<span class="string">&quot;.com&quot;</span>);</span><br><span class="line">    System.out.println(sBuffer);  </span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">菜鸟教程官网：www.runoob.com</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><table><thead><tr><th align="center">StringBuffer方法</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">public StringBuffer append(String s)</td><td align="center">将指定的字符串追加到此字符序列</td></tr><tr><td align="center">public StringBuffer reverse()</td><td align="center">将此字符序列用其反转形式取代</td></tr><tr><td align="center">public delete(int start, int end)</td><td align="center">移除此序列的子字符串中的字符</td></tr><tr><td align="center">public insert(int offset, int i)</td><td align="center">将 int 参数的字符串表示形式插入此序列中</td></tr><tr><td align="center">replace(int start, int end, String str)</td><td align="center">使用给定 String 中的字符替换此序列的子字符串中的字符</td></tr></tbody></table><div class="note danger flat"><p>除以上几种方法外，其他方法与String类似</p></div><h1 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h1><div class="note success flat"><p>Java 语言中提供的数组是用来存储固定大小的同类型元素。</p></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">ublic <span class="class"><span class="keyword">class</span> <span class="title">TestArray</span> </span>&#123;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">      <span class="comment">// 数组大小</span></span><br><span class="line">      <span class="keyword">int</span> size = <span class="number">10</span>;</span><br><span class="line">      <span class="comment">// 定义数组</span></span><br><span class="line">      <span class="keyword">double</span>[] myList = <span class="keyword">new</span> <span class="keyword">double</span>[size];</span><br><span class="line">      myList[<span class="number">0</span>] = <span class="number">5.6</span>;</span><br><span class="line">      myList[<span class="number">1</span>] = <span class="number">4.5</span>;</span><br><span class="line">      myList[<span class="number">2</span>] = <span class="number">3.3</span>;</span><br><span class="line">      myList[<span class="number">3</span>] = <span class="number">13.2</span>;</span><br><span class="line">      myList[<span class="number">4</span>] = <span class="number">4.0</span>;</span><br><span class="line">      myList[<span class="number">5</span>] = <span class="number">34.33</span>;</span><br><span class="line">      myList[<span class="number">6</span>] = <span class="number">34.0</span>;</span><br><span class="line">      myList[<span class="number">7</span>] = <span class="number">45.45</span>;</span><br><span class="line">      myList[<span class="number">8</span>] = <span class="number">99.993</span>;</span><br><span class="line">      myList[<span class="number">9</span>] = <span class="number">11123</span>;</span><br><span class="line">      <span class="comment">// 计算所有元素的总和</span></span><br><span class="line">      <span class="keyword">double</span> total = <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; size; i++) &#123;</span><br><span class="line">         total += myList[i];</span><br><span class="line">      &#125;</span><br><span class="line">      System.out.println(<span class="string">&quot;总和为： &quot;</span> + total);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2021/01/05/c5d440032302006719c625d027d7e1c3.png"></p><h2 id="处理数组"><a href="#处理数组" class="headerlink" title="处理数组"></a>处理数组</h2><p>数组的元素类型和数组的大小都是确定的，所以当处理数组元素时候，我们通常使用基本循环或者 For-Each 循环</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestArray</span> </span>&#123;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">double</span>[] myList = &#123;<span class="number">1.9</span>, <span class="number">2.9</span>, <span class="number">3.4</span>, <span class="number">3.5</span>&#125;;</span><br><span class="line"> </span><br><span class="line">      <span class="comment">// 打印所有数组元素</span></span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">double</span> element: myList) &#123;</span><br><span class="line">         System.out.println(element);</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Arrays类"><a href="#Arrays类" class="headerlink" title="Arrays类"></a>Arrays类</h2><div class="note success flat"><p>java.util.Arrays 类能方便地操作数组，它提供的所有方法都是静态的。</p></div><table><thead><tr><th align="center">方法</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">public static int binarySearch(Object[] a, Object key)</td><td align="center">用二分查找算法在给定数组中搜索给定值的对象(Byte,Int,double等)。数组在调用前必须排序好的。如果查找值包含在数组中，则返回搜索键的索引；否则返回 (-(插入点) - 1)</td></tr><tr><td align="center">public static boolean equals(long[] a, long[] a2)</td><td align="center">如果两个指定的 long 型数组彼此相等，则返回 true。如果两个数组包含相同数量的元素，并且两个数组中的所有相应元素对都是相等的，则认为这两个数组是相等的。换句话说，如果两个数组以相同顺序包含相同的元素，则两个数组是相等的。同样的方法适用于所有的其他基本数据类型（Byte，short，Int等）</td></tr><tr><td align="center">public static void fill(int[] a, int val)</td><td align="center">将指定的 int 值分配给指定 int 型数组指定范围中的每个元素。同样的方法适用于所有的其他基本数据类型（Byte，short，Int等）</td></tr><tr><td align="center">public static void sort(Object[] a)</td><td align="center">对指定对象数组根据其元素的自然顺序进行升序排列。同样的方法适用于所有的其他基本数据类型（Byte，short，Int等）</td></tr></tbody></table><h1 id="日期和时间"><a href="#日期和时间" class="headerlink" title="日期和时间"></a>日期和时间</h1><h2 id="Date类"><a href="#Date类" class="headerlink" title="Date类"></a>Date类</h2><div class="note success flat"><p>java.util 包提供了 Date 类来封装当前的日期和时间。 Date 类提供两个构造函数来实例化 Date 对象。</p></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Date dt=<span class="keyword">new</span> Date();</span><br></pre></td></tr></table></figure><table><thead><tr><th align="center">方法</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">boolean after(Date date)</td><td align="center">若当调用此方法的Date对象在指定日期之后返回true,否则返回false</td></tr><tr><td align="center">boolean before(Date date)</td><td align="center">若当调用此方法的Date对象在指定日期之前返回true,否则返回false</td></tr><tr><td align="center">Object clone( )</td><td align="center">返回此对象的副本</td></tr><tr><td align="center">int compareTo(Date date)</td><td align="center">比较当调用此方法的Date对象和指定日期。两者相等时候返回0。调用对象在指定日期之前则返回负数。调用对象在指定日期之后则返回正数</td></tr><tr><td align="center">int compareTo(Object obj)</td><td align="center">若obj是Date类型则操作等同于compareTo(Date) 。否则它抛出ClassCastException</td></tr><tr><td align="center">boolean equals(Object date)</td><td align="center">当调用此方法的Date对象和指定日期相等时候返回true,否则返回false</td></tr><tr><td align="center">long getTime( )</td><td align="center">返回自 1970 年 1 月 1 日 00:00:00 GMT 以来此 Date 对象表示的毫秒数</td></tr><tr><td align="center">int hashCode( )</td><td align="center">返回此对象的哈希码值</td></tr><tr><td align="center">void setTime(long time)</td><td align="center">用自1970年1月1日00:00:00 GMT以后time毫秒数设置时间和日期</td></tr><tr><td align="center">String toString( )</td><td align="center">把此 Date 对象转换为以下形式的 String： dow mon dd hh:mm:ss zzz yyyy 其中： dow 是一周中的某一天 (Sun, Mon, Tue, Wed, Thu, Fri, Sat)</td></tr></tbody></table><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line">  </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DateDemo</span> </span>&#123;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span> </span>&#123;</span><br><span class="line">       <span class="comment">// 初始化 Date 对象</span></span><br><span class="line">       Date date = <span class="keyword">new</span> Date();</span><br><span class="line">        </span><br><span class="line">       <span class="comment">// 使用 toString() 函数显示日期时间</span></span><br><span class="line">       System.out.println(date.toString());</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">Mon May 04 09:51:52 CDT 2013</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h2 id="SimpleDateFormat-格式化日期"><a href="#SimpleDateFormat-格式化日期" class="headerlink" title="SimpleDateFormat 格式化日期"></a>SimpleDateFormat 格式化日期</h2><div class="note success flat"><p>SimpleDateFormat 是一个以语言环境敏感的方式来格式化和分析日期的类。SimpleDateFormat 允许你选择任何用户自定义日期时间格式来运行</p></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span>  java.util.*;</span><br><span class="line"><span class="keyword">import</span> java.text.*;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DateDemo</span> </span>&#123;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line">      Date dNow = <span class="keyword">new</span> Date( );</span><br><span class="line">      SimpleDateFormat ft = <span class="keyword">new</span> SimpleDateFormat (<span class="string">&quot;yyyy-MM-dd hh:mm:ss&quot;</span>);</span><br><span class="line"> </span><br><span class="line">      System.out.println(<span class="string">&quot;当前时间为: &quot;</span> + ft.format(dNow));</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">当前时间为: 2018-09-06 10:16:34</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SimpleDateFormat ft = <span class="keyword">new</span> SimpleDateFormat (<span class="string">&quot;yyyy-MM-dd hh:mm:ss&quot;</span>);</span><br></pre></td></tr></table></figure><p>这一行代码确立了转换的格式，其中 yyyy 是完整的公元年，MM 是月份，dd 是日期，HH:mm:ss 是时、分、秒。</p><div class="note warning flat"><p>注意:有的格式大写，有的格式小写，例如 MM 是月份，mm 是分；HH 是 24 小时制，而 hh 是 12 小时制</p></div><h2 id="日期和时间格式化编码"><a href="#日期和时间格式化编码" class="headerlink" title="日期和时间格式化编码"></a>日期和时间格式化编码</h2><p>时间模式字符串用来指定时间格式。在此模式中，所有的 ASCII 字母被保留为模式字母，定义如下：</p><table><thead><tr><th align="center">字母</th><th align="center">描述</th><th align="center">示例</th></tr></thead><tbody><tr><td align="center">G</td><td align="center">纪元标记</td><td align="center">AD</td></tr><tr><td align="center">y</td><td align="center">四位年份</td><td align="center">2001</td></tr><tr><td align="center">M</td><td align="center">月份</td><td align="center">July or 07</td></tr><tr><td align="center">d</td><td align="center">一个月的日期</td><td align="center">10</td></tr><tr><td align="center">h</td><td align="center">A.M./P.M. (1~12)格式小时</td><td align="center">12</td></tr><tr><td align="center">H</td><td align="center">一天中的小时 (0~23)</td><td align="center">22</td></tr><tr><td align="center">m</td><td align="center">分钟数</td><td align="center">30</td></tr><tr><td align="center">s</td><td align="center">秒数</td><td align="center">55</td></tr><tr><td align="center">S</td><td align="center">毫秒数</td><td align="center">234</td></tr><tr><td align="center">E</td><td align="center">星期几</td><td align="center">Tuesday</td></tr><tr><td align="center">D</td><td align="center">一年中的日子</td><td align="center">360</td></tr><tr><td align="center">F</td><td align="center">一个月中第几周的周几</td><td align="center">2 (second Wed. in July)</td></tr><tr><td align="center">w</td><td align="center">一年中第几周</td><td align="center">40</td></tr><tr><td align="center">W</td><td align="center">一个月中第几周</td><td align="center">1</td></tr><tr><td align="center">a</td><td align="center">A.M./P.M. 标记</td><td align="center">PM</td></tr><tr><td align="center">k</td><td align="center">一天中的小时(1~24)</td><td align="center">24</td></tr><tr><td align="center">K</td><td align="center">A.M./P.M. (0~11)格式小时</td><td align="center">10</td></tr><tr><td align="center">z</td><td align="center">时区</td><td align="center">Eastern Standard Time</td></tr><tr><td align="center">‘</td><td align="center">文字定界符</td><td align="center">Delimiter</td></tr><tr><td align="center">“</td><td align="center">单引号</td><td align="center"></td></tr></tbody></table><h2 id="使用printf格式化日期"><a href="#使用printf格式化日期" class="headerlink" title="使用printf格式化日期"></a>使用printf格式化日期</h2><div class="note success flat"><p>printf 方法可以很轻松地格式化时间和日期。使用两个字母格式，它以 %t 开头并且以下面表格中的一个字母结尾。</p></div><table><thead><tr><th align="center">转换符</th><th align="center">说明</th><th align="center">示例</th></tr></thead><tbody><tr><td align="center">c</td><td align="center">包括全部日期和时间信息</td><td align="center">星期六 十月 27 14:21:20 CST 2007</td></tr><tr><td align="center">F</td><td align="center">“年-月-日”格式</td><td align="center">2007-10-27</td></tr><tr><td align="center">D</td><td align="center">“月/日/年”格式</td><td align="center">10/27/07</td></tr><tr><td align="center">r</td><td align="center">“HH:MM:SS PM”格式（12时制）</td><td align="center">02:25:51 下午</td></tr><tr><td align="center">T</td><td align="center">“HH:MM:SS”格式（24时制）</td><td align="center">14:28:16</td></tr><tr><td align="center">R</td><td align="center">“HH:MM”格式（24时制）</td><td align="center">14:28</td></tr></tbody></table><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DateDemo</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span> </span>&#123;</span><br><span class="line">     <span class="comment">// 初始化 Date 对象</span></span><br><span class="line">     Date date = <span class="keyword">new</span> Date();</span><br><span class="line"> </span><br><span class="line">     <span class="comment">//c的使用  </span></span><br><span class="line">    System.out.printf(<span class="string">&quot;全部日期和时间信息：%tc%n&quot;</span>,date);          </span><br><span class="line">    <span class="comment">//f的使用  </span></span><br><span class="line">    System.out.printf(<span class="string">&quot;年-月-日格式：%tF%n&quot;</span>,date);  </span><br><span class="line">    <span class="comment">//d的使用  </span></span><br><span class="line">    System.out.printf(<span class="string">&quot;月/日/年格式：%tD%n&quot;</span>,date);  </span><br><span class="line">    <span class="comment">//r的使用  </span></span><br><span class="line">    System.out.printf(<span class="string">&quot;HH:MM:SS PM格式（12时制）：%tr%n&quot;</span>,date);  </span><br><span class="line">    <span class="comment">//t的使用  </span></span><br><span class="line">    System.out.printf(<span class="string">&quot;HH:MM:SS格式（24时制）：%tT%n&quot;</span>,date);  </span><br><span class="line">    <span class="comment">//R的使用  </span></span><br><span class="line">    System.out.printf(<span class="string">&quot;HH:MM格式（24时制）：%tR&quot;</span>,date);  </span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">全部日期和时间信息：星期一 九月 10 10:43:36 CST 2012  </span></span><br><span class="line"><span class="comment">年-月-日格式：2012-09-10  </span></span><br><span class="line"><span class="comment">月/日/年格式：09/10/12  </span></span><br><span class="line"><span class="comment">HH:MM:SS PM格式（12时制）：10:43:36 上午  </span></span><br><span class="line"><span class="comment">HH:MM:SS格式（24时制）：10:43:36  </span></span><br><span class="line"><span class="comment">HH:MM格式（24时制）：10:43  </span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Font Awesome🤝IconFont</title>
      <link href="2021/01/04/Hexo/Font%20Awesome%E5%9B%BE%E6%A0%87/"/>
      <url>2021/01/04/Hexo/Font%20Awesome%E5%9B%BE%E6%A0%87/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" href="https://cdn.staticfile.org/font-awesome/4.7.0/css/font-awesome.css"><h1 id="Font-Awesome"><a href="#Font-Awesome" class="headerlink" title="Font Awesome"></a>Font Awesome</h1><div class="note success flat"><p><a href="https://fontawesome.dashgame.com/">一套绝佳的图标字体库和CSS框架</a>||<a href="https://www.runoob.com/font-awesome/fontawesome-reference.html">Font Awesome参考手册</a></p></div><ul><li><p>Font Awesome 是一套绝佳的图标字体库和CSS框架。</p></li><li><p>Font Awesome 字体为您提供可缩放矢量图标,它可以被定制大小、颜色、阴影以及任何可以用CSS的样式。</p></li></ul><h2 id="引入CDN"><a href="#引入CDN" class="headerlink" title="引入CDN"></a>引入CDN</h2><ul><li><p>要使用Font Awesome图标，请在<strong>HTML页面</strong>的 部分中添加以下行：</p></li><li><p><strong>国内推荐CDN</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://cdn.staticfile.org/font-awesome/4.7.0/css/font-awesome.css&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><strong>海外推荐CDN</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><ul><li>使用前缀 <code>fa 和图标的名称</code>来放置 Font Awesome 图标。 </li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://cdn.staticfile.org/font-awesome/4.7.0/css/font-awesome.css&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-car&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-car&quot;</span> <span class="attr">style</span>=<span class="string">&quot;font-size:48px;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-car&quot;</span> <span class="attr">style</span>=<span class="string">&quot;font-size:60px;color:red;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>运行结果<br><i class="fa fa-car"></i><i class="fa fa-car" style="font-size:48px;"></i><i class="fa fa-car" style="font-size:60px;color:red;"></i></li></ul><blockquote><p>Font Awesome 设计为与<strong>内联元素</strong>一起使用。 <code>\&lt;i&gt;和 \&lt;span&gt;</code>元素广泛用于图标。<br>另外注意，如果更改图标容器的字体大小或颜色，图标会更改。</p></blockquote><h2 id="大图标"><a href="#大图标" class="headerlink" title="大图标"></a>大图标</h2><ul><li>fa-lg (增加33％)，fa-2x，fa-3x， fa-4x，或 fa-5x 类用于增加相对于其容器的图标大小。</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">!DOCTYPE html&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://cdn.staticfile.org/font-awesome/4.7.0/css/font-awesome.css&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-car fa-lg&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-car fa-2x&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-car fa-3x&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-car fa-4x&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-car fa-5x&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>运行结果</li></ul><p><i class="fa fa-car fa-lg"></i><i class="fa fa-car fa-2x"></i><i class="fa fa-car fa-3x"></i><i class="fa fa-car fa-4x"></i><i class="fa fa-car fa-5x"></i></p><blockquote><p>提示： 如果你的图标在顶部和底部被切断，请增加行高。</p></blockquote><h2 id="列表图标"><a href="#列表图标" class="headerlink" title="列表图标"></a>列表图标</h2><ul><li><code>fa-ul</code> 和<code> fa-li</code> 类用于替换无序列表中的默认前缀。</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;fa-ul&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa-li fa fa-check-square&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span>List icons<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa-li fa fa-spinner fa-spin&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span>List icons<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa-li fa fa-square&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span>List icons<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>运行结果</li></ul><ul class="fa-ul">  <li><i class="fa-li fa fa-check-square"></i>List icons</li>  <li><i class="fa-li fa fa-spinner fa-spin"></i>List icons</li>  <li><i class="fa-li fa fa-square"></i>List icons</li></ul><h2 id="边界和被拉的图标"><a href="#边界和被拉的图标" class="headerlink" title="边界和被拉的图标"></a>边界和被拉的图标</h2><ul><li><code>fa-border，fa-pull-right</code>或 <code>fa-pull-left</code> 类用于拉式引用或文章图标。 </li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-quote-left fa-3x fa-pull-left fa-border&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">Lzy_Blog -- 越努力越幸运！！！<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">Lzy_Blog -- 越努力越幸运！！！<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">Lzy_Blog -- 越努力越幸运！！！<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">Lzy_Blog -- 越努力越幸运！！！</span><br></pre></td></tr></table></figure><ul><li>运行结果<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2021/01/04/a4cd5c6c24c1c50a22c8d1525695c869.png"></li></ul><h2 id="动态图标"><a href="#动态图标" class="headerlink" title="动态图标"></a>动态图标</h2><ul><li><code>fa-spin</code> 类可以让图标旋转, <code>fa-pulse </code>类可以使图标以 8 步为周期进行旋转。</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-spinner fa-spin&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-circle-o-notch fa-spin&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-refresh fa-spin&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-cog fa-spin&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-spinner fa-pulse&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>运行结果</li></ul><p><i class="fa fa-spinner fa-spin"></i>&nbsp;<i class="fa fa-circle-o-notch fa-spin"></i>&nbsp;<i class="fa fa-refresh fa-spin"></i>&nbsp;<i class="fa fa-cog fa-spin"></i>&nbsp;<i class="fa fa-spinner fa-pulse"></i></p><h2 id="旋转和翻转的图标"><a href="#旋转和翻转的图标" class="headerlink" title="旋转和翻转的图标"></a>旋转和翻转的图标</h2><ul><li><code>fa-rotate-\*</code> 和 <code>fa-flip-\* </code>类用于旋转和翻转图标。</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-shield&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-shield fa-rotate-90&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-shield fa-rotate-180&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-shield fa-rotate-270&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-shield fa-flip-horizontal&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-shield fa-flip-vertical&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>运行结果</li></ul><p><i class="fa fa-shield"></i>&nbsp;<i class="fa fa-shield fa-rotate-90"></i>&nbsp;<i class="fa fa-shield fa-rotate-180"></i>&nbsp;<i class="fa fa-shield fa-rotate-270"></i>&nbsp;<i class="fa fa-shield fa-flip-horizontal"></i>&nbsp;<i class="fa fa-shield fa-flip-vertical"></i></p><h2 id="堆叠的图标"><a href="#堆叠的图标" class="headerlink" title="堆叠的图标"></a>堆叠的图标</h2><ul><li>要堆叠多个图标，请使用父级上的 <code>fa-stack</code> 类，<code>fa-stack-1x</code> 类用于常规大小的图标，<code>fa-stack-2x</code> 用于较大的图标。</li><li><code>fa-inverse</code> 类可以用作替代图标颜色。您还可以向父级添加更大的图标类，以进一步控制尺寸。</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;fa-stack fa-lg&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-circle-thin fa-stack-2x&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-twitter fa-stack-1x&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">fa-twitter on fa-circle-thin<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;fa-stack fa-lg&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-circle fa-stack-2x&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-twitter fa-stack-1x fa-inverse&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">fa-twitter (inverse) on fa-circle<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;fa-stack fa-lg&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-camera fa-stack-1x&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-ban fa-stack-2x text-danger&quot;</span> <span class="attr">style</span>=<span class="string">&quot;color:red;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">fa-ban on fa-camera</span><br></pre></td></tr></table></figure><ul><li>运行结果</li></ul><span class="fa-stack fa-lg">  <i class="fa fa-circle-thin fa-stack-2x"></i>  <i class="fa fa-twitter fa-stack-1x"></i></span>fa-twitter on fa-circle-thin<br><span class="fa-stack fa-lg">  <i class="fa fa-circle fa-stack-2x"></i>  <i class="fa fa-twitter fa-stack-1x fa-inverse"></i></span>fa-twitter (inverse) on fa-circle<br><span class="fa-stack fa-lg">  <i class="fa fa-camera fa-stack-1x"></i>  <i class="fa fa-ban fa-stack-2x text-danger" style="color:red;"></i></span>fa-ban on fa-camera<h2 id="固定宽度图标"><a href="#固定宽度图标" class="headerlink" title="固定宽度图标"></a>固定宽度图标</h2><ul><li><code>fa-fw</code> 类用于设置固定宽度的图标。 当不同的图标宽度偏离对齐时，此类非常有用。 特别适用于Bootstrap的导航列表和列表组。</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;list-group&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;list-group-item&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-home fa-fw&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> Home<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;list-group-item&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-book fa-fw&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> Library<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;list-group-item&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-pencil fa-fw&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> Applications<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;list-group-item&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-cog fa-fw&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> Settings<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>运行结果</li></ul><div class="list-group">  <a href="#" class="list-group-item"><i class="fa fa-home fa-fw"></i> Home</a>  <a href="#" class="list-group-item"><i class="fa fa-book fa-fw"></i> Library</a>  <a href="#" class="list-group-item"><i class="fa fa-pencil fa-fw"></i> Applications</a>  <a href="#" class="list-group-item"><i class="fa fa-cog fa-fw"></i> Settings</a></div><h1 id="IconFont"><a href="#IconFont" class="headerlink" title="IconFont"></a>IconFont</h1><div class="note success flat"><p><a href="https://www.iconfont.cn/">iconfont-阿里巴巴矢量图标库</a></p></div><h2 id="新建图标项目"><a href="#新建图标项目" class="headerlink" title="新建图标项目"></a>新建图标项目</h2><ul><li><p>访问访问<a href="https://www.iconfont.cn/">阿里巴巴矢量图标库</a> , 注册登录。</p></li><li><p>搜索自己心仪的图标，然后选择添加入库，加到购物车。</p></li><li><p>选择完毕后点击右上角的购物车图标，打开侧栏，选择添加到项目，如果没有项目就新建一个<br><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@ddc980359f3064ea5d1019b0dd02595a2f4052dc/2021/01/17/92bebf0270382118b14ff876e28643c0.png"></p></li><li><p>可以通过上方顶栏菜单 -&gt; 资源管理 -&gt; 我的项目，找到之前添加的图标项目</p></li></ul><h2 id="引入图标"><a href="#引入图标" class="headerlink" title="引入图标"></a>引入图标</h2><div class="note success flat"><p><a href="https://www.iconfont.cn/help/detail?helptype=code">阿里巴巴矢量图标库使用文档</a>||<a href="https://akilar.top/posts/d2ebecef/">Hexo引入阿里矢量图标库</a></p></div><ul><li><p>在<code>themes\butterfly\source\css\xxx.css</code>中填写如下内容，引入 Unicode 和 Font-class 的线上资源：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@import</span> <span class="string">&quot;//at.alicdn.com/t/font_2264842_3izu8i5eoc2.css&quot;</span>;</span><br></pre></td></tr></table></figure></li><li><p>同时可以在自定义<code>CSS</code>中添加如下样式来控制图标默认大小和颜色等属性</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.iconfont</span> &#123;</span><br><span class="line"><span class="attribute">font-family</span>: <span class="string">&quot;iconfont&quot;</span> <span class="meta">!important</span>;</span><br><span class="line"><span class="attribute">font-size</span>: <span class="number">3em</span>;</span><br><span class="line"><span class="comment">/* 可以定义图标大小 */</span></span><br><span class="line"><span class="attribute">font-style</span>: normal;</span><br><span class="line"><span class="attribute">-webkit-font-smoothing</span>: antialiased;</span><br><span class="line"><span class="attribute">-moz-osx-font-smoothing</span>: grayscale;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.icon-rat</span><span class="selector-pseudo">:before</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#85c3de</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.icon-ox</span><span class="selector-pseudo">:before</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#ffaf6e</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.icon-tiger</span><span class="selector-pseudo">:before</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#f7c768</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.icon-rabbit</span><span class="selector-pseudo">:before</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#ffbdd8</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.icon-dragon</span><span class="selector-pseudo">:before</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#ff8787</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.icon-snake</span><span class="selector-pseudo">:before</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#c3d686</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.icon-horse</span><span class="selector-pseudo">:before</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#ffaf6e</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.icon-goat</span><span class="selector-pseudo">:before</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#f7c768</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.icon-monkey</span><span class="selector-pseudo">:before</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#c3d686</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.icon-rooster</span><span class="selector-pseudo">:before</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#ff8787</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.icon-dog</span><span class="selector-pseudo">:before</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#85c3de</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.icon-boar</span><span class="selector-pseudo">:before</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#ffbdd8</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><div class="tabs" id="testn"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#testn-1">源码示例</button></li><li class="tab"><button type="button" data-href="#testn-2">效果展示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="testn-1"><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;iconfont icon-rat&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;iconfont icon-ox&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;iconfont icon-tiger&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;iconfont icon-rabbit&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;iconfont icon-dragon&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;iconfont icon-snake&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;iconfont icon-horse&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;iconfont icon-goat&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;iconfont icon-monkey&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;iconfont icon-rooster&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;iconfont icon-dog&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;iconfont icon-boar&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="testn-2"><p><i class="iconfont icon-rat"></i><br><i class="iconfont icon-ox"></i><br><i class="iconfont icon-tiger"></i><br><i class="iconfont icon-rabbit"></i><br><i class="iconfont icon-dragon"></i><br><i class="iconfont icon-snake"></i><br><i class="iconfont icon-horse"></i><br><i class="iconfont icon-goat"></i><br><i class="iconfont icon-monkey"></i><br><i class="iconfont icon-rooster"></i><br><i class="iconfont icon-dog"></i><br><i class="iconfont icon-boar"></i></p><button type="button" class="tab-to-top"><i class="fas fa-arrow-up"></i></button></div></div></div>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Visual Studio Code常用插件</title>
      <link href="2021/01/03/%E5%85%B6%E4%BB%96/Visual%20Studio%20Code%E5%B8%B8%E7%94%A8%E6%8F%92%E4%BB%B6/"/>
      <url>2021/01/03/%E5%85%B6%E4%BB%96/Visual%20Studio%20Code%E5%B8%B8%E7%94%A8%E6%8F%92%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h1 id="VS-Code简介"><a href="#VS-Code简介" class="headerlink" title="VS Code简介"></a>VS Code简介</h1><p><a href="https://blog.csdn.net/jiandan1127/article/details/85957003">插件参考</a><br><a href="https://marketplace.visualstudio.com/vscode">官方插件库</a><br><a href="https://www.jspang.com/detailed?id=60">VSCode常用插件和技巧教程</a></p><ul><li>vscode是微软开发的的一款代码编辑器，就如官网上说的一样，vscode重新定义（redefined）了代码编辑器。</li><li>当前市面上常用的轻型代码编辑器主要是：sublime，notepad++，editplus，atom这几种。</li><li>比起notepad++、editplus，vscode集成了许多IDE才具有的功能，比起它们更像一个代码编辑器；</li><li>比起sublime，vscode颜值更高，安装配置插件更为方便；</li><li>比起atom，vscode启动速度更快，打开各种大文件不卡。</li><li>可以说，vscode既拥有高自由度、又拥有高性能和高颜值，最关键的是，vscode还是一款免费并且有团队持续快速更新的代码编辑器。</li><li>可以说，vscode是代码编辑器的首选。个人推荐编写前端代码时，代码编辑器选择vscode，IDE选择WebStorm。</li><li>vscode安装插件只需要点击图片所示按钮，即可进入拓展，在搜索框中输入插件名点击安装后，等待安装好即可点击重新加载重启vscode使得插件生效。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2021/01/03/04ceb29a4b5e3ac627e7a3fd46ed1ea2.png"></li><li>当你不需要某个插件时只需要进入扩展，点击对应插件右下角的齿轮按钮即可选择禁用或卸载该插件。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2021/01/03/f954917f8d5d2ea692e44a4ffcb5f11f.png"></li></ul><h1 id="下载VS-Code"><a href="#下载VS-Code" class="headerlink" title="下载VS Code"></a>下载VS Code</h1><blockquote><p><a href="https://visualstudio.microsoft.com/zh-hans/downloads/">Visual Studio Code 免费下载地址</a></p></blockquote><h1 id="安装中文包"><a href="#安装中文包" class="headerlink" title="安装中文包"></a>安装中文包</h1><ul><li><p>Windows系统下按快捷键：<code>ctrl+shift+p</code>打开命令面板，界面如下<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2021/01/03/b17a6e6d94e172b057265fd158ad7a42.png"></p></li><li><p>在输入框中输入：Configure Display Language   （若是中文模式下，要切换其他语言，则输入：配置语言）。回车。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2021/01/03/4028ebbd9e95c520d7f91792ae0a7052.png"></p></li><li><p>vscode会为你打开一个json文件，长下面这样——<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2021/01/03/d4980d3a687f4ca5bfe8c940d89bbae7.png"><br>把其中的 “locale”:”” 改成图上的 “locale”:”zh-CN” ,再重启vscode，界面语言就会是中文了。</p><blockquote><p>注意：若重启后语言没有改变，可能是你没有下载适用于 VSCode 的中文（简体）语言包，链接如下：<br><a href="https://marketplace.visualstudio.com/items?itemName=MS-CEINTL.vscode-language-pack-zh-hans">Chinese (Simplified) Language Pack for Visual Studio Code - Visual Studio Marketplace</a></p></blockquote></li></ul><h1 id="配置语言环境"><a href="#配置语言环境" class="headerlink" title="配置语言环境"></a>配置语言环境</h1><ul><li><p>Windows系统下按快捷键：<code>ctrl+shift+p</code>打开命令面板，输入<code>Change Language Mode</code>，界面如下<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2021/01/03/d5dc6d73a28ba38774345379d58e21ed.png"></p></li><li><p>找到HTML语言，回车后，在第一行打下感叹号，确定光标在感叹号的后面，之后按下tab键或者enter键都可以，就会生成html的基本语法<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2021/01/03/99d2700b2890383675dbe002eec330f2.png"></p></li></ul><h1 id="Open-in-browser插件"><a href="#Open-in-browser插件" class="headerlink" title="Open in browser插件"></a>Open in browser插件</h1><ul><li><p>Visual Studio Code默认是在VScode的控制台下查看html页面，这对于我们调试和查看效果十分不方便。所以这里我们需要安装一下扩展插件，在浏览器中查看html页面。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2021/01/03/669dca3f37dec0ab934fe6c00f904178.png"></p></li><li><p>安装完成后，选择你要在浏览器打开的HTML页面，按快捷键Alt + B 就可以在默认浏览器下打开你写的页面了</p></li><li><p>使用快捷键 Shift + Alt + B 可以选择其他浏览器打开。</p></li><li><p>或者对想要运行的HTML页面处右击选择open in default browse，也可以选择open in other browse，自己选择浏览器即可<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2021/01/03/45f88afaebb22b168cbc1986e801a3c6.png"></p></li></ul><h1 id="Live-Server插件"><a href="#Live-Server插件" class="headerlink" title="Live Server插件"></a>Live Server插件</h1><ul><li><p>首先，vscode本身没有新建项目的选项，所以要先创建一个空的文件夹喔。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2021/01/03/1a9892a5d3cc3bc8f7d18564ccea234e.png"></p></li><li><p>然后打开vscode，再在vscode里面打开文件夹，这样才可以创建项目。</p></li><li><p>导入VScode后，需要配置一下，Ctrl+shift+p，然后输入task，点击第一个选项即可配置。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2021/01/03/937b36b7904607aa525b02f92e34e7c4.png"></p></li><li><p>跳转后，再次选择other……即可自动生成配置文件喔。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2021/01/03/ec579099ee5b7d3aa2b5292440656939.png"></p></li><li><p>安装Live Server插件</p></li><li><p>新建一个工作区（也可以直接拖一个文件夹到vscode中），注意单独新建一个HTML文件拖动到IDE中是使用不了Live Server的，需要把这个HTML文件放到创建的工作区(文件夹)中，新建完成后我们可以在状态栏上看到一个Go Live，单击会自动打开浏览器并显示<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2021/01/03/96274be288f42fad34b04e5c65d152ef.png"></p></li><li><p>如果没有状态栏上，也可以在文件上单击右键，选择Open With Live Server这一项<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2021/01/03/01e4e609a8ea5ef0f522775253f9ecbd.png"></p></li><li><p>这样就可以在一个工程项目文件夹开发，并能实时预览</p><h1 id="Markdown插件"><a href="#Markdown插件" class="headerlink" title="Markdown插件"></a>Markdown插件</h1></li><li><p>vscode默认是支持Markdown的，但是我们还是需要一些额外的插件来辅助。如前文安装中文包一般，到vscode的插件市场中，搜索Markdown关键字，安装这几个插件——<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2021/01/03/c862a93eb09493e70f78e980b4371aef.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2021/01/03/55ecaf1984552cc8deecbd8c226ff354.png"></p></li><li><p>第一个插件，是一个组合包，一股脑把最常用的Markdown优化都给你装好；</p></li><li><p>第二个插件，则是Github使用的Markdown渲染样式，不是特别华丽，很朴素，很简洁的样式，因为很多人用Markdown都是为了使用Github Pages，所以这个样式特别受欢迎。使用这个样式，在本地就能预览Markdown文件最终在Github Pages中显示的效果。</p></li><li><p>为了集中管理用Markdown的文档，你可以在你容易找到的地方，专门建立一个文件夹，这取决于大家使用电脑的习惯，每个人都不一样。使用vscode打开这个文件夹，你会在左侧的导航窗口里，看到这样的显示——<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2021/01/03/8310a67ce6633860faf6d25716f99446.png"></p></li><li><p>点击右上角的这个图标——<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2021/01/03/547ea8cfbfb0e4ab8941f53461887c8d.png"><br>然后你的页面就会变成两栏分列的样子；右侧这一栏就是markdown文件被渲染为HTML的预览；由于我们安装了Github的渲染风格，所以这里会按照Github的样式来渲染你的markdown文件。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2021/01/03/8c7fddac5fb0740a23e66419f59b057f.png"></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 杂谈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java📪JavaMail</title>
      <link href="2020/12/31/%E5%90%8E%E7%AB%AF/Java/Java_JavaMail/"/>
      <url>2020/12/31/%E5%90%8E%E7%AB%AF/Java/Java_JavaMail/</url>
      
        <content type="html"><![CDATA[<h1 id="电子邮件的接发过程"><a href="#电子邮件的接发过程" class="headerlink" title="电子邮件的接发过程"></a>电子邮件的接发过程</h1><div class="note success flat"><p>感谢<a href="https://www.cnblogs.com/ysocean/p/7652934.html">YSOcean</a>||<a href="https://www.runoob.com/java/java-sending-email.html">Java发邮件</a></p></div><p>假设<strong>用户A从QQ邮箱发送邮件到用户B163邮箱</strong>的图示，然后对图示的过程进行详细的介绍：<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/31/1b1ff5cb7ec90c03d9eb2753feb94056.png"></p><ol><li>用户A的电子邮箱为：<a href="mailto:&#x78;&#x78;&#64;&#113;&#113;&#46;&#99;&#x6f;&#109;">&#x78;&#x78;&#64;&#113;&#113;&#46;&#99;&#x6f;&#109;</a>，通过邮件客户端软件写好一封邮件，交到QQ的邮件服务器，这一步使用的协议是<code>SMTP</code>,对应图示的①；</li><li>QQ邮箱会根据用户A发送的邮件进行<strong>解析</strong>，也就是根据收件地址判断是否是自己管辖的账户，如果收件地址也是QQ邮箱，那么会直接存放到自己的存储空间。这里我们假设收件地址不是QQ邮箱，而是163邮箱，那么QQ邮箱就会将邮件转发到163邮箱服务器，转发使用的协议也是<code>SMTP</code>，对应图示的②；</li><li>163邮箱服务器接收到QQ邮箱转发过来的邮件，也会判断收件地址是否是自己，发现是自己的账户，那么就会将QQ邮箱转发过来的邮件存放到自己的内部存储空间，对应图示的③；</li><li>用户A将邮件发送了之后，就会通知用户B去指定的邮箱收取邮件。用户B会通过邮件客户端软件先向163邮箱<strong>服务器请求</strong>，要求收取自己的邮件，对应图示的④；</li><li>163邮箱服务器收到用户B的请求后，会从自己的存储空间中取出B未收取的邮件，对应图示⑤；</li><li>163邮箱服务器取出用户B未收取的邮件后，将邮件发给用户B，对应图示的⑥；最后三步用户B收取邮件的过程，使用的协议是<code>POP3</code>;</li></ol><h2 id="邮件服务器"><a href="#邮件服务器" class="headerlink" title="邮件服务器"></a>邮件服务器</h2><p>图示出现了两个邮件服务器，QQ和163邮件服务器。用户想要在网上收发邮件，必须要有专门的邮件服务器。邮件服务器我们可以假想为现实生活中的邮局。</p><ul><li>如果按<strong>功能</strong>划分，邮件服务器可以划分为两种类型：<ol><li><strong>SMTP邮件服务器</strong>：替用户<strong>发送邮件和接收</strong>外面发送给本地用户的邮件，对应上图的第一、二步。它相当于现实生活中邮局的邮件接收部门（可接收普通用户要投出的邮件和其他邮局投递进来的邮件）。</li><li><strong>POP3/IMAP邮件服务器</strong>：帮助用户<strong>读取SMTP邮件服务器接收进来的邮件</strong>，对应上图的第六步。它相当于专门为前来取包裹的用户提供服务的部门。</li></ol></li></ul><h2 id="电子邮箱"><a href="#电子邮箱" class="headerlink" title="电子邮箱"></a>电子邮箱</h2><ul><li>电子邮箱也称为E-mail地址，比如用户A的<a href="mailto:&#120;&#120;&#x40;&#x71;&#x71;&#x2e;&#99;&#111;&#109;">&#120;&#120;&#x40;&#x71;&#x71;&#x2e;&#99;&#111;&#109;</a>，和用户B的<a href="mailto:&#120;&#x78;&#64;&#x31;&#54;&#x33;&#x2e;&#x63;&#x6f;&#x6d;">&#120;&#x78;&#64;&#x31;&#54;&#x33;&#x2e;&#x63;&#x6f;&#x6d;</a>。</li><li>用户能<strong>通过E-mail地址标识自己发送的电子邮件</strong>，同时也可以通过这个地址接收别人发来的电子邮件</li><li>电子邮箱需要到邮件服务器进行申请，也就是说，电子邮箱其实就是用户在<strong>邮件服务器上申请的账户</strong>。邮件服务器会把接收到的邮件保存到为该账户所分配的邮箱空间中，用户通过用户名密码登录到邮件服务器查收该地址已经收到的邮件。一般来讲，邮件服务器为用户分配的邮箱空间是有限的。</li></ul><h2 id="邮件客户端软件"><a href="#邮件客户端软件" class="headerlink" title="邮件客户端软件"></a>邮件客户端软件</h2><p>我们可以直接在网站上进行邮件收发，也可以用邮件客户端软件。比如常见的FoxMail，Outlook Express。邮件客户端软件通常集邮件撰写，发送和收发功能于一体，主要用于<strong>帮助用户将邮件发送给SMTP邮件服务器和从POP3/IMAP邮件服务器读取用户的电子邮件</strong>。</p><blockquote><p>推荐使用<strong>163邮箱</strong>，不推荐使用QQ邮箱！</p></blockquote><h2 id="邮件传输协议"><a href="#邮件传输协议" class="headerlink" title="邮件传输协议"></a>邮件传输协议</h2><p>电子邮件需要在邮件客户端和邮件服务器之间，以及两个邮件服务器之间进行邮件传递，那就必须要遵守一定的规则，这个规则就是邮件传输协议。下面我们分别简单介绍几种协议（后面会详细讲解）：</p><ol><li><strong>SMTP协议</strong>：全称为 <code>Simple Mail Transfer Protocol</code>，<strong>简单邮件传输协议</strong>。它定义了邮件客户端软件和SMTP邮件服务器之间，以及两台SMTP邮件服务器之间的通信规则。</li><li><strong>POP3协议</strong>：全称为 <code>Post Office Protocol</code>，<strong>邮局协议</strong>。它定义了邮件客户端软件和POP3邮件服务器的通信规则。</li><li><strong>IMAP协议</strong>：全称为<code> Internet Message Access Protocol</code>,<strong>Internet消息访问协议</strong>，它是对POP3协议的一种扩展，也是定义了邮件客户端软件和IMAP邮件服务器的通信规则。</li></ol><h1 id="JavaMail"><a href="#JavaMail" class="headerlink" title="JavaMail"></a>JavaMail</h1><p>实际项目中我们不需要考虑邮件的底层实现协议，因为 sun 公司（现在已经被orcal收购了）开发的JavaMail API 就是为方便Java开发人员在应用程序中实现邮件接收和发送功能而提供的一套标准开发包，屏蔽了底层的邮件实现协议</p><h2 id="JavaMail介绍"><a href="#JavaMail介绍" class="headerlink" title="JavaMail介绍"></a>JavaMail介绍</h2><p>JavaMail 是sun公司（现以被甲骨文收购）为方便Java开发人员在应用程序中实现邮件发送和接收功能而提供的一套标准开发包，它支持一些常用的邮件协议，如前面所讲的SMTP，POP3，IMAP,还有MIME等。我们在使用JavaMail API 编写邮件时，无须考虑邮件的底层实现细节，只要调用JavaMail 开发包中相应的API类就可以了。</p><ul><li>本项目开源代码：<a href="https://github.com/lzyblog/MyCode/tree/main/JavaMailProject">https://github.com/lzyblog/MyCode/tree/main/JavaMailProject</a></li><li>JavaMail下载地址：<a href="https://github.com/javaee/javamail/releases">https://github.com/javaee/javamail/releases</a>，下载<code>javax.mail.jar</code><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/31/0636b9fa06f4afa7421a443e0af31316.png"></li></ul><h2 id="JavaMail-API"><a href="#JavaMail-API" class="headerlink" title="JavaMail API"></a>JavaMail API</h2><p>JavaMail API 按照功能可以划分为如下三大类：</p><ol><li>创建和解析邮件的API</li><li>发送邮件的API</li><li>接收邮件的API<br>以上三种类型的API在JavaMail 中由多个类组成，但是主要有四个核心类，我们在编写程序时，记住这四个核心类，就很容易编写出Java邮件处理程序。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/31/df232bb78ce012a3ce18114c0d377fba.png"></li></ol><ul><li><p><strong>Message 类</strong>:<code>javax.mail.Message</code> 类是<strong>创建和解析邮件</strong>的核心 API，这是一个抽象类，通常使用它的子类javax.mail.internet.MimeMessage 类。它的实例对象表示一份电子邮件。客户端程序发送邮件时，首先使用创建邮件的 JavaMail API 创建出封装了邮件数据的 Message 对象，然后把这个对象传递给邮件发送API（Transport 类） 发送。客户端程序接收邮件时，邮件接收API把接收到的邮件数据封装在Message 类的实例中，客户端程序在使用邮件解析API从这个对象中解析收到的邮件数据。</p></li><li><p><strong>Transport 类</strong>：<code>javax.mail.Transport</code> 类是<strong>发送邮件</strong>的核心API 类，它的实例对象代表实现了某个邮件发送协议的邮件发送对象，例如 SMTP 协议，客户端程序创建好 Message 对象后，只需要使用邮件发送API 得到 Transport 对象，然后把 Message 对象传递给 Transport 对象，并调用它的发送方法，就可以把邮件发送给指定的 SMTP 服务器。</p></li><li><p><strong>Store 类</strong>：<code>javax.mail.Store</code> 类是<strong>接收邮件</strong>的核心 API 类，它的实例对象代表实现了某个邮件接收协议的邮件接收对象，例如 POP3 协议，客户端程序接收邮件时，只需要使用邮件接收 API 得到 Store 对象，然后调用 Store 对象的接收方法，就可以从指定的 POP3 服务器获得邮件数据，并把这些邮件数据封装到表示邮件的 Message 对象中。</p></li><li><p><strong>Session 类</strong>：<code>javax.mail.Session</code> 类用于定义整个应用程序所需的环境信息，以及收集客户端与邮件服务器建立网络连接的<strong>会话信息</strong>，例如邮件服务器的主机名、端口号、采用的邮件发送和接收协议等。Session 对象根据这些信息构建用于邮件收发的 Transport 和 Store 对象，以及为客户端创建 Message 对象时提供信息支持。</p></li></ul><h2 id="发送纯文本邮件"><a href="#发送纯文本邮件" class="headerlink" title="发送纯文本邮件"></a>发送纯文本邮件</h2><ul><li><strong>关于授权码</strong><br>某些邮箱服务器为了增加邮箱本身密码的安全性，给 SMTP 客户端设置了独立密码（有的邮箱称为“授权码”）, 对于开启了独立密码的邮箱, 邮箱账户密码必需使用这个独立密码（授权码）。<br>一般在邮箱的设置里都会有，QQ邮箱也类似，设置后负责授权码，该授权码可以登录邮箱，<strong>需保密</strong><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/31/683131a691a2fa4afa523fdedd3bc8fa.png"></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.lzyblog.mail;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> java.io.ObjectInputStream.GetField;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> javax.mail.Address;</span><br><span class="line"><span class="keyword">import</span> javax.mail.Message;</span><br><span class="line"><span class="keyword">import</span> javax.mail.MessagingException;</span><br><span class="line"><span class="keyword">import</span> javax.mail.Session;</span><br><span class="line"><span class="keyword">import</span> javax.mail.Transport;</span><br><span class="line"><span class="keyword">import</span> javax.mail.internet.AddressException;</span><br><span class="line"><span class="keyword">import</span> javax.mail.internet.InternetAddress;</span><br><span class="line"><span class="keyword">import</span> javax.mail.internet.MimeMessage;</span><br><span class="line"><span class="keyword">import</span> javax.swing.text.html.MinimalHTMLWriter;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SendMailText</span> </span>&#123;</span><br><span class="line">    <span class="comment">//发件人邮箱地址</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String senderAddress = <span class="string">&quot;xxxx@163.com&quot;</span>;</span><br><span class="line">    <span class="comment">//收件人邮箱地址</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String recipientAddress = <span class="string">&quot;xxxx@qq.com&quot;</span>;</span><br><span class="line">    <span class="comment">//发件人邮箱账户名</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String senderAccount = <span class="string">&quot;xxxx@163.com&quot;</span>;</span><br><span class="line">    <span class="comment">//发件人邮箱账户密码(独立密码或者授权码)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String senderPassword = <span class="string">&quot;xxxxxxxxxxxxxxxx&quot;</span>;</span><br><span class="line">     </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">//1、连接邮件服务器的参数配置</span></span><br><span class="line">        Properties props = <span class="keyword">new</span> Properties();</span><br><span class="line">        <span class="comment">//设置用户的认证方式，需要请求认证</span></span><br><span class="line">        props.setProperty(<span class="string">&quot;mail.smtp.auth&quot;</span>, <span class="string">&quot;true&quot;</span>);</span><br><span class="line">        <span class="comment">//设置传输协议</span></span><br><span class="line">        props.setProperty(<span class="string">&quot;mail.transport.protocol&quot;</span>, <span class="string">&quot;smtp&quot;</span>);</span><br><span class="line">        <span class="comment">//设置发件人的SMTP服务器地址，格式smtp.xxx.com</span></span><br><span class="line">        props.setProperty(<span class="string">&quot;mail.smtp.host&quot;</span>, <span class="string">&quot;smtp.163.com&quot;</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// PS: 某些邮箱服务器要求 SMTP 连接需要使用 SSL 安全认证 (为了提高安全性, 邮箱支持SSL连接, 也可以自己开启),</span></span><br><span class="line">        <span class="comment">//     如果无法连接邮件服务器, 仔细查看控制台打印的 log, 如果有有类似 “连接失败, 要求 SSL 安全连接” 等错误,</span></span><br><span class="line">        <span class="comment">//     打开下面 /* ... */ 之间的注释代码, 开启 SSL 安全连接。</span></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        // SMTP 服务器的端口 (非 SSL 连接的端口一般默认为 25, 可以不添加, 如果开启了 SSL 连接,</span></span><br><span class="line"><span class="comment">        //                  需要改为对应邮箱的 SMTP 服务器的端口, 具体可查看对应邮箱服务的帮助,</span></span><br><span class="line"><span class="comment">        //                  QQ邮箱的SMTP(SLL)端口为465或587, 其他邮箱自行去查看)</span></span><br><span class="line"><span class="comment">        final String smtpPort = &quot;465&quot;;</span></span><br><span class="line"><span class="comment">        props.setProperty(&quot;mail.smtp.port&quot;, smtpPort);</span></span><br><span class="line"><span class="comment">        props.setProperty(&quot;mail.smtp.socketFactory.class&quot;, &quot;javax.net.ssl.SSLSocketFactory&quot;);</span></span><br><span class="line"><span class="comment">        props.setProperty(&quot;mail.smtp.socketFactory.fallback&quot;, &quot;false&quot;);</span></span><br><span class="line"><span class="comment">        props.setProperty(&quot;mail.smtp.socketFactory.port&quot;, smtpPort);</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">        </span><br><span class="line">       <span class="comment">//2、创建定义整个应用程序所需的环境信息的 Session 对象</span></span><br><span class="line">        Session session = Session.getInstance(props);</span><br><span class="line">        <span class="comment">//设置调试信息在控制台打印出来</span></span><br><span class="line">        session.setDebug(<span class="keyword">true</span>);</span><br><span class="line">        <span class="comment">//3、创建邮件的实例对象</span></span><br><span class="line">        Message msg = getMimeMessage(session);</span><br><span class="line">        <span class="comment">//4、根据session对象获取邮件传输对象Transport</span></span><br><span class="line">        Transport transport = session.getTransport();</span><br><span class="line">        <span class="comment">//设置发件人的账户名和密码</span></span><br><span class="line">        transport.connect(senderAccount, senderPassword);</span><br><span class="line">        <span class="comment">//发送邮件，并发送到所有收件人地址，message.getAllRecipients() 获取到的是在创建邮件对象时添加的所有收件人, 抄送人, 密送人</span></span><br><span class="line">        transport.sendMessage(msg,msg.getAllRecipients());</span><br><span class="line">         </span><br><span class="line">        <span class="comment">//如果只想发送给指定的人，可以如下写法</span></span><br><span class="line">        <span class="comment">//transport.sendMessage(msg, new Address[]&#123;new InternetAddress(&quot;xxx@qq.com&quot;)&#125;);</span></span><br><span class="line">         </span><br><span class="line">        <span class="comment">//5、关闭邮件连接</span></span><br><span class="line">        transport.close();</span><br><span class="line">    &#125;</span><br><span class="line">     </span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获得创建一封邮件的实例对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> session</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> MessagingException</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> AddressException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> MimeMessage <span class="title">getMimeMessage</span><span class="params">(Session session)</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        <span class="comment">//1.创建一封邮件的实例对象</span></span><br><span class="line">        MimeMessage msg = <span class="keyword">new</span> MimeMessage(session);</span><br><span class="line">        <span class="comment">//2.From:设置发件人地址</span></span><br><span class="line">        msg.setFrom(<span class="keyword">new</span> InternetAddress(senderAddress));</span><br><span class="line">        </span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 设置收件人地址（可以增加多个收件人、抄送、密送），即下面这一行代码书写多行</span></span><br><span class="line"><span class="comment">         * MimeMessage.RecipientType.TO:发送</span></span><br><span class="line"><span class="comment">         * MimeMessage.RecipientType.CC：抄送</span></span><br><span class="line"><span class="comment">         * MimeMessage.RecipientType.BCC：密送</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="comment">//3.To:收件人</span></span><br><span class="line">        msg.setRecipient(MimeMessage.RecipientType.TO,<span class="keyword">new</span> InternetAddress(recipientAddress));</span><br><span class="line">        <span class="comment">//4.Subject：设置邮件主题</span></span><br><span class="line">        msg.setSubject(<span class="string">&quot;邮件主题&quot;</span>,<span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">        <span class="comment">//5.Content：设置邮件正文（可以使用HTML标签）</span></span><br><span class="line">        msg.setContent(<span class="string">&quot;简单的纯文本邮件！&quot;</span>, <span class="string">&quot;text/html;charset=UTF-8&quot;</span>);</span><br><span class="line">        <span class="comment">//6.设置邮件的发送时间,默认立即发送</span></span><br><span class="line">        msg.setSentDate(<span class="keyword">new</span> Date());</span><br><span class="line">         <span class="comment">//7.保存设置</span></span><br><span class="line">        msg.saveChanges();</span><br><span class="line">        <span class="keyword">return</span> msg;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>执行完上述代码，然后我们查看收件箱：<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/31/607c6806c1ce2c9da2c3c50a604ec342.png"></p><ul><li><strong>邮件发送注意实现</strong><ol><li>发件人的邮箱账户名和密码：有的邮箱设置了独立密码，还有的必须用授权码登录（qq邮箱），要开启SMTP服务</li><li>发件人的SMTP服务器地址：一般是 smtp.xxx.com，比如163邮箱是smtp.163.com，qq邮箱是smtp.qq.com</li><li>有些邮箱服务器要求必须要使用 SSL 安全连接;</li><li>有可能你收件人地址，发件人地址等信息都正确了，控制台也打印了正确的信息，但是在收件箱就是收不到信息。这是因为可能收件箱服务器拒收了你发的邮件（比如认为你的邮件是广告），这时候可能在垃圾箱里能找到，可能找不到。解决办法是重复的邮件内容不要多次发送，或者更换收件箱试试。</li><li>本实例使用的是JavaMail1.6版本，支持的JDK必须是jdk1.7版本！！！</li></ol></li></ul><h2 id="JavaMail接收邮件"><a href="#JavaMail接收邮件" class="headerlink" title="JavaMail接收邮件"></a>JavaMail接收邮件</h2><p> 接收邮件用处不多，稍作了解即可<br> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">package</span> com.lzyblog.mail;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"><span class="keyword">import</span> javax.mail.Address;</span><br><span class="line"><span class="keyword">import</span> javax.mail.Folder;</span><br><span class="line"><span class="keyword">import</span> javax.mail.Message;</span><br><span class="line"><span class="keyword">import</span> javax.mail.Session;</span><br><span class="line"><span class="keyword">import</span> javax.mail.Store;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RecipientMail</span> </span>&#123;</span><br><span class="line">    <span class="comment">//收件人地址</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String recipientAddress = <span class="string">&quot;xxx@163.com&quot;</span>;</span><br><span class="line">    <span class="comment">//收件人账户名</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String recipientAccount = <span class="string">&quot;xxx&quot;</span>;</span><br><span class="line">    <span class="comment">//收件人账户密码</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String recipientPassword = <span class="string">&quot;xxx&quot;</span>;</span><br><span class="line">     </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">//1、连接邮件服务器的参数配置</span></span><br><span class="line">        Properties props = <span class="keyword">new</span> Properties();</span><br><span class="line">        <span class="comment">//设置传输协议</span></span><br><span class="line">        props.setProperty(<span class="string">&quot;mail.store.protocol&quot;</span>, <span class="string">&quot;pop3&quot;</span>);</span><br><span class="line">        <span class="comment">//设置收件人的POP3服务器</span></span><br><span class="line">        props.setProperty(<span class="string">&quot;mail.pop3.host&quot;</span>, <span class="string">&quot;pop3.163.com&quot;</span>);</span><br><span class="line">        <span class="comment">//2、创建定义整个应用程序所需的环境信息的 Session 对象</span></span><br><span class="line">        Session session = Session.getInstance(props);</span><br><span class="line">        <span class="comment">//设置调试信息在控制台打印出来</span></span><br><span class="line">        <span class="comment">//session.setDebug(true);</span></span><br><span class="line">         </span><br><span class="line">        Store store = session.getStore(<span class="string">&quot;pop3&quot;</span>);</span><br><span class="line">        <span class="comment">//连接收件人POP3服务器</span></span><br><span class="line">        store.connect(<span class="string">&quot;pop3.163.com&quot;</span>, recipientAccount, recipientPassword);</span><br><span class="line">        <span class="comment">//获得用户的邮件账户，注意通过pop3协议获取某个邮件夹的名称只能为inbox</span></span><br><span class="line">        Folder folder = store.getFolder(<span class="string">&quot;inbox&quot;</span>);</span><br><span class="line">        <span class="comment">//设置对邮件账户的访问权限</span></span><br><span class="line">        folder.open(Folder.READ_WRITE);</span><br><span class="line">         </span><br><span class="line">        <span class="comment">//得到邮件账户的所有邮件信息</span></span><br><span class="line">        Message [] messages = folder.getMessages();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; messages.length ; i++)&#123;</span><br><span class="line">            <span class="comment">//获得邮件主题</span></span><br><span class="line">            String subject = messages[i].getSubject();</span><br><span class="line">            <span class="comment">//获得邮件发件人</span></span><br><span class="line">            Address[] from = messages[i].getFrom();</span><br><span class="line">            <span class="comment">//获取邮件内容（包含邮件内容的html代码）</span></span><br><span class="line">            String content = (String) messages[i].getContent();</span><br><span class="line">        &#125;</span><br><span class="line">         </span><br><span class="line">        <span class="comment">//关闭邮件夹对象</span></span><br><span class="line">        folder.close();</span><br><span class="line">        <span class="comment">//关闭连接对象</span></span><br><span class="line">        store.close();</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="发送带图片、附件的邮件"><a href="#发送带图片、附件的邮件" class="headerlink" title="发送带图片、附件的邮件"></a>发送带图片、附件的邮件</h2><p>先看项目结构，在src目录下包含图片和附件<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/31/ed604608381745ea58c8d5ade531e255.png"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.lzyblog.mail;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> javax.activation.DataHandler;</span><br><span class="line"><span class="keyword">import</span> javax.activation.FileDataSource;</span><br><span class="line"><span class="keyword">import</span> javax.mail.Message;</span><br><span class="line"><span class="keyword">import</span> javax.mail.MessagingException;</span><br><span class="line"><span class="keyword">import</span> javax.mail.Session;</span><br><span class="line"><span class="keyword">import</span> javax.mail.Transport;</span><br><span class="line"><span class="keyword">import</span> javax.mail.internet.AddressException;</span><br><span class="line"><span class="keyword">import</span> javax.mail.internet.InternetAddress;</span><br><span class="line"><span class="keyword">import</span> javax.mail.internet.MimeBodyPart;</span><br><span class="line"><span class="keyword">import</span> javax.mail.internet.MimeMessage;</span><br><span class="line"><span class="keyword">import</span> javax.mail.internet.MimeMultipart;</span><br><span class="line"><span class="keyword">import</span> javax.mail.internet.MimeUtility;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SendMailText_Picture_Enclosure</span> </span>&#123;</span><br><span class="line">    <span class="comment">//发件人邮箱地址</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String senderAddress = <span class="string">&quot;xxxx@163.com&quot;</span>;</span><br><span class="line">    <span class="comment">//收件人邮箱地址</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String recipientAddress = <span class="string">&quot;xxxx@qq.com&quot;</span>;</span><br><span class="line">    <span class="comment">//发件人邮箱账户名</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String senderAccount = <span class="string">&quot;xxxx@163.com&quot;</span>;</span><br><span class="line">    <span class="comment">//发件人邮箱账户密码</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String senderPassword = <span class="string">&quot;xxxxxxxxxxxxxx&quot;</span>;</span><br><span class="line">     </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">//1、连接邮件服务器的参数配置</span></span><br><span class="line">        Properties props = <span class="keyword">new</span> Properties();</span><br><span class="line">        <span class="comment">//设置用户的认证方式</span></span><br><span class="line">        props.setProperty(<span class="string">&quot;mail.smtp.auth&quot;</span>, <span class="string">&quot;true&quot;</span>);</span><br><span class="line">        <span class="comment">//设置传输协议</span></span><br><span class="line">        props.setProperty(<span class="string">&quot;mail.transport.protocol&quot;</span>, <span class="string">&quot;smtp&quot;</span>);</span><br><span class="line">        <span class="comment">//设置发件人的SMTP服务器地址</span></span><br><span class="line">        props.setProperty(<span class="string">&quot;mail.smtp.host&quot;</span>, <span class="string">&quot;smtp.163.com&quot;</span>);</span><br><span class="line">        <span class="comment">//2、创建定义整个应用程序所需的环境信息的 Session 对象</span></span><br><span class="line">        Session session = Session.getInstance(props);</span><br><span class="line">        <span class="comment">//设置调试信息在控制台打印出来</span></span><br><span class="line">        session.setDebug(<span class="keyword">true</span>);</span><br><span class="line">        <span class="comment">//3、创建邮件的实例对象</span></span><br><span class="line">        Message msg = getMimeMessage(session);</span><br><span class="line">        <span class="comment">//4、根据session对象获取邮件传输对象Transport</span></span><br><span class="line">        Transport transport = session.getTransport();</span><br><span class="line">        <span class="comment">//设置发件人的账户名和密码</span></span><br><span class="line">        transport.connect(senderAccount, senderPassword);</span><br><span class="line">        <span class="comment">//发送邮件，并发送到所有收件人地址，message.getAllRecipients() 获取到的是在创建邮件对象时添加的所有收件人, 抄送人, 密送人</span></span><br><span class="line">        transport.sendMessage(msg,msg.getAllRecipients());</span><br><span class="line">         </span><br><span class="line">        <span class="comment">//5、关闭邮件连接</span></span><br><span class="line">        transport.close();</span><br><span class="line">    &#125;</span><br><span class="line">     </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获得创建一封邮件的实例对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> session</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> MessagingException</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> AddressException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> MimeMessage <span class="title">getMimeMessage</span><span class="params">(Session session)</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        <span class="comment">//1.创建一封邮件的实例对象</span></span><br><span class="line">        MimeMessage msg = <span class="keyword">new</span> MimeMessage(session);</span><br><span class="line">        <span class="comment">//2.设置发件人地址</span></span><br><span class="line">        msg.setFrom(<span class="keyword">new</span> InternetAddress(senderAddress));</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 3.设置收件人地址（可以增加多个收件人、抄送、密送），即下面这一行代码书写多行</span></span><br><span class="line"><span class="comment">         * MimeMessage.RecipientType.TO:发送</span></span><br><span class="line"><span class="comment">         * MimeMessage.RecipientType.CC：抄送</span></span><br><span class="line"><span class="comment">         * MimeMessage.RecipientType.BCC：密送</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        msg.setRecipient(MimeMessage.RecipientType.TO,<span class="keyword">new</span> InternetAddress(recipientAddress));</span><br><span class="line">        <span class="comment">//4.设置邮件主题</span></span><br><span class="line">        msg.setSubject(<span class="string">&quot;邮件主题(包含图片和附件)&quot;</span>,<span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">         </span><br><span class="line">        <span class="comment">//下面是设置邮件正文</span></span><br><span class="line">        <span class="comment">//msg.setContent(&quot;简单的纯文本邮件！&quot;, &quot;text/html;charset=UTF-8&quot;);</span></span><br><span class="line">         </span><br><span class="line">        <span class="comment">// 5. 创建图片&quot;节点&quot;</span></span><br><span class="line">        MimeBodyPart image = <span class="keyword">new</span> MimeBodyPart();</span><br><span class="line">        <span class="comment">// 读取本地文件</span></span><br><span class="line">        DataHandler dh = <span class="keyword">new</span> DataHandler(<span class="keyword">new</span> FileDataSource(<span class="string">&quot;src\\mailTestPic.png&quot;</span>));</span><br><span class="line">        <span class="comment">// 将图片数据添加到&quot;节点&quot;</span></span><br><span class="line">        image.setDataHandler(dh);</span><br><span class="line">        <span class="comment">// 为&quot;节点&quot;设置一个唯一编号（在文本&quot;节点&quot;将引用该ID）</span></span><br><span class="line">        image.setContentID(<span class="string">&quot;mailTestPic&quot;</span>);    </span><br><span class="line">         </span><br><span class="line">        <span class="comment">// 6. 创建文本&quot;节点&quot;</span></span><br><span class="line">        MimeBodyPart text = <span class="keyword">new</span> MimeBodyPart();</span><br><span class="line">        <span class="comment">// 这里添加图片的方式是将整个图片包含到邮件内容中, 实际上也可以以 http 链接的形式添加网络图片</span></span><br><span class="line">        text.setContent(<span class="string">&quot;这是一张图片&lt;br/&gt;&lt;a href=&#x27;https://lzyblog.github.io/&#x27;&gt;&lt;img src=&#x27;cid:mailTestPic&#x27;/&gt;&lt;/a&gt;&quot;</span>, <span class="string">&quot;text/html;charset=UTF-8&quot;</span>);</span><br><span class="line">         </span><br><span class="line">        <span class="comment">// 7. （文本+图片）设置 文本 和 图片&quot;节点&quot;的关系（将 文本 和 图片&quot;节点&quot;合成一个混合&quot;节点&quot;）</span></span><br><span class="line">        MimeMultipart mm_text_image = <span class="keyword">new</span> MimeMultipart();</span><br><span class="line">        mm_text_image.addBodyPart(text);</span><br><span class="line">        mm_text_image.addBodyPart(image);</span><br><span class="line">        mm_text_image.setSubType(<span class="string">&quot;related&quot;</span>);    <span class="comment">// 关联关系</span></span><br><span class="line">         </span><br><span class="line">        <span class="comment">// 8. 将 文本+图片 的混合&quot;节点&quot;封装成一个普通&quot;节点&quot;</span></span><br><span class="line">        <span class="comment">// 最终添加到邮件的 Content 是由多个 BodyPart 组成的 Multipart, 所以我们需要的是 BodyPart,</span></span><br><span class="line">        <span class="comment">// 上面的 mailTestPic 并非 BodyPart, 所有要把 mm_text_image 封装成一个 BodyPart</span></span><br><span class="line">        MimeBodyPart text_image = <span class="keyword">new</span> MimeBodyPart();</span><br><span class="line">        text_image.setContent(mm_text_image);</span><br><span class="line">         </span><br><span class="line">        <span class="comment">// 9. 创建附件&quot;节点&quot;</span></span><br><span class="line">        MimeBodyPart attachment = <span class="keyword">new</span> MimeBodyPart();</span><br><span class="line">        <span class="comment">// 读取本地文件</span></span><br><span class="line">        DataHandler dh2 = <span class="keyword">new</span> DataHandler(<span class="keyword">new</span> FileDataSource(<span class="string">&quot;src\\mailTestDoc.docx&quot;</span>));</span><br><span class="line">        <span class="comment">// 将附件数据添加到&quot;节点&quot;</span></span><br><span class="line">        attachment.setDataHandler(dh2);</span><br><span class="line">        <span class="comment">// 设置附件的文件名（需要编码）</span></span><br><span class="line">        attachment.setFileName(MimeUtility.encodeText(dh2.getName()));       </span><br><span class="line">         </span><br><span class="line">        <span class="comment">// 10. 设置（文本+图片）和 附件 的关系（合成一个大的混合&quot;节点&quot; / Multipart ）</span></span><br><span class="line">        MimeMultipart mm = <span class="keyword">new</span> MimeMultipart();</span><br><span class="line">        mm.addBodyPart(text_image);</span><br><span class="line">        mm.addBodyPart(attachment);     <span class="comment">// 如果有多个附件，可以创建多个多次添加</span></span><br><span class="line">        mm.setSubType(<span class="string">&quot;mixed&quot;</span>);         <span class="comment">// 混合关系</span></span><br><span class="line"> </span><br><span class="line">        <span class="comment">// 11. 设置整个邮件的关系（将最终的混合&quot;节点&quot;作为邮件的内容添加到邮件对象）</span></span><br><span class="line">        msg.setContent(mm);</span><br><span class="line">        <span class="comment">//设置邮件的发送时间,默认立即发送</span></span><br><span class="line">        msg.setSentDate(<span class="keyword">new</span> Date());</span><br><span class="line">         </span><br><span class="line">        <span class="keyword">return</span> msg;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>执行程序后查看<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/31/bcbd5bf285e7bc553f5847e9b7ae4c32.png"></p>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>史上最浅显易懂的Git教程</title>
      <link href="2020/12/27/Hexo/%E5%8F%B2%E4%B8%8A%E6%9C%80%E6%B5%85%E6%98%BE%E6%98%93%E6%87%82%E7%9A%84Git%E6%95%99%E7%A8%8B/"/>
      <url>2020/12/27/Hexo/%E5%8F%B2%E4%B8%8A%E6%9C%80%E6%B5%85%E6%98%BE%E6%98%93%E6%87%82%E7%9A%84Git%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="教程推荐"><a href="#教程推荐" class="headerlink" title="教程推荐"></a>教程推荐</h1><p><a href="https://www.liaoxuefeng.com/wiki/896043488029600">Git教程</a><br><a href="https://www.bilibili.com/video/BV1FE411P7B3">Git最新教程通俗易懂</a><br><a href="https://www.bilibili.com/video/BV1pW411A7a5">尚硅谷GitHub教程</a></p><h1 id="下载Git"><a href="#下载Git" class="headerlink" title="下载Git"></a>下载Git</h1><ul><li>首先你需要一个github账号，所有还没有的话先去注册吧！</li><li>我们使用git需要先安装git工具，这里给出下载地址，下载后一路直接安装即可：<a href="https://gitforwindows.org/">https://gitforwindows.org/</a></li></ul><h1 id="创建仓库"><a href="#创建仓库" class="headerlink" title="创建仓库"></a>创建仓库</h1><ul><li>进入Github首页，点击<strong>New repository</strong>新建一个项目</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/27/dc31ad6f25861bbc77cf87aedee85834.png"></p><ul><li><p>填写相应信息后点击<strong>create</strong>即可<br>Repository name: 仓库名称<br>Description(可选): 仓库描述介绍<br>Public, Private : 仓库权限（公开共享，私有或指定合作者）<br>Initialize this repository with a README: 添加一个README.md<br>gitignore: 不需要进行版本管理的仓库类型，对应生成文件.gitignore<br>license: 证书类型，对应生成文件LICENSE<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/27/a8daa307c2fb5cfca92ad8afd8667357.png"></p></li><li><p>点击Clone or dowload会出现一个地址，copy这个地址备用。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/27/d6f0d035757ae5a71be52819987d6358.png"></p></li></ul><h1 id="本地操作"><a href="#本地操作" class="headerlink" title="本地操作"></a>本地操作</h1><ul><li><p>接下来就到本地操作了，首先右键你的项目，如果你之前安装git成功的话，右键会出现两个新选项，分别为Git Gui Here,Git Bash Here,这里我们选择Git Bash Here，进入如下界面，MyCode即为我的项目文件名。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/27/ba9b7558b7ab673b34519c2fc29d29c4.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/27/1105ccee96316f1c78ded6c2c865274b.png"></p></li><li><p>接下来输入如下代码（关键步骤），把github上面的仓库克隆到本地，后面URL为以上copy的地址</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> https://github.com/lzyblog/MyCode.git</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/27/12aedd272f9957df2c46237520a4f23e.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/27/e10d6acbe844d15c79eabbbf5562626e.png"></p><ul><li>进入克隆到本地的文件中，可以看到GitHub仓库里的文件</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> MyCode</span><br></pre></td></tr></table></figure><ul><li>接着，将想要提交（上传）到GitHub的代码拷贝到本地计算机中的MyCode文件夹，然后执行“git add .”命令。这里的”.”表示将当前目录下所有改动的文件夹及文件添加到版本管理器。</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git add .  <span class="comment">#把该目录下的所有文件添加到仓库</span></span><br></pre></td></tr></table></figure><ul><li>执行git commit -m “First commit”命令，提交到本地的版本控制库里，引号里面是你对本次提交的说明信息</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m <span class="string">&quot;First commit&quot;</span>   <span class="comment">#添加-m参数，提交的注释内容</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/27/f9acda0b7f3a3bea0f8169353d42fb97.png"></p><h1 id="本地上传"><a href="#本地上传" class="headerlink" title="本地上传"></a>本地上传</h1><ul><li>连接GitHUb，注意执行顺序<br>创建SSH Key</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ git init   <span class="comment">#通过命令git init把这个文件夹变成Git可管理的仓库 </span></span><br><span class="line">$ git config user.name <span class="string">&quot;github_username&quot;</span></span><br><span class="line">$ git config user.email <span class="string">&quot;github_email&quot;</span></span><br><span class="line"><span class="comment"># 以上只需要第一次上传的时候执行，第二次上传不需要再执行</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git add *   <span class="comment">#git add 项目文件名</span></span><br><span class="line">$ git commit  -m <span class="string">&#x27;some msg&#x27;</span>  <span class="comment"># some msg为描述信息</span></span><br></pre></td></tr></table></figure><ul><li>最后，执行” git push origin master“命令将本地仓库提交到远程的GitHub中，这里会用到注册的用户名和密码。输入密码的时候默认是没有任何提示符。</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git push origin main <span class="comment">#main也可以是master，具体看仓库</span></span><br></pre></td></tr></table></figure><p>这样，刷新GitHub仓库，你的代码就上传了！<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/27/a00faf273b5cb84e9a375e00c3f99b44.png"></p><h1 id="删除仓库"><a href="#删除仓库" class="headerlink" title="删除仓库"></a>删除仓库</h1><p>进入到需要删除的仓库界面，找到settings点击进入Denger Zone，如下图所示<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/31/a20b95e63a9f8f21d226c6dd8b63e615.png"><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/31/ca8a90fee73639f1eb0987b916227ce7.png"><br>点击“Delete this repository”会出现弹框，里面输入你要删除的仓库的名字后点击底下的红色字体，目的是避免误删<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/31/b81003ace0dc5da0e914019edaa79bdd.png"></p><h1 id="删除文件"><a href="#删除文件" class="headerlink" title="删除文件"></a>删除文件</h1><p>在GitHub上只能删除仓库，单独删除文件或者文件夹需要命令来解决</p><ul><li><strong>本地仓库的文件和远程仓库的文件同时删除</strong><br>先打开本地仓库的文件夹，选择要删除的文件或者文件夹点击删除，注意github仓库不要删除<br>然后执行下面的命令行即可，刷新页面后远程仓库的文件或者文件夹就已经被删除了</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git add *     <span class="comment">#把本地仓库的文件上传到缓存</span></span><br><span class="line">$ git commit -m <span class="string">&#x27;del&#x27;</span>  <span class="comment">#把第一步上传到缓存的东西上传到本地仓库，其中‘del’是操作标识，内容随便填</span></span><br><span class="line">$ git push origin main <span class="comment">#把本地仓库的文件上传到远程仓库 main可以是master</span></span><br></pre></td></tr></table></figure><ul><li><strong>只删除远程仓库，不删除本地仓库</strong><br>进入到Git Bash窗口，执行以下命令</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ git pull origin main <span class="comment">#将远程仓库里面的项目拉下来 main/master</span></span><br><span class="line">$ dir     <span class="comment">#查看有哪些文件夹</span></span><br><span class="line">$ git rm -r --cached JavaMailProject <span class="comment">#删除你要删除的文件每次，这里是删除JavaMailProject文件（cached不会把本地的flashview文件夹删除）</span></span><br><span class="line">$ git commit -m <span class="string">&#x27;删除了JavaMailProject&#x27;</span> <span class="comment">#提交，添加操作说明</span></span><br><span class="line">$ git push -u origin main <span class="comment">#重新提交 main也可以是master分支</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/31/2221b2fa73a7fe33dc44d71da294d8a1.png"></p><h1 id="下载代码"><a href="#下载代码" class="headerlink" title="下载代码"></a>下载代码</h1><p>那么怎么从GitHub上下载开源代码呢？</p><ul><li><p>先在本地新建一个文件夹，把该文件夹作为一个本地仓库。然后使用终端命令(<code>Git Bash Here</code>)进入该文件夹。比如我把Github Pages作为这个项目的文件夹。</p></li><li><p>在GitHub中找到项目路径，复制。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/27/e0f86592c789331b4597c783acbbe4d8.png"></p></li><li><p>在终端执行如下代码   注意：这个命令一定要在刚才的目录下(GitHub Pages文件夹下)执行。等待几秒钟</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> https://github.com/xxxx.git</span><br></pre></td></tr></table></figure><p>然后就可以看到文件夹已经取下来了</p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Node.js</title>
      <link href="2020/12/26/%E5%90%8E%E7%AB%AF/Node.js/"/>
      <url>2020/12/26/%E5%90%8E%E7%AB%AF/Node.js/</url>
      
        <content type="html"><![CDATA[<h1 id="教程推荐"><a href="#教程推荐" class="headerlink" title="教程推荐"></a>教程推荐</h1><p><a href="https://www.runoob.com/nodejs/nodejs-tutorial.html">Node.js|菜鸟教程</a><br><a href="https://www.vxzsk.com/1002.html">Nodejs入门教程</a><br><a href="https://www.vxzsk.com/980.html">NodeJs教程</a><br><a href="https://www.bilibili.com/video/BV1Ns411N7HU">黑马程序员Nodejs入门视频教程</a></p>]]></content>
      
      
      <categories>
          
          <category> Node.js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Node.js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>谈谈IOS和Android</title>
      <link href="2020/12/12/%E5%85%B6%E4%BB%96/%E8%B0%88%E8%B0%88IOS%E5%92%8CAndroid/"/>
      <url>2020/12/12/%E5%85%B6%E4%BB%96/%E8%B0%88%E8%B0%88IOS%E5%92%8CAndroid/</url>
      
        <content type="html"><![CDATA[<h1 id="Android"><a href="#Android" class="headerlink" title="Android"></a>Android</h1><p>Android （美国谷歌公司开发的移动操作系统）</p><ul><li>安卓是一种基于<code>Linux内核</code>（不包含GNU组件）的自由及开放源代码的操作系统。主要使用于移动设备，如智能手机和平板电脑，由美国Google公司和开放手机联盟领导及开发。</li><li>Android操作系统最初由Andy Rubin开发，主要支持手机。2005年8月由Google收购注资。2007年11月，Google与84家硬件制造商、软件开发商及电信营运商组建开放手机联盟共同研发改良Android系统。随后Google以Apache开源许可证的授权方式，发布了Android的源代码。</li><li>第一部Android智能手机发布于2008年10月。Android逐渐扩展到平板电脑及其他领域上，如电视、数码相机、游戏机、智能手表等。2011年第一季度，Android在全球的市场份额首次超过塞班系统，跃居全球第一。 2013年的第四季度，Android平台手机的全球市场份额已经达到78.1%。2013年09月24日谷歌开发的操作系统Android在迎来了5岁生日，全世界采用这款系统的设备数量已经达到10亿台。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/12/a7eff2fee1da45a99414127adaf9170d.png"></li><li>Android一词的本义指“机器人”，同时也是Google于2007年11月5日宣布的基于Linux平台的开源手机操作系统的名称，该平台由操作系统、中间件、用户界面和应用软件组成。</li><li>Android一词最早出现于法国作家利尔亚当（Auguste Villiers de l’Isle-Adam）在1886年发表的科幻小说《未来夏娃》（L’ève future）中。他将外表像人的机器起名为Android。</li><li>Android的Logo是由Ascender公司设计的，诞生于2010年，其设计灵感源于男女厕所门上的图形符号，于是布洛克绘制了一个简单的机器人，它的躯干就像锡罐的形状，头上还有两根天线，Android小机器人便诞生了。其中的文字使用了Ascender公司专门制作的称之为“Droid ” 的字体。Android是一个全身绿色的机器人，绿色也是Android的标志。颜色采用了PMS 376C和RGB中十六进制的#A4C639来绘制，这是Android操作系统的品牌象征。有时候，它们还会使用纯文字的Logo。</li><li>编程语言:C/C++(底层),Java,Kotlin等(应用层)。</li></ul><h1 id="IOS"><a href="#IOS" class="headerlink" title="IOS"></a>IOS</h1><p>IOS(Input Output System)，即输入输出系统，是由苹果公司开发的移动操作系统。</p><ul><li>苹果公司最早于2007年1月9日的Macworld大会上公布这个系统，最初是设计给iPhone使用的，后来陆续套用到iPod touch、iPad上。iOS与苹果的MacOS操作系统一样，属于类Unix的商业操作系统。原本这个系统名为iPhone OS，因为iPad，iPhone，iPod touch都使用iPhone OS，所以2010年WWDC大会上宣布改名为iOS（iOS为美国Cisco公司网络设备操作系统注册商标，苹果改名已获得Cisco公司授权）。</li><li>2016年1月，随着iOS 9.2.1版本的发布，苹果修复了一个存在了3年的漏洞。 [2]  2018年9月22日，美国苹果公司在最新的操作系统中秘密加入了基于iPhone用户和该公司其他设备使用者的“信任评级”功能。、</li><li>软件语言:<a href="https://baike.baidu.com/item/Swift/14080957">Swift</a>,<a href="https://baike.baidu.com/item/Objective-C/8374012">Objective-C</a>,<a href="https://baike.baidu.com/item/c%E8%AF%AD%E8%A8%80/105958?fromtitle=c&fromid=7252092">C</a>,<a href="https://baike.baidu.com/item/C%2B%2B/99272">C++</a>。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/12/64fe3ed21c4b81d505ab9f284970e7de.png"></li></ul><h1 id="区别"><a href="#区别" class="headerlink" title="区别"></a>区别</h1><ul><li><p>应用的设备不同<br>IOS和安卓最大的区别在于本身所应用的设备不同。ios系统主要是应用在iPhone、IPad、itouch设备上的操作系统，安卓系统主要是应用在安卓智能手机上的操作系统。</p></li><li><p>开源与封闭<br>英特尔前CEO安迪·格鲁夫曾提到过一个理论“ <code>硬件性能随着摩尔定律飞速提升，软件总有办法尽量榨干硬件提升带来的性能。</code>” 这便是著名的安迪比尔定理。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/12/1df02760dd4d1f9d77e58de3167a9df9.png"><br>随着软件的飞速发展，老旧的硬件必定满足不了当前软件巨大的内存运行需求，自然会影响使用流畅度。<br>而系统的开放性主要体现在两个方面：<code>源代码</code>和<code>应用接口</code>。Android系统基于Linux开发，跟 Linux一脉相承，开放性极强。安卓拥有自己的开源<code>AOSP</code>(Android Open Source Project)，只要遵循<code>GPL</code>和<code>Apache Licence 2.0</code>开源协议，那么你就可以使用安卓源代码进行二次开发。而安卓由于源代码开放，自然可玩性也比iOS高,但这时的应用开发者有更多的权限去开发自己的App，给App增添更多功能，这无形中加重了手机硬件的运行负担，使得手机使用寿命大大缩短。<br>此外，安卓比iOS开放了更多的<code>应用接口API</code>，我们可以很自然地利用安卓实现很多在iOS上不折腾就没法做的功能。在安卓，你可以随心随意地更换输入法，随意用任何浏览器打开链接，随意从任何途经安装程序，随意调用第三方程序分享文件——这些在iOS上不越狱都做不到，即使越狱也未必比安卓做得更好。<br>而IOS系统最大的一个特点就是<code>沙盒机制</code>，<code>封闭性比较强</code>。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/12/59f65d945b8e9f79e55eeed9a258da79.png"></p></li><li><p>系统安全性区别<br>IOS系统是一款比较强大的<code>操作系统</code>，在ios系统运行的程序不管程序多大都不会造成死机，玩起来非常的流程，而且系统的安全性比较高。<br>安卓系统是属于<code>代码系统</code>，如果所有的应用程序需要下载下来之后才能玩，系统用久之后会经常出现卡机或者是死机的现象，而且安卓系统还存在恶意的插件在系统上自动运行，系统漏洞多，导致个人资料被盗、系统耗电大，流量消耗大等，系统安全性相对来说比较低。</p></li></ul><h1 id="IOS系统流畅的真正原因"><a href="#IOS系统流畅的真正原因" class="headerlink" title="IOS系统流畅的真正原因"></a>IOS系统流畅的真正原因</h1><ul><li><p><strong>优先级别不同</strong><br>IOS对屏幕反应的优先级是最高的，它的响应顺序依次为<code>Touch--Media--Service--Core</code>架构，换句话说当用户只要触摸接触了屏幕之后，系统就会最优先去处理屏幕显示（Touch这个层级）然后才是媒体（Media），服务（Service）以及Core架构。；<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/12/bff085ae73ae81601e25138687131cfa.png"><br>而Android系统的优先级响应层级则是<code>Application--Framework--Library--Kernal</code>架构，和显示相关的图形图像处理这一部分属于Library，可以看到到第三位才是它，当触摸屏幕之后Android系统首先会激活应用，框架然后才是屏幕最后是核心架构。</p></li><li><p><strong>硬件工作配置不同：iOS基于GPU加速</strong><br>在处理器等配置到到了同等级的情况下，GPU就成为了一个凸显差异的重要因素。一些大型软件像是3D游戏对GPU性能要求都会比较高，而iOS系统对图形的各种特效处理基本上正好都是<code>基于GPU硬件</code>进行加速的，它可以不用完全借助CPU或者程序本身，而是通过GPU进行渲染以达到更流畅的操控表现。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/12/8f4db78aaa7626ea7a9e5acb9b088341.png"><br>而Android系统产品则并非如此，因为Android需要适应不同的手机硬件，需要满足各种差异配置，所以很多图形特效大多都要靠程序本身进行加速和渲染，并严重依赖CPU运算的操作自然会加大处理器的负荷，从而出现卡顿的问题。</p></li><li><p><strong>开发机制不同：安卓机制效率低</strong><br>Android的编程语言是<code>JAVA</code>，而iOS的则为<code>Objective-C</code>，IOS采用的是<code>沙盒运行机制</code>，安卓采用的是<code>Java虚拟机运行机制</code>。Objective-C的优势是<code>效率高</code>但比较“唯一”，而JAVA的优势则是<code>跨平台</code>不过运行效率相对偏低，其实这两个编程语言所带来的机制不同，就已经造成了各自系统之间的流畅性差异化。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/12/e80710c53aa2a1bdb7a5d43bed46a91e.png"><br>iOS的Objective-C，编译器gcc，而这个gcc编译出来的代码又被苹果专为iOS架构优化到了极致，运行过程中也不需要虚拟机在中间插手，执行效率自然很高。<br>Android是通过JAVA虚拟机来执行，并且系统需要占用大量内存来换取执行速度，再加上不定期的内存自动回收机制，从而直接导致了卡顿现象的出现。</p></li><li><p><strong>后台管理方式不同</strong><br>苹果是假后台，即<code>墓碑机制</code>，当你回到主界面的时候之前的软件就相当于暂停使用，不再消耗RAM（利用远程通知机制，如果你没启动qq，有朋友给你发消息的话，腾讯服务器会告诉<code>苹果服务器</code>，苹果服务器给你的手机发通知，不需要你的qq在后台）；<br>而安卓是真后台，即使你退出软件，软件也会在后台自启(比如接收qq信息，qq软件必须在运行状态来接收腾讯服务器传来的消息)，从而继续占用你的RAM，而RAM是有限的，当RAM剩余太少的时候你就会感觉到卡顿。同时，后台的程序运行也会占用CPU资源，使手机处理能力下降，这也是安卓手机需要通过使用更高的配置来提高流畅度的原因。<br><a href="https://zhuanlan.zhihu.com/p/137812632">关于iPhone的后台机制详细讲解，通俗易懂！</a></p></li><li><p><strong>线程不同</strong><br>苹果的单线程比安卓机强，大部分安卓机都是<code>堆核</code>，而苹果是<code>堆料</code>，安卓是<code>小核高频</code>，苹果是<code>大核低频</code>，在一个核上堆20多亿晶体管，堪称堆料狂魔，自然单线程神速，上面也说了，苹果在运行一个应用时，另一个是暂停的，所以神一般的单线程加上大部分情况下只运行一个，当然神速。</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 杂谈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> IOS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Butterfly主题魔改</title>
      <link href="2020/12/02/Hexo/Butterfly%E4%B8%BB%E9%A2%98%E9%AD%94%E6%94%B9/"/>
      <url>2020/12/02/Hexo/Butterfly%E4%B8%BB%E9%A2%98%E9%AD%94%E6%94%B9/</url>
      
        <content type="html"><![CDATA[<h1 id="基础美化"><a href="#基础美化" class="headerlink" title="基础美化"></a>基础美化</h1><div class="note success flat"><p>基础美化请仔细查看<a href="https://butterfly.js.org/">Butterfly主题文档</a><br>进阶美化请戳<a href="https://www.antmoe.com/posts/a811d614/index.html#%E5%B0%8F%E5%BA%B7%E7%9A%84%E8%9D%B4%E8%9D%B6%E9%AD%94%E6%94%B9%E5%BA%93">Hexo 博客之 butterfly 主题优雅魔改系列</a></p></div><h1 id="JS-CSS的引入"><a href="#JS-CSS的引入" class="headerlink" title="JS/CSS的引入"></a>JS/CSS的引入</h1><ul><li>JS/CSS一般写在<code>themes\butterfly\source</code>文件夹下对应CSS/JS文件夹里。</li><li>打开主题配置文件(<code>config.yml</code>);</li><li>定位搜索(Ctrl+F)找到<code>inject</code></li><li><code>head</code>引入CSS，<code>bottom</code>引入JS。</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">inject:</span></span><br><span class="line">   <span class="attr">head:</span></span><br><span class="line">     <span class="bullet">-</span> <span class="string">&lt;link</span> <span class="string">rel=&quot;stylesheet&quot;</span> <span class="string">href=&quot;/css/xxx.css&quot;&gt;</span> <span class="comment">#相对路径引入</span></span><br><span class="line">     <span class="bullet">-</span> <span class="string">&lt;link</span> <span class="string">rel=&quot;stylesheet&quot;</span> <span class="string">href=&quot;外链&quot;&gt;</span> <span class="comment">#外链方式引入：将文件上传到 cdn，如七牛云、又拍云、GitHub+Jsdeliver 等。</span></span><br><span class="line">   <span class="attr">bottom:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&lt;script</span> <span class="string">src=&quot;https://cdn.jsdelivr.net/gh/GitHub用户名/GitHub用户名.github.io/js/background.js&quot;&gt;&lt;/script&gt;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&lt;script</span> <span class="string">src=&quot;xxx&quot;&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure><h1 id="视觉美化"><a href="#视觉美化" class="headerlink" title="视觉美化"></a>视觉美化</h1><h2 id="阿里云Iconfont"><a href="#阿里云Iconfont" class="headerlink" title="阿里云Iconfont"></a>阿里云Iconfont</h2><ul><li><p>打开i<a href="https://www.iconfont.cn/">confont</a>的网站，点击导航栏的人像图标，会跳出注册界面，按要求注册账户。<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@191133b33015124f6fb7a08665dacfd7714cb8c7/2021/01/13/93c6813d7760be85e240dd553ae21692.png"></p></li><li><p>选择自己需要的图标，把鼠标移到图标上，会显示三個个按钮（依次是添加入库、收藏和下载），而我们需要的是把图标添加入库<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@118b4ef8088e03a62208a26b71ef6abe2796ff93/2021/01/13/9f71e7b7529587d69c5992262fc9e9df.png"></p></li><li><p>加入购物车后，点击购物车，并把图标加入项目<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@6d4c474ed78db667e370e98a99e50052bea24492/2021/01/13/d56a1c76cebdcdfdb665b9f68897c585.png"></p></li><li><p>添加到项目之后，点击<code>Font class</code>，然后再点击<code>暂无代码，点击生成文字</code>，网站会自动生产CSS链接，我们只需要复制链接就行<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@e49f496e329aa4ea556e703ec0f8e5086ba0b7e0/2021/01/13/b42958e9351d549e6ec37042b38d5759.png"></p></li><li><p>可以点开链接把代码引入自己的CSS文件中，也可以复制链接，在<code>主题配置文件中引入CDN</code><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@15ec51305babb1f518ffce8de1f47ffbaf4b0bff/2021/01/13/ace5472f25db41c6bc6e1dffcd3ee27b.png"></p></li><li><p>使用格式为<code>iconfont icon名字</code><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@15ec51305babb1f518ffce8de1f47ffbaf4b0bff/2021/01/13/ace5472f25db41c6bc6e1dffcd3ee27b.png"></p></li><li><p>修改图标大小和颜色：在<code>\themes\Butterfly\source\css</code>目录下创建一个<code>Icon_size.css</code>文件(自定义名称),然后同样引入博客<code>配置文件head</code>下。</p></li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*.icon-bilibili:before &#123;</span></span><br><span class="line"><span class="comment">  content: &quot;\e600&quot;;</span></span><br><span class="line"><span class="comment">&#125; */</span></span><br><span class="line"><span class="comment">/* 卡片处小图标 */</span></span><br><span class="line"><span class="selector-class">.card_icon_bilibili</span> &#123;</span><br><span class="line">  <span class="comment">/* 修改颜色 */</span></span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#FF69B4</span>;</span><br><span class="line">  <span class="comment">/* 修改大小 */</span></span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">24px</span>;</span><br><span class="line">   </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.card_icon_git</span>&#123;</span><br><span class="line">  <span class="comment">/* 修改颜色 */</span></span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#6495ED</span>;</span><br><span class="line">  <span class="comment">/* 修改大小 */</span></span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">24px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.card_icon_qq</span>&#123;</span><br><span class="line">  <span class="comment">/* 修改颜色 */</span></span><br><span class="line">  <span class="attribute">color</span>:<span class="number">#FF8C00</span> ;</span><br><span class="line">  <span class="comment">/* 修改大小 */</span></span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">24px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.card_icon_csdn</span>&#123;</span><br><span class="line">  <span class="comment">/* 修改颜色 */</span></span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#FF0000</span>;</span><br><span class="line">  <span class="comment">/* 修改大小 */</span></span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">24px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.card_icon_zhihu</span>&#123;</span><br><span class="line">  <span class="comment">/* 修改颜色 */</span></span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#00BFFF</span>;</span><br><span class="line">  <span class="comment">/* 修改大小 */</span></span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">24px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="fontawesome"><a href="#fontawesome" class="headerlink" title="fontawesome"></a>fontawesome</h2><ul><li><p>引入CDN：<a href="https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free/css/all.min.css">https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free/css/all.min.css</a></p></li><li><p>格式<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@fe05439e37df95fe87ea7175c5bb9ee83f730876/2021/01/13/e6012aed01cd0fe261cc5cd2c4e3a8df.png"></p></li><li><p>任意元素动画</p></li></ul><div class="note success flat"><p>参考<a href="https://www.antmoe.com/posts/a811d614/index.html#%E4%BB%BB%E6%84%8F%E5%85%83%E7%B4%A0%E6%B7%BB%E5%8A%A0%E5%8A%A8%E6%95%88%E5%8A%A8%E7%94%BB">任意元素添加动效动画</a></p></div><h2 id="鼠标样式"><a href="#鼠标样式" class="headerlink" title="鼠标样式"></a>鼠标样式</h2><p>新建<code>\themes\butterfly\source\css\Myidea.css</code>（css文件名称自定义）,并在主题配置文件中引入CSS。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*设置鼠标样式*/</span></span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">cursor</span>: <span class="built_in">url</span>(https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@latest/Hexo/img/default.cur),</span><br><span class="line">        default;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">a</span>,<span class="selector-tag">img</span> &#123;</span><br><span class="line">    <span class="attribute">cursor</span>: <span class="built_in">url</span>(https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@latest/Hexo/img/pointer.cur),</span><br><span class="line">        default;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="页脚渐变"><a href="#页脚渐变" class="headerlink" title="页脚渐变"></a>页脚渐变</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 页脚footer */</span></span><br><span class="line"><span class="comment">/* 渐变色滚动动画 */</span></span><br><span class="line"><span class="keyword">@-webkit-keyframes</span> Gradient &#123;</span><br><span class="line">    0% &#123;</span><br><span class="line">        <span class="attribute">background-position</span>: <span class="number">0</span> <span class="number">50%</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    50% &#123;</span><br><span class="line">        <span class="attribute">background-position</span>: <span class="number">100%</span> <span class="number">50%</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    100% &#123;</span><br><span class="line">        <span class="attribute">background-position</span>: <span class="number">0</span> <span class="number">50%</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@-moz-keyframes</span> Gradient &#123;</span><br><span class="line">    0% &#123;</span><br><span class="line">        <span class="attribute">background-position</span>: <span class="number">0</span> <span class="number">50%</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    50% &#123;</span><br><span class="line">        <span class="attribute">background-position</span>: <span class="number">100%</span> <span class="number">50%</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    100% &#123;</span><br><span class="line">        <span class="attribute">background-position</span>: <span class="number">0</span> <span class="number">50%</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@keyframes</span> Gradient &#123;</span><br><span class="line">    0% &#123;</span><br><span class="line">        <span class="attribute">background-position</span>: <span class="number">0</span> <span class="number">50%</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    50% &#123;</span><br><span class="line">        <span class="attribute">background-position</span>: <span class="number">100%</span> <span class="number">50%</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    100% &#123;</span><br><span class="line">        <span class="attribute">background-position</span>: <span class="number">0</span> <span class="number">50%</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#footer</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">linear-gradient</span>(-<span class="number">45deg</span>, #ee7752, #ce3e75, #<span class="number">23</span>a6d5, #<span class="number">23</span>d5ab);</span><br><span class="line">    <span class="attribute">background-size</span>: <span class="number">400%</span> <span class="number">400%</span>;</span><br><span class="line">    <span class="attribute">-webkit-animation</span>: Gradient <span class="number">10s</span> ease infinite;</span><br><span class="line">    <span class="attribute">-moz-animation</span>: Gradient <span class="number">10s</span> ease infinite;</span><br><span class="line">    <span class="attribute">animation</span>: Gradient <span class="number">10s</span> ease infinite;</span><br><span class="line">    <span class="attribute">-o-user-select</span>: none;</span><br><span class="line">    <span class="attribute">-ms-user-select</span>: none;</span><br><span class="line">    <span class="attribute">-webkit-user-select</span>: none;</span><br><span class="line">    <span class="attribute">-moz-user-select</span>: none;</span><br><span class="line">    <span class="attribute">user-select</span>: none;</span><br><span class="line">    <span class="attribute">border-top-left-radius</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">border-top-right-radius</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#footer</span><span class="selector-pseudo">:before</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/21/272f832b461c620d418265018f4f6d16.png"></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*页脚a标签字体颜色*/</span></span><br><span class="line"><span class="selector-id">#footer-wrap</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#00c4b6</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="背景渐变"><a href="#背景渐变" class="headerlink" title="背景渐变"></a>背景渐变</h2><p>在<code>C:\blog\lzyblog\source\_posts</code>目录下新建<code>background.css</code></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#web_bg</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">-webkit-linear-gradient</span>(</span><br><span class="line">    <span class="number">0deg</span>,</span><br><span class="line">    rgba(<span class="number">247</span>, <span class="number">149</span>, <span class="number">51</span>, <span class="number">0.1</span>) <span class="number">0</span>,</span><br><span class="line">    <span class="built_in">rgba</span>(<span class="number">243</span>, <span class="number">112</span>, <span class="number">85</span>, <span class="number">0.1</span>) <span class="number">15%</span>,</span><br><span class="line">    <span class="built_in">rgba</span>(<span class="number">239</span>, <span class="number">78</span>, <span class="number">123</span>, <span class="number">0.1</span>) <span class="number">30%</span>,</span><br><span class="line">    <span class="built_in">rgba</span>(<span class="number">161</span>, <span class="number">102</span>, <span class="number">171</span>, <span class="number">0.1</span>) <span class="number">44%</span>,</span><br><span class="line">    <span class="built_in">rgba</span>(<span class="number">80</span>, <span class="number">115</span>, <span class="number">184</span>, <span class="number">0.1</span>) <span class="number">58%</span>,</span><br><span class="line">    <span class="built_in">rgba</span>(<span class="number">16</span>, <span class="number">152</span>, <span class="number">173</span>, <span class="number">0.1</span>) <span class="number">72%</span>,</span><br><span class="line">    <span class="built_in">rgba</span>(<span class="number">7</span>, <span class="number">179</span>, <span class="number">155</span>, <span class="number">0.1</span>) <span class="number">86%</span>,</span><br><span class="line">    <span class="built_in">rgba</span>(<span class="number">109</span>, <span class="number">186</span>, <span class="number">130</span>, <span class="number">0.1</span>) <span class="number">100%</span></span><br><span class="line">  );</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">-moz-linear-gradient</span>(</span><br><span class="line">    <span class="number">0deg</span>,</span><br><span class="line">    rgba(<span class="number">247</span>, <span class="number">149</span>, <span class="number">51</span>, <span class="number">0.1</span>) <span class="number">0</span>,</span><br><span class="line">    <span class="built_in">rgba</span>(<span class="number">243</span>, <span class="number">112</span>, <span class="number">85</span>, <span class="number">0.1</span>) <span class="number">15%</span>,</span><br><span class="line">    <span class="built_in">rgba</span>(<span class="number">239</span>, <span class="number">78</span>, <span class="number">123</span>, <span class="number">0.1</span>) <span class="number">30%</span>,</span><br><span class="line">    <span class="built_in">rgba</span>(<span class="number">161</span>, <span class="number">102</span>, <span class="number">171</span>, <span class="number">0.1</span>) <span class="number">44%</span>,</span><br><span class="line">    <span class="built_in">rgba</span>(<span class="number">80</span>, <span class="number">115</span>, <span class="number">184</span>, <span class="number">0.1</span>) <span class="number">58%</span>,</span><br><span class="line">    <span class="built_in">rgba</span>(<span class="number">16</span>, <span class="number">152</span>, <span class="number">173</span>, <span class="number">0.1</span>) <span class="number">72%</span>,</span><br><span class="line">    <span class="built_in">rgba</span>(<span class="number">7</span>, <span class="number">179</span>, <span class="number">155</span>, <span class="number">0.1</span>) <span class="number">86%</span>,</span><br><span class="line">    <span class="built_in">rgba</span>(<span class="number">109</span>, <span class="number">186</span>, <span class="number">130</span>, <span class="number">0.1</span>) <span class="number">100%</span></span><br><span class="line">  );</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">-o-linear-gradient</span>(</span><br><span class="line">    <span class="number">0deg</span>,</span><br><span class="line">    rgba(<span class="number">247</span>, <span class="number">149</span>, <span class="number">51</span>, <span class="number">0.1</span>) <span class="number">0</span>,</span><br><span class="line">    <span class="built_in">rgba</span>(<span class="number">243</span>, <span class="number">112</span>, <span class="number">85</span>, <span class="number">0.1</span>) <span class="number">15%</span>,</span><br><span class="line">    <span class="built_in">rgba</span>(<span class="number">239</span>, <span class="number">78</span>, <span class="number">123</span>, <span class="number">0.1</span>) <span class="number">30%</span>,</span><br><span class="line">    <span class="built_in">rgba</span>(<span class="number">161</span>, <span class="number">102</span>, <span class="number">171</span>, <span class="number">0.1</span>) <span class="number">44%</span>,</span><br><span class="line">    <span class="built_in">rgba</span>(<span class="number">80</span>, <span class="number">115</span>, <span class="number">184</span>, <span class="number">0.1</span>) <span class="number">58%</span>,</span><br><span class="line">    <span class="built_in">rgba</span>(<span class="number">16</span>, <span class="number">152</span>, <span class="number">173</span>, <span class="number">0.1</span>) <span class="number">72%</span>,</span><br><span class="line">    <span class="built_in">rgba</span>(<span class="number">7</span>, <span class="number">179</span>, <span class="number">155</span>, <span class="number">0.1</span>) <span class="number">86%</span>,</span><br><span class="line">    <span class="built_in">rgba</span>(<span class="number">109</span>, <span class="number">186</span>, <span class="number">130</span>, <span class="number">0.1</span>) <span class="number">100%</span></span><br><span class="line">  );</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">-ms-linear-gradient</span>(</span><br><span class="line">    <span class="number">0deg</span>,</span><br><span class="line">    rgba(<span class="number">247</span>, <span class="number">149</span>, <span class="number">51</span>, <span class="number">0.1</span>) <span class="number">0</span>,</span><br><span class="line">    <span class="built_in">rgba</span>(<span class="number">243</span>, <span class="number">112</span>, <span class="number">85</span>, <span class="number">0.1</span>) <span class="number">15%</span>,</span><br><span class="line">    <span class="built_in">rgba</span>(<span class="number">239</span>, <span class="number">78</span>, <span class="number">123</span>, <span class="number">0.1</span>) <span class="number">30%</span>,</span><br><span class="line">    <span class="built_in">rgba</span>(<span class="number">161</span>, <span class="number">102</span>, <span class="number">171</span>, <span class="number">0.1</span>) <span class="number">44%</span>,</span><br><span class="line">    <span class="built_in">rgba</span>(<span class="number">80</span>, <span class="number">115</span>, <span class="number">184</span>, <span class="number">0.1</span>) <span class="number">58%</span>,</span><br><span class="line">    <span class="built_in">rgba</span>(<span class="number">16</span>, <span class="number">152</span>, <span class="number">173</span>, <span class="number">0.1</span>) <span class="number">72%</span>,</span><br><span class="line">    <span class="built_in">rgba</span>(<span class="number">7</span>, <span class="number">179</span>, <span class="number">155</span>, <span class="number">0.1</span>) <span class="number">86%</span>,</span><br><span class="line">    <span class="built_in">rgba</span>(<span class="number">109</span>, <span class="number">186</span>, <span class="number">130</span>, <span class="number">0.1</span>) <span class="number">100%</span></span><br><span class="line">  );</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">linear-gradient</span>(</span><br><span class="line">    <span class="number">90deg</span>,</span><br><span class="line">    rgba(<span class="number">247</span>, <span class="number">149</span>, <span class="number">51</span>, <span class="number">0.1</span>) <span class="number">0</span>,</span><br><span class="line">    <span class="built_in">rgba</span>(<span class="number">243</span>, <span class="number">112</span>, <span class="number">85</span>, <span class="number">0.1</span>) <span class="number">15%</span>,</span><br><span class="line">    <span class="built_in">rgba</span>(<span class="number">239</span>, <span class="number">78</span>, <span class="number">123</span>, <span class="number">0.1</span>) <span class="number">30%</span>,</span><br><span class="line">    <span class="built_in">rgba</span>(<span class="number">161</span>, <span class="number">102</span>, <span class="number">171</span>, <span class="number">0.1</span>) <span class="number">44%</span>,</span><br><span class="line">    <span class="built_in">rgba</span>(<span class="number">80</span>, <span class="number">115</span>, <span class="number">184</span>, <span class="number">0.1</span>) <span class="number">58%</span>,</span><br><span class="line">    <span class="built_in">rgba</span>(<span class="number">16</span>, <span class="number">152</span>, <span class="number">173</span>, <span class="number">0.1</span>) <span class="number">72%</span>,</span><br><span class="line">    <span class="built_in">rgba</span>(<span class="number">7</span>, <span class="number">179</span>, <span class="number">155</span>, <span class="number">0.1</span>) <span class="number">86%</span>,</span><br><span class="line">    <span class="built_in">rgba</span>(<span class="number">109</span>, <span class="number">186</span>, <span class="number">130</span>, <span class="number">0.1</span>) <span class="number">100%</span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="文章透明度"><a href="#文章透明度" class="headerlink" title="文章透明度"></a>文章透明度</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">* 文章页背景 */</span><br><span class="line"><span class="selector-class">.layout_post</span>&gt;<span class="selector-id">#post</span> &#123;</span><br><span class="line">    <span class="comment">/* 以下代表白色透明度为0.3*/</span></span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>,.<span class="number">3</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 所有背景（包括首页卡片、文章页、页面页等） */</span></span><br><span class="line"><span class="selector-id">#aside_content</span> <span class="selector-class">.card-widget</span>, <span class="selector-id">#recent-posts</span>&gt;<span class="selector-class">.recent-post-item</span>, <span class="selector-class">.layout_page</span>&gt;<span class="selector-tag">div</span><span class="selector-pseudo">:first-child</span><span class="selector-pseudo">:not(.recent-posts)</span>, <span class="selector-class">.layout_post</span>&gt;<span class="selector-id">#page</span>, <span class="selector-class">.layout_post</span>&gt;<span class="selector-id">#post</span>, <span class="selector-class">.read-mode</span> <span class="selector-class">.layout_post</span>&gt;<span class="selector-id">#post</span>&#123;</span><br><span class="line">    <span class="comment">/* 以下代表白色透明度为0.3 */</span></span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>,.<span class="number">3</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="昵称颜色"><a href="#昵称颜色" class="headerlink" title="昵称颜色"></a>昵称颜色</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 博主昵称颜色 */</span></span><br><span class="line"><span class="selector-class">.author-info__name</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#ff7242</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/02/f60544faff00e4c69603da563eda7c40.png"></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 首页中间打字效果上方 博客昵称颜色*/</span></span><br><span class="line"><span class="selector-id">#page-header</span> <span class="selector-id">#site_title</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#80bdab</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 顶部导航栏 博客昵称颜色*/</span></span><br><span class="line"><span class="selector-id">#nav</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#f9f2f4</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="MAC代码框美化"><a href="#MAC代码框美化" class="headerlink" title="MAC代码框美化"></a>MAC代码框美化</h2><p>将 <code>butterfly.yml</code> 的 <code>highlight_theme</code> 配置项改为 <code>mac</code> 后任意引入下方一个 css 即可。（也可加入到自己的 css 文件中）</p><ul><li>白色代码框<br>  <a href="https://cdn.jsdelivr.net/gh/sviptzk/StaticFile_HEXO@latest/butterfly/css/macWhite.css">https://cdn.jsdelivr.net/gh/sviptzk/StaticFile_HEXO@latest/butterfly/css/macWhite.css</a><br>  <img src="https://cdn.jsdelivr.net/gh/lzyblog/image@e6cfced90d48b49ecadb22a7b06596cdf2765e70/2021/01/13/70a4821403cf85e3fdb8e3fb2b8dcc7a.png"></li><li>黑色美化版<br>  <a href="https://cdn.jsdelivr.net/gh/sviptzk/StaticFile_HEXO@latest/butterfly/css/macblack.css">https://cdn.jsdelivr.net/gh/sviptzk/StaticFile_HEXO@latest/butterfly/css/macblack.css</a><br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@a02c127751b2c8af1bcbff88a438d1045bc08de5/2021/01/13/614f941be507772f9bfc354e0deacdd6.png"></li></ul><h2 id="主题颜色"><a href="#主题颜色" class="headerlink" title="主题颜色"></a>主题颜色</h2><p>找到主题配置文件里<code>theme_color</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">theme_color:</span> <span class="comment">#(自定义主题色)</span></span><br><span class="line">   <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">   <span class="attr">main:</span> <span class="string">&quot;#49B1F5&quot;</span> <span class="comment">#文章颜色</span></span><br><span class="line">   <span class="attr">paginator:</span> <span class="string">&quot;#00c4b6&quot;</span> <span class="comment">#分页器颜色</span></span><br><span class="line">   <span class="attr">button_hover:</span> <span class="string">&quot;#FF7242&quot;</span> <span class="comment"># 鼠标移动到按钮上的显示的颜色</span></span><br><span class="line">   <span class="attr">text_selection:</span> <span class="string">&quot;#00c4b6&quot;</span> <span class="comment">#选择文字的背景颜色</span></span><br><span class="line">   <span class="attr">link_color:</span> <span class="string">&quot;#99a9bf&quot;</span> <span class="comment">#链接颜色</span></span><br><span class="line">   <span class="attr">meta_color:</span> <span class="string">&quot;#858585&quot;</span></span><br><span class="line">   <span class="attr">hr_color:</span> <span class="string">&quot;#A4D8FA&quot;</span> <span class="comment"># 小剪刀颜色、小摩托颜色</span></span><br><span class="line">   <span class="attr">code_foreground:</span> <span class="string">&quot;#F47466&quot;</span> <span class="comment"># 代码`code`的颜色</span></span><br><span class="line">   <span class="attr">code_background:</span> <span class="string">&quot;rgba(27, 31, 35, .05)&quot;</span> <span class="comment"># 代码`code`的背景颜色</span></span><br><span class="line">   <span class="attr">toc_color:</span> <span class="string">&quot;#00c4b6&quot;</span></span><br><span class="line">   <span class="attr">blockquote_padding_color:</span> <span class="string">&quot;#49b1f5&quot;</span> <span class="comment"># &gt;  &gt;&gt; &gt;&gt;&gt; 描述颜色</span></span><br><span class="line">   <span class="attr">blockquote_background_color:</span> <span class="string">&quot;#49b1f5&quot;</span></span><br></pre></td></tr></table></figure><h2 id="公告栏装饰"><a href="#公告栏装饰" class="headerlink" title="公告栏装饰"></a>公告栏装饰</h2><p>在 C:\lzyblog\themes\Butterfly_config.yml 里找到 <code>card_announcement: </code>下的 <code>content: </code>后面添加</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">card_announcement:</span> <span class="comment">#公告栏</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">content:</span> <span class="string">城市的轮廓，你的孤独&lt;img</span> <span class="string">src=&quot;https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/19/33a1542ce0a798e62e404f0bd948149f.png&quot;&gt;</span></span><br></pre></td></tr></table></figure><h1 id="扩展功能"><a href="#扩展功能" class="headerlink" title="扩展功能"></a>扩展功能</h1><h2 id="友情链接"><a href="#友情链接" class="headerlink" title="友情链接"></a>友情链接</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page link</span><br></pre></td></tr></table></figure><p><code>C:\lzyblog\source\link\index.md</code></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 友情链接</span><br><span class="line">date: 2020-06-03 17:53:02</span><br><span class="line">type: link</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p><code>C:\lzyblog\source\ </code>目录下新建<code>_data </code>文件夹，文件夹内新建 <code>link.yml</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">class_name:</span> <span class="string">友情链接</span></span><br><span class="line">  <span class="attr">class_desc:</span> <span class="string">🤝🤝🤝</span></span><br><span class="line">  <span class="attr">link_list:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">小李博客</span></span><br><span class="line">      <span class="attr">link:</span> <span class="string">https://xiaoliblog.cn/</span></span><br><span class="line">      <span class="attr">avatar:</span> <span class="string">https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/11/19/1f52735f41052a8a163fbef9101b879e.png</span></span><br><span class="line">      <span class="attr">descr:</span> <span class="string">越努力越幸运</span></span><br></pre></td></tr></table></figure><h2 id="复选列表"><a href="#复选列表" class="headerlink" title="复选列表"></a>复选列表</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs t1 %&#125;</span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- tab --&gt;</span></span></span><br><span class="line"><span class="strong">**This is Tab 1.**</span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- endtab --&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- tab --&gt;</span></span></span><br><span class="line"><span class="strong">**This is Tab 2.**</span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- endtab --&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- tab --&gt;</span></span></span><br><span class="line"><span class="strong">**This is Tab 3.**</span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- endtab --&gt;</span></span></span><br><span class="line">&#123;% endtabs %&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><div class="tabs" id="t1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#t1-1">t1 1</button></li><li class="tab"><button type="button" data-href="#t1-2">t1 2</button></li><li class="tab"><button type="button" data-href="#t1-3">t1 3</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="t1-1"><p><strong>This is Tab 1.</strong></p><button type="button" class="tab-to-top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="t1-2"><p><strong>This is Tab 2.</strong></p><button type="button" class="tab-to-top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="t1-3"><p><strong>This is Tab 3.</strong></p><button type="button" class="tab-to-top"><i class="fas fa-arrow-up"></i></button></div></div></div><ul><li>自定义Tab名 + 只有icon + icon和Tab名</li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs t2%&#125;</span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- tab 第一个Tab --&gt;</span></span></span><br><span class="line"><span class="strong">**tab名字为第一个Tab**</span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- endtab --&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- tab @fab fa-apple-pay --&gt;</span></span></span><br><span class="line"><span class="strong">**只有图标 沒有Tab名字**</span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- endtab --&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- tab 炸弹@fas fa-bomb --&gt;</span></span></span><br><span class="line"><span class="strong">**名字+icon**</span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- endtab --&gt;</span></span></span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><div class="tabs" id="t2"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#t2-1">第一个Tab</button></li><li class="tab"><button type="button" data-href="#t2-2"><i class="fab fa-apple-pay" style="text-align: center;"></i></button></li><li class="tab"><button type="button" data-href="#t2-3"><i class="fas fa-bomb"></i>炸弹</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="t2-1"><p><strong>tab名字为第一个Tab</strong></p><button type="button" class="tab-to-top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="t2-2"><p><strong>只有图标 沒有Tab名字</strong></p><button type="button" class="tab-to-top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="t2-3"><p><strong>名字+icon</strong></p><button type="button" class="tab-to-top"><i class="fas fa-arrow-up"></i></button></div></div></div><div class="note warning flat"><p>Tab block must have unique name! 每个表格都需要定义不同的名称，如t1,t2</p></div><h2 id="Button"><a href="#Button" class="headerlink" title="Button"></a>Button</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&#123;% btn [url],[text],[icon],[color] [style] [layout] [position] [size] %&#125;</span><br><span class="line"></span><br><span class="line">[url]         : 鏈接</span><br><span class="line">[text]        : 按鈕文字</span><br><span class="line">[icon]        : [可選] 圖標</span><br><span class="line">[color]       : [可選] 按鈕背景顔色(默認style時）</span><br><span class="line"><span class="code">                      按鈕字體和邊框顔色(outline時)</span></span><br><span class="line"><span class="code">                      default/blue/pink/red/purple/orange/green</span></span><br><span class="line"><span class="code">[style]       : [可選] 按鈕樣式 默認實心</span></span><br><span class="line"><span class="code">                      outline/留空</span></span><br><span class="line"><span class="code">[layout]      : [可選] 按鈕佈局 默認為line</span></span><br><span class="line"><span class="code">                      block/留空</span></span><br><span class="line"><span class="code">[position]    : [可選] 按鈕位置 前提是設置了layout為block 默認為左邊</span></span><br><span class="line"><span class="code">                      center/right/留空</span></span><br><span class="line"><span class="code">[size]        : [可選] 按鈕大小</span></span><br><span class="line"><span class="code">                      larger/留空</span></span><br></pre></td></tr></table></figure><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">This is my website, click the button &#123;% btn &#x27;https://lzyblog.github.io/&#x27;,xiaoliblog %&#125;</span><br><span class="line">This is my website, click the button &#123;% btn &#x27;https://lzyblog.github.io/&#x27;,xiaoliblog ,far fa-hand-point-right %&#125;</span><br><span class="line">This is my website, click the button &#123;% btn &#x27;https://lzyblog.github.io/&#x27;,xiaoliblog ,,outline %&#125;</span><br><span class="line">This is my website, click the button &#123;% btn &#x27;https://lzyblog.github.io/&#x27;,xiaoliblog ,far fa-hand-point-right,outline %&#125;</span><br><span class="line">This is my website, click the button &#123;% btn &#x27;https://lzyblog.github.io/&#x27;,xiaoliblog ,far fa-hand-point-right,larger %&#125;</span><br></pre></td></tr></table></figure><p>This is my website, click the button <a class="btn-beautify button--animated " href="https://xiaoliblog.cn/" title="xiaoliblog"><span>xiaoliblog</span></a><br>This is my website, click the button <a class="btn-beautify button--animated " href="https://xiaoliblog.cn/" title="xiaoliblog"><i class="far fa-hand-point-right fa-fw"></i><span>xiaoliblog</span></a><br>This is my website, click the button <a class="btn-beautify button--animated " href="https://xiaoliblog.cn/" title="xiaoliblog"><i class="outline fa-fw"></i><span>xiaoliblog</span></a><br>This is my website, click the button <a class="btn-beautify button--animated outline" href="https://xiaoliblog.cn/" title="xiaoliblog"><i class="far fa-hand-point-right fa-fw"></i><span>xiaoliblog</span></a><br>This is my website, click the button <a class="btn-beautify button--animated larger" href="https://xiaoliblog.cn/" title="xiaoliblog"><i class="far fa-hand-point-right fa-fw"></i><span>xiaoliblog</span></a></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% btn &#x27;https://xiaoliblog.cn/&#x27;,xiaoliblog,far fa-hand-point-right,block %&#125;</span><br><span class="line">&#123;% btn &#x27;https://xiaoliblog.cn/&#x27;,xiaoliblog,far fa-hand-point-right,block center larger %&#125;</span><br><span class="line">&#123;% btn &#x27;https://xiaoliblog.cn/&#x27;,xiaoliblog,far fa-hand-point-right,block right outline larger %&#125;</span><br></pre></td></tr></table></figure><a class="btn-beautify button--animated block" href="https://xiaoliblog.cn/" title="xiaoliblog"><i class="far fa-hand-point-right fa-fw"></i><span>xiaoliblog</span></a><a class="btn-beautify button--animated block center larger" href="https://xiaoliblog.cn/" title="xiaoliblog"><i class="far fa-hand-point-right fa-fw"></i><span>xiaoliblog</span></a><a class="btn-beautify button--animated block right outline larger" href="https://xiaoliblog.cn/" title="xiaoliblog"><i class="far fa-hand-point-right fa-fw"></i><span>xiaoliblog</span></a><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;% btn &#x27;https://xiaoliblog.cn/&#x27;,xiaoliblog,far fa-hand-point-right,larger %&#125;</span><br><span class="line">&#123;% btn &#x27;https://xiaoliblog.cn/&#x27;,xiaoliblog,far fa-hand-point-right,blue larger %&#125;</span><br><span class="line">&#123;% btn &#x27;https://xiaoliblog.cn/&#x27;,xiaoliblog,far fa-hand-point-right,pink larger %&#125;</span><br><span class="line">&#123;% btn &#x27;https://xiaoliblog.cn/&#x27;,xiaoliblog,far fa-hand-point-right,red larger %&#125;</span><br><span class="line">&#123;% btn &#x27;https://xiaoliblog.cn/&#x27;,xiaoliblog,far fa-hand-point-right,purple larger %&#125;</span><br><span class="line">&#123;% btn &#x27;https://xiaoliblog.cn/&#x27;,xiaoliblog,far fa-hand-point-right,orange larger %&#125;</span><br><span class="line">&#123;% btn &#x27;https://xiaoliblog.cn/&#x27;,xiaoliblog,far fa-hand-point-right,green larger %&#125;</span><br></pre></td></tr></table></figure><a class="btn-beautify button--animated larger" href="https://xiaoliblog.cn/" title="xiaoliblog"><i class="far fa-hand-point-right fa-fw"></i><span>xiaoliblog</span></a><a class="btn-beautify button--animated blue larger" href="https://xiaoliblog.cn/" title="xiaoliblog"><i class="far fa-hand-point-right fa-fw"></i><span>xiaoliblog</span></a><a class="btn-beautify button--animated pink larger" href="https://xiaoliblog.cn/" title="xiaoliblog"><i class="far fa-hand-point-right fa-fw"></i><span>xiaoliblog</span></a><a class="btn-beautify button--animated red larger" href="https://xiaoliblog.cn/" title="xiaoliblog"><i class="far fa-hand-point-right fa-fw"></i><span>xiaoliblog</span></a><a class="btn-beautify button--animated purple larger" href="https://xiaoliblog.cn/" title="xiaoliblog"><i class="far fa-hand-point-right fa-fw"></i><span>xiaoliblog</span></a><a class="btn-beautify button--animated orange larger" href="https://xiaoliblog.cn/" title="xiaoliblog"><i class="far fa-hand-point-right fa-fw"></i><span>xiaoliblog</span></a><a class="btn-beautify button--animated green larger" href="https://xiaoliblog.cn/" title="xiaoliblog"><i class="far fa-hand-point-right fa-fw"></i><span>xiaoliblog</span></a><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;btn-center&quot;</span>&gt;</span></span></span><br><span class="line">&#123;% btn &#x27;https://xiaoliblog.cn/&#x27;,xiaoliblog,far fa-hand-point-right,outline larger %&#125;</span><br><span class="line">&#123;% btn &#x27;https://xiaoliblog.cn/&#x27;,xiaoliblog,far fa-hand-point-right,outline blue larger %&#125;</span><br><span class="line">&#123;% btn &#x27;https://xiaoliblog.cn/&#x27;,xiaoliblog,far fa-hand-point-right,outline pink larger %&#125;</span><br><span class="line">&#123;% btn &#x27;https://xiaoliblog.cn/&#x27;,xiaoliblog,far fa-hand-point-right,outline red larger %&#125;</span><br><span class="line">&#123;% btn &#x27;https://xiaoliblog.cn/&#x27;,xiaoliblog,far fa-hand-point-right,outline purple larger %&#125;</span><br><span class="line">&#123;% btn &#x27;https://xiaoliblog.cn/&#x27;,xiaoliblog,far fa-hand-point-right,outline orange larger %&#125;</span><br><span class="line">&#123;% btn &#x27;https://xiaoliblog.cn/&#x27;,xiaoliblog,far fa-hand-point-right,outline green larger %&#125;</span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure><div class="btn-center"><a class="btn-beautify button--animated outline larger" href="https://xiaoliblog.cn/" title="xiaoliblog"><i class="far fa-hand-point-right fa-fw"></i><span>xiaoliblog</span></a><a class="btn-beautify button--animated outline blue larger" href="https://xiaoliblog.cn/" title="xiaoliblog"><i class="far fa-hand-point-right fa-fw"></i><span>xiaoliblog</span></a><a class="btn-beautify button--animated outline pink larger" href="https://xiaoliblog.cn/" title="xiaoliblog"><i class="far fa-hand-point-right fa-fw"></i><span>xiaoliblog</span></a><a class="btn-beautify button--animated outline red larger" href="https://xiaoliblog.cn/" title="xiaoliblog"><i class="far fa-hand-point-right fa-fw"></i><span>xiaoliblog</span></a><a class="btn-beautify button--animated outline purple larger" href="https://xiaoliblog.cn/" title="xiaoliblog"><i class="far fa-hand-point-right fa-fw"></i><span>xiaoliblog</span></a><a class="btn-beautify button--animated outline orange larger" href="https://xiaoliblog.cn/" title="xiaoliblog"><i class="far fa-hand-point-right fa-fw"></i><span>xiaoliblog</span></a><a class="btn-beautify button--animated outline green larger" href="https://xiaoliblog.cn/" title="xiaoliblog"><i class="far fa-hand-point-right fa-fw"></i><span>xiaoliblog</span></a></div><h2 id="标签外挂"><a href="#标签外挂" class="headerlink" title="标签外挂"></a>标签外挂</h2><h3 id="主题内置"><a href="#主题内置" class="headerlink" title="主题内置"></a>主题内置</h3><div class="note warning flat"><p>注意：标签外挂是Hexo独有的功能，並不是标签的Markdown格式。<br>以下的写法，只适用于Butterfly主题，用在其它主題上不会有效果，甚至可能会报错。使用前请留意</p></div><ul><li>配置主题文件</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">note:</span></span><br><span class="line">  <span class="comment"># Note tag style values:</span></span><br><span class="line">  <span class="comment">#  - simple    bs-callout old alert style. Default.</span></span><br><span class="line">  <span class="comment">#  - modern    bs-callout new (v2-v3) alert style.</span></span><br><span class="line">  <span class="comment">#  - flat      flat callout style with background, like on Mozilla or StackOverflow.</span></span><br><span class="line">  <span class="comment">#  - disabled  disable all CSS styles import of note tag.</span></span><br><span class="line">  <span class="attr">style:</span> <span class="string">simple</span></span><br><span class="line">  <span class="attr">icons:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">border_radius:</span> <span class="number">3</span></span><br><span class="line">  <span class="comment"># Offset lighter of background in % for modern and flat styles (modern: -12 | 12; flat: -18 | 6).</span></span><br><span class="line">  <span class="comment"># Offset also applied to label tag variables. This option can work with disabled note tag.</span></span><br><span class="line">  <span class="attr">light_bg_offset:</span> <span class="number">0</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>用法</li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note [class] [no-icon] %&#125;</span><br><span class="line">Any content (support inline tags too.io).</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">[class]   : default | primary | success | info | warning | danger.</span><br><span class="line">[no-icon] : Disable icon in note.</span><br><span class="line"></span><br><span class="line">All parameters are optional.</span><br></pre></td></tr></table></figure><ul><li>例如</li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note default %&#125;</span><br><span class="line">default 提示标签符</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary %&#125;</span><br><span class="line">primary 提示标签符</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success %&#125;</span><br><span class="line">success 提示标签符</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info %&#125;</span><br><span class="line">info 提示标签符</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning %&#125;</span><br><span class="line">warning 提示标签符</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger %&#125;</span><br><span class="line">danger 提示标签符</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><div class="note default flat"><p>default 提示标签符</p></div><div class="note primary flat"><p>primary 提示标签符</p></div><div class="note success flat"><p>success 提示标签符</p></div><div class="note info flat"><p>info 提示标签符</p></div><div class="note warning flat"><p>warning 提示标签符</p></div><div class="note danger flat"><p>danger 提示标签符</p></div><h3 id="自定义标签图标"><a href="#自定义标签图标" class="headerlink" title="自定义标签图标"></a>自定义标签图标</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note [color] [icon] [style] %&#125;</span><br><span class="line">Any content (support inline tags too.io).</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th align="center">名称</th><th align="center">用法</th></tr></thead><tbody><tr><td align="center">color</td><td align="center">(default / blue / pink / red / purple / orange / green)</td></tr><tr><td align="center">icon</td><td align="center">只支持 fontawesome 图标(需要引入CDN), 也可以配置 no-icon</td></tr><tr><td align="center">style</td><td align="center">simple/modern/flat/disabled</td></tr></tbody></table><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note &#x27;fab fa-cc-visa&#x27; flat %&#125;</span><br><span class="line">你是刷 Visa 還是 UnionPay</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note blue &#x27;fas fa-bullhorn&#x27; flat %&#125;</span><br><span class="line">2021年快到了....</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note pink &#x27;fas fa-car-crash&#x27; flat %&#125;</span><br><span class="line">小心開車 安全至上</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note red &#x27;fas fa-fan&#x27; flat%&#125;</span><br><span class="line">這是三片呢？還是四片？</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note orange &#x27;fas fa-battery-half&#x27; flat %&#125;</span><br><span class="line">你是刷 Visa 還是 UnionPay</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note purple &#x27;far fa-hand-scissors&#x27; flat %&#125;</span><br><span class="line">剪刀石頭布</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note green &#x27;fab fa-internet-explorer&#x27; flat %&#125;</span><br><span class="line">前端最討厭的瀏覽器</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><div class="note icon flat"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 還是 UnionPay</p></div><div class="note blue icon flat"><i class="note-icon fas fa-bullhorn"></i><p>2021年快到了….</p></div><div class="note pink icon flat"><i class="note-icon fas fa-car-crash"></i><p>小心開車 安全至上</p></div><div class="note red icon flat"><i class="note-icon fas fa-fan"></i><p>這是三片呢？還是四片？</p></div><div class="note orange icon flat"><i class="note-icon fas fa-battery-half"></i><p>你是刷 Visa 還是 UnionPay</p></div><div class="note purple icon flat"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石頭布</p></div><div class="note green icon flat"><i class="note-icon fab fa-internet-explorer"></i><p>前端最討厭的瀏覽器</p></div><h3 id="引入Volantis主题标签"><a href="#引入Volantis主题标签" class="headerlink" title="引入Volantis主题标签"></a>引入Volantis主题标签</h3><ul><li>此项修改需要在源文件中添加新的文件，当然了并不会修改作者源文件。升级时只需要重新把这几个文件放入相应文件即可。文件下载地址：<a href="https://tzk.lanzous.com/b06m0pbmh">https://tzk.lanzous.com/b06m0pbmh</a></li><li>添加的位置为：主题目录下的 <code>scripts</code> 中的 <code>tags</code> 文件夹中。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2021/01/04/f637837d089a4794885f11c898b2f30f.png"></p><ul><li>接下来在配置文件引入 css 即可：<a href="https://cdn.jsdelivr.net/gh/sviptzk/StaticFile_HEXO@latest/butterfly/css/plugins.min.css">https://cdn.jsdelivr.net/gh/sviptzk/StaticFile_HEXO@latest/butterfly/css/plugins.min.css</a></li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">inject:</span></span><br><span class="line">  <span class="attr">head:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&lt;link</span> <span class="string">rel=&quot;stylesheet&quot;</span> <span class="string">href=&quot;https://cdn.jsdelivr.net/gh/sviptzk/StaticFile_HEXO@latest/butterfly/css/plugins.min.css&quot;&gt;</span></span><br></pre></td></tr></table></figure><ul><li><p>接下来就可以使用扩展标签了，具体语法可以参照<a href="https://volantis.js.org/v2/tag-plugins/">源主题文档</a>。</p></li><li><p>复选框样式</p><ul><li>语法<pre><code>  checkbox 样式参数 颜色 状态</code></pre></li></ul></li></ul><table><thead><tr><th align="center">名称</th><th align="center">用法</th></tr></thead><tbody><tr><td align="center">颜色</td><td align="center">red, yellow, green, cyan, blue，自定义</td></tr><tr><td align="center">样式</td><td align="center">plus, minus, times</td></tr><tr><td align="center">状态</td><td align="center">checked</td></tr></tbody></table><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;checkbox yellow checked&quot;</span>&gt;</span></span><span class="xml"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">checked</span>=<span class="string">&quot;checked&quot;</span>&gt;</span></span><span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span>黄色+默认选中<span class="xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;checkbox red checked&quot;</span>&gt;</span></span><span class="xml"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">checked</span>=<span class="string">&quot;checked&quot;</span>&gt;</span></span><span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span>红色+默认选中<span class="xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;checkbox cyan checked&quot;</span>&gt;</span></span><span class="xml"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">checked</span>=<span class="string">&quot;checked&quot;</span>&gt;</span></span><span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span>青色+默认选中<span class="xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;checkbox blue checked&quot;</span>&gt;</span></span><span class="xml"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">checked</span>=<span class="string">&quot;checked&quot;</span>&gt;</span></span><span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span>蓝色+默认选中<span class="xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;checkbox plus grenn checked&quot;</span>&gt;</span></span><span class="xml"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">checked</span>=<span class="string">&quot;checked&quot;</span>&gt;</span></span><span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span>增加<span class="xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;checkbox minus yellow checked&quot;</span>&gt;</span></span><span class="xml"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">checked</span>=<span class="string">&quot;checked&quot;</span>&gt;</span></span><span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span>减少<span class="xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;checkbox times red checked&quot;</span>&gt;</span></span><span class="xml"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">checked</span>=<span class="string">&quot;checked&quot;</span>&gt;</span></span><span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span>叉<span class="xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure><div class="checkbox yellow checked"><input type="checkbox" checked="checked"><p>黄色+默认选中</p></div><div class="checkbox red checked"><input type="checkbox" checked="checked"><p>红色+默认选中</p></div><div class="checkbox cyan checked"><input type="checkbox" checked="checked"><p>青色+默认选中</p></div><div class="checkbox blue checked"><input type="checkbox" checked="checked"><p>蓝色+默认选中</p></div><div class="checkbox plus grenn checked"><input type="checkbox" checked="checked"><p>增加</p></div><div class="checkbox minus yellow checked"><input type="checkbox" checked="checked"><p>减少</p></div><div class="checkbox times red checked"><input type="checkbox" checked="checked"><p>叉</p></div><ul><li>单选框样式</li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;checkbox yellow checked&quot;</span>&gt;</span></span><span class="xml"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">checked</span>=<span class="string">&quot;checked&quot;</span>&gt;</span></span><span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span>黄色+默认选中<span class="xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;checkbox red checked&quot;</span>&gt;</span></span><span class="xml"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">checked</span>=<span class="string">&quot;checked&quot;</span>&gt;</span></span><span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span>红色+默认选中<span class="xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;checkbox cyan checked&quot;</span>&gt;</span></span><span class="xml"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">checked</span>=<span class="string">&quot;checked&quot;</span>&gt;</span></span><span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span>青色+默认选中<span class="xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;checkbox blue checked&quot;</span>&gt;</span></span><span class="xml"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">checked</span>=<span class="string">&quot;checked&quot;</span>&gt;</span></span><span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span>蓝色+默认选中<span class="xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure><div class="checkbox yellow checked"><input type="radio" checked="checked"><p>黄色+默认选中</p></div><div class="checkbox red checked"><input type="radio" checked="checked"><p>红色+默认选中</p></div><div class="checkbox cyan checked"><input type="radio" checked="checked"><p>青色+默认选中</p></div><div class="checkbox blue checked"><input type="radio" checked="checked"><p>蓝色+默认选中</p></div><blockquote><p>注意：不是所有的标签都可以使用，请对应功能进行使用</p></blockquote><h3 id="小标签设置"><a href="#小标签设置" class="headerlink" title="小标签设置"></a>小标签设置</h3><ul><li>演示效果：</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2021/01/04/0e231fb69b5edc03a09e70d7284cd6e7.png"></p><ul><li>通过对p标签进行修改，为了方便添加颜色，这里提供了以上五种配色的样式。css 如下：</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">span</span><span class="selector-class">.inline-tag</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: inline;</span><br><span class="line">    <span class="attribute">padding</span>: .<span class="number">2em</span> .<span class="number">6em</span> .<span class="number">3em</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">90%</span>;</span><br><span class="line">    <span class="attribute">font-weight</span>: <span class="number">400</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">1</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">white-space</span>: nowrap;</span><br><span class="line">    <span class="attribute">vertical-align</span>: baseline;</span><br><span class="line">    <span class="attribute">border-radius</span>: .<span class="number">1rem</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">6px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">var</span>(--Color)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">p</span><span class="selector-class">.red</span>,</span><br><span class="line"><span class="selector-tag">span</span><span class="selector-class">.red</span> &#123;</span><br><span class="line">    <span class="attribute">--Color</span>: <span class="built_in">rgb</span>(<span class="number">233</span>, <span class="number">30</span>, <span class="number">100</span>);</span><br><span class="line">    <span class="attribute">--ColorA</span>: <span class="built_in">rgba</span>(<span class="number">233</span>, <span class="number">30</span>, <span class="number">100</span>, <span class="number">0.2</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">p</span><span class="selector-class">.green</span>,</span><br><span class="line"><span class="selector-tag">span</span><span class="selector-class">.green</span> &#123;</span><br><span class="line">    <span class="attribute">--Color</span>: <span class="built_in">rgb</span>(<span class="number">139</span>, <span class="number">195</span>, <span class="number">74</span>);</span><br><span class="line">    <span class="attribute">--ColorA</span>: <span class="built_in">rgba</span>(<span class="number">139</span>, <span class="number">195</span>, <span class="number">74</span>, <span class="number">0.2</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">p</span><span class="selector-class">.blue</span>,</span><br><span class="line"><span class="selector-tag">span</span><span class="selector-class">.blue</span> &#123;</span><br><span class="line">    <span class="attribute">--Color</span>: <span class="built_in">rgb</span>(<span class="number">3</span>, <span class="number">169</span>, <span class="number">244</span>);</span><br><span class="line">    <span class="attribute">--ColorA</span>: <span class="built_in">rgba</span>(<span class="number">3</span>, <span class="number">169</span>, <span class="number">244</span>, <span class="number">0.2</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">p</span><span class="selector-class">.yellow</span>,</span><br><span class="line"><span class="selector-tag">span</span><span class="selector-class">.yellow</span> &#123;</span><br><span class="line">    <span class="attribute">--Color</span>: <span class="built_in">rgb</span>(<span class="number">255</span>, <span class="number">193</span>, <span class="number">7</span>);</span><br><span class="line">    <span class="attribute">--ColorA</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">193</span>, <span class="number">7</span>, <span class="number">0.2</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">p</span><span class="selector-class">.grey</span>,</span><br><span class="line"><span class="selector-tag">span</span><span class="selector-class">.grey</span> &#123;</span><br><span class="line">    <span class="attribute">--Color</span>: <span class="built_in">rgb</span>(<span class="number">76</span>, <span class="number">76</span>, <span class="number">76</span>);</span><br><span class="line">    <span class="attribute">--ColorA</span>: <span class="built_in">rgba</span>(<span class="number">76</span>, <span class="number">76</span>, <span class="number">76</span>, <span class="number">0.2</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">p</span><span class="selector-class">.div-border</span> &#123;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="built_in">var</span>(--Color,#<span class="number">333</span>);</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">0.4rem</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">var</span>(--ColorA, transparent);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">p</span><span class="selector-class">.left</span> &#123;</span><br><span class="line">    <span class="attribute">border-left-width</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">border-left-color</span>: <span class="built_in">var</span>(--Color);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">p</span><span class="selector-class">.bottom</span> &#123;</span><br><span class="line">    <span class="attribute">border-bottom-width</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">border-bottom-color</span>: <span class="built_in">var</span>(--Color);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">p</span><span class="selector-class">.right</span> &#123;</span><br><span class="line">    <span class="attribute">border-right-width</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">border-right-color</span>: <span class="built_in">var</span>(--Color);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">p</span><span class="selector-class">.top</span> &#123;</span><br><span class="line">    <span class="attribute">border-top-width</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">border-top-color</span>: <span class="built_in">var</span>(--Color);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>小标签参数说明：&lt;p class=’div-border [颜色|方向加粗]’&gt;你的文字&lt;/p&gt; 写法如下：</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">/* note语法示例 */</span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&#x27;div-border green&#x27;</span>&gt;</span>绿色<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&#x27;div-border red&#x27;</span>&gt;</span>红色<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&#x27;div-border yellow&#x27;</span>&gt;</span>黄色<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&#x27;div-border grey&#x27;</span>&gt;</span>灰色<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&#x27;div-border blue&#x27;</span>&gt;</span>蓝色<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">/* 小tag标签语法示例 */</span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;inline-tag red&quot;</span>&gt;</span>红色小标签<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;inline-tag green&quot;</span>&gt;</span>绿色小标签<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;inline-tag blue&quot;</span>&gt;</span>蓝色小标签<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;inline-tag yellow&quot;</span>&gt;</span>黄色小标签<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;inline-tag grey&quot;</span>&gt;</span>灰色小标签<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>设置某个边框加粗。例如 &lt;p class=’div-border green left right’&gt;绿色<p></p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2021/01/04/1283c8ab14008ca7e6716719683"></p><h3 id="隐藏标签"><a href="#隐藏标签" class="headerlink" title="隐藏标签"></a>隐藏标签</h3><div class="tabs" id="t3"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#t3-1">Inline</button></li><li class="tab"><button type="button" data-href="#t3-2">Block</button></li><li class="tab"><button type="button" data-href="#t3-3">Toggle</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="t3-1"><p><code>inline</code>在文本里面添加按钮隐藏内容，只限文字<br>(content不能包含英文逗号，可用<code>&amp;sbquo;</code>)</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% hideInline content,display,bg,color %&#125;</span><br></pre></td></tr></table></figure><ul><li><p>content: 文本內容</p></li><li><p>display: 按钮显示示的文字(可选)</p></li><li><p>bg: 按钮的背景颜色(可选)</p></li><li><p>color: 按钮文字的颜色(可选)</p></li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">哪个英文字母最酷？ &#123;% hideInline 因为西装裤(C装酷),查看答案,#FF7242,#fff %&#125;</span><br><span class="line"></span><br><span class="line">门里站着一个人?打一字 &#123;% hideInline 闪 %&#125;</span><br></pre></td></tr></table></figure><p>哪个英文字母最酷？ <span class="hide-inline"><button type="button" class="hide-button button--animated" style="background-color: #FF7242;color: #fff">查看答案<br>  </button><span class="hide-content">因为西装裤(C装酷)</span></span></p><p>门里站着一个人?打一字 <span class="hide-inline"><button type="button" class="hide-button button--animated" style>Click<br>  </button><span class="hide-content">闪</span></span></p><button type="button" class="tab-to-top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="t3-2"><p><code>block</code>独立的block隐藏内容，可用隐藏很多内容，包括图片，代码块等待<br>(display不能包含英文逗号，可用<code>&amp;sbquo;</code>)</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% hideBlock display,bg,color %&#125;</span><br><span class="line">content</span><br><span class="line">&#123;% endhideBlock %&#125;</span><br></pre></td></tr></table></figure><ul><li><p>content: 文本內容</p></li><li><p>display: 按钮显示示的文字(可选)</p></li><li><p>bg: 按钮的背景颜色(可选)</p></li><li><p>color: 按钮文字的颜色(可选)</p></li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">查看答案</span><br><span class="line">&#123;% hideBlock 查看答案 %&#125;</span><br><span class="line">傻子，怎麼可能有答案</span><br><span class="line">&#123;% endhideBlock %&#125;</span><br></pre></td></tr></table></figure><p>查看答案</p><div class="hide-block"><button type="button" class="hide-button button--animated" style>查看答案    </button><span class="hide-content"><p>傻子，怎麼可能有答案</p></span></div><button type="button" class="tab-to-top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="t3-3"><p>当你需要展示的内容太多，可用把它隐藏在收缩框里，需要时再把它展开<br>(display不能包含英文逗号，可用<code>&amp;sbquo;</code>)</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% hideToggle display,bg,color %&#125;</span><br><span class="line">content</span><br><span class="line">&#123;% endhideToggle %&#125;</span><br></pre></td></tr></table></figure><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;% hideToggle Butterfly安裝方法 %&#125;</span><br><span class="line">在你的博客根目录里</span><br><span class="line"></span><br><span class="line">git clone -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/Butterfly</span><br><span class="line"></span><br><span class="line">如果想要安裝比較新的dev分支，可以</span><br><span class="line"></span><br><span class="line">git clone -b dev https://github.com/jerryc127/hexo-theme-butterfly.git themes/Butterfly</span><br><span class="line"></span><br><span class="line">&#123;% endhideToggle %&#125;</span><br></pre></td></tr></table></figure><div class="hide-toggle"><div class="hide-button toggle-title" style><i class="fas fa-caret-right fa-fw"></i><span>Butterfly安裝方法</span></div>    <div class="hide-content"><p>在你的博客根目录里</p><p>git clone -b master <a href="https://github.com/jerryc127/hexo-theme-butterfly.git">https://github.com/jerryc127/hexo-theme-butterfly.git</a> themes/Butterfly</p><p>如果想要安裝比較新的dev分支，可以</p><p>git clone -b dev <a href="https://github.com/jerryc127/hexo-theme-butterfly.git">https://github.com/jerryc127/hexo-theme-butterfly.git</a> themes/Butterfly</p></div></div><button type="button" class="tab-to-top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="mermaid"><a href="#mermaid" class="headerlink" title="mermaid"></a>mermaid</h2><div class="note warning flat"><p>mermaid标签不允许嵌套与一些隐藏属性的标签外挂，例如: tag-hide內的标签外挂和tabs标签外挂，这会导致mermaid图示无法正常显示，使用时请留意。</p><p><strong>请不要压缩html代码，不然会导致mermaid显示异常</strong></p></div><p>用mermaid标签可以绘制Flowchart（流程图）、Sequence diagram（时序图 ）、Class Diagram（类別图）、State Diagram（状态图）、Gantt（甘特图）和Pie Chart（圆形图），具體可以查看<a href="https://mermaid-js.github.io/mermaid/#/">mermaid文档</a><br>修改<code>主题配置文件</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">mermaid:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># built-in themes: default/forest/dark/neutral</span></span><br><span class="line">  <span class="attr">theme:</span> <span class="string">default</span></span><br></pre></td></tr></table></figure><p>用法：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% mermaid %&#125;</span><br><span class="line">內容</span><br><span class="line">&#123;% endmermaid %&#125;</span><br></pre></td></tr></table></figure><p>例如：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;% mermaid %&#125;</span><br><span class="line">pie</span><br><span class="line"><span class="code">    title Key elements in Product X</span></span><br><span class="line"><span class="code">    &quot;Calcium&quot; : 42.96</span></span><br><span class="line"><span class="code">    &quot;Potassium&quot; : 50.05</span></span><br><span class="line"><span class="code">    &quot;Magnesium&quot; : 10.01</span></span><br><span class="line"><span class="code">    &quot;Iron&quot; :  5</span></span><br><span class="line"><span class="code">&#123;% endmermaid %&#125;</span></span><br></pre></td></tr></table></figure><div class="mermaid">pie    title Key elements in Product X    &quot;Calcium&quot; : 42.96    &quot;Potassium&quot; : 50.05    &quot;Magnesium&quot; : 10.01    &quot;Iron&quot; :  5</div><h2 id="添加本地搜索"><a href="#添加本地搜索" class="headerlink" title="添加本地搜索"></a>添加本地搜索</h2><p><a href="https://blog.lete114.top/article/eef7397d.html#%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E4%BF%AE%E6%94%B9">Lete搜索配置</a><br>主题配置文件中找到local_search</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">local_search:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">input_placeholder:</span> <span class="string">Search</span> <span class="string">for</span> <span class="string">Posts</span></span><br><span class="line">    <span class="attr">hits_empty:</span> <span class="string">&quot;We didn&#x27;t find any results for the search: $&#123;query&#125;&quot;</span> <span class="comment"># 如果没有查到内容相关内容显示</span></span><br></pre></td></tr></table></figure><p><code>安装插件</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-search --save</span><br></pre></td></tr></table></figure><blockquote><p>当文章过多 search.xml 文件大小会越来越大，会拖慢博客的加载速度<br>找到主题文件\source\js\local-search.js<br>修改<code> url: GLOBAL_CONFIG.root + path,</code> 为 url: “<a href="https://cdn.jsdelivr.net/gh/%60%E4%BD%A0GitHub%E7%9A%84%E7%94%A8%E6%88%B7%E5%90%8D/%E4%BD%A0GitHub%E7%9A%84%E7%94%A8%E6%88%B7%E5%90%8D%60.github.io/search.xml&quot;">https://cdn.jsdelivr.net/gh/`你GitHub的用户名/你GitHub的用户名`.github.io/search.xml&quot;</a>,</p></blockquote><h2 id="音乐播放器"><a href="#音乐播放器" class="headerlink" title="音乐播放器"></a>音乐播放器</h2><p>1.悬浮音乐播放器<br><a href="https://github.com/MoePlayer/hexo-tag-aplayer">GitHub项目地址</a><br><a href="https://github.com/MoePlayer/hexo-tag-aplayer/blob/master/docs/README-zh_cn.md">官方文档</a><br>感谢：<a href="https://plushine.cn/52527.html#%E5%89%8D%E8%A8%80">XJHui’s Blog</a></p><p>2.创建音乐页面</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-tag-aplayer(安装插件)</span><br></pre></td></tr></table></figure><p><a href="https://github.com/MoePlayer/hexo-tag-aplayer">插件文档</a></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">aplayer: true（在Font-Matter中）</span><br><span class="line">&#123;% meting &quot;2751269737&quot; &quot;netease&quot; &quot;playlist&quot; &quot;autoplay&quot; &quot;mutex:false&quot; &quot;listmaxheight:340px&quot; &quot;preload:none&quot; &quot;theme:#ad7a86&quot;%&#125;</span><br><span class="line">参数介绍：</span><br><span class="line"><span class="code">    &quot;narrow&quot;: false,// （可选）播放器袖珍风格</span></span><br><span class="line"><span class="code">    &quot;autoplay&quot;: true,// （可选) 自动播放，移动端浏览器暂时不支持此功能</span></span><br><span class="line"><span class="code">    &quot;mode&quot;: &quot;random&quot;,// （可选）曲目循环类型，有 &#x27;random&#x27;（随机播放）, &#x27;single&#x27; (单曲播放), &#x27;circulation&#x27; (循环播放), &#x27;order&#x27; (列表播放)， 默认：&#x27;circulation&#x27;</span></span><br><span class="line"><span class="code">    &quot;showlrc&quot;: 3,// （可选）歌词显示配置项，可选项有：1,2,3</span></span><br><span class="line"><span class="code">    &quot;mutex&quot;: true,// （可选）该选项开启时，如果同页面有其他 aplayer 播放，该播放器会暂停</span></span><br><span class="line"><span class="code">    &quot;theme&quot;: &quot;#e6d0b2&quot;,// （可选）播放器风格色彩设置，默认：#b7daff</span></span><br><span class="line"><span class="code">    &quot;preload&quot;: &quot;metadata&quot;,// （可选）音乐文件预载入模式，可选项： &#x27;none&#x27; &#x27;metadata&#x27; &#x27;auto&#x27;, 默认: &#x27;auto&#x27;</span></span><br><span class="line"><span class="code">    &quot;listmaxheight&quot;: &quot;513px&quot;,// (可选) 该播放列表的最大长度</span></span><br></pre></td></tr></table></figure><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 音乐</span><br><span class="line">date: 2020-11-19 18:02:36</span><br><span class="line">aplayer: true</span><br><span class="line">---</span><br><span class="line"><span class="section"># 吉他指弹音乐歌单</span></span><br><span class="line">&#123;% meting &quot;5345536427&quot; &quot;netease&quot; &quot;playlist&quot; &quot;autoplay&quot; &quot;mutex:false&quot; &quot;listmaxheight:340px&quot; &quot;preload:none&quot; &quot;theme:#ad7a86&quot;%&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/02/5601fa22acbc611a681a7980f3ad0c25.png"></p><h2 id="添加2D人物模型"><a href="#添加2D人物模型" class="headerlink" title="添加2D人物模型"></a>添加2D人物模型</h2><p>在博客文件夹下右击,Git Bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-helper-live2d</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install live2d-widget-model-hijiki(模型名)</span><br></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/wang_123_zy/article/details/87181892">模型名及样式</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">在根目录配置文件中添加如下代码：</span><br><span class="line">live2d:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">  scriptFrom: <span class="built_in">local</span></span><br><span class="line">  pluginRootPath: live2dw/</span><br><span class="line">  pluginJsPath: lib/</span><br><span class="line">  pluginModelPath: assets/</span><br><span class="line">  tagMode: <span class="literal">false</span></span><br><span class="line">  <span class="built_in">log</span>: <span class="literal">false</span></span><br><span class="line">  model:</span><br><span class="line">    use: live2d-widget-model-hijiki(模型名)</span><br><span class="line">  display:</span><br><span class="line">    position: right</span><br><span class="line">    width: 150</span><br><span class="line">    height: 300</span><br><span class="line">  mobile:</span><br><span class="line">    show: <span class="literal">true</span></span><br><span class="line">  react:</span><br><span class="line">    opacity: 0.7</span><br></pre></td></tr></table></figure><h2 id="博客运行时间"><a href="#博客运行时间" class="headerlink" title="博客运行时间"></a>博客运行时间</h2><p>来源：<a href="https://blog.hclonely.com/posts/57bd67ce/">HCLonely Blog</a></p><blockquote><p>在博客根目录/themes/Butterfly/layout/includes/<code>footer.pug</code>文件，在最后span=theme.ICP.text下一行添加以下内容：</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#running-time</span><br><span class="line">    script.setInterval(()&#x3D;&gt;&#123;let create_time&#x3D;Math.round(new Date(&#39;2020-01-03 00:00:00&#39;).getTime()&#x2F;1000);let timestamp&#x3D;Math.round((new Date().getTime()+8*60*60*1000)&#x2F;1000);let second&#x3D;timestamp-create_time;let time&#x3D;new Array(0,0,0,0,0);if(second&gt;&#x3D;365*24*3600)&#123;time[0]&#x3D;parseInt(second&#x2F;(365*24*3600));second%&#x3D;365*24*3600;&#125;if(second&gt;&#x3D;24*3600)&#123;time[1]&#x3D;parseInt(second&#x2F;(24*3600));second%&#x3D;24*3600;&#125;if(second&gt;&#x3D;3600)&#123;time[2]&#x3D;parseInt(second&#x2F;3600);second%&#x3D;3600;&#125;if(second&gt;&#x3D;60)&#123;time[3]&#x3D;parseInt(second&#x2F;60);second%&#x3D;60;&#125;if(second&gt;0)&#123;time[4]&#x3D;second;&#125;currentTimeHtml&#x3D;&#39;本站已安全运行 &#39;+time[0]+&#39; 年 &#39;+time[1]+&#39; 天 &#39;+time[2]+&#39; 时 &#39;+time[3]+&#39; 分 &#39;+time[4]+&#39; 秒&#39;;document.getElementById(&quot;running-time&quot;).innerHTML&#x3D;currentTimeHtml;&#125;,1000);</span><br></pre></td></tr></table></figure><blockquote><p>2020-01-03 00:00:00为<code>网站起始时间</code></p></blockquote><h1 id="博客备份"><a href="#博客备份" class="headerlink" title="博客备份"></a>博客备份</h1><p>非常感谢博主<a href="https://plushine.cn/38834.html#Demo">XJHui’s Blog</a>提供的方法<br><a href="https://github.com/coneycode/hexo-git-backup">GitHub项目地址</a><br><a href="https://github.com/coneycode/hexo-git-backup/blob/master/README.md">官方文档</a></p><h2 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h2><p>在博客文件里右击-&gt;Git Bash</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-git-backup --save </span><br></pre></td></tr></table></figure><ul><li>在GuiHub中新建仓库,例如Hexo_Backup，权限为private，分支为master</li><li>复制所建库的SSH</li><li>在Hexo配置文件中添加</li></ul><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">backup:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">    <span class="attr">repository:</span></span><br><span class="line">       <span class="attr">backup:</span> <span class="string">git@github.com:xingjiahui/Hexo-Backup.git,master(分支名,新库为main)</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo b(back)</span><br></pre></td></tr></table></figure><blockquote><p>每次更新博客后，都需要<code>hexo b</code></p></blockquote><p>备份的用处:</p><ul><li>当hexo g 报错没有头绪时，可以使用备份文件</li><li>当本地文件丢失时，可以使用备份文件</li><li>使用前提，配好环境(已下载<code>Node.js和Git</code>)</li></ul><h1 id="更改GitHub用户名"><a href="#更改GitHub用户名" class="headerlink" title="更改GitHub用户名"></a>更改GitHub用户名</h1><p>对于GitHub用户名本人不建议更改，因为更改后需要修改很多地方，但由于最近刚换了新域名，所以强迫症的需要更改对应的GitHub用户名</p><ul><li><p>进入<code>GitHub—setting—Account—Change username</code><br><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@5c68ef309f2d4fe758e7dd5d2a35958305eb487f/2021/01/14/56d5af8b491aa18ca543c3899e7a4fdf.png"></p></li><li><p>更改仓库名，改成对应的<code>username.github.io</code><br><img src="https://cdn.jsdelivr.net/gh/xiaoliblog/image@d2c74d606c98b69d5252cdc888d0c5ab31d44bf1/2021/01/14/1f2a7beaf1e02291c313d5fc3f192dff.png"></p></li><li><p>Git设置</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.name <span class="string">&quot;新用户名&quot;</span></span><br></pre></td></tr></table></figure><ul><li>Hexo设置：</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">repository:</span> <span class="string">git@github.com:/新用户名/新用户名.github.io.git</span></span><br></pre></td></tr></table></figure><ul><li>本地存放源码的文件名需要更改成对应的仓库名，然后重新安装相应的插件</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cnpm install -g hexo-cli</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cnpm install --save hexo-deployer-git</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-renderer-pug hexo-renderer-stylus --save</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown语法</title>
      <link href="2020/12/02/Hexo/Markdown%E8%AF%AD%E6%B3%95/"/>
      <url>2020/12/02/Hexo/Markdown%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<ul><li><p>Markdown 是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档。</p></li><li><p>Markdown 语言在 2004 由约翰·格鲁伯（英语：John Gruber）创建。</p></li><li><p>Markdown 编写的文档可以导出 HTML 、Word、图像、PDF、Epub 等多种格式的文档。</p></li><li><p>Markdown 编写的文档后缀为 .md, .markdown。</p></li></ul><p><a href="https://www.runoob.com/markdown/md-tutorial.html">Markdown教程</a><br><a href="https://c.runoob.com/front-end/712">Markdown在线编辑器</a><br><a href="https://typora.io/">Typora编辑工具</a><br><a href="https://blog.csdn.net/zzh45828/article/details/105883083?utm_source=app">Typora搭配Markdown</a></p><h1 id="Typora"><a href="#Typora" class="headerlink" title="Typora"></a>Typora</h1><h2 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a><span id="jump">快捷键</span></h2><p><code>非源代码模式</code>下使用：</p><table><thead><tr><th align="center">功能</th><th align="center">快捷键</th></tr></thead><tbody><tr><td align="center">加粗</td><td align="center">Ctrl + B</td></tr><tr><td align="center">斜体</td><td align="center">Ctrl + I</td></tr><tr><td align="center">引用</td><td align="center">Ctrl + Q</td></tr><tr><td align="center">插入链接</td><td align="center">Ctrl + L</td></tr><tr><td align="center">插入代码</td><td align="center">Ctrl + K</td></tr><tr><td align="center">插入图片</td><td align="center">Ctrl + G</td></tr><tr><td align="center">插入表格</td><td align="center">Ctrl + T</td></tr><tr><td align="center">提升标题</td><td align="center">Ctrl + H</td></tr><tr><td align="center">有序列表</td><td align="center">Ctrl + O</td></tr><tr><td align="center">无序列表</td><td align="center">Ctrl + U</td></tr><tr><td align="center">横线</td><td align="center">Ctrl + R</td></tr><tr><td align="center">撤销</td><td align="center">Ctrl + Z</td></tr><tr><td align="center">重做</td><td align="center">Ctrl + Y</td></tr></tbody></table><h2 id="扩展语法"><a href="#扩展语法" class="headerlink" title="扩展语法"></a>扩展语法</h2><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/02/84a26db56c9c0099690b44375a4e1c00.png"></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">文本高亮：==高亮文本==</span><br><span class="line">下标：水 H~2~O(用~中间的字体会标在下方)</span><br><span class="line">上标：面积 m^3^(尖符合中间的字会标记在上方)</span><br></pre></td></tr></table></figure><h1 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h1><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 一级标题</span></span><br><span class="line"><span class="section">## 二级标题</span></span><br><span class="line"><span class="section">### 三级标题</span></span><br><span class="line"><span class="section">#### 四级标题</span></span><br><span class="line"><span class="section">##### 五级标题</span></span><br><span class="line"><span class="section">###### 六级标题</span></span><br></pre></td></tr></table></figure><h1 id="段落格式"><a href="#段落格式" class="headerlink" title="段落格式"></a>段落格式</h1><p>Markdown 段落没有特殊的格式，直接编写文字就好，<code>段落的换行是使用两个以上空格加上回车</code>。</p><h2 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="emphasis">*我是斜体*</span></span><br><span class="line"><span class="strong">**我是粗体**</span></span><br><span class="line"><span class="strong">**<span class="emphasis">*我是粗斜体<span class="strong">**<span class="emphasis">*</span></span></span></span></span><br><span class="line"><span class="strong"><span class="emphasis"><span class="strong"><span class="emphasis">~~我是删除线~~</span></span></span></span></span><br><span class="line"><span class="strong"><span class="emphasis"><span class="strong"><span class="emphasis"></span></span></span></span></span><br></pre></td></tr></table></figure><p><em>我是斜体</em><br><strong>我是粗体</strong><br><strong><em>我是粗斜体</em></strong><br><del>我是删除线</del></p><h2 id="字号、颜色"><a href="#字号、颜色" class="headerlink" title="字号、颜色"></a>字号、颜色</h2><p>通过html标记实现</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">face</span>=<span class="string">&quot;黑体&quot;</span>&gt;</span></span>我是黑体字<span class="xml"><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">face</span>=<span class="string">&quot;微软雅黑&quot;</span>&gt;</span></span>我是微软雅黑<span class="xml"><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">#0099ff</span> <span class="attr">size</span>=<span class="string">23</span> <span class="attr">face</span>=<span class="string">&quot;黑体&quot;</span>&gt;</span></span>我是黑体，颜色#0099ff 字号23<span class="xml"><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p><font face="黑体">我是黑体字</font><br><font face="微软雅黑">我是微软雅黑</font><br><font color="#0099ff" size="23" face="黑体">我是黑体，颜色#0099ff 字号23</font><br>颜色值可以查看<a href="https://www.sojson.com/web/online.html">调色板</a></p><h2 id="空格"><a href="#空格" class="headerlink" title="空格"></a>空格</h2><p>markdown不支持空格，需要使用html标记语言<code>&amp;nbsp;</code></p><h2 id="分隔线"><a href="#分隔线" class="headerlink" title="分隔线"></a>分隔线</h2><p>你可以在一行中用三个以上的星号、减号、底线来建立一个分隔线，行内不能有其他东西。你也可以在星号或是减号中间插入空格。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="strong">**<span class="emphasis">*</span></span></span><br><span class="line"><span class="strong"><span class="emphasis">*</span> <span class="emphasis">* *</span></span></span><br><span class="line"><span class="strong">**</span><span class="strong">**<span class="emphasis">*</span></span></span><br><span class="line"><span class="strong"><span class="emphasis">- - -</span></span></span><br><span class="line"><span class="strong"><span class="emphasis">---------</span></span></span><br></pre></td></tr></table></figure><hr><hr><hr><hr><hr><h2 id="下划线"><a href="#下划线" class="headerlink" title="下划线"></a>下划线</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">u</span>&gt;</span></span>下划线文本<span class="xml"><span class="tag">&lt;/<span class="name">u</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p><u>下划线文本</u></p><h2 id="脚注"><a href="#脚注" class="headerlink" title="脚注"></a>脚注</h2><p>脚注是对文本的补充说明。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[^要注明的文本]</span><br><span class="line"></span><br><span class="line">[<span class="symbol">^要注明的文本</span>]:<span class="link">这是对注明文本的补充说明。</span></span><br></pre></td></tr></table></figure><h1 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h1><p>（1）无序列表<br>无序列表使用星号(<code>*</code>)、加号(<code>+</code>)或是减号(<code>-</code>)作为列表标记，这些标记后面要添加<code>一个</code>空格，然后再填写内容</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">*</span> 第一项</span><br><span class="line"><span class="bullet">*</span> 第二项</span><br><span class="line"><span class="bullet">*</span> 第三项</span><br><span class="line"></span><br><span class="line"><span class="bullet">+</span> 第一项</span><br><span class="line"><span class="bullet">+</span> 第二项</span><br><span class="line"><span class="bullet">+</span> 第三项</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> 第一项</span><br><span class="line"><span class="bullet">-</span> 第二项</span><br><span class="line"><span class="bullet">-</span> 第三项</span><br></pre></td></tr></table></figure><ul><li>第一项</li><li>第二项</li><li>第三项</li></ul><ul><li>第一项</li><li>第二项</li><li>第三项</li></ul><ul><li>第一项</li><li>第二项</li><li>第三项</li></ul><p>（2）有序列表</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span> 第一项</span><br><span class="line"><span class="number">2.</span> 第二项</span><br><span class="line"><span class="number">3.</span> 第三项</span><br></pre></td></tr></table></figure><ol><li>第一项</li><li>第二项</li><li>第三项</li></ol><p>（3）列表嵌套<br>列表嵌套只需在子列表中的选项前面添加<code>四个空格</code>即可：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1.</span> 第一项：</span><br><span class="line"><span class="bullet">    -</span> 第一项嵌套的第一个元素</span><br><span class="line"><span class="bullet">    -</span> 第一项嵌套的第二个元素</span><br><span class="line"><span class="bullet">2.</span> 第二项：</span><br><span class="line"><span class="bullet">    -</span> 第二项嵌套的第一个元素</span><br><span class="line"><span class="bullet">    -</span> 第二项嵌套的第二个元素</span><br></pre></td></tr></table></figure><ol><li>第一项：<ul><li>第一项嵌套的第一个元素</li><li>第一项嵌套的第二个元素</li></ul></li><li>第二项：<ul><li>第二项嵌套的第一个元素</li><li>第二项嵌套的第二个元素</li></ul></li></ol><h1 id="区块"><a href="#区块" class="headerlink" title="区块"></a>区块</h1><p>（1）引用<br>Markdown 区块引用是在段落开头使用 <code>&gt;</code>符号 ，然后后面紧跟一个<code>空格符号</code>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; 一级引用</span><br><span class="line">&gt;&gt; 二级引用</span><br><span class="line">&gt;&gt;&gt; 三级引用</span><br><span class="line">&gt;&gt;&gt;&gt; 四级引用</span><br></pre></td></tr></table></figure><blockquote><p>一级引用</p><blockquote><p>二级引用</p><blockquote><p>三级引用</p><blockquote><p>四级引用</p></blockquote></blockquote></blockquote></blockquote><p>（2）代码区块<br>1.代码区块使用 4 个空格或者<code>一个制表符（Tab) </code>，要与上面内容隔一个换行符。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">int a=1;</span><br><span class="line">int b=1;</span><br><span class="line">printf(a+b);</span><br></pre></td></tr></table></figure><pre><code>int a=1;int b=1;printf(a+b);</code></pre><p>2.可以用  ```  包裹一段代码，并指定一种语言（也可以不指定）：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    alert(<span class="string">&#x27;RUNOOB&#x27;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>3.单个代码块用单个 ` 包裹。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C语言的&#96;scanf()&#96;怎么使用。</span><br></pre></td></tr></table></figure><p>C语言的<code>scanf()</code>怎么使用。</p><h1 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h1><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">链接名称</span>](<span class="link">链接地址  &quot;链接标题&quot;</span>)</span><br><span class="line">[<span class="string">百度</span>](<span class="link">https://www.baidu.com/  &quot;百度&quot;</span>)</span><br><span class="line">或者</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">链接地址</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">https:</span>//<span class="attr">www.baidu.com</span>/&gt;</span></span></span><br></pre></td></tr></table></figure><p><a href="https://www.baidu.com/" title="百度">百度</a><br>或者<br><a href="https://www.baidu.com/">https://www.baidu.com/</a></p><h2 id="锚点"><a href="#锚点" class="headerlink" title="锚点"></a>锚点</h2><p>1.<strong>标题</strong>跳转（只限英文标题）</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">我向跳转到标题</span>](<span class="link">#要去哪个标题</span>)</span><br></pre></td></tr></table></figure><p><a href="#Typora">我向跳转到Typora</a><br>2.<strong>瞄点</strong>设置</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">目标页面设置：<span class="xml"><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;jump&quot;</span>&gt;</span></span>快捷键<span class="xml"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line">点击页面设置：[<span class="string">点我跳转到快捷键</span>](<span class="link">#jump</span>)</span><br></pre></td></tr></table></figure><p><a href="#jump">点我跳转到快捷键</a></p><h1 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h1><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">![<span class="string">alt 属性文本</span>](<span class="link">图片地址</span>)</span><br><span class="line">例如：![<span class="string">RUNOOB 图标</span>](<span class="link">http://static.runoob.com/images/runoob-logo.png</span>)</span><br></pre></td></tr></table></figure><p><img src="http://static.runoob.com/images/runoob-logo.png" alt="RUNOOB 图标"></p><h1 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h1><p>可以使用快捷键Ctrl+T（非源代模式）<br>Markdown 制作表格使用 | 来分隔不同的单元格，使用 - 来分隔表头和其他行。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">|  表头   | 表头  |</span><br><span class="line">|  ----  | ----  |</span><br><span class="line">| 单元格  | 单元格 |</span><br><span class="line">| 单元格  | 单元格 |</span><br></pre></td></tr></table></figure><table><thead><tr><th>表头</th><th>表头</th></tr></thead><tbody><tr><td>单元格</td><td>单元格</td></tr><tr><td>单元格</td><td>单元格</td></tr></tbody></table><h2 id="对齐方式"><a href="#对齐方式" class="headerlink" title="对齐方式"></a>对齐方式</h2><pre><code>-: 设置内容和标题栏居右对齐。:- 设置内容和标题栏居左对齐。:-: 设置内容和标题栏居中对齐。</code></pre><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">| 左对齐 | 右对齐 | 居中对齐 |</span><br><span class="line">| :-----| ----: | :----: |</span><br><span class="line">| 单元格 | 单元格 | 单元格 |</span><br><span class="line">| 单元格 | 单元格 | 单元格 |</span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">左对齐</th><th align="right">右对齐</th><th align="center">居中对齐</th></tr></thead><tbody><tr><td align="left">单元格</td><td align="right">单元格</td><td align="center">单元格</td></tr><tr><td align="left">单元格</td><td align="right">单元格</td><td align="center">单元格</td></tr></tbody></table><h1 id="特殊符号"><a href="#特殊符号" class="headerlink" title="特殊符号"></a>特殊符号</h1><p>(1）对于 Markdown 中的语法符号，前面加<code>反斜线\</code>即可显示符号本身。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">\\  --- \反斜线</span><br><span class="line">\<span class="emphasis">* ----  *</span>星号</span><br><span class="line">\<span class="emphasis">_----下划线</span></span><br><span class="line"><span class="emphasis">\&#123;\&#125; \[\] \(\) ----  &#123;&#125; [] ()</span></span><br><span class="line"><span class="emphasis">\#  ----  #</span></span><br><span class="line"><span class="emphasis">\+   ---- +</span></span><br><span class="line"><span class="emphasis">\-   -----   -</span></span><br><span class="line"><span class="emphasis">\.  ----- .</span></span><br><span class="line"><span class="emphasis">\!  ---- !</span></span><br></pre></td></tr></table></figure><h1 id="高级技巧"><a href="#高级技巧" class="headerlink" title="高级技巧"></a>高级技巧</h1><p>可以使用<strong>HTML标记</strong>语言进行一些扩展。</p><h2 id="背景色"><a href="#背景色" class="headerlink" title="背景色"></a>背景色</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">orange</span>&gt;</span>背景色是：orange<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><table><tr><td bgcolor="orange">背景色是：orange</td></tr></table><h2 id="Emoji表情符号"><a href="#Emoji表情符号" class="headerlink" title="Emoji表情符号"></a>Emoji表情符号</h2><p>emoji表情使用:EMOJICODE:的格式，详细列表可见 <a href="https://www.webfx.com/tools/emoji-cheat-sheet/">https://www.webfx.com/tools/emoji-cheat-sheet/</a><br>但是部分平台不支持。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">:smile:</span><br><span class="line">:heart<span class="emphasis">_eyes:</span></span><br><span class="line"><span class="emphasis">:yum:</span></span><br><span class="line"><span class="emphasis">:kissing_</span>heart:</span><br></pre></td></tr></table></figure><h2 id="Latex数学公式"><a href="#Latex数学公式" class="headerlink" title="Latex数学公式"></a>Latex数学公式</h2><p><a href="https://blog.csdn.net/testcs_dn/article/details/44229085">markdown编辑器使用LaTex数学公式</a><br>1.行内公式：使用两个”$”符号引用公式:(与最左边隔开一个空格)</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$公式$</span><br><span class="line">$\sqrt&#123;x^&#123;2&#125;&#125;$ </span><br></pre></td></tr></table></figure><p>显示结果:<br> $\sqrt{x^{2}}$ </p><p>2.行间公式：使用两对“$$”符号引用公式<br><a href="https://www.mohu.org/info/symbols/symbols.htm">常用数学符号的 LaTeX 表示方法</a></p><h2 id="流程图"><a href="#流程图" class="headerlink" title="流程图"></a>流程图</h2><p>部分平台不支持，属于Typora扩展语法。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">st&#x3D;&gt;start: 开始</span><br><span class="line">op1&#x3D;&gt;operation: My Operation</span><br><span class="line">c&#x3D;&gt;condition: Yes or No?</span><br><span class="line">e&#x3D;&gt;end: 结束</span><br><span class="line"></span><br><span class="line">st-&gt;op1-&gt;c</span><br><span class="line">c(yes)-&gt;e</span><br><span class="line">c(no)-&gt;op1</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/02/9cd7e37d1fd654d36c1832fe87254d28.png"></p><h2 id="Todo列表"><a href="#Todo列表" class="headerlink" title="Todo列表"></a>Todo列表</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> [ ] 已处理的事情1</span><br><span class="line"><span class="bullet">-</span> [ ] 已处理的事情2</span><br><span class="line"><span class="bullet">-</span> [x] 未处理的事情1</span><br><span class="line"><span class="bullet">-</span> [x] 未处理的事情2</span><br><span class="line"><span class="bullet">-</span> [x] 未处理的事情3</span><br></pre></td></tr></table></figure><ul><li><input disabled type="checkbox"> 已处理的事情1</li><li><input disabled type="checkbox"> 已处理的事情2</li><li><input checked disabled type="checkbox"> 未处理的事情1</li><li><input checked disabled type="checkbox"> 未处理的事情2</li><li><input checked disabled type="checkbox"> 未处理的事情3</li></ul>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LeetCode</title>
      <link href="2020/11/24/%E7%AE%97%E6%B3%95/LeetCode%E6%AF%8F%E6%97%A5%E4%B8%80%E9%81%93/"/>
      <url>2020/11/24/%E7%AE%97%E6%B3%95/LeetCode%E6%AF%8F%E6%97%A5%E4%B8%80%E9%81%93/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LeetCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo+GitHub搭建个人博客</title>
      <link href="2020/11/14/Hexo/Hexo+GitHub%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
      <url>2020/11/14/Hexo/Hexo+GitHub%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<h1 id="背景知识"><a href="#背景知识" class="headerlink" title="背景知识"></a>背景知识</h1><ol><li><p> 什么是GitHub？<br><code>GitHub Pages</code> 是由 GitHub 官方提供的一种免费的<strong>静态站点托管服务</strong>，让我们可以在 GitHub 仓库里托管和发布自己的静态网站页面。<br><a href="https://docs.github.com/en/free-pro-team@latest/github/working-with-github-pages/about-github-pages">About GitHub Pages</a></p></li><li><p>什么是Hexo？<br><code>Hexo</code> 是一个快速、简洁且高效的<strong>静态博客框架</strong>，它基于 Node.js 运行，可以将我们撰写的 Markdown 文档解析渲染成静态的 HTML 网页。<br><a href="https://hexo.io/zh-cn/">Hexo官网</a><br><a href="http://coderunthings.com/2017/08/20/howhexoworks/?utm_source=qq&utm_medium=social&utm_oi=619975022605897728">Hexo工作原理</a></p></li><li><p>什么是Git?<br>GIT(<strong>分布式版本控制系统</strong>),git支持分布式部署，可以有效、高速的处理从很小到非常大的项目版本管理。分布式相比于集中式的最大区别在于开发者可以提交到本地，每个开发者通过克隆（git clone），在本地机器上拷贝一个完整的Git仓库。<br><a href="https://www.liaoxuefeng.com/wiki/896043488029600/896067008724000">Git教程</a></p></li><li><p>什么是Node.js<br>Node.js就是一个用于创建服务器端应用程序的运行系统，它可以轻松构建网络或其他事件驱动的应用程序服务器。</p></li><li><p>Hexo+GitHub文章发布原理<br>在本地撰写 Markdown 格式文章后，通过 Hexo 解析文档，渲染生成具有主题样式的 HTML 静态网页，再推送到 GitHub 上完成博文的发布。</p></li><li><p>SSH运行原理及应用<br>需要使用SSH提供的公钥，可以省去hexo d命令时的密码登录.<br><a href="https://blog.csdn.net/qq_35246620/article/details/54317740?utm_source=qq&utm_medium=social&utm_oi=619975022605897728">SSH运行原理及应用</a></p></li><li><p>Markdown标记语言<br>Markdown 是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档。文档后缀为 .md, .markdown。<br><a href="https://www.runoob.com/markdown/md-tutorial.html">Markdown API</a><br><a href="https://blog.csdn.net/witnessai1/article/details/52551362?utm_source=app">Markdown语法手册</a></p></li></ol><h1 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h1><h2 id="Node-js"><a href="#Node-js" class="headerlink" title="Node.js"></a>Node.js</h2><p>Hexo 基于 Node.js，搭建过程中还需要使用 <strong>npm（Node.js 已带） 和 git</strong>，因此先搭建本地操作环境，安装 Node.js 和 Git。<br><a href="https://nodejs.org/zh-cn">Node.js下载网址</a><br><a href="https://blog.csdn.net/antma/article/details/86104068">Node.js安装教程</a></p><h2 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h2><p><a href="https://git-scm.com/download/win">Git下载地址</a><br><a href="https://www.cnblogs.com/xueweisuoyong/p/11914045.html">Git安装及配置</a><br>安装完成后，任意位置右击鼠标<code>Git Bash Here</code>(全程用Git Bash,git为linux命令)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> node -v</span></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> npm -v</span></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git --version</span></span><br></pre></td></tr></table></figure><p>回车，出现程序版本号即可。</p><div class="note warning flat"><p>注意:如果出现<code>&quot;npm&quot;</code>不是内部指定，说明环境变量没配好,Node.js文件目录复制路径到Path中即可</p></div><h1 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h1><ol><li>通过淘宝镜像安装博客框架</li><li>如果出现”cnpm”不是内部指定，说明环境变量没配好,根据提示目录复制路径到<code>Path</code>中即可</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> npm install -g cnpm --registry=https://registry.npm.taobao.org</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> cnpm -v</span></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> cnpm install -g hexo-cli</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> hexo -v</span></span><br></pre></td></tr></table></figure><h1 id="Hexo搭建"><a href="#Hexo搭建" class="headerlink" title="Hexo搭建"></a>Hexo搭建</h1><ul><li>创建文件夹，名字随便取，比如我的是<code>C:\blog\lzyblog</code>，这个文件夹就是存放代码的地方。</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> /c/blog/lzyblog</span></span><br></pre></td></tr></table></figure><ul><li>在文件夹下右击“Git Bash Here”执行以下命令</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> hexo init   <span class="comment">#创建一个新的hexo项目放在所创建文件夹下</span></span></span><br></pre></td></tr></table></figure><p>hexo会自动下载一些文件到这个目录，包括node_modules，目录结构如下图：<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/24/362ecd9fa0f8486a624b595c6b036add.png"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> hexo g<span class="comment">#生成</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> hexo s    <span class="comment">#为hexo在本地起一个http server</span></span></span><br></pre></td></tr></table></figure><ul><li><p>执行后在浏览器中输入”<code>localhost:4000/</code>“,就可以看到博客界面，按<code>ctrl+c</code>关闭本地服务器<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/24/bc94270ca0697a87070c6fe9ad0fe702.png"><br>若出现端口被占用，请戳<a href="http://blog.haoji.me/windows-port-bind.html?from=xa">Windows下如何查看某个端口被谁占用</a></p></li><li><p>修改博客<br><code>文件名/source/_posts/xxxx.md</code> 中修改博客，修改后操作</p></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> hexo new xxx  <span class="comment">#新建一篇标题为xxx的文章</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> hexo clean    <span class="comment">#清除缓存</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> hexo g<span class="comment">#生成将要发布的博客网站包含html在内的静态资源</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> hexo s</span></span><br></pre></td></tr></table></figure><h1 id="部署到GitHub"><a href="#部署到GitHub" class="headerlink" title="部署到GitHub"></a>部署到GitHub</h1><ul><li><p>注册登录GuiHub<br> 注意用户名与网址访问域名要<strong>一致</strong></p></li><li><p>创建GuiHub库(new repository)<br>新建一个名为你的<code>用户名.github.io</code>的仓库，比如说，如果你的github用户名是test，那么你就新建test.github.io的仓库（必须是你的用户名，其它名称无效），将来你的网站访问地址就是 <a href="http://test.github.io/">http://test.github.io</a> 了。<br>创建成功后，默认会在你这个仓库里生成一些示例页面，以后你的网站所有代码都是放在这个仓库里啦。</p></li></ul><h2 id="配置SSH-key"><a href="#配置SSH-key" class="headerlink" title="配置SSH key"></a>配置SSH key</h2><p>为什么要配置这个呢？因为你提交代码肯定要拥有你的github权限才可以，但是直接使用用户名和密码太不安全了，所以我们使用ssh key来解决本地和服务器的连接问题，利用SSH登录远程主机。</p><ul><li>登录方式有两种：<ol><li>口令登录</li><li>公钥登录</li><li>区别:口令登录每次都要输入密码，公钥登录不需要输入密码.</li></ol></li></ul><p>安装了 Git Bash，自带了 SSH。检验一下是否安装 SSH，我们在新建的文件夹中右键打开 Git Bash输入命令:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> ~/. ssh <span class="comment">#检查本机已存在的ssh密钥</span></span></span><br></pre></td></tr></table></figure><p>如果提示：No such file or directory 说明你是第一次使用git。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git config --global user.name <span class="string">&quot;Gitub用户名&quot;</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git config --global user.email <span class="string">&quot;GitHub邮箱&quot;</span> </span></span><br></pre></td></tr></table></figure><p>然后检查SSH安装和生成密匙</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> ssh</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> ssh-keygen -t rsa -C <span class="string">&quot;GitHub邮箱&quot;</span></span></span><br></pre></td></tr></table></figure><p>敲四次回车就会生成两个文件，分别为秘钥 id_rsa 和公钥<code> id_rsa.pub.</code> （注意：git中的复制粘贴不是 Ctrl+C 和 Ctrl+V，而是 Ctrl+insert 和 Shift+insert.）文件的位置在 Git Bash 上面都有显示，默认生成在以下目录：</p><ul><li>Linux 系统：~/.ssh</li><li>Mac 系统：~/.ssh</li><li>Windows 10 ：C:/Users/ASUS/.ssh</li></ul><p>然后复制公钥<code> id_rsa.pub</code> 文件里的内容,如果找不到可以通过命令查找</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> ~/.ssh  <span class="comment">#检查本机已存在的ssh密钥</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> ls</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> cat id_rsa.pub</span></span><br></pre></td></tr></table></figure><h2 id="添加到Github"><a href="#添加到Github" class="headerlink" title="添加到Github"></a>添加到Github</h2><p>进入GitHub主页，点击右上角。再点击setting-&gt;SSH and GPG keys-&gt;New SSH key-&gt;将复制的id_rsa.pub内容粘贴到key内点击Add SSH key<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/24/f9347ba62d84ff52d4aeabe7bcfc8cfa.png"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> ssh -T git@github.com <span class="comment">#验证是否成功</span></span></span><br></pre></td></tr></table></figure><h2 id="部署插件"><a href="#部署插件" class="headerlink" title="部署插件"></a>部署插件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cnpm install --save hexo-deployer-git</span><br></pre></td></tr></table></figure><h2 id="config-yml"><a href="#config-yml" class="headerlink" title="_config.yml"></a>_config.yml</h2><p>配置<code>_config.yml</code>中有关deploy的部分：(推荐使用sublime Text)</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span>  <span class="string">https://github.com/lzyblog/lzyblog.github.io</span> <span class="string">（仓库url）</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span> </span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo d <span class="comment">#部署到Github</span></span><br></pre></td></tr></table></figure><h1 id="常用hexo命令"><a href="#常用hexo命令" class="headerlink" title="常用hexo命令"></a>常用hexo命令</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;postName&quot;</span> <span class="comment">#新建文章</span></span><br><span class="line">$ hexo new page <span class="string">&quot;pageName&quot;</span> <span class="comment">#新建页面</span></span><br><span class="line">$ hexo generate <span class="comment">#生成静态页面至public目录</span></span><br><span class="line">$ hexo server <span class="comment">#开启预览访问端口（默认端口4000，&#x27;ctrl + c&#x27;关闭server）</span></span><br><span class="line">$ hexo deploy <span class="comment">#部署到GitHub</span></span><br><span class="line">$ hexo <span class="built_in">help</span>  <span class="comment"># 查看帮助</span></span><br><span class="line">$ hexo version  <span class="comment">#查看Hexo的版本</span></span><br><span class="line">$ hexo back</span><br></pre></td></tr></table></figure><p>缩写</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">hexo n == hexo new</span><br><span class="line">hexo g == hexo generate</span><br><span class="line">hexo s == hexo server</span><br><span class="line">hexo d == hexo deploy</span><br><span class="line">hexo b == hexo back</span><br></pre></td></tr></table></figure><p>组合命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo s -g <span class="comment">#生成并本地预览</span></span><br><span class="line">$ hexo d -g <span class="comment">#生成并上传</span></span><br></pre></td></tr></table></figure><h1 id="修改博客"><a href="#修改博客" class="headerlink" title="修改博客"></a>修改博客</h1><h2 id="目录构成"><a href="#目录构成" class="headerlink" title="目录构成"></a>目录构成</h2><p>打开文件夹,可以看到博客的目录结构如下：<br><img src="https://cdn.jsdelivr.net/gh/lzyblog/image@main/2020/12/24/362ecd9fa0f8486a624b595c6b036add.png"></p><ul><li>node_modules是node.js各种库的目录</li><li>public是生成的网页文件目录</li><li>scaffolds里面就三个文件，存储着新文章和新页面的初始设置</li><li>source是我们最常用到的一个目录，里面存放着文章、各类页面、图像等文件</li><li>themes存放着主题文件，一般也用不到。</li><li>我们平时写文章只需要关注source/_posts这个文件夹就行了。</li></ul><p>通过文件名\source_posts目录下<code>xxx.md</code>文件修改</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean <span class="comment">#清除缓存</span></span><br><span class="line">$ hexo s  <span class="comment">#可在本地预览</span></span><br><span class="line">$ hexo g   <span class="comment">#部署</span></span><br><span class="line">$ hexo d     <span class="comment">#提交Github</span></span><br></pre></td></tr></table></figure><ul><li>修改提交时创常见问题<br>发现<code>peployer不存在</code>,需要重新引入部署插件：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cnpm install --save hexo-deployer-git</span><br></pre></td></tr></table></figure><hr><h1 id="修改主题"><a href="#修改主题" class="headerlink" title="修改主题"></a>修改主题</h1><p> <a href="https://hexo.io/themes/">登录Hexo网址</a><br> 本人比较喜欢：<a href="https://github.com/jerryc127/hexo-theme-butterfly">hexo-theme-butterfly</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> /c/blog/lzyblog</span><br><span class="line"><span class="comment">#git clone 主题url.git themes/主题名</span></span><br><span class="line">$ git <span class="built_in">clone</span> https://github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly</span><br><span class="line">$ hexo clean</span><br><span class="line">$ hexo g</span><br><span class="line">$ hexo s <span class="comment">#预览</span></span><br><span class="line">$ hexo d</span><br></pre></td></tr></table></figure><p>部署完后需要在博客主文件<code>_config.yml</code>中配置:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">theme:</span> <span class="string">butterfly</span> <span class="comment">#主题名</span></span><br></pre></td></tr></table></figure><p><strong>更改主题常见问题</strong></p><ul><li> <strong>Hexo更改主题后启动服务器</strong>，界面显如下字符:</li></ul><pre><code>    extends includes/layout.pug block content include includes/recent-posts.pug include includes/partial    </code></pre><p>解决方案</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install --save hexo-renderer-jade hexo-generator-feed hexo-generator-sitemap hexo-browsersync hexo-generator-archive</span><br></pre></td></tr></table></figure><p>清除缓存</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br></pre></td></tr></table></figure><p>生成静态文件即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g</span><br></pre></td></tr></table></figure><ul><li>安装或者切换主题后 hexo s 打开 <a href="http://localhost:4000/">http://localhost:4000/</a> 后抱错</li></ul><pre><code>    extends includes/layout.pug block content #recent-posts.recent-posts include includes/recent-posts.pug include includes/pagination.pug</code></pre><p>原因：未安装 pug 依赖和渲染插件依赖</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-renderer-pug hexo-renderer-stylus --save</span><br></pre></td></tr></table></figure><p>关于Butterfly主题优化可以看我的另一篇文章！<a href="https://lzyblog.github.io/2020/12/02/Hexo/Butterfly%E4%B8%BB%E9%A2%98%E9%AD%94%E6%94%B9/">Butterfly主题魔改！</a></p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><div class="note success flat"><p>感谢<a href="https://www.bilibili.com/video/BV1Yb411a7ty?from=search&seid=5229184494076018340">CodeSheep</a>大佬带我入坑</p></div>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
